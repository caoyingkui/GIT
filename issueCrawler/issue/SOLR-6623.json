{
    "id": "SOLR-6623",
    "title": "NPE in StoredFieldsShardResponseProcessor possible when using TIME_ALLOWED param",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "I'm not sure if this is an existing bug, or something new caused by changes in SOLR-5986, but it just poped up in jenkinds today...\n\nhttp://jenkins.thetaphi.de/job/Lucene-Solr-5.x-MacOSX/1844\nRevision: 1631656\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestDistributedGrouping -Dtests.method=testDistribSearch -Dtests.seed=E9460FA0973F6672 -Dtests.slow=true -Dtests.locale=cs -Dtests.timezone=Indian/Mayotte -Dtests.file.encoding=ISO-8859-1\n   [junit4] ERROR   55.9s | TestDistributedGrouping.testDistribSearch <<<\n   [junit4]    > Throwable #1: org.apache.solr.client.solrj.impl.HttpSolrServer$RemoteSolrException: java.lang.NullPointerException\n   [junit4]    > \tat org.apache.solr.search.grouping.distributed.responseprocessor.StoredFieldsShardResponseProcessor.process(StoredFieldsShardResponseProcessor.java:45)\n   [junit4]    > \tat org.apache.solr.handler.component.QueryComponent.handleGroupedResponses(QueryComponent.java:708)\n   [junit4]    > \tat org.apache.solr.handler.component.QueryComponent.handleResponses(QueryComponent.java:691)\n   [junit4]    > \tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:337)\n   [junit4]    > \tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:136)\n   [junit4]    > \tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1983)\n   [junit4]    > \tat org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:773)\n   [junit4]    > \tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:408)\n   [junit4]    > \tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:202)\n   [junit4]    > \tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)\n   [junit4]    > \tat org.apache.solr.client.solrj.embedded.JettySolrRunner$DebugFilter.doFilter(JettySolrRunner.java:137)\n   [junit4]    > \tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)\n   [junit4]    > \tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)\n   [junit4]    > \tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:229)\n   [junit4]    > \tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\n   [junit4]    > \tat org.eclipse.jetty.server.handler.GzipHandler.handle(GzipHandler.java:301)\n   [junit4]    > \tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1077)\n   [junit4]    > \tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)\n   [junit4]    > \tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\n   [junit4]    > \tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)\n   [junit4]    > \tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\n   [junit4]    > \tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\n   [junit4]    > \tat org.eclipse.jetty.server.Server.handle(Server.java:368)\n   [junit4]    > \tat org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)\n   [junit4]    > \tat org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:942)\n   [junit4]    > \tat org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1004)\n   [junit4]    > \tat org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)\n   [junit4]    > \tat org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)\n   [junit4]    > \tat org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)\n   [junit4]    > \tat org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)\n   [junit4]    > \tat org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)\n   [junit4]    > \tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\n   [junit4]    > \tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([E9460FA0973F6672:68A081B8E060064E]:0)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.HttpSolrServer.executeMethod(HttpSolrServer.java:569)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.HttpSolrServer.request(HttpSolrServer.java:215)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.HttpSolrServer.request(HttpSolrServer.java:211)\n   [junit4]    > \tat org.apache.solr.client.solrj.request.QueryRequest.process(QueryRequest.java:91)\n   [junit4]    > \tat org.apache.solr.client.solrj.SolrServer.query(SolrServer.java:301)\n   [junit4]    > \tat org.apache.solr.BaseDistributedSearchTestCase.queryServer(BaseDistributedSearchTestCase.java:512)\n   [junit4]    > \tat org.apache.solr.TestDistributedGrouping.simpleQuery(TestDistributedGrouping.java:274)\n   [junit4]    > \tat org.apache.solr.TestDistributedGrouping.doTest(TestDistributedGrouping.java:262)\n   [junit4]    > \tat org.apache.solr.BaseDistributedSearchTestCase.testDistribSearch(BaseDistributedSearchTestCase.java:875)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n\n\n\ntop level query executed by the test...\n\n\n    // Can't validate the response, but can check if no errors occur.\n    simpleQuery(\"q\", \"*:*\", \"rows\", 100, \"fl\", \"id,\" + i1, \"group\", \"true\", \"group.query\", t1 + \":kings OR \" + t1 + \":eggs\", \"group.limit\", 10, \"sort\", i1 + \" asc, id asc\", CommonParams.TIME_ALLOWED, 1);\n\n\n\nLine where NPE happens...\n\n\n    SolrDocumentList docs = (SolrDocumentList)srsp.getSolrResponse().getResponse().get(\"response\");\n    String uniqueIdFieldName = rb.req.getSchema().getUniqueKeyField().getName();\n\n    for (SolrDocument doc : docs) {                         // <-- LINE 45\n      Object id = doc.getFieldValue(uniqueIdFieldName).toString();\n      ShardDoc shardDoc = rb.resultIds.get(id);\n\n\n\n...so i'm guessing the problem here is that in some situations where TIME_ALLOWED is exceeded, we can now see processing continue with a null set of docs in the response?",
    "attachments": {
        "SOLR-6623.patch": "https://issues.apache.org/jira/secure/attachment/12675433/SOLR-6623.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2014-10-14T17:55:03+0000",
            "author": "Anshum Gupta",
            "content": "I'm looking at it. I haven't been able to reproduce it as it's timing related but I'm looking at the code.\nSeems like a simple Null check there might solve the issue but I'm not sure yet. ",
            "id": "comment-14171273"
        },
        {
            "date": "2014-10-14T18:37:50+0000",
            "author": "Xu Zhang",
            "content": "We can reproduce the NPE by letting Method SolrQueryTimeoutImpl:shouldExit() return true.  ",
            "id": "comment-14171344"
        },
        {
            "date": "2014-10-14T18:42:18+0000",
            "author": "Anshum Gupta",
            "content": "I got that one! thanks Xu Zhang ",
            "id": "comment-14171352"
        },
        {
            "date": "2014-10-15T16:19:41+0000",
            "author": "Anshum Gupta",
            "content": "I'm unwell and so this is taking more time than it should. I'll try to close it as soon as I have the energy to work. ",
            "id": "comment-14172525"
        },
        {
            "date": "2014-10-17T05:55:38+0000",
            "author": "Anshum Gupta",
            "content": "A patch that fixes the issue but it would really be resolved when SOLR-6616 is taken care of (I think next week, it's high on my agenda).\nIt would be good to get some feedback on this though.\n\nSolrIndexSearcher.getDocSetNC() is where the code flows from and where the ExitingReaderException is caught (and consumed) and collector.getDocset() is returned.\n\nThis isn't null but a few entries in the response aren't added due to this (looking at the code flow).\nIdeally, an exception should be returned and partial result should be returned only if shards.tolerant is set to true. That is something that SOLR-6616 would handle. ",
            "id": "comment-14174751"
        },
        {
            "date": "2014-10-17T19:48:49+0000",
            "author": "Steve Rowe",
            "content": "Anshum, in SearchHandler.handleRequestBody(), shouldn't \"debug\" and \"explain\" only be added to the response if rb.isDebug()?  I.e. starting at line #246:\n\n\n      } catch (ExitableDirectoryReader.ExitingReaderException ex) {\n        SolrDocumentList r = (SolrDocumentList) rb.rsp.getValues().get(\"response\");\n        log.warn( \"Query: \" + req.getParamString() + \"; \" + ex.getMessage());\n        if(r == null)\n          r = new SolrDocumentList();\n        r.setNumFound(0);\n        rb.rsp.add(\"response\", r);\n        if (rb.isDebug()) {   // <- added\n          NamedList debug = new NamedList();\n          debug.add(\"explain\", new NamedList());\n          rb.rsp.add(\"debug\", debug);\n        }\n        rb.rsp.getResponseHeader().add(\"partialResults\", Boolean.TRUE);\n        \n      } finally {\n        SolrQueryTimeoutImpl.reset();\n\n\n\nAlso, although I confess I don't entirely understand the flow, shouldn't this same change be made in MoreLikeThisHandler.handleRequestBody() too? ",
            "id": "comment-14175454"
        },
        {
            "date": "2014-10-17T21:23:03+0000",
            "author": "Anshum Gupta",
            "content": "Thanks for looking at it Steve. You're right about adding the debug and explain conditionally (for now) but from my understanding, I don't think we need this to also be a part of the MoreLikeThisHandler because of the way it works.\n\nIdeally, we shouldn't need to do any of this and things should either be taken care of when shards.tolerant = true else the exception should just be sent all the way to the user but as I mentioned, I've kept that for another issue i.e SOLR-6616. ",
            "id": "comment-14175563"
        },
        {
            "date": "2014-10-17T22:11:33+0000",
            "author": "Anshum Gupta",
            "content": "Updated patch that conditionally adds elements to response on catching the ExitingReaderException. ",
            "id": "comment-14175625"
        },
        {
            "date": "2014-10-17T22:12:41+0000",
            "author": "Steve Rowe",
            "content": "+1 ",
            "id": "comment-14175626"
        },
        {
            "date": "2014-10-20T06:10:24+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1633053 from Anshum Gupta in branch 'dev/trunk'\n[ https://svn.apache.org/r1633053 ]\n\nSOLR-6623: Fixing NPE in StoredFieldsShardResponseProcessor when using timeAllowed ",
            "id": "comment-14176626"
        },
        {
            "date": "2014-10-20T06:47:51+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1633055 from Anshum Gupta in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1633055 ]\n\nSOLR-6623: Fixing NPE in StoredFieldsShardResponseProcessor when using timeAllowed (Merge from trunk r1633053) ",
            "id": "comment-14176640"
        },
        {
            "date": "2014-10-27T23:25:53+0000",
            "author": "Anshum Gupta",
            "content": "This hasn't happened since the fix was committed. Marking the issue as resolved. ",
            "id": "comment-14186014"
        }
    ]
}