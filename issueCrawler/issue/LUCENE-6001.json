{
    "id": "LUCENE-6001",
    "title": "DrillSideways throws NullPointerException for some searches",
    "details": {
        "type": "Bug",
        "priority": "Blocker",
        "labels": "",
        "resolution": "Fixed",
        "components": [
            "modules/facet"
        ],
        "affect_versions": "4.10.1",
        "status": "Closed",
        "fix_versions": [
            "4.10.4",
            "5.1",
            "6.0"
        ]
    },
    "description": "For some DrillSideways searches I get NullPointerException.\nI have tracked the problem to DrillSidewaysScorer class, on line 126 in DrillSidewaysScorer.java:\n\nlong baseQueryCost = baseScorer.cost();\n\nOn some of my index segments, this call throws NullPoinerException. \n\"baseScorer\" is instance of ReqExclScorer. \nIn ReqExclScorer.java:\npublic long cost() \n{\n    return reqScorer.cost();\n }\nthrows NullPointerException because reqScorer is null.",
    "attachments": {
        "LUCENE-6001.patch": "https://issues.apache.org/jira/secure/attachment/12701148/LUCENE-6001.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14165587",
            "author": "Shai Erera",
            "content": "Can you post a test case which fails with this exception? ",
            "date": "2014-10-09T19:15:58+0000"
        },
        {
            "id": "comment-14165650",
            "author": "Dragan Jotanovic",
            "content": "I'm afraid that would be very hard as it is not easily reproducible, and I am not able to provide you with my production index.\nBasically what I do is I'm calling DrillSideways search method with boolean query like (+field:term1 + field:term2 +field:term3 +field:term4 -field:term5) and drilldown on one facet dimension.\nOf 26 segments that my index have, only one is coming with NullPointerException. If I send 4 instead of 5 terms, it works properly. Also if I leave out the NOT term, it works with any number of terms.\nI'm sorry I couldn't be of more help. If you tell me where to look and how to debug I can do it and post the results.\nI think we just need to find out why is that scorer not initialized, or we could default the cost to 0 (in DrillSidewaysScorer) if there is null pointer exception . In any way, this unchecked exception should probably be caught somewhere. ",
            "date": "2014-10-09T20:05:03+0000"
        },
        {
            "id": "comment-14165689",
            "author": "Robert Muir",
            "content": "If ReqExclScorer has a null 'req' part, then something in the logic of BooleanWeight. ",
            "date": "2014-10-09T20:28:36+0000"
        },
        {
            "id": "comment-14165693",
            "author": "Robert Muir",
            "content": "ok I see the bug. ReqExclScorer can indeed be buggy here, because it marks 'req' as null for 'exhausted'. So if you call cost() after that, you will get NPE. ",
            "date": "2014-10-09T20:31:19+0000"
        },
        {
            "id": "comment-14165703",
            "author": "Robert Muir",
            "content": "The issue could be more problematic really. In general most of these methods (cost(), getChildren(), etc) are currently only being called before consuming the iterator.\n\nBut DrillSideWays first nextDoc()'s all of its subs, then calls cost().\n\nFirst we should clarify/define, when it is ok to call these methods, and what the semantics are supposed to be if you can call it \"after consuming\" (is it ok to call it at any time? what about after it returns NO_MORE_DOCS?).\n\nThen, depending on that, we just have to fix and add direct tests against our scorers for this, because otherwise problems will continue to happen, since core scorers are generally just checking this up-front and wont find bugs in the current test suite. Maybe improving AssertingScorer to do this can help. ",
            "date": "2014-10-09T20:39:35+0000"
        },
        {
            "id": "comment-14165728",
            "author": "Robert Muir",
            "content": "In this specific case, DrillsideWays calls cost() after nextDoc() already returned NO_MORE_DOCS. This is why ReqExclScorer sets req to null.\n\nI don't know if DrillSideways is doing this because its \"one ahead\" on its scorers all the time and looks at docID() [maybe] but I am a little afraid to just add the NO_MORE_DOCS check to it... on the other hand it would suck a little to have if (exhausted) return 0 in every single scorers cost impl, but maybe we should do that instead? ",
            "date": "2014-10-09T20:54:02+0000"
        },
        {
            "id": "comment-14242387",
            "author": "Stuart",
            "content": "We've been seeing this issue semi-regularly in our app. We've been working around it so far by simplifying our queries to remove clauses (probably a good idea anyway) but we can never be sure our users won't find a way to break it! ",
            "date": "2014-12-11T11:14:32+0000"
        },
        {
            "id": "comment-14338937",
            "author": "jane chang",
            "content": "this bug was fixed on trunk when reqScorer was modified to no longer be set to null\n\nthis patch is against 5.0, where ReqScorer can hit NPE if cost is called after nextDoc\n\npatch includes test and fix to call cost before nextDoc ",
            "date": "2015-02-26T19:12:11+0000"
        },
        {
            "id": "comment-14339958",
            "author": "Michael McCandless",
            "content": "Thanks jane, patch looks great!  You just moved the .cost() calls up before any .nextDoc()s.  I'll commit shortly.\n\nIt's nice that we \"accidentally\" fixed this in trunk ... I think we should also fix this for 4.10.4. ",
            "date": "2015-02-27T10:00:20+0000"
        },
        {
            "id": "comment-14340090",
            "author": "ASF subversion and git services",
            "content": "Commit 1662673 from Michael McCandless in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1662673 ]\n\nLUCENE-6001: DrillSideways hits NullPointerException for some BooleanQuery searches ",
            "date": "2015-02-27T12:38:34+0000"
        },
        {
            "id": "comment-14340092",
            "author": "ASF subversion and git services",
            "content": "Commit 1662674 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1662674 ]\n\nLUCENE-6001: DrillSideways hits NullPointerException for some BooleanQuery searches ",
            "date": "2015-02-27T12:41:07+0000"
        },
        {
            "id": "comment-14340145",
            "author": "Michael McCandless",
            "content": "Thank you Dragan and jane! ",
            "date": "2015-02-27T14:03:24+0000"
        },
        {
            "id": "comment-14340146",
            "author": "ASF subversion and git services",
            "content": "Commit 1662681 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1662681 ]\n\nLUCENE-6001: DrillSideways hits NullPointerException for some BooleanQuery searches ",
            "date": "2015-02-27T14:05:20+0000"
        },
        {
            "id": "comment-14340303",
            "author": "ASF subversion and git services",
            "content": "Commit 1662728 from Michael McCandless in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1662728 ]\n\nLUCENE-6001: null check was backwards ",
            "date": "2015-02-27T15:47:10+0000"
        },
        {
            "id": "comment-14340319",
            "author": "ASF subversion and git services",
            "content": "Commit 1662732 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1662732 ]\n\nLUCENE-6001: null check was backwards ",
            "date": "2015-02-27T15:58:39+0000"
        },
        {
            "id": "comment-14340321",
            "author": "ASF subversion and git services",
            "content": "Commit 1662733 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1662733 ]\n\nLUCENE-6001: null check was backwards ",
            "date": "2015-02-27T16:01:11+0000"
        },
        {
            "id": "comment-14348903",
            "author": "Michael McCandless",
            "content": "Bulk close for 4.10.4 release ",
            "date": "2015-03-05T15:36:25+0000"
        }
    ]
}