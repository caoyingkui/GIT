{
    "id": "SOLR-2217",
    "title": "Odd response format when using extractOnly option with Solr Cell",
    "details": {
        "affect_versions": "1.4.1",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "contrib - Solr Cell (Tika extraction)"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Cannot Reproduce"
    },
    "description": "When using the extractOnly request parameter, the oas.handler.extraction.ExtractingDocumentLoader is using stream.getName() for parts of the response, but this name appears to be null because the serialized response will return an unnamed string and a list named \"null_metadata\". It seems more appropriate to use \"content\" (producing a named string \"content\" and list \"content_metadata\") or to use whatever oas.handler.extraction.SolrContentHandler is using for the content field name (coded to \"content\", but mappable by request parameters).\n\n201\t          rsp.add(stream.getName(), writer.toString());\n202\t          writer.close();\n203\t          String[] names = metadata.names();\n204\t          NamedList metadataNL = new NamedList();\n205\t          for (int i = 0; i < names.length; i++) \n{\n206\t            String[] vals = metadata.getValues(names[i]);\n207\t            metadataNL.add(names[i], vals);\n208\t          }\n209\t          rsp.add(stream.getName() + \"_metadata\", metadataNL);\n\nThis is mostly to avoid having to use the odd empty string and null_metadata identifiers in unserialized data (like JSON, PHP, RUBY, etc)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-15539494",
            "date": "2016-10-02T01:43:50+0000",
            "content": "This is many versions behind for all components. If this issue is seen with more recent Solr version, a new ticket can be opened. "
        }
    ]
}