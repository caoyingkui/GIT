{
    "id": "LUCENE-8173",
    "title": "Three-point plane construction test failure",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "master (8.0)",
        "status": "Closed",
        "type": "Bug",
        "components": [
            "modules/spatial3d"
        ],
        "fix_versions": [
            "6.7",
            "7.3",
            "master (8.0)"
        ]
    },
    "description": "Checking out Revision dd08400a3db1c4119a704610ccc4db0d055d8d7f (refs/remotes/origin/master)\n[...]\n  [smoker]    [junit4] Suite: org.apache.lucene.spatial3d.geom.RandomPlaneTest\n  [smoker]    [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=RandomPlaneTest -Dtests.method=testPlaneThreePointsAccuracy -Dtests.seed=AF530D5BB3E29D37 -Dtests.multiplier=2 -Dtests.locale=hy-AM -Dtests.timezone=CAT -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n  [smoker]    [junit4] FAILURE 0.35s J2 | RandomPlaneTest.testPlaneThreePointsAccuracy {seed=[AF530D5BB3E29D37:67333841FC91DFF4]} <<<\n  [smoker]    [junit4]    > Throwable #1: java.lang.AssertionError: -9.99866855977416E-13 PlanetModel.SPHERE point 1: [lat=-0.014383560214672818, lon=0.41800053100596907([X=0.9138078833986019, Y=0.4058919556989371, Z=-0.014383064258334952])], point 2: [lat=0.6932931355139935, lon=-0.18388926426439056([X=0.7561778076398898, Y=-0.14064184629683377, Z=0.6390735437358892])], point 3: [lat=-0.014383560214674136, lon=0.41800053101150425([X=0.9138078833963552, Y=0.4058919557039952, Z=-0.014383064258336268])] , check: [lat=-0.08323537864940594, lon=0.4347906232623258([X=0.9038183078528319, Y=0.4197622219929782, Z=-0.08313930104085177])]\n  [smoker]    [junit4]    >     at __randomizedtesting.SeedInfo.seed([AF530D5BB3E29D37:67333841FC91DFF4]:0)\n  [smoker]    [junit4]    >     at org.apache.lucene.spatial3d.geom.RandomPlaneTest.testPlaneThreePointsAccuracy(RandomPlaneTest.java:74)\n  [smoker]    [junit4]    >     at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n  [smoker]    [junit4]    >     at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n  [smoker]    [junit4]    >     at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n  [smoker]    [junit4]    >     at java.base/java.lang.reflect.Method.invoke(Method.java:564)\n  [smoker]    [junit4]    >     at java.base/java.lang.Thread.run(Thread.java:844)\n  [smoker]    [junit4]   2> NOTE: test params are: codec=Asserting(Lucene70): {}, docValues:{}, maxPointsInLeafNode=537, maxMBSortInHeap=7.561334272193783, sim=Asserting(org.apache.lucene.search.similarities.AssertingSimilarity@7b5f56e9), locale=hy-AM, timezone=CAT\n  [smoker]    [junit4]   2> NOTE: Linux 4.4.0-112-generic amd64/Oracle Corporation 9.0.1 (64-bit)/cpus=4,threads=1,free=225585560,total=264241152",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16363088",
            "date": "2018-02-13T21:36:36+0000",
            "content": "I think that the actual failure is a result of the vector magnitude being exactly zero:\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=RandomPlaneTest -Dtests.method=testPlaneThreePointsAccuracy -Dtests.seed=AF530D5BB3E29D37 -Dtests.multiplier=2 -Dtests.slow=true -Dtests.locale=hy-AM -Dtests.timezone=CAT -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 0.04s | RandomPlaneTest.testPlaneThreePointsAccuracy {seed=[AF530D5BB3E29D37:67333841FC91DFF4]}\n <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: -9.99866855977416E-13 PlanetModel.SPHERE point 1: [lat=-0.014383560214672818, lon=0.41800053100596907([X=0.9138078833986019, Y=0.4058919556989371, Z=-0.014383064258334952])], point 2: [lat=0.6932931355139935, lon=-0.18388926426439056([X=0.7561778076398898, Y=-0.1\n4064184629683377, Z=0.6390735437358892])], point 3: [lat=-0.014383560214674136,lon=0.41800053101150425([X=0.9138078833963552, Y=0.4058919557039952, Z=-0.014383\n064258336268])] , check: [lat=-0.08323537864940594, lon=0.4347906232623258([X=0.9038183078528319, Y=0.4197622219929782, Z=-0.08313930104085177])]\n   [junit4]    >        at __randomizedtesting.SeedInfo.seed([AF530D5BB3E29D37:67333841FC91DFF4]:0)\n   [junit4]    >        at org.apache.lucene.spatial3d.geom.RandomPlaneTest.testPlaneThreePointsAccuracy(RandomPlaneTest.java:74)\n   [junit4]    >        at java.lang.Thread.run(Thread.java:745)\n   [junit4] OK      0.03s | RandomPlaneTest.testPlaneThreePointsAccuracy {seed=[AF530D5BB3E29D37:B0B86EFB98C6E8A6]}\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene70): {}, docValues:{}, maxPointsInLeafNode=537, maxMBSortInHeap=7.561334272193783, sim=Asserting(org.apache.lucene.search.similarities.AssertingSimilarity@26ca786b), locale=hy-AM, timezone=CAT\n   [junit4]   2> NOTE: Windows 8.1 6.3 amd64/Oracle Corporation 1.8.0_45 (64-bit)/cpus=4,threads=1,free=93847952,total=163053568\n   [junit4]   2> NOTE: All tests run in this JVM: [RandomPlaneTest]\n   [junit4] Completed [1/1 (1!)] in 1.58s, 10 tests, 1 failure <<< FAILURES!\n   [junit4]\n\n ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16363109",
            "date": "2018-02-13T21:52:34+0000",
            "content": "No, upon analysis the problem is that the plane that is produced is pretty much EXACTLY capable of containing the three computed points; it's converged that far.  But the x,y,z values for the two points it's using are computed themselves as differences and therefore they too have a bit of numerical error, and it's enough to put the result just outside of the boundary.\n\nThe two possible ways of fixing this are:\n\n(1) Shoot for a convergence value that's better than we need, or\n(2) Algebraically recast the problem in this case to compute the deltas differently, so it's a one-step process not a two-step process\n\nUsing (2) is better but will probably require duplicating a fair bit of code. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16363114",
            "date": "2018-02-13T22:00:47+0000",
            "content": "Commit 34354e90fec05a774fd99d27345a46f665f2f37c in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=34354e9 ]\n\nLUCENE-8173: Tighten the envelope so Gram-Schmidt gets a tighter answer.  Less likely to blow up later. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16363116",
            "date": "2018-02-13T22:02:00+0000",
            "content": "Commit f726f1be1e234d6cdda820fed5724d386d5d7580 in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f726f1b ]\n\nLUCENE-8173: Tighten the envelope so Gram-Schmidt gets a tighter answer.  Less likely to blow up later. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16363117",
            "date": "2018-02-13T22:02:44+0000",
            "content": "Commit 56a7ddc3ec993ab97916cc076aa28c491476a0e9 in lucene-solr's branch refs/heads/branch_7x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=56a7ddc ]\n\nLUCENE-8173: Tighten the envelope so Gram-Schmidt gets a tighter answer.  Less likely to blow up later. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16363120",
            "date": "2018-02-13T22:04:39+0000",
            "content": "I've implemented (1) for now.  I may do (2) over the weekend, or sooner if stuff continues to catch fire with the stop-gap fix.  Leaving the ticket open for whichever eventuality occurs. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16363579",
            "date": "2018-02-14T07:16:15+0000",
            "content": "Looked at the math and decided that (2) is probably not a viable option; we need those differences computed either way.  So leaving the solution in place as we currently have it. ",
            "author": "Karl Wright"
        }
    ]
}