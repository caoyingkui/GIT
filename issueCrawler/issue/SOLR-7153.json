{
    "id": "SOLR-7153",
    "title": "BBoxField with dynamic fields yield error",
    "details": {
        "components": [
            "spatial"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "4.10.3",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Can you provide an example for dynamic fields for BBoxField that use stored values? That is, this configuration:\n\n\n <dynamicField name=\"*_bbox\" type=\"bbox\" stored=\"true\" indexed=\"true\"/>\n <fieldType name=\"bbox\" class=\"solr.BBoxField\" geo=\"true\" units=\"degrees\" numberType=\"_bbox_coord\"/>\n <fieldType name=\"_bbox_coord\" class=\"solr.TrieDoubleField\" precisionStep=\"8\" docValues=\"true\" stored=\"true\"/>\n\n\n\nThis example configuration yields the following error in 4.10.3 when sending in data for field \"abcd_bbox\"... \n\n\nERROR - 2015-02-24 10:13:46.780; org.apache.solr.common.SolrException; org.apache.solr.common.SolrException: undefined field abcd_bbox__minX\n at org.apache.solr.schema.IndexSchema.getDynamicFieldType(IndexSchema.java:1269)\n\tat org.apache.solr.schema.IndexSchema$SolrIndexAnalyzer.getWrappedAnalyzer(IndexSchema.java:413)\n\tat org.apache.lucene.analysis.AnalyzerWrapper.getPositionIncrementGap(AnalyzerWrapper.java:118)\n\tat org.apache.lucene.index.DefaultIndexingChain$PerField.invert(DefaultIndexingChain.java:699)\n\tat org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:359)\n\tat org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:318)\n\tat org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:239)\n\tat org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:457)\n\tat org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1511)\n\tat org.apache.solr.update.DirectUpdateHandler2.addDoc0(DirectUpdateHandler2.java:240)\n\tat org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:164)\n\tat org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:69)\n\tat org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:51)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:952)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:692)\n\tat org.apache.solr.update.processor.LogUpdateProcessor.processAdd(LogUpdateProcessorFactory.java:100)\n\tat org.apache.solr.handler.loader.XMLLoader.processUpdate(XMLLoader.java:247)\n\tat org.apache.solr.handler.loader.XMLLoader.load(XMLLoader.java:174)\n\tat org.apache.solr.handler.UpdateRequestHandler$1.load(UpdateRequestHandler.java:99)\n\tat org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:74)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1976)\n\tat org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:777)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:418)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:207)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:368)\n\tat org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)\n\tat org.eclipse.jetty.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:53)\n\tat org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:953)\n\tat org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1014)\n\tat org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:861)\n\tat org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)\n\tat org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:72)\n\tat org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:264)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\n\tat java.lang.Thread.run(Thread.java:745)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-02-24T18:26:35+0000",
            "author": "Darren Hardy",
            "content": "Note that the work-around I'm using is this:\n\n\n    <dynamicField name=\"*_bbox\" type=\"bbox\"         stored=\"true\" indexed=\"true\"/>\n    <dynamicField name=\"*_bbox__minX\" type=\"double\" stored=\"true\" indexed=\"true\"/>\n    <dynamicField name=\"*_bbox__minY\" type=\"double\" stored=\"true\" indexed=\"true\"/>\n    <dynamicField name=\"*_bbox__maxX\" type=\"double\" stored=\"true\" indexed=\"true\"/>\n    <dynamicField name=\"*_bbox__maxY\" type=\"double\" stored=\"true\" indexed=\"true\"/>\n    <fieldType name=\"double\" class=\"solr.TrieDoubleField\"  precisionStep=\"8\" positionIncrementGap=\"0\"/>\n    <fieldType name=\"bbox\" class=\"solr.BBoxField\" geo=\"true\" \n               units=\"degrees\" numberType=\"double\"\n            />\n\n ",
            "id": "comment-14335189"
        },
        {
            "date": "2015-02-24T19:59:51+0000",
            "author": "David Smiley",
            "content": "This looks like a bug (the exception).  Although the part about _bbox_coord having its stored=true part being ignored, if I recall my thinking at the time, is by design. That's not a big deal though; it could be changed. Why do you want the underlying coordinates separated vs. marking the bbox field as stored?  It's redundant. ",
            "id": "comment-14335338"
        },
        {
            "date": "2015-02-24T20:51:43+0000",
            "author": "Darren Hardy",
            "content": "We need all our field data marked stored=true to use the Atomic Update feature, which requires everything to be stored so it can reconstruct the document to re-index. My understanding here is tenuous but my workaround just specifies the __minX, __minY, etc. fields because of the ERROR exception not recognizing them. \n\nIdeally I want the original configuration that's on the wiki only changing it so that *_bbox is a dynamic field that's stored, rather than a declared field for abcd_bbox. ",
            "id": "comment-14335427"
        },
        {
            "date": "2015-02-24T20:55:26+0000",
            "author": "David Smiley",
            "content": "Have you tried an atomic-update of a BBoxField that is stored (but it's coordinate values aren't)?  I haven't tried that before but I venture to guess it would work because the FieldType handles this mapping of it's stored value to these sub-fields, and the atomic update feature I think works \"above\" that. ",
            "id": "comment-14335430"
        },
        {
            "date": "2015-02-24T23:06:30+0000",
            "author": "Hoss Man",
            "content": "We need all our field data marked stored=true to use the Atomic Update feature, which requires everything to be stored so it can reconstruct the document to re-index. \n\nthat's not true - the documentation notes:\n\nhttps://cwiki.apache.org/confluence/display/solr/Updating+Parts+of+Documents#UpdatingPartsofDocuments-AtomicUpdates\nAll original source fields must be stored for field modifiers to work correctly, which is the Solr default.\n\nYour original source fields (ie: \"*bbox\" need to be stored, but just like with copyFields, your synthetic *_bbox_* fields populated automatically by solr must NOT be stored, or the synthetic values will be duplicated over and over every time you update the document.\n ",
            "id": "comment-14335627"
        },
        {
            "date": "2015-02-26T14:08:45+0000",
            "author": "David Smiley",
            "content": "Darren, also note that making the sub-fields stored will likely specifically cause a failure when using atomic update; see SOLR-7164 was was just added to help prevent it by ignoring 'stored' on the subfield type by default. ",
            "id": "comment-14338417"
        },
        {
            "date": "2016-08-01T23:12:43+0000",
            "author": "Chris Beer",
            "content": "I just ran into this same problem with Solr 6.1. Is the work-around of explicitly defining the subfields (but with stored=false) the only workaround? ",
            "id": "comment-15403012"
        },
        {
            "date": "2016-08-16T15:09:38+0000",
            "author": "David Smiley",
            "content": "I forgot about this issue; I may take a closer look this weekend.  Yes Chris; that work-around is the only one I can think of \u2013 which is at least not bad.  Perhaps you can also declare them as dynamic fields and have this work? ",
            "id": "comment-15422859"
        }
    ]
}