{
    "id": "SOLR-12260",
    "title": "edismax: Include phrase clauses as terms in pf/pf2/pf3  when SOW=false",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "query parsers"
        ],
        "type": "New Feature",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Phrase queries are currently built only on bareword clauses, which causes unexpected behavior for queries with mixed quoted and bareword terms:\n\nq:cat \"allergic reaction\" dog \u00a0\n\nwill flag \"allergic reaction\" as a phrase, and so will include it in none of pf/pf2/pf3\n\npf or pf2 will be generated as \"cat dog\".\n\nAt a minimum, it would be nice if phrases would be applied as stand-alone entities to pf2/pf3, if they contain the appropriate number of terms. \u00a0But I think the work that has been done to accommodate graph queries should also be able to handle these phrase terms following the pattern of:\n\nspanNear[text:cat, spanNear(text:allergic, text:reaction, 0, true), text:dog]",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2018-11-30T21:12:26+0000",
            "content": "Reduced the scope to the case where phrases SOW=false.\n\nConsider the case where there is a multi-synonym\u00a0with query-time expansion:\n\nanaphylaxis, allergic reaction\n\n\nAnd a query \"cat anaphylaxis aspirin\":\nhttp://localhost:8983/solr/new_core/select?debugQuery=on&defType=edismax&pf2=text&q=cat%20anapyhlaxis%20aspirin\n\nThen this will generate 3 single-term clauses, \n\n\t((text:cat)\n\t((text:\"allergic reaction\" text:anaphylaxis))\n\t(text:aspirin))\n\n\n\nand 2 pf2 clauses:\n\n\t((spanNear([text:cat, spanOr([spanNear([text:allergic, text:reaction], 0, true), text:anaphylaxis])], 0, true))\n\t(spanNear([spanOr([spanNear([text:allergic, text:reaction], 0, true), text:anaphylaxis]), text:aspirin], 0, true)))</str>\n\n\n\nIf we search for the multi-term synonym \"cat allergic reaction aspirin\"\nhttp://localhost:8983/solr/new_core/select?debugQuery=on&defType=edismax&df=text&pf2=text&q=cat%20allergic%20reaction%20aspirin\n\n the base query generated is the same:\n\n\t((text:cat)\n\t((text:anaphylaxis text:\"allergic reaction\"))\n\t(text:aspirin))\n\n\n\nBut the pf2 clauses are quite different:\n\n\t((text:\"cat allergic\")\n\t(spanOr([text:anaphylaxis, spanNear([text:allergic, text:reaction], 0, true)]))\n\t(text:\"reaction aspirin\"))\n\n\n\nAside from having two very different phrase boosts for the same base query, the consequences of this in the second case are fairly ugly for relevance as compared to the first:\n1. The single term \"anaphylaxis\" will be boosted at the pf2 value in addition to the q value\n2. Phrases containing \"cat anaphylaxis\" or \"anaphylaxis aspirin\" will not be considered for pf2\n\nIf the user puts multi-term synonym \"allergic reaction\" is put in quotes, the results get even worse, because the term is removed from the list of clauses considered as input for pf/pf2/pf3:\n\nThe base query stays the same:\n\n\t((text:cat)\n\t(spanOr([text:anaphylaxis, spanNear([text:allergic, text:reaction], 0, true)]))\n\t(text:aspirin))\n\n\n\nBut now \"allergic reaction\" and \"anaphylaxis\" are removed entirely from the phrase clauses:\n\n\t(text:\"cat aspirin\")\n\n\n\nWhat is the history around removing phrase clauses from consideration as input to pf/pf2/pf3? ",
            "author": "Elizabeth Haubert",
            "id": "comment-16705285"
        }
    ]
}