{
    "id": "LUCENE-1713",
    "title": "Rename RangeQuery -> TermRangeQuery",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "2.9"
        ],
        "affect_versions": "2.9",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Since we now have NumericRangeQuery (LUCENE-1701) we should rename RangeQuery to TextRangeQuery to make it clear that TextRangeQuery (TermRangeQuery?  StringRangeQuery) is based entirely on text comparison.\n\nAnd, existing users on upgrading to 2.9 and using RangeQuery for [slow] numeric searching would realize they now have a good option for numeric range searching.",
    "attachments": {
        "RangeFilter.java": "https://issues.apache.org/jira/secure/attachment/12412399/RangeFilter.java",
        "LUCENE-1713-backwards-branch.patch": "https://issues.apache.org/jira/secure/attachment/12412430/LUCENE-1713-backwards-branch.patch",
        "LUCENE-1713.patch": "https://issues.apache.org/jira/secure/attachment/12412400/LUCENE-1713.patch",
        "RangeQuery.java": "https://issues.apache.org/jira/secure/attachment/12412398/RangeQuery.java"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-06-22T22:55:02+0000",
            "content": "Suggestion: TermRangeQuery to be clear about hte fact that it deals with raw Terms in TermEnum order (and doesn't do any fancy collation or anything else people might expect when dealing with \"Strings\" or \"Text\") ",
            "author": "Hoss Man",
            "id": "comment-12722879"
        },
        {
            "date": "2009-06-23T10:50:25+0000",
            "content": "Suggestion: TermRangeQuery to be clear about hte fact that it deals with raw Terms in TermEnum order (and doesn't do any fancy collation or anything else people might expect when dealing with \"Strings\" or \"Text\")\n\n+1 ",
            "author": "Michael McCandless",
            "id": "comment-12723040"
        },
        {
            "date": "2009-06-23T12:35:36+0000",
            "content": "Additionally rename FieldCacheRangeFilter, RangeFilter.\n\nMaybe a good addition to FieldCacheRangeFilter would be to do the same currently only possible with StringIndex for NumericFields? ",
            "author": "Uwe Schindler",
            "id": "comment-12723061"
        },
        {
            "date": "2009-06-23T12:47:27+0000",
            "content": "Maybe a good addition to FieldCacheRangeFilter would be to do the same currently only possible with StringIndex for NumericFields?\n\nsee LUCENE-1461 ",
            "author": "Uwe Schindler",
            "id": "comment-12723064"
        },
        {
            "date": "2009-06-24T10:43:27+0000",
            "content": "OK, so:\n\n\n\tRangeFilter -> TermRangeFilter\n\tRangeQuery -> TermRangeQuery\n\n\n\nAnd under LUCENE-1461:\n\n\n\tFieldCacheRangeFilter -> FieldCacheRangeFilter (on picking up support for numerics...)\n\n ",
            "author": "Uwe Schindler",
            "id": "comment-12723527"
        },
        {
            "date": "2009-06-30T08:12:39+0000",
            "content": "Should I prepare a patch later?\n\nI would simply rename the files in core and then change the tests and rest to find any references to the old RangeQuery/Filter (compile failures). After that I create a deprecated subclass of TermRange* with the old name and all ctors from the old class. The new class will only supply the new ctors (no deprecated ones using Term, mapping is done in the subclass). ",
            "author": "Uwe Schindler",
            "id": "comment-12725521"
        },
        {
            "date": "2009-06-30T09:27:02+0000",
            "content": "For an issue like this we should go for \"commit without patch\" to keep the history of the classes. If you create a patch and apply it without useing svn copy && svn commit you will loose history which is not worth it in this case. Just a hint.\n\nsimon ",
            "author": "Simon Willnauer",
            "id": "comment-12725539"
        },
        {
            "date": "2009-06-30T09:30:16+0000",
            "content": "Yes feel free to take this one Uwe, thanks!  That approach (and using svn move/copy) sounds good. ",
            "author": "Michael McCandless",
            "id": "comment-12725541"
        },
        {
            "date": "2009-06-30T09:31:45+0000",
            "content": "I know!   We had this problem a lot of times.\n\nThe patch will be only as reference. When I do it, I would assign and also commit with svn copy/move and so on. ",
            "author": "Uwe Schindler",
            "id": "comment-12725542"
        },
        {
            "date": "2009-06-30T09:37:03+0000",
            "content": "Yes feel free to take this one Uwe, thanks! That approach (and using svn move/copy) sounds good.\n\nI was the \"bad-boy\" who invented NumericRangeQuery, so I have to take this one and clean up the rest of Lucene for this change. ",
            "author": "Uwe Schindler",
            "id": "comment-12725543"
        },
        {
            "date": "2009-07-02T15:03:12+0000",
            "content": "Here the patch for reference. The deprecated old classes are attached as separate files for a second commit step. Please note, that it will not apply to your checkout, because it needs a SVN rename of RangeQuery, RangeFilter and RangeTermEnum to Term*.\n\nThis patch also converts all tests and contrib to use the new classes and non-deprecated ctors. In TermRange* all deprecated methods are removed and only stay alive in the old classes. The new TermRangeQuery use constant score mode per default (as planned for 3.0), but the old deprecated classes use boolean rewrite per default. I will edit the tests after this commit, to also test boolean rewrite (because of the new defaults, only constant score rewrite ist tested)\n\nI will commit this soon (approx 2 hours) in two steps (first the patch, then svn add of the new deprecated classes) to not prevent people from doing things.\n\nAll tests, especially bw-tests pass. ",
            "author": "Uwe Schindler",
            "id": "comment-12726510"
        },
        {
            "date": "2009-07-02T15:15:46+0000",
            "content": "correct patch. ",
            "author": "Uwe Schindler",
            "id": "comment-12726512"
        },
        {
            "date": "2009-07-02T17:09:12+0000",
            "content": "After comparing the old 2.4.1 javadocs with the new ones, I found out, that RangeQueries in 2.4.1 only had Term ctors and no (field,String,String) ctors. As the new classes are separated (deprecated one and new one), I will change it to not have this strange getLowerTermText methods in the new class.\n\nSo I will prepare a new patch and do all tests again, no commits for now. The current patch had also some minor problems with BW compatibility and a missing collator. ",
            "author": "Uwe Schindler",
            "id": "comment-12726559"
        },
        {
            "date": "2009-07-02T22:40:36+0000",
            "content": "New patch for reference (before all Range* must be svn renamed to TermRange*):\n\n\tRestores original API of RangeQuery and RangeFilter (the backards-tag must be changed to use the original 2.4 tests, see java-dev-mail from me regarding this)\n\tRangeQuery is a deprecated dummy class deleagting everything to TermRangeQuery, but is not a subclass, because different semantics of ctors and some getter methods.\n\tnew classes use cleaner API (no such strange methods like getLowerTermText() because of overriding)\n\n ",
            "author": "Uwe Schindler",
            "id": "comment-12726716"
        },
        {
            "date": "2009-07-02T22:51:03+0000",
            "content": "After committing this, I will open an issue for Solr, to change the references to the not yet released RangeQuery/Filter ctors taking String args to the new classes. ",
            "author": "Uwe Schindler",
            "id": "comment-12726721"
        },
        {
            "date": "2009-07-04T20:17:12+0000",
            "content": "Last update.\n\nThe patch also contains regenerated QueryParser classes (see LUCENE-1646). ",
            "author": "Uwe Schindler",
            "id": "comment-12727268"
        },
        {
            "date": "2009-07-04T20:18:33+0000",
            "content": "Committed revisions 791175 and 791176. ",
            "author": "Uwe Schindler",
            "id": "comment-12727269"
        }
    ]
}