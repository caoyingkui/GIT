{
    "id": "SOLR-538",
    "title": "CopyField maxLength property",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [
            "update"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "As discussed shortly on the mailing list (http://www.mail-archive.com/solr-user@lucene.apache.org/msg09807.html), the objective of this task is to add a maxLength property to the CopyField \"command\". This property simply limits the number of characters that are copied.\n\nThis is particularly useful to avoid very slow highlighting when the index contains big documents.\n\nExample :\n<copyField source=\"text\" dest=\"highlight\" maxLength=\"30000\" />\n\nThis approach has also the advantage of limiting the index size for large documents (the original text field does not need to be stored and to have term vectors). However, the index is bigger for small documents...",
    "attachments": {
        "SOLR-538-for-1.3.patch": "https://issues.apache.org/jira/secure/attachment/12393558/SOLR-538-for-1.3.patch",
        "CopyFieldMaxLength.patch": "https://issues.apache.org/jira/secure/attachment/12380074/CopyFieldMaxLength.patch",
        "SOLR-538.patch": "https://issues.apache.org/jira/secure/attachment/12387926/SOLR-538.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Georgios Stamatis",
            "id": "comment-12588621",
            "date": "2008-04-14T16:16:11+0000",
            "content": "Should be applied on svn trunk (tested on revision 647855) "
        },
        {
            "author": "Georgios Stamatis",
            "id": "comment-12606694",
            "date": "2008-06-20T09:57:19+0000",
            "content": "Updated for latest trunk (tested on revision 669140) "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12621015",
            "date": "2008-08-08T19:13:16+0000",
            "content": "This no longer applies.  Could you bring it up to date?  I also noticed new code that introduces new coding style (e.g. tab indentation instead of 2-space indentation) - could you please make it look like the existing Solr code style?\n\n$ patch -p1 -i CopyFieldMaxLength.patch --dry-run\npatching file src/java/org/apache/solr/schema/CopyField.java\npatching file src/java/org/apache/solr/schema/IndexSchema.java\nHunk #1 succeeded at 601 with fuzz 2 (offset 44 lines).\nHunk #2 FAILED at 615.\nHunk #3 FAILED at 636.\nHunk #4 FAILED at 650.\nHunk #5 succeeded at 859 (offset 67 lines).\nHunk #6 succeeded at 884 (offset 67 lines).\nHunk #7 succeeded at 1065 (offset 67 lines).\nHunk #8 FAILED at 1086.\nHunk #9 succeeded at 1099 (offset 67 lines).\nHunk #10 succeeded at 1112 (offset 67 lines).\n4 out of 10 hunks FAILED \u2013 saving rejects to file src/java/org/apache/solr/schema/IndexSchema.java.rej\npatching file src/java/org/apache/solr/update/DocumentBuilder.java\nHunk #2 succeeded at 121 (offset 29 lines).\nHunk #3 succeeded at 129 (offset 29 lines).\nHunk #4 succeeded at 219 (offset 29 lines).\nHunk #5 succeeded at 247 (offset 29 lines).\nHunk #6 succeeded at 259 (offset 29 lines).\npatching file src/test/org/apache/solr/schema/CopyFieldTest.java\npatching file src/test/test-files/solr/conf/schema-copyfield-test.xml "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12621352",
            "date": "2008-08-11T04:24:40+0000",
            "content": "Attaching new patch which applies to current trunk and changes some minor things wrt error handling and testing. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12622879",
            "date": "2008-08-15T14:51:59+0000",
            "content": "Lars, do you think you could change those tabs into 2 spaces to follow the code style convention?\n\nIn CopyFieldTest I see things like:\n\n+              try \n{\n+                       new CopyField(null,\n+                                       new SchemaField(\"destination\", new TextField()), 1000);\n+                       fail(\"CopyField failed with null SchemaField argument.\");\n+               }\n catch (IllegalArgumentException e) {\n+                       assertTrue(e.getLocalizedMessage().contains(\"can't be NULL\"));\n\nDoes the assertTrue message really accurately describe the exception?  What is null in the above case?  What happens when maxLength=\"0\"?  The previous/default copy-everything behaviour, right?  Maybe I missed it, but I didn't see that in any javadocs or comments or the example schema.xml. "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12623078",
            "date": "2008-08-16T03:06:51+0000",
            "content": "Attaching new patch which fixes tabs.\n\nDoes the assertTrue message really accurately describe the exception? \n\nThat's actually not the assertTrue message, that's asserting that the exception message contains that string.\n\nThe previous/default copy-everything behaviour, right? Maybe I missed it, but I didn't see that in any javadocs or comments or the example schema.xml.\n\nI've added a note to the schema.xml. It is also mentioned in the javadocs for the CopyField constructor. "
        },
        {
            "author": "Chris Harris",
            "id": "comment-12627558",
            "date": "2008-09-02T02:02:57+0000",
            "content": "When I apply this patch, the last line of test-files/solr/conf/schema-copyfield-test.xml seems to get cut off. That is, rather than\n\n[...]\n <!-- Similarity is the scoring routine for each document vs a query.\n      A custom similarity may be specified here, but the default is fine\n      for most applications.\n -->\n <!-- <similarity class=\"org.apache.lucene.search.DefaultSimilarity\"/> -->\nblank line\n</schema>\nEOF\n\nI get\n\n[...]\n <!-- Similarity is the scoring routine for each document vs a query.\n      A custom similarity may be specified here, but the default is fine\n      for most applications.\n -->\n <!-- <similarity class=\"org.apache.lucene.search.DefaultSimilarity\"/> -->\nblank line\nEOF\n\nThis makes the XML invalid, and makes \"ant test\" fail.\n\nI thought I was just being inept with Windows/TortoiseSVN, but now I've had the same thing happen when applying the patch with the patch command on the OS X command line. This makes me suspicious that there might be something wrong with the patch \u2013 though I can't find anything wrong by looking at it manually. Any thoughts? "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12627602",
            "date": "2008-09-02T08:17:07+0000",
            "content": "When I apply this patch, the last line of test-files/solr/conf/schema-copyfield-test.xml seems to get cut off.\n\nSorry, my bad. That's what you get for modifying diffs manually. I'm attaching a new version which should fix this problem. "
        },
        {
            "author": "Chris Harris",
            "id": "comment-12628045",
            "date": "2008-09-03T16:37:19+0000",
            "content": "Thanks, Lars; that was fast. I think this patch is going to be handy.\n\nI'm wondering what people thought about an alternative approach to keeping stored fields from being too large, which would require mucking around with Lucene. In particular, the idea would be to allow field definitions like this:\n\n<field name=\"body\" type=\"text\" indexed=\"true\" stored=\"true\"\n     omitNorms=\"false\" compressed=\"true\"\n     maxFieldLength=\"2000\" storeOnlyAnalyzedText=\"true\"\n/>\n\nHere we've made the normal Lucene maxFieldLength (i.e. # tokens to analyze) configurable a field-by-field basis. And in this declaration we've also made it so that what is stored is a function of what is analyzed. (Here if the first 2,000 tokens correspond to the first, say, 8,000 characters, then those 8,000 characters are what's going to be actually stored in the stored field.) This seems a little more natural than lopping off the text after a fixed number of characters.\n\nIf I could do the above, I'm thinking I would use that single field for both searching and highlighting. But if you wanted a separate field for highlighting (and were willing to have things run slower than with the current patch), then you could do this:\n\n<field name=\"body\" type=\"text\" indexed=\"true\" stored=\"false\" omitNorms=\"false\" />\n<field name=\"highlighting\" type=\"text\" indexed=\"false\" stored=\"true\"\n     compressed=\"true\" maxFieldLength=\"2000\" storeOnlyAnalyzedText=\"true\" />\n<copyField src=\"body\" dest=\"highlighting\" /> "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12628054",
            "date": "2008-09-03T16:57:05+0000",
            "content": "Interesting idea, but this should probably be a separate issue. It would require more significant changes, for example the update handler should probably warn when the value for a field is truncated etc. "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12632966",
            "date": "2008-09-20T14:33:34+0000",
            "content": "Syncing patch with trunk. "
        },
        {
            "author": "Chris Harris",
            "id": "comment-12645886",
            "date": "2008-11-07T22:00:39+0000",
            "content": "Syncing w/ trunk r712067 "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12645967",
            "date": "2008-11-08T07:50:10+0000",
            "content": "Thank you for the updated patch. I have some comments.\n\n\n\tI think this breaks back-compat:\n\n\n\n\nIndex: src/java/org/apache/solr/schema/IndexSchema.java\n===================================================================\n--- src/java/org/apache/solr/schema/IndexSchema.java\t(revision 712067)\n+++ src/java/org/apache/solr/schema/IndexSchema.java\t(working copy)\n  :\n@@ -654,12 +664,12 @@\n    * \n    * @see SolrCoreAware\n    */\n-  public void registerCopyField( String source, String dest )\n+  public void registerCopyField( String source, String dest, Integer maxLength )\n\n\n\nand the type of maxLength is int (not Integer) right?\n\n\n\tCan you use 2-space indentation instead of tab indentation?\n\tCan you change \"@since 1.3\" javadoc comments to \"@since 1.4\"?\n\tThe new attribute \"maxLength\" may make users confused (number of chars or tokens?). How about using \"maxChars\" or something?\n\n\n "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12645968",
            "date": "2008-11-08T07:58:12+0000",
            "content": "Attached a patch for branch-1.3. I have a performance issue on a highlight field and I'll see if this helps for my project in next week (I know that hl.maxAnalyzedChars helps, but I'd like to reduce index size with SOLR-538). "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12645983",
            "date": "2008-11-08T14:12:11+0000",
            "content": "Attaching new patch which\n\n\tadds method for backwards compatibility\n\treplaces tabs with 2 spaces\n\tfixes javadoc\n\trenames maxLength to maxChars\nas per Koji's suggestions.\n\n "
        },
        {
            "author": "Chris Harris",
            "id": "comment-12649832",
            "date": "2008-11-21T22:21:22+0000",
            "content": "Small change to bring Lars' 2008-11-08 version of SOLR-538.patch in sync with trunk r719187 "
        },
        {
            "author": "Chris Harris",
            "id": "comment-12651156",
            "date": "2008-11-26T21:42:30+0000",
            "content": "Same as prev SOLR-538.patch (2008-11-21 02:21 PM), except with some unneeded carriage return characters removed. (This may be overly cautious, but I don't want those to cause problems for anyone.) "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12651238",
            "date": "2008-11-27T04:05:36+0000",
            "content": "Looking at the watchers, voters and the comments, a lot of people seem to be interested in this issue. Is there any objection on committing it to trunk?\n\nKoji, since you have used the patch yourself, would you like to take this up? "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12651786",
            "date": "2008-11-30T04:52:15+0000",
            "content": "Committed revision 721758. Thanks everyone! "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775506",
            "date": "2009-11-10T15:51:42+0000",
            "content": "Bulk close for Solr 1.4 "
        }
    ]
}