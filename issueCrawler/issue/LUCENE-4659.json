{
    "id": "LUCENE-4659",
    "title": "Cleanup CategoryPath",
    "details": {
        "components": [
            "modules/facet"
        ],
        "fix_versions": [
            "4.1",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "Improvement",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "CategoryPath is supposed to be a simple object which holds a category path's components, and offers some utility methods that can be used during indexing and search.\n\nCurrently, it exposes lots of methods which aren't used, unless by tests - I want to get rid of them. Also, the internal implementation manages 3 char[] for holding the path components, while I think it would have been simpler if it maintained a String[]. I'd like to explore that option too (the input is anyway String, so why copy char[]?).\n\nUltimately, I'd like CategoryPath to be immutable. I was able to get rid most of the mutable methods. The ones that remain will probably go away when I move from char[] to String[]. Immuntability is important because in various places in the code we convert a CategoryPath back and forth to String, with TODOs to stop doing that if CP was immutable.\n\nWill attach a patch that covers the first step - get rid of unneeded methods and beginning to make it immutable.\n\nPerhaps this can be done in multiple commits?",
    "attachments": {
        "LUCENE-4659.patch": "https://issues.apache.org/jira/secure/attachment/12563270/LUCENE-4659.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-01-04T09:47:22+0000",
            "content": "Initial cleanup (already cuts down CategoryPath by ~200 lines). More to follow. ",
            "author": "Shai Erera",
            "id": "comment-13543741"
        },
        {
            "date": "2013-01-04T13:53:47+0000",
            "content": "+1\n\nI agree CP should be immutable. ",
            "author": "Michael McCandless",
            "id": "comment-13543889"
        },
        {
            "date": "2013-01-04T18:36:10+0000",
            "content": "I think I wished for CP to become immutable as one of my birthday wishes (while taking out the candles).. these do come true!\nThat's a very promising start, way to go!\n\nCP's internals of char[] was for performance and reusability, I thought it was used internally in the CL2O cache - but now I see that it does not? hmm..\nOther methods which could be killed, and are in the way of immutability: .setFromSerializable() and .add() which are only used in tests.\n\nThan, the only method which breaks immutability is .trim(), and it could be managed with a C'tor.  ",
            "author": "Gilad Barkai",
            "id": "comment-13544103"
        },
        {
            "date": "2013-01-04T19:09:54+0000",
            "content": "I've actually made more progress, and now CP is completely immutable and manages inside a String[] with start/end offsets. I think that I just need an end offset, but nm that for now.\n\nWhat fails for me is CompactLabelToOrdinalTest, I'm not sure why. From the debugging sessions I've done so far, it may be related to hash computation, even though I reviewed the changes and I think that I was consistent. Anyway, want to debug it more before I'll post another patch.\n\nI've kept trim() because it's used in DrillDownStream, but it returns a new CategoryPath. And I've kept add() because it is convenient for tests, but it also returns a new CategoryPath.\n\nHopefully my next update will include the fix for this test. All other tests pass. ",
            "author": "Shai Erera",
            "id": "comment-13544115"
        },
        {
            "date": "2013-01-06T09:17:31+0000",
            "content": "More cleanup. Here's a summary of all the changes:\n\n\n\tCategoryPath is now immutable. As such it does not implement Cloneable and clone() is removed.\n\n\n\n\n\tCategoryPath.add is removed - used only by tests, and they were converted to use alternative methods, e.g. subpath().\n\n\n\n\n\tCategoryPath.subpath returns a sub-path of the CategoryPath (used to traverse parents)\n\n\n\n\n\tCategoryPath exposes two public final 'components' and 'length' members. This removed the length() and getComponent() methods (getComponent was only used in test). I added jdocs to these two members.\n\n\n\n\n\tCategoryPath no longer implements Serializable.\n\n\n\n\n\tCategoryPath.*serialize* methods moved to CategoryPathUtils under the cl2o package, as it's the only one that uses them.\n\n\n\n\n\tAll 'prefixLen' variants were removed. Instead one should call cp.subpath(prefix).\n\t\n\t\tThis allowed removing all prefixLen variants from TaxoWriterCache, and nuke 3 duplicate methods in DirTaxoWriter.\n\t\n\t\n\n\n\n\n\tHandled a TODO in DirTaxoReader - since now CategoryPath is immutable, it can hold caches to-from CategoryPath instead of String.\n\n\n\nCategoryPath is now 215 lines, instead of ~1100 ! ",
            "author": "Shai Erera",
            "id": "comment-13545351"
        },
        {
            "date": "2013-01-06T09:56:38+0000",
            "content": "Patch looks really good.\n\nI'm not concerned about the new objects for subPath. Actually, since the HashMap s are now against CategoryPath and it's not constantly being translated to/from String I'm looking forward a better performance than before.\n\nNice job, and a nasty one that must have been.. \nChapeau \u00e0 lui!\n\nA few (minor) comments:\n\n\tcopyFullPath() - numCharsCopied is redundant? The return value could have been (idx + component[upto].length() - start)\n\tequals() line 143 - perhaps use only one index rather than both index j and i ? Also, CPs are more likely to be different at the end, than in the start (e.g further away from the root than the dimension) - perhaps iterate in reverse (up the tree)?\n\n ",
            "author": "Gilad Barkai",
            "id": "comment-13545363"
        },
        {
            "date": "2013-01-06T10:04:55+0000",
            "content": "copyFullPath() - numCharsCopied is redundant?\n\nYou're right. Fixed\n\nperhaps use only one index rather than both index j and i?\n\nYup. It was a leftover from the previous patch, when I had start offset in CP.\n\nAlso, CPs are more likely to be different at the end, than in the start (e.g further away from the root than the dimension) - perhaps iterate in reverse (up the tree)\n\nDone. ",
            "author": "Shai Erera",
            "id": "comment-13545364"
        },
        {
            "date": "2013-01-06T10:45:03+0000",
            "content": "Magnificent, +1 for commit. ",
            "author": "Gilad Barkai",
            "id": "comment-13545370"
        },
        {
            "date": "2013-01-06T19:10:28+0000",
            "content": "[trunk commit] Shai Erera\nhttp://svn.apache.org/viewvc?view=revision&revision=1429570\n\nLUCENE-4659: Cleanup CategoryPath ",
            "author": "Commit Tag Bot",
            "id": "comment-13545462"
        },
        {
            "date": "2013-01-06T19:19:27+0000",
            "content": "Clarified more CatPath.components jdocs. Committed to trunk and 4x. ",
            "author": "Shai Erera",
            "id": "comment-13545467"
        },
        {
            "date": "2013-01-06T19:24:20+0000",
            "content": "[branch_4x commit] Shai Erera\nhttp://svn.apache.org/viewvc?view=revision&revision=1429573\n\nLUCENE-4659: Cleanup CategoryPath ",
            "author": "Commit Tag Bot",
            "id": "comment-13545468"
        }
    ]
}