{
    "id": "LUCENE-4724",
    "title": "TaxonomyReader drops empty string component from CategoryPath",
    "details": {
        "components": [
            "modules/facet"
        ],
        "fix_versions": [
            "4.2",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "I ran the new PrintTaxonomyStats on a Wikipedia facets index, and it hit an AIOOBE because there was a child of the /categories path that had only one component ... this was created because I had added new CategoryPath(\"categories\", \"\") during indexing.\n\nI think TaxoReader should preserve and return that empty string from .getPath?",
    "attachments": {
        "LUCENE-4724.patch": "https://issues.apache.org/jira/secure/attachment/12566664/LUCENE-4724.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-01-27T12:03:44+0000",
            "content": "Test case showing the issue ... ",
            "author": "Michael McCandless",
            "id": "comment-13563789"
        },
        {
            "date": "2013-01-27T12:16:27+0000",
            "content": "New patch w/ fix.\n\nThe problem was String.split: if you end with a delimiter, or have multiple delimiters in a row, then you lose the empty strings ... ",
            "author": "Michael McCandless",
            "id": "comment-13563792"
        },
        {
            "date": "2013-01-27T12:46:50+0000",
            "content": "Good catch. But I'm not sure about the fix. I.e. new CP(\"test\",\"\") could also be handled to be equivalent to new CP(\"test\").\nAlso, it's not clear if new CP(\"test///foo\",'/') should generate a CP that's similar to test/foo.\nBut for sure, new CP(\"test/\", '/') should be equivalent to new CP(\"test\"), right?\n\nI think that for simplicity, we should eliminate all empty strings, from both ctors. So:\n\n\tnew CP(\"test\") == new CP(\"test\", '/') --> \"test\"\n\tnew CP(\"test\", \"\") == new CP(\"test/\", '/') --> \"test\"\n\tnew CP(\"test\", \"\", \"foo\") == new CP(\"test//foo\", '/') --> \"test/foo\"\n\n\n\nThis is very similar to FS hierarchies I think. And it's easy to document and handle.\n\nAlso, does the test really test the bug? I.e. the only fix is in the CP ctor which takes a String and delimiter, yet the test seems to be using the vararg String... ctor? ",
            "author": "Shai Erera",
            "id": "comment-13563797"
        },
        {
            "date": "2013-01-27T13:56:22+0000",
            "content": "OK I agree: let's disallow empty string at indexing time.\n\nI think this means the CP ctor that takes String... varargs should throw an exception if any component is the empty string?\n\nNot sure what (if anything?) to do about indices \"out there\" that already have empty string ... I'm not sure these ever causes problems except to PrintTaxonomyStats ... so I could just add some robustness to that one tool.\n\nHowever, I don't really like being \"tolerant\" to trailing delimiter, multiple delimiters in a row, etc. (like filesystems are): I would prefer that we are strict and accept only one form.  That ambiguity can only cause problems/confusion. ",
            "author": "Michael McCandless",
            "id": "comment-13563811"
        },
        {
            "date": "2013-01-27T16:06:47+0000",
            "content": "OK I agree: let's disallow empty string at indexing time.\n\nAnd null (for the vararg ctor).\n\nI think this means the CP ctor that takes String... varargs should throw an exception if any component is the empty string?\n\nI think that both public ctors should throw IllegalArgException if they encounter empty or null strings.\n\nAnd you shouldn't worry about what's out there, because previously, CP converted all strings to a char[] and I'm sure all these cases were handled. And probably TestCategoryPath had tests that covered all that. But in the whole cleanup, I must have removed them by mistake...\n\nWould you mind to add a testEmptyNullComponents to TestCP? I'm ok with IllegalArgEx for trailing delimiters. ",
            "author": "Shai Erera",
            "id": "comment-13563828"
        },
        {
            "date": "2013-01-28T10:54:58+0000",
            "content": "Patch forbids empty or null components in CategoryPath ctors, plus matching test in TestCategoryPath. Mike, the test you added seems unneeded now, as one cannot create such a CP anymore.\n\nNote though that there was a test in TestCP which asserted an empty path component in the middle of a string. I think it's not an interesting use case, and still should not be allowed.\n\nI also had to modify another test which randomly generated CategoryPath strings (picking characters at random). ",
            "author": "Shai Erera",
            "id": "comment-13564194"
        },
        {
            "date": "2013-01-28T11:20:50+0000",
            "content": "Also, note that the patch does not forbid passing strings like \" \" (i.e., not empty, but following trim() will be). I figured that this whole use case is not that common, and calling trim() is not that cheap, for every well-behaved app. Yet, I do want this to be a hard exception, not an assert. ",
            "author": "Shai Erera",
            "id": "comment-13564200"
        },
        {
            "date": "2013-01-28T11:23:51+0000",
            "content": "+1, thanks Shai!\n\nI think it's OK if we don't catch whitespace only components ... ",
            "author": "Michael McCandless",
            "id": "comment-13564203"
        },
        {
            "date": "2013-01-28T11:34:14+0000",
            "content": "[trunk commit] Shai Erera\nhttp://svn.apache.org/viewvc?view=revision&revision=1439350\n\nLUCENE-4724: disallow empty or null strings as components ",
            "author": "Commit Tag Bot",
            "id": "comment-13564209"
        },
        {
            "date": "2013-01-28T11:37:05+0000",
            "content": "Committed to trunk and 4x. ",
            "author": "Shai Erera",
            "id": "comment-13564213"
        },
        {
            "date": "2013-01-28T11:42:13+0000",
            "content": "[branch_4x commit] Shai Erera\nhttp://svn.apache.org/viewvc?view=revision&revision=1439355\n\nLUCENE-4724: disallow empty or null strings as components ",
            "author": "Commit Tag Bot",
            "id": "comment-13564218"
        },
        {
            "date": "2013-05-10T10:33:51+0000",
            "content": "Closed after release. ",
            "author": "Uwe Schindler",
            "id": "comment-13654050"
        }
    ]
}