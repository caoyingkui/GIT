{
    "id": "LUCENE-7873",
    "title": "Remove context classloader from SPI lookups by default",
    "details": {
        "labels": "",
        "priority": "Critical",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Resolved",
        "type": "Improvement",
        "components": [
            "core/other"
        ],
        "fix_versions": [
            "7.0"
        ]
    },
    "description": "As discussed on LUCENE-7870, we should really remove the context class loader from Lucene's SPI lookup (NamedSPLoader, SPIClassIterator, AnalysisSPI stuff).\n\n\nMy idea would be (as stated before): Get rid of the Context Classloader in SPI lookups! Lucene never uses it, it is just there for backwards compatibility. The current setup of SPI does not work with modules of Java 9 and it does not work with stuff in completely different classloaders. So OSGI fails in any case, if you have lucene-core.jar and lucene-backwards-codecs.jar as OSGI modules, because both would use different loaders. The context loader won't help.\n\nThe problem is that we may break some apps that rely on the context loader traversal. In my opinion, we may add a system property that is read on setup of NamedSPILoader / SPIClassIterator that can be set to true (e.g. lucene.useContextLoaderForSPI, defaulting to false). This may fix legacy apps and new apps would only traverse the classloader that loaded lucene-core.jar.\n\nFor Java 9 and \"Lucene as Java 9 module\") we have to refactor this anyways, becaue we need to respect module-info,java and look for SPI exports.\n\nFYI: Context class loaders were the worst idea ever in Java. I personally hate them and I would do anything - just to make them disappear from the spec! When drinking beers with Mark Reinhold in Brussels, I am always reminding him about this together with the inability to unmap byte buffers... \n\nUnfortunately the sysprop approach is the only way to handle this as this must be done very early on JVM/Lucene setup. If somebody called Codec.forName() its too late to change the default... But I am fine with using a sysprop with AccessController.doPrivileged(), as this is only required for those legacy WEBAPP stuff. Normal applications should see the META-INF files on the application classloader anyways.",
    "attachments": {
        "LUCENE-7873.patch": "https://issues.apache.org/jira/secure/attachment/12873562/LUCENE-7873.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16053324",
            "date": "2017-06-18T22:04:10+0000",
            "content": "I set this as critical, because I would like to make this change before 7.0, as this may affect users, so we need a clean migration path. I will work this week on it. Should not be too hard. ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-16054745",
            "date": "2017-06-19T21:10:41+0000",
            "content": "Simple patch, all tests seem to pass.\n\nI added no support for a sysprop, because people that rely on the context classloader can easily add support again. They just have to call: Codec.reloadCodecs(Thread.curentThread().getContextClassLoader()) to restore previous behaviour. I would add a statement in MIGRATE.txt\n\nI scanned the source code: In Lucene we only have one more context classloader and in Solr many stupid references to it (because the code writer \"just needed a classloader\"). We should fix those. I will open another issue to fix this. After that we should add the context class loader to the forbidden API list! ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-16055255",
            "date": "2017-06-20T07:14:52+0000",
            "content": "LGTM. ",
            "author": "Dawid Weiss"
        },
        {
            "id": "comment-16055521",
            "date": "2017-06-20T10:25:37+0000",
            "content": "New patch including instructions on MIGRATE.xml and Changes entry.\n\nI think that's ready. I will provees in removing context classloader at other places and put it on the forbidden apis list. ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-16055870",
            "date": "2017-06-20T14:44:12+0000",
            "content": "Commit 63a400528267e1ce396b53b162b64fb49e3e4e45 in lucene-solr's branch refs/heads/master from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=63a4005 ]\n\nLUCENE-7873: The SPI lookup of Codecs, PostingsFormats, DocValuesFormats and all analysis factories was changed to only inspect the current classloader that defined the interface class (lucene-core.jar) ",
            "author": "ASF subversion and git services"
        }
    ]
}