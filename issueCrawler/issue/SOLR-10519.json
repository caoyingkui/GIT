{
    "id": "SOLR-10519",
    "title": "SolrCLI.atPath cannot handle children that begin with a slash.",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "6.6",
            "7.0"
        ],
        "affect_versions": "6.5,                                            7.0",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "When getting an element of a configuration from JSON where the name of one of the elements in the tree begins with a slash (e.g. /query), SolrCLI.atPath fails because it splits on the slash.\n\nWe either need a way to escape it or add an alternate delimiter. Here's one way that works, what do people think?",
    "attachments": {
        "SOLR-10519.patch": "https://issues.apache.org/jira/secure/attachment/12863914/SOLR-10519.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-04-18T23:56:35+0000",
            "content": "it's kind of hard to read from the patch, but all it does is make\npublic static Object atPath(String jsonPath, Map<String,Object> json)\ncall\npublic static Object atPath(String jsonPath, Map<String,Object> json, String delim) \n\nwith \"/\" as the delim. Now I can call something like:\nSolrCLI.atPath(\"#config#requestHandler#/query#defaults#wt\", configJson, \"#\");\n\nand get the wt parameter for this request handler.\n\nI suppose one could also escape the slash somehow, but this works. I'll commit this relatively soon unless there are objections (after precommit and testing of course, which I haven't done yet). ",
            "author": "Erick Erickson",
            "id": "comment-15973766"
        },
        {
            "date": "2017-04-18T23:57:51+0000",
            "content": "I suppose an alternative would be when looking for the child if it isn't found without the slash, prepend the slash but I really don't like alternative. ",
            "author": "Erick Erickson",
            "id": "comment-15973770"
        },
        {
            "date": "2017-04-19T02:32:08+0000",
            "content": "Or maybe just use componentName. If that works for me I'll close this JIRA. ",
            "author": "Erick Erickson",
            "id": "comment-15973930"
        },
        {
            "date": "2017-04-24T23:22:45+0000",
            "content": "What do people think about this? The \"delim\" format in the patch makes for ugly calls like\natPath(#part1#part2#/part3, \"#\"); \nYou can still use\n\natPath(/part1/part2/part3); \n\nbut none of the parts can start with a slash. It's just wrong to be unable to find one path or another, if we implemented some algorithm like \"If the part isn't found bare, then look for one with a slash\", So the algo would be \nfor each part {\n   if (found a child with the name) continue\n   else \n{look for a child prepended with a slash}\n}\nmakes it impossible to have both a forward slash and bar child, you'd never find one part or another. As:\nroot/\n   child\n   /child\n\n\"child\" and \"/child\" are distinct nodes so they must both be findable.\n\nSiggghhhh. I suppose the proper solution is to be able to escape the slash as\natPath(\"/root/child/\\/shashed_child/another_child);. I'll work that up I guess. ",
            "author": "Erick Erickson",
            "id": "comment-15982103"
        },
        {
            "date": "2017-04-25T15:38:03+0000",
            "content": "Not a real sophisticated patch, but it works. I'll commit it soon.\n\nI decided on escaping rather than passing in a delimiter, so you can call it with a path like: \"/config/requestHandler//query/defaults/echoParams\" ",
            "author": "Erick Erickson",
            "id": "comment-15983078"
        },
        {
            "date": "2017-04-30T04:56:36+0000",
            "content": "Unless anyone objects, I'm going to commit this probably tomorrow. ",
            "author": "Erick Erickson",
            "id": "comment-15990124"
        },
        {
            "date": "2017-05-02T21:10:23+0000",
            "content": "Final patch with a regex...... ",
            "author": "Erick Erickson",
            "id": "comment-15993760"
        },
        {
            "date": "2017-05-02T21:13:52+0000",
            "content": "Commit 0be8e1783211c7972b63e974cf32cb8d94cd4a22 in lucene-solr's branch refs/heads/master from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0be8e17 ]\n\nSOLR-10519: SolrCLI.atPath cannot handle children that begin with a slash. ",
            "author": "ASF subversion and git services",
            "id": "comment-15993764"
        },
        {
            "date": "2017-05-02T21:20:47+0000",
            "content": "Commit 61c4dfb4a424d1611d7de835fd474430c42abe89 in lucene-solr's branch refs/heads/branch_6x from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=61c4dfb ]\n\nSOLR-10519: SolrCLI.atPath cannot handle children that begin with a slash.\n\n(cherry picked from commit 0be8e17) ",
            "author": "ASF subversion and git services",
            "id": "comment-15993781"
        }
    ]
}