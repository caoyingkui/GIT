{
    "id": "SOLR-8005",
    "title": "when some docs have no values, sorting on field(multivalued_field,min/max) has inconsistent ordering compared to sorting on same effective values in a single valued field",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.4",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "While working on tests for SOLR-8001 i realized that because the multivalued min/max selector function (ie: field(multivalued_field_name,min) produces a ValueSource which is a SortedSetFieldSource instance, and because SortedSetFieldSource uses SortedSetSortField when sorting, then in situations where some documents do not have any value at all in the multivalued field the sort order will be inconsistent compared to sorting on a single valued numeric field containing the same \"effective\" min/max value (where docs w/o a value act as if the value is \"0\" by default).\n\nie: sort=min_of_multivalued_field_name+asc vs sort=field(multivalued_field_name,min)+asc will not sort identically.\n\n\n\nI don't have any immediate ideas for a \"fix\" to make these situations more equivilent, but the current known workarround for people that want equivilent behavior is to wrap the field function in a def function selecting a default value of 0 \u2013 ie: sort=def(field(multivalued_field_name,min))+asc.\n\nIf the function is already wrapped in some other numeric function, then the behavior (combined with the existing bug fix in SOLR-8001) should already be equivilent \u2013 ie: sort=sum(32,min_of_multivalued_field_name)+asc vs sort=sum(32,field(multivalued_field_name,min))+asc",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-09-02T23:03:12+0000",
            "author": "Hoss Man",
            "content": "\nFWIW: i initially thought the best \"fix\" would be for the various impls of \"getSingleValueSource\" in Solr field types to override SortedSetFieldSource.getSortField to call setMissingValue(0) as part of the constructor \u2013 but SortedSetSortField only supports STRING_FIRST and STRING_LAST as valid options for setMissingValue ... which in hind sight made perfect sence, since SortedSetSortField uses a TermOrdValComparator under the covers and never actually inspects/decodes any bytes. ",
            "id": "comment-14728201"
        }
    ]
}