{
    "id": "LUCENE-6616",
    "title": "IndexWriter should list files once on init, and IFD should not suppress FNFE",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.3",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "Some nice ideas Robert Muir had for cleaning up IW/IFD on init ...",
    "attachments": {
        "LUCENE-6616.patch": "https://issues.apache.org/jira/secure/attachment/12742122/LUCENE-6616.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14602917",
            "author": "Michael McCandless",
            "date": "2015-06-26T14:04:09+0000",
            "content": "Initial patch, but there are some interesting test failures I need to explain ... e.g.:\n\n\n   [junit4] Suite: org.apache.lucene.store.TestSingleInstanceLockFactory\n   [junit4]   1> Stress Test Index Writer: creation hit unexpected exception: java.io.FileNotFoundException: _u.si in dir=RAMDirectory@13f6d49b lockFactory=org.apache.lucene.store.SingleInstanceLockFactory@b554224\n   [junit4]   1> java.io.FileNotFoundException: _u.si in dir=RAMDirectory@13f6d49b lockFactory=org.apache.lucene.store.SingleInstanceLockFactory@b554224\n   [junit4]   1> \tat org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:641)\n   [junit4]   1> \tat org.apache.lucene.store.Directory.openChecksumInput(Directory.java:109)\n   [junit4]   1> \tat org.apache.lucene.store.MockDirectoryWrapper.openChecksumInput(MockDirectoryWrapper.java:1009)\n   [junit4]   1> \tat org.apache.lucene.codecs.lucene50.Lucene50SegmentInfoFormat.read(Lucene50SegmentInfoFormat.java:82)\n   [junit4]   1> \tat org.apache.lucene.index.SegmentInfos.readCommit(SegmentInfos.java:341)\n   [junit4]   1> \tat org.apache.lucene.index.IndexFileDeleter.<init>(IndexFileDeleter.java:167)\n   [junit4]   1> \tat org.apache.lucene.index.IndexWriter.<init>(IndexWriter.java:861)\n   [junit4]   1> \tat org.apache.lucene.store.BaseLockFactoryTestCase$WriterThread.run(BaseLockFactoryTestCase.java:194)\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestSingleInstanceLockFactory -Dtests.method=testStressLocks -Dtests.seed=69B8EFFDA6F51AA0 -Dtests.locale=et_EE -Dtests.timezone=America/Martinique -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 1.04s J3 | TestSingleInstanceLockFactory.testStressLocks <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: IndexWriter hit unexpected exceptions\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([69B8EFFDA6F51AA0:3789A100BA59D2C6]:0)\n   [junit4]    > \tat org.apache.lucene.store.BaseLockFactoryTestCase.testStressLocks(BaseLockFactoryTestCase.java:169)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n   [junit4]   2> NOTE: leaving temporary files on disk at: /l/iwcleanup/lucene/build/core/test/J3/temp/lucene.store.TestSingleInstanceLockFactory_69B8EFFDA6F51AA0-001\n   [junit4]   2> NOTE: test params are: codec=DummyCompressingStoredFields(storedFieldsFormat=CompressingStoredFieldsFormat(compressionMode=DUMMY, chunkSize=7, maxDocsPerChunk=653, blockSize=3), termVectorsFormat=CompressingTermVectorsFormat(compressionMode=DUMMY, chunkSize=7, blockSize=3)), sim=DefaultSimilarity, locale=et_EE, timezone=America/Martinique\n   [junit4]   2> NOTE: Linux 3.13.0-46-generic amd64/Oracle Corporation 1.8.0_40 (64-bit)/cpus=8,threads=1,free=488824136,total=518520832\n   [junit4]   2> NOTE: All tests run in this JVM: [TestToken, TestNRTReaderCleanup, TestFlex, TestTermsEnum2, TestPayloads, TestForTooMuchCloning, TestDocIdSet, TestSpanExplanationsOfNonMatches, TestSortedNumericSortField, TestDocumentsWriterDeleteQueue, TestSpanNearQuery, TestIndexWriterDelete, TestSparseFixedBitSet, TestMultiLevelSkipList, TestSingleInstanceLockFactory]\n   [junit4] Completed [45/393] on J3 in 1.17s, 7 tests, 1 failure <<< FAILURES!\n\n "
        },
        {
            "id": "comment-14602935",
            "author": "Robert Muir",
            "date": "2015-06-26T14:25:28+0000",
            "content": "That is the same test method that gave the sporatic \"access denied\" from jenkins on windows the other day (which is why i was looking at this stuff). \n\nOne possibly explanation for that (from windows documentation) is if the file was deleted:\n\nIf you call CreateFile on a file that is pending deletion as a result of a previous call to DeleteFile, the function fails. The operating system delays file deletion until all handles to the file are closed. GetLastError returns ERROR_ACCESS_DENIED.\n\nSo maybe you are zeroing in on that bug. Great if you can reproduce it easily. "
        },
        {
            "id": "comment-14604608",
            "author": "Michael McCandless",
            "date": "2015-06-28T09:49:53+0000",
            "content": "New patch, it's closer I think.  Tests passed once, but I still have one nocommit ...\n\nI made some drastic changes to IndexFileDeleter (thanks to Robert Muir for this idea!).  All places that used to directly delete a file now instead make three passes:\n\n\n\tFirst just gather up all files wanting to be deleted, adding them to the deletable HashSet.\n\n\n\n\n\tSecond, try to delete all the segments_N files in that set.\n\n\n\n\n\tFinally, delete all non-segments files, only if 2nd pass succeeded.\n\n\n\nThis ensures that even in the presence of a virus checker, the index is never left in a state where a segments_N is referencing a non-existent file.\n\nI also fixed all file deletion done by IW to use IFD's methods, and made IFD.deleteFile private. "
        },
        {
            "id": "comment-14614077",
            "author": "Michael McCandless",
            "date": "2015-07-04T22:30:17+0000",
            "content": "New patch, I think it's ready.\n\nI reviewed the places where I now call IFD.deleteNewFiles, and except for one case (which I fixed) the files we pass are all files that we have written.  So I think it's safe.\n\nI also added an assert in IFD where it actually deletes the file that if it hits an IOExc, it is NOT a NoSuchFileExc nor FNFE, which may (not guaranteed!) be thrown when you try to delete a non-existent file. "
        },
        {
            "id": "comment-14618721",
            "author": "ASF subversion and git services",
            "date": "2015-07-08T14:42:44+0000",
            "content": "Commit 1689893 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1689893 ]\n\nLUCENE-6616: IW lists files only once on init, IFD no longer suppresses FNFE, IFD deletes segments_N files last "
        },
        {
            "id": "comment-14619191",
            "author": "ASF subversion and git services",
            "date": "2015-07-08T19:17:39+0000",
            "content": "Commit 1689940 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1689940 ]\n\nLUCENE-6616: IW lists files only once on init, IFD no longer suppresses FNFE, IFD deletes segments_N files last "
        },
        {
            "id": "comment-14619202",
            "author": "ASF subversion and git services",
            "date": "2015-07-08T19:22:02+0000",
            "content": "Commit 1689942 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1689942 ]\n\nLUCENE-6616: Lucene50SegmentInfoFormat should not claim to have created a file until the createOutput in fact succeeded "
        },
        {
            "id": "comment-14626418",
            "author": "ASF subversion and git services",
            "date": "2015-07-14T14:50:20+0000",
            "content": "Commit 1690952 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1690952 ]\n\nLUCENE-6616: only claim to have created a file once createOutput succeeded "
        },
        {
            "id": "comment-14626421",
            "author": "ASF subversion and git services",
            "date": "2015-07-14T14:51:30+0000",
            "content": "Commit 1690954 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1690954 ]\n\nLUCENE-6616: only claim to have created a file once createOutput succeeded "
        },
        {
            "id": "comment-14713097",
            "author": "Shalin Shekhar Mangar",
            "date": "2015-08-26T13:05:45+0000",
            "content": "Bulk close for 5.3.0 release "
        },
        {
            "id": "comment-14717033",
            "author": "Steve Rowe",
            "date": "2015-08-27T16:48:40+0000",
            "content": "Some FNFEs have cropped up in recent Jenkins nightly runs: LUCENE-6769 "
        }
    ]
}