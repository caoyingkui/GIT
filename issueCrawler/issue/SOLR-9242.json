{
    "id": "SOLR-9242",
    "title": "Collection level backup/restore should provide a param for specifying the repository implementation it should use",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.2",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "SOLR-7374 provides BackupRepository interface to enable storing Solr index data to a configured file-system (e.g. HDFS, local file-system etc.). This JIRA is to track the work required to extend this functionality at the collection level.",
    "attachments": {
        "SOLR-9242_followup2.patch": "https://issues.apache.org/jira/secure/attachment/12822006/SOLR-9242_followup2.patch",
        "SOLR-9242_followup.patch": "https://issues.apache.org/jira/secure/attachment/12817164/SOLR-9242_followup.patch",
        "SOLR-9242.patch": "https://issues.apache.org/jira/secure/attachment/12812963/SOLR-9242.patch",
        "7726.log.gz": "https://issues.apache.org/jira/secure/attachment/12823705/7726.log.gz"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-06-23T23:44:12+0000",
            "author": "Hrishikesh Gadre",
            "content": "Varun Thacker Please find the patch attached. It includes following,\n\n\n\tUpdated the collection level backup/restore implementation to use the BackupRepository interface.\n\tRemoved the cluster property to define a default backup location. The default will now be associated with the backup repository configuration.\n\tUnified the backup/restore API parameter constants in CoreAdminParams class (and removed duplicate declarations in other classes).\n\tAdded unit test to verify the HDFS integration for collection level backup/restore.\n\n ",
            "id": "comment-15347441"
        },
        {
            "date": "2016-06-24T12:51:07+0000",
            "author": "Varun Thacker",
            "content": "Hi,\n\nI had a quick peek into the patches and looks good overall! Some nice cleanups as well.\n\nRemoved the cluster property to define a default backup location. The default will now be associated with the backup repository configuration.\n\nI wanted to get this hashed out before Solr 6.1 came out so that we know whether we want to support this or not. But now that its out and documented I don't think we can drop it easily. Seems like a good way to override location anyways? We'll need to add support for it now\n ",
            "id": "comment-15348213"
        },
        {
            "date": "2016-06-24T22:47:59+0000",
            "author": "Hrishikesh Gadre",
            "content": "Varun Thacker Thanks for the review.\n\nBut now that its out and documented I don't think we can drop it easily. Seems like a good way to override location anyways? We'll need to add support for it now\n\nSince we allow users to configure multiple repositories in solr.xml, we can not use the current cluster property as is. This is because user may want to specify different location for different file-systems (or repositories). Hence at minimum we need one cluster property per repository configuration (e.g. name could be <repository-name>-location).\n\nFor 6.x releases, we can restrict the users to configure only a single repository at-a-time. This will avoid the problem mentioned above and they can use the current property.\nFor 7.x releases, we have multiple options,\n\n\n\tSupport configuring multiple cluster properties one per repository configuration. This will require some changes in CLUSTERPROP API since currently it  requires fixed (or well-known) property names. In this case we will remove the current cluster property as well as ability to configure default location via solr.xml\n\tContinue using the current mechanism of configuring default location via solr.xml. Just remove the current cluster property\n\n\n\nWhat do you think? ",
            "id": "comment-15348809"
        },
        {
            "date": "2016-06-28T17:03:56+0000",
            "author": "Hrishikesh Gadre",
            "content": "Varun Thacker Mark Miller Any thoughts on this? ",
            "id": "comment-15353377"
        },
        {
            "date": "2016-06-30T08:00:09+0000",
            "author": "Varun Thacker",
            "content": "Hi Hrishikesh,\n\nwe can restrict the users to configure only a single repository at-a-time. This will avoid the problem mentioned above and they can use the current property.\n\nPersonally I don't like the idea of limiting our users to one repo in all of the 6.x line.\n\nLet's say we follow this order:\n1. If \"location\" param was provided as a query param use that\n2. Else if the \"repository\" in the solr.xml has a \"location\" param use that.\n3. If the \"repository\" specified doesn't specify a \"location\" param then see if it's specified via the cluster property API . The code will throw an error if the location was bogus or was with not for this repo. It has to fail as the repository will fail to read / write to that location.\n\nI thought about the \"repoName:/path\" syntax idea that you proposed . Seems to me that we want to do all of this because solr.xml doesn't have an API to update it . We have to hand edit the file and upload to ZK at the very least.\n\nI think let's not complicate it any further? Keep the location cluster prop for now the way it is and support it.\n\nWe can work towards adding API support to solr.xml and then get rid the \"location\" cluster prop or the entire cluster prop API in the future. ",
            "id": "comment-15356701"
        },
        {
            "date": "2016-06-30T20:20:14+0000",
            "author": "Hrishikesh Gadre",
            "content": "Varun Thacker Thanks for the feedback. I have incorporated these review comments in this patch. Please take a look and let me know. ",
            "id": "comment-15357783"
        },
        {
            "date": "2016-06-30T20:24:48+0000",
            "author": "Hrishikesh Gadre",
            "content": "Varun Thacker Filed SOLR-9268 to track API support for solr.xml configuration. ",
            "id": "comment-15357790"
        },
        {
            "date": "2016-07-01T04:50:58+0000",
            "author": "Hrishikesh Gadre",
            "content": "Varun Thacker Fixed a bug in the earlier patch. ",
            "id": "comment-15358376"
        },
        {
            "date": "2016-07-01T14:01:03+0000",
            "author": "Varun Thacker",
            "content": "Hi Hrishikesh,\n\nThanks for the patch! I'll have a look at this over the weekend. ",
            "id": "comment-15359007"
        },
        {
            "date": "2016-07-04T18:04:28+0000",
            "author": "Varun Thacker",
            "content": "Thanks Hrishikesh for the patch!\n\nI've attached a new patch with some minor changes listed below. Let me know how it looks.\n\nOverseerCollectionMessageHandler\n1. In processBackupAction remove unused variable propertiesPath\n2. In processBackupAction/processRestoreAction remove the \"location\" checks. Error handling and validation has ready been done at the CollectionsHandler\n3. In processRestoreAction removed unused variable backupZkPath\n\nCoreContainer\n1. One minor formatting change\n\nBackupManager\n1. Remove unused import\n\n\nCollectionsHandler\n1. Used LOCATION contant at a couple of missing places.\n\n\nAbstractCloudBackupRestoreTestCase\n\n1. In testInvalidPath where we set cluster property , added asset that the property has been set successfully\n\nTestHdfsCloudBackupRestore\n\n1. This prop solr.hdfs.confdir in the solr.xml file never seemed to be getting used? I removed it and the tests pass. Do we need this?\n\nCollectionAdminRequest\n\n1. Changed setRepository(Optional<String> repository) to setRepository(String repository . Seems cleaner from an API perspective given it's a setter.\n2. Changed the variable name from repository to repositoryName\n3. Made necessary changes to AbstractCloudBackupRestoreTestCase to fix the compile errors because of the first two changes.\n\nReplicationHandler\n\n1. Minor Formatting Changes\n\nTestBackupRepositoryFactory\n\n1. Reverted the change of using the \"location\" string VS constant. If by change the constant name, Strings in tests will help us catch it. ",
            "id": "comment-15361659"
        },
        {
            "date": "2016-07-04T23:10:34+0000",
            "author": "Hrishikesh Gadre",
            "content": "Varun Thacker Thanks for the review comments. The updated patch looks good mostly. Only couple of minor comments,\n\nThis prop solr.hdfs.confdir in the solr.xml file never seemed to be getting used? I removed it and the tests pass. Do we need this?\n\nThe HdfsBackupRepository uses HdfsDirectory internally. This optional property is being used by the HdfsDirectoryFactory. My guess is that in the test environment Hadoop conf directory is not created/initialized. I don't think there is any harm in keeping this configuration option.\n\nChanged setRepository(Optional<String> repository) to setRepository(String repository . Seems cleaner from an API perspective given it's a setter.\n\nI am OK with changing the setRepository parameter from Optional<String> to String. But it looks like you have changed the attribute type as well. Since we are using Java 8 now, we should use Optional type to clearly specify optional attributes. This helps to improve the readability of the code. Here is a good article about the Java 8 Optional type. http://blog.codefx.org/techniques/intention-revealing-code-java-8-optional/\n\n How about following?\n\n\n\tThe parameter type of setter should be String. The setter method should initialize the attribute based on its nullability.\n\tThe type of attribute as well as the getter should be Optional<String>. This clearly indicates that the attribute is optional (without having to read the code comment in the CollectionAdminRequest class).\n\tIn the getParams method - replace the null check with isPresent() method call.\n\n\n ",
            "id": "comment-15361830"
        },
        {
            "date": "2016-07-06T06:12:43+0000",
            "author": "Varun Thacker",
            "content": "Makes sense! I've updated the patch. \n\nRunning all the tests before committing it. ",
            "id": "comment-15363844"
        },
        {
            "date": "2016-07-06T07:49:10+0000",
            "author": "ASF subversion and git services",
            "content": "Commit bfe5c5ae499499d4198caa71442eb3e4eba45237 in lucene-solr's branch refs/heads/master from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bfe5c5a ]\n\nSOLR-9242: Collection backup/restore to provide a param for specifying underlying storage repository to use ",
            "id": "comment-15363930"
        },
        {
            "date": "2016-07-06T07:52:17+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 413ea476700429bd39c659cdd0bc6682263b0545 in lucene-solr's branch refs/heads/branch_6x from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=413ea47 ]\n\nSOLR-9242: Collection backup/restore to provide a param for specifying underlying storage repository to use ",
            "id": "comment-15363935"
        },
        {
            "date": "2016-07-06T07:52:47+0000",
            "author": "Varun Thacker",
            "content": "Thanks Hrishikesh! Committed this ",
            "id": "comment-15363936"
        },
        {
            "date": "2016-07-08T11:01:52+0000",
            "author": "Varun Thacker",
            "content": "We have a test failure for windows :\n\nLog excerpt :\n\n   [junit4]   2> Caused by: java.nio.file.InvalidPathException: Illegal char <:> at index 2: /C:/Users/jenkins/workspace/Lucene-Solr-6.x-Windows/solr/build/solr-core/test/J1/temp/solr.cloud.TestLocalFSCloudBackupRestore_168D4B6DEE507089-001/tempDir-002/mytestbackup\n   [junit4]   2> \tat sun.nio.fs.WindowsPathParser.normalize(WindowsPathParser.java:182)\n   [junit4]   2> \tat sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:153)\n   [junit4]   2> \tat sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77)\n   [junit4]   2> \tat sun.nio.fs.WindowsPath.parse(WindowsPath.java:94)\n   [junit4]   2> \tat sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:255)\n   [junit4]   2> \tat java.nio.file.Paths.get(Paths.java:84)\n   [junit4]   2> \tat org.apache.solr.core.backup.repository.LocalFileSystemRepository.createURI(LocalFileSystemRepository.java:62)\n   [junit4]   2> \tat org.apache.solr.handler.SnapShooter.initialize(SnapShooter.java:85)\n   [junit4]   2> \tat org.apache.solr.handler.SnapShooter.<init>(SnapShooter.java:79)\n   [junit4]   2> \tat org.apache.solr.handler.admin.CoreAdminOperation$19.call(CoreAdminOperation.java:873)\n   [junit4]   2> \t... 30 more\n\n\n\nJenkins failure link : http://jenkins.thetaphi.de/job/Lucene-Solr-6.x-Windows/305/ ",
            "id": "comment-15367524"
        },
        {
            "date": "2016-07-09T16:28:04+0000",
            "author": "David Smiley",
            "content": "BTW we should be putting our ASF source headers at the very top.  I notice these files put them in other places, and in at least one place moved existing ones to another ordering.  I wish precommit with complain about this. ",
            "id": "comment-15369165"
        },
        {
            "date": "2016-07-11T06:10:33+0000",
            "author": "Varun Thacker",
            "content": "There's another type of test failure : https://builds.apache.org/job/Lucene-Solr-Tests-master/1270/console\n\nIn this case the ZK watch for updating the clusterprop occurs after the backup command has been invoked . Hence it doesn't find the value set in the cluster-prop api\n\n\n[junit4]   2> 819240 INFO  (qtp102693249-7831) [n:127.0.0.1:52710_solr    ] o.a.s.h.a.CollectionsHandler Invoked Collection Action :clusterprop with params val=/location/does/not/exist&name=location&action=CLUSTERPROP&wt=javabin&version=2 and sendToOCPQueue=true\n   [junit4]   2> 819241 INFO  (qtp102693249-7831) [n:127.0.0.1:52710_solr    ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/collections params={val=/location/does/not/exist&name=location&action=CLUSTERPROP&wt=javabin&version=2} status=0 QTime=0\n   [junit4]   2> 819242 INFO  (qtp102693249-7825) [n:127.0.0.1:52710_solr    ] o.a.s.h.a.CollectionsHandler Invoked Collection Action :backup with params name=invalidbackuprequest&action=BACKUP&collection=backuprestore&wt=javabin&version=2 and sendToOCPQueue=true\n   [junit4]   2> 819242 INFO  (zkCallback-1166-thread-1) [    ] o.a.s.c.c.ZkStateReader Loaded cluster properties: {location=/location/does/not/exist}\n   [junit4]   2> 819242 INFO  (zkCallback-1160-thread-2-processing-n:127.0.0.1:41141_solr) [n:127.0.0.1:41141_solr    ] o.a.s.c.c.ZkStateReader Loaded cluster properties: {location=/location/does/not/exist}\n   [junit4]   2> 819242 ERROR (qtp102693249-7825) [n:127.0.0.1:52710_solr    ] o.a.s.h.RequestHandlerBase org.apache.solr.common.SolrException: 'location' is not specified as a query parameter or as a default repository property or as a cluster property.\n   [junit4]   2> \tat org.apache.solr.handler.admin.CollectionsHandler$CollectionOperation$28.call(CollectionsHandler.java:822)\n   [junit4]   2> \tat org.apache.solr.handler.admin.CollectionsHandler.handleRequestBody(CollectionsHandler.java:207)\n   [junit4]   2> \tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:154)\n   [junit4]   2> \tat org.apache.solr.servlet.HttpSolrCall.handleAdminRequest(HttpSolrCall.java:659)\n   [junit4]   2> \tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:441)\n   [junit4]   2> \tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:257)\n   [junit4]   2> \tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:208)\n   [junit4]   2> \tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)\n   [junit4]   2> \tat org.apache.solr.client.solrj.embedded.JettySolrRunner$DebugFilter.doFilter(JettySolrRunner.java:111)\n   [junit4]   2> \tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)\n   [junit4]   2> \tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)\n   [junit4]   2> \tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:224)\n   [junit4]   2> \tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1160)\n   [junit4]   2> \tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)\n   [junit4]   2> \tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n   [junit4]   2> \tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1092)\n   [junit4]   2> \tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n   [junit4]   2> \tat org.eclipse.jetty.server.handler.gzip.GzipHandler.handle(GzipHandler.java:462)\n   [junit4]   2> \tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)\n   [junit4]   2> \tat org.eclipse.jetty.server.Server.handle(Server.java:518)\n   [junit4]   2> \tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:308)\n   [junit4]   2> \tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:244)\n   [junit4]   2> \tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:273)\n   [junit4]   2> \tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)\n   [junit4]   2> \tat org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93)\n   [junit4]   2> \tat org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:246)\n   [junit4]   2> \tat org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:156)\n   [junit4]   2> \tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)\n   [junit4]   2> \tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\n   [junit4]   2> \tat java.lang.Thread.run(Thread.java:745)\n   [junit4]   2> \n   [junit4]   2> 819242 INFO  (qtp102693249-7825) [n:127.0.0.1:52710_solr    ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/collections params={name=invalidbackuprequest&action=BACKUP&collection=backuprestore&wt=javabin&version=2} status=400 QTime=0\n   [junit4]   2> 819242 INFO  (zkCallback-1159-thread-1-processing-n:127.0.0.1:52710_solr) [n:127.0.0.1:52710_solr    ] o.a.s.c.c.ZkStateReader Loaded cluster properties: {location=/location/does/not/exist}\n\n\n\nLine 819242 should occur before 819242\n ",
            "id": "comment-15370234"
        },
        {
            "date": "2016-07-11T13:00:09+0000",
            "author": "Varun Thacker",
            "content": "\n\tMoved ASF source headers at the very top\n\tForceUpdate cluster props to make sure we are reading the latest value. This tackles Jenkins failures like  https://builds.apache.org/job/Lucene-Solr-Tests-master/1270/\n\n\n\nI'm looking into the windows path failure as well  ",
            "id": "comment-15370708"
        },
        {
            "date": "2016-07-13T09:30:07+0000",
            "author": "ASF subversion and git services",
            "content": "Commit eefdc62c997f7936b6db203111d8149dc934b243 in lucene-solr's branch refs/heads/master from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=eefdc62 ]\n\nSOLR-9242: Move license headers to the top + force refresh cluster propery before reading the 'location' param ",
            "id": "comment-15374693"
        },
        {
            "date": "2016-07-13T09:30:45+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1dfc637f2ca10242afeb12ba1ad35357ed611029 in lucene-solr's branch refs/heads/branch_6x from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1dfc637 ]\n\nSOLR-9242: Move license headers to the top + force refresh cluster propery before reading the 'location' param ",
            "id": "comment-15374696"
        },
        {
            "date": "2016-07-14T00:58:16+0000",
            "author": "Hrishikesh Gadre",
            "content": "Varun Thacker Sorry for late reply. It seems like the changes committed regarding the force loading the cluster properties are in direct contradiction with SOLR-9106. Since this is unrelated to backup/restore, I think we should have handled it separately.\n\nRegarding windows failure -\nI don't have the windows setup. But let me figure something out and provide a fix... ",
            "id": "comment-15376105"
        },
        {
            "date": "2016-07-20T23:40:37+0000",
            "author": "Hrishikesh Gadre",
            "content": "Found one more unit test failure on Windows. Investigating...\n\nhttp://jenkins.thetaphi.de/job/Lucene-Solr-master-Windows/5996/ ",
            "id": "comment-15386814"
        },
        {
            "date": "2016-07-21T07:53:25+0000",
            "author": "Varun Thacker",
            "content": "Thanks for Investigating! \n\nI've been swamped with work otherwise I would have got to this sooner. ",
            "id": "comment-15387322"
        },
        {
            "date": "2016-07-26T18:44:11+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 219406d912e027195145de2e77f35f41a6116c6d in lucene-solr's branch refs/heads/master from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=219406d ]\n\nSOLR-9242: Disabling TestLocalFSCloudBackupRestore on Windows till we fix it ",
            "id": "comment-15394305"
        },
        {
            "date": "2016-07-26T18:45:16+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 12449282624a2342dde6a51a90872b104a23560a in lucene-solr's branch refs/heads/branch_6x from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1244928 ]\n\nSOLR-9242: Disabling TestLocalFSCloudBackupRestore on Windows till we fix it ",
            "id": "comment-15394308"
        },
        {
            "date": "2016-08-03T21:24:38+0000",
            "author": "ASF GitHub Bot",
            "content": "GitHub user hgadre opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/62\n\n    SOLR-9242 Fix unit test failure on Windows platform.\n\n    The root cause of the failure is the usage of URI::getPath() method in the backup/restore functionality (e.g. in BackupManager::downloadFromZK OR in the OverseerCollectionMessageHandler::processBackupAction methods). On the Windows platform, usage of URI.getPath() returns an invalid path string (e.g.  URI file:///C:/lucene-solr/solr\n    returns /C:/lucene-solr/solr as the result of getPath() method).\n\n    Refer to following discussion for more details,\n    http://stackoverflow.com/questions/9834776/java-nio-file-path-issue\n\n    Since the caller may have used this method to generate the string representation for the pathComponents, we implement a work-around specifically for Windows platform to remove the leading '/' character.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/hgadre/lucene-solr SOLR-9242_fix\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/62.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #62\n\n\n\n ",
            "id": "comment-15406641"
        },
        {
            "date": "2016-08-03T21:25:01+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user hgadre commented on the issue:\n\n    https://github.com/apache/lucene-solr/pull/62\n\n    @vthacker could you please take a look? ",
            "id": "comment-15406644"
        },
        {
            "date": "2016-08-04T06:23:46+0000",
            "author": "Varun Thacker",
            "content": "Hi Hrishikesh,\n\nThanks for the patch! My research had also shown this same solution. Maybe there isn't a better solution. So lets use this . Maybe if someone has a better solution we can move to that in the future. \n\n\nAdditionally made another small change based on the latest comments from SOLR-9106. ",
            "id": "comment-15407263"
        },
        {
            "date": "2016-08-04T15:12:03+0000",
            "author": "Hrishikesh Gadre",
            "content": "Varun Thacker Thanks for the review and updated patch. Looks good to me! ",
            "id": "comment-15407912"
        },
        {
            "date": "2016-08-05T03:07:53+0000",
            "author": "ASF subversion and git services",
            "content": "Commit d5a7ca79f3ac88d4de54c013eb6b29f72e52c907 in lucene-solr's branch refs/heads/master from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d5a7ca7 ]\n\nSOLR-9242: fix windows path issue + load live cluster properties. This closes #62 ",
            "id": "comment-15408802"
        },
        {
            "date": "2016-08-05T03:08:38+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/lucene-solr/pull/62 ",
            "id": "comment-15408803"
        },
        {
            "date": "2016-08-08T03:49:12+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 9c37aaabe4e1b3f66cd0034e2e3fe0399e82fffd in lucene-solr's branch refs/heads/branch_6x from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9c37aaa ]\n\nSOLR-9242: fix windows path issue + load live cluster properties. This closes #62 ",
            "id": "comment-15411235"
        },
        {
            "date": "2016-08-15T14:26:30+0000",
            "author": "Steve Rowe",
            "content": "My Jenkins found a TestHdfsCloudBackupRestore failure that reproduces for me on master:\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestHdfsCloudBackupRestore -Dtests.method=test -Dtests.seed=9470C0688BFAF297 -Dtests.slow=true -Dtests.linedocsfile=/home/jenkins/lucene-data/enwiki.random.lines.txt -Dtests.locale=es-MX -Dtests.timezone=HST -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] ERROR   38.6s J5  | TestHdfsCloudBackupRestore.test <<<\n   [junit4]    > Throwable #1: org.apache.solr.client.solrj.impl.HttpSolrClient$RemoteSolrException: Error from server at http://127.0.0.1:37868/solr: Collection 'hdfsbackuprestore_restored' exists, no action taken.\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([9470C0688BFAF297:1C24FFB225069F6F]:0)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.HttpSolrClient.executeMethod(HttpSolrClient.java:608)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:261)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:250)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.LBHttpSolrClient.doRequest(LBHttpSolrClient.java:413)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.LBHttpSolrClient.request(LBHttpSolrClient.java:366)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.CloudSolrClient.sendRequest(CloudSolrClient.java:1291)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.CloudSolrClient.requestWithRetryOnStaleState(CloudSolrClient.java:1061)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.CloudSolrClient.request(CloudSolrClient.java:997)\n   [junit4]    > \tat org.apache.solr.client.solrj.SolrRequest.process(SolrRequest.java:149)\n   [junit4]    > \tat org.apache.solr.client.solrj.SolrRequest.process(SolrRequest.java:166)\n   [junit4]    > \tat org.apache.solr.cloud.AbstractCloudBackupRestoreTestCase.testBackupAndRestore(AbstractCloudBackupRestoreTestCase.java:232)\n   [junit4]    > \tat org.apache.solr.cloud.AbstractCloudBackupRestoreTestCase.test(AbstractCloudBackupRestoreTestCase.java:126)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n\n ",
            "id": "comment-15421046"
        },
        {
            "date": "2016-08-15T14:59:47+0000",
            "author": "Steve Rowe",
            "content": "Compressed log for the Jenkins failure mentioned in my previous post. ",
            "id": "comment-15421102"
        },
        {
            "date": "2016-08-15T15:02:31+0000",
            "author": "Hrishikesh Gadre",
            "content": "Steve Rowe Thanks for the update. Let me take a look and get back to you. ",
            "id": "comment-15421104"
        },
        {
            "date": "2016-08-17T14:04:52+0000",
            "author": "Varun Thacker",
            "content": "hdfsbackuprestore_shard1_0_replica0 - doesn't sound right. We should create another issue to make sure its atleast replica1\n\nSecondly I see the operation is being retried on failure. That doesn't look good.\n\nI'll try looking at the main issue as well ",
            "id": "comment-15424567"
        },
        {
            "date": "2016-08-26T13:26:57+0000",
            "author": "Uwe Schindler",
            "content": "Hi,\n\ncan we fix this please in a correct way? The Stackoverflow issue is IMHO showing incompetence of the typical \"Stackoverflow\" user. URI.getPath() returns the URI path and never ever a filesystem path. The fix is also incorrect. It also breaks if you have whitespace in your path (on non-windows)!!! This explains now why this test always fails on my system!\n\nTo convert an URI to a Path use Paths.get(URI), and not URI.getPath().  ",
            "id": "comment-15438925"
        },
        {
            "date": "2016-08-26T13:39:53+0000",
            "author": "Uwe Schindler",
            "content": "I just checked the code: This is a major desaster. The method URI#getPath() and URL.getPath() was already proposed to be put on the forbidden-apis list. I think it's time to do this. This is not acceptable, we should fix asap. To me that would have been also a reason to -1 the release of Solr 5.2! ",
            "id": "comment-15438930"
        },
        {
            "date": "2016-08-26T14:29:01+0000",
            "author": "Varun Thacker",
            "content": "Hi Uwe,\n\nI created SOLR-9444 to track this. I'll start looking into this ASAP . Would appreciate your feedback on the Jira as well ",
            "id": "comment-15439145"
        },
        {
            "date": "2016-08-26T14:59:20+0000",
            "author": "Uwe Schindler",
            "content": "Thanks! I have seen it and already respondend. I have an proposal, but I did not look into the code fully.\n\nSorry for the noise here, but URI.getPath() and URL.getPath() are 2 of the methods that are used wrongly all the time. The Maven People already have a nice blog post about that, because theis is also an issue when building classpaths and so on. If you don't read the documentation of those methods correctly, its almost always wrong. The problem is Linux, where you mostly don't see the corner cases, but people on Windows with whitespace in path names and drive letters always hit those issues. Unfortunately the \"workarounds\" as proposed by Stackoverflow are just invalid, because they work around the wrong use of those methods (like an X-Y-Problem), but not fixing the root cause. ",
            "id": "comment-15439198"
        },
        {
            "date": "2016-09-12T13:54:27+0000",
            "author": "Hrishikesh Gadre",
            "content": "Varun Thacker Now that SOLR-9444 is resolved, should we close this JIRA? Or are there any recent test failures due to this functionality? ",
            "id": "comment-15484186"
        },
        {
            "date": "2016-09-13T06:44:38+0000",
            "author": "Varun Thacker",
            "content": "We should resolve this issue since this feature has been released.\n\nSecondly I see the operation is being retried on failure. That doesn't look good.\n\nThis was fixed in SOLR-9445\n\nIf ant test  -Dtestcase=TestHdfsCloudBackupRestore -Dtests.method=test -Dtests.seed=9470C0688BFAF297 -Dtests.slow=true -Dtests.linedocsfile=/home/jenkins/lucene-data/enwiki.random.lines.txt -Dtests.locale=es-MX -Dtests.timezone=HST -Dtests.asserts=true -Dtests.file.encoding=UTF-8 still reproduces then lets track it on a separate Jira. \n\nI ran it a few times and it didn't fail for me on my Mac, I didn't see any jenkins failure on this recently as well. Maybe it was fixed as part of SOLR-9444 ?\n\nSteve Rowe You had mentioned that this reproduced for you. Does it still reproduce ? If yes then I'll create a separate Jira and try to fix it ",
            "id": "comment-15486457"
        },
        {
            "date": "2016-09-13T12:57:27+0000",
            "author": "Steve Rowe",
            "content": "Steve Rowe You had mentioned that this reproduced for you. Does it still reproduce ? \n\nI just tried it on trunk and it no longer reproduces for me. ",
            "id": "comment-15487139"
        },
        {
            "date": "2016-09-13T13:11:33+0000",
            "author": "Varun Thacker",
            "content": "Great! Then we don't need any more work on this ",
            "id": "comment-15487169"
        }
    ]
}