{
    "id": "SOLR-12009",
    "title": "Solr OOM exception",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Not A Problem",
        "status": "Closed"
    },
    "description": "Attached the screenshots of the objects, which are using high memory, and causing OOM.\n\n\u00a0\n\nat org.apache.lucene.codecs.blocktree.IntersectTermsEnumFrame.load(Lorg/apache/lucene/util/BytesRef;)V (IntersectTermsEnumFrame.java:195)\n at org.apache.lucene.codecs.blocktree.IntersectTermsEnum.pushFrame(I)Lorg/apache/lucene/codecs/blocktree/IntersectTermsEnumFrame; (IntersectTermsEnum.java:211)\n at org.apache.lucene.codecs.blocktree.IntersectTermsEnum._next()Lorg/apache/lucene/util/BytesRef; (IntersectTermsEnum.java:665)\n at org.apache.lucene.codecs.blocktree.IntersectTermsEnum.next()Lorg/apache/lucene/util/BytesRef; (IntersectTermsEnum.java:500)\n at org.apache.lucene.index.ExitableDirectoryReader$ExitableTermsEnum.next()Lorg/apache/lucene/util/BytesRef; (ExitableDirectoryReader.java:185)\n at org.apache.lucene.search.MultiTermQueryConstantScoreWrapper$1.collectTerms(Lorg/apache/lucene/index/LeafReaderContext;Lorg/apache/lucene/index/TermsEnum;Ljava/util/List;)Z (MultiTermQueryConstantScoreWrapper.java:120)\n at org.apache.lucene.search.MultiTermQueryConstantScoreWrapper$1.rewrite(Lorg/apache/lucene/index/LeafReaderContext;)Lorg/apache/lucene/search/MultiTermQueryConstantScoreWrapper$WeightOrDocIdSet; (MultiTermQueryConstantScoreWrapper.java:147)\n at org.apache.lucene.search.MultiTermQueryConstantScoreWrapper$1.bulkScorer(Lorg/apache/lucene/index/LeafReaderContext;)Lorg/apache/lucene/search/BulkScorer; (MultiTermQueryConstantScoreWrapper.java:194)\n at org.apache.lucene.search.IndexSearcher.search(Ljava/util/List;Lorg/apache/lucene/search/Weight;Lorg/apache/lucene/search/Collector;)V (IndexSearcher.java:666)\n at org.apache.lucene.search.IndexSearcher.search(Lorg/apache/lucene/search/Query;Lorg/apache/lucene/search/Collector;)V (IndexSearcher.java:473)\n at org.apache.solr.search.SolrIndexSearcher.buildAndRunCollectorChain(Lorg/apache/solr/search/QueryResult;Lorg/apache/lucene/search/Query;Lorg/apache/lucene/search/Collector;Lorg/apache/solr/search/QueryCommand;Lorg/apache/solr/search/DelegatingCollector;)V (SolrIndexSearcher.java:242)\n at org.apache.solr.search.SolrIndexSearcher.getDocListNC(Lorg/apache/solr/search/QueryResult;Lorg/apache/solr/search/QueryCommand;)V (SolrIndexSearcher.java:1803)\n at org.apache.solr.search.SolrIndexSearcher.getDocListC(Lorg/apache/solr/search/QueryResult;Lorg/apache/solr/search/QueryCommand;)V (SolrIndexSearcher.java:1620)\n at org.apache.solr.search.SolrIndexSearcher.search(Lorg/apache/solr/search/QueryResult;Lorg/apache/solr/search/QueryCommand;)Lorg/apache/solr/search/QueryResult; (SolrIndexSearcher.java:617)\n at org.apache.solr.handler.component.QueryComponent.process(Lorg/apache/solr/handler/component/ResponseBuilder;)V (QueryComponent.java:531)\n at org.apache.solr.handler.component.SearchHandler.handleRequestBody(Lorg/apache/solr/request/SolrQueryRequest;Lorg/apache/solr/response/SolrQueryResponse;)V (SearchHandler.java:295)\n at org.apache.solr.handler.RequestHandlerBase.handleRequest(Lorg/apache/solr/request/SolrQueryRequest;Lorg/apache/solr/response/SolrQueryResponse;)V (RequestHandlerBase.java:153)\n at org.apache.solr.core.SolrCore.execute(Lorg/apache/solr/request/SolrRequestHandler;Lorg/apache/solr/request/SolrQueryRequest;Lorg/apache/solr/response/SolrQueryResponse;)V (SolrCore.java:2213)\n at org.apache.solr.servlet.HttpSolrCall.execute(Lorg/apache/solr/response/SolrQueryResponse;)V (HttpSolrCall.java:654)\n at org.apache.solr.servlet.HttpSolrCall.call()Lorg/apache/solr/servlet/SolrDispatchFilter$Action; (HttpSolrCall.java:460)\n at org.apache.solr.servlet.SolrDispatchFilter.doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;Z)V (SolrDispatchFilter.java:303)\n at org.apache.solr.servlet.SolrDispatchFilter.doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;Ljavax/servlet/FilterChain;)V (SolrDispatchFilter.java:254)\n at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V (ServletHandler.java:1668)\n at org.eclipse.jetty.servlet.ServletHandler.doHandle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V (ServletHandler.java:581)\n at org.eclipse.jetty.server.handler.ScopedHandler.handle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V (ScopedHandler.java:143)\n at org.eclipse.jetty.security.SecurityHandler.handle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V (SecurityHandler.java:548)\n at org.eclipse.jetty.server.session.SessionHandler.doHandle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V (SessionHandler.java:226)\n at org.eclipse.jetty.server.handler.ContextHandler.doHandle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V (ContextHandler.java:1160)\n at org.eclipse.jetty.servlet.ServletHandler.doScope(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V (ServletHandler.java:511)\n at org.eclipse.jetty.server.session.SessionHandler.doScope(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V (SessionHandler.java:185)\n at org.eclipse.jetty.server.handler.ContextHandler.doScope(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V (ContextHandler.java:1092)\n at org.eclipse.jetty.server.handler.ScopedHandler.handle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V (ScopedHandler.java:141)\n at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V (ContextHandlerCollection.java:213)\n at org.eclipse.jetty.server.handler.HandlerCollection.handle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V (HandlerCollection.java:119)\n at org.eclipse.jetty.server.handler.HandlerWrapper.handle(Ljava/lang/String;Lorg/eclipse/jetty/server/Request;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V (HandlerWrapper.java:134)\n at org.eclipse.jetty.server.Server.handle(Lorg/eclipse/jetty/server/HttpChannel;)V (Server.java:518)\n at org.eclipse.jetty.server.HttpChannel.handle()Z (HttpChannel.java:308)\n at org.eclipse.jetty.server.HttpConnection.onFillable()V (HttpConnection.java:244)\n at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded()V (AbstractConnection.java:273)\n at org.eclipse.jetty.io.FillInterest.fillable()V (FillInterest.java:95)\n at org.eclipse.jetty.io.SelectChannelEndPoint$2.run()V (SelectChannelEndPoint.java:93)\n at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun()V (ExecuteProduceConsume.java:246)\n at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run()V (ExecuteProduceConsume.java:156)\n at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(Ljava/lang/Runnable;)V (QueuedThreadPool.java:654)\n at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run()V (QueuedThreadPool.java:572)\n at java.lang.Thread.run()V (Thread.java:745)\n\n\nWe are seeing an OOM exception when solr is being queried on collection.",
    "attachments": {
        "Screen Shot 2018-02-20 at 6.50.53 PM.png": "https://issues.apache.org/jira/secure/attachment/12911324/Screen%20Shot%202018-02-20%20at%206.50.53%20PM.png",
        "Screen Shot 2018-02-20 at 6.51.04 PM.png": "https://issues.apache.org/jira/secure/attachment/12911325/Screen%20Shot%202018-02-20%20at%206.51.04%20PM.png"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-02-21T02:12:01+0000",
            "content": "Hi Bharat,\n\n\u00a0\n\nPlease raise these questions on the solr-user mailing list first.\u00a0\n\n\u00a0\n\nAn OOM doesn't mean it's a bug in Solr. You need to enable docValues on fields that you are faceting/sorting/function/collapse/grouping queries on . That will ensure the WeakHashMap in the screenshot is not built on the heap but as part of the index data structure which is memory mapped. There are ton's on resource online about doc-values and if you have further questions the mailing list would be the best way to ask for help ",
            "author": "Varun Thacker",
            "id": "comment-16370851"
        },
        {
            "date": "2018-02-21T02:19:33+0000",
            "content": "Hi Varun Thacker\n\nThat is only 2nd part which is taking 11% of the memory, that one can be reduced through docValues for fields.\u00a0 but there is one more, memory accumulated in one instance of IntersectTermEnumsFrame[]. So, is this also related or is it completely a different issue? ",
            "author": "Bharat Viswanadham",
            "id": "comment-16370858"
        },
        {
            "date": "2018-02-21T02:22:39+0000",
            "content": "Hi Bharat,\n\n\u00a0\n\nPlease post the complete stack trace\u00a0as a user-mailing question. We'd be happy to help you there ",
            "author": "Varun Thacker",
            "id": "comment-16370861"
        },
        {
            "date": "2018-02-21T02:34:24+0000",
            "content": "Thank You Varun Thacker sent an email to solr mailing list. ",
            "author": "Bharat Viswanadham",
            "id": "comment-16370868"
        }
    ]
}