{
    "id": "SOLR-6472",
    "title": "Don't require an '!' character at the end of a _route_ (shard.keys) value",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [
            "5.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "A routing key can be specified in the \"route\" parameter which is then hashed and the shard corresponding to the key is selected for querying/indexing. But we require users to specify an exclamation mark at the end to get the right routing otherwise it fails silently or gives the wrong hash. This also applies to the split.key param used in shard splitting.\n\nThis is really annoying because you can forget to add the '!' character at the end and you wouldn't even know why the request was routed incorrectly.\n\nWe should make the '!' character optional and support keys both with and without it.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-14118824",
            "date": "2014-09-02T22:05:17+0000",
            "content": "This is really annoying because you can forget to add the '!' character at the end and you wouldn't even know why the request was routed incorrectly.\n\nA system wouldn't forget to add that \"!\" though.\n\nBut really, this was done on purpose as a feature.  Routing currently works with individual documents... if you leave off the bang, you're saying \"target the shard containing this doc\".   Of course there have been a number of changes to the routing code since the first commit, and I haven't verified that it still works. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14119001",
            "date": "2014-09-03T00:02:59+0000",
            "content": "Routing currently works with individual documents... if you leave off the bang, you're saying \"target the shard containing this doc\".\n\nI understand that but I am not sure what kind of use-cases would require routing by a plain id? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-14119076",
            "date": "2014-09-03T00:47:28+0000",
            "content": "I understand that but I am not sure what kind of use-cases would require routing by a plain id?\n\nNeither am I, but it seems like a better idea to enable use-cases we haven't thought about yet (unless the downsides of doing so are substantial enough of course).\n\nOff the top of my head, one is  doing a commit (to ensure visibility to search) of a specific document.\nAlso, perhaps use-cases where one wants to co-locate one document with another... one would want to specify that via the full id of the document (and not have \"!\" appended automatically). "
        },
        {
            "author": "David Smiley",
            "id": "comment-15213342",
            "date": "2016-03-27T05:18:07+0000",
            "content": "Perhaps if route.field is set, then the lack of a trailing '!' is incorrect?  If so, then CloudSolrClient could auto-add the '!' in this circumstance. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-15213352",
            "date": "2016-03-27T05:56:50+0000",
            "content": "Perhaps if route.field is set, then the lack of a trailing '!' is incorrect?\n\nI guess not. Whether route.field is set or not, is orthogonal to using composite or plain routing keys. Technically you can put a plain key inside route.field and it should still work. "
        },
        {
            "author": "David Smiley",
            "id": "comment-15213792",
            "date": "2016-03-28T04:40:31+0000",
            "content": "Sorry I don't understand.  When route.field is set, what does a \"plain key\" mean?  The value of a your route.field?  I tried that but it didn't work without the '!'.  Do you mean the 'id'?  But docs aren't hashed by the id if you mean that. "
        }
    ]
}