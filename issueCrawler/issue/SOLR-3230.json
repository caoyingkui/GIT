{
    "id": "SOLR-3230",
    "title": "Performance improvement for geofilt by doing a bbox approximation and then Filter",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "spatial"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "This changes \n{!geofilt}\n to use a bounding box and then does a accurate filter.\n\nSee attachment",
    "attachments": {
        "SOLR-3230.patch": "https://issues.apache.org/jira/secure/attachment/12517883/SOLR-3230.patch",
        "SOLR-3230-3.patch": "https://issues.apache.org/jira/secure/attachment/12518776/SOLR-3230-3.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "David Smiley",
            "id": "comment-13227001",
            "date": "2012-03-11T06:31:37+0000",
            "content": "Hi Bill. It appears you forgot to supply a patch. "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13227008",
            "date": "2012-03-11T07:23:25+0000",
            "content": "I am pretty new to Filters and all of this. But it appeared that the SpatialDistanceQuery could just be added to the bbox logic to sequence it. But I could use a code review.\n\n\n    if (options.bbox) {\n  \t  spatial.bboxQuery = result;\n  \t  return spatial;\n    } else {\n\t    result.add(spatial, BooleanClause.Occur.MUST);\n\t    return result;\n    }\n  }\n\n "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13227009",
            "date": "2012-03-11T07:24:22+0000",
            "content": "I did not add a new filter, since it seems a no brainer to always do the bbox approximation first. "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13227011",
            "date": "2012-03-11T07:30:02+0000",
            "content": "Ohh. Using exampledate. Score is the distance haversine.\n\nhttp://localhost:8983/solr/select?q=\n{!func}geodist()&fl=score,store&sort=score asc&sfield=store&d=348&fq={!geofilt}&pt=45.19614,-93.90341\n\u2013 returns 7\n\nhttp://localhost:8983/solr/select?q={!func}\ngeodist()&fl=score,store&sort=score asc&sfield=store&d=347&fq=\n{!geofilt}\n&pt=45.19614,-93.90341\n\u2013 returns 6\n\nhttp://localhost:8983/solr/select?q=\n{!func}\ngeodist()&fl=score,store&sort=score asc&sfield=store&d=347&fq=\n{!bbox}\n&pt=45.19614,-93.90341\n\u2013 returns 7 (since it is not accurate) "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13227077",
            "date": "2012-03-11T16:37:43+0000",
            "content": "Looks like this patch would probably break post filtering for geofilt since the spatial query would no longer be top-level.\n\ngeofilt already does do a bounding box, but it does it \"frange\" style where it checks the fieldcache against documents.\nIt will tend to be be faster when many points match, and slower when few points match.\nIt will also tend to be faster when cache=false and few points match the main query + other filters.\n\nHence, it's very important to test these differences in the exact context they will be used in (i.e. with typical queries and filters for your app).\n\nOne way to put the bbox before the geofilt when both are non-cached is\n\n  &fq={!bbox cache=false cost=50}\n  &fq={!geofilt cache=false cost=60}\n\n\n\nI'm not sure what the right default is, or if we can somehow dynamically detect which will be better for a particular request.\nWe could add a flag on geofilt to allow switching between the different bounding box styles (fieldcache vs standard range). "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13227261",
            "date": "2012-03-11T22:40:34+0000",
            "content": "Yeah that actually works too.\n\nThere is no way to cache and force the order on 1st request? \n\nParameter? style=range or fieldcache? Default to fieldcache as it is now?\n\nI'll try to do it I guess. Frange is cached well but has too much overhead on initial request for us. We need it to be fast on the initial request. BBox does that for us.\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13227891",
            "date": "2012-03-12T21:00:39+0000",
            "content": "There is no way to cache and force the order on 1st request?\n\nYou would currently need to use the lucene query parser to construct a single query with both:\n\nfq=+_query_:\"{!bbox}\" +_query_:\"{!geofilt}\"\n\n\n\nNot pretty, but lets you experiment at least.\n\nParameter? style=range or fieldcache? Default to fieldcache as it is now?\n\nperhaps method=fc?\nAs far as the default, it's really tough to tell.  For small distances, I'd guess that range queries would normally be faster, and that's likely to be the common case? "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13229046",
            "date": "2012-03-14T07:16:17+0000",
            "content": "Yonik...\n\nI am not that familiar with this code. I do notice 2 methods in LatLonType.java. Is this the right place?\n\npublic Query getFieldQuery(QParser parser, SchemaField field, String externalVal) {\n\npublic Query getRangeQuery(QParser parser, SchemaField field, String part1, String part2, boolean minInclusive, boolean maxInclusive) {\n\nI did not see how these 2 functions are called. In class SpatialDistanceQuery I did not see where you said we are using range or fc... ? Maybe example code ?\n "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13231846",
            "date": "2012-03-17T05:19:58+0000",
            "content": "New version to speed up searching in several cases by doing a bbox and then frange filter instead of the current existing logic.\n\nAdded \n{!geofilt mode=range} "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13233162",
            "date": "2012-03-20T03:30:49+0000",
            "content": "Yonik,\n\nCan you take a peak at my patch?\n\nWould love to get some feedback. We are seeing x2 performance improvements on filtering using this patch. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13412095",
            "date": "2012-07-11T22:25:59+0000",
            "content": "bulk fixing the version info for 4.0-ALPHA and 4.0 all affected issues have \"hoss20120711-bulk-40-change\" in comment "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13429773",
            "date": "2012-08-07T03:42:53+0000",
            "content": "rmuir20120906-bulk-40-change "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13445495",
            "date": "2012-08-31T00:18:01+0000",
            "content": "assigning to yonik to assess current patch since he's been working with Bill on this in the past (no idea how/when/why Grant got assigned) "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13457906",
            "date": "2012-09-18T16:11:59+0000",
            "content": "What's the status on this issue: it hasn't been touched for months. Is it going to make 4.0? "
        },
        {
            "author": "David Smiley",
            "id": "comment-13457967",
            "date": "2012-09-18T17:20:50+0000",
            "content": "FYI, FWIW the new SpatialTwoDoubles does a bbox range query approximation and then does the distance calculation for a circle query shape after.  I'm referring to the Solr adapter to a corresponding Lucene 4 spatial \"strategy\" class.  Looking through the comments above, it seems another option I didn't consider was doing the bbox range on the fieldcache (so-called \"frange\" style). "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717293",
            "date": "2013-07-23T18:47:46+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971099",
            "date": "2014-04-16T12:57:09+0000",
            "content": "Move issue to Solr 4.9. "
        }
    ]
}