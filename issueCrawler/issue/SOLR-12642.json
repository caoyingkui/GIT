{
    "id": "SOLR-12642",
    "title": "SolrCmdDistributor should send updates in batch when use Http2SolrClient?",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "In the past, batch updates are sent in a single stream from the leader, the replica will create a single thread to parse all the updates. For the simplicity of SOLR-12605, the leader is now sending individual updates to replicas, therefore they are now parsing updates in different threads which increase the usage of memory and CPU.\nIn the past, this is an unacceptable approach, because, for every update, we must create different connections to replicas. But with the support of HTTP/2, all updates will be sent in a single connection from leader to a replica. Therefore the cost is not as high as it used to be.\n\nOn the other hand, sending individual updates will improve the indexing performance and better error-handling for failures of a single update in a batch.",
    "attachments": {
        "http2-branch.log": "https://issues.apache.org/jira/secure/attachment/12938751/http2-branch.log",
        "master-branch.log": "https://issues.apache.org/jira/secure/attachment/12938752/master-branch.log"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-08-21T01:40:17+0000",
            "content": "Any comment on this Shawn Heisey, Shalin Shekhar Mangar, Mark Miller, Noble Paul ",
            "author": "Cao Manh Dat",
            "id": "comment-16586786"
        },
        {
            "date": "2018-08-21T06:20:55+0000",
            "content": "It is difficult to make a decision unless we test the performance. How much slower is it? How much overhead is there in terms of memory or cpu for a given batch size between the old and new methods? ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16586992"
        },
        {
            "date": "2018-08-21T13:35:54+0000",
            "content": "If it won't destroy error reporting, I'm all for multiple threads.\n\nShalin Shekhar Mangar I would expect http/2 to be at least as fast, and have the potential to be faster, in situations where it can effectively use one TCP connection for many requests.  If it is slower, we probably did something wrong.  But your point is still valid \u2013 we need to try some different approaches and see what works best.\n\nKeepalive is possible with http 1.1, but still requires multiple connections for simultaneous work.  I do not know if HttpSolrClient is making use of keepalive. ",
            "author": "Shawn Heisey",
            "id": "comment-16587444"
        },
        {
            "date": "2018-08-22T02:27:36+0000",
            "content": "Shawn Heisey, the question is not whether http2 is as fast or faster. The question is how much extra cost is it to process updates independently vs processing them in a batch. There are per-request buffers and computations done by Solr e.g. from parsing headers to deciding which core to route the request to 8KB buffer used by FastInputStream etc. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16588288"
        },
        {
            "date": "2018-09-07T02:48:40+0000",
            "content": "Hi guys, thanks to Shalin Shekhar Mangar works on https://github.com/shalinmangar/solr-perf-tools. I was able to test the performance between jira/http2 branch and master branch. The log results are attached. But I will summary it here.\n\nThere are 4 tests, all of them are testing the perfomance of indexing. Only the last test shows difference between branches since it is the only test using SolrCloud setup.\n\nThe 4th test using CloudSolrClient\u00a0to index 33M wiki documents on a collection with one shard with 1 leader and 1 NRT replica.\n\n\u00a0\n\nThe tests are run on a single\u00a0https://www.packet.net/bare-metal/servers/c1-small/\u00a0machine\n\n\n\nDocuments indexed: 33332620\n\n\nBytes indexed: 32244883917.0\n\n\n\u00a0\njira/http2 branch\nmaster branch\n\n\nTime taken (total) in sec\n1,572.90\n2415.1\n\n\nGarbage generated by replica node (in MB)\n266,847.40\n1,131,187.50\n\n\nGarbage generated by leader node (in MB)\n1,006,244.00\n1,351,830.70\n\n\nTime in GC for replica (ms)\n13.3\n90.9\n\n\nTime in GC for leader (ms)\n88.2\n99\n\n\nAverage System Load\n10.157\n13.525\n\n\nAverage CPU Time of replica node (800 total)\n78.812\n332.467\n\n\nAverage CPU Time of leader node (800 total)\n513.968\n369.281\n\n\nAverage CPU Load of replica node (%)\n10.657\n41.28\n\n\nAverage CPU Load of leader node (%)\n64.048\n46.359\n\n\n\n\n\nNote: 800 in CPU time means, the total power of 8 threads per second\n\nAs we can see the significant improvement on jira/http2 branch. The only downside here is CPU Time seems increased by 40% on leader node.\u00a0I think that by solving this issue the CPU Time will decrease in leader node, but I'm not sure how much it will decrease. Not mention that this seems not the only reason that lead to increased in CPU, may be the CPU increased because the rate of indexing documents in master is much faster in jira/http2 branch. Furthermore, I tried to do this issue but it is quite complex and hidden errors can happen.\u00a0\n\nTherefore I think that this issue is not a must for jira/http2 for merging into master branch. ",
            "author": "Cao Manh Dat",
            "id": "comment-16606648"
        }
    ]
}