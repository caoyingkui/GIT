{
    "id": "LUCENE-5611",
    "title": "Simplify the default indexing chain",
    "details": {
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [
            "core/index"
        ],
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "4.9",
            "6.0"
        ]
    },
    "description": "I think Lucene's current indexing chain has too many classes /\nhierarchy / abstractions, making it look much more complex than it\nreally should be, and discouraging users from experimenting/innovating\nwith their own indexing chains.\n\nAlso, if it were easier to understand/approach, then new developers\nwould more likely try to improve it ... it really should be simpler.\n\nSo I'm exploring a pared back indexing chain, and have a starting patch\nthat I think is looking ok: it seems more approachable than the\ncurrent indexing chain, or at least has fewer strange classes.\n\nI also thought this could give some speedup for tiny documents (a more\ncommon use of Lucene lately), and it looks like, with the evil\noptimizations, this is a ~25% speedup for Geonames docs.  Even without\nthose evil optos it's a bit faster.\n\nThis is very much a work in progress / nocommits, and there are some\nbehavior changes e.g. the new chain requires all fields to have the\nsame TV options (rather than auto-upgrading all fields by the same\nname that the current chain does)...",
    "attachments": {
        "LUCENE-5611.patch": "https://issues.apache.org/jira/secure/attachment/12640543/LUCENE-5611.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13971984",
            "author": "Michael McCandless",
            "content": "Patch... tests sort of pass except for nocommits ... but it's a work in progress. ",
            "date": "2014-04-16T21:35:46+0000"
        },
        {
            "id": "comment-13972152",
            "author": "Robert Muir",
            "content": "Overall I do like the simplification of the abstractions: some comments, a lot of which probably dont need to be dealt with on this issue, but stuff to think about.\n\nI think the specializations in the default chain just work around lack of field reuse? Maybe we should rethink this for Lucene 5, some way that makes it easier and more intuitive so that this reuse isn't necessary for good performance.\n\nAs far as the LuceneTestCase nocommit, we have some similar situations elsewhere, like RandomPF/RandomCodec where we \"remember\" for a field for that test class and are consistent. I think thats enough for good coverage? If we want to mix things up, a test can do that manually.\n\nI keep going back and forth on the StoredFieldsWriter codec api change: I can live with it (assuming javadocs are fixed, heh), and I think its ok for a step (to prevent bogus passes on the fields), but it reminds me of the old postings API... perhaps a pull model is warranted, where the writer actually just uses the visitor API or something simple like that. It might actually make it cleaner, for example uncompressed stored fields wouldn't need to buffer up in a RAMOutputStream, it could just do the bogus pass IW was doing before.\n\nAs far as the vectors change, I think its an ok tradeoff. If there are concerns maybe o.a.l.document could help. But i dont think it makes sense to use conflicting vectors values for the same field name... in the same doc.\n\nAre the new checks in field mandatory? What happens if a custom IndexableField does this (tries to index vectors when not indexed)? ",
            "date": "2014-04-17T00:49:22+0000"
        },
        {
            "id": "comment-13975271",
            "author": "Michael McCandless",
            "content": "I think the specializations in the default chain just work around lack of field reuse? Maybe we should rethink this for Lucene 5, some way that makes it easier and more intuitive so that this reuse isn't necessary for good performance.\n\nLikely Field re-use would get most of that performance gain too?  But\nField reuse is a hassle for apps ... \n\nThis patch is already big enough, and I'd like to focus on simplifying\nthe indexing chain, so I'll remove the specializations here and open a\nfollowon issue ...\n\nAs far as the LuceneTestCase nocommit, we have some similar situations elsewhere, like RandomPF/RandomCodec where we \"remember\" for a field for that test class and are consistent. I think thats enough for good coverage? If we want to mix things up, a test can do that manually.\n\nAhh right, I'll pull that same logic over.\n\nI keep going back and forth on the StoredFieldsWriter codec api change: I can live with it (assuming javadocs are fixed, heh), and I think its ok for a step (to prevent bogus passes on the fields), but it reminds me of the old postings API... perhaps a pull model is warranted, where the writer actually just uses the visitor API or something simple like that. It might actually make it cleaner, for example uncompressed stored fields wouldn't need to buffer up in a RAMOutputStream, it could just do the bogus pass IW was doing before.\n\nOK I'll fix the javadocs and open a new issue that we should try the\nvisitor API for stored fields?\n\nAs far as the vectors change, I think its an ok tradeoff. If there are concerns maybe o.a.l.document could help. But i dont think it makes sense to use conflicting vectors values for the same field name... in the same doc.\n\nYeah I think it's really strange how Lucene auto-upgrades all TV\nsettings for all field instances by the same field name ... this is\nprobably unexpected and users on upgrading would see this is happening\nand have to be explicit about it themselves.  I think that's a good\nthing ...\n\nAre the new checks in field mandatory? What happens if a custom IndexableField does this (tries to index vectors when not indexed)?\n\nGood question, I'll add a test & make sure indexer catches it for\na custom IF. ",
            "date": "2014-04-20T20:34:51+0000"
        },
        {
            "id": "comment-13979851",
            "author": "Michael McCandless",
            "content": "New patch, I think it's ready.  I fixed all nocommits, javadocs.\n\nI removed the specialization for String/NumericField; these gave decent performance gains, but we should pursue it separately. ",
            "date": "2014-04-24T15:40:29+0000"
        },
        {
            "id": "comment-13983071",
            "author": "Robert Muir",
            "content": "In StoredFieldsWriter:\n\n\n- *   <li>For every document, {@link #startDocument(int)} is called,\n+ *   <li>For every document, {@link #startDocument()} is called,\n  *       informing the Codec how many fields will be written.\n\n\n\nThis javadoc \"compiles\" but now does not make sense because we don't pass numFields as a parameter anymore.\n\nThe attribute handling in the indexing chain got more confusing and complicated. Can we factor this into FieldInvertState?\n\nIts bogus we call hasAttribute + getAttribute, besides making the code more complicated, its two hashmap lookups for 2 atts. We should add a method to attribute source that acts like map.get (returns an attribute, or null if it doesnt exist). Or simple change the semantics of getAttribute to do that. This can be a followup issue.\n\nI will keep reviewing, i only got thru the first 3 or 4 files in the patch. ",
            "date": "2014-04-28T15:01:29+0000"
        },
        {
            "id": "comment-13983254",
            "author": "ASF subversion and git services",
            "content": "Commit 1590720 from Michael McCandless in branch 'dev/branches/lucene5611'\n[ https://svn.apache.org/r1590720 ]\n\nLUCENE-5611: make branch ",
            "date": "2014-04-28T17:30:30+0000"
        },
        {
            "id": "comment-13983256",
            "author": "ASF subversion and git services",
            "content": "Commit 1590721 from Michael McCandless in branch 'dev/branches/lucene5611'\n[ https://svn.apache.org/r1590721 ]\n\nLUCENE-5611: put current patch on branch ",
            "date": "2014-04-28T17:31:14+0000"
        },
        {
            "id": "comment-13983341",
            "author": "ASF subversion and git services",
            "content": "Commit 1590731 from Robert Muir in branch 'dev/branches/lucene5611'\n[ https://svn.apache.org/r1590731 ]\n\nLUCENE-5611: fix the crazy getAttribute API to prevent double lookups and extra code everywhere ",
            "date": "2014-04-28T18:13:17+0000"
        },
        {
            "id": "comment-13983390",
            "author": "ASF subversion and git services",
            "content": "Commit 1590747 from Robert Muir in branch 'dev/branches/lucene5611'\n[ https://svn.apache.org/r1590747 ]\n\nLUCENE-5611: move attribute juggling to a fieldinvertstate setter ",
            "date": "2014-04-28T18:55:38+0000"
        },
        {
            "id": "comment-13983867",
            "author": "ASF subversion and git services",
            "content": "Commit 1590858 from Robert Muir in branch 'dev/branches/lucene5611'\n[ https://svn.apache.org/r1590858 ]\n\nLUCENE-5611: indexing optimizations, dont compute CRC for internal-use of RAMOutputStream, dont do heavy per-term stuff in skipper until we actually must buffer skipdata ",
            "date": "2014-04-29T01:49:25+0000"
        },
        {
            "id": "comment-13984299",
            "author": "Robert Muir",
            "content": "I think another followup for this issue should be to do something about all the conflicting term vector option possibilities. Maybe it should have something more like IndexOptions. Just something to think about.\n\nAnyway I did benchmarking and reviewing, +1 to commit the change. its way simpler and easier to work with. ",
            "date": "2014-04-29T13:52:31+0000"
        },
        {
            "id": "comment-13984312",
            "author": "Michael McCandless",
            "content": "Thanks Rob, I'll merge back to trunk and commit, and work on backporting to 4.x ... will take time because there is no separate StoredDocument there. ",
            "date": "2014-04-29T14:00:17+0000"
        },
        {
            "id": "comment-13984515",
            "author": "ASF subversion and git services",
            "content": "Commit 1591025 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1591025 ]\n\nLUCENE-5611: simplify the default indexing chain ",
            "date": "2014-04-29T17:18:43+0000"
        },
        {
            "id": "comment-13984849",
            "author": "ASF subversion and git services",
            "content": "Commit 1591116 from Michael McCandless in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1591116 ]\n\nLUCENE-5611: simplify the default indexing chain ",
            "date": "2014-04-29T21:46:54+0000"
        },
        {
            "id": "comment-13985712",
            "author": "ASF subversion and git services",
            "content": "Commit 1591391 from Michael McCandless in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1591391 ]\n\nLUCENE-5611: always call PerField.finish even on non-aborting exc ",
            "date": "2014-04-30T16:39:36+0000"
        },
        {
            "id": "comment-13985763",
            "author": "ASF subversion and git services",
            "content": "Commit 1591399 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1591399 ]\n\nLUCENE-5611: always call PerField.finish even on non-aborting exc ",
            "date": "2014-04-30T17:12:55+0000"
        },
        {
            "id": "comment-13986472",
            "author": "ASF subversion and git services",
            "content": "Commit 1591587 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1591587 ]\n\nLUCENE-5611: fix dv exceptions to be non-aborting ",
            "date": "2014-05-01T10:06:04+0000"
        },
        {
            "id": "comment-13986476",
            "author": "ASF subversion and git services",
            "content": "Commit 1591588 from Robert Muir in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1591588 ]\n\nLUCENE-5611: test that dv exceptions are non-aborting ",
            "date": "2014-05-01T10:14:20+0000"
        },
        {
            "id": "comment-13986517",
            "author": "ASF subversion and git services",
            "content": "Commit 1591616 from Michael McCandless in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1591616 ]\n\nLUCENE-5611: always abort if we hit exc in StoredFieldsWriter.start/FinishDocument ",
            "date": "2014-05-01T11:34:45+0000"
        },
        {
            "id": "comment-13986566",
            "author": "ASF subversion and git services",
            "content": "Commit 1591657 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1591657 ]\n\nLUCENE-5611: always abort if we hit exc in StoredFieldsWriter.start/FinishDocument ",
            "date": "2014-05-01T13:32:32+0000"
        },
        {
            "id": "comment-13986568",
            "author": "ASF subversion and git services",
            "content": "Commit 1591660 from Michael McCandless in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1591660 ]\n\nLUCENE-5611: increment lastStoredDocID in one plase; add Asserting.toString ",
            "date": "2014-05-01T13:35:35+0000"
        },
        {
            "id": "comment-13986730",
            "author": "ASF subversion and git services",
            "content": "Commit 1591700 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1591700 ]\n\nLUCENE-5611: don't abort segment if term vector settings are wrong ",
            "date": "2014-05-01T16:28:22+0000"
        },
        {
            "id": "comment-13986731",
            "author": "ASF subversion and git services",
            "content": "Commit 1591701 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1591701 ]\n\nLUCENE-5611: nuke dup buggy test ",
            "date": "2014-05-01T16:28:35+0000"
        },
        {
            "id": "comment-13986735",
            "author": "ASF subversion and git services",
            "content": "Commit 1591702 from Robert Muir in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1591702 ]\n\nLUCENE-5611: nuke dup buggy test ",
            "date": "2014-05-01T16:30:09+0000"
        },
        {
            "id": "comment-13986748",
            "author": "ASF subversion and git services",
            "content": "Commit 1591706 from Michael McCandless in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1591706 ]\n\nLUCENE-5611: don't abort segment if term vector settings are wrong ",
            "date": "2014-05-01T16:39:29+0000"
        },
        {
            "id": "comment-13987282",
            "author": "ASF subversion and git services",
            "content": "Commit 1591807 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1591807 ]\n\nLUCENE-5611: lazy-init the stored fields writer like before to prevent leaks ",
            "date": "2014-05-02T02:48:41+0000"
        },
        {
            "id": "comment-13987283",
            "author": "ASF subversion and git services",
            "content": "Commit 1591808 from Robert Muir in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1591808 ]\n\nLUCENE-5611: lazy-init the stored fields writer like before to prevent leaks ",
            "date": "2014-05-02T02:54:54+0000"
        }
    ]
}