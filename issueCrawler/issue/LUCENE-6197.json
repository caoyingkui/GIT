{
    "id": "LUCENE-6197",
    "title": "ConcurrentMergeScheduler should not stall its own merge threads!",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.0",
            "5.1",
            "6.0"
        ],
        "priority": "Blocker",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "http://build-eu-00.elasticsearch.org/job/lucene_trunk_linux_java8_64_analyzers/25834\nuncovered this issue.\n\nI accidentally introduced this with auto-IO-throttle (LUCENE-6119)\n... the CMS.maybeStall method, which is supposed to block \"segment\nproducing\" threads so indexing slows down when merges cannot keep up,\ncan now sometimes block its own merge threads.  This happens when the merge\nthread re-invokes CMS.merge after it finishes, so new merges can kick\noff.\n\nThis is really silly, since merge threads are not segment producers,\nbut rather the \"messengers\", spawned by the true segment producers,\nso CMS should not shoot the messenger here.\n\nI think it's also possible this could lead to deadlock in CMS, but I'm\nnot certain, and I couldn't provoke it.\n\nI'd like to fix this for 5.0 because it was first introduced in 5.0\nand not yet released...",
    "attachments": {
        "LUCENE-6197.patch": "https://issues.apache.org/jira/secure/attachment/12694187/LUCENE-6197.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14289516",
            "author": "Michael McCandless",
            "date": "2015-01-23T16:58:31+0000",
            "content": "Patch, I think it's ready. "
        },
        {
            "id": "comment-14289916",
            "author": "Robert Muir",
            "date": "2015-01-23T20:31:35+0000",
            "content": "Is there a way you can elaborate on the trigger == MergeTrigger.MERGE_FINISHED? I don't understand why its the only case where we do this. why not CLOSING too, etc? "
        },
        {
            "id": "comment-14289988",
            "author": "Michael McCandless",
            "date": "2015-01-23T21:15:32+0000",
            "content": "Is there a way you can elaborate on the trigger == MergeTrigger.MERGE_FINISHED? I don't understand why its the only case where we do this. why not CLOSING too, etc?\n\nI singled out this case because it's the trigger that the merge threads pass when they invoke CMS.merge after finishing their original merge.\n\nI think it's dangerous to do the same logic on MergeTrigger.CLOSING: it would mean that when you close IW, with waitForMerges=true, and there are backlog'd merges, then we would drop them instead of letting them schedule and run.\n\nMaybe another solution I could do here is to check Thread.currentThread() and if that is one of our merge threads, skip the stalling (instead of checking the MergeTrigger).  Then we don't need to add MergeTrigger to maybeStall ... I'll explore that. "
        },
        {
            "id": "comment-14290007",
            "author": "Robert Muir",
            "date": "2015-01-23T21:25:44+0000",
            "content": "\nMaybe another solution I could do here is to check Thread.currentThread() and if that is one of our merge threads, skip the stalling (instead of checking the MergeTrigger). Then we don't need to add MergeTrigger to maybeStall ... I'll explore that.\n\nOK, thank you, I would not have asked the question if the logic was coded that way, as I was expecting something like that and confused about MergeTrigger logic and if/why that really encapsulates all cases. "
        },
        {
            "id": "comment-14290081",
            "author": "Michael McCandless",
            "date": "2015-01-23T22:08:42+0000",
            "content": "New patch, just checking the current thread and avoiding stalling if it's a merge thread. "
        },
        {
            "id": "comment-14290274",
            "author": "Robert Muir",
            "date": "2015-01-24T00:40:33+0000",
            "content": "Thanks mike, much improved! "
        },
        {
            "id": "comment-14290646",
            "author": "ASF subversion and git services",
            "date": "2015-01-24T15:03:41+0000",
            "content": "Commit 1654533 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1654533 ]\n\nLUCENE-6197: CMS should not stall its own merge threads "
        },
        {
            "id": "comment-14290660",
            "author": "ASF subversion and git services",
            "date": "2015-01-24T15:16:51+0000",
            "content": "Commit 1654537 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1654537 ]\n\nLUCENE-6197: CMS should not stall its own merge threads "
        },
        {
            "id": "comment-14290661",
            "author": "ASF subversion and git services",
            "date": "2015-01-24T15:18:13+0000",
            "content": "Commit 1654538 from Michael McCandless in branch 'dev/branches/lucene_solr_5_0'\n[ https://svn.apache.org/r1654538 ]\n\nLUCENE-6197: CMS should not stall its own merge threads "
        },
        {
            "id": "comment-14332967",
            "author": "Anshum Gupta",
            "date": "2015-02-23T05:02:51+0000",
            "content": "Bulk close after 5.0 release. "
        }
    ]
}