{
    "id": "LUCENE-1054",
    "title": "TermDocs.skipTo fails with an ArrayOutOfBoundsException from BitVector",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/index",
            "core/query/scoring",
            "core/search",
            "core/termvectors"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "2.2",
        "resolution": "Duplicate",
        "status": "Resolved"
    },
    "description": "After a number of calls to TermDocs.skipTo, the following exception is thrown\n\njava.lang.ArrayIndexOutOfBoundsException: Array index out of range: 101306\n      at org.apache.lucene.util.BitVector.get(BitVector.java:72)\n      at org.apache.lucene.index.SegmentTermDocs.next(SegmentTermDocs.java:118)\n      at org.apache.lucene.index.SegmentTermDocs.skipTo(SegmentTermDocs.java:176)\n      at org.apache.lucene.index.MultiTermDocs.skipTo(MultiReader.java:413)\n\nThis error only occurs in 2.2 works okay in 2.1 and in 2.2 if the index is built using 2.1. The following demonstrates the error. The document being skipTo is not greater than the number of documents in the index.\n\n\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.Random;\n\nimport org.apache.lucene.analysis.standard.StandardAnalyzer;\nimport org.apache.lucene.document.Document;\nimport org.apache.lucene.document.Field; import org.apache.lucene.document.Field.Index;\nimport org.apache.lucene.document.Field.Store;\nimport org.apache.lucene.index.CorruptIndexException;\nimport org.apache.lucene.index.IndexReader;\nimport org.apache.lucene.index.IndexWriter;\nimport org.apache.lucene.index.MultiReader;\nimport org.apache.lucene.index.Term;\nimport org.apache.lucene.index.TermDocs; import org.apache.lucene.store.FSDirectory;\nimport org.apache.lucene.store.LockObtainFailedException;\n\npublic class Test4 {\n\n        /**\n\n\t@param args\n\t@throws IOException\n\t@throws LockObtainFailedException\n\t@throws CorruptIndexException\n         */\n        public static void main(String[] args) throws Exception {\n                Random rand = new Random(0);\n                FSDirectory[] dirs = new FSDirectory[10];\n                boolean build = false;\n                for (int i = 0; i < dirs.length; i++) {\n                        dirs[i] = FSDirectory.getDirectory(\"c:\" + File.separator + \"temp\"\n                                        + File.separator + \"lucenetest\" + File.separator\n                                        + Integer.toString);\n                        if (!IndexReader.indexExists(dirs[i])) \nUnknown macro: {                                if (!build) {\n                                        System.out.println(\"Building Test Index Start\");\n                                }                                build = true;                                System.out.println(\"Building Index} \n                        IndexReader reader = IndexReader.open(dirs[i]);\n                        for (int j = 0; j < 1000; j++) \n{\n                                reader.deleteDocument(rand.nextInt(reader.maxDoc()));\n                        }\n                        reader.close();\n                }\n                if (build) \n{\n                        System.out.println(\"Building Test Index Complete\");\n                }\n                System.out.println(\"Test Start\");\n                IndexReader[] readers = new IndexReader[dirs.length];\n                for (int i = 0; i < dirs.length; i++) \n{\n                        readers[i] = IndexReader.open(dirs[i]);\n                }\n                IndexReader reader = new MultiReader(readers);\n                TermDocs docs = reader.termDocs();\n                for (int i = 0; i < 100; i++) {\n                        for (int j = 0; j < 1000; j++) \nUnknown macro: {                                try {\n                                        test(reader, docs, Integer.toString(i), Integer.toString(j));\n                                } catch (Exception e) {\n                                        System.err.println(\"maxdoc=\" + reader.maxDoc());\n                                        System.err.println(\"Test Failed at i=\" + i + \" j=\" + j);\n                                        throw e;\n                                }                        } \n                }\n                docs.close();\n                reader.close();\n                System.out.println(\"Test Complete\");\n        }\n\n\n\n        private static void test(IndexReader reader, TermDocs docs, String i,\n                        String j) throws Exception {\n                docs.seek(new Term(\"i\", i));\n                while (docs.next())\n                        ;\n                docs.seek(new Term(\"j\", j));\n                while (docs.next())\n                        ;\n                docs.seek(new Term(\"i\", i));\n                if (docs.next()) {\n                        int doc = docs.doc();\n                        try {\n                                while (docs.skipTo(doc + 1000)) \n{\n                                        doc = docs.doc();\n                                }\n                        } catch (Exception e) {\n                                System.err.println(\"doc=\" + (doc + 1000) + \": deleted=\"\n                                                + reader.isDeleted(doc + 1000));\n                                throw e;\n                        }\n                }\n                docs.seek(new Term(\"j\", j));\n                if (docs.next()) {\n                        int doc = docs.doc();\n                        try {\n                                while (docs.skipTo(doc + 1000)) {                                        doc = docs.doc();                                }\n                        } catch (Exception e) \n{\n                                System.err.println(\"doc=\" + doc);\n                                throw e;\n                        }\n                }\n        }\n\n}",
    "attachments": {
        "TestSkipTo.java": "https://issues.apache.org/jira/secure/attachment/12369529/TestSkipTo.java",
        "Test4.java": "https://issues.apache.org/jira/secure/attachment/12369511/Test4.java"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2007-11-14T15:04:36+0000",
            "content": "I turned the attachment into a Lucene JUnit test (attached) and indeed I see the failure on 2.2.0 but I do not see the failure on trunk. ",
            "author": "Michael McCandless",
            "id": "comment-12542480"
        },
        {
            "date": "2008-01-07T21:22:06+0000",
            "content": "This issue was fixed by the same fix for LUCENE-951. ",
            "author": "Michael McCandless",
            "id": "comment-12556706"
        }
    ]
}