{
    "id": "SOLR-1177",
    "title": "Distributed TermsComponent",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [
            "1.5",
            "3.1",
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "TermsComponent should be distributed",
    "attachments": {
        "SOLR-1177.patch": "https://issues.apache.org/jira/secure/attachment/12408597/SOLR-1177.patch",
        "TermsComponent.java": "https://issues.apache.org/jira/secure/attachment/12408751/TermsComponent.java",
        "TermsComponent.patch": "https://issues.apache.org/jira/secure/attachment/12408750/TermsComponent.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Matt Weber",
            "id": "comment-12711200",
            "date": "2009-05-20T15:57:33+0000",
            "content": "Here is my first attempt at a patch that is not currently working.  For some reason only the prepare and process methods are being called.  It seems that the shards parameter is not being honored like it is in the other distributed components because rb.shards is always null.  I have looked at the other distributed components and did not notice them doing anything special with the shards parameter.   I have based this code on the information from http://wiki.apache.org/solr/WritingDistributedSearchComponents and looking though the FacetComponent, DebugComponent, StatsComponent, and HighlightComponent code.  Any help figuring out why the other methods are not being called is greatly appreciated.  Please ignore the println statments, they are for debug only and will be removed in the finalized, working patch.\n\nThanks! "
        },
        {
            "author": "Matthew Woytowitz",
            "id": "comment-12711848",
            "date": "2009-05-21T22:37:35+0000",
            "content": "I got the previous patch working.  It was we close.  I attached the java file and a patch for just the TermsComponent "
        },
        {
            "author": "Matt Weber",
            "id": "comment-12712242",
            "date": "2009-05-22T20:33:37+0000",
            "content": "I have cleaned up the patch, tested it against the latest version of trunk and wrote some unit tests.  This patch invalidates SOLR-1156 because it also includes sorting support. "
        },
        {
            "author": "Matt Weber",
            "id": "comment-12712243",
            "date": "2009-05-22T20:34:59+0000",
            "content": "This patch includes SOLR-1156 "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12789305",
            "date": "2009-12-11T13:36:54+0000",
            "content": "\n\tBased on Matt's patch\n\tSynced to trunk\n\tUses BaseDistributedTestCase\n\n\n\nAll tests pass.\n\nI had to change TermData#frequency to an int to match the output of distributed and non-distributed cases. It is theoretically possible to have the sum of frequencies from all shards to exceed size of an int but I don't think it is practical right now. The problem is that we represent frequency as int everywhere for non-distributed responses. If we want longs in distributed search responses then we must start using longs in non-distributed responses as well to maintain compatibility.\n\nMatt \u2013 There is an issue open for adding SolrJ support for TermsComponent - SOLR-1139. Is it possible to replace the TermsHelper and TermData classes by classes in SOLR-1139? I'd like to have the same classes parsing responses in Solrj and distributed search. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12789334",
            "date": "2009-12-11T14:54:24+0000",
            "content": "The facet component internally uses long to add up distributed facet counts, and then uses this code:\n\n\n// use <int> tags for smaller facet counts (better back compatibility)\n  private Number num(long val) {\n   if (val < Integer.MAX_VALUE) return (int)val;\n   else return val;\n  }\n\n\n\nYes, it's not ideal to switch from <int> to <long> in a running application, but I think it's better than failing or overflowing the int.\nClient code in SolrJ should be written to handle either via ((Number)x).longValue() "
        },
        {
            "author": "Matt Weber",
            "id": "comment-12789336",
            "date": "2009-12-11T15:06:18+0000",
            "content": "Thanks for the update Yonik!  I will see if I can get this and SOLR-1139 using the same classes. "
        },
        {
            "author": "Matt Weber",
            "id": "comment-12789611",
            "date": "2009-12-11T23:45:07+0000",
            "content": "Here is an updated patch that includes Shalin's suggestions:\n\n\n\treplace TermData with TermsResponse.Term\n\tupdates TermsHelper to use the parsing code from TermsResponse\n\n\n\nI also changed TermsResponse.Term#frequency to a long so that we don't overflow when calculating the frequency.  Then to keep back-compatbility with existing code I do the following when writing it to the NamedList:\n\nif (tc.getFrequency() >= freqmin && tc.getFrequency() <= freqmax) {\n    fieldterms.add(tc.getTerm(), ((Number)tc.getFrequency()).intValue());\n    cnt++;\n}\n\nIs this a good approach?\n\n\nThis new patch includes SOLR-1139.\n "
        },
        {
            "author": "Matt Weber",
            "id": "comment-12789613",
            "date": "2009-12-11T23:47:36+0000",
            "content": "The latest version of this patch includes SOLR-1139 since we are reusing code from that patch. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12789790",
            "date": "2009-12-12T21:06:54+0000",
            "content": "Thanks Matt. Can you please attach the relevant portions to SOLR-1139. We can commit SOLR-1139 first and then resolve this one. "
        },
        {
            "author": "Matt Weber",
            "id": "comment-12789794",
            "date": "2009-12-12T21:17:36+0000",
            "content": "The latest SOLR-1139 patch is included inside the latest patch I attached to this ticket.  Should I separate them? "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12789795",
            "date": "2009-12-12T21:31:46+0000",
            "content": "The latest SOLR-1139 patch is included inside the latest patch I attached to this ticket. Should I separate them? \n\nYes. I'll commit SOLR-1139 first so remove those classes from the current patch.\n\nPS: I'm sorry if I am confusing you. It is 3AM here and I'm a little confused myself  "
        },
        {
            "author": "Matt Weber",
            "id": "comment-12789799",
            "date": "2009-12-12T21:52:38+0000",
            "content": "New patch that DOES NOT include the code for SOLR-1139.  Make sure you have SOLR-1139 applied before using this patch. "
        },
        {
            "author": "Matt Weber",
            "id": "comment-12789800",
            "date": "2009-12-12T21:53:53+0000",
            "content": "The latest version of this patch depends on SOLR-1139 being applied. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12790016",
            "date": "2009-12-14T07:05:17+0000",
            "content": "\nif (tc.getFrequency() >= freqmin && tc.getFrequency() <= freqmax) {\n  fieldterms.add(tc.getTerm(), ((Number)tc.getFrequency()).intValue()); cnt++; \n}\n\n\n\nI changed freqmin and freqmax to long and used Yonik's method to write int if possible or else switch to longs in the response.\n\nI'll commit this shortly. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12790017",
            "date": "2009-12-14T07:06:49+0000",
            "content": "Committed revision 890199.\n\nThanks Matt! "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872678",
            "date": "2010-05-27T22:59:28+0000",
            "content": "Correcting Fix Version based on CHANGES.txt, see this thread for more details...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13013064",
            "date": "2011-03-30T15:45:26+0000",
            "content": "Bulk close for 3.1.0 release "
        }
    ]
}