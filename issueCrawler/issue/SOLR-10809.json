{
    "id": "SOLR-10809",
    "title": "Get precommit lint warnings out of Solr core",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "7.3"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Changing to fit \"the new paradigm\" of de-linting a directory at a time. I hope to get precommit to fail on precommit warnings from some point on down the tree, and solr/core is the first unit I've been working on.\n\nI'll have a patch soon.",
    "attachments": {
        "SOLR-10809.patch": "https://issues.apache.org/jira/secure/attachment/12910264/SOLR-10809.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-02-01T04:32:34+0000",
            "content": "Yonik Seeley Any objection to removing Closeble from DocSetBase? I'm looking at precommit warnings in test code and this is one. This is the code, and if the off-heap idea isn't going anywhere soon it seems like it could be removed:\n{{  /** FUTURE: for off-heap */\n  @Override\n  public void close() throws IOException {\n  }\n}} ",
            "author": "Erick Erickson",
            "id": "comment-16347999"
        },
        {
            "date": "2018-02-12T17:56:34+0000",
            "content": "Preliminary patch attached. Anyone with the spare time to glance over some bits is welcome. A couple of notes:\n\nLook for my initials (EOE). I'd put //nocommit in, but that aborts precommit before generating warnings...\n\nThe bits marked with EOE are things I want to look at more closely. All the times I added SuppressWarnings are places that seem to cause test failures, I dug into the code a bit and think I see why, but again any other eyes on the code are welcome.\n\nSpecifying the Closeable interface then wrapping something else that closeable causes some confusion, especially when the wrap is temporary.\n\nBy and large I've resisted the temptation to rearrange code. One exception is DocSet where I removed the Closeable interface was there for future off-heap implementations, and that's not happening IIUC. Yonik Seeley any objections?\n\nI have to look this over and run the full test suite 5 or 10 times more and see what shakes out. But at this point there are no precommit warnings at all in solr/core and all tests pass (at least there are no new failures, we'll talk some other time about how many routine failures there are and whether we're ever going to stop accepting failing tests as the norm). ",
            "author": "Erick Erickson",
            "id": "comment-16361178"
        },
        {
            "date": "2018-02-15T21:14:48+0000",
            "content": "Assuming my test runs don't show any new errors, I'll commit this before Monday for sure, but probably tomorrow sometime unless there are objections. ",
            "author": "Erick Erickson",
            "id": "comment-16366265"
        },
        {
            "date": "2018-02-22T01:15:42+0000",
            "content": "This is getting closer. I ran into some issues on this latest go-round, and I'd particularly like Joel BernsteinKevin RisdenDennis Gove and Gethin James to weigh in. Basically, a number of the close operations on streams had to have null checks included to pass the tests. That part seems fairly safe. I didn't go very far into trying to figure out how these are null when close is called, as I mentioned earlier I'm trying mightily to not rewrite too much.\n\nHowever, StreamExpressionToExpressionTest.testTopicStream still fails. The root of the issue is that TopicStream.close() calls TopicStream.persistCheckpoints(), which fails in this try block because cloudSolrClient is null. This is about line 469 in my code.\n    try \n{\n      cloudSolrClient.request(request);\n     .\n     . \n    .\n }\n\nIs it as simple as returning from persistCheckpoints if cloudSolrClient is null and is that reasonable? If so, I'll make that happen.\n\nI also changed the following any comments you have welcome.\n\nFeaturesSelectionStream\nTopicStream\nDeamonStream\nFacetStream\nFeaturesSelectionStream\nTextLogitStream\nTopicStream\n\nStreamExpressionTest\nStreamExpressionToExplanationTest\nStreamingTest\nTestJavabinTupleStreamParser\n ",
            "author": "Erick Erickson",
            "id": "comment-16372286"
        },
        {
            "date": "2018-02-22T01:39:22+0000",
            "content": "After a quick review things look OK. I'll have some more time tomorrow to review a little closer. ",
            "author": "Joel Bernstein",
            "id": "comment-16372303"
        },
        {
            "date": "2018-02-26T06:13:04+0000",
            "content": "Final patch. Solrj is next, but I won't start that until after the 7.3 branch has been cut. ",
            "author": "Erick Erickson",
            "id": "comment-16376429"
        },
        {
            "date": "2018-02-26T06:13:54+0000",
            "content": "Commit 6164643882f6f2bf371e53376cc9f0a2a184b150 in lucene-solr's branch refs/heads/master from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6164643 ]\n\nSOLR-10809: Get precommit lint warnings out of Solr core ",
            "author": "ASF subversion and git services",
            "id": "comment-16376430"
        },
        {
            "date": "2018-02-26T06:22:58+0000",
            "content": "Commit 94b7f7dcb2cf35ea4cac7bd142421f4e0ca739fa in lucene-solr's branch refs/heads/branch_7x from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=94b7f7d ]\n\nSOLR-10809: Get precommit lint warnings out of Solr core\n\n(cherry picked from commit 6164643) ",
            "author": "ASF subversion and git services",
            "id": "comment-16376434"
        }
    ]
}