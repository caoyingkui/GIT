{
    "id": "SOLR-8433",
    "title": "IterativeMergeStrategy test failures due to SSL errors  on Windows",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "The AnalyticsMergeStrageyTest is failing on Windows with SSL errors. The failures are occurring during the callbacks to the shards introduced in SOLR-6398.\n\n\n  \n\n[junit4]   2> Caused by: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target\n   [junit4]   2> \tat sun.security.ssl.Alerts.getSSLException(Alerts.java:192)\n   [junit4]   2> \tat sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949)\n   [junit4]   2> \tat sun.security.ssl.Handshaker.fatalSE(Handshaker.java:302)\n   [junit4]   2> \tat sun.security.ssl.Handshaker.fatalSE(Handshaker.java:296)\n   [junit4]   2> \tat sun.security.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1509)\n   [junit4]   2> \tat sun.security.ssl.ClientHandshaker.processMessage(ClientHandshaker.java:216)\n   [junit4]   2> \tat sun.security.ssl.Handshaker.processLoop(Handshaker.java:979)\n   [junit4]   2> \tat sun.security.ssl.Handshaker.process_record(Handshaker.java:914)\n   [junit4]   2> \tat sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1062)\n   [junit4]   2> \tat sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1375)\n   [junit4]   2> \tat sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1403)\n   [junit4]   2> \tat sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1387)\n   [junit4]   2> \tat org.apache.http.conn.ssl.SSLSocketFactory.connectSocket(SSLSocketFactory.java:543)\n   [junit4]   2> \tat org.apache.http.conn.ssl.SSLSocketFactory.connectSocket(SSLSocketFactory.java:409)\n   [junit4]   2> \tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:177)\n   [junit4]   2> \tat org.apache.http.impl.conn.ManagedClientConnectionImpl.open(ManagedClientConnectionImpl.java:304)\n   [junit4]   2> \tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:611)\n   [junit4]   2> \tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:446)\n   [junit4]   2> \tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:882)\n   [junit4]   2> \tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)\n   [junit4]   2> \tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:107)\n   [junit4]   2> \tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n   [junit4]   2> \tat org.apache.solr.client.solrj.impl.HttpSolrClient.executeMethod(HttpSolrClient.java:480)\n   [junit4]   2> \t... 11 more\n   [junit4]   2> Caused by: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find \nvalid certification path to requested target\n   [junit4]   2> \tat sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:387)\n   [junit4]   2> \tat sun.security.validator.PKIXValidator.engineValidate(PKIXValidator.java:292)\n   [junit4]   2> \tat sun.security.validator.Validator.validate(Validator.java:260)\n   [junit4]   2> \tat sun.security.ssl.X509TrustManagerImpl.validate(X509TrustManagerImpl.java:324)\n   [junit4]   2> \tat sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:229)\n   [junit4]   2> \tat sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:124)\n   [junit4]   2> \tat sun.security.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1491)\n   [junit4]   2> \t... 29 more\n   [junit4]   2> Caused by: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target\n   [junit4]   2> \tat sun.security.provider.certpath.SunCertPathBuilder.build(SunCertPathBuilder.java:146)\n   [junit4]   2> \tat sun.security.provider.certpath.SunCertPathBuilder.engineBuild(SunCertPathBuilder.java:131)\n   [junit4]   2> \tat java.security.cert.CertPathBuilder.build(CertPathBuilder.java:280)\n   [junit4]   2> \tat sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:382)\n   [junit4]   2> \t... 35 more\n   [junit4]   2>",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-12-17T12:34:21+0000",
            "author": "Joel Bernstein",
            "content": "I'll suppress SSL for the time being until I can resolve the issue. ",
            "id": "comment-15061987"
        },
        {
            "date": "2015-12-17T14:52:01+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1720563 from Joel Bernstein in branch 'dev/trunk'\n[ https://svn.apache.org/r1720563 ]\n\nSOLR-8433: IterativeMergeStrategy test failures due to SSL errors on Windows ",
            "id": "comment-15062140"
        },
        {
            "date": "2015-12-17T14:58:07+0000",
            "author": "Joel Bernstein",
            "content": "Odd, the link above to the revision is returning an error and my changes have'nt shown up in svn.\n\nBelow is the local response from the commit:\n\nSending        solr/core/src/test/org/apache/solr/search/AnalyticsMergeStrategyTest.java\nTransmitting file data .\nCommitted revision 1720563.\n ",
            "id": "comment-15062150"
        },
        {
            "date": "2015-12-17T15:04:17+0000",
            "author": "Joel Bernstein",
            "content": "Ok, the commit has now shown up in svn. This was a delay that I haven't seen before. ",
            "id": "comment-15062159"
        },
        {
            "date": "2015-12-17T21:36:06+0000",
            "author": "Joel Bernstein",
            "content": "A new error has cropped up with the AnalyticsMergeStrategyTest since the last commit. I'm going to add some logging output to see if I can track down the issue. The stack trace is below:\n\n\nCaused by: java.lang.IllegalStateException: Scheme 'http' not registered.\n   [junit4]   2> \tat org.apache.http.conn.scheme.SchemeRegistry.getScheme(SchemeRegistry.java:74)\n   [junit4]   2> \tat org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute(ProxySelectorRoutePlanner.java:140)\n   [junit4]   2> \tat org.apache.http.impl.client.DefaultRequestDirector.determineRoute(DefaultRequestDirector.java:762)\n   [junit4]   2> \tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:381)\n   [junit4]   2> \tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:882)\n   [junit4]   2> \tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)\n   [junit4]   2> \tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:107)\n   [junit4]   2> \tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n   [junit4]   2> \tat org.apache.solr.client.solrj.impl.HttpSolrClient.executeMethod(HttpSolrClient.java:480)\n   [junit4]   2> \tat org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:241)\n   [junit4]   2> \tat org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:230)\n   [junit4]   2> \tat org.apache.solr.client.solrj.SolrRequest.process(SolrRequest.java:150)\n   [junit4]   2> \tat org.apache.solr.client.solrj.SolrRequest.process(SolrRequest.java:167)\n   [junit4]   2> \tat org.apache.solr.handler.component.IterativeMergeStrategy$CallBack.call(IterativeMergeStrategy.java:105)\n   [junit4]   2> \tat org.apache.solr.handler.component.IterativeMergeStrategy$CallBack.call(IterativeMergeStrategy.java:81)\n   [junit4]   2> \tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n   [junit4]   2> \tat org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor$1.run(ExecutorUtil.java:232)\n   [junit4]   2> \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n   [junit4]   2> \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n   [junit4]   2> \t... 1 more\n\n\n ",
            "id": "comment-15062873"
        },
        {
            "date": "2015-12-17T21:45:24+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1720673 from Joel Bernstein in branch 'dev/trunk'\n[ https://svn.apache.org/r1720673 ]\n\nSOLR-8433: Adding logging ",
            "id": "comment-15062886"
        },
        {
            "date": "2015-12-17T22:32:54+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "That particular error happens when trying to make an HTTP request when SSL is enabled. When the test framework enables SSL, it removes the HTTP scheme to ensure that no one is trying to access any URL over HTTP. ",
            "id": "comment-15062982"
        },
        {
            "date": "2015-12-17T23:18:23+0000",
            "author": "Joel Bernstein",
            "content": "Ok, that's really useful info.\n\nThe test case had SSL suppressed at the time, which is odd. And the output in the test logs seem to support this. So it's unclear how this failure occurred.\n\nSince then we've had several passing tests without any changes. I'm not exactly sure what to make of that. \n ",
            "id": "comment-15063062"
        },
        {
            "date": "2015-12-18T12:35:41+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1720768 from Joel Bernstein in branch 'dev/trunk'\n[ https://svn.apache.org/r1720768 ]\n\nSOLR-8433: Adding logging for schemes ",
            "id": "comment-15063900"
        },
        {
            "date": "2015-12-18T12:40:41+0000",
            "author": "Joel Bernstein",
            "content": "We had another test failure with the same stack trace. Again the seed does not reproduce locally. The printout from the logging is below. The SystemDefaultHttpClient is used as expected. The URL has two slash before the collection, but this runs locally (Mac).\n\n[junit4]   2> 1638545 INFO  (qtp1017581784-14858) [    x:collection1] o.a.s.h.c.IterativeMergeStrategy ################ SHARD ADDRESSS ##############:http://127.0.0.1:53098//collection1\n   [junit4]   2> 1638545 INFO  (qtp1017581784-14858) [    x:collection1] o.a.s.h.c.IterativeMergeStrategy ############ HTTP Client #############:class org.apache.http.impl.client.SystemDefaultHttpClient\n   [junit4]   2> 1638545 INFO  (qtp1017581784-14858) [    x:collection1] o.a.s.h.c.IterativeMergeStrategy ################ SHARD ADDRESSS ##############:http://127.0.0.1:36927//collection1\n   [junit4]   2> 1638545 INFO  (qtp1017581784-14858) [    x:collection1] o.a.s.h.c.IterativeMergeStrategy ############ HTTP Client #############:class org.apache.http.impl.client.SystemDefaultHttpClient\n   [junit4]   2> 1638546 INFO  (qtp1017581784-14858) [    x:collection1] o.a.s.h.c.IterativeMergeStrategy ################ SHARD ADDRESSS ##############:http://127.0.0.1:38826//collection1\n   [junit4]   2> 1638546 INFO  (qtp1017581784-14858) [    x:collection1] o.a.s.h.c.IterativeMergeStrategy ############ HTTP Client #############:class org.apache.http.impl.client.SystemDefaultHttpClient ",
            "id": "comment-15063904"
        },
        {
            "date": "2015-12-18T12:42:07+0000",
            "author": "Joel Bernstein",
            "content": "I've added more logging to see the schemes that are present in the http client. ",
            "id": "comment-15063905"
        },
        {
            "date": "2015-12-21T00:49:51+0000",
            "author": "Joel Bernstein",
            "content": "Latest failure shows that the SystemDefaultHttpClient only has the https scheme registered. Since SSL is suppressed for this test, this is a mystery at the moment. I'll dig to see how this might occur.\n\nBelow is the logging from latest failure that prints the schemes. Only https is printed:\n\n[ff01::213]:33332/&rows=10&version=2&q=:&NOW=1450624220964&isShard=true&wt=javabin} hits=3 status=0 QTime=0\n   [junit4]   2> 1536149 INFO  (qtp921621286-14470) [    ] o.a.s.h.c.IterativeMergeStrategy ################ SHARD ADDRESSS ##############:http://127.0.0.1:40373//collection1\n   [junit4]   2> 1536149 INFO  (qtp921621286-14470) [    ] o.a.s.h.c.IterativeMergeStrategy ############ HTTP Client #############:class org.apache.http.impl.client.SystemDefaultHttpClient\n   [junit4]   2> 1536149 INFO  (qtp921621286-14470) [    ] o.a.s.h.c.IterativeMergeStrategy ############ Scheme #############:https\n   [junit4]   2> 1536149 INFO  (qtp921621286-14470) [    ] o.a.s.h.c.IterativeMergeStrategy ################ SHARD ADDRESSS ##############:http://127.0.0.1:36771//collection1\n   [junit4]   2> 1536149 INFO  (qtp921621286-14470) [    ] o.a.s.h.c.IterativeMergeStrategy ############ HTTP Client #############:class org.apache.http.impl.client.SystemDefaultHttpClient\n   [junit4]   2> 1536150 INFO  (qtp921621286-14470) [    ] o.a.s.h.c.IterativeMergeStrategy ############ Scheme #############:https\n   [junit4]   2> 1536150 INFO  (qtp921621286-14470) [    ] o.a.s.h.c.IterativeMergeStrategy ################ SHARD ADDRESSS ##############:http://127.0.0.1:41146//collection1\n   [junit4]   2> 1536150 INFO  (qtp921621286-14470) [    ] o.a.s.h.c.IterativeMergeStrategy ############ HTTP Client #############:class org.apache.http.impl.client.SystemDefaultHttpClient\n   [junit4]   2> 1536150 INFO  (qtp921621286-14470) [    ] o.a.s.h.c.IterativeMergeStrategy ############ Scheme #############:https ",
            "id": "comment-15065949"
        },
        {
            "date": "2015-12-21T14:53:35+0000",
            "author": "Joel Bernstein",
            "content": "Adding some logging to verify which HttpClientConfigurer is used during the failing test. ",
            "id": "comment-15066515"
        },
        {
            "date": "2015-12-21T15:01:34+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1721176 from Joel Bernstein in branch 'dev/trunk'\n[ https://svn.apache.org/r1721176 ]\n\nSOLR-8433: Adding logging for HttpClientConfigurer ",
            "id": "comment-15066523"
        },
        {
            "date": "2015-12-21T15:10:46+0000",
            "author": "Joel Bernstein",
            "content": "As with the other test failures the seed does not reproduce locally (Mac). When running a failing seed locally the HttpClientConfigurer prints out as follows:\n\n[junit4]   2> 6004 INFO  (qtp925754737-57) [    x:collection1] o.a.s.h.c.IterativeMergeStrategy ############### HttpClientConfigurer ##################:class org.apache.solr.client.solrj.impl.HttpClientConfigurer\n\nAlso both the http and https schemes are included in the logging printout:\n\n   [junit4]   2> 6014 INFO  (qtp925754737-57) [    x:collection1] o.a.s.h.c.IterativeMergeStrategy ################ SHARD ADDRESSS ##############:http://127.0.0.1:64488//collection1\n   [junit4]   2> 6014 INFO  (qtp925754737-57) [    x:collection1] o.a.s.h.c.IterativeMergeStrategy ############ HTTP Client #############:class org.apache.http.impl.client.SystemDefaultHttpClient\n   [junit4]   2> 6015 INFO  (qtp925754737-57) [    x:collection1] o.a.s.h.c.IterativeMergeStrategy ############ Scheme #############:http\n   [junit4]   2> 6015 INFO  (qtp925754737-57) [    x:collection1] o.a.s.h.c.IterativeMergeStrategy ############ Scheme #############:https\n   [junit4]   2> 6015 INFO  (qtp925754737-57) [    x:collection1] o.a.s.h.c.IterativeMergeStrategy ################ SHARD ADDRESSS ##############:http://127.0.0.1:64487//collection1\n   [junit4]   2> 6015 INFO  (qtp925754737-57) [    x:collection1] o.a.s.h.c.IterativeMergeStrategy ############ HTTP Client #############:class org.apache.http.impl.client.SystemDefaultHttpClient\n   [junit4]   2> 6015 INFO  (qtp925754737-57) [    x:collection1] o.a.s.h.c.IterativeMergeStrategy ############ Scheme #############:http\n   [junit4]   2> 6015 INFO  (qtp925754737-57) [    x:collection1] o.a.s.h.c.IterativeMergeStrategy ############ Scheme #############:https\n   [junit4]   2> 6015 INFO  (qtp925754737-57) [    x:collection1] o.a.s.h.c.IterativeMergeStrategy ################ SHARD ADDRESSS ##############:http://127.0.0.1:64489//collection1\n   [junit4]   2> 6015 INFO  (qtp925754737-57) [    x:collection1] o.a.s.h.c.IterativeMergeStrategy ############ HTTP Client #############:class org.apache.http.impl.client.SystemDefaultHttpClient\n   [junit4]   2> 6017 INFO  (qtp925754737-57) [    x:collection1] o.a.s.h.c.IterativeMergeStrategy ############ Scheme #############:http\n   [junit4]   2> 6017 INFO  (qtp925754737-57) [    x:collection1] o.a.s.h.c.IterativeMergeStrategy ############ Scheme #############:https\n\n\n\n ",
            "id": "comment-15066535"
        },
        {
            "date": "2015-12-21T15:58:35+0000",
            "author": "Joel Bernstein",
            "content": "It looks like the only place that registry.unregister(\"http\"); is called is in the SSLTestConfig.SSLHttpClientConfigurer which is part of the test framework. The IterativeMergeStrategy now logs the HttpClientConfigurer so I expect to see this class printed out in the next test failure.\n\nStill digging to see how the SSLTestConfig is being used when SSL is suppressed in the test case. ",
            "id": "comment-15066615"
        },
        {
            "date": "2015-12-23T13:32:12+0000",
            "author": "Joel Bernstein",
            "content": "This test failure doesn't seem to be running the latest code: http://jenkins.thetaphi.de/job/Lucene-Solr-trunk-Solaris/277/consoleText\n\nIn the most recent IterativeMergeStrategy the HttpClientConfigurer is logged:\n\nhttps://svn.apache.org/repos/asf/lucene/dev/trunk/solr/core/src/java/org/apache/solr/handler/component/IterativeMergeStrategy.java\nlog.info(\"############### HttpClientConfigurer ##################:\"+configurer.getClass());\n\nThis output is not appearing in the test output but appears on local test runs.\n\nUwe Schindler, is it possible that this test was not run on the latest trunk code? ",
            "id": "comment-15069623"
        },
        {
            "date": "2015-12-23T15:50:36+0000",
            "author": "Uwe Schindler",
            "content": "Uwe Schindler, is it possible that this test was not run on the latest trunk code?\n\nThis run used the SVN revision as noted in build description: Revision: 1721492 (which is now 9 hours ago). So the repository was up-to-date.\n\nAccording to the workspace it also has the log line: <http://jenkins.thetaphi.de/job/Lucene-Solr-trunk-Solaris/ws/solr/core/src/java/org/apache/solr/handler/component/IterativeMergeStrategy.java/*view*/>\n\n\n  static {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(HttpClientUtil.PROP_MAX_CONNECTIONS, 128);\n    params.set(HttpClientUtil.PROP_MAX_CONNECTIONS_PER_HOST, 32);\n    HttpClientConfigurer configurer = HttpClientUtil.getConfigurer();\n    log.info(\"############### HttpClientConfigurer ##################:\"+configurer.getClass());\n    httpClient =  HttpClientUtil.createClient(params);\n  }\n\n\n\nYou might not have seen the log line, because the static block was triggered already by an earlier test running (the class is initialized by the first test that implcitely uses the IterativeMergeStrategy!  ",
            "id": "comment-15069761"
        },
        {
            "date": "2015-12-23T17:02:06+0000",
            "author": "Joel Bernstein",
            "content": "Ok, thanks! Looks like I'll have to log this in another spot for it to appear in the logs. ",
            "id": "comment-15069871"
        },
        {
            "date": "2015-12-24T02:43:03+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1721592 from Joel Bernstein in branch 'dev/trunk'\n[ https://svn.apache.org/r1721592 ]\n\nSOLR-8433: Move logging for HttpClientConfigurer ",
            "id": "comment-15070515"
        },
        {
            "date": "2016-01-06T17:50:59+0000",
            "author": "Joel Bernstein",
            "content": "Uwe Schindler, it appears that the static block being triggered by an earlier test may be the root of these test failures.\n\nWhat I believe is happening is that prior test is triggering the static block which initializes the httpClient. If that test happens to be in SSL mode then the client would be initialized in SSL mode.\n\nThe one thing that is confusing about this is that in theory this should reproduce with the seed. But it doesn't.\n\nI'll change how the httpClient is initialized and see if this stops the test failures. \n ",
            "id": "comment-15085930"
        },
        {
            "date": "2016-01-06T18:16:27+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1723397 from Joel Bernstein in branch 'dev/trunk'\n[ https://svn.apache.org/r1723397 ]\n\nSOLR-8433: Change how HttpClient is initialized in attempt to eliminate test failures ",
            "id": "comment-15085979"
        },
        {
            "date": "2016-01-06T18:27:12+0000",
            "author": "Uwe Schindler",
            "content": "I'll change how the httpClient is initialized and see if this stops the test failures.\n\nBut the HttClient is still static, so if an earlier test initializes it, a later one will use the same. Why is it not creating a new client per instance in the constructor, so the synchronized block and the static one is not needed? ",
            "id": "comment-15086003"
        },
        {
            "date": "2016-01-06T19:20:04+0000",
            "author": "Joel Bernstein",
            "content": "You may be right. But I think the way this is getting triggered by the prior test is through TestAnalyticsQParserPlugin which is loaded for the AnalyticsQueryTest. The AnalyticsQueryTest does not actually run the IterativeMergeStrategy code it just references the class, which is I how the static initializer was being called (I think). The way the code is structured you'd actually have run the IterativeMergeStrategy to initialize the HttpClient, which only one test does. So in theory the HttpClient should be null when the AnalyticsMergeStrategyTest is run.\n\nI figured it would be nice to have a cached httpClient as it does some connection pooling.\n ",
            "id": "comment-15086103"
        },
        {
            "date": "2016-01-12T13:57:49+0000",
            "author": "Joel Bernstein",
            "content": "I think the test errors have stopped, so I'll closeout this ticket. ",
            "id": "comment-15093912"
        }
    ]
}