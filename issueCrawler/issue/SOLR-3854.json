{
    "id": "SOLR-3854",
    "title": "SolrCloud does not work with https",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.7",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "There are a few places in current codebase that assume http is used. This prevents using https when running solr in cloud mode.",
    "attachments": {
        "SOLR-3854v4.patch": "https://issues.apache.org/jira/secure/attachment/12630260/SOLR-3854v4.patch",
        "SOLR-3854v3.patch": "https://issues.apache.org/jira/secure/attachment/12628434/SOLR-3854v3.patch",
        "SOLR-3854.patch": "https://issues.apache.org/jira/secure/attachment/12545724/SOLR-3854.patch",
        "SOLR-3854v2.patch": "https://issues.apache.org/jira/secure/attachment/12627921/SOLR-3854v2.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Sami Siren",
            "id": "comment-13458652",
            "date": "2012-09-19T12:46:00+0000",
            "content": "Here's a patch against trunk that allows one to use https too. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13496290",
            "date": "2012-11-13T16:11:43+0000",
            "content": "this one ready Sami? "
        },
        {
            "author": "Sami Siren",
            "id": "comment-13496294",
            "date": "2012-11-13T16:16:00+0000",
            "content": "I was planning to add some tests too, but got distracted with something else. I'll try to get to this again in near future. "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13535379",
            "date": "2012-12-18T21:53:19+0000",
            "content": "+1 We are running into this problem right now. Glad to see Sami's patch is adding the option to the solr.xml. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13538348",
            "date": "2012-12-21T19:47:04+0000",
            "content": "Updated Sami's patch to trunk to account for recent changes.\n\nExisting tests pass, but still no new tests using https. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13541454",
            "date": "2012-12-31T18:49:57+0000",
            "content": "Sami, Hossman, will you get this in shortly for 4.1 or should I push it to 4.2? "
        },
        {
            "author": "Alexey Serba",
            "id": "comment-13561070",
            "date": "2013-01-23T20:37:49+0000",
            "content": "I've uploaded another patch that I believe is less intrusive.\n\nIt touches only two places:\n\n\n\thost property parsing in ZkController\nhost property supports passing a scheme/protocol already, it just has a tiny bug in the parsing code\n\"ZkController\"\n       Matcher m = URL_PREFIX.matcher(host);\n-      if (m.matches()) {\n-        String prefix = m.group(1);\n-        host = prefix + host;\n-      } else {\n+      if (!m.matches()) {\n         host = \"http://\" + host;\n       }\n\n\n\tI think Solr's distributed shard paramater should support handling scheme/protocol as part of a shard address\n\"HttpShardHandler\"\n       for (int i=0; i<urls.size(); i++) {\n-        urls.set(i, httpShardHandlerFactory.scheme + urls.get(i));\n+        String url = urls.get(i);\n+        if (!URL_PREFIX.matcher(url).matches()) {\n+          url = httpShardHandlerFactory.scheme + url;\n+        }\n+        urls.set(i, url);\n       }\n\n\n\n\n\nWith these two tiny fixes I've been able to run SolrCloud in SSL mode. When you start a node you should pass \"-Dhost=https://localhost\" parameter. Correct https addresses are saved in the Zk's cluster state, used in indexing in SolrCmdDistributor and passed to search handlers as a shard parameter. Am I missing something? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13563935",
            "date": "2013-01-27T21:25:32+0000",
            "content": "One comment:\nIt might be nice to add an option that create https addresses even when auto detecting the host.\n\nOtherwise, I have not looked closely enough to see how the two approaches differ. Sami, hossman? "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13566397",
            "date": "2013-01-30T11:51:58+0000",
            "content": "Have not reviewed in detail. Some use SSL + Basic Authentication. Can you comment on whether these two patches will allow BasicAuth, e.g. by passing -Dhost=https://user:pass@localhost ? What about certificate based auth? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13568373",
            "date": "2013-02-01T01:56:51+0000",
            "content": "I like that alexey's patch is a lot shorter, but i haven't had a chance to compare them closely enough to understand the pros/cons in terms of configurability.\n\nIt might be nice to add an option that create https addresses even when auto detecting the host.\n\nmaybe i'm missing something, but instead of hardcoding a default of \"http\" in zkcontroller like alexey mentioned, couldn't that be done by using cc.getHttpShardHandlerFactory().schema as the default?\n\nIn any case .. i'm not sure that we can reliably make much progress until we can write test for this stuff \u2013 and as a first step i put up a patch in SOLR-4394 to get to the point where we have some simple client<-ssl->solr  tests ... if we move forward on that, then we can take the next step of client<-ssl->solrcloud<-ssl->solrcloud tests "
        },
        {
            "author": "Sam Kass",
            "id": "comment-13632041",
            "date": "2013-04-15T19:03:02+0000",
            "content": "While Alexey's patch is admirably succinct, Sami's patch allows setting the protocol via the solr.xml file where all the other settings are stored, as well as getting rid of a bunch of arbitrary comparisons to the explicit \"http\" string, so seems preferable to me. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717450",
            "date": "2013-07-23T18:48:16+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13857268",
            "date": "2013-12-27T03:05:29+0000",
            "content": "1 from Alexey's approach has been committed. I'm also going to commit 2 - I think this approach should work fine. That will fix the support that I kind of assumed would work way back win.\n\nSami's first class support can then be finished or not at a later time. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13857278",
            "date": "2013-12-27T03:25:40+0000",
            "content": "Hmm...looking a little deeper, it's not too much more work to finish Sami's patch, and I think it's the right long term approach. We already have a spot to set the url scheme for http search requests - I think other http requests should respect that same scheme config. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13857296",
            "date": "2013-12-27T04:14:35+0000",
            "content": "First pass. I took Sami's URLUtils and went through and setup the rest as I thought made the most sense. Pretty similar to what Sami did but with trunk in mind.\n\nI'd like to also stop storing the scheme as part of urls - but that doesn't have to be done in this issue I think. This just ignores the scheme for any address and uses the configured scheme. Better to also ignore the scheme when we first generate or accept the url. "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13888741",
            "date": "2014-02-01T21:19:03+0000",
            "content": "Created a patch that includes a test that runs the \"BasicDistributedZkTest\" in SSL mode. While creating the test there were a couple of places that were causing issues if the wrong scheme was in zookeeper, so I added Sami's \"hostProtocol\" back in to get the test to pass. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13888779",
            "date": "2014-02-01T23:49:35+0000",
            "content": "Thanks! I'll review this soon.\n\nWhile creating the test there were a couple of places that were causing issues if the wrong scheme was in zookeeper, so I added Sami's \"hostProtocol\" back \n\nI think we may just want to track that down. Personally, I don't really like the idea of having to set SSL twice - once for updates and once for searches. I don't really see the use case, and it seems more complicated than necessary. I think it makes sense to simply have one place to set the url scheme for distributed requests.\n\nIt also would have been nice to leave the scheme out of ZooKeeper from the beginning, but I think that can be a later improvement. "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13888821",
            "date": "2014-02-02T04:44:26+0000",
            "content": "I believe the RecoveryStrategy was complaining (among others) as it reads the URL directly from ZooKeeper:\n\n\nString leaderBaseUrl = leaderprops.getStr(ZkStateReader.BASE_URL_PROP);\nString leaderCoreName = leaderprops.getStr(ZkStateReader.CORE_NAME_PROP);\n\nString leaderUrl = ZkCoreNodeProps.getCoreUrl(leaderBaseUrl, leaderCoreName);\n\n\n\nThis same concept is in CloudSolrServer:\n\nZkCoreNodeProps zkProps = new ZkCoreNodeProps(leader);\nString url = zkProps.getBaseUrl() + \"/\" + col.getName();\n\n\n\nCloudSolrServer would need to be updated as well to allow a configurable URL scheme as there isn't a configured HttpShardHandler to grab the value.\n\nI believe it is somewhat reasonable to have each node report the scheme that is able to be used to connect to that specific server, more so for external clients that would like to use the base_url value as reported in zookeeper. Though I do see why needing to configure the url scheme in two different locations isn't optimal, I think it is a little strange that HttpShardHandler throws away the scheme of all passed URLs and inserts it's scheme. How about the HttpShardHandler not strip the schemes off unless a scheme was specifically configured, if that was the case then only the \"hostProtocol\" would need to be configured. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13888825",
            "date": "2014-02-02T05:11:16+0000",
            "content": "That sounds reasonable.\n\nI think hostProtocol is the wrong name though? http://en.wikipedia.org/wiki/URI_scheme "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13889087",
            "date": "2014-02-02T22:26:43+0000",
            "content": "Update the patch with the following changes:\n\n\n\thostProtocol has been changed to hostUrlScheme\n\tNo longer need to specify the \"urlScheme\" on the HttpShardHandlerFactory. The scheme is only stripped/replaced if that value is specifically configured and SolrCloud passes the configured base_url value with the proper http/https scheme.\n\tAdded a test that runs the CloudSolrServerTest in SSL mode\n\n\n\nThere appears to be a few other places that is still hard-coding a scheme:\n\nSolrZkClient.getBaseUrlForNodeName(nodeName)\n...\nreturn \"http://\" + hostAndPort + (path.isEmpty() ? \"\" : (\"/\" + path));\n\n\n\ngetBaseUrlForNodeName is exclusively used by the OverseerCollectionProcessor.\n\nCloudSolrServer.request(request)\n...\nif (request.getPath().equals(\"/admin/collections\")\n        || request.getPath().equals(\"/admin/cores\")) {\n      Set<String> liveNodes = clusterState.getLiveNodes();\n      for (String liveNode : liveNodes) {\n        int splitPointBetweenHostPortAndContext = liveNode.indexOf(\"_\");\n        theUrlList.add(\"http://\"\n            + liveNode.substring(0, splitPointBetweenHostPortAndContext)\n            + \"/\"\n            + URLDecoder.decode(liveNode, \"UTF-8\").substring(\n                splitPointBetweenHostPortAndContext + 1));\n      }\n    }\n...\n\n\n\nNot positive how those two instances should be handled as it isn't dealing with a specific core, but the server in general. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13890977",
            "date": "2014-02-04T18:29:49+0000",
            "content": "Steve - is your latest patch for trunk or branch_4x or does it matter?\n\nSeems to apply ok on trunks, but with offsets:\n\n\n$ patch -p0 < SOLR-3854.patch \npatching file solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner.java\npatching file solr/core/src/java/org/apache/solr/cloud/ElectionContext.java\npatching file solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor.java\nHunk #1 succeeded at 511 (offset 24 lines).\nHunk #2 succeeded at 766 (offset 24 lines).\nHunk #3 succeeded at 1511 (offset 24 lines).\nHunk #4 succeeded at 1646 (offset 24 lines).\nHunk #5 succeeded at 1743 (offset 24 lines).\npatching file solr/core/src/java/org/apache/solr/cloud/SyncStrategy.java\npatching file solr/core/src/java/org/apache/solr/cloud/ZkController.java\npatching file solr/core/src/java/org/apache/solr/core/ConfigSolr.java\npatching file solr/core/src/java/org/apache/solr/core/ConfigSolrXml.java\npatching file solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld.java\npatching file solr/core/src/java/org/apache/solr/core/ZkContainer.java\npatching file solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java\npatching file solr/core/src/java/org/apache/solr/handler/component/HttpShardHandler.java\npatching file solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory.java\npatching file solr/core/src/java/org/apache/solr/update/PeerSync.java\npatching file solr/core/src/test/org/apache/solr/cloud/BasicDistributedSSLZkTest.java\npatching file solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest.java\npatching file solr/core/src/test/org/apache/solr/cloud/ZkControllerTest.java\npatching file solr/core/src/test/org/apache/solr/core/TestSolrXml.java\npatching file solr/core/src/test-files/solr/solr-50-all.xml\npatching file solr/core/src/test-files/solr/solr.xml\npatching file solr/solrj/src/java/org/apache/solr/common/util/URLUtil.java\npatching file solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrServerSSLTest.java\npatching file solr/solrj/src/test/org/apache/solr/common/util/URLUtilTest.java\npatching file solr/solrj/src/test-files/solrj/solr/solr.xml\npatching file solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.java\npatching file solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java\n\n\n\nbut reports some failures on branch_4x:\n\n\n$ patch -p0 < SOLR-3854.patch \npatching file solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner.java\npatching file solr/core/src/java/org/apache/solr/cloud/ElectionContext.java\npatching file solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor.java\nHunk #1 succeeded at 511 (offset 24 lines).\nHunk #2 succeeded at 766 (offset 24 lines).\nHunk #3 succeeded at 1511 (offset 24 lines).\nHunk #4 succeeded at 1646 (offset 24 lines).\nHunk #5 succeeded at 1743 (offset 24 lines).\npatching file solr/core/src/java/org/apache/solr/cloud/SyncStrategy.java\npatching file solr/core/src/java/org/apache/solr/cloud/ZkController.java\npatching file solr/core/src/java/org/apache/solr/core/ConfigSolr.java\nHunk #1 succeeded at 135 (offset 4 lines).\nHunk #2 succeeded at 239 (offset 4 lines).\npatching file solr/core/src/java/org/apache/solr/core/ConfigSolrXml.java\npatching file solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld.java\nHunk #1 succeeded at 149 (offset -2 lines).\npatching file solr/core/src/java/org/apache/solr/core/ZkContainer.java\nHunk #1 FAILED at 65.\nHunk #2 succeeded at 155 (offset 21 lines).\n1 out of 2 hunks FAILED -- saving rejects to file solr/core/src/java/org/apache/solr/core/ZkContainer.java.rej\npatching file solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java\npatching file solr/core/src/java/org/apache/solr/handler/component/HttpShardHandler.java\npatching file solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory.java\npatching file solr/core/src/java/org/apache/solr/update/PeerSync.java\npatching file solr/core/src/test/org/apache/solr/cloud/BasicDistributedSSLZkTest.java\npatching file solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest.java\npatching file solr/core/src/test/org/apache/solr/cloud/ZkControllerTest.java\npatching file solr/core/src/test/org/apache/solr/core/TestSolrXml.java\npatching file solr/core/src/test-files/solr/solr-50-all.xml\npatching file solr/core/src/test-files/solr/solr.xml\npatching file solr/solrj/src/java/org/apache/solr/common/util/URLUtil.java\npatching file solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudSolrServerSSLTest.java\npatching file solr/solrj/src/test/org/apache/solr/common/util/URLUtilTest.java\npatching file solr/solrj/src/test-files/solrj/solr/solr.xml\npatching file solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase.java\npatching file solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java\n\n\n\nAm I doing something wrong or in the wrong place?  I'm admittedly little rusty/unfamiliar with this fast moving (SolrCloud distrib testing) area lately. "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13890992",
            "date": "2014-02-04T18:43:14+0000",
            "content": "The latest patch was for the trunk. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13891278",
            "date": "2014-02-04T21:57:41+0000",
            "content": "Applying that patch to a clean trunk checkout, I'm getting test failures (\"ant test\" from the solr/ subdirectory):\n\n\n   [junit4] Tests with failures (first 10 out of 48):\n   [junit4]   - org.apache.solr.handler.admin.ShowFileRequestHandlerTest.test404ViaHttp\n   [junit4]   - org.apache.solr.handler.admin.ShowFileRequestHandlerTest.testGetRawFile\n   [junit4]   - org.apache.solr.handler.admin.ShowFileRequestHandlerTest.testDirList\n   [junit4]   - org.apache.solr.cloud.OverseerTest.testOverseerFailure\n   [junit4]   - org.apache.solr.cloud.BasicDistributedSSLZkTest.testDistribSearch\n   [junit4]   - org.apache.solr.update.processor.AddSchemaFieldsUpdateProcessorFactoryTest.testSingleField\n   [junit4]   - org.apache.solr.update.processor.AddSchemaFieldsUpdateProcessorFactoryTest.testSingleFieldRoundTrip\n   [junit4]   - org.apache.solr.update.processor.AddSchemaFieldsUpdateProcessorFactoryTest.testSingleFieldDefaultFieldTypeRoundTrip\n   [junit4]   - org.apache.solr.update.processor.AddSchemaFieldsUpdateProcessorFactoryTest.testMultipleFieldsRoundTrip\n   [junit4]   - org.apache.solr.update.processor.AddSchemaFieldsUpdateProcessorFactoryTest.testParseAndAddMultipleFieldsRoundTrip\n\n\n\nI can get the, hopefully relevant details in case that's worthwhile.  All runs clean for others?  "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13891294",
            "date": "2014-02-04T22:14:30+0000",
            "content": "I was running the tests from within Eclipse without problems, will try to run from ant later this evening. Happen to know if there are any gotchas that you need to take into account between the two? "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13891600",
            "date": "2014-02-05T01:58:09+0000",
            "content": "After running the test suite there appears to be some inconsistencies between test runs.\n\nThe first run resulted in 7 failed tests...\nant -Dtests.jvms=8 test\n   [junit4] Tests with failures:\n   [junit4]   - org.apache.solr.analytics.expression.ExpressionTest.powerTest\n   [junit4]   - org.apache.solr.analytics.expression.ExpressionTest.absoluteValueTest\n   [junit4]   - org.apache.solr.analytics.expression.ExpressionTest.divideTest\n   [junit4]   - org.apache.solr.analytics.expression.ExpressionTest.multiplyTest\n   [junit4]   - org.apache.solr.analytics.expression.ExpressionTest.negateTest\n   [junit4]   - org.apache.solr.analytics.expression.ExpressionTest.addTest\n   [junit4]   - org.apache.solr.cloud.BasicDistributedSSLZkTest.testDistribSearch\n   [junit4] \n   [junit4] \n   [junit4] JVM J0:     2.60 ..   692.15 =   689.55s\n   [junit4] JVM J1:     2.12 ..   704.03 =   701.91s\n   [junit4] JVM J2:     2.60 ..   692.29 =   689.69s\n   [junit4] JVM J3:     2.35 ..   692.78 =   690.43s\n   [junit4] JVM J4:     2.12 ..   693.73 =   691.62s\n   [junit4] JVM J5:     2.35 ..   693.26 =   690.92s\n   [junit4] JVM J6:     2.60 ..   696.68 =   694.08s\n   [junit4] JVM J7:     2.35 ..   691.85 =   689.50s\n   [junit4] Execution time total: 11 minutes 44 seconds\n   [junit4] Tests summary: 366 suites, 1591 tests, 7 failures, 27 ignored (14 assumptions)\n\n\n\nTried it again and 3 tests failed...\nant -Dtests.jvms=8 test\n   [junit4] Tests with failures:\n   [junit4]   - org.apache.solr.update.SoftAutoCommitTest.testSoftAndHardCommitMaxTimeMixedAdds\n   [junit4]   - org.apache.solr.cloud.OverseerRolesTest.testDistribSearch\n   [junit4]   - org.apache.solr.cloud.BasicDistributedSSLZkTest.testDistribSearch\n   [junit4] \n   [junit4] \n   [junit4] JVM J0:     2.35 ..   704.78 =   702.43s\n   [junit4] JVM J1:     2.35 ..   704.96 =   702.61s\n   [junit4] JVM J2:     2.37 ..   704.79 =   702.42s\n   [junit4] JVM J3:     2.35 ..   705.01 =   702.66s\n   [junit4] JVM J4:     2.35 ..   704.87 =   702.52s\n   [junit4] JVM J5:     2.35 ..   766.99 =   764.65s\n   [junit4] JVM J6:     2.37 ..   705.05 =   702.68s\n   [junit4] JVM J7:     2.59 ..   704.88 =   702.28s\n   [junit4] Execution time total: 12 minutes 47 seconds\n   [junit4] Tests summary: 366 suites, 1591 tests, 1 error, 2 failures, 26 ignored (13 assumptions)\n\n\n\nDecided to isolate just running the SolrCloud test package and all tests passed...\nant -Dtests.jvms=8 -Dtests.class=org.apache.solr.cloud.* test\n   [junit4] JVM J0:     2.22 ..   352.21 =   349.99s\n   [junit4] JVM J1:     2.23 ..   371.36 =   369.13s\n   [junit4] JVM J2:     2.22 ..   351.94 =   349.72s\n   [junit4] JVM J3:     2.22 ..   351.69 =   349.47s\n   [junit4] JVM J4:     2.48 ..   356.82 =   354.34s\n   [junit4] JVM J5:     2.22 ..   352.47 =   350.25s\n   [junit4] JVM J6:     2.22 ..   353.56 =   351.34s\n   [junit4] JVM J7:     2.22 ..   384.37 =   382.15s\n   [junit4] Execution time total: 6 minutes 24 seconds\n   [junit4] Tests summary: 52 suites, 102 tests, 8 ignored (7 assumptions)\n     [echo] 5 slowest tests:\n[junit4:tophints] 237.14s | org.apache.solr.cloud.ChaosMonkeyNothingIsSafeTest\n[junit4:tophints] 192.24s | org.apache.solr.cloud.BasicDistributedSSLZkTest\n[junit4:tophints] 179.70s | org.apache.solr.cloud.DistribCursorPagingTest\n[junit4:tophints] 179.07s | org.apache.solr.cloud.BasicDistributedZkTest\n[junit4:tophints] 161.44s | org.apache.solr.TestRandomFaceting\n\n\n\nAnyone have ideas why there are inconsistencies between test runs? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13891655",
            "date": "2014-02-05T03:21:07+0000",
            "content": "Most of those are known flakey tests  "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13891868",
            "date": "2014-02-05T07:01:58+0000",
            "content": "New patch for the trunk which allows clients to set a \"urlScheme\" in the recently created \"/clusterprops.json\" file (SOLR-5610). This allows the OverseerCollectionProcessor & CloudSolrServer to build the proper schemed url given a plain node name outside of the knowledge of each individual core's urlScheme configuration. The functionality enables admin functionality to manipulate the cluster: create/delete/split/etc. Those were the last holdouts that were hard coding a url scheme. "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13892130",
            "date": "2014-02-05T14:10:10+0000",
            "content": "Just thinking about this a little bit more, if the \"urlScheme\" is defined in the clusterprops.json file then we can drop the \"urlScheme\" configuration in the solr.xml - whatever is defined in the clusterprops is applied to all cores on all servers within the cluster. This may make configuration a bit easier but at the potential loss of flexibility, is there a use case where someone only wants to run https in a certain core or certain machines within the cluster (not all). Alternatively, we can use the value defined in the cluster props as the default value if no urlScheme is defined specifically on that core (if not specified anywhere default to http). Just a few thoughts... "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13893051",
            "date": "2014-02-06T05:16:10+0000",
            "content": "That all sounds reasonable to me... "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13893055",
            "date": "2014-02-06T05:20:07+0000",
            "content": "Updated patch from trunk. Chatted with Mark and decided to remove the \"hostUrlScheme\" from the solr.xml in favor of just setting the \"urlScheme\" property in the clusterprops.json file. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13894084",
            "date": "2014-02-07T01:30:36+0000",
            "content": "Thanks Steve - I started looking at this last night and have done a bit more work early this morning. I'm tweaking the tests a little to get some more coverage, but I think things look good overall. "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13894090",
            "date": "2014-02-07T01:37:01+0000",
            "content": "Thanks, let me know if you need a hand. I was also thinking that the following test should be added to verify the scheme:\n\n\n  private void testBaseUrlHttpsScheme() {\n    List<Replica> replicas = getZkReplicas();\n    assertFalse(\"No replicas found in ZooKeeper\", replicas.isEmpty());\n    \n    for(Replica replica : replicas) {\n      String baseUrl = (String) replica.get(ZkStateReader.BASE_URL_PROP);\n      assertTrue(baseUrl + \" didn't begin with a https url scheme\", StringUtils.startsWith(baseUrl, \"https://\"));\n      try {\n        URL url = new URL(baseUrl);\n        assertNotNull(\"No path can be found for \" + replica.getNodeName(), url.getPath());\n      } catch (Exception ex) {\n        fail(replica.getNodeName() + \" failed to build a proper URL [\" + baseUrl + \"]\");\n      }\n    }\n  }\n  \n  protected List<Replica> getZkReplicas() {\n    List<Replica> replicas = new ArrayList<Replica>();\n    ClusterState clusterState = cloudClient.getZkStateReader().getClusterState();\n    for(String collection : clusterState.getCollections()) {\n      for(Slice slice : clusterState.getSlicesMap(collection).values()) {\n        replicas.addAll(slice.getReplicas());\n      }\n    }\n    \n    return replicas;\n  }\n\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13894095",
            "date": "2014-02-07T01:49:23+0000",
            "content": "Hmm...it seems like we really don't want to put the scheme in zk as part of the base url - if you want to turn things on and off, it won't respect that anyway. "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13894099",
            "date": "2014-02-07T01:55:53+0000",
            "content": "True, it will only be respected on a server restart. So if you wanted to go from http -> https you would need to update the clusterprops.json then restart all of your nodes to pick up the new configuration. Although, if the scheme was stored as apart of either the HttpShardHandler or in the solr.xml a restart would be required as well. I don't think people will be flipping SSL on/off, more of a global set it and forget it property. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13894139",
            "date": "2014-02-07T02:47:39+0000",
            "content": "Server restart is fine - I had it in my head we didn't regenerate the url in zk on every startup - but its only coreNodeName that is not generated. Nevermind. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13894214",
            "date": "2014-02-07T05:37:07+0000",
            "content": "So I looked at pulling the new ssl test code into AbstractFullDistribZkTestBase. Most tests should just work with this, and a couple that explicitly use http or something just need a little getter. Then, rather than run this one test and add the extra test time, like a dozen tests can randomly run with ssl or not.\n\nThe problem is that it seems to all work fine running tests one at a time in eclipse, but running them with ant test has all kinds of fails. I have not figured out why yet. I've tried a few things, but everything looks like it should clean up properly (the latest patch was missing clearing the system properties it set in teardown or afterclass). Somehow the tests are interacting with each other, or they don't work when run by ant (there are some differences unless you pass security managers and what not via your ide). "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13894218",
            "date": "2014-02-07T05:46:39+0000",
            "content": "The error I see is:   Caused by: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target at sun.security.ssl.Alerts.getSSLException(Alerts.java:192) "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13895618",
            "date": "2014-02-08T16:19:41+0000",
            "content": "Fixed the majority of the SSLExceptions by configuring our own HttpClientConfigurer that doesn't complain when it encounters a self-signed cert via the TrustSelfSignedStrategy. There is one more place that complains in the SolrDispatchFilter.remoteQuery(...) method that doesn't use HttpClient (uses standard java.net to establish a connection). We should update that code to go ahead and create an HttpClient instance via HttpClientUtil.createClient(...) which will take care of the last remaining SSLExceptions. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13895632",
            "date": "2014-02-08T17:11:00+0000",
            "content": "Oh sweet, thanks! "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13895633",
            "date": "2014-02-08T17:11:57+0000",
            "content": "We should update that code to go ahead and create an HttpClient instance via HttpClientUtil.createClient(...) which will take care of the last remaining SSLExceptions.\n\nSee SOLR-5700: Improve error handling of remote queries (proxied requests)  "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13895764",
            "date": "2014-02-08T23:01:12+0000",
            "content": "Attached a new patch that fixes the BasicDistributedZk2Test (was using java.net instead of using HttpClient). Also, with the SOLR-5700 patch applied (left separate) it fixed the other broken test with SSLExceptions. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13895793",
            "date": "2014-02-09T01:19:46+0000",
            "content": "Thanks Steve! I'm seeing a similar fail as before in an unrelated CacheHeaderTest - I've stopped there. Perhaps a test clean up issue? I'm headed out for a bit, but I'll take a look tomorrow. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13895797",
            "date": "2014-02-09T01:31:42+0000",
            "content": "Do we clean up the HttpClientConfigurer after each test so that the next test in that jvm gets as clean env? Or is there something else to clean up? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13895802",
            "date": "2014-02-09T01:37:09+0000",
            "content": "I see the configurer clean up in teardown. I'm not sure what I'm seeing. My guess is that you don't see it because of test ordering (I run 8 test jvms in parallel and the default is much lower). I'll dig in tomorrow if you don't get to it first. "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13895836",
            "date": "2014-02-09T05:50:38+0000",
            "content": "Did you apply the SolrDispatchFilter changes from the patch in SOLR-5700? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13895917",
            "date": "2014-02-09T16:06:41+0000",
            "content": "Yeah, SOLR-5700 has been committed and is part of what I'm testing. Still seeing a lot of fails. Taking a look. "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13895920",
            "date": "2014-02-09T16:30:02+0000",
            "content": "Oh, it could be because the extra call to \n\ninitSSLConfig(sslConfig, keystorePath);\n\n has been removed in SolrJettyTestBase.getSSLConfig() which has now turned on SSL for tests that previously weren't configured to run SSL since the initSSL method sets \n\nsslConfig.useSsl = false;\nsslConfig.clientAuth = false;\n\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13895926",
            "date": "2014-02-09T16:45:36+0000",
            "content": "Yeah, I had pulled that out in the last patch I put up because it looked like a test bug, tossing out the randomized settings. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13895930",
            "date": "2014-02-09T17:34:17+0000",
            "content": "I'm working through each of them. I'll be done shortly I think. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13896085",
            "date": "2014-02-09T22:39:50+0000",
            "content": "Commit 1566456 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1566456 ]\n\nSOLR-3854: SSL support for SolrCloud "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13896086",
            "date": "2014-02-09T22:42:47+0000",
            "content": "I just committed an initial pass to trunk. Since we are just working out tests here, it will be easier to collaborate this way - patch is getting unwieldy.\n\nThe latest has SSL working for almost all tests randomly, if possible. Some tests are excluded for various reasons. It's a huge expansion in our coverage though.\n\nCurrently, we don't use the client auth setting. Perhaps that can be improved by someone that understands it better than I. I'd have to dig first.\n\nSteve Davids, I'll leave this open in the case you have any further patches in you. Likewise, let me know if everything looks okay to you. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13896087",
            "date": "2014-02-09T22:44:17+0000",
            "content": "https://github.com/apache/lucene-solr/commit/e400b48a7e778d17678311b1d48f9fcb7e741b0d "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13896088",
            "date": "2014-02-09T22:53:31+0000",
            "content": "Awesome, will take a little bit more of a deep-dive. One thing I noticed right away though, what's the reason for adding \n\n<str name=\"urlScheme\">${urlScheme:}</str>\n\n throughout the various solr.xml files? That shouldn't be necessary with the patch. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13896091",
            "date": "2014-02-09T23:02:29+0000",
            "content": "Yeah, it's needed - not all tests are solrcloud tests or have zookeeper involved. Those tests now also use SSL randomly and do distrib searches and need to turn on the https scheme.\n\nOne of the base SolrCloud tests will clear that system property. Probably better if that was cleared randomly for better coverage. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13896125",
            "date": "2014-02-10T00:50:26+0000",
            "content": "Commit 1566483 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1566483 ]\n\nSOLR-3854: Boost test timeouts - SSL can be slower. "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13896219",
            "date": "2014-02-10T05:08:24+0000",
            "content": "Attached a new patch from trunk that allows the test harness to perform two-way SSL handshakes, the two-way SSL will now be randomly selected during test runs. Also, cleaned up some of the code by breaking out the SSLConfig into a separate class. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13896253",
            "date": "2014-02-10T06:08:39+0000",
            "content": "Commit 1566515 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1566515 ]\n\nSOLR-3854: Allows the test harness to perform two-way SSL handshakes, the two-way SSL will now be randomly selected during test runs. Also, cleaned up some of the code by breaking out the SSLConfig into a separate class. Also try and address failing the statics retained check. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13896255",
            "date": "2014-02-10T06:17:45+0000",
            "content": "Thanks Steve! Great stuff. "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13897305",
            "date": "2014-02-10T23:58:22+0000",
            "content": "Looks like the ALLOW_SSL property doesn't get reset to true in the afterClass method (should replace sslConfig = null; in SolrTestCaseJ4). Other than that, I don't see any glaring issues - have a timeline for pushing this to the 4.x branch? If there are any outstanding issues you would like me to look at just let me know. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13897324",
            "date": "2014-02-11T00:14:33+0000",
            "content": "Commit 1566883 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1566883 ]\n\nSOLR-3854 : Reset ALLOW_SSL in afterClass. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13897420",
            "date": "2014-02-11T01:35:44+0000",
            "content": "Thanks Steve - I'll merge back to 4x fairly soon. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13897977",
            "date": "2014-02-11T16:17:40+0000",
            "content": "Commit 1567203 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1567203 ]\n\nSOLR-3854 : Disable SSL on OSX for this test for now. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13897983",
            "date": "2014-02-11T16:25:11+0000",
            "content": "As reported on the email list, using SSL with \"BasicDistributedZk2Test\" on OSX causes the following exception:\n\n\n\tCaused by: java.net.SocketException: Invalid argument\n\t\tat java.net.SocketInputStream.socketRead0(Native Method)\n\t\tat java.net.SocketInputStream.read(SocketInputStream.java:152)\n\t\tat java.net.SocketInputStream.read(SocketInputStream.java:122)\n\t\tat sun.security.ssl.InputRecord.readFully(InputRecord.java:442)\n\t\tat sun.security.ssl.InputRecord.read(InputRecord.java:480)\n\t\tat sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:927)\n\t\tat sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:884)\n\t\tat sun.security.ssl.AppInputStream.read(AppInputStream.java:102)\n\t\tat org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:160)\n\t\tat org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:84)\n\t\tat org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:273)\n\t\tat org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:140)\n\t\tat org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:57)\n\t\tat org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:260)\n\t\tat org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:283)\n\t\tat org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:251)\n\t\tat org.apache.http.impl.conn.ManagedClientConnectionImpl.receiveResponseHeader(ManagedClientConnectionImpl.java:197)\n\t\tat org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:271)\n\t\tat org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:123)\n\t\tat org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:682)\n\t\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)\n\t\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:863)\n\t\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)\n\t\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:106)\n\t\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:57)\n\t\tat org.apache.solr.client.solrj.impl.HttpSolrServer.request(HttpSolrServer.java:395)\n\t\t... 11 more\n\n "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13898808",
            "date": "2014-02-12T05:19:14+0000",
            "content": "I was able to reproduce this problem in OSX in both BasicDistributedZk2Test and BasicDistributedZkTest when using two-way SSL by configuring \"useSsl = true\" and \"useClientAuth = true\". Once the useClientAuth was turned off it seems to consistently provide good test runs.\n\nHere is the full test suite results:\n\ntrySsl = true, trySslClientAuth = true\n   [junit4] Tests with failures:\n   [junit4]   - org.apache.solr.cloud.BasicDistributedZk2Test.testDistribSearch\n   [junit4]   - org.apache.solr.TestDistributedSearch.testDistribSearch\n   [junit4]   - org.apache.solr.cloud.DistribCursorPagingTest.testDistribSearch\n   [junit4]   - org.apache.solr.cloud.BasicDistributedZkTest.testDistribSearch\n   [junit4]   - org.apache.solr.TestDistributedGrouping.testDistribSearch\n   [junit4]   - org.apache.solr.update.SoftAutoCommitTest.testSoftAndHardCommitMaxTimeMixedAdds\n   [junit4] \n   [junit4] \n   [junit4] JVM J0:     2.58 ..   899.26 =   896.67s\n   [junit4] JVM J1:     2.81 ..   899.14 =   896.33s\n   [junit4] JVM J2:     2.58 ..   899.03 =   896.45s\n   [junit4] JVM J3:     2.59 ..   899.27 =   896.69s\n   [junit4] JVM J4:     2.58 ..   899.27 =   896.69s\n   [junit4] JVM J5:     2.84 ..   899.09 =   896.25s\n   [junit4] JVM J6:     2.80 ..   899.13 =   896.33s\n   [junit4] JVM J7:     2.58 ..   899.07 =   896.49s\n   [junit4] Execution time total: 14 minutes 59 seconds\n   [junit4] Tests summary: 372 suites, 1603 tests, 5 errors, 1 failure, 26 ignored (13 assumptions)\n\n\n\ntrySsl = true, trySslClientAuth = false\n   [junit4] Tests with failures:\n   [junit4]   - org.apache.solr.update.SoftAutoCommitTest.testSoftAndHardCommitMaxTimeMixedAdds\n   [junit4] \n   [junit4] \n   [junit4] JVM J0:     2.27 ..   716.97 =   714.69s\n   [junit4] JVM J1:     2.28 ..   716.79 =   714.51s\n   [junit4] JVM J2:     2.27 ..   716.99 =   714.72s\n   [junit4] JVM J3:     2.52 ..   716.78 =   714.26s\n   [junit4] JVM J4:     2.28 ..   716.82 =   714.54s\n   [junit4] JVM J5:     2.52 ..   717.00 =   714.48s\n   [junit4] JVM J6:     2.28 ..   716.80 =   714.52s\n   [junit4] JVM J7:     2.27 ..   716.95 =   714.67s\n   [junit4] Execution time total: 11 minutes 57 seconds\n   [junit4] Tests summary: 372 suites, 1603 tests, 1 failure, 26 ignored (13 assumptions)\n\n\n\nI attached a patch which cleans up a lot of the tests by using a common function to build a consistent schemed URL (fixes SSL for SolrCmdDistributorTest) + disabled the \"useClientAuth\" property for OSX clients. Shawn Heisey was kind enough to perform a few test runs (BasicDistributedZkTest & BasicDistributedZk2Test) on both windows and linux with both SSL params set to true with clean test runs. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13899174",
            "date": "2014-02-12T15:11:26+0000",
            "content": "Commit 1567643 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1567643 ]\n\nSOLR-3854: Cleans up a lot of the tests by using a common function to build a consistent schemed URL (fixes SSL for SolrCmdDistributorTest) + disabled the \"useClientAuth\" property for OSX clients. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13899322",
            "date": "2014-02-12T17:43:11+0000",
            "content": "Commit 1567700 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1567700 ]\n\nSOLR-3854: Update MorphlineGoLiveMiniMRTest for SSL. Disable SSL for now . "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13899328",
            "date": "2014-02-12T17:46:51+0000",
            "content": "Commit 1567701 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1567701 ]\n\nSOLR-3854: Update MorphlineGoLiveMiniMRTest for SSL. Disable SSL for now . "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13899354",
            "date": "2014-02-12T18:00:27+0000",
            "content": "Commit 1567703 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1567703 ]\n\nSOLR-3854: Revert last commit - SSL not on 4x yet. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13900533",
            "date": "2014-02-13T17:31:20+0000",
            "content": "I think there's a maven config problem here that still needs resolved...\n\nhttps://builds.apache.org/job/Lucene-Solr-Maven-trunk/1103/\n\n\nSubject: Re: [JENKINS-MAVEN] Lucene-Solr-Maven-trunk #1103: POMs out of sync\n\nHmmm...  lots of compilation failures from Maven build regarding \nhttp-client classess not found?\n\nThis seems to have been a problem with the maven build since Feb 10...\n\nhttps://builds.apache.org/job/Lucene-Solr-Maven-trunk/1101/\n\n...looking at the commits, i think this looks like the suspicious one...\n\nhttps://svn.apache.org/viewvc?view=revision&revision=1566456\n\nIt's the only commit arround that day that changes an ivy.xml file, and \nthat change relates to httpcomponents...\n\nhttps://svn.apache.org/viewvc/lucene/dev/trunk/solr/core/ivy.xml?r1=1566456&r2=1566455&pathrev=1566456\n\n\n...so it looks like something else needs to change in the maven configs as \nwell?\n\n "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13900982",
            "date": "2014-02-14T01:15:43+0000",
            "content": "Seems like adding HttpClient wasn't necessary - was able to compile and run tests without it. Quick patch to revert:\n\n\nIndex: solr/core/ivy.xml\n===================================================================\n--- solr/core/ivy.xml\t(revision 1566863)\n+++ solr/core/ivy.xml\t(working copy)\n@@ -48,7 +48,6 @@\n     <dependency org=\"org.easymock\" name=\"easymock\" rev=\"${/org.easymock/easymock}\" conf=\"test->*\"/>\n     <dependency org=\"cglib\" name=\"cglib-nodep\" rev=\"${/cglib/cglib-nodep}\" conf=\"test->*\"/>\n     <dependency org=\"org.objenesis\" name=\"objenesis\" rev=\"${/org.objenesis/objenesis}\" conf=\"test->*\"/>\n-    <dependency org=\"org.apache.httpcomponents\" name=\"httpclient\" rev=\"${/org.apache.httpcomponents/httpclient}\" conf=\"test->*\"/>\n \n     <dependency org=\"org.apache.hadoop\" name=\"hadoop-common\" rev=\"${/org.apache.hadoop/hadoop-common}\" conf=\"compile.hadoop->*\"/>\n     <!--\n\n "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13900999",
            "date": "2014-02-14T01:32:38+0000",
            "content": "Seems like adding HttpClient wasn't necessary - was able to compile and run tests without it. Quick patch to revert:\n\nThanks Steve, I came to the same conclusion and also successfully ran all core tests without this redundant dependency (since solrj/lib/*.jar is included in Solr core's compile classpath, and so also its test classpath).\n\nI'll commit shortly. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13901003",
            "date": "2014-02-14T01:34:12+0000",
            "content": "Commit 1568184 from Steve Rowe in branch 'dev/trunk'\n[ https://svn.apache.org/r1568184 ]\n\nSOLR-3854: remove redundant solr-core test dependency on httpclient "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13901580",
            "date": "2014-02-14T16:02:11+0000",
            "content": "Commit 1568340 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1568340 ]\n\nSOLR-3854: SSL support for SolrCloud. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13901590",
            "date": "2014-02-14T16:22:16+0000",
            "content": "Commit 1568341 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1568341 ]\n\nSOLR-3854: Boost test timeouts - SSL can be slower. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13901609",
            "date": "2014-02-14T16:42:06+0000",
            "content": "Commit 1568347 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1568347 ]\n\nSOLR-3854: Allows the test harness to perform two-way SSL handshakes, the two-way SSL will now be randomly selected during test runs. Also, cleaned up some of the code by breaking out the SSLConfig into a separate class. Also try and address failing the statics retained check. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13901640",
            "date": "2014-02-14T16:57:22+0000",
            "content": "Commit 1568351 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1568351 ]\n\nSOLR-3854 : Reset ALLOW_SSL in afterClass. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13901649",
            "date": "2014-02-14T17:05:54+0000",
            "content": "Commit 1568356 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1568356 ]\n\nSOLR-3854 : Disable SSL on OSX for this test for now. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13901652",
            "date": "2014-02-14T17:07:46+0000",
            "content": "Commit 1568357 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1568357 ]\n\nSOLR-3854: Cleans up a lot of the tests by using a common function to build a consistent schemed URL (fixes SSL for SolrCmdDistributorTest) + disabled the \"useClientAuth\" property for OSX clients. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13901658",
            "date": "2014-02-14T17:17:22+0000",
            "content": "Commit 1568363 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1568363 ]\n\nSOLR-3854: remove redundant solr-core test dependency on httpclient. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13901662",
            "date": "2014-02-14T17:20:14+0000",
            "content": "Thanks to everyone that contributed to getting this done! And an extral thanks to Steve for driving it home. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13902532",
            "date": "2014-02-15T21:38:26+0000",
            "content": "Commit 1568689 from hossman@apache.org in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1568689 ]\n\nre-apply r1567231, which seems to have been inadvertantly reverted in r1568340 as part of SOLR-3854 "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13907288",
            "date": "2014-02-20T18:34:25+0000",
            "content": "As Noble brought up in 4.7 vote thread:\n\nThe new scheme property has to be white listed to work with the cluster properties api.\n\nCurrently, a user will have to manually add the entry to ZooKeeper. We should open a new issue depending on whether or not the fix makes it into a respin. "
        },
        {
            "author": "Steve Davids",
            "id": "comment-13908014",
            "date": "2014-02-21T06:19:51+0000",
            "content": "Came across an issue with the release candidate... Unfortunately when switching from http -> https it causes the same node to become a replica for that shard group. That is because the base url is being compared in the clusterstate to grab the previously assigned core node name / shard id. I attached a patch that uses the nodeName instead (essentially the same as baseUrl just without the scheme). It is important to note that the port is actually embedded in the node name, so if the port changes the machine will be added as a new replica. Thus, if clients would like to update their port from 8080 -> 8443 they would need to update the node_name value in the clusterstate.json file in zookeeper.\n\nHere is how to get the clusterprops.json initially populated in the example:\n\nsteves-mbp:cloud-scripts sdavids$ pwd\n/Users/sdavids/Downloads/solr-4.7.0/example/scripts/cloud-scripts\nsteves-mbp:cloud-scripts sdavids$ ./zkcli.sh -zkhost localhost:9983 -cmd put /clusterprops.json '{\"urlScheme\":\"https\"}'\n\n "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13909271",
            "date": "2014-02-22T06:48:17+0000",
            "content": "Commit 1570797 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1570797 ]\n\nSOLR-3854 urlScheme property should be whitelisted "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13909272",
            "date": "2014-02-22T06:50:03+0000",
            "content": "Commit 1570798 from Noble Paul in branch 'dev/branches/lucene_solr_4_7'\n[ https://svn.apache.org/r1570798 ]\n\nSOLR-3854 urlScheme property should be whitelisted "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13909273",
            "date": "2014-02-22T06:50:57+0000",
            "content": "Commit 1570799 from Noble Paul in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1570799 ]\n\nSOLR-3854 urlScheme property should be whitelisted "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13909532",
            "date": "2014-02-22T20:53:37+0000",
            "content": "Thanks Steve Davids. Sorry for the delayed response, have not been feeling well. Unless there is another RC we can discuss getting this into, which seems unlikely at this point, we will have to address it in a 4.7.1 or 4.8 release.\n\nThat is because the base url is being compared in the clusterstate to grab the previously assigned core node name / shard id. \n\nThat sounds like an ugly bug, though I have not looked at the code or patch yet. \n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13910875",
            "date": "2014-02-24T22:00:09+0000",
            "content": "The previous issue has been moved to: SOLR-5770\n\nThere is an issue with opting out of SSL for a unit tests here: SOLR-5771\n "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13922717",
            "date": "2014-03-06T16:33:33+0000",
            "content": "Commit 1574951 from Steve Rowe in branch 'dev/trunk'\n[ https://svn.apache.org/r1574951 ]\n\nSOLR-3854: IntelliJ config: add solr example lib test dependency to map-reduce and dataimporthandler contribs "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13922718",
            "date": "2014-03-06T16:36:04+0000",
            "content": "Commit 1574953 from Steve Rowe in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1574953 ]\n\nSOLR-3854: IntelliJ config: add solr example lib test dependency to map-reduce and dataimporthandler contribs (merged trunk r1574951) "
        }
    ]
}