{
    "id": "LUCENE-8058",
    "title": "Never cache large TermInSetQuery instances",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Improvement",
        "components": [],
        "fix_versions": [
            "7.2",
            "master (8.0)"
        ]
    },
    "description": "I have seen several cases in which the query cache was highly underestimating its memory usage due to the fact that it had references to large queries that ended up using more memory than the associated doc id sets.\n\nWe had a workaround for term-in-set queries by making TermInSetQuery implement Accountable, but this information is lost when it is wrapped in another query such as a BooleanQuery. So I would like to apply a safer fix that just disables caching on large TermInSetQuery instances.\n\nI know it's a pity given that large queries are probably more expensive and thus more cache-worthy, but I see such large queries as the result of a bad design or a workaround to the fact that Lucene is not the right tool for the job, so I think that disabling caching on large term-in-set queries is the right trade-off by making the query cache safer for the majority of our users.",
    "attachments": {
        "LUCENE-8058.patch": "https://issues.apache.org/jira/secure/attachment/12898896/LUCENE-8058.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16262956",
            "date": "2017-11-22T17:26:46+0000",
            "content": "Here is a patch. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16263357",
            "date": "2017-11-22T21:13:19+0000",
            "content": "I think the problem is emphasized by the fact that UsageTrackingQueryCachingPolicy caches this query more aggressively.\nI agree that this query is not safe for the query cache but we could maybe make the decision to not cache based on the number of terms  ? \nThis query is already rewritten into a boolean query if there are less than 16 terms so we could use the max boolean clause limit (1024), this way users would not be tempted to switch to a boolean query to make their big filters eligible for caching. ",
            "author": "Jim Ferenczi"
        },
        {
            "id": "comment-16263465",
            "date": "2017-11-22T22:27:23+0000",
            "content": "this way users would not be tempted to switch to a boolean query to make their big filters eligible for caching.\n\nMaybe this means that we should disable caching on large boolean queries too in order to avoid such misuse? ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16268940",
            "date": "2017-11-28T15:42:09+0000",
            "content": "Jim Ferenczi I slightly changed the approach:\n\n\tI increased the memory usage that we assume for queries to 1024. I think this makes sense since this was initially computed as the memory usage of a term query but we do not cache term queries anymore so cached queries are more likely to be boolean queries with a couple clauses.\n\tI disabled caching on dismax and boolean queries that have more than 16 clauses in order not to encourage users to switch to those queries to work around the fact that we no longer cache large term-in-set queries.\n\n\n\nWhat do you think? ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16268949",
            "date": "2017-11-28T15:51:07+0000",
            "content": "\n-public class TermInSetQuery extends Query implements Accountable {\n+public class TermInSetQuery extends Query {\n\n\n\nPlease don't remove Accountable implementations on Queries... it's still useful, and Solr makes use of this. ",
            "author": "Yonik Seeley"
        },
        {
            "id": "comment-16269053",
            "date": "2017-11-28T17:06:18+0000",
            "content": "What do you think?\n\n+1 we don't need to cache big boolean queries too. Can you also remove the TermInSetQuery from the costly queries in UsageTrackingQueryCachingPolicy ?  ",
            "author": "Jim Ferenczi"
        },
        {
            "id": "comment-16269075",
            "date": "2017-11-28T17:20:28+0000",
            "content": "Can you also remove the TermInSetQuery from the costly queries in UsageTrackingQueryCachingPolicy ? \n\nI think it's still useful since this query consumes all matches even if you only call advance() a reasonable number of times on the scorer? ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16269262",
            "date": "2017-11-28T18:52:48+0000",
            "content": "Indeed, sorry I misread the patch. ",
            "author": "Jim Ferenczi"
        },
        {
            "id": "comment-16270446",
            "date": "2017-11-29T09:14:04+0000",
            "content": "Commit 37ac122ecfbe75413f2037b0849cbbf2eeb3e76f in lucene-solr's branch refs/heads/branch_7x from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=37ac122 ]\n\nLUCENE-8058: Large instances of TermInSetQuery are no longer eligible for caching as they could break memory accounting of the query cache. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16270447",
            "date": "2017-11-29T09:14:06+0000",
            "content": "Commit 6d34f23263e919e462d67a72cbe150465a0b87a7 in lucene-solr's branch refs/heads/master from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6d34f23 ]\n\nLUCENE-8058: Large instances of TermInSetQuery are no longer eligible for caching as they could break memory accounting of the query cache. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16270480",
            "date": "2017-11-29T09:36:42+0000",
            "content": "For the record I left the Accountable interface on TermInSetQuery for now. ",
            "author": "Adrien Grand"
        }
    ]
}