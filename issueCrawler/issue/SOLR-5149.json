{
    "id": "SOLR-5149",
    "title": "Query facet to respect mincount",
    "details": {
        "affect_versions": "5.3",
        "status": "Open",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "components": [
            "SearchComponents - other"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "",
    "attachments": {
        "SOLR-5149-trunk.patch": "https://issues.apache.org/jira/secure/attachment/12597934/SOLR-5149-trunk.patch",
        "SOLR-5149.patch": "https://issues.apache.org/jira/secure/attachment/12745421/SOLR-5149.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Markus Jelsma",
            "id": "comment-13739479",
            "date": "2013-08-14T10:11:15+0000",
            "content": "Patch for trunk. SimpleFacets.getFacetQueryCounts() and FacetComponent.finishStage() now both support facet.mincount for facet.query. Works locally and with SolrCloud. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13739704",
            "date": "2013-08-14T14:23:01+0000",
            "content": "My initial thoughts: I'm not sure I agree with not returning a response for a facet.query, regardless of the count.  If you're requesting a facet.query, that's a pretty explicit thing that the client would generally expect in the response, no?   There are generally not many facet.query's so a client could easily filter out zero count ones if desired. "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-13740912",
            "date": "2013-08-15T12:22:02+0000",
            "content": "Yes, that makes sense. But we definately have some cases in which we would like to omit them from the result so maybe having a facet.querymincount would be a good idea?\n\nThanks "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13741112",
            "date": "2013-08-15T16:10:37+0000",
            "content": "I'm curious about the use cases - why not filter out zero counts in the client?   \n\nI'm ok with another parameter, thought that feels odd too, but at least one would have the option to filter zeros from fields without filtering out facet.query's too.   facet.query.mincount?  (like facet.range.*) "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-13742123",
            "date": "2013-08-16T11:49:08+0000",
            "content": "The use cases mostly limit themselves to saving space when we have a large amount of facet queries to return. Also, if our different clients toggle mincount with one setting but also have facet queries, we need additional code maintain the behaviour. This is not a problem, only inconvenient.\n\nYes, facet.query.mincount sounds fine. "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-13742124",
            "date": "2013-08-16T11:50:08+0000",
            "content": "Patch for trunk now introduces patch.query.mincount. There's no support for facet.zeros in this patch. "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-13743764",
            "date": "2013-08-19T12:21:38+0000",
            "content": "Patch now includes unit test. Setting facet.query.mincount to 3 now doesn't include trait_s:Obnoxious in the result. "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-13761734",
            "date": "2013-09-09T09:58:16+0000",
            "content": "Updated patch for trunk. "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-13817259",
            "date": "2013-11-08T13:13:34+0000",
            "content": "Any more comments to this? Change stuff? We're using it in production for two months now and are happy with the results. "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-13897800",
            "date": "2014-02-11T12:25:09+0000",
            "content": "Apparently the diff for FacetComponent was missing. Updated patch! "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-13897804",
            "date": "2014-02-11T12:27:33+0000",
            "content": "Eeeh, correct patch! "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971191",
            "date": "2014-04-16T12:57:25+0000",
            "content": "Move issue to Solr 4.9. "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-14627815",
            "date": "2015-07-15T09:49:18+0000",
            "content": "Patch updated for Solr 5.2, tests pass "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14713370",
            "date": "2015-08-26T13:14:22+0000",
            "content": "Bulk move to 5.4 after 5.3 release. "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-14718236",
            "date": "2015-08-28T08:57:25+0000",
            "content": "Updated patch for 5.3. Any thoughts?  "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-14718245",
            "date": "2015-08-28T09:07:33+0000",
            "content": "Correct patch now. "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-14718253",
            "date": "2015-08-28T09:20:29+0000",
            "content": "Last patch was still missing the lines for PivotFacetProcessor.  "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-15568281",
            "date": "2016-10-12T10:05:26+0000",
            "content": "Updated patch for 6.2.1. "
        }
    ]
}