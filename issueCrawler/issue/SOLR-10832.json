{
    "id": "SOLR-10832",
    "title": "Using \"indexed\" PointField for _version_ breaks VersionInfo.getMaxVersionFromIndex",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "6.7",
            "7.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "If someone configures _version_ using a LongPointField which is indexed=\"true\" then VersionInfo.getMaxVersionFromIndex() will incorrectly assume...\n\n\n    // if indexed, then we have terms to get the max from\n    if (versionField.indexed()) {\n      LeafReader leafReader = SlowCompositeReaderWrapper.wrap(searcher.getIndexReader());\n      Terms versionTerms = leafReader.terms(versionFieldName);\n      Long max = (versionTerms != null) ? LegacyNumericUtils.getMaxLong(versionTerms) : null;\n\n\n\n...which will not work because Point based fields have no Terms.\n\npotential work around: configuring _version_ to use indexed=\"false\" docValues=\"true\" should cause this branch to be skipped and the existing ValueSource/DocValues based fallback to be used.\n\nWe should either:\n\n\tfigure out if an alternative option exists for determining the \"max\" value of a LongPointField, and if so use that if versionField.indexed() && versionField.getType().isPointField()\n\tchange VersionInfo.getAndCheckVersionField() to check if the version field IsPointField() and if so error unless indexed=\"false\" && docValues=\"true\"",
    "attachments": {
        "SOLR-10832.patch": "https://issues.apache.org/jira/secure/attachment/12872164/SOLR-10832.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-06-06T23:36:29+0000",
            "content": "Discovered while working on SOLR-10807 ",
            "author": "Hoss Man",
            "id": "comment-16039873"
        },
        {
            "date": "2017-06-06T23:57:29+0000",
            "content": "figure out if an alternative option exists for determining the \"max\" value of a LongPointField, ...\n\n\nI haven't tried this, but i believe what we want is PointsValues.getMaxPackedValue(IndexReader reader, String field) and then (if non-null) feed that into LongPoint.decodeDimension \u2013 although to not violate the FieldTYpe abstractions, we should probably use versionField.getType().toObject(...) (and then assert it's a Number and use the longValue() after casting)\n\n(digression: perhaps NumericValueFieldType should provide a T getMaxValue(SchemaField,IndexReader) ?) ",
            "author": "Hoss Man",
            "id": "comment-16039894"
        },
        {
            "date": "2017-06-08T22:47:12+0000",
            "content": "\nI started looking into writting a test for this and noticed we already have a VersionInfoTest that purports to testMaxIndexedVersionFromIndex and testMaxDocValuesVersionFromIndex \u2013 but for some reason this test didn't fail on my jira/SOLR-10807 branch (even though some CdCr tests, which use VersionInfo.getMaxVersionFromIndex, did)\n\nDigging in a bit I realized this tests is very misleading: all it currently does is use UpdateLog.getMaxVersionFromIndex() which is essentially just a wrapper around seedBucketsWithHighestVersion that does use VersionInfo.getMaxVersionFromIndex but also looks at the max version from RecentUpdates AND from seeding a new clock if both are 0!\n\nIn addition: the assertions made about the versions returned makes the test useless for finding this kind of bug: where VersionInfo.getMaxVersionFromIndex always returns null.\n\nIn the attached patch, I first beefed up the meat of the test to actually differentiate between the expected \"maxVersionFromUlog\" and \"vInfoMax\" in the case of committed & uncommited docs \u2013 and verified this new test logic passes with Trie fields.  I then updated the 2 schema files used by this test to randomize in point fields, so testMaxDocValuesVersionFromIndex now fails 50% of the time, or you can force it with -Dsolr.tests.preferPointFields=true.\n\nBefore I spend time trying to actaully fix this bug, it would be nice if someone could please sanity check: does these test changes make sense?  (Timothy Potter \u2013 you wrote this baby, am i misunderstanding anything about it's intent? any concerns with these changes so far?) ",
            "author": "Hoss Man",
            "id": "comment-16043564"
        },
        {
            "date": "2017-06-09T14:23:59+0000",
            "content": "Changes look good, probably just a weak test originally. ",
            "author": "Timothy Potter",
            "id": "comment-16044489"
        },
        {
            "date": "2017-06-14T22:16:53+0000",
            "content": "hacked up patch showing that PointValues.getMaxPackedValue gets the test working.\n\nStill need to figure out if it's worth while to try and abstract some of this decoding down into the FieldType. ",
            "author": "Hoss Man",
            "id": "comment-16049744"
        },
        {
            "date": "2017-06-15T21:09:16+0000",
            "content": "revised path using the FieldType.toObject abstraction for the versionField.\n\nAll tests and precommit pass on master.\n ",
            "author": "Hoss Man",
            "id": "comment-16051069"
        },
        {
            "date": "2017-06-15T23:09:59+0000",
            "content": "Commit 45af5576a5cbf2e20b9576a200b852042ad76ec1 in lucene-solr's branch refs/heads/branch_6x from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=45af557 ]\n\nSOLR-10832: Fixed VersionInfo.getMaxVersionFromIndex when using PointsField with indexed=\"true\"\n\n(cherry picked from commit 274971c3e331b68e5f7ea2669024215b8017ff7a) ",
            "author": "ASF subversion and git services",
            "id": "comment-16051190"
        },
        {
            "date": "2017-06-15T23:10:01+0000",
            "content": "Commit 274971c3e331b68e5f7ea2669024215b8017ff7a in lucene-solr's branch refs/heads/master from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=274971c ]\n\nSOLR-10832: Fixed VersionInfo.getMaxVersionFromIndex when using PointsField with indexed=\"true\" ",
            "author": "ASF subversion and git services",
            "id": "comment-16051191"
        },
        {
            "date": "2017-07-20T18:06:46+0000",
            "content": "Bulk editing 27 jiras matching the following JQL query to include the \"numeric-tries-to-points label...\n\n\n(issue in linkedIssues(SOLR-10807) OR issue in linkedIssues(SOLR-8396) OR issue in linkedIssues(SOLR-9995)) AND project = SOLR AND status != CLOSED\n\n\n\nthese 27 jiras can be identified by searching for the comment string \"20170720hossbulkeditlabel\"\n\nemail notification is being suppressed. ",
            "author": "Hoss Man",
            "id": "comment-16095113"
        }
    ]
}