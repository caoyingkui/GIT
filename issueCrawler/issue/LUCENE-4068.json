{
    "id": "LUCENE-4068",
    "title": "Improve IW#addDocuments(...) javadoc",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "4.0-ALPHA",
            "3.6.1"
        ],
        "affect_versions": "3.2,                                            3.3,                                            3.4,                                            3.5,                                            3.6,                                            4.0-ALPHA",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Improve IW#addDocuments(...) javadoc. \nDescriber how blocks can be used regarding to index updates.",
    "attachments": {
        "LUCENE-4068.patch": "https://issues.apache.org/jira/secure/attachment/12528067/LUCENE-4068.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-05-18T14:53:55+0000",
            "content": "Added better description how to deal with updates. \n\nThe javadoc also states that future merging might not preserves blocks. Currently this isn't the case. Is this still true for upcoming SegmentMerger implementations? Maybe when this will be the case then better protection should be in place. Like storing the document blocks in the index. ",
            "author": "Martijn van Groningen",
            "id": "comment-13278840"
        },
        {
            "date": "2012-05-18T15:41:39+0000",
            "content": "Looks good!\n\nMaybe instead of \". Also when documents inside a block are deleted\" say \", even when child documents within a block are deleted\"?  (Ie, one sentence not two, and add \"child\" since you cannot delete the parent w/o deleting all of its children).\n\nAlso, can we not change the imports to wildcards? ",
            "author": "Michael McCandless",
            "id": "comment-13278880"
        },
        {
            "date": "2012-05-18T15:50:18+0000",
            "content": "\nMaybe instead of \". Also when documents inside a block are deleted\" say \", even when child documents within a block are deleted\"? (Ie, one sentence not two, and add \"child\" since you cannot delete the parent w/o deleting all of its children).\nDone.\n\nAlso, can we not change the imports to wildcards?\nDone. My IDE did this on the fly... ",
            "author": "Martijn van Groningen",
            "id": "comment-13278895"
        },
        {
            "date": "2012-05-18T16:15:18+0000",
            "content": "you cannot delete the parent w/o deleting all of its children\n\nAtomic update seems a bit tricky...\nPerhaps this\n\n  public void updateDocuments(Term delTerm, Iterable<? extends Iterable<? extends IndexableField>> docs, Analyzer analyzer) throws CorruptIndexException, IOException {\n\n\nshould be something like\n\n  public void updateDocuments(Iterable<Term>, Iterable<? extends Iterable<? extends IndexableField>> docs, Analyzer analyzer) throws CorruptIndexException, IOException {\n\n\nor perhaps even more generic:\n\n  public void updateDocuments(Query delQuery, Iterable<? extends Iterable<? extends IndexableField>> docs, Analyzer analyzer) throws CorruptIndexException, IOException {\n\n ",
            "author": "Yonik Seeley",
            "id": "comment-13278913"
        },
        {
            "date": "2012-05-18T16:56:35+0000",
            "content": "Yes... someone could delete a parent without deleting its children. I guess that this a responsibility of the application using Lucene. Right now for updating the deleteDocuments(query) method should be used, before using updateDocuments(...) / addDocuments(...) \n\nThe updateDocuments method that uses the delQuery could include a ToChildBlockJoinQuery instance (as part of a boolean query) that would matches to the children documents (in case a parent document were to be deleted). However this logic would then still be the apps responsibility. ",
            "author": "Martijn van Groningen",
            "id": "comment-13278954"
        },
        {
            "date": "2012-05-18T17:16:42+0000",
            "content": "Right now for updating the deleteDocuments(query) method should be used, before using updateDocuments(...) / addDocuments(...)\n\nSure - but my point is that isn't atomic.   That's why the updateDocument* methods exist in the first place (as opposed to doing separate deletes and then adds). ",
            "author": "Yonik Seeley",
            "id": "comment-13278977"
        },
        {
            "date": "2012-05-18T17:29:07+0000",
            "content": "True, that isn't atomic. ",
            "author": "Martijn van Groningen",
            "id": "comment-13278991"
        },
        {
            "date": "2012-05-21T11:43:47+0000",
            "content": "Committed to trunk and 3.6 branch. ",
            "author": "Martijn van Groningen",
            "id": "comment-13280100"
        },
        {
            "date": "2012-07-22T16:04:54+0000",
            "content": "Bulk close for 3.6.1 ",
            "author": "Uwe Schindler",
            "id": "comment-13420201"
        }
    ]
}