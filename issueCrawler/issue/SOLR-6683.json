{
    "id": "SOLR-6683",
    "title": "Need a configurable parameter to control the doc number between peersync and the snapshot pull recovery",
    "details": {
        "components": [
            "replication (java)"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "4.7",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Critical"
    },
    "description": "If there are >100 docs gap between the recovering node and the good node, the solr will do snap pull recovery instead of peersync.\n\nCan the 100 docs be configurable? For example, there can be 10000, 1000, or 10 docs gap between the good node and the node to recover.\n\nFor 100 doc, a regular restart of a solr node will trigger a full recovery, which is a huge impact to the performance of the running systems\n\nThanks!",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2014-11-21T15:19:40+0000",
            "author": "Ramkumar Aiyengar",
            "content": "Does the patch on SOLR-6359 suffice for you? ",
            "id": "comment-14221022"
        },
        {
            "date": "2014-12-04T09:18:24+0000",
            "author": "Forest Soup",
            "content": "Thanks, Ramkumar. \n\nWe will try it. Thanks! ",
            "id": "comment-14234052"
        },
        {
            "date": "2014-12-17T13:10:56+0000",
            "author": "Forest Soup",
            "content": "I applied the patch for SOLR-6359 on 4.7 and did some test. Set below config:\n    <updateLog>\n      <str name=\"dir\">${solr.ulog.dir:}</str>\n      <int name=\"numRecordsToKeep\">10000</int>\n      <int name=\"maxNumLogsToKeep\">100</int>\n    </updateLog> ",
            "id": "comment-14249826"
        },
        {
            "date": "2015-01-04T06:03:52+0000",
            "author": "Forest Soup",
            "content": "it works but with some pre-condition: the 20% newest existing transaction log of the core to be recovered must be newer than the 20% oldest existing transaction log of the good core. ",
            "id": "comment-14263762"
        },
        {
            "date": "2015-01-04T06:06:04+0000",
            "author": "Forest Soup",
            "content": "A full snapshot recovery does not clean the tlog of the core being recovered. ",
            "id": "comment-14263765"
        },
        {
            "date": "2015-01-04T09:10:20+0000",
            "author": "Forest Soup",
            "content": "The snapshot recovery does not clear tlog of the core being recovered. Is it an issue? ",
            "id": "comment-14263806"
        },
        {
            "date": "2015-08-23T02:34:48+0000",
            "author": "Shawn Heisey",
            "content": "I've been staring at this for an hour, and cannot translate this from the words to something my mind can grasp.  Can you explain it with a detailed scenario where it doesn't work as expected? ",
            "id": "comment-14708276"
        }
    ]
}