{
    "id": "SOLR-7523",
    "title": "Maven test fails in solr/contrib/map-reduce",
    "details": {
        "components": [
            "contrib - MapReduce"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.1",
        "status": "Closed",
        "resolution": "Won't Fix",
        "priority": "Critical"
    },
    "description": "Maven test fails on the following package:\nsolr/contrib/map-reduce/\n(seen on solr6 trunk and solr 5.x branch)\n\nThe underlying problem seems to be that when running maven test, the java security manager is not set. When running ant test, the security manager is set to org.apache.lucene.util.TestSecurityManager. \n\nThe failing test is skipped while running ant test due to an assumption in org/apache/solr/hadoop/MorphlineBasicMiniMRTest.java:\n\nassumeTrue(\n        \"Currently this test can only be run without the lucene test security policy in place\",\n        System.getProperty(\"java.security.manager\", \"\").equals(\"\"));\n\nIn maven, the test is not skipped and fails.\n\nI propose aligning the ant and maven test so they use the same security manager.",
    "attachments": {
        "SOLR-7523.patch": "https://issues.apache.org/jira/secure/attachment/12731877/SOLR-7523.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-05-11T08:57:33+0000",
            "author": "Jonas van Vliet",
            "content": "Here is a patch that sets the security manager used while testing. Works for 5.x branch.  ",
            "id": "comment-14537735"
        },
        {
            "date": "2015-05-11T16:12:51+0000",
            "author": "Steve Rowe",
            "content": "Thanks for tracking this down, Jonas!  Last I tried this, I got stuck at the NoClassDefFoundError, didn't occur to me it was a security manager issue:\n\n\norg.apache.hadoop.yarn.exceptions.YarnRuntimeException: java.lang.NoClassDefFoundError: org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryWriter\n\tat java.net.URLClassLoader$1.run(URLClassLoader.java:372)\n\tat java.net.URLClassLoader$1.run(URLClassLoader.java:361)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:360)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n\tat org.apache.hadoop.yarn.server.resourcemanager.ResourceManager.createRMApplicationHistoryWriter(ResourceManager.java:357)\n\tat org.apache.hadoop.yarn.server.resourcemanager.ResourceManager$RMActiveServices.serviceInit(ResourceManager.java:468)\n\tat org.apache.hadoop.service.AbstractService.init(AbstractService.java:163)\n\tat org.apache.hadoop.yarn.server.resourcemanager.ResourceManager.createAndInitActiveServices(ResourceManager.java:989)\n\tat org.apache.hadoop.yarn.server.resourcemanager.ResourceManager.serviceInit(ResourceManager.java:255)\n\tat org.apache.hadoop.service.AbstractService.init(AbstractService.java:163)\n\tat org.apache.solr.hadoop.hack.MiniYARNCluster$ResourceManagerWrapper.serviceStart(MiniYARNCluster.java:200)\n\tat org.apache.hadoop.service.AbstractService.start(AbstractService.java:193)\n\tat org.apache.hadoop.service.CompositeService.serviceStart(CompositeService.java:120)\n\tat org.apache.hadoop.service.AbstractService.start(AbstractService.java:193)\n\tat org.apache.solr.hadoop.hack.MiniMRClientClusterFactory.create(MiniMRClientClusterFactory.java:83)\n\tat org.apache.solr.hadoop.hack.MiniMRClientClusterFactory.create(MiniMRClientClusterFactory.java:39)\n\tat org.apache.solr.hadoop.MorphlineGoLiveMiniMRTest.setupClass(MorphlineGoLiveMiniMRTest.java:191)\n\n\n\nI applied your patch on trunk, and it allowed the map-reduce contrib's tests to succeed.  I'll try with all Lucene/Solr tests now to make sure it doesn't cause trouble elsewhere. ",
            "id": "comment-14538107"
        },
        {
            "date": "2015-05-12T06:02:08+0000",
            "author": "Jonas van Vliet",
            "content": "The NoClassDefFoundError still occurs in the code after applying the patch if you force the test to run regardless of assumptions being true or false. This issue should be addressed in a different bug report.\n\nThe problem I experienced was the fact that ant test and maven test returned different results due to different input parameters. This patch only aligns the test parameters - it does not fix the test itself. ",
            "id": "comment-14539310"
        }
    ]
}