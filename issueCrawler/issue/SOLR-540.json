{
    "id": "SOLR-540",
    "title": "Add support for hl.fl=*",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [
            "highlighter"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Adds support for the star value for the hl.fl parameter, i.e. highlighting will be done on all fields (static and dynamic). Particularly useful in conjunction with hl.requireFieldMatch=true, this way one can specify \"generic\" highlighting parameters independent of the query/searched fields.",
    "attachments": {
        "SOLR-540.patch": "https://issues.apache.org/jira/secure/attachment/12393564/SOLR-540.patch",
        "SOLR-540-highlight-all.patch": "https://issues.apache.org/jira/secure/attachment/12385001/SOLR-540-highlight-all.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Lars Kotthoff",
            "id": "comment-12588913",
            "date": "2008-04-15T05:37:35+0000",
            "content": "Patch as described against svn revision 648118. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12589047",
            "date": "2008-04-15T11:58:10+0000",
            "content": "While this is a useful addition, should we tackle this as part of the a more general field aliasing/globbing feature?   See http://wiki.apache.org/solr/FieldAliasesAndGlobsInParams for more details. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12589160",
            "date": "2008-04-15T17:37:28+0000",
            "content": "a quick glance at this patch indicates that it has the same characteristics that concerned me about SOLR-247 ...\n\nwith somehting like fl=*, we're only talking about stored fields ... storing a field makes no sense unless you plan on returning it in the field list some of the time, so fl=* makes sense as a \"return all of hte fields that are possible to return\" option.\n\n ... this patch attempts to highlight every field in the index, stored or otherwise, termVectors or otherwise.\n\n "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12589384",
            "date": "2008-04-16T01:29:29+0000",
            "content": "Erik, I agree. This issue has been around for almost a year now though. The general case is much harder to implement and get right than such a apecific one; therefore it might be better to start by implementing it for something not too difficult (like highlighting) and see what people think of it. First to see which features are really needed, but also to see whether it's the right approach at all.\n\nChris, good point. I didn't think about this because in the schema I'm using with the patched Solr instance all fields happen to be stored. I've changed the patch to return only stored fields. Now, this is arguably not the right place for generic give-me-all-stored-fields code and the implementation is inefficient. My knowledge of the Solr code base isn't good enough though to figure out the right place for this code \u2013 it needs to talk to both Solr and Lucene code to get all static and dynamic fields. Should this maybe go into the SolrCore code? It could maintain a list of stored fields which is assembled on startup and updated on <commit/> instead of reassembling it for every query.\n\nNote that the latest version of the patch could also easily be tweaked to allow arbitrary wildcard specifications of the fields to highlight (e.g. hl.fl=text_*). "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12589385",
            "date": "2008-04-16T01:30:17+0000",
            "content": "New patch returning only the stored fields. "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12609453",
            "date": "2008-07-01T04:57:17+0000",
            "content": "I've changed a couple of things and uploaded the new patch.\n\n\n\tThe stored fields are no longer determined in SolrHighlighter for every request, but in SolrIndexSearcher when creating a new object. The implementation now simply queries the schema for all field names the index reader knows about and checks for each whether it's stored. The collections of field names and stored field names are exposed through getters. SolrHighlighter simply matches against the items of the storedFieldNames collection.\n\tAdded generic support for wildcards; in addition to \"\" things like \"foo_\" also work now. Now for example the prototype of a dynamic field may be given as field name to highlight on and all instances of that prototype will be highlighted.\n\tAdded a unit test to verify that highlighting with wildcard fields works as expected.\n\n "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12615521",
            "date": "2008-07-22T05:30:23+0000",
            "content": "The old patch didn't verify properly that only stored static fields are returned. The new patch fixes this. "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12619760",
            "date": "2008-08-05T01:22:00+0000",
            "content": "Syncing patch with trunk. "
        },
        {
            "author": "David Smiley",
            "id": "comment-12627071",
            "date": "2008-08-29T19:03:21+0000",
            "content": "I'd like this incorporated into Solr.  I stupidly didn't search for this feature and I went and did it myself... was just about to submit my own patch.  Doh! "
        },
        {
            "author": "David Smiley",
            "id": "comment-12627985",
            "date": "2008-09-03T12:55:19+0000",
            "content": "Hey SOLR-540 people, please see the comment thread on SOLR-750 which is apparently a bug with this patch. "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12628006",
            "date": "2008-09-03T14:07:43+0000",
            "content": "Attaching new patch which only highlights on stored text/string fields. Added test case to verify that. "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12632967",
            "date": "2008-09-20T14:36:28+0000",
            "content": "Syncing patch with trunk. "
        },
        {
            "author": "David Smiley",
            "id": "comment-12641672",
            "date": "2008-10-22T00:04:07+0000",
            "content": "I've seen cases where I'd get an error because the previous index contained a field that is no longer in the current schema.  I've corrected this by Changing line 171 of SolrIndexSearcher to go from a simple lookup of the field to one that catches this exception like so:\n\n      SchemaField field;\n      try {\n        field = schema.getField(fieldName);\n      } catch (SolrException e) {\n        log.fine(\"Skipping indexed field not found in schema e:\"+e);//no reason to log stacktrace\n        continue;\n      }\n\n "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12641726",
            "date": "2008-10-22T06:51:31+0000",
            "content": "Hmm, actually the list of fields to highlight on should be rebuilt in cases like that. Are you opening a new searcher for the new index? "
        },
        {
            "author": "David Smiley",
            "id": "comment-12641993",
            "date": "2008-10-22T23:05:59+0000",
            "content": "This  happens to me when I run the ant unit tests on a few of the tests ( I don't have an example off hand ).  It may be related to re-running tests without cleaning; I'm not sure.  Perhaps the state of past-runs are affected. "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12642272",
            "date": "2008-10-23T20:43:20+0000",
            "content": "I've run the tests repeatedly and wasn't able to reproduce the problem. Can you perhaps nail it down to a particular test? "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12644095",
            "date": "2008-10-30T20:43:36+0000",
            "content": "Attaching patch which handles the case where a field is present in the index but not defined in the field by logging a warning instead of throwing a RuntimeException. "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12645987",
            "date": "2008-11-08T14:32:02+0000",
            "content": "Syncing patch with trunk. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12659254",
            "date": "2008-12-26T17:08:55+0000",
            "content": "Looks useful.\n\nIt's questionable if we always want to generate the fields collection, or if we want to defer until first requested, but it's an easy change to do it later if we decide to (i.e. not an interface change).\n\nPerhaps the test for text fields should use istanceof instead of class comparison so subclasses of TextField will work? "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12659434",
            "date": "2008-12-28T13:53:18+0000",
            "content": "Attaching new patch which uses instanceof instead of comparing the classes directly and defers the generation of the list of fields to highlight on until they're requested. I left the assignment of fields the index reader knows about in the constructor because this shouldn't be too expensive. It could easily be moved into the getter as well though. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12659680",
            "date": "2008-12-29T22:48:53+0000",
            "content": "Committed,  thanks Lars! "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12659685",
            "date": "2008-12-29T23:05:35+0000",
            "content": "I imagine it would be useful to be able to use globbing in conjunction with normal field specification, or multiple globs?\n\nexample:  hl.fl=body,_text,_misc\n\nI didn't hold up committing this issue for that since it would be a strict API superset.\nThoughts? "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12659700",
            "date": "2008-12-29T23:59:43+0000",
            "content": "Muchos gracias.\n\nRe globbing, I'm sure I saw an issue about doing that in general somewhere. Can't find it though, does anybody remember? Anyway, I think this should be tackled more generally, i.e. have a utility function that takes a list of parameters (possibly containing globs) and a list of possible values and returns the matching values. Most likely this function would be declared in an interface somewhere and implemented differently for highlighting, faceting, etc. This would be quite a major change though and should definitely be a separate issue.\n\n(Yonik, next on my list is SOLR-634 btw. HINT HINT)  "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12659702",
            "date": "2008-12-30T00:02:58+0000",
            "content": "Ah, just remembered, see SOLR-650. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775507",
            "date": "2009-11-10T15:51:42+0000",
            "content": "Bulk close for Solr 1.4 "
        }
    ]
}