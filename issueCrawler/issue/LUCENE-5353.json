{
    "id": "LUCENE-5353",
    "title": "ShingleFilter should have a way to specify FILLER_TOKEN",
    "details": {
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [
            "modules/analysis"
        ],
        "affect_versions": "4.6",
        "status": "Closed",
        "fix_versions": [
            "4.7",
            "6.0"
        ]
    },
    "description": "Today we have no choice that if pos_inc is > 1 there will be a `_` inserted in between the tokens. We should have the ability to change this character and the char[] that holds it should not be public static since it's mutable.",
    "attachments": {
        "LUCENE-5353.patch": "https://issues.apache.org/jira/secure/attachment/12625141/LUCENE-5353.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13841643",
            "author": "Michael McCandless",
            "content": "+1 ",
            "date": "2013-12-06T20:10:36+0000"
        },
        {
            "id": "comment-13884356",
            "author": "Steve Rowe",
            "content": "Thanks for the patch, Ahmet.\n\nAttaching a new patch with a few minor mods:\n\n\n\tsetFillerToken() now takes a String instead of a char[], which was awkward.\n\twhen arg to setFillerToken() is null, set the filler token to new char[0].\n\tbeefed up javadocs\n\tadded tests for zero-length and null args to setFillerToken().\n\n\n\nI think it's ready to go. ",
            "date": "2014-01-28T17:44:47+0000"
        },
        {
            "id": "comment-13885151",
            "author": "Ahmet Arslan",
            "content": "Thanks for looking into this, Steve. It seems that you accidentally attached the same patch.  ",
            "date": "2014-01-29T09:01:35+0000"
        },
        {
            "id": "comment-13885322",
            "author": "Steve Rowe",
            "content": "Thanks for looking into this, Steve. It seems that you accidentally attached the same patch.\n\nOops - here's the correct patch, thanks for letting me know. ",
            "date": "2014-01-29T13:19:23+0000"
        },
        {
            "id": "comment-13885715",
            "author": "Simon Willnauer",
            "content": "can we maybe try to not add setters to those Filters. It's generally not a good idea to have any mutators on these classes IMO there should be a ctor that take these parameters and that entire thing should be immutable. I also don't think we should keep the public static char array since it's mutable as well.  ",
            "date": "2014-01-29T19:49:21+0000"
        },
        {
            "id": "comment-13885727",
            "author": "Steve Rowe",
            "content": "can we maybe try to not add setters to those Filters. It's generally not a good idea to have any mutators on these classes IMO there should be a ctor that take these parameters and that entire thing should be immutable.\n\nI agree in theory, but this class has other options which should get the same treatment, and presumably other filters have the same issue.  Can you make another issue to do across-the-board cleanup?\n\nI also don't think we should keep the public static char array since it's mutable as well.\n\nThe public static is the default value, so it needs to be there... why not keep it public?  Would renaming it to \"default\"<whatever> do it for you? ",
            "date": "2014-01-29T19:58:05+0000"
        },
        {
            "id": "comment-13885745",
            "author": "Steve Rowe",
            "content": "Also, Simon, switching from setters to ctor args means either a) have a zillion permutations of ctor args to support not specifying some subset of args w/ defaults, or b) doing away with defaults.  I don't like either of those \"solutions\". ",
            "date": "2014-01-29T20:13:01+0000"
        },
        {
            "id": "comment-13885762",
            "author": "Simon Willnauer",
            "content": "I agree in theory, but this class has other options which should get the same treatment, and presumably other filters have the same issue. Can you make another issue to do across-the-board cleanup?\n\nthat is fine for existing stuff but new stuff should not got down that path. We can have one large ctor for all the other options that are rare no need for ton's of permutations.\n\nThe public static is the default value, so it needs to be there... why not keep it public? Would renaming it to \"default\"<whatever> do it for you?\n\njust make it a public static final String and call toCharArray on it no need to expose the impl details that this is a char array. ",
            "date": "2014-01-29T20:27:44+0000"
        },
        {
            "id": "comment-13885775",
            "author": "Steve Rowe",
            "content": "\nI agree in theory, but this class has other options which should get the same treatment, and presumably other filters have the same issue. Can you make another issue to do across-the-board cleanup?\nthat is fine for existing stuff but new stuff should not got down that path. We can have one large ctor for all the other options that are rare no need for ton's of permutations.\n\nI disagree - I don't want to commit a half-assed fix here.  I think the way to go is make another issue to do across-the-board cleanup, on trunk, and deprecate the existing mess on branch_4x.\n\nYour way makes it harder to use this option via a mile-long ctor, and the class is still not immutable.  Extra user effort for zero benefit.  No thanks.\n\n\nThe public static is the default value, so it needs to be there... why not keep it public? Would renaming it to \"default\"<whatever> do it for you?\njust make it a public static final String and call toCharArray on it no need to expose the impl details that this is a char array.\n\nI agree, it already is public static final, and it should be a String. ",
            "date": "2014-01-29T20:35:00+0000"
        },
        {
            "id": "comment-13885790",
            "author": "Simon Willnauer",
            "content": "I disagree - I don't want to commit a half-assed fix here. I think the way to go is make another issue to do across-the-board cleanup, on trunk, and deprecate the existing mess on branch_4x.\n\nI disagree here since a global cleanup is going to take time so I think progress is better than perfection take the chance and clean it up now. But I am not going to block it though. I am more concerned about the char[] stuff and those should be strings though.  ",
            "date": "2014-01-29T20:40:24+0000"
        },
        {
            "id": "comment-13885802",
            "author": "Steve Rowe",
            "content": "I disagree here since a global cleanup is going to take time so I think progress is better than perfection take the chance and clean it up now.\n\nOkay, in that spirit, I'll add the mile-long ctor, and deprecate all the setters, including the new setFillerToken(), and I'll remove the setters when I commit on trunk.\n\nI am more concerned about the char[] stuff and those should be strings though.\n\nYou said \"those\", implying multiple char[] stuff, but I think there's only one - are you thinking of something other than this?:\n\n\npublic static final char[] FILLER_TOKEN = { '_' };\n\n\n\nI'll post a new patch in a minute. ",
            "date": "2014-01-29T20:51:47+0000"
        },
        {
            "id": "comment-13885803",
            "author": "Simon Willnauer",
            "content": "yeah sorry I meant the FILLER_TOKEN sry!\n\nAh you don't need to I mean we can clean this one up in a different issue but I don't think we need to do all TokenFilters just because we wanna fix this one.. ",
            "date": "2014-01-29T20:54:28+0000"
        },
        {
            "id": "comment-13885870",
            "author": "Steve Rowe",
            "content": "Ah you don't need to I mean we can clean this one up in a different issue but I don't think we need to do all TokenFilters just because we wanna fix this one..\n\nMakes sense, I'll create an issue for fixing all of them, and attach a patch for just ShingleFilter.  Relatedly, I see Chris Male made ShingleAnalyzerWrapper immutable in LUCENE-3434.\n\nAttaching a hopefully final patch with these changes:\n\n\n\tchar[] FILLER_TOKEN -> String DEFAULT_FILLER_TOKEN\n\tsetTokenFiller() -> setFillerToken() (I blame my latent dyslexia for not noticing this one sooner...)\n\tTOKEN_SEPARATOR -> DEFAULT_TOKEN_SEPARATOR (it was the only public static final default without the DEFAULT_ prefix)\n\tAdded fillerToken support to ShingleAnalyzerWrapper/Test\n\n ",
            "date": "2014-01-29T21:57:58+0000"
        },
        {
            "id": "comment-13885912",
            "author": "Simon Willnauer",
            "content": "LGTM ",
            "date": "2014-01-29T22:25:59+0000"
        },
        {
            "id": "comment-13885978",
            "author": "Steve Rowe",
            "content": "Final final patch attached - I added explicit fillerToken tests to ShingleAnalyzerWrapperTest.\n\nCommitting shortly. ",
            "date": "2014-01-29T23:16:19+0000"
        },
        {
            "id": "comment-13886000",
            "author": "ASF subversion and git services",
            "content": "Commit 1562639 from Steve Rowe in branch 'dev/trunk'\n[ https://svn.apache.org/r1562639 ]\n\nLUCENE-5353: ShingleFilter's filler token should be configurable ",
            "date": "2014-01-29T23:34:49+0000"
        },
        {
            "id": "comment-13886038",
            "author": "ASF subversion and git services",
            "content": "Commit 1562647 from Steve Rowe in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1562647 ]\n\nLUCENE-5353: ShingleFilter's filler token should be configurable (merged trunk r1562639) ",
            "date": "2014-01-30T00:01:29+0000"
        },
        {
            "id": "comment-13886057",
            "author": "Steve Rowe",
            "content": "Committed to trunk and branch_4x.\n\nThanks Ahmet and Simon! ",
            "date": "2014-01-30T00:12:36+0000"
        }
    ]
}