{
    "id": "SOLR-9154",
    "title": "Config API does not work when adding a component with DirectSolrSpellChecker",
    "details": {
        "components": [
            "config-api",
            "spellchecker"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.4",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "When trying to add a DirectSolrSpellchecker using the Config API (JSON), there seems to be a loss of information w.r.t the param types. The accuracy field, only in this specific case needs to be defined as a float it seems. While this is possible when updating the solrconfig,xml directly, the field type (float) can not be specified using JSON. \n\nHere are the steps to reproduce this issue:\n\n\n#Bootstrapping\nbin/solr start -c\nbin/solr create -c foo\nbin/post -c foo example/exampledocs/books.csv\n\n#Add spell checker - This would hang and the logs contain recurring exceptions as mentioned below\ncurl http://localhost:8983/solr/foo/config -H 'Content-type:application/json' -d '{\"update-searchcomponent\": {\"name\":\"spellcheck\",       \"class\":\"solr.SpellCheckComponent\",       \"spellchecker\":[         { \"name\":\"text_index_dictionary\", \"field\":\"text\", \"classname\":\"solr.DirectSolrSpellChecker\", \"distanceMeasure\":\"org.apache.lucene.search.spell.LevensteinDistance\", \"accuracy\":0.5, \"maxEdits\":2, \"minPrefix\":1, \"maxInspections\":5, \"minQueryLength\":4, \"maxQueryFrequency\":0.001, \"thresholdTokenFrequency\":0.01}]}}'\n\n\n\nLog:\n\n2016-05-24 04:08:44.371 ERROR (SolrConfigHandler-refreshconf) [c:foo s:shard1 r:core_node1 x:foo_shard1_replica1] o.a.s.h.SolrConfigHandler Unable to refresh conf \norg.apache.solr.common.SolrException: Unable to reload core [foo_shard1_replica1]\n\tat org.apache.solr.core.CoreContainer.reload(CoreContainer.java:944)\n\tat org.apache.solr.core.SolrCore.lambda$getConfListener$7(SolrCore.java:2510)\n\tat org.apache.solr.handler.SolrConfigHandler$Command$1.run(SolrConfigHandler.java:218)\nCaused by: org.apache.solr.common.SolrException: java.lang.Double cannot be cast to java.lang.Float\n\tat org.apache.solr.core.SolrCore.<init>(SolrCore.java:773)\n\tat org.apache.solr.core.SolrCore.reload(SolrCore.java:462)\n\tat org.apache.solr.core.CoreContainer.reload(CoreContainer.java:938)",
    "attachments": {
        "SOLR-9154.patch": "https://issues.apache.org/jira/secure/attachment/12806196/SOLR-9154.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-05-25T18:27:08+0000",
            "author": "Anshum Gupta",
            "content": "Seems like all assignments have issues in the init method for this class. This was the first one so this is all that got hit and logged.\nI'll work on a patch. ",
            "id": "comment-15300599"
        },
        {
            "date": "2016-05-25T19:30:29+0000",
            "author": "Anshum Gupta",
            "content": "I'm not purely convinced with the patch but this works. If someone has a better idea, feel free to suggest, else I'll commit this after adding a test. ",
            "id": "comment-15300703"
        },
        {
            "date": "2016-06-29T14:35:20+0000",
            "author": "Alex D",
            "content": "Would it be possible to convert the config variable to a SolrParams (e.g.: using SolrParams.toSolrParams)?  This way you could use get* methods instead of parsing the string yourself. ",
            "id": "comment-15355332"
        },
        {
            "date": "2016-07-02T19:55:38+0000",
            "author": "David Smiley",
            "content": "Would it be possible to convert the config variable to a SolrParams (e.g.: using SolrParams.toSolrParams)? This way you could use get* methods instead of parsing the string yourself.\n\n+1 \u2013 I've often felt the annoying differences between NamedList and SolrParams for the simple name=value cases.  A convenience method on NamedList toSolrParams() would make this more obvious.  These initializers could be updated to use SolrParams instead.  That's obviously a bigger refactoring & scope change than just the spellchecker, but it seems inevitable something broader than just this patch should get done as it's inevitable this same bug pattern will appear again!\n\nAnother possible change, possibly simpler, is to have NamedList have getFloatVal, getDoubleVal, getStringVal, getIntVal, getLongVal.  It already has getBooleanArg which is named poorly (IMO).  And then, update everyone to use these rather than getVal.  These added methods could do float/double conversions, treating them equivalently.  Maybe String parsing too. ",
            "id": "comment-15360313"
        },
        {
            "date": "2017-01-01T23:38:28+0000",
            "author": "Anshum Gupta",
            "content": "I think this is better, but I'm not sure if for the sake of this patch, we should expose params. ",
            "id": "comment-15791836"
        },
        {
            "date": "2017-01-02T01:23:33+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 93562da610bf8756351be7720c69872bc1cea727 in lucene-solr's branch refs/heads/master from anshum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=93562da ]\n\nSOLR-9154: Fix DirectSolrSpellChecker to work when added through the Config API ",
            "id": "comment-15791960"
        },
        {
            "date": "2017-01-02T18:34:13+0000",
            "author": "ASF subversion and git services",
            "content": "Commit fb39e397dbd17fea68f5d46baf80f5af8f5b59d0 in lucene-solr's branch refs/heads/branch_6x from anshum\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=fb39e39 ]\n\nSOLR-9154: Fix DirectSolrSpellChecker to work when added through the Config API ",
            "id": "comment-15793296"
        }
    ]
}