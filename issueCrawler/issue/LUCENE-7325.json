{
    "id": "LUCENE-7325",
    "title": "GeoPointInBBoxQuery no longer includes boundaries?",
    "details": {
        "resolution": "Not A Bug",
        "affect_versions": "6.1",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Blocker",
        "status": "Resolved",
        "type": "Bug"
    },
    "description": "GeoPointInBBoxQuery is supposed to include boundaries, and it does in 5.x and 6.0, but in 6.1 something broke.",
    "attachments": {
        "LUCENE-7325.patch": "https://issues.apache.org/jira/secure/attachment/12809196/LUCENE-7325.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15322656",
            "author": "Michael McCandless",
            "date": "2016-06-09T14:57:49+0000",
            "content": "Simple showing the issue ... but it's possible there are test bugs, e.g. wrong lat/lon order or encoding or something  "
        },
        {
            "id": "comment-15322663",
            "author": "Robert Muir",
            "date": "2016-06-09T15:00:58+0000",
            "content": "Note we already have a test and it will fail if you enable the new RNG for geopoint (LUCENE-7185).\n\nOther tests fail too, thats still not fixed. GeoPoint hacks around this with a \"GeoPointTestUtil\" at the moment. If this is removed you will see them. "
        },
        {
            "id": "comment-15322667",
            "author": "Michael McCandless",
            "date": "2016-06-09T15:02:55+0000",
            "content": "I think we should fix this for 6.1.0. "
        },
        {
            "id": "comment-15322668",
            "author": "Michael McCandless",
            "date": "2016-06-09T15:03:34+0000",
            "content": "If this is removed you will see them.\n\n+1 to remove GeoPointTestUtil ... we need stronger testing here, to prevent regressions like this. "
        },
        {
            "id": "comment-15323546",
            "author": "Nicholas Knize",
            "date": "2016-06-09T22:51:22+0000",
            "content": "The attached patch fixes a bug in GeoPointPrefixTermsEnum and removes GeoPointTestUtil from TestGeoPointQuery. On my machine the random testing passed a couple hundred beast iterations, but Mike's simple test still fails. So are we sure the random tests are exercising these boundary conditions as often as we think? Or did I miss something?\n\nAnyway, the failure is related to LUCENE-7166. Specifically, This change which Robert's comment explains quite nicely. The fix (mentioned in the comment) is to move to the stable 64 bit encoding in LUCENE-7186. But GeoPointField will need bwc with the 62 bit encoding. If we want this for 6.1 (which I think we will need?) it should probably be labeled as a blocker. "
        },
        {
            "id": "comment-15324039",
            "author": "Adrien Grand",
            "date": "2016-06-10T07:48:23+0000",
            "content": "Is my understanding correct that there will be accuracy issues due to quantization anyways, and the bug was just hidden before because we also quantized the search-time values? But it had accuracy issues as well since it was more likely to consider some lat/lon points as matching even though they were outside of the bbox, if quantization rounded to the same values.\n\nIf yes, then I am not sure this should be a blocker. This is probably even making things easier to reason about since the rounding is happening only once (at index time). "
        },
        {
            "id": "comment-15324435",
            "author": "Nicholas Knize",
            "date": "2016-06-10T13:19:25+0000",
            "content": "Yes Adrien Grand! Your understanding is correct. And the test suite pre-quantizes the test data, which is why Mike's simple boundary test fails and the test suite doesn't. I ran Mike's test w/ LatLonPoint and it fails with the same quantization error. So this is behaving as expected. +1 for not blocking 6.1.\n\nIf there are no objections I will go ahead and commit the simple GeoPointPrefixTermsEnum bug fix in the attached patch, and remove the GeoPointTestUtil from the GeoPointPrefix tests. We should then be OK to close this issue since we already have one for 64 bit quantization in GeoPointField.  "
        },
        {
            "id": "comment-15324584",
            "author": "Michael McCandless",
            "date": "2016-06-10T15:01:48+0000",
            "content": "The attached patch fixes a bug in GeoPointPrefixTermsEnum and removes GeoPointTestUtil from TestGeoPointQuery. \n\nI'm a little confused: the patch fixes a different bug, that was uncovered by improving testing here by removing GeoPointTestUtil?  Can you add an explicit test case showing that bug?\n\nSpecifically, This change which Robert's comment explains quite nicely.\n\nI see no comment there?  Maybe the link isn't working for me ... the link seems to take me to a local diff where we no longer quantize the values at query time.\n\nThe fix (mentioned in the comment) is to move to the stable 64 bit encoding in LUCENE-7186. But GeoPointField will need bwc with the 62 bit encoding\n\nBut, today, GeoPointField is still using 62 bit encoding right?  (And, yes, switching to 64 bit will need back compat!).\n\n+1 for the test improvement (removing GeoPointTestUtil), but it's maybe good news it doesn't provoke new failures \n\nAnd it looks like my test is invalid!  So just remove it!  And I agree this should not be a blocker anymore. "
        },
        {
            "id": "comment-15324654",
            "author": "Nicholas Knize",
            "date": "2016-06-10T15:40:21+0000",
            "content": "Thanks Michael McCandless!\n\nCan you add an explicit test case showing that bug?\n\nsure thing. It was uncovered after Robert suggested removing GeoPointTestUtil. After that bug is fixed all tests pass w/ GeoTestUtil.\n\nI see no comment there?\n\nSorry, the first issue comment in LUCENE-7166.\n\nBut, today, GeoPointField is still using 62 bit encoding right?\n\nThat's correct.\n "
        },
        {
            "id": "comment-15324658",
            "author": "Michael McCandless",
            "date": "2016-06-10T15:44:37+0000",
            "content": "It was uncovered after Robert suggested removing GeoPointTestUtil. After that bug is fixed all tests pass w/ GeoTestUtil.\n\nOK, thanks for the explanation.  When that bug strikes what exception do you see? "
        },
        {
            "id": "comment-15324700",
            "author": "Nicholas Knize",
            "date": "2016-06-10T16:04:30+0000",
            "content": "\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestGeoPointQuery -Dtests.method=testRandomMedium -Dtests.seed=3254B65F0C8C1F93 -Dtests.slow=true -Dtests.locale=th-TH -Dtests.timezone=Etc/GMT -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n   [junit4] ERROR   0.35s J0 | TestGeoPointQuery.testRandomMedium <<<\n   [junit4]    > Throwable #1: java.lang.IllegalArgumentException: Illegal shift value, must be 32..63; got shift=0\n\n "
        },
        {
            "id": "comment-15324886",
            "author": "Nicholas Knize",
            "date": "2016-06-10T17:29:30+0000",
            "content": "I moved the bug fix to LUCENE-7331 since its not technically related to this issue. I think we can go ahead and close this as a non-issue? "
        },
        {
            "id": "comment-15324902",
            "author": "Adrien Grand",
            "date": "2016-06-10T17:34:32+0000",
            "content": "Agreed: closing. Thanks for having looked into it! "
        },
        {
            "id": "comment-15325166",
            "author": "Michael McCandless",
            "date": "2016-06-10T19:48:12+0000",
            "content": "Thanks Nicholas Knize. "
        }
    ]
}