{
    "id": "SOLR-4431",
    "title": "Developer Curb Appeal: easier URLs for Cloud UI, Admin, etc.",
    "details": {
        "affect_versions": "4.1",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "SolrCloud"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Currently the URL to get the cloud UI is http://172.16.10.236:8983/solr/#/~cloud\n\nThe path and anchor portion is very strange: \"/solr/#/~cloud\"\n\nIdeally it would just be \"/cloud\"\n\nOr even just \"/\", and if it's in \"cloud mode\", take the admin to the right place.\n\nIf there's some internal important structural reason for \"/solr\", \"#\" and \"~cloud\" sections, perhaps each would need to be addressed.\n\nAnother option would be to possibly put something the default Jetty xml file to handle this as some type of redirect or registered handle.",
    "attachments": {
        "SOLR-4431.patch": "https://issues.apache.org/jira/secure/attachment/12577832/SOLR-4431.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13596596",
            "date": "2013-03-08T00:10:10+0000",
            "content": "If there's some internal important structural reason for \"/solr\", \"#\" and \"~cloud\" sections, perhaps each would need to be addressed.\n\nThe crux of the \"/#/\" URL schema is because these are all UI based URLs, and the UI is a single html page bound to the \"/\" URL, with jquery hooks to have the browser look at the URL fragment (everything after the \"#\") do decide which views/info to show (in the case of the example, solr us registered in the \"/solr\" context, so the ui is bound to \"/solr/\"\n\nHaving the entire UI be powered by the single \"/\" URL means that it's very clear when a request is for the UI vs a request to underlying collections+handlers.\n\nswitching these UI URLs from things like \"/~cloud\" to \"/cloud\" would cause problems for anyone who might want to have a collection named \"cloud\" \n\nPersonally, i don't see any major need to change the UI URLs.  I would rather the UI urls be a little longer if it means ensuring no conflicts with the underlying API URIs.\n\ni can certainly understand how the curb appeal might be improved by switching the jetty example to run solr in the root context (\"/\" instead of \"/solr\", with some jetty redirect magic so old example URLs take you to the right place) by default but i don't see any reason to sweat the \"#\" or \"~\" "
        },
        {
            "author": "Mark Bennett",
            "id": "comment-13599250",
            "date": "2013-03-11T20:38:32+0000",
            "content": "Adding links to mailing list thread\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201303.mbox/%3c631E3430-6203-44CC-84C9-41A2E773A05D@lucidworks.com%3e\nor on OSDir\nhttp://osdir.com/ml/general/2013-03/msg14144.html\n\nThe gist is that:\n\n\tStuff after pound sign # is the only part of the URL that can be easily changed without forcing a round trip to the server\n\tThe tilde/tilda (~) distinguishes between generic pages, vs URLs specific to a core (which won't have them)\n\t/solr is to support having more than one app inside a web container, though works from root  and in theory example could use that\n\n\n\nMy take:\n\n\tThere's good technical reasons for the # and ~, so of course they will stay.\n\tHowever, could we maybe have shortcut URLs that redirect to those longer ones.  (posted to Stefan on the list)\n\n "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13599363",
            "date": "2013-03-11T21:48:30+0000",
            "content": "-1 to any change here or \"shortcut\" URLs. Solr 4 is a new major veryion, old style URLs need no redirection. If somebody needs them, it is easy to modify the webapp / webserver to forward to forward in that case. "
        },
        {
            "author": "Mark Bennett",
            "id": "comment-13626824",
            "date": "2013-04-09T17:04:48+0000",
            "content": "Adds 3 convenience URLs that generate 302 redirects.\n\nAlso includes ivy entry to fetch 1 additional jetty jar and ini to include it.\n\nThese are not mimicking older Solr URLs.  The nice thing is that they could easily be modified in the future if we need to change the URL structure again. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13626889",
            "date": "2013-04-09T18:03:45+0000",
            "content": "-1\n\na) this patch would change the behaviour only of the example jetty server, causing solr to (knowingly!) behave radically different if you deployed to a different servlet container.\n\n2) as explicitly mentioned before, this change would cause problems for people trying to create solr cores (or handlers in the default solr core) named \"cloud\" (or any other names that get taken up by other aliases like this that might get added if we go down this road)...\n\nswitching these UI URLs from things like \"/~cloud\" to \"/cloud\" would cause problems for anyone who might want to have a collection named \"cloud\" \n\nThe included Admin UI is a nice to have, but improving it's ease of use or prettiness must not come at the expense of reduced configurability or expressiveness of the underlying API URLs.\n\nIf people want an admin UI for solr that has short and pretty URLs then it should be something deployed as an independent war (or written in ruby or whatever)\n "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13626992",
            "date": "2013-04-09T19:33:47+0000",
            "content": "-1 here too, can't think of any additional reasons beyond those Hoss has stated.\n\nEverything except this patch's specific tie to jetty would be solved if we could put the API to access cores and collections into its own url path, such as /api/corename (horrible name, just for illustration purposes).  That is an idea with its own problems, though.  The current URL scheme is so widely used that there'd be no way we could remove backward compatibility until at least 6.0.  Note: I actually think this would be a good move, but I would not expect to see a lot of support for it. "
        },
        {
            "author": "Mark Bennett",
            "id": "comment-13628003",
            "date": "2013-04-10T17:19:42+0000",
            "content": "This patch proposes 3 simple URLs redirects:\n\n\tSend /admin to /solr/#/\n\tSend /cores to /solr/#/~cores\n\tSend /cloud to /solr/#/~cloud\n\n\n\nPoints that might not be clear:\n\n\tThis doesn't not attempt to change the overall URL structure, it's not trying to get rid of the # or ~ stuff; the earlier comments explained why those needed to be there.\n\tIt's just 3 simple 302 redirects, for 3 specific URLs.\n\tIt does a redirect (NOT a rewrite), so it's quite clear what it's doing for you\n\tOnly for those EXACT URLs.  If you put \"/admin/foobar\" or \"/cloud9\" it doesn't match.\n\tThese are very prominently shown at the top of jetty.xml, so really to see.\n\n\n\nResponse to objections:\n\nUwe's objections:\n\n\t\" Solr 4 is a new major veryion\" - agreed\n\t\".., old style URLs need no redirection\" - that's not what this patch does\n\t\"If somebody needs them, it is easy to modify the webapp / webserver to forward to forward in that case.\" - actually it wasn't easy, due to to ivy and jetty issues.  But this patch fixes that, and gives 3 nice examples, so now it would be easy.\n\n\n\nHoss's objections:\n\n\t\"a) this patch would change the behaviour only of the example jetty server,\" - yes, via a very visible configuration in jetty.xml\n\t\"... causing solr to (knowingly!) behave radically different\" - radically different?? It only matches those 3 exact URL fragments?\n\t\"... if you deployed to a different servlet container.\" - but then you wouldn't use jetty.xml, or at least you'd have to rename and modify the file, and you'd certainly see the redirects, and could choose to retain them or not.\n\t\"2) ... this change would cause problems for people trying to create solr cores (or handlers in the default solr core) named \"cloud\" - But it only matches \"c l o u d\", and if you didn't like it, it's at the top of jetty.xml and can easily be removed, .  And for holding out for that pristine possibility that somebody might someday do, 100% of users are denied convenience URLs\n\t\"(or any other names that get taken up by other aliases like this that might get added if we go down this road)...\" - the redirects are very visible and easily removed.  And I actually think it gives a nice example of what people could do privately on their own projects.  Prior to this patch, redirects weren't working at all in our default Solr.\n\t\"The included Admin UI is a nice ... must not come at the expense of reduced configurability or expressiveness of the underlying API URLs.\" - It doesn't.  Not using rewrites, and every easy to remove it.\n\t\"If people want an admin UI for solr that has short and pretty URLs then it should be something deployed as an independent war (or written in ruby or whatever)\" - Realistically this may never happen.  Meanwhile, other open source offerings have nice simple URLs (though don't have the rich UI)\n\n\n\nShawn's objections:\n\n\t\"Everything except this patch's specific tie to jetty would be solved if we could put the API to access cores and collections into its own url path ...\" - I wonder if some of folks misunderstood what this patch does - it's NOT doing internal rewrites, and it's not doing partial matching.\n\t\"The current URL scheme is so widely used that there'd be no way we could remove backward compatibility ...\" - I'm a bit confused by this, the patch does NOT change the URL structure.  It's just 3 simple 302 redirects.\n\n "
        },
        {
            "author": "Mark Bennett",
            "id": "comment-13628124",
            "date": "2013-04-10T19:02:46+0000",
            "content": "Further clarification, in case there's any confusion:\n\n\n\tThis patch doesn't prevent you from dropping solr.war into another app server; it doesn't touch anything in there, and doesn't change it's behavior.\n\tIt's a change to the jetty.xml (specific to jetty), and jetty's start.ini (also specific to jetty)\n\tFurther, it only matters if you're using our example jetty config files.\n\tEven the change in ivy is limited in scope, it's only made in the example/ivy.xml file, where other jetty libraries are pulled in, so very specific to jetty and not touching solr.war.\n\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13628130",
            "date": "2013-04-10T19:11:00+0000",
            "content": "I'm not worried about most of the other arguments - I don't think we should sacrifice our out of the box experience in the name of other containers. I believe that Solr is an app, not a war.\n\nHowever\n\nthis change would cause problems for people trying to create solr cores (or handlers in the default solr core) named \"cloud\"\n\nTo me, the nil to slight benefit is not worth that.\n "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13628174",
            "date": "2013-04-10T19:51:02+0000",
            "content": "With apologies to Hoss for jumping in and possibly speaking for him:\n\nbut then you wouldn't use jetty.xml, or at least you'd have to rename and modify the file, and you'd certainly see the redirects, and could choose to retain them or not.\n\nA \"typical\" tomcat/glassfish/whatever user will never look at jetty.xml.  They would have no reason to - they aren't using jetty.  They will use the .war file and possibly a few of the miscellaneous solr/lucene jars, either in-place in the solr download or by copying them to a new location.  If someone who uses the included jetty (patched as you propose) were to talk to a tomcat user, they might say \"go to http://localhost:8983/solr/cloud\" to that user.  If that tomcat user had never looked at jetty.xml or had never updated their tomcat configuration to match the jetty example, the URL would fail.\n\nI'm a bit confused by this, the patch does NOT change the URL structure. It's just 3 simple 302 redirects.\n\nWhat I have proposed there is a completely separate change, requiring its own Jira, which I have created as SOLR-4700.  The idea would be that going forward, we would use http://host:port/solr/XXX/corename as the base URL for clients instead of http://host:port/solr/corename as we do now.  I don't have a good suggestion for XXX at the moment.  If we did that, then you could still create a collection or core named \"cloud\" and that would not get in the way of a convenience URL.  At that point the convenience URLs could be baked into Solr code rather than provided by the servlet container. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13628255",
            "date": "2013-04-10T21:11:45+0000",
            "content": "Hi,\nFYI. This patch is jetty specific and it also works outside the webapp context! So I stringly disagree with it.\n\nBut: Solr already ships with a RedirectServlet (thats currently not used). You can refer it from the web.xml and configure it through init parameters with HTTP status and target URL. If you then bind this servlet in the web.xml to a specific path (relative to the webapp), it redirects all requests to another URL (also relative). This would make the whole webapp working by itsself and no external configuration. "
        }
    ]
}