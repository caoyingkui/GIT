{
    "id": "LUCENE-5647",
    "title": "fix current term vectors bulk merge",
    "details": {
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "5.1",
            "6.0"
        ]
    },
    "description": "See LUCENE-5646 for the motivation.\n\nLong term it might be nice to add algorithm #2 to term vectors if its possible and not too complex.\n\nBut for now, I think we should avoid such rare optimizations.",
    "attachments": {
        "LUCENE-5647.patch": "https://issues.apache.org/jira/secure/attachment/12692909/LUCENE-5647.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14279911",
            "author": "Robert Muir",
            "content": "We can easily apply the same algorithm as LUCENE-6183 so the optimization will be effective and not a rare one. I think we should remove the existing logic completely for that, falling back to the default algorithm otherwise. I can investigate this tomorrow.\n\nWe should think about implementing getMergeInstance() like LUCENE-6115, so that the fallback default algorithm is reasonable for all other cases. ",
            "date": "2015-01-16T07:19:50+0000"
        },
        {
            "id": "comment-14281278",
            "author": "Robert Muir",
            "content": "initial patch.\n\nif you look at the current logic, it tries to optimize this, but doesnt have any safety switch. it also doesn't always work: it sometimes falls back to the default algorithm (even when there are no deletions). This is because of this conditional logic in trunk, comments mine:\n\n// we currently never bulk merge the last chunk.\n// if this one is not \"full\" and leaves pending docs, we never resync.\nif (docBase + chunkDocs < maxDoc) ...\n\n\n\n When there are deletions it will always fall back and never resync, so handling that case currently doesn't achieve anything except complexity.\n\nThe falling out of sync it does impacts smaller vectors docs more because default algorithm is slow (no getMergeInstance).  For big documents (size > chunkSize), you also dodge the resync problem above.\n\nI replaced it with the same algorithm from stored fields.\n\nIf turned on vectors (5 fields), indexing, and store with small documents (10 fields):\n\n\ntrunk:\ntimeIndexing=601139\ntimeMerging=49046\n\nSM 0 [2015-01-17 03:26:30.208; main]: 3765 msec to merge vectors [9490360 docs]\nSM 0 [2015-01-17 03:26:04.928; main]: 5508 msec to merge vectors [7300730 docs]\nSM 0 [2015-01-17 03:25:43.179; main]: 1261 msec to merge vectors [189430 docs]\n\npatch:\ntimeIndexing=422731\ntimeMerging=43832\n\nSM 0 [2015-01-17 03:37:15.480; main]: 2183 msec to merge vectors [9490360 docs]\nSM 0 [2015-01-17 03:36:50.698; main]: 1492 msec to merge vectors [7300730 docs]\nSM 0 [2015-01-17 03:36:32.620; main]: 27 msec to merge vectors [189430 docs]\n\n\n\nYou can see the forceMerge time is not so much better, because 2/3 of the collection is in the first segment, but overall indexing is improved because it impacts other merges (see the 189430 one)\n\n\nAnyway I think its better overall, at least for simplicity and additional safety mechanism.  ",
            "date": "2015-01-17T10:43:21+0000"
        },
        {
            "id": "comment-14282365",
            "author": "Adrien Grand",
            "content": "+1 ",
            "date": "2015-01-19T10:34:46+0000"
        },
        {
            "id": "comment-14284177",
            "author": "ASF subversion and git services",
            "content": "Commit 1653330 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1653330 ]\n\nLUCENE-5647: fix term vectors bulk merge (same algorithm now as stored fields) ",
            "date": "2015-01-20T18:37:33+0000"
        },
        {
            "id": "comment-14284337",
            "author": "ASF subversion and git services",
            "content": "Commit 1653359 from Robert Muir in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1653359 ]\n\nLUCENE-5647: fix term vectors bulk merge (same algorithm now as stored fields) ",
            "date": "2015-01-20T20:14:49+0000"
        },
        {
            "id": "comment-14495346",
            "author": "Timothy Potter",
            "content": "Bulk close after 5.1 release ",
            "date": "2015-04-15T00:30:43+0000"
        }
    ]
}