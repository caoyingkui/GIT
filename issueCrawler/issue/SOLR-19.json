{
    "id": "SOLR-19",
    "title": "pom.xml to support maven2",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [],
        "components": [],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Duplicate"
    },
    "description": "I created a preliminary pom.xml to support building solr with maven2.\n\nCurrently it compiles all the core solr code into a jar and runs the junit tests.\n\nDropping this pom.xml into the root dir, in parallel with build.xml, will let those who wish to build with maven2.",
    "attachments": {
        "solr-test-maven.zip": "https://issues.apache.org/jira/secure/attachment/12372275/solr-test-maven.zip",
        "solr-maven2.zip": "https://issues.apache.org/jira/secure/attachment/12335053/solr-maven2.zip",
        "pom.xml": "https://issues.apache.org/jira/secure/attachment/12334789/pom.xml"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Darren Erik Vengroff",
            "id": "comment-12413860",
            "date": "2006-05-31T00:35:54+0000",
            "content": "Here is the pom.xml. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12413871",
            "date": "2006-05-31T01:34:20+0000",
            "content": "While I don't know maven, and don't relish the thought of keeping two build files up to date, this pom.xml looks pretty simple.\n\nSo a tentative +1 from me. "
        },
        {
            "author": "Darren Erik Vengroff",
            "id": "comment-12414837",
            "date": "2006-06-06T02:51:57+0000",
            "content": "For anyone interested, here is the current state of my Maven2 support.  The basic idea, as explained in the encolsed HOWTO file, is to enable the creation of custom-configured webapps quickly and easily with minimal additional work and only a very simple pom.xml. "
        },
        {
            "author": "Paul Sundling",
            "id": "comment-12517399",
            "date": "2007-08-02T22:59:31+0000",
            "content": "It's been over a year since the last comment and Maven 2 has improved since then.  Obviously new pom.xml files will need to be generated.  Is there interest in that?\n\nOne major question will be what groupId to use, as top level groupId like solr is discouraged.  Instead I would recommend either of \n\n  org.apache.lucene.solr \n      or \n  org.apache.solr\n\nI could see Solr being a top level project at some point, even though it's directly related to Lucene.\n\nDependencies like Lucene are already available in the Maven repository. "
        },
        {
            "author": "Robert Clark",
            "id": "comment-12533951",
            "date": "2007-10-11T04:33:51+0000",
            "content": "+1 from me, I found these poms very useful for us in helping to provide jar and war files from our development trunk.\n\nIn our local branch of solr-dev we brought everything up to date (all the jars from lib are on public maven repsitories, except for the apache-commons-csv snapshot) and we now have clean jars and wars being provided.\n\nSpecific issues encountered around Maven were:\n\n\ttesting didn't work (i will continue looking at why) as configuring base directories, sys properties, doesn't appear to be \"out of the box\" compatible with maven/eclipse (nothing some digging around can't solve)\n\tsome test sources had to be moved to test source folders from main\n\texecuting \"mvn release:deploy\" didn't work as the modules \"solr-core\" and \"solr-abstract-war\" weren't able to check out the source they operate on into their target directories.  So we ended up with jar's and war's with nothing in them.  The solution to this is a somewhat hacky subversion External pointing \"src\" beneath each of these to the project \"src\" root.\n\n\n\nTo make things more maven compatible there would ideally be one artifact per project, so a movement towards that would be good.  To support both ant users and maven users we thought that the project structure could be refactored to align with single-artifact sub-structures, whilst keeping build.xml aware of all the new locations.\n\nThere would be several sub \"projects\", perhaps:\n  solr-core ( solr-embedded ??)\n  solr-common\n  solr-solrj\n  solr-war\n  solr-example\n\nA top level build.xml would preserve all current behaviour against these.\n\nOnce we're rolling with development it would be quite easy for us to provide patches to make these changes for anyone interested.\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12554632",
            "date": "2007-12-27T23:58:44+0000",
            "content": "Here is a proposed directory structure and functional poms for a stubbed out solr.\n\nThis proposes making 4 artifacts for solr:\n\n\tsolr-common  (jar)\n\tsolr-client  (jar)\n\tsolr-core  (jar)\n\tsolr-server  (war)\n\n\n\nEach artifact depends on the previous ones.\n\n\n\t- - - -\n\n\n\nI have a pom working that loads all dependencies.  everything works from remote repositories except commons-csv.  Currently, I install that manually with:\n\nmvn install:install-file -Dfile=lib/commons-csv-0.1-SNAPSHOT.jar -DgroupId=org.apache.commons -DartifactId=commons-csv -Dversion=0.1-SNAPSHOT -Dpackaging=jar\n\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12557516",
            "date": "2008-01-10T02:26:04+0000",
            "content": "here is a pom that works, but is not how we should have things...\n\nIt stuffs everything (solrj+core) into one artifact "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12562929",
            "date": "2008-01-26T22:20:22+0000",
            "content": "updated for lucene 2.3\n\n(still not a real solution) "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12620412",
            "date": "2008-08-06T20:23:20+0000",
            "content": "FWIW, I don't want to maintain two poms.  I think we should do what Lucene java does.  Publish the jars, etc. but the Ant build is the authoritative build. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12622208",
            "date": "2008-08-13T13:15:51+0000",
            "content": "SOLR-586 implements this via an ant task "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12622211",
            "date": "2008-08-13T13:24:07+0000",
            "content": "Ryan \u2013 this should probably be resolved to \"will not fix\" or something similar as the purpose of this issue is quite different from SOLR-586. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12622214",
            "date": "2008-08-13T13:40:10+0000",
            "content": "either way...  the purpose is identical \u2013 to have published maven artifacts.  feel free to change it if \"duplicate\" does not sit right. "
        }
    ]
}