{
    "id": "LUCENE-7039",
    "title": "Improve PointRangeQuery & co",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "6.0"
        ],
        "priority": "Major",
        "status": "Resolved",
        "type": "Task"
    },
    "description": "The point types are now preferred for indexing numeric fields, but PointRangeQuery has some usability issues.\n\nI think we should make the following changes:\n\n\tnewIntRange(), newLongRange(), newFloatRange(),newDoubleRange(), newBinaryRange(): simple 1D ranges consistent with NumericRangeQuery naming.\n\tnewMultiIntRange(), newMultiLongRange(), newMultiFloatRange(), newMultiDoubleRange(), newMultiBinaryRange(): multi-dimensional versions of the above (take arrays, a bit harder to use, but the arrays have correct type!)\n\ttoString() should be meaningful, it should not spew binary nonsense unless you used a binary range!\n\timprove javadocs\n\n\n\nIf we like this, we could do similar improvements for the ExactPointQuery",
    "attachments": {
        "LUCENE-7039.patch": "https://issues.apache.org/jira/secure/attachment/12788850/LUCENE-7039.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15155646",
            "author": "Robert Muir",
            "date": "2016-02-20T14:37:34+0000",
            "content": "Here is a prototype patch. "
        },
        {
            "id": "comment-15155649",
            "author": "Michael McCandless",
            "date": "2016-02-20T14:42:44+0000",
            "content": "+1, I like this improvement, thanks Robert Muir. "
        },
        {
            "id": "comment-15157219",
            "author": "Robert Muir",
            "date": "2016-02-22T16:17:49+0000",
            "content": "Updated patch. I moved encode/decode methods to the respective XYZField, because we don't want these scattered about everywhere.\n\nAlso I removed the ExactPointQuery, instead adding these simple sugar methods like this:\n\npublic static PointRangeQuery newIntExact(String field, int value) {\n  return newIntRange(field, value, true, value, true);\n}\n\n \n\nOtherwise its a terrible amount of plumbing just to get a range query at the end of the day anyway. And I think since it does not \"do anything different\" behind the scenes this is better, e.g. users will not make some wierd effort to use the exact version to \"optimize\" or anything like that.\n\nI think this is ok for a first step. We may want to do more refactoring/improve docs in a followup. "
        },
        {
            "id": "comment-15157504",
            "author": "Michael McCandless",
            "date": "2016-02-22T19:10:02+0000",
            "content": "+1, lots of great changes here: removing ExactPointQuery to match how you make the range queries, awesome javadocs, factoring out argument checking, consolidating encode/decode in the same class, fixing toString to not be useless \n\nMaybe we should rename PointRangeQuery to PointQuery?\n\nI agree all the TODOs should be done separately.\n\nThanks Robert Muir! "
        },
        {
            "id": "comment-15157610",
            "author": "ASF subversion and git services",
            "date": "2016-02-22T20:10:24+0000",
            "content": "Commit 54a544b3075fe4a5a775d8774d0b462c5324b287 in lucene-solr's branch refs/heads/master from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=54a544b ]\n\nLUCENE-7039: Improve PointRangeQuery & co "
        }
    ]
}