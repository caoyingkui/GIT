{
    "id": "LUCENE-6647",
    "title": "Add GeoHash String Utilities to core GeoUtils",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.3",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "New Feature"
    },
    "description": "GeoPointField uses morton encoding to efficiently pack lat/lon values into a single long. GeoHashing effectively does the same thing but uses base 32 encoding to represent this long value as a \"human readable\" string.  Many user applications already use the string representation of the hash. This issue simply adds the base32 string representation of the already computed morton code.",
    "attachments": {
        "LUCENE-6647.patch": "https://issues.apache.org/jira/secure/attachment/12742953/LUCENE-6647.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14609173",
            "author": "Nicholas Knize",
            "date": "2015-06-30T22:22:40+0000",
            "content": "Initial patch that adds GeoHash string utilities to GeoUtils.java\n\nCurrently only tested and validated against Elasticsearch. Will add unit tests to next patch.  "
        },
        {
            "id": "comment-14644387",
            "author": "Nicholas Knize",
            "date": "2015-07-28T13:51:27+0000",
            "content": "Updated GeoHash patch with unit tests. "
        },
        {
            "id": "comment-14644997",
            "author": "Michael McCandless",
            "date": "2015-07-28T20:29:27+0000",
            "content": "Thanks Nicholas Knize, the geohash utilities and tests look good.\n\nBut I hit this test failure:\n\n\n   [junit4] Suite: org.apache.lucene.search.TestGeoPointQuery\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestGeoPointQuery -Dtests.method=testWholeMap -Dtests.seed=4949D67148502A2 -Dtests.locale=it -Dtests.timezone=Australia/Canberra -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 1.79s J3 | TestGeoPointQuery.testWholeMap <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: testWholeMap failed expected:<15> but was:<16>\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([4949D67148502A2:825F170DAFB39C04]:0)\n   [junit4]    > \tat org.apache.lucene.search.TestGeoPointQuery.testWholeMap(TestGeoPointQuery.java:181)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n   [junit4] IGNOR/A 0.02s J3 | TestGeoPointQuery.testRandomBig\n   [junit4]    > Assumption #1: 'nightly' test group is disabled (@Nightly())\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene53): {id=BlockTreeOrds(blocksize=128), geoField=Lucene50(blocksize=128)}, docValues:{id=DocValuesFormat(name=Lucene50)}, sim=RandomSimilarityProvider(queryNorm=false,coord=crazy): {}, locale=it, timezone=Australia/Canberra\n   [junit4]   2> NOTE: Linux 3.13.0-46-generic amd64/Oracle Corporation 1.8.0_40 (64-bit)/cpus=8,threads=1,free=310567944,total=451936256\n   [junit4]   2> NOTE: All tests run in this JVM: [TestSlowFuzzyQuery, TestDocValuesNumbersQuery, TestJakartaRegexpCapabilities, TestDocValuesTermsQuery, TestGeoPointQuery]\n   [junit4] Completed [14/15] on J3 in 3.40s, 12 tests, 1 failure, 1 skipped <<< FAILURES!\n\n "
        },
        {
            "id": "comment-14646732",
            "author": "Nicholas Knize",
            "date": "2015-07-29T20:43:44+0000",
            "content": "Latest patch for LUCENE-6704 changes mortonEncoding to use full 32bit precision for lat/lon values. This fixes the issue where the max lat/lon was not decoding to the correct precision leading to the failure posted above. A patch will be posted here that is compatible with the changes from LUCENE-6704. "
        },
        {
            "id": "comment-14647625",
            "author": "Nicholas Knize",
            "date": "2015-07-30T13:38:32+0000",
            "content": "Updated patch that depends on LUCENE-6704 - changes morton encoding to use full 64 bits, 32 bits per lat/lon. "
        },
        {
            "id": "comment-14648962",
            "author": "Michael McCandless",
            "date": "2015-07-31T09:12:25+0000",
            "content": "This fixes the issue where the max lat/lon was not decoding to the correct precision leading to the failure posted above.\n\nHmm can you open a new issue whose sole purpose is to cutover to full 32 bit precision for lat/lon?  LUCENE-6704 is about avoiding OOME (or is the full 32 precision necessary to avoid OOME?) ... then we can decouple these issues?  It's hard enough keeping track of all the in-flight patches without some depending on others... "
        },
        {
            "id": "comment-14649859",
            "author": "Nicholas Knize",
            "date": "2015-07-31T21:17:05+0000",
            "content": "can you open a new issue whose sole purpose is to cutover to full 32 bit precision for lat/lon?\n\nLUCENE-6710 adds full 32 bit precision decoupling this issue from LUCENE-6704.\n\nPatch attached to make GeoHashUtils bit precision independent. Unit test provided. "
        },
        {
            "id": "comment-14650245",
            "author": "Michael McCandless",
            "date": "2015-08-01T10:01:48+0000",
            "content": "Thanks Nicholas Knize, I'll commit shortly... "
        },
        {
            "id": "comment-14650251",
            "author": "ASF subversion and git services",
            "date": "2015-08-01T10:08:27+0000",
            "content": "Commit 1693700 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1693700 ]\n\nLUCENE-6647: add GeoHash string utility APIs "
        },
        {
            "id": "comment-14650253",
            "author": "ASF subversion and git services",
            "date": "2015-08-01T10:13:11+0000",
            "content": "Commit 1693702 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1693702 ]\n\nLUCENE-6647: add GeoHash string utility APIs "
        },
        {
            "id": "comment-14713082",
            "author": "Shalin Shekhar Mangar",
            "date": "2015-08-26T13:05:42+0000",
            "content": "Bulk close for 5.3.0 release "
        }
    ]
}