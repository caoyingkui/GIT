{
    "id": "SOLR-9570",
    "title": "Logs backed up on restart are kept forever",
    "details": {
        "components": [
            "scripts and tools"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.3",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "When (re)starting Solr, the start script will backup any existing solr.log or solr_gc.log to a file solr_log_<date> and solr_gc_log_<date> respectively. That may be all good, but these old copies are never cleaned up, as they are not under the control of log4j.\nThis issue will instead rotate solr.log properly on startup, delete old time-stamped files taking up place, back up (one generation only) of console-log and solr_gc.log in $SOLR_LOGS_DIR/archived/.",
    "attachments": {
        "SOLR-8370.patch": "https://issues.apache.org/jira/secure/attachment/12833701/SOLR-8370.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-09-27T13:18:35+0000",
            "author": "Shawn Heisey",
            "content": "If old logs are moved into a subdirectory, then the shell script can use the \"find\" utility to clean them up.  This utility exists on most POSIX systems and although there are differences in capability between different systems, I think there is strong effort to accept the options for core usage like this on all platforms.\n\nIt's possible to do something similar in Windows, but in typical style, it requires a syntax change depending on the Windows version. ",
            "id": "comment-15526100"
        },
        {
            "date": "2016-09-27T13:30:36+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Actually my plan is as follows:\nFor the main solr.log I propose to stop moving the old log before startup, and instead rely on log4j's default of continuing to append the existing file. Although it is nice with a new file on each startup, I don't think it is a must? This single change will fix the issue. You can just search for \"Welcome to Apache Solr\" to find each new startup.\n\nWrt the solr_gc.log I'm also going to enable log rotation, which is supported since JRE7. But the gc log rotation works differently, it will first write to solr_gc.log.0.current until size limit and then rename it to solr_gc.log.0 and start writing solr_gc.log.1.current etc. On every restart it unfortunately always starts overwriting solr_gc.log.0.current. One option could be to on startup create $SOLR_LOGS_DIR/old/ (or wipe it if exists) and move all current gc logs there. ",
            "id": "comment-15526127"
        },
        {
            "date": "2016-09-27T16:46:56+0000",
            "author": "David Smiley",
            "content": "I like the idea of keeping with Log4j's options rather than manual/hand-rolled file juggling.  Can we tell Log4j, at some very early of point of startup (like before we've logged anything) to rotate the log?  That'd be nice.  I wonder if Log4j2 or Logback support such a configuration option \u2013 it seems like something very desirable.  If we don't find such an option, I'm fine with Jan's recommendation of just accepting that the logs since boot aren't necessarily at the top. ",
            "id": "comment-15526706"
        },
        {
            "date": "2016-09-27T18:48:07+0000",
            "author": "Shawn Heisey",
            "content": "I think we could avoid creating a console logfile at all in most conditions, and not worry about rotating it at all.  Here's what I think should happen with the console logging:\n\n\n\tbackground, console NOT muted: redirect to console log.\n\tbackground, console muted:  redirect to /dev/null.\n\tforeground: don't mute.  Output to console, do not redirect or copy to console log.\n\n\n\nI don't know whether the first condition would ever actually happen, but if it can happen, we could have console log rotation only in that situation, rotating the console log through a fixed and limited set of filenames where the oldest one is simply deleted.\n\nThe main log is rotated by log4j, but the script currently renames the active log on startup, so that a fresh log is always from server start.  If a predictable string of text is logged only at service start and can be found with a backwards search from the end of the file, we might not need to have the script rename solr.log at startup.  If log4j can do startup rotation, that would take care of the issue entirely.\n\nI'll take your word on the GC log.  I haven't looked into it. ",
            "id": "comment-15527078"
        },
        {
            "date": "2016-09-27T20:30:25+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "The file solr-8983-console.log is simply a redirect of all stdout/err from the start script. It is only written when in backgoround mode, and log4j's ConsoleAppender is always muted when the file is written. The file is useful since it will capture any errors happening outside of the logging system such as System.out.println or stdout/stderr printouts from some of Solr's dependencies etc. So we should never redirect stdout/err to /dev/null. I think we should try to do some simple rotation not to lose potential important info after a crash.\n\nThe main log will append, and when we switch to Log4j2 we can implement startup rotation. ",
            "id": "comment-15527321"
        },
        {
            "date": "2016-09-27T22:15:57+0000",
            "author": "Shawn Heisey",
            "content": "The file is useful since it will capture any errors happening outside of the logging system\n\nGood point, and I did not think of that.\n\nIf we'll always be attempting to mute log4j's CONSOLE output when in background mode, perhaps we can let the console log grow, because it will not normally get much output.  Alternately we could rotate it through a simple fixed set of 10 filenames, changing a single 0-9 digit ... so there would be history for several start attempts. ",
            "id": "comment-15527573"
        },
        {
            "date": "2016-09-27T22:50:11+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Another option is to log stdout/err to the System log. In Linux that can be done by piping java ... 2>&1 | logger. Personally I like a plain file better... ",
            "id": "comment-15527673"
        },
        {
            "date": "2016-09-28T02:06:32+0000",
            "author": "Erick Erickson",
            "content": "Reasonable points, although I can quibble about whether there should ever be System.out.println calls anywhere. I suppose there are some situations where we may want to give feedback before the logging stuff is initialized.\n\nI can report from \"in the field\" that more than one client has run out of disk space because the CONSOLE log grew without bound. That's taken care of recently, so just as long as we keep it so .... ",
            "id": "comment-15528111"
        },
        {
            "date": "2016-10-17T08:54:04+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Patch:\n\n\n* SOLR-9570: Various log tidying now happens at Solr startup:\n  Old solr_log_<date> and solr_gc_log_<date> files are removed, avoiding disks to fill up,\n  solr.log.X files are rotated, preserving solr.log from last run in solr.log.1, solr.log.1 => solr.log.2 etc\n  solr-*-console.log files are moved into $SOLR_LOGS_DIR/archived/ instead of being overwritten\n  Last JVM garbage collection log solr_gc.log is moved into $SOLR_LOGS_DIR/archived/, overwriting previous (janhoy)  \n\n\n\nThis adds a new UtilsTool to SolrCLI, which handles the tasks in Java code, removing complexity from scripts. The scripts simply call the tool like this\n\n\nrun_tool utils -s \"$DEFAULT_SERVER_DIR\" -l \"$SOLR_LOGS_DIR\" -remove_old_solr_logs 7 || echo \"Failed removing old solr logs\"\nrun_tool utils -s \"$DEFAULT_SERVER_DIR\" -l \"$SOLR_LOGS_DIR\" -archive_gc_logs        || echo \"Failed archiving old GC logs\"\nrun_tool utils -s \"$DEFAULT_SERVER_DIR\" -l \"$SOLR_LOGS_DIR\" -archive_console_logs   || echo \"Failed archiving old console logs\"\nrun_tool utils -s \"$DEFAULT_SERVER_DIR\" -l \"$SOLR_LOGS_DIR\" -rotate_solr_logs 9     || echo \"Failed rotating old solr logs\"\n\n\n\nSee patch for documentation of each tool option.\n\nThe tool -rotate_solr_logs <gen> in particular, is a workaround for backing up {solr.log}}, in that it will rotate existing solr.log.N the same way that log4j does. This code can be removed when we upgrade to newer log4j which can handle this itself.\n\nPotential issues:\n\n\tWe now keep only the last solr_gc.log in logs/archived/, will be overwritten on next start. However, this will be fixed in SOLR-7506 when we introduce GC log rotation\n\tWe now archive latest solr-NN-console.log into logs/archived/. This is a 1-generation rotation only, and on two consecutive restarts only the last run console log is kept. Earlier we kept timestamped logs forever...\n\n\n\nTested on OSX and on Windows 10. Further test and feedback welcome. I'll commit this on thursday if all is sunshine  ",
            "id": "comment-15581632"
        },
        {
            "date": "2016-10-17T09:17:35+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "This patch also fixes an old bug in the bin\\solr.cmd script, where backing up of the solr.log file is locale-dependent, see\n\nREM backup log files (use current timestamp for backup name)\nFor /f \"tokens=2-4 delims=/ \" %%a in ('date /t') do (set mydate=%%c-%%a-%%b)\nFor /f \"tokens=1-2 delims=/:\" %%a in (\"%TIME%\") do (set mytime=%%a%%b)\n\n\n\nThis code assumed a date format of MM/DD/YY while in Norwegian locale date /t prints as 17.10.2016. This code will be gone after this patch  ",
            "id": "comment-15581677"
        },
        {
            "date": "2016-10-20T13:35:41+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Sorry, commit log had wrong issue-number.\n\nCommitted master (97761966f30557c33b3bbb131ce64ea7905ae213)\nhttps://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;a=commit;h=97761966f30557c33b3bbb131ce64ea7905ae213\n\nBranch_6x (ed3b268d62f23e212c410cb35aa4318afa088f55)\nhttps://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;a=commit;h=ed3b268d62f23e212c410cb35aa4318afa088f55 ",
            "id": "comment-15591827"
        },
        {
            "date": "2016-10-20T13:37:10+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Resolving this. If you discover issues around the new log cleanup/move tasks, please reopen this, or create a new issue. ",
            "id": "comment-15591832"
        },
        {
            "date": "2016-10-20T17:13:11+0000",
            "author": "Noble Paul",
            "content": "is this causing the failure https://jenkins.thetaphi.de/job/Lucene-Solr-6.x-Linux/1996/ ",
            "id": "comment-15592387"
        },
        {
            "date": "2016-10-20T18:30:24+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Reopening to fix a test failure ",
            "id": "comment-15592593"
        },
        {
            "date": "2016-10-20T18:59:03+0000",
            "author": "ASF subversion and git services",
            "content": "Commit af88e7f54d2042a2ff5c3bef7b6016084ad15cec in lucene-solr's branch refs/heads/master from Jan H\u00f8ydahl\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=af88e7f ]\n\nSOLR-9570: Fix test failures and start using SolrTestCaseJ4's createTempDir mm ",
            "id": "comment-15592672"
        },
        {
            "date": "2016-10-20T19:05:50+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1b626fa0ca0152a024cd68fbf17e042469e6e3a2 in lucene-solr's branch refs/heads/branch_6x from Jan H\u00f8ydahl\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1b626fa ]\n\nSOLR-9570: Fix test failures and start using SolrTestCaseJ4's createTempDir mm\n\n(cherry picked from commit af88e7f) ",
            "id": "comment-15592690"
        },
        {
            "date": "2016-11-09T08:38:38+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Closing after 6.3.0 release. ",
            "id": "comment-15650286"
        }
    ]
}