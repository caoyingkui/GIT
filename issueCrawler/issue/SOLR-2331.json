{
    "id": "SOLR-2331",
    "title": "Refactor CoreContainer's SolrXML serialization code and improve testing",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [
            "multicore"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "CoreContainer has enough code in it - I'd like to factor out the solr.xml serialization code into SolrXMLSerializer or something - which should make testing it much easier and lightweight.",
    "attachments": {
        "SOLR-2331.patch": "https://issues.apache.org/jira/secure/attachment/12469106/SOLR-2331.patch",
        "SOLR-2331-fix-windows-file-deletion-failure.patch": "https://issues.apache.org/jira/secure/attachment/12485662/SOLR-2331-fix-windows-file-deletion-failure.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-12985453",
            "date": "2011-01-23T23:10:23+0000",
            "content": "Here is a first pass - more to come. "
        },
        {
            "author": "Chris Male",
            "id": "comment-12985460",
            "date": "2011-01-23T23:41:27+0000",
            "content": "Hey Mark,\n\n+1 to this.  Is it possible to go one step further and pull out the load functionality too? Then they both can go into a class which manages the reading and writing.  It'd be a nice step towards abstracting away from the solr.xml file being the only way to configure a CoreContainer. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13059855",
            "date": "2011-07-05T12:22:22+0000",
            "content": "one step further and pull out the load functionality\n\nYeah, I think the idea is good. I think some of the 'load' code could also be pulled up into the SolrXMLSerializer.\n\nIf no one objects, I'd like to commit this part soon though - then tackle the load side later. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13061632",
            "date": "2011-07-07T22:32:23+0000",
            "content": "I reopened SOLR-2500 because TestSolrProperties is failing consistently on Windows 7/Oracle JDK 1.6.0_21 for me, but it appears that this is the issue that introduced the problem.\n\nI've tracked the issue down to the anonymous FileInputStream created in order to print out the contents of the persisted core configuration to STDOUT \u2013 the following line was uncommented when Mark committed the patch on this issue:\n\n\n206:  System.out.println(IOUtils.toString(new FileInputStream(new File(solrXml.getParent(), \"solr-persist.xml\"))));\n\n\n\nThis patch de-anonymizes the FileInputStream and closes it after the file contents are printed out.\n\nI plan to commit this later tonight. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13061641",
            "date": "2011-07-07T22:51:09+0000",
            "content": "This version of the patch wraps the persisted core config printing to STDOUT in an if (VERBOSE) block.\n\nCommitting shortly. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13061649",
            "date": "2011-07-07T22:58:51+0000",
            "content": "This patch de-anonymizes the FileInputStream and closes it after the file contents are printed out [and] wraps the persisted core config printing to STDOUT in an if (VERBOSE) block.\n\nCommitted in r1144088. "
        },
        {
            "author": "Bill Bell",
            "id": "comment-13061793",
            "date": "2011-07-08T06:37:15+0000",
            "content": "Commit? +1 "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13061973",
            "date": "2011-07-08T14:19:06+0000",
            "content": "Thanks Steve - calling this one done - CoreContainer needs more refactoring, but it can come in further issues. Noble has a great one going to factor out zookeeper parts as well. "
        },
        {
            "author": "Yury Kats",
            "id": "comment-13078526",
            "date": "2011-08-03T00:18:27+0000",
            "content": "Looks like this introduced a regression in solr.xml persistence. \nSee SOLR-2691. "
        }
    ]
}