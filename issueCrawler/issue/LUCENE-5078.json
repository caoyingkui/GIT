{
    "id": "LUCENE-5078",
    "title": "Allow TfIdfSimilarity implementations to encode norm values into more than a single byte",
    "details": {
        "components": [
            "core/index"
        ],
        "fix_versions": [
            "4.4",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "Improvement",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Continuation from here: http://lucene.markmail.org/message/jtwit3pwu5oiqr2h.",
    "attachments": {
        "LUCENE-5078.patch": "https://issues.apache.org/jira/secure/attachment/12589613/LUCENE-5078.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-06-25T14:59:49+0000",
            "content": "Patch changes the signature of encode/decodeNormValue to return/take a long. I also moved the relevant jdocs from TfIdfSim to DefaultSim (re the norms encoding).\n\nSome tests had to be modified to override the two abstract methods from TfIdfSim.\n\nDidn't add a CHANGES entry yet, but I will add it under backwards section. Also, I think that queryNorm can be handled separately under LUCENE-1907. ",
            "author": "Shai Erera",
            "id": "comment-13693105"
        },
        {
            "date": "2013-06-25T15:06:02+0000",
            "content": "I think this looks pretty good! So the norms \"cache\" and byte-ness gets moved from TFIDF into DefaultXXX, but otherwise the API is pretty much the same.\n\nThe only concern i have is now DefaultSimilarity has non-final methods with \"long\" signatures... which could lead to some traps. But maybe this is OK: if someone were to inadvertently override encodeNormValue without changing decodeNormValue, they are doing the wrong thing anyway right?\n\nMaybe we can try to improve this with javadocs...\n\nOr alternatively, maybe we should make these final in DefaultSimilarity, and if you want to change norm encoding (not calculation, which can still be easily tuned), really you should extend TFIDFSimilarity since its a pretty big change. I would prefer this. ",
            "author": "Robert Muir",
            "id": "comment-13693113"
        },
        {
            "date": "2013-06-25T17:04:10+0000",
            "content": "That's a good point! What about if we make the whole change smaller by keeping the byte-ness and cache in TfIdfSimilarity as a default impl (as it is now), and only change the signature of encode/decode to long. Then, if all you care about is encode the full norm, you can extend DefaultSimilarity and not implement tf, idf and friends?\n\nI think jdocs is enough. It's quite an expert API, and whoever overrides encode should know better not to override decode ...\n\nIf however we keep them on Default, I think they should be final there. ",
            "author": "Shai Erera",
            "id": "comment-13693162"
        },
        {
            "date": "2013-06-25T17:10:26+0000",
            "content": "\nThat's a good point! What about if we make the whole change smaller by keeping the byte-ness and cache in TfIdfSimilarity as a default impl (as it is now), and only change the signature of encode/decode to long.\n\nI dunno, i think thats confusing: the whole point of this issue is to move that byteness-implementation out of the abstract class and into the default implementation right?\n\n\nIf however we keep them on Default, I think they should be final there.\n\nI think thats all we need to do, make them final on default. otherwise patch is good! ",
            "author": "Robert Muir",
            "id": "comment-13693166"
        },
        {
            "date": "2013-06-25T18:56:34+0000",
            "content": "Made the two methods final on DefaultSim. Fixed two tests that overrode them (to extend TfIDFSim directly).\n\nCommitted to trunk and 4x. Thanks Rob! ",
            "author": "Shai Erera",
            "id": "comment-13693273"
        },
        {
            "date": "2013-07-23T18:37:07+0000",
            "content": "Bulk close resolved 4.4 issues ",
            "author": "Steve Rowe",
            "id": "comment-13716752"
        }
    ]
}