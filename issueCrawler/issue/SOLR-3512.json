{
    "id": "SOLR-3512",
    "title": "Create API for managing nodes within SolrCloud",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "SolrCloud"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Currently there does not seem to be any \"clean\" way to remove a particular Solr node from a ZooKeeper collection running in SolrCloud.  I watched the talk at Lucene Revolution 2012 about this area and it seems like the recommended approach at present is to just shut down the node.  This is problematic for a couple reasons:  one is that it creates a reliance on the ZK config (how soon will ZK know that the node is gone?) and creates a potentially bad user experience (how many queries will get sent to the node that was just shut down before the next tick elapses?).  It also makes it impossible to use the node in an \"offline\" state \u2013 for example, if something went wrong on the box it might be good to look at a dump of the running process, etc. but if it's turned off we can't easily do that.  \n\nIdeally there could be a series of core commands/primitives that one could issue to any Solr node to do things like remove a node from a ZK collection, re-connect to a ZK instance, a particular collection, etc.  It might also be useful to be able to start up a Solr node without initially connecting to ZK.\n\nI looked at SOLR-3488 but that issue seems more related to managing collections within ZK, not so much about nodes within a particular collection.  Apologies if these topics are covered there.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-13442624",
            "date": "2012-08-27T19:03:47+0000",
            "content": "one is that it creates a reliance on the ZK config (how soon will ZK know that the node is gone?) and creates a potentially bad user experience (how many queries will get sent to the node that was just shut down before the next tick elapses?).\n\nI don't think this is a problem. You should be load balancing incoming requests - either with a solrj client or using load balancing software or hardware. Internal nodes do software load balancing themselves - so a node going down will not affect the user experience.\n\nIt also makes it impossible to use the node in an \"offline\" state \n\nI've heard this before and I think it's a valid feature request. It would be nice to be able to pull a node out of rotation while keeping it running.\n "
        }
    ]
}