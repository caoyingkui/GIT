{
    "id": "SOLR-3165",
    "title": "Cannot use DIH in Solrcloud + Zookeeper",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "There is a problem with configure DIH in Solrcloud + Zookeeper configuration from wiki: \nhttp://wiki.apache.org/solr/SolrCloud.\n\nStandard configuration in solrconfig.xml:\n\n \n  <requestHandler name=\"/dataimport\" class=\"org.apache.solr.handler.dataimport.DataImportHandler\">\n    <lst name=\"defaults\">\n       <str name=\"config\">db-data-config.xml</str>\n    </lst>\n  </requestHandler>\n\n \n\nAfter starting solr with zookeeper I've got errors:\n\nFeb 20, 2012 11:30:12 AM org.apache.solr.common.SolrException log\nSEVERE: null:org.apache.solr.common.SolrException\n        at org.apache.solr.core.SolrCore.<init>(SolrCore.java:606)\n        at org.apache.solr.core.SolrCore.<init>(SolrCore.java:490)\n        at org.apache.solr.core.CoreContainer.create(CoreContainer.java:705)\n        at org.apache.solr.core.CoreContainer.load(CoreContainer.java:442)\n        at org.apache.solr.core.CoreContainer.load(CoreContainer.java:313)\n        at org.apache.solr.core.CoreContainer$Initializer.initialize(CoreContainer.java:262)\n        at org.apache.solr.servlet.SolrDispatchFilter.init(SolrDispatchFilter.java:98)\n        at org.mortbay.jetty.servlet.FilterHolder.doStart(FilterHolder.java:97)\n        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\n        at org.mortbay.jetty.servlet.ServletHandler.initialize(ServletHandler.java:713)\n        at org.mortbay.jetty.servlet.Context.startContext(Context.java:140)\n        at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1282)\n        at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:518)\n        at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:499)\n        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\n        at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)\n        at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)\n        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\n        at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)\n        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\n        at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)\n        at org.mortbay.jetty.Server.doStart(Server.java:224)\n        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)\n        at org.mortbay.xml.XmlConfiguration.main(XmlConfiguration.java:985)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:597)\n        at org.mortbay.start.Main.invokeMain(Main.java:194)\n        at org.mortbay.start.Main.start(Main.java:534)\n        at org.mortbay.start.Main.start(Main.java:441)\n        at org.mortbay.start.Main.main(Main.java:119)\nCaused by: org.apache.solr.common.SolrException: FATAL: Could not create importer. DataImporter config invalid\n        at org.apache.solr.handler.dataimport.DataImportHandler.inform(DataImportHandler.java:120)\n        at org.apache.solr.core.SolrResourceLoader.inform(SolrResourceLoader.java:542)\n        at org.apache.solr.core.SolrCore.<init>(SolrCore.java:601)\n        ... 31 more\nCaused by: org.apache.solr.common.cloud.ZooKeeperException: ZkSolrResourceLoader does not support getConfigDir() - likely, w\n        at org.apache.solr.cloud.ZkSolrResourceLoader.getConfigDir(ZkSolrResourceLoader.java:99)\n        at org.apache.solr.handler.dataimport.SimplePropertiesWriter.init(SimplePropertiesWriter.java:47)\n        at org.apache.solr.handler.dataimport.DataImporter.<init>(DataImporter.java:112)\n        at org.apache.solr.handler.dataimport.DataImportHandler.inform(DataImportHandler.java:114)\n        ... 33 more\n\n \n\nBut the db-data-config.xml file exists in Zookeeper:\n\n[zk: localhost:2181(CONNECTED) 0] ls /configs/conf1 [admin-extra.menu-top.html, dict, solrconfig.xml, dataimport.properties, admin-extra.html, solrconfig.xml.old, solrconfig.xml.new, solrconfig.xml~, xslt, db-data-config.xml, velocity, elevate.xml, admin-extra.menu-bottom.html, solrconfig.xml.dataimport, schema.xml]\n[zk: localhost:2181(CONNECTED) 1]\n\n\n\nI downloaded solr from trunk (2012-02-16)",
    "attachments": {
        "SOLR-3165.patch": "https://issues.apache.org/jira/secure/attachment/12516302/SOLR-3165.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Sami Siren",
            "id": "comment-13218031",
            "date": "2012-02-28T09:52:47+0000",
            "content": "Here's a stab at fixing this issue. I noticed  there were two places where DIH wanted to access conf dir: the config file (read) and some kind of state file (read/write) access.\n\nI added ZKPropertiesWriter that writes the contents of the state file into zk. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13218223",
            "date": "2012-02-28T14:29:30+0000",
            "content": "Nice Sami! I was going to take the same approach.\n\nLonger term I think we want to add a write api to solrresource loader. If something came from the classpath, it would still be written to the conf area and later that would override a new read... "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13218247",
            "date": "2012-02-28T14:56:49+0000",
            "content": "Took a look at the patch and it looks good to me - only thing I might suggest is using CoreContainer#isZookeeperAware rather than comparing the zkController to null, but pretty minor stylistic thing. "
        },
        {
            "author": "Alexey Serba",
            "id": "comment-13218686",
            "date": "2012-02-28T23:19:04+0000",
            "content": "I updated Sami's patch to store dataimport property file under collection directory in zk and name it after data import handler (the same way it is stored in local filesystem) "
        },
        {
            "author": "Sami Siren",
            "id": "comment-13218953",
            "date": "2012-02-29T07:10:42+0000",
            "content": "Thanks Alexey, Mark. I took the latest patch from Alexey, incorporated Marks suggestion and committed this to trunk. "
        }
    ]
}