{
    "id": "SOLR-11153",
    "title": "Incomplete schema results in mysterious error",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "4.4,                                            5.0,                                            6.0",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "A user on the mailing list was getting a very arcane error trying to load a very minimal solrconfig and schema.  The error was ultimately caused by NPE in SchemaXmlWriter.java at line 85.\n\nThe actual problem turned out to be a missing \"name\" attribute from the top level XML \"schema\" element in the file.\n\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<schema version=\"1.5\">\n  <fields>\n    <field name=\"_id\" type=\"string\" indexed=\"true\" stored=\"true\" required=\"true\"/>\n    <field name=\"title\" type=\"string\" indexed=\"true\" stored=\"true\" required=\"true\"/>\n  </fields>\n  <uniqueKey>_id</uniqueKey>\n  <types>\n    <fieldType name=\"string\" class=\"solr.StrField\" />\n  </types>\n</schema>\n\n\n\nAs written, the code will explode with an NPE if the name is missing from the schema.  Although I can state that the user's minimal config/schema are not very useful, Solr should not blow up without a useful error message, and in this case, I think it should have worked, only emitting a WARN message and assuming a default name.",
    "attachments": {
        "SOLR-11153.patch": "https://issues.apache.org/jira/secure/attachment/12879014/SOLR-11153.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-07-26T17:17:46+0000",
            "content": "Patch to have Solr assume \"example\" for the schema name and \"1.0\" for the version, if they are not provided.  When one is missing, a WARN message will be logged. ",
            "author": "Shawn Heisey",
            "id": "comment-16101952"
        },
        {
            "date": "2017-07-26T17:36:30+0000",
            "content": "If anyone sees anywhere else where a missing value causes a problem that cannot be easily diagnosed by a novice, please speak up and let's get it fixed. ",
            "author": "Shawn Heisey",
            "id": "comment-16101977"
        },
        {
            "date": "2017-07-26T17:53:55+0000",
            "content": "If there are constants defined somewhere that I should use for the default values, I'd like to know about it. ",
            "author": "Shawn Heisey",
            "id": "comment-16102020"
        },
        {
            "date": "2017-07-28T01:18:16+0000",
            "content": "LGTM.\n\nAs for having a place to record default values, I think it'd definitely be an improvement, but I'm not sure of a place that exists now.  The \"org.apache.solr.common.params\" package in SolrJ comes the closest AFAICT, but I'm not sure that's a good fit here.  Another option would be to put the default values in IndexSchema- it looks like there are constants there for many of the param names.  Might be reasonable to put default values there too. ",
            "author": "Jason Gerlowski",
            "id": "comment-16104275"
        },
        {
            "date": "2017-07-28T15:44:55+0000",
            "content": "I've done some additional work to put constants for the default values in IndexSchema.  Eclipse is doing its best to stand in my way of getting anything done, so I will get a new patch up soon.\n\nI do have a question for everyone, though.  Should the version default to 1.0 or 1.6?  Advantages to 1.0: We never need to touch it again.  Advantages to the latest version: The user gets years of improvements to Solr's behavior. ",
            "author": "Shawn Heisey",
            "id": "comment-16105129"
        },
        {
            "date": "2017-07-28T15:49:32+0000",
            "content": "Additional thoughts regarding whether to go with 1.0 or 1.6:\n\nIt's easy enough for a user to get the exact behavior they want \u2013 they just need to include the version in their schema.\n\nOn the other hand, should we default to a schema version that behaves in a very different manner than what the user (and us in a support role) will probably be expecting from a modern Solr version?  Any confusion would be cleared up once the schema is shared, of course. ",
            "author": "Shawn Heisey",
            "id": "comment-16105139"
        },
        {
            "date": "2017-07-28T15:56:16+0000",
            "content": "Updated patch defining constants. ",
            "author": "Shawn Heisey",
            "id": "comment-16105147"
        },
        {
            "date": "2017-08-02T14:14:34+0000",
            "content": "My bias is to stick with 1.0 so we don't have to keep updating it as new versions come out.  If somebody deploys an incomplete schema that's missing the version, the patch would give them a warning in their log, so in theory that should be a clue that they need to configure something. ",
            "author": "Shawn Heisey",
            "id": "comment-16110978"
        },
        {
            "date": "2017-08-02T18:03:06+0000",
            "content": "Finally got around to running tests with the patch.  I got a failure and cancelled the run.  Apparently it's not possible to cast from Float to String (for the version).  I've made some changes and tests are running again.  So far it's looking good.  If this run works, I will attach the new patch. ",
            "author": "Shawn Heisey",
            "id": "comment-16111435"
        },
        {
            "date": "2017-08-02T19:45:34+0000",
            "content": "New patch.\n\nI got one failure with this patch, which did not appear to be related at all.  It was a \"directory not empty\" exception trying to delete a directory when running TestLRUStatsCache. ",
            "author": "Shawn Heisey",
            "id": "comment-16111630"
        },
        {
            "date": "2017-08-03T14:03:19+0000",
            "content": "I've come up with a different and less invasive way of fixing this.  If tests look good, will attach it soon.\n\nI also tested the specific problem.  I created three cores and put minimal schemas in all of them.  The \"bar\" core had no name, but version=\"1.6\".  The baz core had the \"default-config\" name, but no version.  The foo core was missing both.  This is what was logged when I stopped and started the modified server:\n\n\n2017-08-03 13:55:20.583 INFO  (coreLoadExecutor-6-thread-2) [   x:baz] o.a.s.s.IndexSchema [baz] Schema name=default-config\n2017-08-03 13:55:20.640 WARN  (coreLoadExecutor-6-thread-3) [   x:foo] o.a.s.s.IndexSchema [foo] schema has no name, using exampleSchema\n2017-08-03 13:55:20.661 WARN  (coreLoadExecutor-6-thread-1) [   x:bar] o.a.s.s.IndexSchema [bar] schema has no name, using exampleSchema\n2017-08-03 13:55:20.837 INFO  (coreLoadExecutor-6-thread-1) [   x:bar] o.a.s.s.IndexSchema Loaded schema exampleSchema/1.6 with uniqueid field id\n2017-08-03 13:55:20.842 INFO  (coreLoadExecutor-6-thread-3) [   x:foo] o.a.s.s.IndexSchema Loaded schema exampleSchema/1.0 with uniqueid field id\n2017-08-03 13:55:20.843 INFO  (coreLoadExecutor-6-thread-2) [   x:baz] o.a.s.s.IndexSchema Loaded schema default-config/1.0 with uniqueid field id\n\n\n\nThe test suite is running now, it's a little less than ten percent done with no failures yet. ",
            "author": "Shawn Heisey",
            "id": "comment-16112779"
        },
        {
            "date": "2017-08-03T14:13:50+0000",
            "content": "The new patch was created because I noticed that if there's no version, 1.0 is already assumed by IndexSchema, and if there's no name, this fact is logged before the NPE the original user encountered \u2013 but no action is taken other than logging a warning.\n\nWith the patch, the user's schema should load as-is. ",
            "author": "Shawn Heisey",
            "id": "comment-16112795"
        },
        {
            "date": "2017-08-03T15:15:20+0000",
            "content": "With the first test run with an early version of the new patch, I got three failures in tests for solr-core.  They did not look related to my patch.\n\nOn a second test run that is still underway, where I had updated the patch to remove \"name\" and \"version\" from one of the test schemas to actually test this problem, more than half of the solr-core tests have been done with no failures yet.  The first run had its failures before that point. ",
            "author": "Shawn Heisey",
            "id": "comment-16112904"
        },
        {
            "date": "2017-08-03T15:17:06+0000",
            "content": "Another updated patch.  This time the code changes are all in IndexSchema.  One of the main test schemas has been modified to remove \"name\" and \"version\" so hopefully this specific problem will get tested. ",
            "author": "Shawn Heisey",
            "id": "comment-16112909"
        },
        {
            "date": "2017-08-03T15:43:53+0000",
            "content": "In parallel with running tests on Windows, I did \"ant precommit\" on a Linux machine with my patch applied.  There are failures that have nothing to do with my patch.  They look related to LUCENE-7194.  Lots of forbidden usages of java.lang.Math#toRadians(double) in a couple of spatial3d test classes.\n\nI double-checked that my checkout of master was up to date and unmodified except for my patch for this issue. ",
            "author": "Shawn Heisey",
            "id": "comment-16112956"
        },
        {
            "date": "2017-08-03T15:44:33+0000",
            "content": "The second test run on Windows passed solr-core completely but had one failure in solrj that doesn't look related to the patch. ",
            "author": "Shawn Heisey",
            "id": "comment-16112961"
        },
        {
            "date": "2017-08-03T16:51:57+0000",
            "content": "I ran precommit yesterday with no problems. What version of the JDK? Uwe made a comment recently about older JDKs having a problem that might be relevant. ",
            "author": "Erick Erickson",
            "id": "comment-16113068"
        },
        {
            "date": "2017-08-03T18:14:04+0000",
            "content": "What version of the JDK?\n\nroot@bigindy5:/index/src/lucene-solr# java -version\njava version \"1.8.0_121\"\nJava(TM) SE Runtime Environment (build 1.8.0_121-b13)\nJava HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)\n\nIt is Oracle Java installed into Ubuntu 14 with a PPA.  I can upgrade it easily enough, which would likely make it 8u144. ",
            "author": "Shawn Heisey",
            "id": "comment-16113221"
        },
        {
            "date": "2017-08-03T20:04:11+0000",
            "content": "Upgraded to Oracle 8u144 and I'm still seeing forbidden-api failures.\n\nI eventually tracked down the problem to commits made this morning (in my timezone) for LUCENE-7606. ",
            "author": "Shawn Heisey",
            "id": "comment-16113391"
        }
    ]
}