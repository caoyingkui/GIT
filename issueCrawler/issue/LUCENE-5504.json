{
    "id": "LUCENE-5504",
    "title": "Move analysis of multiterms into QueryParserBase",
    "details": {
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved",
        "components": [
            "core/queryparser"
        ],
        "affect_versions": "6.0",
        "status": "Open",
        "fix_versions": []
    },
    "description": "Thanks to MultitermAwareComponents, multiterm analysis works elegantly in Solr.  In Lucene, we have:\n\nQueryParserBase and most descendants: \n     1) can lowercase multiterms\n     2) can analyze rangeterms\n     3) can't analyze: fuzzy, prefix, regex, wildcards\n\nAnalyzingQueryParser\n     1) allows use of main analyzer (with some regex hackery around wildcards...mea culpa) to analyze fuzzy, prefix, wildcards\n     2) does not handle regex terms\n\nIt would be cleaner if we got rid of the lowercasing and special analysis of range terms and substituted an init() with two analyzers: a regular analyzer and a multiterm analyzer.  We'll want to improve javadocs and perhaps add a SimpleKeyWordLowerCasingAnalyzer...to make the transition easier.\n\nIf we make this change, we'd clean up the hodgepodge of multiterm analysis options (get rid of AnalyzingQueryParser) and add multiterm analysis to everything that extends QueryParserBase.\n\nThis is part of the effort to deduplicate code with the integration of LUCENE-5205.",
    "attachments": {
        "LUCENE-5504_draft.patch": "https://issues.apache.org/jira/secure/attachment/12633520/LUCENE-5504_draft.patch"
    },
    "issue_links": {},
    "comments": []
}