{
    "id": "SOLR-79",
    "title": "[PATCH] Using system properties in Solr configuration",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.2"
        ],
        "components": [],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Actually it is not possible to use system properties for configuring the Solr engine. There should be a way of referencing system properties from solrconfig.xml, like {$prop.name}.\n\nThe attached patch will provide this feature.",
    "attachments": {
        "solr-config-system-property.patch": "https://issues.apache.org/jira/secure/attachment/12346780/solr-config-system-property.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Alexander Saar",
            "id": "comment-12456849",
            "date": "2006-12-08T14:37:46+0000",
            "content": "Patch that allows usage of references to system properties in the solrconfig.xml "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12456896",
            "date": "2006-12-08T16:07:52+0000",
            "content": "Interesting idea, thanks Alexander!\nIf no one has objections, I think it should go in. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12457214",
            "date": "2006-12-11T00:19:55+0000",
            "content": "updated patch with test.\n\nIs there a particular reason that the pattern {$system.prop} was picked over ${system.prop}?\n\n "
        },
        {
            "author": "Mike Klaas",
            "id": "comment-12457493",
            "date": "2006-12-11T22:10:40+0000",
            "content": "FWIW, Jetty uses the following xml:\n\n<SystemProperty name=\"jetty.home\" default=\".\"/>/logs/yyyy_mm_dd.jet\nty.log "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12457536",
            "date": "2006-12-12T01:23:43+0000",
            "content": "\n1) i'm not really a fan of the Jetty syntax ... much too verbose for my taste, I would prefer ${system.prop} over {$system.prop} to be consistent with ant and shell variables ... but it would be nice to still support defaults ... isn't ${prop.name:default val} what bash uses?\n\n2) to be useful, wouldn't we want this to work even if the property wasn't the full value of the tag, ie...\n\n    <listener event=\"postCommit\" class=\"solr.RunExecutableListener\">\n      <str name=\"exe\">snapshooter</str>\n      <str name=\"dir\">${some.dir.property}/bin</str>\n      <bool name=\"wait\">true</bool>\n    </listener>\n\n...if we do this, we should also have some sort of escaping mechanism for completleness, is <tag>$${some.prop}</tag> would not get substitution.\n\n3) not everything uses Config.getVal ... we would also need similar substitution logic in Config.evaluate, Config.getNode, and the various DOMUtil methods so that it could be used anywhere in the solrconfig.xml ... walking all of the NodeTrees to make the substitutions at every level, might get complicated ... maybe there is an easier way of adding a \"visiter\" to the DOM model? "
        },
        {
            "author": "Alexander Saar",
            "id": "comment-12457627",
            "date": "2006-12-12T08:38:27+0000",
            "content": "I took the {$system.prop} pattern from Avalon configuration style. After having a look at the ant way, I would also prefer ${system.prop}.\n\nFurthermore I think it will be very helpful to have something like ${system.prop}/bin. Actually it was not my use case, but I'm sure that it is helpful for somebody. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12472172",
            "date": "2007-02-12T02:36:45+0000",
            "content": "Borrowing some code from Ant for property substitution (ugly, but avoids reinventing the wheel), attached is a patch that implements property substituion on all attributes and text nodes in the loaded DOM.  The substituions are done in-place on the DOM thus avoiding having to change code in multiple places. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12472173",
            "date": "2007-02-12T02:51:50+0000",
            "content": "Update patch to include necessary build.xml changes and additional test for subtitution in Ant property. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12472403",
            "date": "2007-02-12T20:11:12+0000",
            "content": "i haven't tested Erik's patch, but it reads clean to me.\n\na couple of minor nits...\n\n1) it would be good to have some javadocs on substituteSystemProperties(Node)\n\n2) if the system properties used were \"solr.test.sys.prop1\", etc. the patch wouldn't need to modify build.xml ... if we are going to set them explicitly in build.xml, there shold be a comment explaining which test uses them.\n\n3) at first glance, i'm not sure if this would work, it would be nice to have a test for it...\n\n    s = SolrConfig.config.get(\"propTest/[@attr='prop two']\", \"default\");\n    assertEquals(\"prefix-prop one-prop two-suffix\", s);\n\n4) it looks like it should work, but tests of Config.evaluate, Config.getNode, and the various DOMUtil methods would also be good "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12472406",
            "date": "2007-02-12T20:31:02+0000",
            "content": "Here's the patch with default value implemented.  ${system.property:default value} - default value is optional, if omitted, \"\" will be used. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12472501",
            "date": "2007-02-13T02:03:09+0000",
            "content": "Updated the patch per Hoss' feedback.   Specifically:\n\ni haven't tested Erik's patch, but it reads clean to me.\n\na couple of minor nits...\n\n1) Javadoc: done.\n\n2) Hoss: if the system properties used were \"solr.test.sys.prop1\", etc. the patch wouldn't need to modify build.xml ... if we are going to set them explicitly in build.xml, there shold be a comment explaining which test uses them.  [Erik: I don't understand... are you saying there is a predefined solr.test.sys.prop1 somewhere?  I didn't spot anything like that, so I've kept with defining a couple of test ones in build.xml\n\n3)  ye of little faith!   the doc that the Config object holds has been modified recursively, so all methods querying the doc will see the substituted values.   I've added a test to show the case you mentioned.\n\n4) I added similar tests for .evaluate and .getNode.  All is well.\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12472904",
            "date": "2007-02-13T22:25:25+0000",
            "content": "I was going to chime in that unset properties should probably not default to an empty string:\n  1) so that SOLR-109 would be more feasible\n  2) so that we don't silently fail on typos\n\n...looking at the latest patch, #1 isn't really an issue since $${literal} works ... but especially now that it's possible to specify a default value to use if they property isn't set: trying to use an unset property without a default specified should probably result in an exception ... correct?\n\n\nas for my comment about system properties for testing: i was smoking crack thinking that the <syspropertyset> already in the build.xml junit target would magically take care of this for us, forgetting that somewhere the properties actually need to be set. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12472951",
            "date": "2007-02-14T01:05:05+0000",
            "content": "\n\nI dunno.... I suppose throwing an exception is fine though that might  \nprevent an otherwise functional Solr instance to start up.  I can see  \nit being ok either way on this issue, but I can't envision a case  \nwhere I'd define ${...} bits in my config files and not setting the  \nappropriate system properties.\n\nI'll modify to throw an exception.  And commit!  \n\n\tErik\n\n\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12473018",
            "date": "2007-02-14T08:18:45+0000",
            "content": "my view is:\n\n\tin most cases, a system property not being defined is going to prevent the value from being usable (ie: a blank dataDIr)\n\tif you want to use a systemp prop in a place where it's acceptible to not have the prop defined at all, then just use ${prop:} to denote that an empty string should be used as the default.\n\n "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12473750",
            "date": "2007-02-16T16:49:00+0000",
            "content": "This feature has been added, complete with the requested exception handling when a property is not defined and no default value provided. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12473754",
            "date": "2007-02-16T17:05:39+0000",
            "content": "Very nice, this will make testing easier as well. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12589323",
            "date": "2008-04-15T23:44:45+0000",
            "content": "This bug was modified as part of a bulk update using the criteria...\n\n\n\tMarked (\"Resolved\" or \"Closed\") and \"Fixed\"\n\tHad no \"Fix Version\" versions\n\tWas listed in the CHANGES.txt for 1.2\n\n\n\nThe Fix Version for all 39 issues found was set to 1.2, email notification\nwas suppressed to prevent excessive email.\n\nFor a list of all the issues modified, search jira comments for this\n(hopefully) unique string: 20080415hossman2 "
        }
    ]
}