{
    "id": "SOLR-945",
    "title": "JSON update handler",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "3.1",
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "In addition to supporting xml and csv updating, it would be good to support json.\n\nThis patch uses noggit, a streaming json parser, to build the commands.",
    "attachments": {
        "SOLR-945-json-update.patch": "https://issues.apache.org/jira/secure/attachment/12396887/SOLR-945-json-update.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Ryan McKinley",
            "id": "comment-12659745",
            "date": "2008-12-30T06:28:33+0000",
            "content": "Here is a patch that lets you update sending documents that look like this:\n\n{ \n\n\"add\": {\n  \"doc\": {\n    \"f0\": \"v0\",\n    \"f2\": {\n      \"boost\": 2.3,\n      \"value\": \"test\"\n    },\n    \"array\": [ \"aaa\", \"bbb\" ],\n    \"boosted\": {\n      \"boost\": 6.7,\n      \"value\": [ \"aaa\", \"bbb\" ]\n    }\n  }\n},\n\"add\": {\n  \"commitWithin\": 1234,\n  \"overwrite\": false,\n  \"boost\": 3.45,\n  \"doc\": {\n    \"f1\": \"v1\",\n    \"f1\": \"v2\"\n  }\n},\n\n\"commit\": {},\n\"optimize\": { \"waitFlush\":false, \"waitSearcher\":false },\n\n\"delete\": { \"id\":\"ID\" },\n\"delete\": { \"query\":\"QUERY\" },\n\"rollback\": {}\n\n}\n\n\n "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12659878",
            "date": "2008-12-30T18:23:08+0000",
            "content": "Out of curiosity, is there a benefit to using JSON over XML for indexing/updating?  Perhaps noggit is (much?) faster than the XML parser Solr uses and this has noticeable difference? (though I'd guess that indexing itself is what takes most of the time) "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12659880",
            "date": "2008-12-30T18:32:59+0000",
            "content": "I have not benchmarked anything yet...  current motivation is interface rather then speed (though it is potentially faster) "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12659948",
            "date": "2008-12-30T21:38:29+0000",
            "content": "Yes, the parsing is much faster in noggit vs parsing XML (or vs other JSON parsers for that matter).  Not sure what the split between parsing/indexing... I imagine/hope that more time is spent in indexing.\n\nTwo more benefits:\n\n\tsmaller footprint... less network IO\n\table to represent the entire unicode range\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12659955",
            "date": "2008-12-30T21:51:12+0000",
            "content": "The API looks like a direct translation of the XML API.... that's a reasonable approach, but we should also take this chance to revisit and see what we might want to change.\n\nIf we were to do it over again (now that we can grab params from the URL in a POST), would we prefer removing the adjectives like \"add\" and some of the other parameters from the XML?\n\n\nhttp://localhost:8983/solr/update/add?commitWithin=1234\n\n{\n  \"docs\":[\n     { \"f0\": \"v0\",\n        \"f2\": {\n        \"boost\": 2.3,\n        \"value\": \"test\"}\n     },\n     { \"fo\":\"zzz\",\n       \"f1\":\"ggg\"\n     }\n  ]\n}\n  \n\nfor deletes,\nhttp://localhost:8983/solr/update/delete?q=foo:1234   (or /update?delete=foo:1234)\n\n\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12659957",
            "date": "2008-12-30T21:51:58+0000",
            "content": "Is this something we should consider for 1.4?  Since Grant refactored all the XmlLoader stuff, this is a pretty simple extension.\n\nThe only real issue i see is how to include the noggit library?  Since noggit is in apache labs, it can not have a release there.  We could:\n 1. build a jar and release it as \"apache-solr-noggit.jar\" the same way we do with commons-csv\n 2. move noggit to sourceforge and release from there.\n\n#1 seems easier to me. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12659966",
            "date": "2008-12-30T22:21:48+0000",
            "content": "Re: API revist...\n\nFor better or worse, this patch matches the JSON format with the XXXUpdateCommand classes.  Unlike XML, each add document requires a new add statement.  I did this since adding the document boost gets really clumsy.\n\n\n\"add\": {\n  \"commitWithin\": 1234,\n  \"overwrite\": false,\n  \"boost\": 3.45,\n  \"doc\": {\n    \"f1\": \"v1\",\n    \"f1\": \"v2\"\n  }\n\n\n\nAdding the document boost to your example gets a bit ugly:\n\n\"docs\":[\n     { \"boost\": 2,\n        \"fields\": { \"f0\": \"v0\",  \"f1\": 2.4 }\n     },\n     { \"boost\": 3,\n        \"fields\": { \"f0\": \"v0\",  \"f1\": 2.4 }\n     },\n  ]\n\n\n\nPersonally, I like having the entire command encompassed in JSON rather then spreading it between the query args and the post body.  I like this since all commands can be represented sequentially and clearly.  Also it allows for easier streamming.  \n\nFor the 'add' command, I don't think we make things much easier/clearer by adding args.  \n\nI agree a more RESTfull API is a good thing, but I think that is a separate task.  For that, we should look at supporting HTTP GET/PUT/DELETE as the main control structures rather then passing params.\n\nFor the XmlUpdateRequestHandler we added some arguments to the query string so that we could call \"commit\" in the same request that we send documents.  In retrospect I'm not sure that was a good idea.  We could achieve the same thing with:\n\n<commands>\n  <add>\n     ...\n  </add>\n  <commit />\n</commands>\n\n\n(this is currently supported by the XmlUpdateRequestHandler, since it only starts parsing after it hits known commands (add, commit, etc)\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12659969",
            "date": "2008-12-30T22:36:11+0000",
            "content": "Is this something we should consider for 1.4?\n\nI think so... it's easy to understand both the API and the impact at a glance.\n\n1. build a jar and release it as \"apache-solr-noggit.jar\" the same way we do with commons-csv\n\n+1 "
        },
        {
            "author": "Matt Weber",
            "id": "comment-12715198",
            "date": "2009-06-01T18:43:13+0000",
            "content": "Any update on this for 1.4? \n\n+1 here. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12867671",
            "date": "2010-05-14T20:53:13+0000",
            "content": "Any objections to committing this to trunk soon? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12867739",
            "date": "2010-05-14T23:41:45+0000",
            "content": "Committed, after changing the test to use a string instead of a file loaded from the classloader (which failed from my IDE for some reason). "
        },
        {
            "author": "Paul Dlug",
            "id": "comment-12882232",
            "date": "2010-06-24T17:32:47+0000",
            "content": "Is there any chance this could be backported to branch_3x? (Perhaps even 1.4.x in time for 1.4.1?) "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12882287",
            "date": "2010-06-24T19:00:40+0000",
            "content": "Yeah, this should be able to go back to the 3x branch (1.4.x is bugfix only though). "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12896254",
            "date": "2010-08-07T13:40:09+0000",
            "content": "OK, I just backported this to the 3x branch. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13672712",
            "date": "2013-06-02T23:12:34+0000",
            "content": "reopen to add 3.1 fix version "
        }
    ]
}