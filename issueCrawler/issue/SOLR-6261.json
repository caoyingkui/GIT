{
    "id": "SOLR-6261",
    "title": "Run ZK watch event callbacks in parallel to the event thread",
    "details": {
        "affect_versions": "4.9",
        "status": "Resolved",
        "fix_versions": [
            "4.10",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Currently checking for leadership (due to the leader's ephemeral node going away) happens in ZK's event thread. If there are many cores and all of them are due leadership, then they would have to serially go through the two-way sync and leadership takeover.\n\nFor tens of cores, this could mean 30-40s without leadership before the last in the list even gets to start the leadership process. If the leadership process happens in a separate thread, then the cores could all take over in parallel.",
    "attachments": {
        "thread-compare.jpg": "https://issues.apache.org/jira/secure/attachment/12660431/thread-compare.jpg"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "ASF GitHub Bot",
            "id": "comment-14068034",
            "date": "2014-07-20T20:20:09+0000",
            "content": "GitHub user andyetitmoves opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/66\n\n    Run checkIfIamLeader in a separate thread\n\n    Initial patch for SOLR-6261(https://issues.apache.org/jira/browse/SOLR-6261) to run `checkIfIAmLeader` in a separate thread, passes all tests.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/bloomberg/lucene-solr trunk-parallel-leader\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/66.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #66\n\n\ncommit 6b0c98c6462a05c24dbf111450c14e53a447b6d3\nAuthor: Ramkumar Aiyengar <andyetitmoves@gmail.com>\nDate:   2014-07-20T19:08:58Z\n\n    Run checkIfIamLeader in a separate thread\n\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14069369",
            "date": "2014-07-21T21:52:44+0000",
            "content": "Hmm...I'm a little hesitant to fire up a new thread for every one rather than use the Update executor or something. Seems like a good step forward though. "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-14069428",
            "date": "2014-07-21T22:21:30+0000",
            "content": "Yeah, I thought of pooling this up as well initially, but then this is really a function of number of cores in the instance and a lot of threads used by Solr are really a function of the number of cores anyway?\n\nCan still look into changing it.. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14069436",
            "date": "2014-07-21T22:28:27+0000",
            "content": "I dunno - I struggled with it when I first saw it and quickly got lazy about it. Something nicer about it, I think it's best to use pools to spin up threads, but I have a hard time worrying about it too much in this case. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14069438",
            "date": "2014-07-21T22:29:23+0000",
            "content": "We should look across our process methods and make sure there are not other obvious spots we are holding things up. "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-14070379",
            "date": "2014-07-22T15:20:08+0000",
            "content": "Alternative approach using an executor, just a sketch at this point (still fails a few tests). It has an `instanceof` which is a bit ugly, but any other method to maintain existing behaviour when needed can be used, this was just the simplest.. Once we are settled on the approach, we can hunt down other stuff using the event thread..\n\nhttps://github.com/apache/lucene-solr/pull/66/files\n\n(would be nice if commits to a pull showed up here..) "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14070397",
            "date": "2014-07-22T15:36:27+0000",
            "content": "Hmm...that is a very interesting approach. I'll have to spend some time thinking about this one. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14070607",
            "date": "2014-07-22T18:05:29+0000",
            "content": "I really kind of like this idea of just ensuring the zk process thread is humming along. The more I think about it, the more I like it. "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-14071766",
            "date": "2014-07-23T14:20:33+0000",
            "content": "Added tests for the leader failover case (original symptoms), and the parallel watching functionality. Let me know if this approach works, if so, we have three transition approaches:\n\n\n\tAlways have `SolrZkClient` use the new way (probably not a great idea, esp. considering this is in SolrJ)\n\tHave an option per `SolrZkClient`, this will force all or most uses within Solr to use the new approach, but allow external uses to continue as they are\n\tThe way it currently is, decided on a per-watch basis\n\n\n\nI am sort of wavering between the second and third options, opinions welcome.. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14071845",
            "date": "2014-07-23T15:13:49+0000",
            "content": "I actually kind of like option 1. What is your concern around it being in Solrj? I think, at this point, it's pretty unlikely anyone is counting on the current behavior - it's generally probably a bug. We have also already treated a lot of this at the cloud level as subject to change a bit because a lot of it is so early. Depending on the impact, we need some flexibility to get things right.\n\nI guess I just don't see a lot of downside or negative impact if we choose 1.\n\nThe upside of doing 1 IMO, is that it becomes a lot harder for other/future devs to screw up. The default makes it hard to do.\n\n2 is not too bad, but prone to future developers consistently choosing the right flag to pass to ensure our zk thread gets to always crank along.\n\n3 is the least preferable to me. "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-14071933",
            "date": "2014-07-23T16:44:41+0000",
            "content": "I agree (1) is ideal, and I was just being paranoid since I am not that well-versed in how this class is used outside Solr. I am happy to stick with your judgement in this case.. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14071946",
            "date": "2014-07-23T16:52:07+0000",
            "content": "I think it's worth considering for sure, but weighing both sides, I think enforcing it for all is probably just a really overall beneficial change in this case. Getting out of the way of the notification thread without going out of your way is great. "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-14071979",
            "date": "2014-07-23T17:10:34+0000",
            "content": "Updated for Option (1), tests are still running though.. "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-14073066",
            "date": "2014-07-24T10:38:27+0000",
            "content": "Forgot to mention, tests pass. Let me know if the changes look good.. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14073368",
            "date": "2014-07-24T16:42:12+0000",
            "content": "I played around with this a bit late yesterday and tests where passing for me as well. I'll review a bit closer and barring anything coming up, I'll commit this soon. Great change I think. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14076605",
            "date": "2014-07-28T19:04:37+0000",
            "content": "Can you create a final pull request with your latest Ramkumar Aiyengar "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-14076619",
            "date": "2014-07-28T19:07:47+0000",
            "content": "What I have there should be the latest, do you see anything missing? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14077051",
            "date": "2014-07-28T22:40:21+0000",
            "content": "Ah, the original pull request info in the first JIRA comment has links that are all kept up to date as you make changes.\n\nDid not realize. I'll commit this change shortly. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14077238",
            "date": "2014-07-29T01:09:00+0000",
            "content": "Do you think the default keepAliveTime of 60 seconds is the right choice? "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14077333",
            "date": "2014-07-29T03:04:56+0000",
            "content": "Commit 1614244 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1614244 ]\n\nSOLR-6261: Run ZooKeeper watch event callbacks in parallel to the ZooKeeper event thread. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14077334",
            "date": "2014-07-29T03:05:15+0000",
            "content": "I'll backport to 4x tomorrow. "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-14077508",
            "date": "2014-07-29T08:13:13+0000",
            "content": "Ah, the original pull request info in the first JIRA comment has links that are all kept up to date as you make changes. Did not realize. I'll commit this change shortly.\n\nYeah, it would be nice if commits to a pull request triggered a JIRA update. Worth an INFRA ticket? I could raise one, but wasn't sure if generally only committers raised them..\n\nDo you think the default keepAliveTime of 60 seconds is the right choice?\n\nIt seemed sensible and I didn't have much of an opinion on a more specific value. We certainly do want to reap these threads because the changes don't happen all the time, and they would occur within 60s of one another in predictable cases I could think of (ephemeral node expiry, overseer queue changes due to instances changing state). Other cases like LIR and admin tasks done through Overseer are more ad hoc anyway and I doubt we can associate any meaningful parameters modelling their use.. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14077718",
            "date": "2014-07-29T13:50:39+0000",
            "content": "Commit 1614352 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1614352 ]\n\nSOLR-6261: Run ZooKeeper watch event callbacks in parallel to the ZooKeeper event thread. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14077767",
            "date": "2014-07-29T14:40:49+0000",
            "content": "Thanks Ramkumar! "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-14085282",
            "date": "2014-08-04T21:03:40+0000",
            "content": "Mark, I realized I missed a case, the session watcher doesn't use this threadpool. In theory it should be fine as of now, as we already made it async with SOLR-5615, but might be worth keeping it in sync and avoiding any future code in ConnectionManager falling into the same trap. I have a patch and running through tests which I can post when done, should I create a new issue or put the patch here? "
        },
        {
            "author": "ASF GitHub Bot",
            "id": "comment-14086224",
            "date": "2014-08-05T13:02:44+0000",
            "content": "GitHub user andyetitmoves opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/78\n\n    Wrap connectionManager in SolrZkClient constructor\n\n    Patch for SOLR-6261 to run the session watcher async as well.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/bloomberg/lucene-solr trunk-parallel-session-watcher\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/78.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #78\n\n\ncommit 392669e5bfcd653be4f51a502d22380f599eac8c\nAuthor: Ramkumar Aiyengar <andyetitmoves@gmail.com>\nDate:   2014-08-04T21:08:40Z\n\n    Wrap connectionManager in SolrZkClient constructor\n\n "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14088466",
            "date": "2014-08-06T23:32:26+0000",
            "content": "Guys, I think there's something weird happening since this was committed. Many tests such as MultiThreadedOCPTest and ShardSplitTest have been failing with OutOfMemory trying to create new watcher threads. A typical fail has the following in logs:\n\n\n [junit4]   2> 1218223 T4785 oasc.DistributedQueue$LatchChildWatcher.process LatchChildWatcher fired on path: /overseer/collection-queue-work state: SyncConnected type NodeChildrenChanged\n   [junit4]   2> 1218223 T4789 oasc.DistributedQueue$LatchChildWatcher.process LatchChildWatcher fired on path: /overseer/collection-queue-work state: SyncConnected type NodeChildrenChanged\n   [junit4]   2> 1218223 T4791 oasc.DistributedQueue$LatchChildWatcher.process LatchChildWatcher fired on path: /overseer/collection-queue-work state: SyncConnected type NodeChildrenChanged\n   [junit4]   2> 1218223 T4795 oasc.DistributedQueue$LatchChildWatcher.process LatchChildWatcher fired on path: /overseer/collection-queue-work state: SyncConnected type NodeChildrenChanged\n   [junit4]   2> 1218223 T4797 oasc.DistributedQueue$LatchChildWatcher.process LatchChildWatcher fired on path: /overseer/collection-queue-work state: SyncConnected type NodeChildrenChanged\n   [junit4]   2> 1218222 T4803 oasc.DistributedQueue$LatchChildWatcher.process LatchChildWatcher fired on path: /overseer/collection-queue-work state: SyncConnected type NodeChildrenChanged\n   [junit4]   2> 1218222 T3305 oaz.ClientCnxn$EventThread.processEvent ERROR Error while calling watcher  java.lang.OutOfMemoryError: unable to create new native thread\n   [junit4]   2> \tat java.lang.Thread.start0(Native Method)\n   [junit4]   2> \tat java.lang.Thread.start(Thread.java:714)\n   [junit4]   2> \tat java.util.concurrent.ThreadPoolExecutor.addWorker(ThreadPoolExecutor.java:950)\n   [junit4]   2> \tat java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1368)\n   [junit4]   2> \tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:112)\n   [junit4]   2> \tat org.apache.solr.common.cloud.SolrZkClient$3.process(SolrZkClient.java:201)\n   [junit4]   2> \tat org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:522)\n   [junit4]   2> \tat org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498)\n   [junit4]   2> \n\n\nI see hundreds of LatchChildWatcher.process events and then the node goes out of memory.\n\nHere are some of the recent fails:\nhttp://jenkins.thetaphi.de/job/Lucene-Solr-trunk-Windows/4233/\nhttps://builds.apache.org/job/Lucene-Solr-NightlyTests-4.x/592/\nhttps://builds.apache.org/job/Lucene-Solr-Tests-4.x-Java7/2048/ "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14088476",
            "date": "2014-08-06T23:46:06+0000",
            "content": "Thanks Shalin, I'll take a look. Looks like the executor isn't working as efficiently as we need. "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-14089078",
            "date": "2014-08-07T09:43:03+0000",
            "content": "This is possibly exposing a design issue with OCP. There is a watch being created with each workQueue.peekTopN, even if there are work items present. It could then fail exclusivity check, and then try again, find items and create one more watch..\n\n\n~/builds/lucene-solr/solr/core| less out.log | grep 'Exclusivity check failed' | wc -l\n6960\n\n\n\nObviously with the new code you run into issues because that creates 1000s of threads, but it's a problem to begin with that the code is creating 1000s of watches.. "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-14089118",
            "date": "2014-08-07T10:37:22+0000",
            "content": "Thinking this through further, the problem comes down to the fact that peekTopN leaks (potentially multiple) watches as it creates one with each getChildren and throws it away when it has results or a timeout is reached on an empty queue, and currently there's no way to remove watches from Zk currently (hopefully something to look forward to when 3.5 gets released and ZOOKEEPER-1829 gets in). Put this call in an event loop and you have a big issue.\n\nI guess we do need timeouts to check leadership every now and then, but peek should at that point have a way to see if it had created a watch before and wait on it instead of looking for children again. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14089185",
            "date": "2014-08-07T12:45:49+0000",
            "content": "Thanks for digging Ram - you going to work up a patch in the near term or should I jump in? "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-14089210",
            "date": "2014-08-07T13:33:25+0000",
            "content": "I will open a separate Jira and attach a patch. I have one ready.. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14089215",
            "date": "2014-08-07T13:38:29+0000",
            "content": "Awesome, thanks for digging in! "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-14089231",
            "date": "2014-08-07T13:56:14+0000",
            "content": "Opened SOLR-6336. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14089618",
            "date": "2014-08-07T19:02:47+0000",
            "content": "This image compares thread behavior while running MultiThreadedOCPTest before the commit of this issue, with current trunk, and after SOLR-6336 is applied. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14093316",
            "date": "2014-08-11T21:23:34+0000",
            "content": "Thanks Shalin and Ramkumar! "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-14093462",
            "date": "2014-08-11T22:35:06+0000",
            "content": "Mark Miller, had posted a patch for one missed case with the session watcher (just above Shalin's comment), could you commit that as well or should that be a separate issue? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14093582",
            "date": "2014-08-12T00:54:34+0000",
            "content": "Ah, confused it with the second patch on the other issue when I glanced at it. Yeah, I can commit it here. "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-14151666",
            "date": "2014-09-29T13:13:25+0000",
            "content": "Ah, confused it with the second patch on the other issue when I glanced at it. Yeah, I can commit it here.\n\nHey Mark Miller, just checking since I don't see an automated message here, was this committed? Thanks! "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14151675",
            "date": "2014-09-29T13:24:21+0000",
            "content": "Hmm, my fault. Should have reopened the issue then. We will have to make a new JIRA it sounds. "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-14151800",
            "date": "2014-09-29T15:32:58+0000",
            "content": "np, I have now opened SOLR-6570 for this, this is for pull #78 on GitHub. "
        },
        {
            "author": "ASF GitHub Bot",
            "id": "comment-14262140",
            "date": "2014-12-31T12:29:37+0000",
            "content": "Github user andyetitmoves closed the pull request at:\n\n    https://github.com/apache/lucene-solr/pull/66 "
        },
        {
            "author": "ASF GitHub Bot",
            "id": "comment-14262143",
            "date": "2014-12-31T12:30:33+0000",
            "content": "Github user andyetitmoves closed the pull request at:\n\n    https://github.com/apache/lucene-solr/pull/78 "
        }
    ]
}