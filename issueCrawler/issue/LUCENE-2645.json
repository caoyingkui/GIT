{
    "id": "LUCENE-2645",
    "title": "False assertion of >0 position delta in StandardPostingsWriterImpl",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/index"
        ],
        "type": "Bug",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "StandardPostingsWriterImpl line 159 is:\n\n    assert delta > 0 || position == 0 || position == -1: \"position=\" + position + \" lastPosition=\" + lastPosition;            // not quite right (if pos=0 is repeated twice we don't catch it)\n\n\n\nI enable assertions when I run my unit tests and I've found this assertion to fail when delta is 0 which occurs when the same position value is sent in twice in arrow.  Once I added RemoveDuplicatesTokenFilter, this problem went away.  Should I really be forced to add this filter?  I think delta >= 0 would be a better assertion.",
    "attachments": {
        "LuceneTrunkAssertErrorReproducer.java": "https://issues.apache.org/jira/secure/attachment/12481411/LuceneTrunkAssertErrorReproducer.java"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-06-03T21:51:13+0000",
            "content": "This is preventing one of unit tests for our Tokenizer/Filter product to fail.  Although it looks as if the unit test case were failing, a closer look shows that the failure is from this this assertion inside the Lucene core.  \nWe have inspected the Token sequence that causes this assertion to fail, and it looks valid.\nThe attached program can reproduce this false assertion failure. Please give this bug a higher priority, and remove this assertion.\n\n$ javac -cp lucene-core-4.0-SNAPSHOT.jar LuceneTrunkAssertErrorReproducer.java\n$ java -ea -cp .:lucene-core-4.0-SNAPSHOT.jar LuceneTrunkAssertErrorReproducer\nException in thread \"main\" java.lang.AssertionError: position=1 lastPosition=1\n\tat org.apache.lucene.index.codecs.standard.StandardPostingsWriter.addPosition(StandardPostingsWriter.java:197)\n\tat org.apache.lucene.index.FreqProxTermsWriterPerField.flush(FreqProxTermsWriterPerField.java:385)\n\tat org.apache.lucene.index.FreqProxTermsWriter.flush(FreqProxTermsWriter.java:88)\n\tat org.apache.lucene.index.TermsHash.flush(TermsHash.java:117)\n\tat org.apache.lucene.index.DocInverter.flush(DocInverter.java:80)\n\tat org.apache.lucene.index.DocFieldProcessor.flush(DocFieldProcessor.java:75)\n\tat org.apache.lucene.index.DocumentsWriterPerThread.flush(DocumentsWriterPerThread.java:457)\n\tat org.apache.lucene.index.DocumentsWriter.doFlush(DocumentsWriter.java:421)\n\tat org.apache.lucene.index.DocumentsWriter.flushAllThreads(DocumentsWriter.java:548)\n\tat org.apache.lucene.index.IndexWriter.doFlush(IndexWriter.java:2776)\n\tat org.apache.lucene.index.IndexWriter.flush(IndexWriter.java:2753)\n\tat org.apache.lucene.index.IndexWriter.prepareCommit(IndexWriter.java:2619)\n\tat org.apache.lucene.index.IndexWriter.commitInternal(IndexWriter.java:2692)\n\tat org.apache.lucene.index.IndexWriter.commit(IndexWriter.java:2674)\n\tat org.apache.lucene.index.IndexWriter.commit(IndexWriter.java:2658)\n\tat LuceneTrunkAssertErrorReproducer.main(LuceneTrunkAssertErrorReproducer.java:39)\n\n ",
            "author": "Kuro Kurosaka",
            "id": "comment-13044077"
        },
        {
            "date": "2011-06-04T13:37:44+0000",
            "content": "Bug only affects 4.0 (we don't have this assert in 3.x), but I'll backport the test case to 3.x to make sure. ",
            "author": "Michael McCandless",
            "id": "comment-13044290"
        },
        {
            "date": "2011-06-04T13:39:47+0000",
            "content": "Thanks Kurosaka! ",
            "author": "Michael McCandless",
            "id": "comment-13044291"
        },
        {
            "date": "2011-06-06T14:14:43+0000",
            "content": "Thanks for the test Korusaka. I didn't realize my bug report last year that an assert condition's \">\" should become \">=\" was insufficient for a committer to simply make the 1-char change. I guess I should work on creating tests for nearly everything for my bug reports to get more traction. :-| ",
            "author": "David Smiley",
            "id": "comment-13044860"
        },
        {
            "date": "2011-06-06T15:48:29+0000",
            "content": "While test cases are always welcome, they certainly are not necessary in a patch (Yonik's Law of Patches).\n\nWhich issue had you opened before?  Somehow it fell through the cracks... which, unfortunately, happens all the time in open-source.  Best to bump/gently nag on important fixes... ",
            "author": "Michael McCandless",
            "id": "comment-13044918"
        },
        {
            "date": "2011-06-06T16:00:17+0000",
            "content": "Which issue had you opened before?\n\nThis one!  \u2013 But if you want to give Korusaka credit for it because he submitted a patch then fine. He went the extra mile that I didn't think was necessary. ",
            "author": "David Smiley",
            "id": "comment-13044926"
        },
        {
            "date": "2011-06-06T16:05:17+0000",
            "content": "D'oh!  Woops   I didn't see that you had opened this issue!  And I missed it from last September... sorry \n\nI will add you to CHANGES.\n\nAnd no that extra mile is not necessary.  Just some gentle nagging would help stuff not fall past the event horizons on our todo lists  ",
            "author": "Michael McCandless",
            "id": "comment-13044928"
        },
        {
            "date": "2011-06-06T16:05:17+0000",
            "content": "Thank you, Michael, for quick fix, and David, for initially reporting this bug and giving me a credit  ",
            "author": "Kuro Kurosaka",
            "id": "comment-13044929"
        },
        {
            "date": "2011-06-06T16:06:29+0000",
            "content": "Thank you both  ",
            "author": "Michael McCandless",
            "id": "comment-13044930"
        }
    ]
}