{
    "id": "LUCENE-7624",
    "title": "Consider moving TermsQuery to core",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Improvement",
        "components": [],
        "fix_versions": [
            "6.5",
            "7.0"
        ]
    },
    "description": "TermsQuery current sits in the queries module, but it's used in both spatial-extras and in facets, and currently is the only reason that the facets module has a dependency on queries.  I think it's a generally useful query, and would fit in perfectly well in core.\n\nThis would also allow us to explore rewriting BooleanQuery to TermsQuery to avoid the max-clauses limit",
    "attachments": {
        "LUCENE-7624.patch": "https://issues.apache.org/jira/secure/attachment/12846330/LUCENE-7624.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15811696",
            "date": "2017-01-09T12:48:56+0000",
            "content": "... I think it's a generally useful query, and would fit in perfectly well in core.\n\nI agree. Already (singular) TermQuery is in core and it would be logical for (plural) TermsQuery to be in the same module. Historically (pre LUCENE-6270) TermsQuery used to be TermsFilter which perhaps explains its location in the queries rather than the core module. ",
            "author": "Christine Poerschke"
        },
        {
            "id": "comment-15811766",
            "date": "2017-01-09T13:24:46+0000",
            "content": "It would be logical if it really behaved the same, but it doesnt. \n\nPlease, don't put this in core with this name right beside TermQuery when it scores differently. That is such a trap. ",
            "author": "Robert Muir"
        },
        {
            "id": "comment-15811776",
            "date": "2017-01-09T13:29:25+0000",
            "content": "How about TermInSetQuery, by analogy with PointInSetQuery?  The latter is also constant-scoring. ",
            "author": "Alan Woodward"
        },
        {
            "id": "comment-15811782",
            "date": "2017-01-09T13:32:27+0000",
            "content": "+1 to TermInSetQuery ",
            "author": "David Smiley"
        },
        {
            "id": "comment-15811805",
            "date": "2017-01-09T13:40:58+0000",
            "content": "+1 for TermInSetQuery. And leave a deprecated stub in the queries module. ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15811808",
            "date": "2017-01-09T13:42:18+0000",
            "content": "This would also allow us to explore rewriting BooleanQuery to TermsQuery to avoid the max-clauses limit\n\nCan't work unless the BooleanQuery has no scoring enabled (this can be checked when Weight is created, but not during rewrite). ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15811852",
            "date": "2017-01-09T14:04:12+0000",
            "content": "+1 for the much better name. ",
            "author": "Robert Muir"
        },
        {
            "id": "comment-15811889",
            "date": "2017-01-09T14:22:26+0000",
            "content": "+1 for TermInSetQuery. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15811896",
            "date": "2017-01-09T14:26:01+0000",
            "content": "Here's a patch, will commit shortly. ",
            "author": "Alan Woodward"
        },
        {
            "id": "comment-15812053",
            "date": "2017-01-09T15:32:04+0000",
            "content": "Commit 8511f9e6991679f71e7a82c6ef9cf1b774d090aa in lucene-solr's branch refs/heads/branch_6x from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8511f9e ]\n\nLUCENE-7624: Move TermsQuery into core as TermInSetQuery ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15812054",
            "date": "2017-01-09T15:32:06+0000",
            "content": "Commit 22940f5c49297b606d710c6775309d67ff064f2f in lucene-solr's branch refs/heads/master from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=22940f5 ]\n\nLUCENE-7624: Move TermsQuery into core as TermInSetQuery ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15812059",
            "date": "2017-01-09T15:34:01+0000",
            "content": "Commit 17cd0f00cc1a7bce647eedfe56c860a02aa22654 in lucene-solr's branch refs/heads/master from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=17cd0f0 ]\n\nLUCENE-7624: Remove deprecated TermsQuery ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15812060",
            "date": "2017-01-09T15:34:25+0000",
            "content": "Thanks all ",
            "author": "Alan Woodward"
        },
        {
            "id": "comment-15822949",
            "date": "2017-01-14T20:56:31+0000",
            "content": "Should we take advantage of this move to require that all terms are in the same field? Using this query across multiple fields disables an optimization, and I don't think it is very useful etither? ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15822968",
            "date": "2017-01-14T22:13:01+0000",
            "content": "Should we take advantage of this move to require that all terms are in the same field? Using this query across multiple fields disables an optimization, and I don't think it is very useful etither?\n\n+1 ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15823008",
            "date": "2017-01-15T01:51:56+0000",
            "content": "Should we take advantage of this move to require that all terms are in the same field? Using this query across multiple fields disables an optimization, and I don't think it is very useful etither?\n\n+1 I agree ",
            "author": "David Smiley"
        },
        {
            "id": "comment-15823102",
            "date": "2017-01-15T10:50:07+0000",
            "content": "This one is an interesting target for surround, so I had a look.\n\nAllowing more than one field for the terms also has an advantage in that only one doc id set will be built for all the terms.\n\nAs to the code: \nThere is a small javadoc mistake in line 54 using both \"@{\" and \"{@\".\nWhen constructing a Term a deep copy of the given BytesRef is taken, so the deep copy in line 154 is superfluous.\n(The deep copy in line 222 of the termEnum.term() is needed there.) ",
            "author": "Paul Elschot"
        },
        {
            "id": "comment-15823709",
            "date": "2017-01-16T10:00:16+0000",
            "content": "Allowing more than one field for the terms also has an advantage in that only one doc id set will be built for all the terms.\n\nThis is correct, but I think this is a very rare use-case? On the other end, requiring a single field would simplify things I think. It would be more consistent with other queries, eg. PointInSetQuery or would allow to rewrite to an AutomatonQuery if that proves helpful in some cases (which also works on a single field). ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15823710",
            "date": "2017-01-16T10:00:49+0000",
            "content": "Commit 929fba34d95a9d3b168b38839203f2835be1060f in lucene-solr's branch refs/heads/branch_6_4 from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=929fba3 ]\n\nRevert \"LUCENE-7624: Move TermsQuery into core as TermInSetQuery\"\n\nThis reverts commit 8511f9e6991679f71e7a82c6ef9cf1b774d090aa. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15823711",
            "date": "2017-01-16T10:01:44+0000",
            "content": "I just reverted from the 6.4 branch as discussed on the dev list in order to have a bit more time to discuss whether this query should allow terms that come from multiple fields. ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15833001",
            "date": "2017-01-21T14:34:40+0000",
            "content": "GitHub user PaulElschot opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/141\n\n    Minor corrections, see also LUCENE-7624\n\n    LUCENE-7637\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/PaulElschot/lucene-solr lucene7637\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/141.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #141\n\n\ncommit 59d8bd27df50f280e8530e757e946fceaa1cc37a\nAuthor: Paul Elschot <paul.j.elschot@gmail.com>\nDate:   2017-01-21T14:32:02Z\n\n    Minor corrections, see also LUCENE-7624\n\n ",
            "author": "ASF GitHub Bot"
        }
    ]
}