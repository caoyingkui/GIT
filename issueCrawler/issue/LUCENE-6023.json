{
    "id": "LUCENE-6023",
    "title": "Remove \"final\" modifier from encode/decodeNormValue methods in DefaultSimilarity class.",
    "details": {
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved",
        "components": [
            "core/query/scoring"
        ],
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": []
    },
    "description": "",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14182667",
            "author": "Robert Muir",
            "content": "Override Similarity directly instead. ",
            "date": "2014-10-24T11:00:12+0000"
        },
        {
            "id": "comment-14183754",
            "author": "Hafiz M Hamid",
            "content": "That would require copy/pasting code from TFIDFSimilarity into our new Similarity implementation which we want to avoid as that might make it hard to upgrade in future. Majority of the DefaultSimilarity/TFIDFSimilarity functionality is still useful for us, we only want to override computation of a single component (i.e. fieldNorm) of existing tf-idf based scoring formula. Also changing it in the original code would allow others to benefit from it without posing any risks.\n\nI'm curious why we even have \"final\" modifiers on these methods. Unless it hurts the design/function of the class, there shouldn't be any harm in letting people extend/override the methods. ",
            "date": "2014-10-24T23:56:20+0000"
        },
        {
            "id": "comment-14183764",
            "author": "Robert Muir",
            "content": "tf/idf similarity exposes its own api, which is meant for extension. Thats why the low level methods are final, otherwise the API would be inconsistent and unsafe.\n\nIf you want to change how norms are encoded and so on, that is really expert. extend similarity directly. ",
            "date": "2014-10-25T00:03:13+0000"
        },
        {
            "id": "comment-14184148",
            "author": "Robert Muir",
            "content": "By the way: you can already override just the normalization by overriding these in TFIDFSimilarity:\n\n\n\tlong encodeNormValue(float f)\n\tfloat decodeNormValue(long l)\n\n\n\nSo you can just extend TFIDFSimilarity for an easier time. I think its ok also if 'final' is removed from these from DefaultSimilarity as well, but if you override these two methods, you've implemented half that class already. \n\nBut i don't care, since the 8bit \"assumption\" is already gone from the API here. But we should keep in mind this assumption can allow for optimizations (e.g. BM25's tableization)...\n\nHowever, we shouldnt remove final from methods like low-level weight/scorer. If you really need to change those, you should be using Similarity directly for that flexibility. ",
            "date": "2014-10-25T16:14:20+0000"
        },
        {
            "id": "comment-14185854",
            "author": "Hafiz M Hamid",
            "content": "Thanks a lot for your valuable insights Robert Muir. Since the byte-constraint seems to have been removed from encode/decodeNormValue signatures since 4.4, removing \"final\" from these methods in DefaultSimilarity (as you suggested) and overriding them in a subclass would do the job for us. I'll change the bug title to reflect that and will send a patch.\n\nJust so you're interested in knowing, our goal is to do the length-norm computation at search-time. For that, we want to store the raw field-length (i.e. numTerms) as fieldNorm so we could use it at search-time to compute length-norm. It'll enable us vary the length-norm function and A/B test them without having to re-index all the data which is out of question given our scale and limitations. ",
            "date": "2014-10-27T21:30:56+0000"
        }
    ]
}