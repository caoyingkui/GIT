{
    "id": "SOLR-4383",
    "title": "DataImportHandler: Semantic inconsistency of column/name attribute",
    "details": {
        "affect_versions": "4.1",
        "status": "Open",
        "fix_versions": [
            "6.0"
        ],
        "components": [
            "contrib - DataImportHandler",
            "documentation"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Different DIH Entity Processor assign different meaning to 'column' attribute. This can cause serious confusion to beginners but can also lead to extremely hard to troubleshoot subtle bugs.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-13566055",
            "date": "2013-01-30T01:42:23+0000",
            "content": "Specifically:\n1) In SqlEntityProcessor: @column is source SQL column, @name is the target schema field name\n2) In XPathEntityProcessor: @column is the target schema field name, @xpath is the source XPath expression\n3) In PlainTextEntityProcessor: @column is the source implicit field, @name is the target field name (did not test)\n\nIn Transformers: @column is target schema field name (I don't think they have access to actual source fields)\n\nThis causes very hard to figure out bugs like:\nDIH:\n      <field column=\"date\" name=\"DATE\" dateTimeFormat=\"dd MMM yyyy\"/>\nSCHEMA:\n    <field name=\"date\" type=\"fulldate\" indexed=\"true\" stored=\"true\" required=\"true\" />\n\nThe SqlEntityProcessor will pick up 'date' column from database (case-insensitive) \nand map it to 'DATE' schema name. \nDateFormatTransformer will then look for field as in @column, finds 'date' and tries to transform it. \nBut we don't have 'date' field, we have 'DATE' field, so it does not get transformed.\nThe untransformed DATE field then gets submitted to schema and (must be also case-insensitive) fails to get parsed causing (nearly silently) skipped entity.\n "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-13566097",
            "date": "2013-01-30T02:45:04+0000",
            "content": "Also means that the following line stops import for SqlEntityProcessor:\n      <field name=\"type\" template=\"vacancy-alert\"/>\nAnd has to be \n      <field name=\"type\" column=\"FAKE\" template=\"vacancy-alert\"/>\n\nBecause 'column' attribute has to be always present and throws error message if missing. "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-13581286",
            "date": "2013-02-19T13:58:54+0000",
            "content": "This causes further confusion when using variable resolver (Wiki does not help). In the example below, I have to have non-existant column names and then I have to use those names for my variable resolution.\n\n    <entity name=\"vac\" \n      dataSource=\"dbds\"\n      query=\"select * from ALERTS\"\n      transformer=\"RegexTransformer,TemplateTransformer,DateFormatTransformer\"\n      preImportDeleteQuery=\"type:vacancy-alert\"\n    >\n      <field column=\"id\" name=\"ID\" />\n      <field name=\"type\" column=\"FAKE\" template=\"vacancy-alert\"/>\n      <field name=\"vac_id\" column=\"FAKE2\" sourceColName=\"SUBJECT\" regex=\"^\\((.*)\\)\"/>\n\n      <entity name=\"vacancy-geocoder\" dataSource=\"dbds\"\n        query=\"select LOC from GEOCODE where NAME = '${vac.FAKE2}'\"\n      >\n        <field name=\"vac_loc\" column=\"LOC\" />\n      </entity>\n    </entity>\n\n "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-13581288",
            "date": "2013-02-19T14:03:37+0000",
            "content": "I can see this is marked for 5.0. If that's truly the case, the whole DIH documentation page needs to be refactored to avoid people just giving up on complex setups. Should I create a separate issue for that? "
        },
        {
            "author": "Noble Paul",
            "id": "comment-15552900",
            "date": "2016-10-06T19:17:34+0000",
            "content": "Need to fix this.\n\n\n<field name=\"type\" template=\"vacancy-alert\"/>\n\n\nthis must work. SqlEntityProcessor must ignore all fields w/o column attribute. Please open a ticket and resolve this\n\n\nXPathEntityProcessor: @column is the target schema field name, @xpath is the source XPath expression\n\nThis is very bad. it should support name as well. if column is absent and name is present it should work like other Entityprocessors "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-15553737",
            "date": "2016-10-07T01:05:13+0000",
            "content": "SqlEntityProcessor must ignore all fields w/o column attribute\nWhen you say ignore, you do mean it will still allow the template call to happen and for the field to be populated? Right? "
        },
        {
            "author": "Noble Paul",
            "id": "comment-15554339",
            "date": "2016-10-07T07:05:44+0000",
            "content": "Yes. The entityProcessor can ignore it and the TYransformers can use it "
        }
    ]
}