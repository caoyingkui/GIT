{
    "id": "SOLR-6797",
    "title": "Add score=degrees|kilometers|miles for AbstractSpatialFieldType",
    "details": {
        "components": [
            "spatial"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Annoyingly, the units=\"degrees\" attribute is required for fields extending AbstractSpatialFieldType (e.g. RPT, BBox).  And it doesn't really have any effect.  I propose the following:\n\n\n\tSimply drop the attribute; ignore it if someone sets it to \"degrees\" (for back-compat).\n\tWhen using score=\"distance\", or score=area or area2D (as seen in BBoxField) then use kilometers if geo=true, otherwise degrees.\n\tAdd support for score=degrees|kilometers|miles|degrees",
    "attachments": {
        "SOLR-6797.patch": "https://issues.apache.org/jira/secure/attachment/12687740/SOLR-6797.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2014-11-26T14:48:06+0000",
            "author": "David Smiley",
            "content": "The origins of why I added the units attribute was for the coordinate values, which are in degrees.  And for consistency, I returned distances in degrees as well. ",
            "id": "comment-14226267"
        },
        {
            "date": "2014-12-12T12:36:48+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "David Smiley, I'm wondering how could a user specify score=distance (bullet point 2) and score=miles (bullet point 3), since both seem to use the score parameter? \n\nShouldn't we use something like:\nscore=distance|area|area2D \nand\nunits=degrees|kilometers|miles \n? ",
            "id": "comment-14244058"
        },
        {
            "date": "2014-12-12T13:31:31+0000",
            "author": "David Smiley",
            "content": "If 'units' were named 'distanceUnits' then perhaps, but as-is, 'units' is ambiguous.  Units of what?  It was units of the coordinate values, which actually remains degrees.  My proposal is that score=degrees|kilometers implies distance as the score, plus it allows the application to state the preference in their code & URL parameter and have it be self-documenting to know what the units are, instead of requiring looking at the field type definition to know the units.  I think that will be intuitive?  This doesn't preclude adding a distanceUnits attribute on the field type to be used as a default for distance|area|area2D, which may be nice; I'm +0 on that (ambivalent). ",
            "id": "comment-14244133"
        },
        {
            "date": "2014-12-17T15:01:56+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "That makes sense; more intuitive than a separate units/distanceUnits parameter. Attached a patch that supports score=distance (back compat, km when geo) | kilometers | miles | degrees | area/area2D (km^2 when geo, deg^2 in 2D). Tested manually and seems to work.  ",
            "id": "comment-14249941"
        },
        {
            "date": "2014-12-18T05:14:41+0000",
            "author": "David Smiley",
            "content": "Thanks for supplying a patch!\n\n\n\tif score=miles|kilometers then I think we can quite explicitly do that without checking ctx.isGeo.  This is what the user asked for, so they know what they are doing.\n\tif score=distance, we should have backwards-compatible behavior.  If you set units=\"degrees\" on the field type then that's what you get here.  I'm unsure if we should otherwise throw an exception, or otherwise let you set units to miles|kilomters or otherwise always choose a default based on ctx.isGeo (km or degrees).  My preference is the latter, and we should discourage score=distance generally as it's unclear.  But just a preference; I think you've expressed an opinion for the 2nd and that's fine with me too.\n\tWe should allow \"units\" to be unset (preferred actually). This is my 1st bullet in the description.\n\tin ShapeAreaValueSource, you can pull the computed multiplier of the function so that it's not called each time: (geoArea ? DistanceUtils.DEG_TO_KM * DistanceUtils.DEG_TO_KM: 1.0)\n\n\n\nTests please? ",
            "id": "comment-14251205"
        },
        {
            "date": "2014-12-22T19:58:14+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Thanks for your review, David.\nI've incorporated your suggestions in the attached patch. This unsets and ignores/doesn't use the \"units\" param (checks for \"degrees\" for backcompat behaviour), introduces an optional param \"distanceUnits\" (if someone wants to specify units explicitly).\n\nI'm still writing the tests, will update the patch soon.  ",
            "id": "comment-14256123"
        },
        {
            "date": "2014-12-23T04:29:53+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Updated patch with tests using a managed schema approach. I wasn't sure where the tests should reside, so went with a separate test class. \nPlease review, I hope I didn't miss out anything this time  ",
            "id": "comment-14256591"
        },
        {
            "date": "2014-12-23T05:18:55+0000",
            "author": "David Smiley",
            "content": "I like this patch Ishan.\nThere are a few bits of feedback:\n\n\tin TestBBoxStrategy, you should test a multiplier other than 1.0.  Try 2.0.\n\tI'm not a fan of allowing attributes to be an empty string, which this code allows (for distanceUnits, line 375). Normalize it or don't allow it (preferable, IMO).\n\n\n\nWow, this is a nice new test.  I like the dynamic schema modifications... probably much easier to test schema stuff than to always have to look at a separate file.  What was the template of this code (in other words, what did you copy-paste to get started)? schema-bm25.xml etc. looks very misplaced; please strip it down.  BTW, did you notice the existing spatial tests (particularly the new since Solr 4 ones)?  They aren't particularly obvious but they are TestSolr4Spatial and TestSolr4Spatial2.  \n\nAfter addressing the couple items above, I think it'll be ready. ",
            "id": "comment-14256610"
        },
        {
            "date": "2014-12-23T17:26:07+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Thanks David!\n\n> What was the template of this code (in other words, what did you copy-paste to get started)?\nI used the TestManagedSchema's testAddFieldThenReload() template.\n\n> schema-bm25.xml etc. looks very misplaced; please strip it down.\nCool, I'll have a look!\n\n> BTW, did you notice the existing spatial tests (particularly the new since Solr 4 ones)? \n> They aren't particularly obvious but they are TestSolr4Spatial and TestSolr4Spatial2. \nI did have a look, and changed the schema used in that test to use distanceUnits instead of units.  However, I verified that those tests pass even with older units parameter, so backward compatibility is intact. ",
            "id": "comment-14257248"
        },
        {
            "date": "2014-12-23T17:26:43+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Updated the patch with your suggestions. Thanks  ",
            "id": "comment-14257249"
        },
        {
            "date": "2014-12-23T19:27:51+0000",
            "author": "David Smiley",
            "content": "Oh, I forgot something key.  maxDistErr needs to reflect the same units as the new distanceUnits you have here.  Same with SpatialArgs.distErr.  Example/default schema should reflect 1 meter's worth and not depend on degrees.  You might want to add a little Units class for this \u2013 we've got 3 values. ",
            "id": "comment-14257401"
        },
        {
            "date": "2014-12-23T20:18:23+0000",
            "author": "David Smiley",
            "content": "FYI it may be non-obvious how to address maxDistErr since that part is actually populated by Lucene spatial's SpatialPrefixTreeFactory.  I suggest updating the Map with an updated maxDistErr after doing the conversion at the Solr layer.\np.s. on IRC I'm \"dsmiley\" ",
            "id": "comment-14257460"
        },
        {
            "date": "2014-12-23T20:46:07+0000",
            "author": "David Smiley",
            "content": "Ugh, and yet another piece of the codebase affected: SpatialFilterQParser (which parses 'd').  Perhaps the SpatialQueryable interface should have a getSphereRadius() method.   ",
            "id": "comment-14257500"
        },
        {
            "date": "2014-12-30T01:00:42+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Here's a patch that addresses some of these issues. Please suggest if I'm on the right track.\n\nFew things that are yet to do:\n\n\tExample/default schema to reflect 1m of maxDistErr and not depend on degrees.\n\tWasn't sure what use a Units class would have. Although I didn't understand its need, I felt something similar should sit in Spatial4j instead of Solr.\n\tNeed to write tests for all these conversions done to \"d\", sphere radius, SpatialArgs.distErr, maxDistErr.\n\n ",
            "id": "comment-14260627"
        },
        {
            "date": "2014-12-30T06:49:35+0000",
            "author": "David Smiley",
            "content": "You're sort of on the right track with the exception of getting what I mean by a Units (or perhaps better named DistanceUnits) class.  I think it's fine for it to be on the Solr side (not Spatial4j).  There are several places where you're testing distanceUnits against constants, which is a code smell.  Instead you could have an instance of DistanceUnits.  The back-compat aspect means there's more to it but it will help.  An enum is tempting but someone might want to add their own and we should let them... though there would need to be a hook to parse the string value so some other one could be parsed (maybe simply a protected method on the field type).\n\nIn AbstractSpatialFieldType.getSphereRadius, you were trying to come up with the sphere radius for degrees.  That's solving for the radius of this equation: 2*pi*R = 360, which is 180 / pi\n\nThe only other thing I noticed was that I'm not sure I like SpatialOptions.radius being < 0 as a means of saying it's unset.  Did you introduce this or was it -1 before but I didn't notice?  I suggest a Double type and let it be null.\n\nThanks for pushing forward with this one, Ishan.\np.s. if you like, feel free to fork on GitHub and we can do code reviews there if convenient for you. As the reviewer I found it way better than reviewing diffs to review progress for my GSOC student, and I noticed your patch was a git diff.  Alternatively there's reviews.apache.org but it didn't like your git diff file. IntelliJ had no issue with it on my svn checkout. ",
            "id": "comment-14260861"
        },
        {
            "date": "2014-12-30T15:23:19+0000",
            "author": "David Smiley",
            "content": "https://reviews.apache.org/r/29487/ ",
            "id": "comment-14261155"
        },
        {
            "date": "2014-12-31T03:45:57+0000",
            "author": "David Smiley",
            "content": "RE test maxDistErr and/or distErr... you might trivially just see if strategy.getDistErrPct and/or SpatialPrefixTree.getMaxLevels() yields what you expect given some particular input. ",
            "id": "comment-14261867"
        },
        {
            "date": "2015-01-01T20:36:37+0000",
            "author": "David Smiley",
            "content": "Here's a patch, modified from the most recent one you (Ishan) put up on ReviewBoard.  I hoped to upload it to the same review ticket but I saw no way to do so... perhaps since you created it only you can?  I'd appreciate it it you add this one if for no other reason then to see what my changes were exactly.  \n\nFrom memory...\n\n\tA test or two failed and it was related to a modification to the schema to use kilometers without correspondingly updated maxDistErr.\n\tSome places were checking units.equals(\"degrees\") when in fact the distanceUnits can be used because you've got a back-compat instance.\n\tI refactored the units & distanceUnits initialization logic. It should be equivalent, I think.  I didn't want parseDistanceUnits concerned with initialization-only logic.\n\tMoved DistanceUnits out of the spatial sub-package you made... it was the only class there and I felt it didn't warrant a package.  New packages require package level javadocs too.  \"ant precommit\" exposes such things.\n\n ",
            "id": "comment-14262654"
        },
        {
            "date": "2015-01-02T12:18:17+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "Thanks David! Updated the review request with this patch. Have a happy new year! ",
            "id": "comment-14262851"
        },
        {
            "date": "2015-01-02T14:45:25+0000",
            "author": "David Smiley",
            "content": "The remaining part we forgot about was geodist, as mentioned in the Review Board minutes ago. That's a blocker.\n\nBTW this is the CHANGES.txt additions I wrote up:\n\nUpgrading:\n\n* Spatial fields originating from Solr 4 (e.g. SpatialRecursivePrefixTreeFieldType, BBoxField)\n  have the 'units' attribute deprecated, now replaced with 'distanceUnits'.  If you change it to\n  a unit other than 'degrees' (or if you don't specify it, which will default to kilometers if\n  geo=true), then be sure to update maxDistErr as it's in those units.  If you keep units=degrees\n  then it should be backwards compatible but you'll get a deprecation warning on startup.  See\n  SOLR-6797.\n\n\n\nNew Features:\n\n* SOLR-6797: Spatial fields that used to require units=degrees like\n  SpatialRecursivePrefixTreeFieldType (RPT) now don't; it's deprecated.  It's replaced with a\n  distanceUnits attribute allowing degrees|kilometers|miles. It affects the result of the\n  score=distance|area|area2d mode of queries using this field which will now use these units,\n  as well as maxDistErr, distErr and the 'd' parameter referenced by geofilt and geodist.  score\n  now supports kilometers|miles|degrees to choose at query time. It does NOT affect distances\n  embedded in WKT strings like BUFFER(POINT(200 10),0.2))\n  (Ishan Chattopadhyaya, David Smiley)\n\n ",
            "id": "comment-14262924"
        },
        {
            "date": "2015-01-03T19:57:26+0000",
            "author": "David Smiley",
            "content": "The attached patch is modified a little from Ishan's last to tweak GeoDistValueSourceParser.SpatialStrategyMultiValueSource (a private inner class) to hold the distanceUnits in addition to the strategy, which is simpler than re-looking up the field type just to get the units.\n\nI'll commit shortly. ",
            "id": "comment-14263606"
        },
        {
            "date": "2015-01-03T20:09:37+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1649243 from David Smiley in branch 'dev/trunk'\n[ https://svn.apache.org/r1649243 ]\n\nSOLR-6797: spatial distanceUnits=degrees|kilometers|miles\nunits=degrees is now deprecated. ",
            "id": "comment-14263613"
        },
        {
            "date": "2015-01-03T20:34:53+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1649245 from David Smiley in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1649245 ]\n\nSOLR-6797: spatial distanceUnits=degrees|kilometers|miles\nunits=degrees is now deprecated. ",
            "id": "comment-14263623"
        },
        {
            "date": "2015-01-03T20:35:41+0000",
            "author": "David Smiley",
            "content": "Thanks Ishan! ",
            "id": "comment-14263624"
        },
        {
            "date": "2015-02-23T05:02:24+0000",
            "author": "Anshum Gupta",
            "content": "Bulk close after 5.0 release. ",
            "id": "comment-14332881"
        }
    ]
}