{
    "id": "LUCENE-5659",
    "title": "SpecialOperations.isFinite hits StackOverflowError on automaton accepting long strings",
    "details": {
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix",
        "components": [],
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "4.9",
            "6.0"
        ]
    },
    "description": "Just like we fixed getFiniteStrings to not consume stack in proportion to the longest string accepted by the automaton (LUCENE-5628), isFinite has the same limitation.  The fix is pretty simple; I just share the code from getFiniteStrings, but allocate two BitSets up front like the current impl.",
    "attachments": {
        "LUCENE-5659.patch": "https://issues.apache.org/jira/secure/attachment/12644098/LUCENE-5659.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13993511",
            "author": "Michael McCandless",
            "content": "Patch, I think it's ready. ",
            "date": "2014-05-09T10:17:12+0000"
        },
        {
            "id": "comment-13993517",
            "author": "Robert Muir",
            "content": "Whats the use case? \n\nI dont think we should do this: this patch changes a 5-line method to a 50 line method.\n\nIf we really want to implement it iteratively instead of recursively, why not just do it the classical way with java.util.Stack?\n\nIts no longer possible to \"see what the algorithm is doing\". The previous version you can look at and understand that its correct. ",
            "date": "2014-05-09T10:33:27+0000"
        },
        {
            "id": "comment-13993518",
            "author": "Michael McCandless",
            "content": "The problem I hit was a StackOverflowError when testing AnalyzingSuggester on a \"big\" suggestion.\n\nBut, it's just because that suggester calls .isFinite from an assert; I can just remove the assert instead.\n\nAlso, for some reason, the test only seems to fail on Java 8; I'm not sure if that version allocates less stack by default, or maybe just something about this test env (maybe it passes a too-small -Xss or something).\n\nWe also call isFinite in CompiledAutomaton, whenever we run any AutomatonQuery (e.g. FuzzyQuery, RegexpQuery, etc.), but likely those automata are tiny and wouldn't overflow stack.\n\nSo net/net I'm OK with not doing this and just removing AnalyzingSuggester's assert instead. ",
            "date": "2014-05-09T10:47:39+0000"
        },
        {
            "id": "comment-13993525",
            "author": "Robert Muir",
            "content": "Thanks for the explanation. I opened an issue for the real bug here: LUCENE-5660\n\nWe should also maybe revert 5628 in my opinion. This stuff is abuse of the automaton pkg for what its not designed to do, like trying to use a linked list as a hashmap.  ",
            "date": "2014-05-09T11:12:40+0000"
        }
    ]
}