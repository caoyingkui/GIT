{
    "id": "LUCENE-1915",
    "title": "Add static openInput(File,...) methods to all FSDirectory implementations",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/store"
        ],
        "type": "Wish",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "It would be really useful if NIOFSDirectory and MMapDirectory had static methods for opening an input for arbitrary Files\nSimpleFSDirectory should likewise have a static openInput(File) method in order to cover all basis (right now, SimpleFSIndexInput only has protected access\n\nThis allows creating a custom FSDirectory implementation that can use any criteria desired to determine what Input implementation to use for opening a file.\n\nI know the FileSwitchDirectory provides some ability to do this, however that locks the selection criteria down to only the file extension in use\nalso, the FileSwitchDirectory approach seems to want to have each directory at different paths (as list() methods just cat the directory listings of the sub directories, which could cause havoc if both sub directories point to the same FS path?)\n\nopening up these static openInput() methods would allow creating a custom FS store implementation that would could for instance mmap files of a particular type and size and use NIO for other files, and mabye even use the SimpleFS input for a third category of files. Could also then apply different buffer sizes to different files, perform RAM caching of particular inputs, etc",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2013-04-13T21:30:15+0000",
            "content": "SPRING_CLEANING_2013 JIRAS. A quick glance at the base FSDirectory class and it seems like this is already done. ",
            "author": "Erick Erickson",
            "id": "comment-13631181"
        }
    ]
}