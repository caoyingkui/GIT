{
    "id": "SOLR-5091",
    "title": "Clean up Servlets APIs, Kill SolrDispatchFilter, simplify API creation",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [
            "6.0"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "This is an issue to track a series of sub issues related to deprecated and crufty Servlet/REST API code.  I'll create sub-tasks to manage them.\n\n\n\tClean up all the old UI stuff (old redirects)\n\tKill/Simplify SolrDispatchFilter \u2013 for instance, why not make the user always have a core name in 5.0?  i.e. /collection1 is the default core\n\t\n\t\tI'd like to move to just using Guice's servlet extension to do this, which, I think will also make it easier to run Solr in other containers (i.e. non-servlet environments) due to the fact that you don't have to tie the request handling logic specifically to a Servlet.\n\t\n\t\n\tSimplify the creation and testing of REST and other APIs via Guice + Restlet, which I've done on a number of occasions.\n\t\n\t\tIt might be also possible to move all of the APIs onto Restlet and maintain back compat through a simple restlet proxy (still exploring this).  This would also have the benefit of abstracting the core request processing out of the Servlet context and make that an implementation detail.\n\t\tMoving to Guice, IMO, will make it easier to isolate and test individual components by being able to inject mocks easier.\n\t\n\t\n\n\n\nI am close to a working patch for some of this.  I will post incremental updates/issues as I move forward on this, but I think we should take 5.x as an opportunity to be more agnostic of container and I believe the approach I have in mind will do so.",
    "attachments": {
        "SOLR-5091.patch": "https://issues.apache.org/jira/secure/attachment/12595655/SOLR-5091.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Markus Jelsma",
            "id": "comment-13726285",
            "date": "2013-08-01T10:06:10+0000",
            "content": "Can you include SOLR-4018 if you're replacing the dispatch filter or i'll have to keep updating it as trunk progresses  "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13726287",
            "date": "2013-08-01T10:12:36+0000",
            "content": "I'll see what I can do. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13727998",
            "date": "2013-08-02T19:42:49+0000",
            "content": "This is really early.  None of the tests pass, etc. but it does show the Guice integration and it shows what's involved in adding a new API (see PingAPI).\n\nMoreover, I think it also will make it easier to embed Solr in whatever container we want going forward (since the top level things like CoreContainer are injected)\n\nOnce you apply the patch and build example and start it up, you should be able to see something like:\n\ncurl http://localhost:8983/solr/rest/ping\n{\"ping\":\"alive\"}\n\n\n\nOther notes, the endpoints, etc. are all just preliminary.\n\nAlso, see the top level package.html for some of my thoughts on restructuring the APIs for REST.\n\nThis will be a significant undertaking.  If others are interested in this overhaul, I'd suggest we start a branch against trunk. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13728134",
            "date": "2013-08-02T21:18:58+0000",
            "content": "Should be noted, there is a lot left to do:\n\n\n\tHandle existing request handlers\n\tDeal w/ collections, etc\n\tKill the SolrDispatchFilter\n\tDecide on what tests still need to pass and what don't\n\n\n\nAlso, I'd like to suggest some sub tasks that simplify some other things, namely, I'm not sure why we need to have response writers be per core, but we can cover that later. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13728842",
            "date": "2013-08-04T10:12:39+0000",
            "content": "I'm working on this on a branch: https://svn.apache.org/repos/asf/lucene/dev/branches/solr_guice_restlet/ as it is pretty involved. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13729381",
            "date": "2013-08-05T10:51:50+0000",
            "content": "Commit 1510425 from Grant Ingersoll in branch 'dev/branches/solr_guice_restlet'\n[ https://svn.apache.org/r1510425 ]\n\nSOLR-4818, SOLR-5091: very basics starting to come together "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13729383",
            "date": "2013-08-05T10:58:16+0000",
            "content": "Hi Grant,\none important question: Robert and I did a lot of work on making the parsing of URL query parameters unicode conform and prevent the possibly corrumpt servlet container from jumping in. I hope your changes don't disable the Solr's own URL parser in SolrRequestParsers! Otherwise we are back at broken Tomcat ISO-8859-1 parsing or Jetty's crazy and slow Readers. SolrRequestParsers now also supports non-UTF-8 REST parameters via the &ie=encoding request parameter in the URL.\n\nI just want to make sure that the parsing of HTTP requests and filling SolrQuery's parameter maps is still done by SolrRequestParsers! "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13729408",
            "date": "2013-08-05T11:28:00+0000",
            "content": "Uwe, duly noted!  This is a long ways away from being anything real and I am still using the SolrReqParsers. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13729416",
            "date": "2013-08-05T11:40:22+0000",
            "content": "Hi Grant,\nI did not want to hurry  I just mention it here, so we don't forget to extensively test this and check out the Google Guice ServletFilter to not jump in and corrumpt the HTTP request before Solr gets it. E.g., The current SolRequestParser's code checks for conformance when parsing the formadata post contents that those were not intercepted. It will fail the request in that case with a message that some ServletFilter was intercepting them before Solr. "
        },
        {
            "author": "Gavin",
            "id": "comment-16574099",
            "date": "2018-08-09T01:01:22+0000",
            "content": "Move issue from deprecated 'In  Progress' back to 'Open' "
        }
    ]
}