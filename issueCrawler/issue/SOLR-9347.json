{
    "id": "SOLR-9347",
    "title": "Solr post tool - ignore file name extension when -type is provided",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "6.1",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "I found that post tool is not loading files from directory if files have no extension even if you specify \"-params \"separator=%09\" -type text/tsv -filetypes tsv\" in arguments. I think if any of above parameter is used then there is no need to Enter auto mode. \nAlso there is no -verbose or -debug option that indicate potential problem.\n\n./bin/post -c mycol1  -params \"separator=%09\" -type text/tsv -filetypes tsv  /dev/datascience/pod1/population/baseline/\n/usr/java/jdk1.8.0_102//bin/java -classpath /home/xactly/solr-6.1.0/dist/solr-core-6.1.0.jar -Dauto=yes -Dc=bonusOrder -Ddata=files -Drecursive=yes org.apache.solr.util.SimplePostTool /mapr/insights/datascience/rulec/prdx/bonusOrderType/baseline/\nSimplePostTool version 5.0.0\nPosting files to [base] url http://localhost:8983/solr/mycol1/update...\nEntering auto mode. File endings considered are xml,json,jsonl,csv,pdf,doc,docx,ppt,pptx,xls,xlsx,odt,odp,ods,ott,otp,ots,rtf,htm,html,txt,log\nEntering recursive mode, max depth=999, delay=0s\nIndexing directory /dev/datascience/pod1/population/baseline/ (0 files, depth=0)\n0 files indexed.\nCOMMITting Solr index changes to http://localhost:8983/solr/mycol1/update...\nTime spent: 0:00:00.056",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-07-28T09:45:20+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "You are giving the tool a directory as argument, so by default it will scan the directory and all sub directories for files matching the filetypes pattern.\n\nI assume you want to force the tool into considering all files it finds as being of type tsv even if the file has no ending. Problem is that there will always be users attempting such a command on a folder with lots of other files, causing unexpected behavior. And the tool does not try to guess file types from file content, so the only way we can guess is through file endings.\n\nFor now I think your best bet is to call the tool once for every file, and use some bash scripting to select what files you need.\n\nI guess what could be done is a new option to tell the tool what type it should assume for files without a suffix, e.g. -nosuffix=tsv. The tool would then include files without a suffix in the file filter, and map them to that default type. Would that cover your use case? ",
            "id": "comment-15397328"
        },
        {
            "date": "2016-07-30T20:00:20+0000",
            "author": "nirav patel",
            "content": "I see. `-nosffix=tsv` could be useful but seems redundant to existing parameters: `-params \"separator=%09\" -type text/tsv -filetypes tsv` . One of them should override default behavior of reading extensions. \nfrom doc:\n-filetypes <type>[,<type>,...] (default: xml,json,jsonl,csv,pdf,doc,docx,ppt,pptx,xls,xlsx,odt,odp,ods,ott,otp,ots,rtf,htm,html,txt,log)\nOne of those parameter should be sufficient if you do not find any known file extension for any file in directory. I leave that choice to you though I am fine with having extra parameter that you suggested. ",
            "id": "comment-15400798"
        }
    ]
}