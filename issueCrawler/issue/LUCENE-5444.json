{
    "id": "LUCENE-5444",
    "title": "offsets in MemoryIndex broken when adding field with more than once",
    "details": {
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed",
        "components": [
            "core/index"
        ],
        "affect_versions": "4.6.1",
        "status": "Closed",
        "fix_versions": [
            "4.7",
            "6.0"
        ]
    },
    "description": "When fields with the same name are added more than once to MemoryIndex, the offsets of the previous additions of the field do not seem to be taken into account. As a result, MemoryIndex cannot be used for example with the vector highlighter.",
    "attachments": {
        "LUCENE-5444.patch": "https://issues.apache.org/jira/secure/attachment/12628898/LUCENE-5444.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13900912",
            "author": "britta weber",
            "content": "This patch includes a small test which compares the term vectors from MemoryIndex with those from RAMDirectory. It fails for the offsets. I also added a crude fix for MemoryIndex. ",
            "date": "2014-02-13T23:53:19+0000"
        },
        {
            "id": "comment-13901188",
            "author": "Simon Willnauer",
            "content": "Hey Britta, thanks for opening this issue! I actually think the patch looks pretty good though. Could you move the testcase into MemoryIndexTest instead? We usually use a utility method to create a new directory & index writers in tests like this: \n\n\n Directory dir = newDirectory();\n MockAnalyzer mockAnalyzer = new MockAnalyzer(random());\n IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random(), TEST_VERSION_CURRENT, mockAnalyzer)); \n\n\n\nI also think from looking at it the test must fail since you are not closing the index writer, index reader and the directory. I guess you should move most of it into a single method and only keep the compareTermVectors in a sep. method. Additionally I think since your patch allows it we should also test the `offsetGap` could you add another test for this as well? If you do so feel free to add a getOffsetGap(String) method to MockAnalyzer so you can reuse your tests! ",
            "date": "2014-02-14T07:43:41+0000"
        },
        {
            "id": "comment-13901318",
            "author": "britta weber",
            "content": "Thanks a lot for the quick response!\nHere is a new patch with the requested changes.\n\nI added a method setOffsetGap(..) and getOffsetGap() to MockAnalyzer and now set the offsetGap random in the test, which sort of tests the gapOffset as well. I did not add a separate test for the offsetGap though. Can you hint at what exactly I should be testing?\n\nAlso, I found that the String parameter for MockAnalyzer.setPositionIncrementGap is not really used. I added it to  setOffsetGap for consistency but it makes no sense. Should it be removed?\n\nI close everything now that has a close method. I am now a little surprised that the missing closes caused no test failure in the original patch. Could this be a problem? ",
            "date": "2014-02-14T11:12:05+0000"
        },
        {
            "id": "comment-13901389",
            "author": "Simon Willnauer",
            "content": "Hey Britta,\n\nthe parameter should be offsetGap rather than positionIncrementGap no?\n\n public void setOffsetGap(int positionIncrementGap){\n\n\n\nCan you hint at what exactly I should be testing?\n\nyou are passing an random offset (btw. the Math.abs call is not needed since it should give you a positive int anyways) to the mock analyzer that is what I meant by testing the offset gap. \n\nplease just fix that parameter name and I think we are good to go! thanks for fixing all the stuff so quickly! ",
            "date": "2014-02-14T12:41:31+0000"
        },
        {
            "id": "comment-13901404",
            "author": "britta weber",
            "content": "Here you go, also added javadoc to MockAnalyzer.set/getOffsetGap. ",
            "date": "2014-02-14T13:03:23+0000"
        },
        {
            "id": "comment-13901437",
            "author": "Simon Willnauer",
            "content": "looks awesome - I will commit this in a bit! ",
            "date": "2014-02-14T13:24:23+0000"
        },
        {
            "id": "comment-13901447",
            "author": "Uwe Schindler",
            "content": "+1 to commit. Looks correct. I would just prefer to explicitely intialize fields (although they are 0) in MockAnalyzer. ",
            "date": "2014-02-14T13:39:23+0000"
        },
        {
            "id": "comment-13901451",
            "author": "Simon Willnauer",
            "content": "I ran the tests and found some bugs - the actual value to initialize the offsetGap is 1 rather than 0 - I also fixed the MockAnalyzer to pull the super.getOffsetGap() if it is not set so it will always get the default we use. I also added a changes entry and will commit in a bit. ",
            "date": "2014-02-14T13:49:40+0000"
        },
        {
            "id": "comment-13901452",
            "author": "ASF subversion and git services",
            "content": "Commit 1568294 from Simon Willnauer in branch 'dev/trunk'\n[ https://svn.apache.org/r1568294 ]\n\nLUCENE-5444: MemoryIndex did't respect the analyzers offset gap ",
            "date": "2014-02-14T13:51:28+0000"
        },
        {
            "id": "comment-13901460",
            "author": "ASF subversion and git services",
            "content": "Commit 1568314 from Simon Willnauer in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1568314 ]\n\nLUCENE-5444: MemoryIndex did't respect the analyzers offset gap ",
            "date": "2014-02-14T14:19:28+0000"
        },
        {
            "id": "comment-13901465",
            "author": "Simon Willnauer",
            "content": "committed to trunk and 4.x ",
            "date": "2014-02-14T14:20:52+0000"
        },
        {
            "id": "comment-13901607",
            "author": "britta weber",
            "content": "Thanks a lot Simon and Uwe for doing this so quickly! ",
            "date": "2014-02-14T16:40:12+0000"
        }
    ]
}