{
    "id": "SOLR-9902",
    "title": "StandardDirectoryFactory should use Files API for it's move implementation.",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.4",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "It's done in a platform independent way as opposed to the old File API.",
    "attachments": {
        "SOLR-9902.patch": "https://issues.apache.org/jira/secure/attachment/12844986/SOLR-9902.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-12-29T05:31:25+0000",
            "author": "David Smiley",
            "content": "Why does your patch do this:\n\nFileSystems.getDefault().getPath(path1.toString(), fileName)\n\nInstead of simply:\n\npath1.resolve(fileName)\n ",
            "id": "comment-15784562"
        },
        {
            "date": "2016-12-29T10:20:42+0000",
            "author": "Mark Miller",
            "content": "Probably because I cut and pasted it from the Path javadoc. Not the only code that offers more than one way to do the same thing.\n\n\nAccessing Files\n\nPaths may be used with the Files class to operate on files, directories, and other types of files. For example, suppose we want a BufferedReader to read text from a file \"access.log\". The file is located in a directory \"logs\" relative to the current working directory and is UTF-8 encoded.\n\n     Path path = FileSystems.getDefault().getPath(\"logs\", \"access.log\");\n     BufferReader reader = Files.newBufferedReader(path, StandardCharsets.UTF_8);\n\n ",
            "id": "comment-15785039"
        },
        {
            "date": "2016-12-29T10:41:35+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 2781145eb3760489922530fd92d5f1d4c35215a9 in lucene-solr's branch refs/heads/master from markrmiller\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2781145 ]\n\nSOLR-9902: StandardDirectoryFactory should use Files API for it's move implementation. ",
            "id": "comment-15785071"
        },
        {
            "date": "2017-01-03T22:35:56+0000",
            "author": "ASF subversion and git services",
            "content": "Commit cbf96e0d7572a28141226d92f978b8aef8bd2509 in lucene-solr's branch refs/heads/branch_6x from markrmiller\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cbf96e0 ]\n\nSOLR-9902: StandardDirectoryFactory should use Files API for it's move implementation. ",
            "id": "comment-15796420"
        },
        {
            "date": "2017-01-08T15:30:11+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 8bc151d1c61932dda26c682cf2281535f0c36058 in lucene-solr's branch refs/heads/master from markrmiller\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8bc151d ]\n\nSOLR-9902: Fix move impl. ",
            "id": "comment-15809557"
        },
        {
            "date": "2017-01-08T18:44:39+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 8fca7442716ad3397096fc271b1b9c22dd436d53 in lucene-solr's branch refs/heads/branch_6x from markrmiller\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8fca744 ]\n\nSOLR-9902: Fix move impl. ",
            "id": "comment-15809832"
        },
        {
            "date": "2017-01-09T21:37:05+0000",
            "author": "Mike Drob",
            "content": "One more clarification I'd be interested in here...\n\nIf Files.move fails for whatever reason, would it make sense to fall back to the super.move implementation or is throwing the exception sufficient for a best effort attempt here? ",
            "id": "comment-15812925"
        },
        {
            "date": "2017-01-09T21:46:23+0000",
            "author": "Mark Miller",
            "content": "I think it probably makes sense to throw an exception. For index integrity we really need a move rather than creating a new file unless the directory factory is ephemeral - so we don't want to easily hide move not working when using local fs or make it a normal path that we try multiple ways to move a file (beyond attempting an atomic move first). If neither an atomic or std move work, something should be very wrong. ",
            "id": "comment-15812950"
        }
    ]
}