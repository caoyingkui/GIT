{
    "id": "LUCENE-5291",
    "title": "Faster Query-Time Join",
    "details": {
        "components": [
            "core/index",
            "core/search"
        ],
        "fix_versions": [],
        "affect_versions": "4.5",
        "priority": "Minor",
        "labels": "",
        "type": "Improvement",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "The current implementation of query-time join could be complemented with a much faster one, provided some choices can be made about what to join on.\n\nSince join is really a database concept, we found it quite natural to restrict the keys to be integers and be single valued. \n\nWe found that if it is possible to use integers keys, and having single valued key fields, the speed of join can be improved 50 fold. Proper caching again speeds up about 20 times.\n\nI'd like to contribute our code if you agree that it is a useful contribution.  That probably depends on what you think of the choices we made about the keys, so that need to be discussed first?",
    "attachments": {
        "LUCENE-5291.patch": "https://issues.apache.org/jira/secure/attachment/12609106/LUCENE-5291.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-10-17T17:12:50+0000",
            "content": "Please feel totally free to attach a patch, no matter whether you think it's \"finished\" or not. Yonik's law of patches:\n\n\"A half-baked patch with no documentation, no tests and no backwards compatibility is better than no patch at all.\"\n\nThat let's people really see what changes you've made, make recommendations, etc.\n\nTwo requests:\n1> make sure of the formatting. See http://wiki.apache.org/solr/HowToContribute. That page links to format files for Eclipse and IntelliJ files.\n2> label your patch LUCENE-5291.patch. If you put up successive patches, give them the same name. The newest one will gray-out the older ones, making it very easy to both see the history and get the most recent\n\nAnd thanks! This is now open source code gets better! ",
            "author": "Erick Erickson",
            "id": "comment-13798108"
        },
        {
            "date": "2013-10-18T07:36:05+0000",
            "content": "This patch does not patch anything in Lucene. Its just three classes that apply Lucene.  They live in src/org/meresco/lucene. If adopted, they could be moved to org/apache/lucene.\n\nI used \"diff -urN\" instead of svn diff, since the code is in git, not in subversion.\n\nThe split between KeyCollector and CachingKeyCollector is not essential.  It only shows how simple the idea is, and how caching complicates things.\n\nIntended usage.\n\nEDIT\n\nIndexing:\nCreate NumericDocValues for the fields you want to join on.  We translate URIs to ords using DirectoryTaxonomyWriter, but that's just one way of doing it. As long as the number is small and monotonically increasing.\n\nSearching:\nYou first use CachingKeyCollector to collect keys from one index. Then you use CachingKeyCollector.getFilter() to filter keys in another index.  I went to some lengths to add documentation to the code, so I hope it is clear how it works. ",
            "author": "Erik Groeneveld",
            "id": "comment-13798879"
        }
    ]
}