{
    "id": "LUCENE-983",
    "title": "Enable IndexReader to merge tail segments on demand, in RAM, when opening",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/index"
        ],
        "type": "Improvement",
        "fix_versions": [
            "2.3"
        ],
        "affect_versions": "None",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "Spinoff from LUCENE-845.\n\nIn LUCENE-845, the IndexWriter must pay a high cost (O(N^2) merge\ncost) for keeping the number of segments \"always small\" in the case\nwhere flushes of very small segments (1 doc as worst case) happen\nfrequently.  This happens in \"low latency\" applications.\n\nThis is because IndexWriter must be ready \"at every moment\" for an\nIndexReader to open the index.\n\nBut, if we allow IndexReader to use some RAM (give it a RAM buffer) to\nload the long tail of small segments into a RAMDirectory, and then\nmerge them (in RAM), this allows IndexReader to still have good\nperformance on the index without IndexWriter paying this high merge\ncost.  This effectively allows us to optimize the tail segments \"on\ndemand\" when a reader needs to use them.\n\nWhen we combine this with LUCENE-743 (efficient \"re-open\" of a reader)\nthen we should be able to efficiently handle low latency applications.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2007-08-17T07:23:49+0000",
            "content": "I like this idea. Merging small segments in memory is probably fast,\nand only necessary during open()/reopen() and it will improve search \nperformance.\n\nLucene-743 will become a bit more difficult. We'll have to keep a \nlist of segments that are part of the merged index that is in the \nRAMDirectory. During reopen() we have to check if any of those \nsegments changed. If yes, we have to empty the RAMDirectory and\nload/merge the small segments again. Otherwise we just add new\nsegments to the RAMDirectory in case buffer size permits.\n\nHmm, we could even do more sophisticated things, e. g. if only the\ndeleted bits of a segment changed we could map them to the merged\nRAM index, so we could avoid opening/merging the small segments\nagain during reopen(). But probably the small performance gain is \nnot even worth the extra code complexity, as the segments should be \nquite small. ",
            "author": "Michael Busch",
            "id": "comment-12520480"
        },
        {
            "date": "2007-08-17T21:34:37+0000",
            "content": "On further discussion in LUCENE-845 it doesn't look like this idea is worth pursuing... ",
            "author": "Michael McCandless",
            "id": "comment-12520681"
        }
    ]
}