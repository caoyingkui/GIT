{
    "id": "SOLR-5780",
    "title": "Solr should benefit from Guava 16.0.1",
    "details": {
        "affect_versions": "4.7",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "SolrCloud"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Solr is using concurrentlinkedhashmap v1.2 and Guava 14.0.1 at the same time, according to concurrentlinkedhashmap author(s), that project main objective is to introduce ideas and then when proven they are ported to Guava.\n\nconcurrentlinkedhashmap v1.2 was designed for Java 5 and v1.4 for Java 6+ which is the target version Solr 4.x requires, v1.4 had a great improvement in performance and memory impact compared to v1.2 which was ported to Guava (I strongly believe v16.0.1+ will do)\n\nPertinent material:\n\n\n\thttp://stackoverflow.com/questions/15299554/what-does-it-mean-that-concurrentlinkedhashmap-has-been-integrated-into-guava\n\thttps://code.google.com/p/concurrentlinkedhashmap/wiki/Changelog\n\n\n\nAll that said, concurrentlinkedhashmap should be eliminated - OR keep up to date because it is the core of in-memory cache, same as Guava - and code using it should instead use MapMaker builder from Guava.",
    "attachments": {
        "SOLR-5780.patch": "https://issues.apache.org/jira/secure/attachment/12631879/SOLR-5780.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Furkan KAMACI",
            "id": "comment-13916643",
            "date": "2014-03-01T00:39:39+0000",
            "content": "I've created a patch file for approach of \"keeping up to date concurrentlinkedhashmap\" and run full tests whether it has a side effect or not. "
        },
        {
            "author": "Guido Medina",
            "id": "comment-13917016",
            "date": "2014-03-01T11:08:22+0000",
            "content": "I'm guessing too much code is dependant on concurrentlinkedhashmap, so the approach is a quick/effective improvement to such problem, there will be times where developers will prefer Guava or eventually migrate to the suggested Guava pattern, so I would keep both updated, not only concurrentlinkedhashmap. "
        }
    ]
}