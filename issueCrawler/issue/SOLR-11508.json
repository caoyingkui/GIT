{
    "id": "SOLR-11508",
    "title": "Make coreRootDirectory configurable via an environment variable (SOLR_CORE_HOME)",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "(Heavily edited)\n\nSince Solr 7, it is possible to store Solr cores in separate disk locations using solr.data.home (see SOLR-6671). This is very useful when running Solr in Docker where data must be stored in a directory which is independent from the rest of the container.\n\nWhile this works well in standalone mode, it doesn't in Cloud mode as the core.properties automatically created by Solr are still stored in coreRootDirectory and cores created that way disappear when the Solr Docker container is redeployed.\n\nThe solution is to configure coreRootDirectory to an empty directory that can be mounted outside the Docker container.\n\nThe incoming patch makes this easier to do by allowing coreRootDirectory to be configured via a solr.core.home system property and SOLR_CORE_HOME environment variable.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-18T18:30:50+0000",
            "content": "Are there any objection before I begin work on a patch? ",
            "author": "Marc Morissette",
            "id": "comment-16209794"
        },
        {
            "date": "2017-10-22T03:58:42+0000",
            "content": "+1 approach sounds good Marc ",
            "author": "David Smiley",
            "id": "comment-16214179"
        },
        {
            "date": "2017-10-23T13:02:49+0000",
            "content": "Sounds logical, please whip up a patch  ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16215100"
        },
        {
            "date": "2017-11-29T17:16:59+0000",
            "content": "GitHub user morissm opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/278\n\n    SOLR-11508: core.properties should be stored $solr.data.home/core_name\n\n    I ended up simply defaulting coreRootDirectory to solr.data.home, if it is defined, and solr.home.home otherwise.  \n\n    Both values seem somewhat redundant but comments in SOLR-6671 indicate that others have reasons to keep them separate. This patch simply makes Solr behave in a way that is more intuitive by default. \n\n    Those who need to revert to the old way can define coreRootDirectory in solr.xml, if they hadn't already. \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/morissm/lucene-solr jira/solr-11508\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/278.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #278\n\n\ncommit bb6795aa69b60d161e2226e1f4a9338199612edd\nAuthor: Marc-Andre Morissette <marc.morissette@gmail.com>\nDate:   2017-11-29T16:46:09Z\n\n    SOLR-11508: core.properties should be stored $solr.data.home/core_name\n\n ",
            "author": "ASF GitHub Bot",
            "id": "comment-16271146"
        },
        {
            "date": "2017-11-29T21:01:10+0000",
            "content": "Github user janhoy commented on the issue:\n\n    https://github.com/apache/lucene-solr/pull/278\n\n    Looks good to me ",
            "author": "ASF GitHub Bot",
            "id": "comment-16271534"
        },
        {
            "date": "2017-11-30T19:30:02+0000",
            "content": "I thought the entire point of solr.data.home was to separate dataDir from instanceDir, without having to specify dataDir explicitly in every core.properties file.  When using solr.data.home, the instanceDir likely only contains core.properties and the conf directory, though of course when running SolrCloud, there is no conf directory.\n\nThe core.properties file isn't data, it's config, so I do not think it should be in the solr.data.home location. ",
            "author": "Shawn Heisey",
            "id": "comment-16273245"
        },
        {
            "date": "2017-11-30T19:44:26+0000",
            "content": "There is a properties file that I believe should be in dataDir, but currently gets put into the conf directory:  dataimport.properties.  Not sure where it ends up in cloud mode, since there is no conf directory. ",
            "author": "Shawn Heisey",
            "id": "comment-16273273"
        },
        {
            "date": "2017-11-30T20:02:24+0000",
            "content": "From the comment at the PR:\nbq: Those who need to revert to the old way can define coreRootDirectory in solr.xml, if they hadn't already.\n\nWARNING: I haven't looked at the code, but this seems like a bad idea. So I may be out in left field, but....\n\nWouldn't this possibly break existing Solr installations? If so I'd far rather see the new way of doing things be optional.\n\nWhat's the advantage of adding this layer versus setting solr.solr.home?\n\nMaybe I'm totally missing the point... ",
            "author": "Erick Erickson",
            "id": "comment-16273316"
        },
        {
            "date": "2017-11-30T20:39:47+0000",
            "content": "Wouldn't this possibly break existing Solr installations?\n\nI hadn't thought of that, but I think you may be right.  If somebody has defined solr.data.home in a 7.1 install, then they upgrade Solr to a new version with this patch applied, I am pretty sure that the new version of Solr will not load any of the existing cores on its first startup, because there will not be any core.properties files for it to find.\n\nThis sounds like a really bad idea.\n\nMarc Morissette, if you're specifying a different directory for data than you are for config, why do you want to have the core.properties file in the data directory?  Do you also want the conf directory to be moved?  if not, then this makes no sense at all to me.  If you DO want the conf directory to move, then you simply need to set solr.solr.home and NOT solr.data.home, and everything moves.\n\nIn my opinion, whoever set up the docker image for Solr did it wrong.  They should have used our service installer script, which would have put the program into /opt/solr and everything else in /var/solr, with solr.solr.home set to /var/solr/data.  Instead, the docker image has the solr home in /opt/solr/server/solr ... similar to what happens when somebody manually starts solr instead of starting an installed service. ",
            "author": "Shawn Heisey",
            "id": "comment-16273380"
        },
        {
            "date": "2017-11-30T21:49:34+0000",
            "content": "I've created this bug because a lot of documentation (including the command-line help) indicates that SOLR_DATA_HOME is how you store your data outside the installation. It's true but quite misleading because a lot of what is needed to load that data remains in coreRootDirectory.\n\nCore.properties and the conf directory is not just config but metadata. If you delete a core's directory, you would expect the metadata to follow. If you download a new version of Solr and point it to your solr.data.home, you would expect Solr to be able to load your cores without a sweat. Cores are databases and their individual configuration should lie with them, not with the server (except for configsets).\n\nNow, I understand why this makes less sense to Solr veterans who have known Solr for a long time but please understand how inintuitive this feels to SolrCloud and less experimented users. \n\nMy patch does not add or remove any feature. You can still configure different values for SOLR_DATA_HOME and coreRootDirectory. I've simply changed the defaults to something I consider more intuitive (God knows Solr could use a little more of that). \n\nYes, changing the default could break some installations (those that have defined SOLR_DATA_HOME but not coreRootDirectory) but that is why I've added the release note. I feel this is acceptable as long as it makes Solr easier to use. Believe me, I'm not the first one to be tripped up by this issue. ",
            "author": "Marc Morissette",
            "id": "comment-16273530"
        },
        {
            "date": "2017-11-30T22:06:09+0000",
            "content": "I think there might be a way to minimize problems with existing Solr installations.\n\nInstead of changing coreRootDirectory's default behaviour, the vanilla solr.xml could be modified to contain \n<coreRootDirectory>${solr.data.home:}</coreRootDirectory>\n\nUsers with existing installations that have used the service installation scripts would typically remain on the old solr.xml. I'd venture that the subset of users who define SOLR_DATA_HOME and use the default SOLR_HOME and default solr.xml is probably quite small. ",
            "author": "Marc Morissette",
            "id": "comment-16273556"
        },
        {
            "date": "2017-11-30T22:15:37+0000",
            "content": "As to Erick's question, I believe:\n\n\n\tsolr.solr.home contains the server-wide config i.e. solr.xml and the configsets.\n\tcoreRootDirectory is where core discovery happens. It contains the core.properties files and conf directories. Defaults to solr.solr.home.\n\tsolr.data.home is where core data is stored. It's a directory structure that is completely parallel to the one that contains the core.properties (see Core Discovery documentation). Defaults to coreRootDirectory.\n\n\n\nThe issue here is that the doc says:\n\n  -t <dir>      Sets the solr.data.home system property, where Solr will store data (index).\n                  If not set, Solr uses solr.solr.home for config and data.\n\nThe doc suggests that the core config will be stored in the directory indicated by -t. It's currently not the case but I think it should be.\n\ncoreRootDirectory has been there for a long time because it makes sense for people to want to store their cores away from their server configuration (1). solr.data.home addresses what I think might be a less popular requirement: to store core config away from core data (2).\n\nThe problem is that since 7.0, the command line options and defaults now make it quite easy to think you're addressing need (1) when you're in reality configuring for need (2). ",
            "author": "Marc Morissette",
            "id": "comment-16273577"
        },
        {
            "date": "2017-11-30T22:45:50+0000",
            "content": "I can see where you're coming from, but I believe that we shouldn't make this change.  Consider this an official -1 vote.  I don't often use that.\n\nThe change is very much a radical shift in how Solr arranges data on the disk, and is NOT what the solr.data.home feature was designed to do.  I suspect that the number of users who upgrade without ever reading release notes is high enough that there would be a lot of reports of \"I just upgraded Solr and now my cores aren't loading\".\n\nFor new users, I am sticking with my assertion that core.properties is not part of the core data.  Note that if you change coreRootDirectory to the data home in solr.xml, that effectively relocates the entirety of all cores to the data home ... which is unnecessary, because just setting the solr home is going to do the same thing \u2013 coreRootDirectory defaults to the solr home.\n\nI would rather update the documentation to state that solr.data.home only affects dataDir, and that setting the solr home is often the more appropriate choice, because it affects the entire core.\n\nIt doesn't look like SOLR_DATA_HOME is mentioned in the stock include script, so unless we add that, we won't need any documentation comments there. ",
            "author": "Shawn Heisey",
            "id": "comment-16273602"
        },
        {
            "date": "2017-11-30T23:06:13+0000",
            "content": "I think that the code for solr.solr.home, solr.data.home, and coreRootDirectory are working according to design intent, and that the default config files like solr.xml and the include script also reflect that design intent.  It is the documentation (including the reference guide and the script's help text) that is lacking.  We should update the documentation rather than change's Solr's default behavior or the stock solr.xml. ",
            "author": "Shawn Heisey",
            "id": "comment-16273627"
        },
        {
            "date": "2017-12-01T03:16:47+0000",
            "content": "Erick Erickson and Shawn Heisey I see where you are coming from.  Perhaps Marc and I have misjudged the solution to this annoyance of working with Solr/Docker.  What if we can make coreRootDirectory easier to set, particularly for docker users \u2013 e.g. a SOLR_CORE_ROOT_DIRECTORY env var or something more concise.  That would be a very simple and I bet non-controversial issue to take up.  What do you think?  The key thing a Solr/Docker user (like me) wants is a directory where the cores live (core.properties), data for each core, and that which need not contain solr.xml.  That's coreRootDirectory? The confs are either in ZK with SolrCloud or if classic Solr then the configSet mechanism allows them to be some place other than a coreRootDir (I think). ",
            "author": "David Smiley",
            "id": "comment-16273864"
        },
        {
            "date": "2017-12-01T03:58:00+0000",
            "content": "David Smiley I was thinking the same thing. \n\nWhat should the environment variable be called? \n\n\tSOLR_CORE_HOME fits well with SOLR_HOME and SOLR_DATA_HOME\n\tSOLR_CORE_ROOT_DIRECTORY is most similar to coreRootDirectory.\n\n\n\nI think I like SOLR_CORE_HOME a little bit better.\n\nWhat should the behaviour be if coreRootDirectory is already defined in solr.xml? Should the environment variable override solr.xml or vice-versa? I guess environment variables/command line parameters usually override configuration files? ",
            "author": "Marc Morissette",
            "id": "comment-16273899"
        },
        {
            "date": "2017-12-01T04:16:52+0000",
            "content": "SOLR_CORE_HOME\n\n+1\n\nRE defaults: We should try to be consistent with other settings, like for SOLR_HOME.  The env var is examined in bin/solr to become a system property.  We can do the same for SOLR_CORE_HOME becoming something like solr.core.home.  I think if someone hard-codes a value in solr.xml then that is what's used.  If they don't, then read the system property.  This approach is also then consistent with how someone can set their data dir \u2013 by hard-coding or failing that then using a system property or failing that then the default. ",
            "author": "David Smiley",
            "id": "comment-16273917"
        },
        {
            "date": "2017-12-01T13:22:54+0000",
            "content": "As the one who committed the SOLR_DATA_HOME feature in the first place, the intent of that feature was to have one place to define which path (mount point) the index should be located, so you can keep code/config/data separate, and keep code R/O. You don't need to mess with each single core.property file or solrconfig.xml file, and it works both for standalone node and SolrCloud.\n\nCore discovery is a remnant from the past that I hope will go away completely, so +1 for deprecating it along with coreRootDirectory and get rid of it.\n\nNow, until core discovery dies, I see the two viewpoints as to whether core.properties belongs with the index or belongs in SOLR_HOME. I always thought of it as config and explicitly tested for having these in SOLR_HOME. Also since core discovery is only used in standalone mode you will have your core configs in SOLR_HOME already, and the discovery mechanisms detects the core directory by the presence of the core.properties file, so it makes sense in my head that the two are co-located. Then, if you wish to move data to a separate disk, you change SOLR_DATA_HOME and copy only the data folders to the new disk. If you want data and config together on an external location, all you need to change is SOLR_HOME, not SOLR_DATA_HOME.\n\nAs to docker, I also believe that the official docker image should use the official install_solr_service.sh script, and set a custom SOLR_DATA_HOME, see SOLR-10906 for plan for installer script to support modifying data home. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16274384"
        },
        {
            "date": "2017-12-01T14:06:03+0000",
            "content": "... keep code R/O ...\n\nIt's not enough to keep code R/O unless your situation is a predetermined static set of core names (and not SolrCloud).  Solr writes new cores, and that means a core instance dir with a core.properties.\n\n... Core discovery ...\n\nWether core discovery stays or leaves, I see that as immaterial.  Cores need to live somewhere and Solr puts them in a configurable coreRootDirectory.  Notice it doesn't have the word \"discovery\" in it.\n\nRE Docker: I already explained that a custom SOLR_DATA_HOME (to e.g. a volume) doesn't solve the docker/volume problem since Solr (in either mode) will write core.properties to the coreRootDirectory which is not in SOLR_DATA_HOME. ",
            "author": "David Smiley",
            "id": "comment-16274437"
        },
        {
            "date": "2017-12-01T16:20:49+0000",
            "content": "David Smiley, You want to get rid of core discovery?  I'm showing my age when I say that for me, the \"new\" shine of that feature still hasn't quite worn off (working since 4.4, required since 5.0). What do you want to do instead?  Core discovery is used even in cloud mode, though I think when \"zookeeper as truth\" is fully realized, SolrCloud probably won't use it any more, and I support that idea.  For standalone mode, I think it's important, unless you have something in mind to replace it that most of us can agree is better.\n\nThe absolute easiest way to move everything other than code so everything in the program directory can be read-only is to set the solr home.  Technically speaking, especially with capabilities added later, this is \"just\" the location of solr.xml, assuming that file isn't found in zookeeper, though it also gets used as a starting location for core config and data.\n\nIMHO, coreRootDirectory and solr.data.home are expert options for setting up a directory structure with more separation than what Solr does by default, and the documentation should state this.  I'm absolutely fine with having these features \u2013 they give users a lot of control over Solr's index directory structure.\n\nFor most users, the solr home is all they'll need, and I think the documentation should say that too. The expert options should NOT be in the stock config files, except perhaps as commented out examples of what the user CAN do, if they're interested in greater control and responsibility.\n\nI think that the names we've got for these options, although technically correct, are likely confusing to novices.  Here's a proposal, intended only for the master branch:\n\n\nEliminate either solr.data.home or solr.solr.home, and use whichever is left for functionality currently handled by solr.solr.home.\n\nUse solr.index.home for functionality currently handled by solr.data.home.  This would be documented as an expert option.\n\nGet rid of coreRootDirectory entirely \u2013 defining the solr home and solr.index.home effectively gets the same results, which are config and data in separate places ... and I don't see much value in separating solr.xml from the rest of the config.  For SolrCloud, it could be argued that solr.index.home is unnecessary, though some might want core.properties to be in a different place than the indexes.  That need goes away if \"zookeeper as truth\" eliminates core discovery in cloud mode.\n\nI don't think we should backport these ideas to 7.x \u2013 it's a fairly major change that would confuse users who already understand what's there, and seems better to do in a major release.\n\nI do agree that the script should support environment variables for configuring all these options, even the expert ones, and that this should happen in 7.x. ",
            "author": "Shawn Heisey",
            "id": "comment-16274581"
        },
        {
            "date": "2017-12-01T19:04:13+0000",
            "content": "Shawn Heisey, unfortunately what you propose is not really compatible with Docker. In Docker, configuration remains part of the image and users customize that configuration by either extending base images, mapping configuration files during deployment or configuring environment variables. Data must go in a separate directory, ideally one that can be empty without adverse effects. SOLR_HOME is thus not a good solution because it contains configsets and solr.xml.\n\nSOLR_DATA_HOME is a good solution for people who use Solr in standalone mode and I will readily admit my patch addresses this use case poorly. I did not completely understand this variable's purpose at first and thought it was somehow \"wrong\" but it's not. I'm not arguing any change to it anymore.\n\nIn Cloud mode however, we deal with collections. Cores are more of an implementation detail. In Cloud Mode, I'd argue individual core.properties are closer to segment descriptors in their purpose which is why it makes more sense to keep them with the rest of the data. This is why I believe coreRootDirectory is the best way to separate configuration from data in Cloud mode.\n\nTo summarize, after reading everyone's viewpoint, I believe all 3 configuration variables are necessary as they address different use cases. David Smiley and I are simply arguing for an easier way to configure coreRootDirectory. If no one sees an objection to that, I'll change the description of this bug as it's getting pretty stale and I'll find some time to work on a new patch to address that. ",
            "author": "Marc Morissette",
            "id": "comment-16274784"
        },
        {
            "date": "2017-12-01T19:54:28+0000",
            "content": "Very well written Marc! ",
            "author": "David Smiley",
            "id": "comment-16274857"
        },
        {
            "date": "2017-12-04T01:11:19+0000",
            "content": "Github user morissm closed the pull request at:\n\n    https://github.com/apache/lucene-solr/pull/278 ",
            "author": "ASF GitHub Bot",
            "id": "comment-16276189"
        },
        {
            "date": "2017-12-04T04:18:57+0000",
            "content": "+1 to the overall approach. \n\nIn the test case we should add another core creation where we specify a different dataDir ( http://lucene.apache.org/solr/guide/7_1/defining-core-properties.html#defining-core-properties-files ) and then make sure core discovery makes fine.  This use-case might not make a lot of sense ( like why specify \"solr.data.home\" and then go create a core at a different place ) but maybe there are SolrCloud users who want to add a replica at a later stage to another disk. I think the current approach doesn't break this but having a test will be nice.\n\nPS : I won't have time anytime soon to thoroughly go through it and commit it. ",
            "author": "Varun Thacker",
            "id": "comment-16276274"
        },
        {
            "date": "2017-12-04T19:42:36+0000",
            "content": "I've started work on a patch that adds the ability to set coreRootDirectory via an environment variable and command line option: https://github.com/morissm/lucene-solr/commit/95cbd1410fb4bdf97fd9ffec8737117a7931054d\n\nI'm starting to have second thoughts though. Solr already has a steep learning curve and I'm loathe to add yet another option if there is a way to avoid it.\n\nWhat if core.properties files were stored in SOLR_DATA_HOME only when Solr is in cloud mode? Unless I'm mistaken, all configuration is stored in Zookeeper in cloud mode so that is the only file that matters. As I've argued earlier, core.properties files in cloud mode are mostly an implementation detail and belong with the data. \n\nThe only issue would be how to handle the transition for people who have set SOLR_DATA_HOME in cloud mode pre 7.2. I've thought of many automated ways to handle the transition but this might not be easy to accomplish without introducing some potential unintended behaviours.\n\nComments? ",
            "author": "Marc Morissette",
            "id": "comment-16277362"
        },
        {
            "date": "2017-12-04T20:51:19+0000",
            "content": "coreRootDirectory is not a new concept and is already configurable.  You're merely making it easier (and more consistent) to configure.\n\nI think making a setting like this dependent on wether you're in SolrCloud mode or not makes this more confusing, but I understand your motivation.  I think more documentation can add guidance on the use of these.  SOLR_DATA_DIR can be a gotcha for a docker user and that advise can be in the Solr ref guide.  Future docker images can set things up correctly OOTB using a \"volume\". ",
            "author": "David Smiley",
            "id": "comment-16277474"
        },
        {
            "date": "2017-12-04T21:10:33+0000",
            "content": "Perhaps solr.data.home should be deprecated in SolrCloud mode (displaying a warning at startup)?  In 8.0 we could remove the \"-t\" convenience parameter to bin/solr, leaving it as more of an internal setting as SolrCloud is more prominent ",
            "author": "David Smiley",
            "id": "comment-16277497"
        },
        {
            "date": "2017-12-05T00:41:24+0000",
            "content": "I'm starting to get an idea of the problem that you want to solve.\n\nWhat do you think of altering my proposal in one small way:  Making sure that Solr starts even if solr.xml cannot be found.  This would allow you to point solr.solr.home to a location that's completely empty and still have Solr start.  You would then have the option of adding a solr.xml if you desired some changes there, and even adding configsets if you wanted to run Solr in standalone mode but still have common configs like SolrCloud.\n\nI did try starting Solr 7.0.0 (already had it downloaded) without a solr.xml, and it refuses to start.  I think this is not how it should behave.  Having Solr log a warning (and possibly even output a message to the console) mentioning the missing solr.xml would be a good idea.  I created a minimal solr.xml (just contained <solr/> on one line) and Solr did start, so it's not like it must have any config there.\n\nI have noticed that the stock solr.xml included with 7.x has a lot of config in it that uses various system properties, with defaults.  I have no idea whether the default settings for these things is reasonable or not.  We would need to make sure that the defaults are reasonable. ",
            "author": "Shawn Heisey",
            "id": "comment-16277818"
        },
        {
            "date": "2017-12-05T01:12:35+0000",
            "content": "Shawn Heisey This is an interesting idea but I'm not sure how this solves the problem. It would be nice if Solr could start without solr.xml but it would condemn cloud mode users to choose between sticking to the default settings or mixing their configuration and data. \n\nIt's either that or we would need to externalize every configuration parameter available in solr.xml (and there are a lot). ",
            "author": "Marc Morissette",
            "id": "comment-16277849"
        },
        {
            "date": "2017-12-05T05:25:46+0000",
            "content": "If Solr no longer requires solr.xml to start, then the solr home can be completely empty on startup, fulfilling the requirements mentioned for the data volume on Docker.\n\nIf you're in standalone mode and you create a core with the commandline, then the commandline script will copy a config to ${instancedDir}/conf (where the instanceDir is inside the solr home), and when Solr is informed about the new core with the CoreAdmin API, part of the core startup will create ${instanceDir}/data, and under that directory, Lucene will create the index directory.\n\nbut it would condemn cloud mode users to choose between sticking to the default settings or mixing their configuration and data.\n\nIn cloud mode, Solr doesn't mix config and data.  The config is not on disk at all.  It's in zookeeper.  Even solr.xml can be in zookeeper when running in cloud mode.  Which means that cloud mode can ALREADY work with no solr.xml file in the solr home, just like I am describing.\n\nIt's either that or we would need to externalize every configuration parameter available in solr.xml\n\nI agree that it would be important to make sure that a certain critical subset of solr.xml configuration parameters must be configurable with system properties, which should definitely include the various home directories, but I don't think that everything needs to be configurable that way.  Even though solr.xml would not be REQUIRED to start Solr, you'd still be able to create that file and have Solr honor its settings.\n\nSo to reiterate my modified proposal, for the master branch only:\n\n\nEliminate coreRootDirectory entirely.\n\nMake sure there are only two \"home\" properties.  One of them should be solr.index.home, and the other will either be solr.solr.home or solr.data.home.  The latter makes a lot of sense, but the former has historical value and will support older configs better.  If both solr.solr.home and solr.data.home are set in an upgraded configuration, Solr should log an error and refuse to start.\n\nSolr should be able to start up without a solr.xml file, but if one is found (either in zookeeper or the solr home) then it will be honored.\n\nWe could backport these ideas to 7.x, but the \"new\" way of configuring things would have to be explicitly enabled, probably with a system property, and the current way of configuring things would need to remain supported for all of 7.x. ",
            "author": "Shawn Heisey",
            "id": "comment-16278034"
        },
        {
            "date": "2017-12-06T16:03:06+0000",
            "content": "I still don't get it. What benefit exactly would a \"rename\" of solr.data.home to solr.index.home give? What would be the difference between current 7.2 solr.data.home and your new solr.index.home?\n\nSounds like a lot of confusion could be handled with some documentation patches (describe SOLR_DATA_HOME mainly in context of standalone mode), and code changes to not require solr.xml or zoo.cfg files in SOLR_HOME at all.\n\nThen Cloud users would separate code/config/data by installing binaries in a R/O /opt/solr, keep all config in Zookeeper, even solr.xml, and then point SOLR_HOME to some writeable location of choice (just as they have always done in all Solr versions).\n\nStandalone users can choose to separate code from config+data by having R/O binaries in /opt/solr, and choose a writeable SOLR_HOME (/var/solr/home) for core config and data, just as they have always done in all Solr versions. If they in addition want to separate data from config, they must configure SOLR_DATA_HOME  (e.g. /mnt/largeDisk/solr-data) in addition, this is because standalone users store their config locally on disk.\n\nBoth of these scenarios will work on Docker if we do not require any pre-existing files in SOLR_HOME? ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16280377"
        },
        {
            "date": "2017-12-06T17:57:17+0000",
            "content": "What benefit exactly would a \"rename\" of solr.data.home to solr.index.home give? \n\nThe idea would be to clear up confusion.  Based on how this issue started and progressed, it seems that there's some confusion about what \"data\" means.  The initial expectation seems to have been that it would cover ALL of Solr's data, including the conf directory, but in fact it only deals with the index data, so solr.index.home seems like a better name for the property.\n\nThat confusion is also the reason that I mentioned the possibility of replacing solr.solr.home with solr.data.home.  Although the idea passes a sniff test, it might cause confusion of a different kind for veterans, so it wouldn't be my first preference.\n\nCurrently we have three things that can be configured, in chronological order:  solr.solr.home, coreRootDirectory, and solr.data.home.  All of these have uses, but I think the end result is particularly confusing for novices.\n\nThe reason I think we should kill coreRootDirectory: When I take a step back and think about everything, I find little value in separating what's in the solr home (solr.xml and configsets) from the rest of the configuration data.\n\nI do find value in separating the config from the index data.  That makes it a lot easier to keep configurations in source control, and if you find yourself in a place where you want to delete all index data but leave all the cores intact, it's REALLY easy.\n\nIf I think about what the best option would be if we could start over, I come up with the notion of having two configurations \u2013 one for everything that's not read-only (the solr home), and one for index data (currently solr.data.home).\n\nAccommodating an empty data volume for the solr home location is the last wrinkle, and is solved by not requiring solr.xml.  SolrCloud can already handle an empty solr home, standalone should too. ",
            "author": "Shawn Heisey",
            "id": "comment-16280584"
        }
    ]
}