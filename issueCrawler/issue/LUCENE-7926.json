{
    "id": "LUCENE-7926",
    "title": "Unsafe type cast in flexible parser QueryNodeImpl",
    "details": {
        "labels": "",
        "priority": "Trivial",
        "resolution": "Unresolved",
        "affect_versions": "None",
        "status": "Open",
        "type": "Bug",
        "components": [],
        "fix_versions": []
    },
    "description": "org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeImplL67 casts the argument to QueryNodeImpl although the rest of the code is written against the QueryNode interface.  This blows up in cases where a non-inheriting implementation is passed (such as using a wrapper/decorator class).\n\nThe relevant setParent method does not exist on the interface, so the most backwards compatible short term fix would be to wrap the cast in a conditional to ensure it is safe (more significant changes to the hierarchy may make sense but this seems like a fairly stable module).\n\nPatch enclosed...",
    "attachments": {
        "LUCENE-7926.patch": "https://issues.apache.org/jira/secure/attachment/12881262/LUCENE-7926.patch"
    },
    "issue_links": {},
    "comments": []
}