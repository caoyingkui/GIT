{
    "id": "SOLR-12960",
    "title": "mm.autoRelax not working with cascaded qf",
    "details": {
        "type": "Bug",
        "status": "Open",
        "labels": "",
        "fix_versions": [],
        "components": [
            "query parsers"
        ],
        "priority": "Minor",
        "resolution": "Unresolved",
        "affect_versions": "6.5"
    },
    "description": "Hi,\n\nThe edismax query parser parameter mm.autoRelax won't work in a particular configuration. I consider this as a bug and therefore open this ticket.\n\nA minimalized brief about the core configuration:\n We maintain a solr core with some localized fields with respective analyzers and different stopword lists, like the schema configuration you can see below.\n\n<field name=\"title\" type=\"strings\" indexed=\"false\" stored=\"true\"/>\n<field name=\"title_de\" type=\"text_german\" indexed=\"true\" stored=\"false\"/>\n<field name=\"title_en\" type=\"text_english\" indexed=\"true\" stored=\"false\"/>\n...\n\n\nThe indexed data is processed by langID module and put into the appropriate localized field. The upper field is intended for display only. The lower two will be indexed.\n\nThe search request handler configuration is set up as followed.\n\n<!-- minimal configuration wich reproduces the problem -->\n<requestHandler name=\"/select\" class=\"solr.SearchHandler\">\n  <lst name=\"defaults\">\n    <str name=\"defType\">edismax</str>\n    <str name=\"qf\">title</str>\n    <str name=\"mm\">100%</str> <!-- all clauses must match -->\n    <bool name=\"mm.autoRelax\">true</bool>\n  </lst>\n  <lst name=\"invariants\">\n    <str name=\"f.title.qf\">\n      title_de\n      title_en\n  </lst>\n</requestHandler>\n\n\nFor convenient search for a title the qf parameter is also defined on field name title.\u00a0The field itself is not indexed (not searchable), but the query is delegated to the underlying localized fields.\n\nAs you can see the qf parameter is cascaded.\n\nqf=title >> title_de title_en\n\n\nBy this the mm.autoRelax parameter doesn't work as expected.\nIf true, the number of clauses required (minimum should match) will automatically be relaxed if a clause is removed (by e.g., stopwords filter) from some but not all qf fields.\nExample query and debug:\n\nq=introduction to measurement\n\n(\n  +(\n    DisjunctionMaxQuery(\n      (\n        (\n          langid_title_en:introduct | \n          langid_title_de:introduction\n        )\n      )\n    )\n    DisjunctionMaxQuery(\n      (\n        (\n          langid_title_de:to\n        )\n      )\n    )\n    DisjunctionMaxQuery(\n      (\n        (\n          langid_title_en:measur | \n          langid_title_de:measurement\n        )\n      )\n    )\n  )~3\n)\n\n\nAlthough one stopword is detected and removed from query the overall number of required clauses remains 3.\n\nIf the localized fields are defined directly in the qf parameter everything will be fine:\n\nq=introduction to measurement\nqf=title_de title_en\n\n(\n  +(\n    DisjunctionMaxQuery(\n      (\n        langid_title_en:introduct | \n        langid_title_de:introduction\n      )\n    )\n    DisjunctionMaxQuery(\n      (\n        langid_title_de:to\n      )\n    ) \n    DisjunctionMaxQuery(\n      (\n        langid_title_en:measur | \n        langid_title_de:measurement\n      )\n    )\n  )~2\n)\n\n\nTo avoid the problem by not cascading qf might be no big deal. But if many localized fields exist and should be searched by default the configuration overhead increases massively. We have 6 languages and 12 localized fields. This leads to 72 fields to be defined in qf.\n\n<str name=\"qf\">\n  <!-- title : localized field -->\n  title_de^4\n  title_en^4\n  title_fr^4\n  title_ja^4\n  title_cjk^4\n  title_txt^4\n  <!-- summary : localized field -->\n  ...\n</str>\n\n\nIf someone has any questions, feel free to comment. I will reply as soon as possible.\n\n\n\tRegards",
    "attachments": {},
    "issue_links": {},
    "comments": []
}