{
    "id": "SOLR-3362",
    "title": "FacetComponent throws NPE when doing distributed query",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "When executing a query against a field in my index I am getting the following exception\n\nThe query I am executing is as follows:\n\nhttp://host:port/solr/collection1/select?q=bob&facet=true&facet.field=organization\n\ndebugging the FacetComponent line 489 sfc is null\n\nSEVERE: java.lang.NullPointerException\n       at org.apache.solr.handler.component.FacetComponent.refineFacets(FacetComponent.java:489)\n       at org.apache.solr.handler.component.FacetComponent.handleResponses(FacetComponent.java:278)\n       at org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:307)\n       at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:129)\n       at org.apache.solr.core.SolrCore.execute(SolrCore.java:1550)\n       at org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:442)\n       at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:263)\n       at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1337)\n       at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:484)\n       at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)\n       at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:524)\n       at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:233)\n       at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1065)\n       at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:413)\n       at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:192)\n       at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:999)\n       at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)\n       at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:250)\n       at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:149)\n       at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:111)\n       at org.eclipse.jetty.server.Server.handle(Server.java:351)\n       at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:454)\n       at org.eclipse.jetty.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:47)\n       at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:890)\n       at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:944)\n       at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:634)\n       at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:230)\n       at org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:66)\n       at org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:254)\n       at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:599)\n       at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:534)\n       at java.lang.Thread.run(Thread.java:662)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-13255639",
            "date": "2012-04-17T15:25:25+0000",
            "content": "So it seems like we're getting back a term we didn't ask for.\nOne way this could happen is if the encoding is messed up - StrUtils.join and splitSmart are used for this, and I don't see an obvious error there.\n\nAt this point perhaps we should add a check at line 489 and log terms that come back that we don't ask for. "
        },
        {
            "author": "Jamie Johnson",
            "id": "comment-13255700",
            "date": "2012-04-17T16:28:55+0000",
            "content": "Essentially doing something like this?\n\n\nif(sfc == null){\n  //log message\n  continue;\n}\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13255746",
            "date": "2012-04-17T17:27:54+0000",
            "content": "Right.  I just checked something in for FacetComponent to log the term and other info. "
        },
        {
            "author": "Jamie Johnson",
            "id": "comment-13255907",
            "date": "2012-04-17T20:24:26+0000",
            "content": "This certainly made the error I was having go away, should I be worried about a lower level issue that this change masks? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13255915",
            "date": "2012-04-17T20:42:44+0000",
            "content": "This certainly made the error I was having go away, should I be worried about a lower level issue that this change masks?\n\nYes, I'd be worried.  Do you see any \"Unexpected term returned\" errors in the logs? "
        },
        {
            "author": "Jamie Johnson",
            "id": "comment-13256147",
            "date": "2012-04-18T02:21:56+0000",
            "content": "I'm trying to avoid pasting the entire response.....I do see the errors in the log though.  I see \n\n\nUnexpected term returned for facet refining. key=se_organizationname_umvs term='Test \n\n\n\n? \n\n\n\nDaily News'\n\n\n\nin the request I see the following\n\nTest+%0A%0A%0A%0A%C2%A0+%0A%0A%0A%Daily+News\n\n\n\nDebugging the key doing (int)name.charAt says the is ASCII character 63  instead of ASCII character 160.  It looks like the encoding on the name is wrong.\n\nI am really pretty lost as to where this could be happening but this looks like it could be the issue.  Any thoughts where this could be happening? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13256505",
            "date": "2012-04-18T12:47:46+0000",
            "content": "I assume you're not using the jetty bundled with Solr?\nIf not, let's check that first by running exampledocs/test_utf8.sh "
        },
        {
            "author": "Jamie Johnson",
            "id": "comment-13256541",
            "date": "2012-04-18T13:23:45+0000",
            "content": "I am using the jetty bundled with Solr, absolutely no changes at all in that regard.\n\nWhat I am having difficulty doing is duplicating this issue on a very small set of data, I can only duplicate with the actual data right now.  If I run a very simple test and add some of the extended ASCII characters it appears in the facets properly, but with the actual data I am having issues, not sure why. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13256565",
            "date": "2012-04-18T13:53:01+0000",
            "content": "OK, then the next most likely possibility would seem to be the client sending the sub-request.\nI just managed to reproduce this problem with this URL:\nhttp://localhost:8983/solr/select?wt=python&indent=true&q=*:*&facet=true&facet.query=\n{!term%20f=id}\nwx%C2%A0yz&shards=localhost:8983/solr\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13256570",
            "date": "2012-04-18T14:01:11+0000",
            "content": "Oh yuck... I just used netcat to listen on port 8985 and changed the shards parameter to that to see just what was being sent.\nWhat a waste of space!  And that is where the charset is getting hacked...\n\n\n/opt/code/lusolr/solr/example/exampledocs$ nc -l 8985\nPOST /solr/select HTTP/1.1\nUser-Agent: Solr[org.apache.solr.client.solrj.impl.HttpSolrServer] 1.0\nContent-Charset: UTF-8\nAccept-Charset: UTF-8\nContent-Length: 1217\nContent-Type: multipart/form-data; boundary=eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nHost: localhost:8985\nConnection: Keep-Alive\n\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"rows\"\n\n10\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"facet\"\n\ntrue\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"facet.query\"\n\n{!term f=id}wx?yz\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"q\"\n\n*:*\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"start\"\n\n0\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"fsv\"\n\ntrue\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"fl\"\n\nid,score\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"distrib\"\n\nfalse\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"isShard\"\n\ntrue\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"shard.url\"\n\nlocalhost:8985/solr\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"NOW\"\n\n1334757315277\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"wt\"\n\njavabin\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"version\"\n\n2\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3--\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13256571",
            "date": "2012-04-18T14:01:14+0000",
            "content": "Oh yuck... I just used netcat to listen on port 8985 and changed the shards parameter to that to see just what was being sent.\nWhat a waste of space!  And that is where the charset is getting hacked...\n\n\n/opt/code/lusolr/solr/example/exampledocs$ nc -l 8985\nPOST /solr/select HTTP/1.1\nUser-Agent: Solr[org.apache.solr.client.solrj.impl.HttpSolrServer] 1.0\nContent-Charset: UTF-8\nAccept-Charset: UTF-8\nContent-Length: 1217\nContent-Type: multipart/form-data; boundary=eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nHost: localhost:8985\nConnection: Keep-Alive\n\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"rows\"\n\n10\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"facet\"\n\ntrue\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"facet.query\"\n\n{!term f=id}wx?yz\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"q\"\n\n*:*\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"start\"\n\n0\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"fsv\"\n\ntrue\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"fl\"\n\nid,score\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"distrib\"\n\nfalse\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"isShard\"\n\ntrue\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"shard.url\"\n\nlocalhost:8985/solr\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"NOW\"\n\n1334757315277\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"wt\"\n\njavabin\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3\nContent-Disposition: form-data; name=\"version\"\n\n2\n--eADQ-PDh-HqmlsJi5PyvlmPclUWpz3--\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13256592",
            "date": "2012-04-18T14:10:23+0000",
            "content": "OK, I just verified that this is not a problem with older trunk builds, so this was an issue introduced by the new http client 4 (upgraded on 3/29).\nBefore that, we get a normal looking single-part post with correct encoding. "
        },
        {
            "author": "Jamie Johnson",
            "id": "comment-13256598",
            "date": "2012-04-18T14:22:33+0000",
            "content": "I don't claim to understand what specifically the issue is but I am glad that we were able to duplicate it.\n\nWe had never seen this issue on previous builds so it makes sense that this issue was introduced as part of that switch.  Again I really appreciate you digging into this. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13256600",
            "date": "2012-04-18T14:30:10+0000",
            "content": "Just linking since both may be closed at once. "
        },
        {
            "author": "Sami Siren",
            "id": "comment-13256652",
            "date": "2012-04-18T15:42:31+0000",
            "content": "OK, I just verified that this is not a problem with older trunk builds, so this was an issue introduced by the new http client 4 (upgraded on 3/29). Before that, we get a normal looking single-part post with correct encoding.\n\nWhat is the action the solrj client is doing here? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13257122",
            "date": "2012-04-19T00:53:07+0000",
            "content": "Sami checked in a fix today... things should be fixed, but please reopen if not. "
        },
        {
            "author": "Jamie Johnson",
            "id": "comment-13257173",
            "date": "2012-04-19T02:32:09+0000",
            "content": "Was this fix in commit 1327635?  I just want to make sure i am looking at the appropriate place. "
        },
        {
            "author": "Jamie Johnson",
            "id": "comment-13257192",
            "date": "2012-04-19T03:26:21+0000",
            "content": "I ran the code from trunk and the issue is resolved.  Again thanks! "
        }
    ]
}