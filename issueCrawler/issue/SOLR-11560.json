{
    "id": "SOLR-11560",
    "title": "RestoreCmd resolves incorrect property from DocCollection",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "Backup/Restore"
        ],
        "type": "Bug",
        "fix_versions": [
            "7.2"
        ],
        "affect_versions": "7.0,                                            7.0.1,                                            7.1",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "the \"private int getInt(ZkNodeProps message, String propertyName, Integer default1, int default2)\" helper method ignore the propertyName parameter",
    "attachments": {
        "SOLR-11560.patch": "https://issues.apache.org/jira/secure/attachment/12894315/SOLR-11560.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-27T14:56:10+0000",
            "content": "Looks like it's a regression in 7.0 - SOLR-10233 \n\nToo bad tests didn't catch it. We should add more checks in AbstractCloudBackupRestoreTestCase#testBackupAndRestore . We get DocCollection restoreCollection = client.getZkStateReader().getClusterState().getCollection(restoreCollectionName); but we don't check what are the replica types for this collection.\n ",
            "author": "Varun Thacker",
            "id": "comment-16222502"
        },
        {
            "date": "2017-10-27T14:57:15+0000",
            "content": "Thanks Peter for the patch! Please let me know if you would like to make the test check for replica types as well ",
            "author": "Varun Thacker",
            "id": "comment-16222506"
        },
        {
            "date": "2017-10-31T14:02:50+0000",
            "content": "I'm trying to modify the above test to fail without my patch, but as the incorrectly read properties are only used for internal validation within RestoreCmd, it's hard to come up with a set of values that would make the issue happen. ",
            "author": "Peter Szantai-Kis",
            "id": "comment-16226835"
        },
        {
            "date": "2017-10-31T18:26:49+0000",
            "content": "Did you run into this issue when you tried restoring a collection and specified the \"replicationFactor\" params ?\n\nPatch with a test case which would fail without the code fix.\n\nWe can create two followup issues:\n1. Support specifying \"nrtReplicas\" / \"pullReplicas\" while restoring a collection\n2. I noticed that the restore znode is \"clusterstate.json\" instead of \"/collections/collection_name/state.json\" . This is a bug  ",
            "author": "Varun Thacker",
            "id": "comment-16227272"
        },
        {
            "date": "2017-10-31T18:43:30+0000",
            "content": "Commit 07652a528957cdbac011773468174176b9b5b165 in lucene-solr's branch refs/heads/master from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=07652a5 ]\n\nSOLR-11560: Specifying the replicationFactor parameter while restoring a collection would lead to extra tlog\nand pull replicas being created ",
            "author": "ASF subversion and git services",
            "id": "comment-16227305"
        },
        {
            "date": "2017-10-31T18:56:29+0000",
            "content": "Commit f609b1a2aa40b21b2335d3c44fe13b4a3e7747f1 in lucene-solr's branch refs/heads/branch_7x from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f609b1a ]\n\nSOLR-11560: Specifying the replicationFactor parameter while restoring a collection would lead to extra tlog\nand pull replicas being created\n\n(cherry picked from commit 07652a5) ",
            "author": "ASF subversion and git services",
            "id": "comment-16227327"
        },
        {
            "date": "2017-10-31T18:58:27+0000",
            "content": "Thanks Peter ! ",
            "author": "Varun Thacker",
            "id": "comment-16227330"
        }
    ]
}