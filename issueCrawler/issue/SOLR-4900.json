{
    "id": "SOLR-4900",
    "title": "Leader election deadlock after restarting leader in 4.2.1",
    "details": {
        "affect_versions": "4.2",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Copying post from http://lucene.472066.n3.nabble.com/Leader-election-deadlock-after-restarting-leader-in-4-2-1-td4067988.html\n\nSOLR 4.2.1, tomcat 6.0.35, CentOS 6.2 (2.6.32-220.4.1.el6.x86_64 #1 SMP), java 6u27 64 bit \n6 nodes, 2 shards, 3 replicas each.  Names changed to r1s2 (replica1 - shard 2), r2s2, and r3s2 for each replica in shard 2. \n\nWhat we see:\n\n\tUnder production load, we restart a leader (r1s2), and observe in the cloud admin\nthat the old leader is in state \"Down\" and no new leader is ever elected. \n\tThe system will stay like this until we stop the old leader (or cause a ZK timeout...see below).\n\n\n\nPlease note: the leader is killed, then kill -9'd 5 seconds later, before restarting.  We have since changed this. \n\nDigging into the logs on the old leader (r1s2 = replica1-shard 2):\n\n\tThe old leader restarted at 5:23:29 PM, but appears to be stuck in SolrDispatchFilter.init() \u2013 (See recovery at bottom).\n\tIt doesn't want to become leader, possibly due to the unclean shutdown.\nMay 28, 2013 5:24:42 PM org.apache.solr.update.PeerSync handleVersions \nINFO: PeerSync: core=browse url=http://r1s2:8080/solr  Our versions are too old. ourHighThreshold=1436325665147191297 otherLowThreshold=1436325775374548992 \n\tIt then tries to recover, but cannot, because there is no leader.\nMay 28, 2013 5:24:43 PM org.apache.solr.common.SolrException log \nSEVERE: Error while trying to recover. core=browse:org.apache.solr.common.SolrException: No registered leader was found, collection:browse slice:shard2 \n\tMeanwhile, it appears that blocking in init(), prevents the http-8080 handler from starting (See recovery at bottom).\n\n\n\nDigging into the other replicas (r2s2):\n\n\tFor some reason, the old leader (r1s2) remains in the list of replicas that r2s2 attempts to sync to.\nMay 28, 2013 5:23:42 PM org.apache.solr.update.PeerSync sync \nINFO: PeerSync: core=browse url=http://r2s2:8080/solr START replicas=http://r1s2:8080/solr/browse/, http://r3s2:8080/solr/browse/ nUpdates=100 \n\tThis apparently fails (30 second timeout), possibly due to http-8080 handler not being started on r1s2.\nMay 28, 2013 5:24:12 PM org.apache.solr.update.PeerSync handleResponse \nWARNING: PeerSync: core=browse url=http://r2s2:8080/solr  exception talking to http://r1s2:8080/solr/browse/, failed \norg.apache.solr.client.solrj.SolrServerException: Timeout occured while waiting response from server at: http://r1s2:8080/solr/browse\n\n\n\nAt this point, the cluster will remain indefinitely without a leader, if nothing else changes.\n\nBut in this particular instance, we took some stack and heap dumps from r1s2, which paused java \nlong enough to cause a zookeeper timeout on the old leader (r1s2): \nMay 28, 2013 5:33:26 PM org.apache.zookeeper.ClientCnxn$SendThread run \nINFO: Client session timed out, have not heard from server in 38226ms for sessionid 0x23d28e0f584005d, closing socket connection and attempting reconnect \n\nThen, one of the replicas (r3s2) finally stopped trying to sync to r1s2 and succeeded in becoming leader: \nMay 28, 2013 5:33:34 PM org.apache.solr.update.PeerSync sync \nINFO: PeerSync: core=browse url=http://r3s2:8080/solr START replicas=http://r2s2:8080/solr/browse/ nUpdates=100 \nMay 28, 2013 5:33:34 PM org.apache.solr.update.PeerSync handleVersions \nINFO: PeerSync: core=browse url=http://r3s2:8080/solr  Received 100 versions from r2s2:8080/solr/browse/ \nMay 28, 2013 5:33:34 PM org.apache.solr.update.PeerSync handleVersions \nINFO: PeerSync: core=browse url=http://r3s2:8080/solr  Our versions are newer. ourLowThreshold=1436325775374548992 otherHigh=1436325775805513730 \nMay 28, 2013 5:33:34 PM org.apache.solr.update.PeerSync sync \nINFO: PeerSync: core=browse url=http://r3s2:8080/solr DONE. sync succeeded \n\nNow that we have a leader, r1s2 can succeed in recovery and finish SolrDispatchFilter.init(), \napparently allowing the http-8080 handler to start (r1s2). \nMay 28, 2013 5:34:49 PM org.apache.solr.cloud.RecoveryStrategy replay \nINFO: No replay needed. core=browse \nMay 28, 2013 5:34:49 PM org.apache.solr.cloud.RecoveryStrategy doRecovery \nINFO: Replication Recovery was successful - registering as Active. core=browse \nMay 28, 2013 5:34:49 PM org.apache.solr.cloud.ZkController publish \nINFO: publishing core=browse state=active \nMay 28, 2013 5:34:49 PM org.apache.solr.cloud.ZkController publish \nINFO: numShards not found on descriptor - reading it from system property \nMay 28, 2013 5:34:49 PM org.apache.solr.cloud.RecoveryStrategy doRecovery \nINFO: Finished recovery process. core=browse \nMay 28, 2013 5:34:49 PM org.apache.solr.cloud.RecoveryStrategy run \nINFO: Starting recovery process.  core=browse recoveringAfterStartup=false \nMay 28, 2013 5:34:49 PM org.apache.solr.common.cloud.ZkStateReader updateClusterState \nINFO: Updating cloud state from ZooKeeper... \nMay 28, 2013 5:34:49 PM org.apache.solr.servlet.SolrDispatchFilter init \nINFO: user.dir=/ \nMay 28, 2013 5:34:49 PM org.apache.solr.servlet.SolrDispatchFilter init \nINFO: SolrDispatchFilter.init() done\nMay 28, 2013 5:34:49 PM org.apache.solr.cloud.ZkController publish \nINFO: publishing core=browse state=recovering \nMay 28, 2013 5:34:49 PM org.apache.solr.cloud.ZkController publish \nINFO: numShards not found on descriptor - reading it from system property \nMay 28, 2013 5:34:49 PM org.apache.solr.client.solrj.impl.HttpClientUtil createClient \nINFO: Creating new http client, config:maxConnections=128&maxConnectionsPerHost=32&followRedirects=false \nMay 28, 2013 5:34:49 PM org.apache.catalina.startup.HostConfig deployDirectory \nINFO: Deploying web application directory ROOT \nMay 28, 2013 5:34:49 PM org.apache.coyote.http11.Http11AprProtocol start \nINFO: Starting Coyote HTTP/1.1 on http-8080  #<---------------------- http-8080 started!\nMay 28, 2013 5:34:49 PM org.apache.coyote.ajp.AjpAprProtocol start \nINFO: Starting Coyote AJP/1.3 on ajp-8009 \nMay 28, 2013 5:34:49 PM org.apache.catalina.startup.Catalina start \nINFO: Server startup in 668324 ms #<------------------------------ 668 sec = 11 minutes to start Catalina.\n\nOur Workaround:\n\n\tWe changed our script to allow 15 seconds before kill -9.\n\tAlso, we no longer do a restart.  We just stop the leader and wait for a new leader.  This\nstill results in a few \"No registered leader was found\" exceptions, but at least the duration is short.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Frank J Kelly",
            "id": "comment-15167649",
            "date": "2016-02-25T18:59:12+0000",
            "content": "Hit this also. Now we just stop the service first, and wait for a leader election before restart.\n\nSurely there is some way to resolve this \"easily\"?\nIf Solr says it is not the leader, ZK should elect a new leader? "
        }
    ]
}