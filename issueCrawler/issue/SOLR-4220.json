{
    "id": "SOLR-4220",
    "title": "Move RequestHandler for global Information out of core-scope",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "Admin UI"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Duplicate"
    },
    "description": "Okay, the title perhaps wins no price right now .. but i don't have an better idea, i'm sorry - if you do, don't hesitate to update it!\n\nWhat it's all about: SOLR-3633 was created because at the moment it's not possible to use the Admin UI w/o at least one core. The reason for that is, that some (as you might think) \"global\" Information - which the UI shows on the top-level (which doesn't require you selecting a core) - must be fetched from a core-related url, because that's how the solr routing works right now.\n\nHoss and I talked about that at the ApacheCon and he mentioned that this should not be that biggest change although we need to update the tests and ensure that the thing is still working, of course.\n\nI checked the UI for having a list of Functions and their related urls:\n\n\tDashboard\n\t\n\t\tsolr/$first_core/admin/system?wt=json\n\t\n\t\n\n\n\n\n\tLogging\n\t\n\t\t/solr/$first_core/admin/logging?wt=json&since=N\n\t\n\t\n\n\n\n\n\tLogging / Level\n\t\n\t\t/solr/$first_core/admin/logging?wt=json\n\t\n\t\n\n\n\n\n\tJava Properties\n\t\n\t\t/solr/$first_core/admin/properties?wt=json\n\t\n\t\n\n\n\n\n\tThreads\n\t\n\t\t/solr/$first_core/admin/threads?wt=json\n\t\n\t\n\n\n\nFor the sake of simplicity, i'd suggest that we're just moving the complete handler (regarding their url) on level up to something like /solr/admin/.. like we have it already for the zookeeper thing?\n\nRegarding the contained content, i think we could (or perhaps should?) stick with the given information/content - only the Dashboard is not using all of the provided values, but just for the fact that we have no usage for prettified RAM-Usage numbers ...\n\nLet me know if the Issue contains all required informations, otherwise i'll try to update it according to your questions",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-13536331",
            "date": "2012-12-19T19:23:48+0000",
            "content": "+1 - Im very interested in this as well. CoreAdminHandler should not be configured and routed under core - it should be at the CoreContainer level.\n\nThis would be a huge improvement. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13537411",
            "date": "2012-12-20T21:49:54+0000",
            "content": "What i had in mind at apachecon was to refactor all the \"non-core specific\" logic that the UI currently used into helper methods which could continue to be called from the existing RequestHandlers (so existing clinets can continue to use them the same way, and they can continue to be used with custom response writers and configured defaults/invariants) but also be called from the CoreAdminHandler via the STATUS action so that the UI could make a single call to get all the info about the list of cores and non-core specific data.\n\nI hadn't really thought about hte logging stuff \u2013 but everything else would definitely make sense in hte context of asking CoreAdminHandler for status STATUS.\n\nCoreAdminHandler should not be configured and routed under core - it should be at the CoreContainer level.\n\nI don't understand this comment ... CoreAdminHandler is already configured in solr.xml and managed directly by the CoreContainer, it's not core specific.\n\nThis is just a question of accessing hte other \"admin\" type handlers that return data that's got nothing to do with a single SolrCore (ie: system properties, thread dumps, etc...) "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13539144",
            "date": "2012-12-24T01:11:34+0000",
            "content": "but also be called from the CoreAdminHandler via the STATUS action so that the UI could make a single call to get all the info about the list of cores and non-core specific data.\n\ni just gave it a quick thought, but ... the first thing that came to my mind was .. if we have it all at one request, it must be maintained via a global state in the UI :?\n\nif we can (and from your description, it sounds like we do) i'd like to stay with separate requests for those pages - but of course, more possibilites are normally better than less  "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13539145",
            "date": "2012-12-24T01:15:10+0000",
            "content": "ah .. hm, but perhaps the first idea is not always the best. at the start of the UI, we're already fetching global core-state information from /admin/cores so, if we include the information there .. we can avoid single requests for the others pages some lights show up here\n\nso maybe we'll have a need for some \"reload data\" buttons on the page, to offer the possibility to refresh the data, but that should be okay. "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13710172",
            "date": "2013-07-16T20:15:51+0000",
            "content": "i'm going to close this as duplicate, since it is not only related .. it indeed does describe the same requirement. "
        }
    ]
}