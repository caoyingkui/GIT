{
    "id": "LUCENE-6658",
    "title": "IndexUpgrader doesn't upgrade an index if it has zero segments",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "4.10.4,                                            5.2.1",
        "components": [
            "core/index"
        ],
        "labels": "",
        "fix_versions": [
            "4.10.5",
            "5.3",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "IndexUpgrader uses merges to do its job. Therefore, if you use it to upgrade an index with no segments, it will do nothing - it won't even update the version numbers in the segments file, meaning that later versions of Lucene will fail to open the index, despite the fact that you \"upgraded\" it.\n\nThe suggested workaround when this was raised on the mailing list in January seems to be to use filesystem magic to look at the files, figure out whether there are any segments, and write a new empty index if there are none.\n\nThis sounds easy, but there are probably traps. For instance, there might be files in the directory which don't really belong to the index. Earlier versions of Lucene used to have a FilenameFilter which was usable to distinguish one from the other, but that seems to have disappeared, making it less obvious how to do this.\n\nThis issue is presumed to exist in 3.x as well, I just haven't encountered it yet because the only empty indices I have hit have been later versions.",
    "attachments": {
        "LUCENE-6658.patch": "https://issues.apache.org/jira/secure/attachment/12743689/LUCENE-6658.patch",
        "empty.4.10.4.zip": "https://issues.apache.org/jira/secure/attachment/12743699/empty.4.10.4.zip"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14614633",
            "author": "Uwe Schindler",
            "date": "2015-07-06T07:06:24+0000",
            "content": "This is well known problem. I thin there is already an issue open! "
        },
        {
            "id": "comment-14614638",
            "author": "Uwe Schindler",
            "date": "2015-07-06T07:10:23+0000",
            "content": "This sounds easy, but there are probably traps. For instance, there might be files in the directory which don't really belong to the index. Earlier versions of Lucene used to have a FilenameFilter which was usable to distinguish one from the other, but that seems to have disappeared, making it less obvious how to do this.\n\nBecause you want to upgrade the index, you can also open it with a DirectoryReader and check maxDoc() for 0. Opening a DirectoryReader should be easy if you have the JAR files at hand - you need them anyways for upgrading.\n\nWe can add similar behaviour to the IndexUpgrader in 5.x, but not in older versions! "
        },
        {
            "id": "comment-14614644",
            "author": "Uwe Schindler",
            "date": "2015-07-06T07:28:28+0000",
            "content": "The suggested workaround when this was raised on the mailing list in January seems to be to use filesystem magic to look at the files, figure out whether there are any segments, and write a new empty index if there are none.\n\nI think IndexUpgrader should simply force a commit (maybe also add some commit metadata that this is an \"upgraded\" index). A forced commit for an empty index will definitely write the new files. The problem with IndexUpgrader is that it does not see any segement, so it will force no merge and finally does not commit on closing IndexWriter. "
        },
        {
            "id": "comment-14614714",
            "author": "Uwe Schindler",
            "date": "2015-07-06T09:01:10+0000",
            "content": "Here is a patch to make IndexUpgrader force a commit (I had to use a trick: supplying empty commit metadata to provoke a change).\n\nI have not yet added a test (I would need to create some older \"empty\" index...).\n\nThis patch could also be applied to 4.10.5, but I don't think we get a 3.6 anymore. Trejkaz - can you try this out and see if it helps. Maybe apply the patch also to older versions.\n\nMichael McCandless: Do you think this is good? Or is there a better solution to enforce a commit, so all metadata of empty index is rewritten? "
        },
        {
            "id": "comment-14614724",
            "author": "Uwe Schindler",
            "date": "2015-07-06T09:05:51+0000",
            "content": "Just as unrelated recommandation: We should move the IndexUpgrader and its merge policy to backward-codecs.jar. Makes no sense to have this in core. Should I open new issue about that? "
        },
        {
            "id": "comment-14614778",
            "author": "Uwe Schindler",
            "date": "2015-07-06T09:34:41+0000",
            "content": "I added an additional check to TestBackwardsCompatibility that our index also has latest version in commit point after upgrade.\n\nI will now create an empty 4.10 index and place it there to verify the update (like the single segment one). I will not create one for all old versions (I don't think this is needed). "
        },
        {
            "id": "comment-14614803",
            "author": "Uwe Schindler",
            "date": "2015-07-06T10:01:59+0000",
            "content": "I added a test to verify that it works. This patch applies to 5.x. "
        },
        {
            "id": "comment-14615027",
            "author": "Michael McCandless",
            "date": "2015-07-06T13:42:40+0000",
            "content": "Michael McCandless: Do you think this is good?\n\nI think calling IW.setCommitData is a good trick to force a commit, except we should be careful not to overwrite any prior commit data in this index? "
        },
        {
            "id": "comment-14615036",
            "author": "Uwe Schindler",
            "date": "2015-07-06T13:48:27+0000",
            "content": "Previous commit data will be removed in any case (see code that removes old commit points). Or is commit data preserved while opening IndexWriter and reused when committing to a new commit point? If this is the case, I can use get/set maybe? "
        },
        {
            "id": "comment-14615055",
            "author": "Uwe Schindler",
            "date": "2015-07-06T14:04:40+0000",
            "content": "I changed the fake userdata call to:\n\nw.setCommitData(w.getCommitData()); // fake change to enforce a commit (e.g. if index has no segments)\n\n "
        },
        {
            "id": "comment-14615058",
            "author": "Michael McCandless",
            "date": "2015-07-06T14:05:43+0000",
            "content": "Or is commit data preserved while opening IndexWriter and reused when committing to a new commit point? If this is the case, I can use get/set maybe?\n\nYeah, it will be preserved, carried over from the commit point that IW had opened (the latest commit point in this case).\n\n+1 to use get/set. "
        },
        {
            "id": "comment-14615059",
            "author": "Michael McCandless",
            "date": "2015-07-06T14:06:06+0000",
            "content": "I changed the fake userdata call to:\n\n+1, thanks Uwe Schindler "
        },
        {
            "id": "comment-14615091",
            "author": "ASF subversion and git services",
            "date": "2015-07-06T14:33:02+0000",
            "content": "Commit 1689411 from Uwe Schindler in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1689411 ]\n\nLUCENE-6658: Fix IndexUpgrader to also upgrade indexes without any segments "
        },
        {
            "id": "comment-14615123",
            "author": "ASF subversion and git services",
            "date": "2015-07-06T14:50:12+0000",
            "content": "Commit 1689420 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1689420 ]\n\nMerged revision(s) 1689411 from lucene/dev/branches/branch_5x:\nLUCENE-6658: Fix IndexUpgrader to also upgrade indexes without any segments "
        },
        {
            "id": "comment-14615160",
            "author": "ASF subversion and git services",
            "date": "2015-07-06T15:22:16+0000",
            "content": "Commit 1689424 from Uwe Schindler in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1689424 ]\n\nMerged revision(s) 1689411 from lucene/dev/branches/branch_5x:\nLUCENE-6658: Fix IndexUpgrader to also upgrade indexes without any segments "
        },
        {
            "id": "comment-14615162",
            "author": "Uwe Schindler",
            "date": "2015-07-06T15:23:28+0000",
            "content": "I also backported to 4.10.5 (was a bit harder, because we had no Version in the SegmentInfos). To check that the commit was actually applied, I check the generation there. "
        },
        {
            "id": "comment-14615175",
            "author": "Uwe Schindler",
            "date": "2015-07-06T15:29:37+0000",
            "content": "Trejkaz: This will not be backported to 3.6 (and also release of 4.10.5 is very unlikely). If you want to \"ensure\" than index was upgraded, I'd suggest to use the UpgradeIndexMergePolicy directly and then more or less copy the code from IndexUpgrader (so it opens IndexWriter, sets the special merge policy, forceMerge(1), setCommitUserData(getCommitUserData()), and finally commit()). Alternatively patch 3.6.x. "
        },
        {
            "id": "comment-14616111",
            "author": "Trejkaz",
            "date": "2015-07-07T03:13:22+0000",
            "content": "This works when applied to my v4 and v5 here as well. (At least for my inadequate collection of test indices... since I started generating them today.)\n\nI tried to backport into my copy of v3.6, but IndexWriter.setCommitUserData doesn't exist and commit(Map) doesn't force a commit, even with a non-empty map. Or if it does, it doesn't update the index format. "
        },
        {
            "id": "comment-14616117",
            "author": "Trejkaz",
            "date": "2015-07-07T03:30:32+0000",
            "content": "What does work: making a forceCommit() method which does nothing other than increment changeCount and call commit(). "
        },
        {
            "id": "comment-14713240",
            "author": "Shalin Shekhar Mangar",
            "date": "2015-08-26T13:06:11+0000",
            "content": "Bulk close for 5.3.0 release "
        }
    ]
}