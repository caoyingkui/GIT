{
    "id": "LUCENE-6939",
    "title": "BlendedInfixSuggester to support exponential reciprocal BlenderType",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "5.4",
        "components": [
            "modules/spellchecker"
        ],
        "labels": "",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "priority": "Minor",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "The orignal BlendedInfixSuggester introduced in LUCENE-5354 has support for:\n\n\tBlenderType.POSITION_LINEAR and\n\tBlenderType.POSITION_RECIPROCAL .\n\n\n\nThese are used to score documents based on the position of the matched token i.e the closer is the matched term to the beginning, the higher score you get.\n\nIn some use cases, we need a more aggressive scoring based on the position.\nThat's where the exponential reciprocal comes into play \ni.e \ncoef = 1/Math.pow(position+1, exponent)\nwhere the exponent is a configurable variable.",
    "attachments": {
        "LUCENE-6939.patch": "https://issues.apache.org/jira/secure/attachment/12778927/LUCENE-6939.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15062371",
            "author": "Arcadius Ahouansou",
            "date": "2015-12-17T17:19:49+0000",
            "content": "\nHello Michael McCandless\nWould you mind having a look at this initial patch when you have the chance?\n\nI am keen to making changes if needed especially regarding the backward compatibility part of the BlenderType.\n\nThank you very much. "
        },
        {
            "id": "comment-15066820",
            "author": "Michael McCandless",
            "date": "2015-12-21T18:08:55+0000",
            "content": "Thanks Arcadius Ahouansou, the patch looks good, except this is an experimental API so we don't need back-compat here (don't need to add LINEAR and RECIPROCAL.  Also, instead of adding a new constructor, can you just add the new parameter to the existing \"expert\" constructor? "
        },
        {
            "id": "comment-15067181",
            "author": "Arcadius Ahouansou",
            "date": "2015-12-21T22:37:08+0000",
            "content": "Thank you very much Michael McCandless for your comments.\n\nI have now \n\n\tremoved the enums (added for backward compatibility) and\n\tre-used the existing constructor instead.\n\n\n\nThank you very much. "
        },
        {
            "id": "comment-15067872",
            "author": "Michael McCandless",
            "date": "2015-12-22T09:49:54+0000",
            "content": "Thanks Arcadius Ahouansou, patch looks good!  I'll commit soon ... but looks like svn is down at the moment. "
        },
        {
            "id": "comment-15067916",
            "author": "ASF subversion and git services",
            "date": "2015-12-22T10:26:40+0000",
            "content": "Commit 1721330 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1721330 ]\n\nLUCENE-6939: add exponential reciprocal scoring mode to BlendedInfixSuggester "
        },
        {
            "id": "comment-15067917",
            "author": "ASF subversion and git services",
            "date": "2015-12-22T10:27:38+0000",
            "content": "Commit 1721331 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1721331 ]\n\nLUCENE-6939: add exponential reciprocal scoring mode to BlendedInfixSuggester "
        },
        {
            "id": "comment-15067918",
            "author": "Michael McCandless",
            "date": "2015-12-22T10:27:38+0000",
            "content": "Thanks Arcadius Ahouansou! "
        },
        {
            "id": "comment-15068054",
            "author": "Arcadius Ahouansou",
            "date": "2015-12-22T12:27:28+0000",
            "content": "Thank you very much Michael McCandless for your help.\nAs part of this change, we would need to update the BlenderType section of the wiki at\nhttps://cwiki.apache.org/confluence/display/solr/Suggester\n\n\n\tchange linear and reciprocal to position_linear and position_reciprocal respectively, and\n\talso add a section for position_exponential_reciprocal and the exponent config\n\n\n\nAgain, thank you very much Michael McCandless for your help. "
        },
        {
            "id": "comment-15281172",
            "author": "Erick Erickson",
            "date": "2016-05-12T03:56:07+0000",
            "content": "Done, but this is all a mystery to me so if I messed it up please let me know. "
        },
        {
            "id": "comment-15283437",
            "author": "Arcadius Ahouansou",
            "date": "2016-05-14T05:47:07+0000",
            "content": "Hello  Erick Erickson\n\nI can see you have updated the wiki with linear>position_linear and reciprocal>position_reciprocal \n\nThank you very much for that  Erick Erickson \n\nWe need a new bullet point for the new blenderType, just below position_reciprocal at the same level: \n\n\nposition_exponential_reciprocal:  weightFieldValue/Math.pow(1+position, exponent). This is a more aggressive and more configurable version of the position_reciprocal with a configurable variable exponent. When exponent==1.0, then both position_exponential_reciprocal and position_reciprocal are equivalent and lead to the same result. \n\n\nThen, we will need a new bullet point outside of the BlenderType and just above numFactor:\n\nexponent: an optional configuration variable for the position_exponential_reciprocal blenderType. It is a decimal number used to control how fast the score will grow or decrease. Its default value 2.0\n\nMany thanks "
        }
    ]
}