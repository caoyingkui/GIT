{
    "id": "LUCENE-7064",
    "title": "Make MultiPhraseQuery immutable",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [
            "core/search"
        ],
        "labels": "",
        "fix_versions": [
            "6.0",
            "6.1",
            "7.0"
        ],
        "priority": "Minor",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "See LUCENE-6531\nMutable queries are an issue for automatic filter caching since modifying a query after it has been put into the cache will corrupt the cache. We should make all queries immutable (up to the boost) to avoid this issue.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15177806",
            "author": "ASF GitHub Bot",
            "date": "2016-03-03T13:27:46+0000",
            "content": "GitHub user LucVL opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/19\n\n    LUCENE-7064: Make MultiPhraseQuery immutable\n\n    This PR is based at the highest commit point common to master, branch_6x and branch_6_0 so it should be easy to merge with any or all of them.\n\n    My original mail to the dev list doesn't seem to get through, so I repeat it here:\n\n    > While checking how to migrate my custom components from lucene/solr 5.1 to 6.x I stumbled upon the fact that oal.search.MultiPhraseQuery is not immutable like most other implementations (see e.g.: https://issues.apache.org/jira/browse/LUCENE-6531)\n    > \n    > Since it is part of the public API I would suggest splitting it in an immutable class and a builder like was done for most other Queries before releasing an official 6.x version.\n    > \n    > I did a quick scan through all derived classes of Query and I compiled the following list (ignoring sources in test or contrib folders)\n    > Some of them are already marked as experimental (but should perhaps receive the \"official\" @lucene.experimental tag ?)\n    > For some it's possibly not an issue since they should never end up in a filter cache (like MoreLikeThisQuery ?), but then a comment specifying the exception to the rule should perhaps be added.\n    > \n    > I'll probably already have a go at the MultiPhraseQuery case shortly and create a JIRA issue with a PR for it.\n    > \n    > Luc Vanlerberghe\n    > \n    > lucene/search:\n    > - org.apache.lucene.search.MultiPhraseQuery\n    > \n    > lucene/queries:\n    > - org.apache.lucene.queries.CommonTermsQuery\n    > - org.apache.lucene.queries.CustomScoreQuery (marked as @lucene.experimental)\n    > - org.apache.lucene.queries.mlt.MoreLikeThisQuery\n    > \n    > lucene/suggest:\n    > - org.apache.lucene.search.suggest.document.ContextQuery (marked as @lucene.experimental)\n    > \n    > lucene/facet:\n    > - org.apache.lucene.facet.DrillDownQuery (marked as @lucene.experimental)\n    > \n    > solr/core:\n    > - org.apache.solr.search.ExtendedQueryBase\n    >   Several derived classes, among which:\n    >   - org.apache.solr.query.FilterQuery\n    >   - org.apache.solr.query.SolrRangeQuery (marked as @lucene.experimental)\n    >   - org.apache.solr.search.RankQuery (marked in comment as experimental, but not its derived classes)\n    >   - org.apache.solr.search.WrappedQuery\n    > - org.apache.solr.search.join.GraphQuery (marked as @lucene.experimental)\n    > - org.apache.solr.search.SolrConstantScoreQuery (marked in comment as experimental, but not the derived FunctionRangeQuery)\n    > \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/LucVL/lucene-solr lucene-7064\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/19.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #19\n\n\ncommit 223eaa2bcf74ea3b363abfb161b3771b09f48281\nAuthor: Luc Vanlerberghe <luc.vanlerberghe@bvdinfo.com>\nDate:   2016-03-03T10:52:14Z\n\n    LUCENE-7064: Split MultiPhraseQuery into an immutable class and a Builder\n\ncommit 1b4c0ed77fe8b22c7a04b2879b34514b0ac05d0d\nAuthor: Luc Vanlerberghe <luc.vanlerberghe@bvdinfo.com>\nDate:   2016-03-03T13:02:51Z\n\n    LUCENE-7064: Updated tests\n\n "
        },
        {
            "id": "comment-15177856",
            "author": "Luc Vanlerberghe",
            "date": "2016-03-03T14:18:33+0000",
            "content": "I just realized I pass the arrays from the builder to the query as is without copying them, so any modification to the builder modifies the query as well.\nI will update the PR in a moment... "
        },
        {
            "id": "comment-15177947",
            "author": "Luc Vanlerberghe",
            "date": "2016-03-03T15:24:19+0000",
            "content": "I updated the PR so modifying a Builder no longer affects already created queries\nI aligned the signatures of getTermArrays and getPositions with the ones in PhraseQuery.\n\nFrom Adrien Grand:\n\nActually I think returning a list is better: with arrays you need to perform a deep copy if you want to make sure that the user cannot change the internal state of the query. We could keep arrays internally and call Collections.unmodifiableList(Arrays.asList(termArrays)) when returning the terms to the user?\n\nFor the getTermArrays case that would involve creating wrappers of wrappers since it returns a two-dimensional array.\n\nFor now I just added a \"Do not modify!\" in the doc comment... "
        },
        {
            "id": "comment-15179568",
            "author": "Adrien Grand",
            "date": "2016-03-04T08:47:25+0000",
            "content": "OK, I agree consistency with PhraseQuery is good. "
        },
        {
            "id": "comment-15179693",
            "author": "ASF subversion and git services",
            "date": "2016-03-04T10:30:20+0000",
            "content": "Commit 40aab73a4c997410fc2c1b8b919e5a30e49b1ee5 in lucene-solr's branch refs/heads/master from Luc Vanlerberghe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=40aab73 ]\n\nLUCENE-7064: Split MultiPhraseQuery into an immutable class and a Builder\n\nThis closes #19 "
        },
        {
            "id": "comment-15179695",
            "author": "ASF GitHub Bot",
            "date": "2016-03-04T10:31:13+0000",
            "content": "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/lucene-solr/pull/19 "
        },
        {
            "id": "comment-15179720",
            "author": "ASF subversion and git services",
            "date": "2016-03-04T10:44:57+0000",
            "content": "Commit a78ef1584234a0a831f294f8ac2ebf9e8a7026fb in lucene-solr's branch refs/heads/master from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a78ef15 ]\n\nLUCENE-7064: Add attribution. "
        },
        {
            "id": "comment-15179864",
            "author": "ASF subversion and git services",
            "date": "2016-03-04T13:22:58+0000",
            "content": "Commit 1407077092f3b6d50fbecf07eda3f739f135455d in lucene-solr's branch refs/heads/branch_6_0 from Luc Vanlerberghe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1407077 ]\n\nLUCENE-7064: Split MultiPhraseQuery into an immutable class and a Builder\n\nThis closes #19 "
        },
        {
            "id": "comment-15179865",
            "author": "ASF subversion and git services",
            "date": "2016-03-04T13:22:59+0000",
            "content": "Commit 948a388778d56cfa1c9fbd3c9ed44f93136bf943 in lucene-solr's branch refs/heads/branch_6x from Luc Vanlerberghe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=948a388 ]\n\nLUCENE-7064: Split MultiPhraseQuery into an immutable class and a Builder\n\nThis closes #19 "
        },
        {
            "id": "comment-15179867",
            "author": "Adrien Grand",
            "date": "2016-03-04T13:24:54+0000",
            "content": "Pushed. Thanks Luc! "
        },
        {
            "id": "comment-15279240",
            "author": "Hoss Man",
            "date": "2016-05-10T23:41:07+0000",
            "content": "Manually correcting fixVersion per Step #S6 of LUCENE-7271 "
        }
    ]
}