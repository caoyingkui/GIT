{
    "id": "LUCENE-5140",
    "title": "Slowdown of the span queries caused by LUCENE-4946",
    "details": {
        "components": [],
        "fix_versions": [
            "4.5",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Minor",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Alan Woodward noticed that span queries have been slower since LUCENE-4946 got committed.\n\nhttp://people.apache.org/~mikemccand/lucenebench/SpanNear.html",
    "attachments": {
        "LUCENE-5140.patch": "https://issues.apache.org/jira/secure/attachment/12594412/LUCENE-5140.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-07-26T15:49:26+0000",
            "content": "I think it is due to some overhead of our TimSorter implementation for small arrays. Here is a patch that replaces TimSorter with InPlaceMergeSorter, which should perform better on very small arrays but still has optimizations for sorted content, eg. merging two sorted slices is a no-op if the highest element from the 1st slice is lower than the least element from the 2nd slice. luceneutil seems to be happy with this patch (left is trunk, right is with patch applied):\n\n             LowSpanNear      143.65      (4.5%)      157.75      (3.9%)    9.8% (   1% -   19%)\n            HighSpanNear        5.47      (4.4%)        6.20      (9.7%)   13.4% (   0% -   28%)\n             MedSpanNear       94.27      (3.7%)      107.51      (3.7%)   14.1% (   6% -   22%)\n\n ",
            "author": "Adrien Grand",
            "id": "comment-13720902"
        },
        {
            "date": "2013-07-26T20:21:18+0000",
            "content": "Looks good!  There was also the same issue with PhraseQuery, which uses timSort() in PhraseWeight#scorer (although it was a much smaller slowdown). ",
            "author": "Alan Woodward",
            "id": "comment-13721168"
        },
        {
            "date": "2013-07-28T17:12:17+0000",
            "content": "I just tried to patch PhraseWeight but this doesn't make the query faster according to lucenebench. I think it is normal given that that sort() is only called when creating the scorer and not for every nextDoc() / advance() so it shouldn't have an impact on the query throughput unless it is actually very very slow? I also tried to run the benchmark under a profilter to see where time is spent for phrase queries: the time spent in PhraseWeight.scorer is very very small compared to scoring, and TimSorter.sort isn't even its bottleneck (the bottleneck is the initialization of postingsFreqs).\n\n\n ",
            "author": "Adrien Grand",
            "id": "comment-13722000"
        },
        {
            "date": "2013-07-30T16:07:08+0000",
            "content": "I will commit the patch as-is soon and have a look at the lucenebench reports in the next days if there is no objection. ",
            "author": "Adrien Grand",
            "id": "comment-13724003"
        },
        {
            "date": "2013-07-31T07:51:43+0000",
            "content": "Commit 1508757 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1508757 ]\n\nLUCENE-5140: Fixed performance regression of span queries caused by LUCENE-4946. ",
            "author": "ASF subversion and git services",
            "id": "comment-13724986"
        },
        {
            "date": "2013-07-31T08:01:12+0000",
            "content": "Commit 1508759 from Adrien Grand in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1508759 ]\n\nLUCENE-5140: Fixed performance regression of span queries. ",
            "author": "ASF subversion and git services",
            "id": "comment-13724995"
        },
        {
            "date": "2013-07-31T08:04:49+0000",
            "content": "Committed. I will have a look at lucenebench in the next few days. ",
            "author": "Adrien Grand",
            "id": "comment-13724999"
        },
        {
            "date": "2013-07-31T08:08:29+0000",
            "content": "Thanks Adrien! ",
            "author": "Alan Woodward",
            "id": "comment-13725002"
        },
        {
            "date": "2013-08-02T19:55:48+0000",
            "content": "Looks like this fix did indeed recover the lost perf in SpanNearQuery and exact PhraseQuery, and then some: http://people.apache.org/~mikemccand/lucenebench/SpanNear.html\n\nThanks! ",
            "author": "Michael McCandless",
            "id": "comment-13728020"
        },
        {
            "date": "2013-08-09T17:47:40+0000",
            "content": "I'm still trying to understand how this change could have an impact on exact phrase queries. Do exact phrase queries rely on NearSpansOrdered somehow? I can't find the path between them in the code base... ",
            "author": "Adrien Grand",
            "id": "comment-13735052"
        },
        {
            "date": "2013-08-09T18:06:24+0000",
            "content": "hotspot ",
            "author": "Robert Muir",
            "id": "comment-13735083"
        },
        {
            "date": "2013-08-09T18:13:45+0000",
            "content": "It is scary than unrelated changes can trigger a 5% degration or improvement of the performance of a query! ",
            "author": "Adrien Grand",
            "id": "comment-13735092"
        },
        {
            "date": "2013-10-05T10:18:57+0000",
            "content": "4.5 release -> bulk close ",
            "author": "Adrien Grand",
            "id": "comment-13787051"
        }
    ]
}