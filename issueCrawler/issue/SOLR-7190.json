{
    "id": "SOLR-7190",
    "title": "Remove unused UninvertedField",
    "details": {
        "components": [],
        "type": "Task",
        "labels": "",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Not A Problem",
        "priority": "Minor"
    },
    "description": "I was surprised to find that UninvertedField is no longer used in Solr. The only references to UninvertedField is from the fieldValueCache inside SolrIndexSearcher and that itself is not used anywhere in SolrIndexSearcher except for initialization and regeneration. I can't trace when Solr stopped using this class but in any case, we should remove it.\n\nIn a related note, Lucene's DocTermOrds has a copy of the class level javadocs of UninvertedField (which extends DocTermOrds). This was done in in LUCENE-5666.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-03-04T23:13:17+0000",
            "author": "Yonik Seeley",
            "content": "That is surprising - there's nothing in CHANGES that I can see.  How did this happen and where was the decision made?\nHas any benchmarking been done against the code it was replaced with? ",
            "id": "comment-14347753"
        },
        {
            "date": "2015-03-05T06:00:17+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Yeah, I found this while chasing a faceting related performance problem. I looked up the history of the changes and I found that the facet.method=fc was changed from:\n\nif (sf.hasDocValues()) {\n            counts = DocValuesFacets.getCounts(searcher, base, field, offset,limit, mincount, missing, sort, prefix);\n          } else if (multiToken || TrieField.getMainValuePrefix(ft) != null) {\n            UnInvertedField uif = UnInvertedField.getUnInvertedField(field, searcher);\n            counts = uif.getCounts(searcher, base, offset, limit, mincount,missing,sort,prefix);\n          } else {\n            counts = getFieldCacheCounts(searcher, base, field, offset,limit, mincount, missing, sort, prefix);\n          }\n\n\n\nto:\n\n          counts = DocValuesFacets.getCounts(searcher, base, field, offset,limit, mincount, missing, sort, prefix);\n\n\n\nin LUCENE-5666. Actually DocValuesFacets was introduced in SOLR-4490 but then it was enabled only for doc value fields and later LUCENE-5666 switched to using it always and removed the use of UninvertedField. ",
            "id": "comment-14348204"
        },
        {
            "date": "2015-08-25T14:03:52+0000",
            "author": "Jamie Johnson",
            "content": "While I understand that DocValuesFacets is more performant at query time I am wondering if there is an option to support both methods given that the current implementation pushes the caches deep down into lucene without any real option for extension.  The UnInvertedField allowed me to defer the creation of this cache until query time and then ultimately control what exactly went into the cache by specifying a custom cache implementation I was able to create a separate cache entry for different access levels.   ",
            "id": "comment-14711312"
        },
        {
            "date": "2015-09-25T08:31:30+0000",
            "author": "Alessandro Benedetti",
            "content": "According to Shalin comment, what will happen now if a request has the facet.method=fc and we don't have docValues for the field of interest for faceting calculations ?\n\nHave I confused the message ? DocValues should not be mandatory right ?\nIs now another way to access the algorithm without docValues ? ",
            "id": "comment-14907797"
        },
        {
            "date": "2015-09-25T09:03:18+0000",
            "author": "Mikhail Khludnev",
            "content": "According to Shalin comment, what will happen now if a request has the facet.method=fc and we don't have docValues for the field of interest for faceting calculations ?\n\nUninvertingReader builds docValues-like data structure in heap ",
            "id": "comment-14907832"
        },
        {
            "date": "2017-06-20T14:23:38+0000",
            "author": "David Smiley",
            "content": "The title, \"Remove unused UninvertedField\" is no longer accurate \u2013 it is used by the JSON Facet API FacetFieldProcessorByArrayUIF on some issue or another.  This is in turn used by SimpleFacets (classic/standard Solr faceting) via SOLR-8466 when facet.method=uif (which only happens when you explicitly ask for it like this). So I'm closing this issue. ",
            "id": "comment-16055841"
        }
    ]
}