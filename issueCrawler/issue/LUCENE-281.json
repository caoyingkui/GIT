{
    "id": "LUCENE-281",
    "title": "Sort Order in Term Dictionary",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/index"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "1.4",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "Terms order in term dictionary does not use a Comparator or Collation object to \nsort terms. So, when using IndexReader.terms(), an unsorted term list is \nobtained.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2004-09-26T00:18:50+0000",
            "content": "I cannot reproduce that. Please attach a short but self-contained piece of \nsource code that demonstrates the problem.  ",
            "author": "Daniel Naber",
            "id": "comment-12321920"
        },
        {
            "date": "2004-09-28T04:56:31+0000",
            "content": "The terms are sorted lexicographically, as by String.compareTo():\n\nhttp://java.sun.com/j2se/1.4.2/docs/api/java/lang/String.html#compareTo(java.lang.String)\n\nThe prefix compression used in the index requires lexicographic ordering.  To\nsupport a user-provided Collator or Comparator would also require serializing\nthe Collator or Comparator with the dictionary.  Such implementations would also\nprobably be slow. ",
            "author": "cutting@apache.org",
            "id": "comment-12321921"
        }
    ]
}