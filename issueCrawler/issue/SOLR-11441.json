{
    "id": "SOLR-11441",
    "title": "windows shell splits args on \"=\" so we should consider updating our docs to always quote args like -Dfoo=bar or improve bin/solr.cmd to account for this",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "documentation",
            "scripts and tools"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "confusing exchange with a user on freenode#solr led to this discovery...\n\n\n14:07 < sara_:#solr> New question: bin/solr start -e techproducts -Dsolr.ltr.enabled=true\n14:07 < sara_:#solr> gave me invalid command-line option:true\n14:07 < sara_:#solr> anyone knows why?\n...\n15:02 < sara_:#solr> i have 6.6.1 @elyograg\n15:03 < sara_:#solr> mine is a windows 10 machine\n...\n15:28 < sara_:#solr> @elyograg i just downloaded solr-7.0.0 and ran bin/solr start -e techproducts -Dsolr.ltr.enabled=true\n15:28 < sara_:#solr> it still gave me invalid command-line\n...\n15:29 <@hoss:#solr> sara_: the only thing i can think of is that windows 10 is splitting your command line on '=' ? ... can you try \n                    quoting the entire command line arg so the script gets the entire -Dsolr.ltr.enabled=true ? (not sure how to quote \n                    strings in the windows command shell -- i would assume \"-Dsolr.ltr.enabled=true\"\n15:32 <@hoss:#solr> sigh ... yes, aparently windows things \"=\" is a shell delimiter: https://ss64.com/nt/syntax-esc.html\n15:33 <@hoss:#solr> s/shell delimiter/parameter delimiter in shell commands/\n15:33 < sara_:#solr> you are genius!\n15:34 < sara_:#solr> you and elyograg. you guys are fantastic. Saving me from looking at the cmd script or shell script....\n15:34 <@hoss:#solr> sara_: do i have your permission to copy/paste this exchange into our bug tracker as a note about updating our docs \n                    (and maybe making the solr.cmd smart enough to handle this) ?\n15:45 < sara_:#solr> sure of course",
    "attachments": {
        "SOLR-11441.patch": "https://issues.apache.org/jira/secure/attachment/12890744/SOLR-11441.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-05T22:54:20+0000",
            "content": "hyperlink version of the URL i mentioned in IRC...\nhttps://ss64.com/nt/syntax-esc.html\n\n\nDelimiters\n\n    Delimiters separate one parameter from the next - they split the command line up into words.\n\n    Parameters are most often separated by spaces, but any of the following are also valid delimiters:\n\n    Comma (,)\n    Semicolon (;)\n    Equals (=)\n    Space ( )\n    Tab (     ) \n\nThis is relevant for examples like this in the docs...\n\nhttps://lucene.apache.org/solr/guide/7_0/learning-to-rank.html#quick-start-with-ltr\n\nTo enable the plugins, please specify the solr.ltr.enabled JVM System Property when running the example:\n\nbin/solr start -e techproducts -Dsolr.ltr.enabled=true ",
            "author": "Hoss Man",
            "id": "comment-16193875"
        },
        {
            "date": "2017-10-05T23:02:19+0000",
            "content": "This must be some shell script thing in our CMD line parser. If you call plain java.exe or ant.bat you don't need quotes. I do that every day. See e.g. logs of Jenkins on policeman. No quotes when calling ant, which is a batch file on Windows.\n\nSo I think it's a bug in our script. ",
            "author": "Uwe Schindler",
            "id": "comment-16193882"
        },
        {
            "date": "2017-10-05T23:23:41+0000",
            "content": "according to that (totally non-official) URL, it's the automatic behavior inside of of any CMD script.\n\nI'm not sure if comparing bin/solr.cmd to ant.bat is really an apples to apples comparison though \u2013 in this example we're expecting -Dsolr.ltr.enabled=true to be passed to solr.cmd as a single String so that when we're looping over the args we can see it starts with \"-D\" and we know we should pass the whole thing as is to jetty when running java.exe.\n\nIn the ant.bat case, if you passed -Dsolr.ltr.enabled=true to ant, the ant.bat file is (probably?) designed around the assumption that it's getting key=val pairs \u2013 which it's fine with because it's just going to put all of them in the arg list that it passes to java.exe when running the Launcher class.\n\n...\n\nyeah \u2013 Launcher.java/Main.java in ant seem to be explicitly designed with the assumption that the OS might throw away the \"=\" and split the args...\n\nhttps://github.com/apache/ant/blob/master/src/main/org/apache/tools/ant/Main.java#L551 ",
            "author": "Hoss Man",
            "id": "comment-16193899"
        },
        {
            "date": "2017-10-06T07:33:39+0000",
            "content": "I don't know what that page says, but on my machine(s) the '=' is definitely not split when passed to a raw Java process.\n\npublic class Test {\n  public static void main(String[] args) {\n    for (int i = 0; i < args.length; i++) {\n      System.out.println(i + \": \" + args[i]);\n    }\n  }\n}\n\n\n\nWindows 10, with latest patches.\n\nWhen using cmd:\n\nC:\\_tmp>java -cp . Test -Dfoo=bar\n0: -Dfoo=bar\n\n\n\nWhen using powershell:\n\nPS C:\\_tmp> java -cp . Test -Dfoo=bar\n0: -Dfoo=bar\n\n ",
            "author": "Dawid Weiss",
            "id": "comment-16194248"
        },
        {
            "date": "2017-10-06T07:41:46+0000",
            "content": "I successfully ran the command mentioned in the issue \u2013 no problems (see below). \n\n\nC:\\_tmp\\solr-7.0.0>bin\\solr start -e techproducts -Dsolr.ltr.enabled=true\nCreating Solr home directory C:\\_tmp\\solr-7.0.0\\example\\techproducts\\solr\n\nStarting up Solr on port 8983 using command:\n\"C:\\_tmp\\solr-7.0.0\\bin\\solr.cmd\" start -p 8983 -s \"C:\\_tmp\\solr-7.0.0\\example\\techproducts\\solr\" -Dsolr.ltr.enabled=true\n\nWaiting up to 30 to see Solr running on port 8983\n\nCopying configuration to new core instance directory:\nC:\\_tmp\\solr-7.0.0\\example\\techproducts\\solr\\techproducts\n\nCreating new core 'techproducts' using command:\nhttp://localhost:8983/solr/admin/cores?action=CREATE&name=techproducts&instanceDir=techproducts\n\nStarted Solr server on port 8983. Happy searching!\n{\n  \"responseHeader\":{\n    \"status\":0,\n    \"QTime\":10199},\n  \"core\":\"techproducts\"}\n\n\nIndexing tech product example docs from C:\\_tmp\\solr-7.0.0\\example\\exampledocs\nSimplePostTool version 5.0.0\nPosting files to [base] url http://localhost:8983/solr/techproducts/update using content-type application/xml...\nPOSTing file gb18030-example.xml to [base]\nPOSTing file hd.xml to [base]\nPOSTing file ipod_other.xml to [base]\nPOSTing file ipod_video.xml to [base]\nPOSTing file manufacturers.xml to [base]\nPOSTing file mem.xml to [base]\nPOSTing file money.xml to [base]\nPOSTing file monitor.xml to [base]\nPOSTing file monitor2.xml to [base]\nPOSTing file mp500.xml to [base]\nPOSTing file sd500.xml to [base]\nPOSTing file solr.xml to [base]\nPOSTing file utf8-example.xml to [base]\nPOSTing file vidcard.xml to [base]\n14 files indexed.\nCOMMITting Solr index changes to http://localhost:8983/solr/techproducts/update...\nTime spent: 0:00:00.545\n\nSolr techproducts example launched successfully. Direct your Web browser to http://localhost:8983/solr to visit the Solr Admin UI\n\n\n\nThe user has a slash in her solr/bin; this won't find solr command when executed in cmd; I think she had powershell instead and indeed the script fails then:\n\n\nPS C:\\_tmp\\solr-7.0.0> bin/solr start -e techproducts -Dsolr.ltr.enabled=true\n\nInvalid command-line option: true\n\n\n ",
            "author": "Dawid Weiss",
            "id": "comment-16194254"
        },
        {
            "date": "2017-10-06T07:45:54+0000",
            "content": "So, to summarize \u2013 it's a problem somewhere in how the solr.cmd parses/ processes command line in powershell. Powershell alone accepts -Dfoo=bar just fine and passes it to Java as a single argument. ",
            "author": "Dawid Weiss",
            "id": "comment-16194260"
        },
        {
            "date": "2017-10-06T07:53:39+0000",
            "content": "Reading the IRC chat the problem seems much easier. On Windows the forward slash is a separator. So to execute a command you need to use backslash after \"bin\".\n\nAlso the user does not say which shell she uses. ",
            "author": "Uwe Schindler",
            "id": "comment-16194265"
        },
        {
            "date": "2017-10-06T13:57:22+0000",
            "content": "I was able to reproduce the issue the same way that Dawid described: I can reproduce in Powershell, but not in \"standard\" Command Prompt.\n\nThis does seem like something that would be nice to fix outright, but in case no one has the time to get to it soon, I've attached a doc-patch which updates the relevant bin/solr commands in the ref-guide to use quoting, as well as including a short blurb about the use of double-quotes in the main page for the bin/solr scripts.\n\nIt'd be better to actually fix the issue, but failing that, this patch might be useful. ",
            "author": "Jason Gerlowski",
            "id": "comment-16194613"
        }
    ]
}