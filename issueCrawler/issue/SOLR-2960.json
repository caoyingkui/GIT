{
    "id": "SOLR-2960",
    "title": "XPathEntityProcessor does not clear nulls from empty multi-valued fields",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.7"
        ],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "I can't confidently say I completeley understand all that these classes so boldy tackle (that is, XPathEntityProcessor and XPathRecordReader) , but there may be someone who does. Nonetheless, I think I've got some or most of this right, and more likely there are more someones like that. So, I won't qualify everything I say with a maybe \u2013 lets this be the refactoring of those. \n\nWhenever mapping an XML file into a Solr Index, within the XPathRecordReader, (used by the XPathEntityProcessor within the DataImportHandler), if (A) a field is perceived to be null and is multivalued, it is pushed a value of null (on top of any other values it previously had). Otherwise (B) for multivalued fields, any found value is pushed onto its existing list of values, and the field is marked as found within the frame (a.k.a record). \n\nIn general, when the end-tag of a record is seen, (C) the XPathRecordReader clears all of the field's values which have been marked as found, as tidiness is a value and they are supposedly no longer useful. \nHowever, suppose that for a given record and multivalued field, a value is never found (though it may have been found for other fields in the record), only (A) will have occurred, never will (B) have occurred, the field will never have been marked as found, and thus (C) never will have occurred for the field. \n\nSo, the field will remain, with its list of nulls. \nThis list of nulls will grow until either the last record or a non-null value is seen. \nAnd so, (1) an out-of-memory error may occur, given sufficiently many records and a mortal computer. \nMoreover, (2), a transformer cannot reliably depend on the number of nulls in the field (and this information cannot be guaranteed to be determined by some other value). \n\nI will try to provide more information, if this seems an issue and if there doesn't seem to be an answer. \nAt this point, if I understand the problem correctly, it seems the answer is to 'mark' those null fields, considering 'null' and added value.",
    "attachments": {
        "SOLR-2960.patch": "https://issues.apache.org/jira/secure/attachment/12506838/SOLR-2960.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Michael Watts",
            "id": "comment-13166791",
            "date": "2011-12-10T04:35:41+0000",
            "content": "for branch_3x "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13237073",
            "date": "2012-03-23T20:31:40+0000",
            "content": "Bulk changing fixVersion 3.6 to 4.0 for any open issues that are unassigned and have not been updated since March 19.\n\nEmail spam suppressed for this bulk edit; search for hoss20120323nofix36 to identify all issues edited "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13412171",
            "date": "2012-07-11T22:26:13+0000",
            "content": "bulk fixing the version info for 4.0-ALPHA and 4.0 all affected issues have \"hoss20120711-bulk-40-change\" in comment "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13429800",
            "date": "2012-08-07T03:43:09+0000",
            "content": "rmuir20120906-bulk-40-change "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13451072",
            "date": "2012-09-07T22:27:57+0000",
            "content": "removing fixVersion=4.0 since there is no evidence that anyone is currently working on this issue.  (this can certainly be revisited if volunteers step forward)\n\nbut also assigning to James Dyer to triage (in spite of it's age, the patch still applies cleanly, but does not have any sort of test) "
        },
        {
            "author": "James Dyer",
            "id": "comment-13855801",
            "date": "2013-12-23T17:55:13+0000",
            "content": "Here is an update of Michael Watts patch for current Trunk and also a unit test.  I plan to commit this soon. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13856349",
            "date": "2013-12-24T15:14:01+0000",
            "content": "Commit 1553285 from James Dyer in branch 'dev/trunk'\n[ https://svn.apache.org/r1553285 ]\n\nSOLR-2960: XPathEntityProcessor was adding spurious nulls to multi-valued fields "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13856395",
            "date": "2013-12-24T17:10:02+0000",
            "content": "Commit 1553305 from James Dyer in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1553305 ]\n\nSOLR-2960: XPathEntityProcessor was adding spurious nulls to multi-valued fields "
        },
        {
            "author": "James Dyer",
            "id": "comment-13857741",
            "date": "2013-12-27T21:18:04+0000",
            "content": "Thanks, Michael.  I apologize it took so long to commit this! "
        }
    ]
}