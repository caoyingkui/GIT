{
    "id": "SOLR-5416",
    "title": "CollapsingQParserPlugin breaks Tag/Exclude Faceting",
    "details": {
        "affect_versions": "4.6",
        "status": "Resolved",
        "fix_versions": [
            "4.6.1",
            "6.0"
        ],
        "components": [
            "search"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Trying to use CollapsingQParserPlugin with facet tagging throws an exception. \n\n\n ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s}\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(test_ti)\");\n    params.add(\"fq\",\"{!tag=test_ti}test_ti:5\");\n    params.add(\"facet\",\"true\");\n    params.add(\"facet.field\",\"{!ex=test_ti}test_ti\");\n    assertQ(req(params), \"*[count(//doc)=1]\", \"//doc[./int[@name='test_ti']='5']\");",
    "attachments": {
        "SolrIndexSearcher.java": "https://issues.apache.org/jira/secure/attachment/12618285/SolrIndexSearcher.java",
        "CollapsingQParserPlugin.java": "https://issues.apache.org/jira/secure/attachment/12618284/CollapsingQParserPlugin.java",
        "CollapseQParserPluginPatch-solr-4.5.1.patch": "https://issues.apache.org/jira/secure/attachment/12618665/CollapseQParserPluginPatch-solr-4.5.1.patch",
        "TestCollapseQParserPlugin.java": "https://issues.apache.org/jira/secure/attachment/12618313/TestCollapseQParserPlugin.java",
        "SOLR-5416.patch": "https://issues.apache.org/jira/secure/attachment/12612037/SOLR-5416.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "David Boychuck",
            "id": "comment-13813187",
            "date": "2013-11-04T20:02:42+0000",
            "content": "This patch assumes that only tagged documents have a ord > -1 and scorer = null in the collect() method\n\nIf there is a better way to identify tagged documents in this collect() method then it should probably be used in place of ord > -1 && scorer == null "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13813315",
            "date": "2013-11-04T21:38:41+0000",
            "content": "This fix uncovers/creates a new bug:\n\nError during auto-warming of key:org.apache.solr.search.QueryResultKey@48dfd36d:java.lang.ArrayIndexOutOfBoundsException: 0\n\tat org.apache.solr.search.CollapsingQParserPlugin$CollapsingScoreCollector.setNextReader(CollapsingQParserPlugin.java:401)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:618)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:297)\n\tat org.apache.solr.search.SolrIndexSearcher.getDocListAndSetNC(SolrIndexSearcher.java:1636)\n\tat org.apache.solr.search.SolrIndexSearcher.getDocListC(SolrIndexSearcher.java:1363)\n\tat org.apache.solr.search.SolrIndexSearcher.access$000(SolrIndexSearcher.java:118)\n\tat org.apache.solr.search.SolrIndexSearcher$3.regenerateItem(SolrIndexSearcher.java:465)\n\tat org.apache.solr.search.LRUCache.warm(LRUCache.java:188)\n\tat org.apache.solr.search.SolrIndexSearcher.warm(SolrIndexSearcher.java:2051)\n\tat org.apache.solr.core.SolrCore$4.call(SolrCore.java:1631)\n\tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:166)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\n\tat java.lang.Thread.run(Thread.java:722) "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13813325",
            "date": "2013-11-04T21:43:03+0000",
            "content": "Adding a fix for setNextReader function when contexts.length = 0 "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-13818202",
            "date": "2013-11-09T17:15:41+0000",
            "content": "Hi David,\n\nI've read through the patch. I don't think we'll be able to solve this issue though from inside of the CollapsingQParserPlugin. The main problem is that the CollapsingQParserPlugin really needs the scorer to be present to work properly. So to get this working we'll need to make sure that the method that builds the docset, builds it in such a way that scorer can be accessed. \n\nI'll take a look at finding an approach for this.\n\nJoel "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13819180",
            "date": "2013-11-11T18:28:58+0000",
            "content": "Joel,\n\nI'm currently using my patch and the facet counts are correct and the performance is good. We were looking to roll this out in production where I work. Would you advise against it? What kind of problems could this cause? "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-13819224",
            "date": "2013-11-11T19:02:07+0000",
            "content": "David,\n\nHere is the flow as I see it with the patch:\n1) The intitial search executes and produces a result based on collapsing the groups by score.\n2) The facet component needs to regenerate the docset because of the tag/exclude parameters. But the scorer is not present when regenerating the docset, so it is using logic that overwrites the group-head each time. This will result in the document that is found latest in the index becoming the group-head, for each group.\n\nSo, the result set used to calculate the facet, will be different from the result set used to generate the search results.\n\nTo keep these in sync you would need to have step 2, also collapse based on score. "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13819237",
            "date": "2013-11-11T19:10:08+0000",
            "content": "Oh I see.... that won't actually be a problem for me since all of the documents in the group should have the same facet counts. Thanks for the reply. I will wait for a fix. But for now, if I understand your reply correctly, I don't think that will affect my facet counts in a negative manner. "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-13819255",
            "date": "2013-11-11T19:22:25+0000",
            "content": "Yes, if all the documents in the same group have the same facet counts then you won't notice this problem. "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-13844692",
            "date": "2013-12-10T21:37:27+0000",
            "content": "I uploaded a patch created from trunk which I believe resolves the issues. I started out attempting to fix this in a more generic way but ended up needing to get very specific to not break other test cases. \n\nThe issue with the other test cases is that the patch I added won't work if the main query is excluded. But for the CollapsingQParserPlugin, then main query is always needed anyway to support collapsing by score. So to not break a test case which excluded the main query, I routed only requests that use the CollapsingQParserPlugin to the new method that scores while creating the docset.\n\nThe next step is to throw an exception if someone tries to exclude the main query while using the CollapsingQParserPlugin. \n\nDavid, when you get a chance could you test this patch out and see if it resolves the issue for you. If the patch doesn't apply for you I'll create one for your version of Solr.\n\nJoel "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-13845469",
            "date": "2013-12-11T15:17:33+0000",
            "content": "Added a test case for tag/exclude and also revamped all the tests to better exercise sorting following the collapse. "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13845630",
            "date": "2013-12-11T18:56:24+0000",
            "content": "Hi Joel I will try to patch it into 4.5.1 and let you know if it works "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-13845668",
            "date": "2013-12-11T19:37:02+0000",
            "content": "Hi David,\n\nIt's probably easiest to put two files in place rather then try to patch 4.5.1. I'll attache my version of the CollapsingQParserPlugin and SolrIndexSearcher. You can then just copy them to org/apache/solr/search.\n\nJoel "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13845678",
            "date": "2013-12-11T19:47:12+0000",
            "content": "Could you also attach your tests and I'll see if it works "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13845688",
            "date": "2013-12-11T20:04:51+0000",
            "content": "patched it into 4.6. Going to upgrade my servers and do some testing with my index "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-13845852",
            "date": "2013-12-11T23:42:19+0000",
            "content": "Added empty SearchFilter interface so SolrIndexSearcher can reference something more generic. If a postfilter also implements SearchFilter then the SolrIndexSearcher will call getDocSetScore() rather the getDocSet() when building docsets.  "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13846549",
            "date": "2013-12-12T18:17:42+0000",
            "content": "4.6 had some bugs in the DIH. Going to try to patch this into my 4.5.1. "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13846576",
            "date": "2013-12-12T18:45:18+0000",
            "content": "Joel,\n\nThis test is failing:\n\n\nparams = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"fq\", \"{!collapse field=group_s min=test_ti}\");\n    params.add(\"sort\", \"score desc,id asc\");\n    params.add(\"defType\", \"edismax\");\n    params.add(\"bf\", \"field(id)\");\n    assertQ(req(params), \"*[count(//doc)=2]\",\n                          \"//result/doc[1]/float[@name='id'][.='5.0']\",\n                          \"//result/doc[2]/float[@name='id'][.='1.0']\");\n\n\n\nI'm assuming it's not a problem with the parser and a problem with the test. "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-13846600",
            "date": "2013-12-12T19:04:17+0000",
            "content": "The test should be ok. It runs successfully for me.  This specifically tests SOLR-5408. Probably you don't have that patch applied. If you overlay the attached java files you'll get both patches.\n "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13846623",
            "date": "2013-12-12T19:20:35+0000",
            "content": "Overlaying the files doesn't work I get errors resolving:\n\nimport org.apache.lucene.index.StorableField;\nimport org.apache.lucene.index.StoredDocument;\n\nWould you be able to create a patch for 4.5.1? "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13846632",
            "date": "2013-12-12T19:26:00+0000",
            "content": "I just checked the patch from SOLR-5408 and it looks like I have that code already. "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13846633",
            "date": "2013-12-12T19:27:08+0000",
            "content": "oh wait nevermind. I patched solrIndexsearcher with just your changes... then I overlay your CollapsingQParserPlugin... this might work. "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13846648",
            "date": "2013-12-12T19:33:53+0000",
            "content": "bah... no good "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13846663",
            "date": "2013-12-12T19:53:48+0000",
            "content": "whew! Ok I applied the patches from SOLR-5027, SOLR-5408, and from your latest patch attached to this tracker. All tests now pass. Going to upgrade my servers and see if this works for me. In my current implementation I am getting a lot of errors from SolrCache (the patch I provided) and am running into heap memory errors. I'm wondering if the errors are caused by my patch. "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13846760",
            "date": "2013-12-12T21:27:49+0000",
            "content": "I have patched 4.5.1 with your changes. Functionally everything works correctly. But I am seeing the following errors:\n\n\n1672828 [searcherExecutor-5-thread-1] ERROR org.apache.solr.search.SolrCache  \u2013 Error during auto-warming of key:org.apache.solr.search.QueryResultKey@ad693c4:java.lang.NullPointerException\n\n1672831 [searcherExecutor-5-thread-1] ERROR org.apache.solr.search.SolrCache  \u2013 Error during auto-warming of key:org.apache.solr.search.QueryResultKey@e7384164:java.lang.NullPointerException\n\n1672834 [searcherExecutor-5-thread-1] ERROR org.apache.solr.search.SolrCache  \u2013 Error during auto-warming of key:org.apache.solr.search.QueryResultKey@569af2fd:java.lang.NullPointerException\n\n1672837 [searcherExecutor-5-thread-1] ERROR org.apache.solr.search.SolrCache  \u2013 Error during auto-warming of key:org.apache.solr.search.QueryResultKey@45c8d9aa:java.lang.NullPointerException\n\n1672899 [searcherExecutor-5-thread-1] ERROR org.apache.solr.search.SolrCache  \u2013 Error during auto-warming of key:org.apache.solr.search.QueryResultKey@d8a57011:java.lang.NullPointerException\n\n1672904 [searcherExecutor-5-thread-1] ERROR org.apache.solr.search.SolrCache  \u2013 Error during auto-warming of key:org.apache.solr.search.QueryResultKey@eb4c3b23:java.lang.NullPointerException "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13846808",
            "date": "2013-12-12T22:08:05+0000",
            "content": "Joel,\n\nIs it possible that the tagged documents are ending up in the solr query cache with null values? "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-13846827",
            "date": "2013-12-12T22:27:23+0000",
            "content": "David,\n\nI'm not gettting the auto-warm cache errors. I have debug logging on, and autowarming turned on. I ran collapse queries to populate the QueryResultCache and then loaded data. The cache seems to warm properly.\n\nTry turning debug logging on and see if we can get more of the strack trace.\n\nJoel "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13846872",
            "date": "2013-12-12T23:06:35+0000",
            "content": "7668111 [searcherExecutor-18-thread-1] ERROR org.apache.solr.search.SolrCache  \u2013 Error during auto-warming of key:org.apache.solr.search.QueryResultKey@cec848a0:java.lang.ArrayIndexOutOfBoundsException: 1\n\tat org.apache.solr.search.CollapsingQParserPlugin$CollapsingScoreCollector.setNextReader(CollapsingQParserPlugin.java:402)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:618)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:297)\n\tat org.apache.solr.search.SolrIndexSearcher.getDocListAndSetNC(SolrIndexSearcher.java:1662)\n\tat org.apache.solr.search.SolrIndexSearcher.getDocListC(SolrIndexSearcher.java:1389)\n\tat org.apache.solr.search.SolrIndexSearcher.access$000(SolrIndexSearcher.java:118)\n\tat org.apache.solr.search.SolrIndexSearcher$3.regenerateItem(SolrIndexSearcher.java:465)\n\tat org.apache.solr.search.LRUCache.warm(LRUCache.java:188)\n\tat org.apache.solr.search.SolrIndexSearcher.warm(SolrIndexSearcher.java:2077)\n\tat org.apache.solr.core.SolrCore$4.call(SolrCore.java:1631)\n\tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:166)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\n\tat java.lang.Thread.run(Thread.java:722)\n\n7668114 [searcherExecutor-18-thread-1] ERROR org.apache.solr.search.SolrCache  \u2013 Error during auto-warming of key:org.apache.solr.search.QueryResultKey@d9756dd8:java.lang.ArrayIndexOutOfBoundsException: 1\n\tat org.apache.solr.search.CollapsingQParserPlugin$CollapsingScoreCollector.setNextReader(CollapsingQParserPlugin.java:402)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:618)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:297)\n\tat org.apache.solr.search.SolrIndexSearcher.getDocListAndSetNC(SolrIndexSearcher.java:1662)\n\tat org.apache.solr.search.SolrIndexSearcher.getDocListC(SolrIndexSearcher.java:1389)\n\tat org.apache.solr.search.SolrIndexSearcher.access$000(SolrIndexSearcher.java:118)\n\tat org.apache.solr.search.SolrIndexSearcher$3.regenerateItem(SolrIndexSearcher.java:465)\n\tat org.apache.solr.search.LRUCache.warm(LRUCache.java:188)\n\tat org.apache.solr.search.SolrIndexSearcher.warm(SolrIndexSearcher.java:2077)\n\tat org.apache.solr.core.SolrCore$4.call(SolrCore.java:1631)\n\tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:166)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\n\tat java.lang.Thread.run(Thread.java:722)\n\n7668123 [searcherExecutor-18-thread-1] ERROR org.apache.solr.search.SolrCache  \u2013 Error during auto-warming of key:org.apache.solr.search.QueryResultKey@d38b6b9c:java.lang.ArrayIndexOutOfBoundsException: 1\n\tat org.apache.solr.search.CollapsingQParserPlugin$CollapsingScoreCollector.setNextReader(CollapsingQParserPlugin.java:402)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:618)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:297)\n\tat org.apache.solr.search.SolrIndexSearcher.getDocListAndSetNC(SolrIndexSearcher.java:1662)\n\tat org.apache.solr.search.SolrIndexSearcher.getDocListC(SolrIndexSearcher.java:1389)\n\tat org.apache.solr.search.SolrIndexSearcher.access$000(SolrIndexSearcher.java:118)\n\tat org.apache.solr.search.SolrIndexSearcher$3.regenerateItem(SolrIndexSearcher.java:465)\n\tat org.apache.solr.search.LRUCache.warm(LRUCache.java:188)\n\tat org.apache.solr.search.SolrIndexSearcher.warm(SolrIndexSearcher.java:2077)\n\tat org.apache.solr.core.SolrCore$4.call(SolrCore.java:1631)\n\tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:166)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\n\tat java.lang.Thread.run(Thread.java:722)\n\n7668165 [searcherExecutor-18-thread-1] ERROR org.apache.solr.search.SolrCache  \u2013 Error during auto-warming of key:org.apache.solr.search.QueryResultKey@9fe9299c:java.lang.ArrayIndexOutOfBoundsException: 1\n\tat org.apache.solr.search.CollapsingQParserPlugin$CollapsingScoreCollector.setNextReader(CollapsingQParserPlugin.java:402)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:618)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:297)\n\tat org.apache.solr.search.SolrIndexSearcher.getDocListAndSetNC(SolrIndexSearcher.java:1662)\n\tat org.apache.solr.search.SolrIndexSearcher.getDocListC(SolrIndexSearcher.java:1389)\n\tat org.apache.solr.search.SolrIndexSearcher.access$000(SolrIndexSearcher.java:118)\n\tat org.apache.solr.search.SolrIndexSearcher$3.regenerateItem(SolrIndexSearcher.java:465)\n\tat org.apache.solr.search.LRUCache.warm(LRUCache.java:188)\n\tat org.apache.solr.search.SolrIndexSearcher.warm(SolrIndexSearcher.java:2077)\n\tat org.apache.solr.core.SolrCore$4.call(SolrCore.java:1631)\n\tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:166)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\n\tat java.lang.Thread.run(Thread.java:722)\n\n7668169 [searcherExecutor-18-thread-1] ERROR org.apache.solr.search.SolrCache  \u2013 Error during auto-warming of key:org.apache.solr.search.QueryResultKey@94d684c6:java.lang.ArrayIndexOutOfBoundsException: 1\n\tat org.apache.solr.search.CollapsingQParserPlugin$CollapsingScoreCollector.setNextReader(CollapsingQParserPlugin.java:402)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:618)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:297)\n\tat org.apache.solr.search.SolrIndexSearcher.getDocListAndSetNC(SolrIndexSearcher.java:1662)\n\tat org.apache.solr.search.SolrIndexSearcher.getDocListC(SolrIndexSearcher.java:1389)\n\tat org.apache.solr.search.SolrIndexSearcher.access$000(SolrIndexSearcher.java:118)\n\tat org.apache.solr.search.SolrIndexSearcher$3.regenerateItem(SolrIndexSearcher.java:465)\n\tat org.apache.solr.search.LRUCache.warm(LRUCache.java:188)\n\tat org.apache.solr.search.SolrIndexSearcher.warm(SolrIndexSearcher.java:2077)\n\tat org.apache.solr.core.SolrCore$4.call(SolrCore.java:1631)\n\tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:166)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\n\tat java.lang.Thread.run(Thread.java:722)\n\n7668175 [searcherExecutor-18-thread-1] ERROR org.apache.solr.search.SolrCache  \u2013 Error during auto-warming of key:org.apache.solr.search.QueryResultKey@31f8a000:java.lang.ArrayIndexOutOfBoundsException: 1\n\tat org.apache.solr.search.CollapsingQParserPlugin$CollapsingScoreCollector.setNextReader(CollapsingQParserPlugin.java:402)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:618)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:297)\n\tat org.apache.solr.search.SolrIndexSearcher.getDocListAndSetNC(SolrIndexSearcher.java:1662)\n\tat org.apache.solr.search.SolrIndexSearcher.getDocListC(SolrIndexSearcher.java:1389)\n\tat org.apache.solr.search.SolrIndexSearcher.access$000(SolrIndexSearcher.java:118)\n\tat org.apache.solr.search.SolrIndexSearcher$3.regenerateItem(SolrIndexSearcher.java:465)\n\tat org.apache.solr.search.LRUCache.warm(LRUCache.java:188)\n\tat org.apache.solr.search.SolrIndexSearcher.warm(SolrIndexSearcher.java:2077)\n\tat org.apache.solr.core.SolrCore$4.call(SolrCore.java:1631)\n\tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:166)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\n\tat java.lang.Thread.run(Thread.java:722) "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-13846953",
            "date": "2013-12-13T00:12:12+0000",
            "content": "OK, I believe I see the problem. I'll update this ticket with a new patch shortly. "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-13847041",
            "date": "2013-12-13T01:46:00+0000",
            "content": "David,\n\nThis was actually a pretty nasty bug, that pointed to possible memory leaks as well. The latest patch should resolve your exceptions around cache warming and eliminate the memory leak issues.\n\nThanks for helping track down these bugs.\n\nJoel "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-13847576",
            "date": "2013-12-13T15:28:03+0000",
            "content": "Resolved an issue with sort order when an empty sort param is provided, reported in SOLR-5554. "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13847788",
            "date": "2013-12-13T19:03:48+0000",
            "content": "Thank you for your quick response, I'm actually trying to use your plugin in production as the standard grouping had serious performance issues around facet grouping. I'll try to patch in your latest fix. Thank you for all of your help! "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13847814",
            "date": "2013-12-13T19:27:24+0000",
            "content": "I am attaching a patch with all of the patches for CollapseQParserPlugin up to todays date. This patch is for those of use who want to use this plugin in Solr 4.5.1 "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-13849605",
            "date": "2013-12-16T19:10:48+0000",
            "content": "All tests are passing as well as precommit. I'll wait a day or so to see if any review comments come in and if not I'll commit to trunk, 4x and Solr 4.6.1.\n "
        },
        {
            "author": "shruti suri",
            "id": "comment-13850390",
            "date": "2013-12-17T12:10:28+0000",
            "content": "Joel,\n\nI am getting the following error when i am applying CollapseQParserPluginPatch-solr-4.5.1.patch in solr-4.5.1.\n\nError\n1 out of 1 hunk ignored \u2013 saving rejects to file solr/core/src/java/org/apache/solr/search/QParserPlugin.java.rej\npatching file solr/core/ivy.xml\nHunk #1 FAILED at 42.\n1 out of 1 hunk FAILED \u2013 saving rejects to file solr/core/ivy.xml.rej\npatching file solr/core/src/test/org/apache/solr/search/QueryEqualityTest.java\nHunk #1 succeeded at 295 (offset 100 lines).\npatching file solr/core/src/java/org/apache/solr/search/ScoreFilter.java\npatching file solr/core/src/java/org/apache/solr/search/SolrIndexSearcher.java\nReversed (or previously applied) patch detected!  Assume -R? [n] \nApply anyway? [n] \nSkipping patch.\n2 out of 2 hunks ignored \u2013 saving rejects to file solr/core/src/java/org/apache/solr/search/SolrIndexSearcher.java.rej\npatching file solr/core/src/test/org/apache/solr/search/TestCollapseQParserPlugin.java\npatching file solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java\n\nRegards\nShruti  "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-13850479",
            "date": "2013-12-17T14:08:35+0000",
            "content": "Hi Shruti,\n\nI suspect you have certain parts of the patch already applied. David created this patch, but I believe it applies the CollapsingQParserPlugin all the way back to the original commit. \n\nJoel "
        },
        {
            "author": "shruti suri",
            "id": "comment-13851458",
            "date": "2013-12-18T07:13:48+0000",
            "content": "Joel\n\nPlease tell me steps to integrate it with svn checkout lucene_solr_4_5_1\n\nShruti "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-13851653",
            "date": "2013-12-18T12:45:23+0000",
            "content": "David,\n\nI'd like to credit your work on this ticket in the CHANGES.txt. Let me know if you'd like to use your last name.\n\nJoel "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13851867",
            "date": "2013-12-18T16:06:14+0000",
            "content": "Commit 1551999 from Joel Bernstein in branch 'dev/trunk'\n[ https://svn.apache.org/r1551999 ]\n\nSOLR-5416: CollapsingQParserPlugin bug with tagging "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13851918",
            "date": "2013-12-18T17:05:01+0000",
            "content": "Commit 1552027 from Joel Bernstein in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1552027 ]\n\nSOLR-5416: CollapsingQParserPlugin bug with tagging "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13851963",
            "date": "2013-12-18T17:52:03+0000",
            "content": "wow thanks Joel! Of course I wouldn't mind. My full name is David Boychuck. "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-13852347",
            "date": "2013-12-18T23:58:16+0000",
            "content": "Thanks David, I think the plan is to get these fixes into Solr 4.6.1. I'll be sure to credit you in the CHANGES.txt\n\nJoel "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13854798",
            "date": "2013-12-21T06:05:28+0000",
            "content": "Commit 1552876 from Joel Bernstein in branch 'dev/branches/lucene_solr_4_6'\n[ https://svn.apache.org/r1552876 ]\n\nSOLR-5416: CollapsingQParserPlugin bug with tagging "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13868280",
            "date": "2014-01-10T20:48:04+0000",
            "content": "Hi Joel,\n\nI'm noticing that QueryResultCache is not being used when using this plugin. Is it not supposed to?  "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-13868310",
            "date": "2014-01-10T21:16:14+0000",
            "content": "Actually the reason why I had to disable the QueryResultCache for the CollapsingQParserPlugin is this bug. You could trigger this bug by also doing\n\n1) Executing a query with the CollapsingQParsePlugin combined with facets.\n2) The query gets cached in the QueryResultCache. But the docset does not (this is normal for Solr).\n3) Execute the same query again, retrieve the query from the QueryResultCache but the docset needs to be regenerated.\n4) Regenerating the docset threw the same exception you reported in this ticket because they use the same method.\n\nI knew this bug existed, so I disabled the queryResultCache for the CollapsingQParserPlugin. But I didn't know tag/exclude would trigger the same bug. You pointed that out.\n\nNow that this issue is fixed, the CollapsingQParserPlugin will work fine with the QueryResultCache. But I haven't re-enabled it. If you want, you can create another ticket for that. I was planning on doing this for Solr 4.7.\n\n "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13868342",
            "date": "2014-01-10T21:41:41+0000",
            "content": "Is it something that would be easy to re-enable? I'd like to use it in my 4.5.1 solr "
        },
        {
            "author": "David Boychuck",
            "id": "comment-13868345",
            "date": "2014-01-10T21:43:48+0000",
            "content": "https://issues.apache.org/jira/browse/SOLR-5624 "
        },
        {
            "author": "Joel Bernstein",
            "id": "comment-13868356",
            "date": "2014-01-10T21:53:16+0000",
            "content": "The equals and hashCode methods in the CollapsingPostFilter need to be changed. It's a pretty quick fix and easy to backport. I'll try to get to this early next week.  "
        },
        {
            "author": "shruti suri",
            "id": "comment-14110639",
            "date": "2014-08-26T12:13:10+0000",
            "content": "Hi Joel,\n\nI am facing an issue with Facet count using  shard query and  collapse filter. \n\nQuery:- \nhttp://localhost:8983/solr/core1/select?fq=\n{!collapse%20field=type}\n&q=type:abc&facet=true&facet.field=type&shards=localhost:8983/solr/core1,localhost:8983/solr/core2\n\nOutput:-\n<result name=\"response\" numFound=\"1\" start=\"0\" maxScore=\"1.0\"></result>\n<lst name=\"facet_counts\"> \n<lst name=\"facet_queries\"/>\n<lst name=\"facet_fields\">\n<lst name=\"type\"> \n<int name=\"abc\">2</int>\n<int name=\"cde\">0</int>\n<int name=\"swe\">0</int>\n</lst>\n</lst>\n<lst name=\"facet_dates\"/>\n<lst name=\"facet_ranges\"/></lst></response>\n\nIssue:- In the above output numFound=\"1\" and facet count for abc is 2. While merging results from shards unique Facet count should drop. \n\nRegards\nshruti\n "
        }
    ]
}