{
    "id": "SOLR-88",
    "title": "Solr index cannot be opened with luke anymore",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Invalid"
    },
    "description": "http://marc.theaimsgroup.com/?l=solr-dev&m=116661341524556&w=2\n\"...I notice a very weird problem that I do not understand. I tried to open\nthe solr index with luke on trunk and it fails with:\njava.io.FileNotFoundException: $PATH/solr/data/index/_0.f1 (No such file\nor directory)...\"\nI am using lukeall.jar version 0.6.",
    "attachments": {
        "commits.since.11-27.log": "https://issues.apache.org/jira/secure/attachment/12347560/commits.since.11-27.log"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Thorsten Scherler",
            "id": "comment-12459905",
            "date": "2006-12-20T11:36:57+0000",
            "content": " svn log -v -r\n{2006-11-27}\n:HEAD . > commits.since.11-27.log\nAll commits since the last known working version. "
        },
        {
            "author": "Thorsten Scherler",
            "id": "comment-12459920",
            "date": "2006-12-20T12:43:27+0000",
            "content": "I think  found the revision:\nsvn up -r487364 .\nBefore this revision I can open the index with luke. \nAfter this commit I cannot do it anymore.\n\nSeeing the changes it seems that @omitNorms=\"true\" is \n\nsvn diff -r487340:487364\nIndex: example/solr/conf/schema.xml\n===================================================================\n\u2014 example/solr/conf/schema.xml        (revision 487340)\n+++ example/solr/conf/schema.xml        (revision 487364)\n@@ -47,10 +47,10 @@\n        limits compression (if enabled in the derived fields) to values which\n        exceed a certain size (in characters).\n     -->\n\n\t<fieldtype name=\"string\" class=\"solr.StrField\" sortMissingLast=\"true\"/>\n+    <fieldtype name=\"string\" class=\"solr.StrField\" sortMissingLast=\"true\" omitNorms=\"true\"/>\n\n\n\n     <!-- boolean type: \"true\" or \"false\" -->\n\n\t<fieldtype name=\"boolean\" class=\"solr.BoolField\" sortMissingLast=\"true\"/>\n+    <fieldtype name=\"boolean\" class=\"solr.BoolField\" sortMissingLast=\"true\" omitNorms=\"true\"/>\n\n\n\n     <!-- The optional sortMissingLast and sortMissingFirst attributes are\n          currently supported on types that are sorted internally as strings.\n@@ -69,20 +69,20 @@\n     <!-- numeric field types that store and index the text\n          value verbatim (and hence don't support range queries, since the\n          lexicographic ordering isn't equal to the numeric ordering) -->\n\n\t<fieldtype name=\"integer\" class=\"solr.IntField\"/>\n\t<fieldtype name=\"long\" class=\"solr.LongField\"/>\n\t<fieldtype name=\"float\" class=\"solr.FloatField\"/>\n\t<fieldtype name=\"double\" class=\"solr.DoubleField\"/>\n+    <fieldtype name=\"integer\" class=\"solr.IntField\" omitNorms=\"true\"/>\n+    <fieldtype name=\"long\" class=\"solr.LongField\" omitNorms=\"true\"/>\n+    <fieldtype name=\"float\" class=\"solr.FloatField\" omitNorms=\"true\"/>\n+    <fieldtype name=\"double\" class=\"solr.DoubleField\" omitNorms=\"true\"/>\n\n\n\n\n     <!-- Numeric field types that manipulate the value into\n          a string value that isn't human-readable in its internal form,\n          but with a lexicographic ordering the same as the numeric ordering,\n          so that range queries work correctly. -->\n\n\t<fieldtype name=\"sint\" class=\"solr.SortableIntField\" sortMissingLast=\"true\"/>\n\t<fieldtype name=\"slong\" class=\"solr.SortableLongField\" sortMissingLast=\"true\"/>\n\t<fieldtype name=\"sfloat\" class=\"solr.SortableFloatField\" sortMissingLast=\"true\"/>\n\t<fieldtype name=\"sdouble\" class=\"solr.SortableDoubleField\" sortMissingLast=\"true\"/>\n+    <fieldtype name=\"sint\" class=\"solr.SortableIntField\" sortMissingLast=\"true\" omitNorms=\"true\"/>\n+    <fieldtype name=\"slong\" class=\"solr.SortableLongField\" sortMissingLast=\"true\" omitNorms=\"true\"/>\n+    <fieldtype name=\"sfloat\" class=\"solr.SortableFloatField\" sortMissingLast=\"true\" omitNorms=\"true\"/>\n+    <fieldtype name=\"sdouble\" class=\"solr.SortableDoubleField\" sortMissingLast=\"true\" omitNorms=\"true\"/>\n\n\n\n\n     <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and\n@@ -105,7 +105,7 @@\n\n          Consult the DateField javadocs for more information.\n       -->\n\n\t<fieldtype name=\"date\" class=\"solr.DateField\" sortMissingLast=\"true\"/>\n+    <fieldtype name=\"date\" class=\"solr.DateField\" sortMissingLast=\"true\" omitNorms=\"true\"/>\n\n\n\n     <!-- solr.TextField allows the specification of custom text analyzers\n          specified as a tokenizer and a list of token filters. Different\n@@ -183,24 +183,25 @@\n\n  <fields>\n    <!-- Valid attributes for fields:\n\n\tname: mandatory - the name for the field\n\ttype: mandatory - the name of a previously defined type from the <types> section\n\tindexed: true if this field should be indexed (searchable)\n\tstored: true if this field should be retrievable\n\tcompressed: [false] if this field should be stored using gzip compression\n\t(this will only apply if the field type is compressable; among\n\tthe standard field types, only TextField and StrField are)\n\tmultiValued: true if this field may contain multiple values per document\n\tomitNorms: (expert) set to true to omit the norms associated with this field\n\t(this disables length normalization and index-time boosting for the field)\n-\n+     name: mandatory - the name for the field\n+     type: mandatory - the name of a previously defined type from the <types> section\n+     indexed: true if this field should be indexed (searchable or sortable)\n+     stored: true if this field should be retrievable\n+     compressed: [false] if this field should be stored using gzip compression\n+       (this will only apply if the field type is compressable; among\n+       the standard field types, only TextField and StrField are)\n+     multiValued: true if this field may contain multiple values per document\n+     omitNorms: (expert) set to true to omit the norms associated with\n+       this field (this disables length normalization and index-time\n+       boosting for the field, and saves some memory).  Only full-text\n+       fields or fields that need an index-time boost need norms.\n    -->\n\n\n\n    <field name=\"id\" type=\"string\" indexed=\"true\" stored=\"true\"/>\n\n\t<field name=\"sku\" type=\"textTight\" indexed=\"true\" stored=\"true\"/>\n+   <field name=\"sku\" type=\"textTight\" indexed=\"true\" stored=\"true\" omitNorms=\"true\"/>\n    <field name=\"name\" type=\"text\" indexed=\"true\" stored=\"true\"/>\n\t<field name=\"manu\" type=\"text\" indexed=\"true\" stored=\"true\"/>\n\t<field name=\"cat\" type=\"text_ws\" indexed=\"true\" stored=\"true\" multiValued=\"true\"/>\n+   <field name=\"manu\" type=\"text\" indexed=\"true\" stored=\"true\" omitNorms=\"true\"/>\n+   <field name=\"cat\" type=\"text_ws\" indexed=\"true\" stored=\"true\" multiValued=\"true\" omitNorms=\"true\"/>\n    <field name=\"features\" type=\"text\" indexed=\"true\" stored=\"true\" multiValued=\"true\"/>\n    <field name=\"includes\" type=\"text\" indexed=\"true\" stored=\"true\"/>\n\n "
        },
        {
            "author": "Thorsten Scherler",
            "id": "comment-12459926",
            "date": "2006-12-20T13:01:04+0000",
            "content": "Removing omitNorms=\"true\" from the schema.xml fixes this issue.  "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12459927",
            "date": "2006-12-20T13:07:33+0000",
            "content": "Luke would very likely work if you used it with the Solr version of Lucene, rather than modifying Solr's schema.   lukeall JAR embeds Lucene, but an older version. "
        },
        {
            "author": "Thorsten Scherler",
            "id": "comment-12459937",
            "date": "2006-12-20T13:53:41+0000",
            "content": "Cheers Erik.\n\nThat is good to know. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12459965",
            "date": "2006-12-20T15:24:18+0000",
            "content": "Yes, this is a lucene index format issue.  Older versions of Lucene often can't open indexes created by newer versions.  Use luke.jar with the lucene jars from the Solr lib directory. "
        }
    ]
}