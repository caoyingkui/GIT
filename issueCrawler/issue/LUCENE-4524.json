{
    "id": "LUCENE-4524",
    "title": "Merge DocsEnum and DocsAndPositionsEnum into PostingsEnum",
    "details": {
        "components": [
            "core/codecs",
            "core/index",
            "core/search"
        ],
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "affect_versions": "4.0",
        "priority": "Major",
        "labels": "",
        "type": "Improvement",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "spinnoff from http://www.gossamer-threads.com/lists/lucene/java-dev/172261\n\n\nhey folks, \n\nI have spend a hell lot of time on the positions branch to make \npositions and offsets working on all queries if needed. The one thing \nthat bugged me the most is the distinction between DocsEnum and \nDocsAndPositionsEnum. Really when you look at it closer DocsEnum is a \nDocsAndFreqsEnum and if we omit Freqs we should return a DocIdSetIter. \nSame is true for \nDocsAndPostionsAndPayloadsAndOffsets*YourFancyFeatureHere*Enum. I \ndon't really see the benefits from this. We should rather make the \ninterface simple and call it something like PostingsEnum where you \nhave to specify flags on the TermsIterator and if we can't provide the \nsufficient enum we throw an exception? \nI just want to bring up the idea here since it might simplify a lot \nfor users as well for us when improving our positions / offset etc. \nsupport. \n\nthoughts? Ideas? \n\nsimon",
    "attachments": {
        "LUCENE-4524.patch": "https://issues.apache.org/jira/secure/attachment/12565808/LUCENE-4524.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-01-21T16:53:07+0000",
            "content": "here is an initial patch that moves this over. I really just did some initial porting and this patch has still some problems.\n\nI removed DocsAndPosEnum entirely and changed how the DocsEnum Flags work such that we only have TermsEnum#docs and a simple sugar method for docsAndPos which should go away IMO. We need to figure out what kind of behavior those flags should trigger ie. if we have no freqs we still return and enum while no pos we return null.\n\nanyway, most of the patch is rename etc. all test pass, comments welcome ",
            "author": "Simon Willnauer",
            "id": "comment-13558905"
        },
        {
            "date": "2013-01-21T18:26:26+0000",
            "content": "new patch bringing back TermsEnum#docsAndPositions(...) this make this entire thing way simpler and I think this is how it should be. All tests pass and I think this is pretty close already. ",
            "author": "Simon Willnauer",
            "id": "comment-13558962"
        },
        {
            "date": "2013-01-21T20:00:54+0000",
            "content": "The javadocs on PostingsReaderBase are a bit funky, but otherwise this looks great.  Simplifies things a lot. ",
            "author": "Alan Woodward",
            "id": "comment-13559039"
        },
        {
            "date": "2013-01-21T20:10:54+0000",
            "content": "alan, I agree this might make a lot of things simple in LUCENE-2878 like passing instances down to the actual scorer. This might even help us to get the API straight. \n\nI will go over the patch tomorrow again and straight out javadocs etc. I plan to commit this to trunk and then backport to 4.2 I think this this case we should really break BW compat and just go ahead and remove the DocsAndPositionsEnum class entirely. Any objections? ",
            "author": "Simon Willnauer",
            "id": "comment-13559048"
        },
        {
            "date": "2013-01-21T20:28:33+0000",
            "content": "I agree its a great! change, but perhaps this should be committed to the 2878 branch for now to see how it plays in practice?\n\nOtherwise I have a few concerns about committing to trunk (none of which have to do with the particular patch, just problems in general)\n\n\n\tScorer.java will be strange, as it will have various methods like nextPosition(), getPayload(), that do not work. Of course this API would be fantastic and make total sense if this was the api for LUCENE-2878, but in the meantime it would be odd and confusing.\n\tI'm not sure how i feel about nextPosition(), getPayload(), start/endOffset() all going from abstract to 'default nonfunctioning impl'. It might be the right tradeoff, but i definitely liked them better as abstract. Its hard to tell without seeing how the Scorer integration would ultimately play out.\n\twith DocsEnum and DocsAndPositionsEnum merged, the possibility of reuse bugs in various postings implementations is increased. We should review our own code here...\n\n ",
            "author": "Robert Muir",
            "id": "comment-13559069"
        },
        {
            "date": "2013-01-21T22:24:10+0000",
            "content": "this change is really unrelated to LUCENE-2878 it removes a unnecessary duplication. The fact that Scorer extends DocEnum is not concerning me here since the main purpose of this class is not the Scorer API. This should really go on trunk since given the discussion on the list this is independent of LUCENE-2878.\nIf there are bugs in reuse we should catch them in the tests no? I mean we can add even more tests for this particular problem so we catch them quicker. I would be ok with makeing them abstract but this really is not a big deal here. I would want to move forward here quickly on trunk at least we can merge later into 4.x if needed since this might go out of date quickly. ",
            "author": "Simon Willnauer",
            "id": "comment-13559167"
        },
        {
            "date": "2013-07-23T18:44:28+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 ",
            "author": "Steve Rowe",
            "id": "comment-13716959"
        },
        {
            "date": "2014-04-16T12:54:27+0000",
            "content": "Move issue to Lucene 4.9. ",
            "author": "Uwe Schindler",
            "id": "comment-13970759"
        },
        {
            "date": "2015-01-27T14:08:32+0000",
            "content": "In an attempt to make LUCENE-2878 a bit more manageable, I'm trying to split this patch back out again.  In addition to merging DocsEnum and DocsAndPositionsEnum, I've removed TermsEnum.docsAndPositions(), moving all the functionality into TermsEnum.docs().  However, I'm bumping into an API issue here, because our previous guarantee was that docs() would never return null, while docsAndPositions() returns null if the relevant postings information wasn't indexed.\n\nOne option would be to add a postings() method to DocsEnum which returns what postings details are available.  So instead of returning null, we return a DocsEnum that contains whatever postings the index supports, and clients then check postings() to see if it supports what they want to do. ",
            "author": "Alan Woodward",
            "id": "comment-14293555"
        },
        {
            "date": "2015-01-27T14:09:30+0000",
            "content": "Here's what I've got so far.  Warning: tests fail, due to some things returning null when they're not expected to. ",
            "author": "Alan Woodward",
            "id": "comment-14293557"
        },
        {
            "date": "2015-01-27T18:04:09+0000",
            "content": "In fact postings() turns out to be unnecessary, I just needed to fix MappingMultiDocsEnum to check for nulls properly.  The API seems to work OK, actually, in that it works as before if you pass DocsEnum.FLAG_NONE or DocsEnum.FLAG_FREQ, and works as docsAndPositions() did before if you pass anything higher.\n\nWe should even be able to keep the API backwards-compatible if we rename the merged enum to PostingsEnum (as the issue title suggests), and then have deprecated DocsEnum and DocsAndPositionsEnum classes that extend it.\n\nI'm going to add some more testing around re-use first. ",
            "author": "Alan Woodward",
            "id": "comment-14293888"
        },
        {
            "date": "2015-01-28T12:48:30+0000",
            "content": "This patch merges the old DocsEnum and DocsAndPositionsEnum into a new PostingsEnum class (which is basically the old DaPE class), with DocsEnum extending it as a convenience class returning empty values for positions, offsets and payloads.\n\nTermsEnum.docs() methods are renamed to TermsEnum.postings().\n\nThe old docs() and docsAndPositions() methods can be added back to keep backwards compatibility.\n\nNext up: some basic re-use tests.  I think we should be able to assert that things aren't reused when we have different postings requested for all postings formats, and check specific cases for those formats where re-use is actually implemented. ",
            "author": "Alan Woodward",
            "id": "comment-14295104"
        },
        {
            "date": "2015-01-29T13:00:00+0000",
            "content": "Patch adding a basic re-use test to BasePostingsFormatTestCase.  The verifyEnum method already does a lot of randomized testing of reuse, so the new test just asserts that a TermsEnum is reused or not reused in a couple of cases. ",
            "author": "Alan Woodward",
            "id": "comment-14296793"
        },
        {
            "date": "2015-01-29T16:44:04+0000",
            "content": "I'm travelling for FOSDEM from tomorrow, but I'd like to get this into trunk early next week if possible.  Comments welcome  ",
            "author": "Alan Woodward",
            "id": "comment-14297115"
        },
        {
            "date": "2015-01-30T11:16:57+0000",
            "content": "This is a better patch, the old one still had some of the Weight API changes from LUCENE-2878 in it.\n\nScorer extends PostingsEnum directly at the moment, which means that there are lots of Scorer implementations that have to implement empty position, offset and payload methods.  Might be worth having it extend DocsEnum instead. ",
            "author": "Alan Woodward",
            "id": "comment-14298509"
        },
        {
            "date": "2015-01-30T14:43:20+0000",
            "content": "FWIW The main thing I'm looking for is a way to access the current position of a scorer, and then the ability to advance the scorer tree to the next position.  With this, an accurate highlighter (what Robert calls a \"query debugger\") can be built.  You've made references to having a highlighter using this code... is this true?  Can you share more about what it's features are or at least point me at it? ",
            "author": "David Smiley",
            "id": "comment-14298699"
        },
        {
            "date": "2015-02-02T10:34:28+0000",
            "content": "This is a pre-requisite issue for that, but it doesn't implement it for now.  All it does is merge the two different postings enumerations, which has a follow-on effect that Scorer now has position, offset and payload methods.  For now they're not actually implemented for most Scorers though.  That can be done in follow-up issues. ",
            "author": "Alan Woodward",
            "id": "comment-14301127"
        },
        {
            "date": "2015-02-02T15:37:41+0000",
            "content": "Thanks Alan: I benchmarked the current patch, i dont see any performance problems:\n\n\n                    Task   QPS trunk      StdDev   QPS patch      StdDev                Pct diff\n                  IntNRQ        8.73      (5.7%)        8.21      (8.8%)   -6.0% ( -19% -    8%)\n               MedPhrase      261.88      (5.1%)      249.79      (4.6%)   -4.6% ( -13% -    5%)\n                 Prefix3      218.79      (5.3%)      210.03      (6.0%)   -4.0% ( -14% -    7%)\n              HighPhrase       18.04      (4.2%)       17.35      (3.3%)   -3.8% ( -10% -    3%)\n                Wildcard       46.18      (3.3%)       44.65      (5.0%)   -3.3% ( -11% -    5%)\n               LowPhrase       34.95      (2.2%)       34.35      (1.5%)   -1.7% (  -5% -    1%)\n                HighTerm      119.48      (3.7%)      117.73      (5.2%)   -1.5% ( -10% -    7%)\n                 MedTerm      175.53      (3.5%)      173.14      (5.0%)   -1.4% (  -9% -    7%)\n                 LowTerm      931.30      (2.9%)      924.38      (4.5%)   -0.7% (  -7% -    6%)\n            HighSpanNear      143.52      (4.7%)      142.48      (3.5%)   -0.7% (  -8% -    7%)\n             LowSpanNear       27.97      (3.4%)       27.79      (2.6%)   -0.7% (  -6% -    5%)\n              AndHighLow     1167.87      (2.0%)     1161.24      (2.1%)   -0.6% (  -4% -    3%)\n             MedSpanNear      143.90      (4.1%)      143.30      (3.6%)   -0.4% (  -7% -    7%)\n            OrNotHighLow      953.80      (2.0%)      951.43      (1.7%)   -0.2% (  -3% -    3%)\n         LowSloppyPhrase      119.56      (3.0%)      119.79      (2.7%)    0.2% (  -5% -    6%)\n                  Fuzzy1      107.94      (2.7%)      108.20      (3.0%)    0.2% (  -5% -    6%)\n                 Respell       88.19      (3.3%)       88.51      (3.1%)    0.4% (  -5% -    6%)\n            OrNotHighMed      182.77      (2.6%)      183.48      (2.1%)    0.4% (  -4% -    5%)\n         MedSloppyPhrase       15.83      (4.8%)       15.91      (4.5%)    0.5% (  -8% -   10%)\n                  Fuzzy2       66.59      (2.9%)       66.96      (3.1%)    0.5% (  -5% -    6%)\n             AndHighHigh       87.34      (1.9%)       88.01      (1.6%)    0.8% (  -2% -    4%)\n              AndHighMed      122.26      (2.0%)      123.39      (1.5%)    0.9% (  -2% -    4%)\n           OrNotHighHigh       48.70      (3.6%)       49.29      (4.4%)    1.2% (  -6% -    9%)\n           OrHighNotHigh       29.09      (3.7%)       29.44      (4.5%)    1.2% (  -6% -    9%)\n               OrHighLow       55.62      (7.6%)       56.35      (9.5%)    1.3% ( -14% -   19%)\n            OrHighNotMed       87.78      (3.9%)       88.99      (5.0%)    1.4% (  -7% -   10%)\n            OrHighNotLow      106.31      (4.1%)      107.84      (5.4%)    1.4% (  -7% -   11%)\n               OrHighMed       57.15      (7.7%)       58.06      (9.5%)    1.6% ( -14% -   20%)\n              OrHighHigh       26.80      (8.3%)       27.26     (10.1%)    1.7% ( -15% -   21%)\n        HighSloppyPhrase       13.10     (11.3%)       13.43     (12.1%)    2.5% ( -18% -   29%)\n\n\n\nI will try to go thru it today and review the changes. ",
            "author": "Robert Muir",
            "id": "comment-14301379"
        },
        {
            "date": "2015-02-04T17:57:48+0000",
            "content": "This is kind of a pain to keep up-to-date with trunk.  If everybody's happy, I'll commit on Friday. ",
            "author": "Alan Woodward",
            "id": "comment-14305617"
        },
        {
            "date": "2015-02-04T18:07:31+0000",
            "content": "I quickly glanced thru, my only comment is, can we defer the startPosition() and endPosition()? These are not yet used by anything, and we may want to think of the semantics before putting these into all of our postings list apis. ",
            "author": "Robert Muir",
            "id": "comment-14305633"
        },
        {
            "date": "2015-02-06T11:19:58+0000",
            "content": "Committing this once I've gone through and changed back all the places that my IDE renamed /docs directories to /postings...\n\nI've also removed startPosition() and endPosition() ",
            "author": "Alan Woodward",
            "id": "comment-14308988"
        },
        {
            "date": "2015-02-06T13:25:25+0000",
            "content": "Commit 1657800 from Alan Woodward in branch 'dev/trunk'\n[ https://svn.apache.org/r1657800 ]\n\nLUCENE-4524: Replace DocsEnum and DocsAndPositionsEnum with PostingsEnum ",
            "author": "ASF subversion and git services",
            "id": "comment-14309110"
        },
        {
            "date": "2015-02-06T13:27:12+0000",
            "content": "Commit 1657801 from Alan Woodward in branch 'dev/trunk'\n[ https://svn.apache.org/r1657801 ]\n\nLUCENE-4524: Revert some bogus text changes ",
            "author": "ASF subversion and git services",
            "id": "comment-14309114"
        },
        {
            "date": "2015-02-06T16:16:28+0000",
            "content": "Commit 1657880 from Alan Woodward in branch 'dev/trunk'\n[ https://svn.apache.org/r1657880 ]\n\nLUCENE-4524: Fix javadocs ",
            "author": "ASF subversion and git services",
            "id": "comment-14309374"
        },
        {
            "date": "2015-02-06T16:39:48+0000",
            "content": "Commit 1657890 from Alan Woodward in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1657890 ]\n\nLUCENE-4524: Replace DocsEnum and DocsAndPositionsEnum with PostingsEnum ",
            "author": "ASF subversion and git services",
            "id": "comment-14309406"
        },
        {
            "date": "2015-02-11T18:01:47+0000",
            "content": "Commit 1659018 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1659018 ]\n\nLUCENE-4524: remove fixed @Seed ",
            "author": "ASF subversion and git services",
            "id": "comment-14316651"
        },
        {
            "date": "2015-02-11T18:09:26+0000",
            "content": "Commit 1659021 from Robert Muir in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1659021 ]\n\nLUCENE-4524: remove fixed @Seed ",
            "author": "ASF subversion and git services",
            "id": "comment-14316666"
        },
        {
            "date": "2015-04-15T00:30:16+0000",
            "content": "Bulk close after 5.1 release ",
            "author": "Timothy Potter",
            "id": "comment-14495253"
        }
    ]
}