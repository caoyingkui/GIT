{
    "id": "LUCENE-6995",
    "title": "Add branch change trigger to common-build.xml to keep sane build on GIT branch change",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [
            "general/build"
        ],
        "labels": "",
        "fix_versions": [
            "6.0"
        ],
        "priority": "Major",
        "status": "Resolved",
        "type": "Improvement"
    },
    "description": "Currently build systems like Ant or Maven cannot correctly handle the following typical Git workflow:\n\n\n\tYou do some stuff, run some tests\n\tYou quickly switch the branch to something else (e.g., master -> branch_5x)\n\tIf you then run tests or compile, you get crazy error messages because all the up-to-date checking does not work. To fix you have to run \"ant clean\" on root folder.\n\n\n\nThe reason for this behaviour is how switching branches works: \"it just replaces your working copy with another verson and different file modification dates (in most cases earlier ones!). This breaks Ant's and Javac'c uptodate checking.\n\nThis patch will add some check to common-build (which is done before \"resolve\" through a dependency of \"init\" task) to keep track of current branch:\n\n\tIt copies .git/HEAD into the build folder as \"reference point\".\n\tBefore compiling (on init), it does a file compare of current HEAD file with the clone in build dir. If it does not yet exists (clean checkout) or if it is identical, it just proceeds\n\tIf the file contents changed, it will trigger \"ant clean\" on the LuSolr root folder automatically and print message.\n\n\n\nThe status is passed down to sub-builds using *.uptodate property, so the check is only done once.\n\nRobert an I tried this out in serveral combinations, works fine.\n\nAny comments?",
    "attachments": {
        "LUCENE-6995.patch": "https://issues.apache.org/jira/secure/attachment/12784409/LUCENE-6995.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15117149",
            "author": "Uwe Schindler",
            "date": "2016-01-26T12:48:55+0000",
            "content": "Patch. "
        },
        {
            "id": "comment-15117213",
            "author": "Robert Muir",
            "date": "2016-01-26T13:55:06+0000",
            "content": "this is a really good idea. otherwise we are going to get bug reports that look like data corruption:\n\n   [junit4]    > Caused by: java.lang.IllegalArgumentException: Version is too old, should be at least 2 (got 0)\n   [junit4]    >     at org.apache.lucene.util.packed.PackedInts.checkVersion(PackedInts.java:77)\n   [junit4]    >     at org.apache.lucene.util.packed.PackedInts.getDecoder(PackedInts.java:742)\n   [junit4]    >     at org.apache.lucene.codecs.lucene50.ForUtil.<clinit>(ForUtil.java:64)\n   [junit4]    >     ... 50 more\n\n "
        },
        {
            "id": "comment-15117214",
            "author": "Dawid Weiss",
            "date": "2016-01-26T13:56:56+0000",
            "content": "This is interesting because I don't see this behavior. When I checkout a historical branch, it just updates timestamps on changed files in the working copy, but updates them to checkout time?\n\n\n$ ls -l build.xml\n-rw-r--r-- 1 dweiss dweiss 35579 Jan 26 14:55 build.xml\n\n# historical hash from Sep. 5:\n$ git checkout 8f5259b4ff2d5f0\n$ ls -l build.xml\n-rw-r--r-- 1 dweiss dweiss 25633 Jan 26 14:56 build.xml\n\n\n\n "
        },
        {
            "id": "comment-15117255",
            "author": "Uwe Schindler",
            "date": "2016-01-26T14:17:44+0000",
            "content": "I think the problem is also that when changing branches you may have still compiled artifacts somewhere laying around. The idea here was to be on safe side and do ant-clean on branch change automatically. We can add some property to disable it that you can put into your ~/lucene.build.properties. At least I see those problems like Robert's all the time.\n\nDawid Weiss: I think, the patch will only check a branch change, not a \"downgrade\" to earlier commit (have no tried, maybe its different). I think changing a branch is a different behaviour inside git. For me the checkout is always in some partly insane state with build artifacts after a branch change. "
        },
        {
            "id": "comment-15117268",
            "author": "Dawid Weiss",
            "date": "2016-01-26T14:24:55+0000",
            "content": "I think it's your build folders that are in an insane state, not the checked out files? I'm not against this patch, I just find it odd you're experiencing the issue because I've never had any problem with it (yes, git will not wipe out any ignored files automatically \u2013 these are ignored after all \u2013 but it'll switch any versioned files and update timestamps properly). \n\nPlease make this an opt-out feature. I prefer to git clean the build folder myself, actually (faster than ant). "
        },
        {
            "id": "comment-15117304",
            "author": "Robert Muir",
            "date": "2016-01-26T14:41:41+0000",
            "content": "It happened to me twice this morning already. Just doing things like running tests and forgetting to clean when switching branches. "
        },
        {
            "id": "comment-15117322",
            "author": "Dawid Weiss",
            "date": "2016-01-26T14:52:30+0000",
            "content": "Ok, but this isn't related to timestamps on version-controlled files, only on the fact that build artefacts coexist? If so, it'd be an interesting exercise to not clean after a branch switch but have branch-dedicated build folder. This way you could actually switch a branch and then continue working as usual because it should work flawlessly. "
        },
        {
            "id": "comment-15117331",
            "author": "Erik Hatcher",
            "date": "2016-01-26T14:57:26+0000",
            "content": "...have branch-dedicated build folder\n\nI like that idea!   I guess it's manually possible now with -Dbuild.dir=my_branch_dir? "
        },
        {
            "id": "comment-15117337",
            "author": "Robert Muir",
            "date": "2016-01-26T15:00:09+0000",
            "content": "\nIf so, it'd be an interesting exercise to not clean after a branch switch but have branch-dedicated build folder. This way you could actually switch a branch and then continue working as usual because it should work flawlessly.\n\nThis is an interesting idea. But if we do this, I think it should be `build/<branch>` and ant clean still removes build entirely (means it still really cleans). I guess it will force us to fix places in the build/python scripts/whatever that might have a hardcoded `build/` somewhere, and so on.  "
        },
        {
            "id": "comment-15117354",
            "author": "Uwe Schindler",
            "date": "2016-01-26T15:11:27+0000",
            "content": "I guess it will force us to fix places in the build/python scripts/whatever that might have a hardcoded `build/` somewhere, and so on.\n\nThat is the main issue. The current patch does not add much magic, it just does ensure that when you change the branch that you have no build artifacts (what does \"ant clean\" does otherwise?).\n\nI like the idea, too. The patch here is just a good first stab! "
        },
        {
            "id": "comment-15117355",
            "author": "Dawid Weiss",
            "date": "2016-01-26T15:11:44+0000",
            "content": "Yes, absolutely. Ant clean should really clean everything. As a side note, I use this very often:\n\ngit clean -xfd\n\n\n\nThis removes everything (including all ignored files, etc.) and restores a pristine checkout state. Just in case somebody finds it useful. "
        },
        {
            "id": "comment-15117531",
            "author": "Michael McCandless",
            "date": "2016-01-26T16:42:20+0000",
            "content": "+1 to close this trap ASAP.  The errors you hit when ant doesn't realize you've switched git branches are awful. "
        },
        {
            "id": "comment-15117539",
            "author": "Robert Muir",
            "date": "2016-01-26T16:47:05+0000",
            "content": "Can we iterate by committing this solution first, then working on the separate build directory as a followup.\n\nAgain, the current situation is a real problem, because the errors you see look like corruption. "
        },
        {
            "id": "comment-15117550",
            "author": "Uwe Schindler",
            "date": "2016-01-26T16:52:18+0000",
            "content": "I have no problem committing and pushing this soon. I just want to be sure that maybe others also tested it with his/her Git installation. "
        },
        {
            "id": "comment-15117621",
            "author": "Uwe Schindler",
            "date": "2016-01-26T17:46:50+0000",
            "content": "Hi,\nI updated the patch a bit and renamed the property to disable. I also changed target name to \"ant git-autoclean\".\n\nTo disable (Dawid Weiss), add git-autoclean.disabled=true to your ~/lucene.build.properties\n\nI'll commit this later (when back at home). "
        },
        {
            "id": "comment-15118028",
            "author": "ASF subversion and git services",
            "date": "2016-01-26T21:07:12+0000",
            "content": "Commit 424a647af4d093915108221bcd4390989303b426 in lucene-solr's branch refs/heads/master from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=424a647 ]\n\nLUCENE-6995, LUCENE-6938: Add branch change trigger to common-build.xml to keep sane build on GIT branch change "
        },
        {
            "id": "comment-15118034",
            "author": "ASF subversion and git services",
            "date": "2016-01-26T21:10:24+0000",
            "content": "Commit 0ef36fcdd107084a2ac3156943f01eb5f7dd9c74 in lucene-solr's branch refs/heads/branch_5x from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0ef36fc ]\n\nLUCENE-6995, LUCENE-6938: Add branch change trigger to common-build.xml to keep sane build on GIT branch change "
        },
        {
            "id": "comment-15118039",
            "author": "Uwe Schindler",
            "date": "2016-01-26T21:11:36+0000",
            "content": "I committed this. I think we should open another issues about the multiple build dir change. "
        },
        {
            "id": "comment-15137956",
            "author": "ASF subversion and git services",
            "date": "2016-02-08T23:07:52+0000",
            "content": "Commit b0e769c3ec598dd7398cc8df123bc4c41069e2c3 in lucene-solr's branch refs/heads/branch_5_4 from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b0e769c ]\n\nLUCENE-6995, LUCENE-6938: Add branch change trigger to common-build.xml to keep sane build on GIT branch change "
        }
    ]
}