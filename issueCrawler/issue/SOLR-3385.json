{
    "id": "SOLR-3385",
    "title": "Extended Dismax parser ignores all regular search terms when one search term is using + (dismax behaves differently)",
    "details": {
        "affect_versions": "3.5",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "query parsers"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Duplicate"
    },
    "description": "When using the extended dismax parser with at least one term using + or -, all other search terms are ignored.\n\nExample:\n\n(the terms dev and sales are found in the index, the term miau is not part of the index)\n\n\"dev sales miau\", \"+dev +sales +miau\", \"dev +sales +miau\" all give me 0 results (as expected)\n\n\"dev +sales miau\", \"dev +sales\" or \"+sales\" return the same number of results (dev and miau terms are ignored)\n\n\nThe standard dismax parser always treats search terms as +, so \"dev sales miau\", \"+dev +sales miau\", \"dev +sales miau\" return the same number of results.",
    "attachments": {
        "select_dev_PLUSsales_miau_dismax_0results.xml": "https://issues.apache.org/jira/secure/attachment/12523513/select_dev_PLUSsales_miau_dismax_0results.xml",
        "select_dev_PLUSsales_dismax_553results.xml": "https://issues.apache.org/jira/secure/attachment/12523511/select_dev_PLUSsales_dismax_553results.xml",
        "select_dev_PLUSsales_miau_edismax_9600results.xml": "https://issues.apache.org/jira/secure/attachment/12523514/select_dev_PLUSsales_miau_edismax_9600results.xml",
        "select_PLUSsales_dismax_9600results.xml": "https://issues.apache.org/jira/secure/attachment/12523516/select_PLUSsales_dismax_9600results.xml",
        "select_PLUSsales_edismax_9600results.xml": "https://issues.apache.org/jira/secure/attachment/12523517/select_PLUSsales_edismax_9600results.xml",
        "select_dev_sales_miau_edismax_0results.xml": "https://issues.apache.org/jira/secure/attachment/12523515/select_dev_sales_miau_edismax_0results.xml",
        "select_dev_PLUSsales_edismax_9600results.xml": "https://issues.apache.org/jira/secure/attachment/12523512/select_dev_PLUSsales_edismax_9600results.xml"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Erick Erickson",
            "id": "comment-13258304",
            "date": "2012-04-20T15:20:40+0000",
            "content": "Several things:\n\n1> Please discuss issues like this on the user's list before raising a JIRA. I suspect that this is more an issue for you understanding how dismax works than a problem in the code, but I'm not sure (see below).\n\n2> Please attach the results of adding &debugQuery=on and show what you think is the error. That way we can see whether it's a real bug or not. For instance, if you've put the raw + in the URL, your browser may be transforming them into spaces which would produce the behavior you're seeing. "
        },
        {
            "author": "Nils Kaiser",
            "id": "comment-13258354",
            "date": "2012-04-20T16:22:12+0000",
            "content": "Added explain queries for the cases explained in the description. Tried both dismax and edismax parser. the file name format is: select_[used search terms (PLUS means +)][dismax / edismax][number of results]results.xml\n\nDISMAX:\nAs you can see, dismax behaves correctly (it always assumes a search term without a + behaves as if it had + specified).\n\n\"+sales\" -> 9600 results\n\"dev +sales\" -> 553 results\n\"dev +sales miau\" -> 0 results (miau is not in index).\n\nEDISMAX:\nOn the other hand, edismax parser ignores the terms that do not start with + if another term has + specified.\n\n\"+sales\" -> 9600 results\n\"dev +sales\" -> 9600 results\n\"dev +sales miau\" -> 9600 results\n\"dev sales miau\" -> 0 results (the bug only occurs if at least one search term uses + or -)\nyou can use whatever additional search terms in the query, all will be ignored \"dev +sales blablablabla\" -> 9600 results "
        },
        {
            "author": "Naomi Dushay",
            "id": "comment-13662402",
            "date": "2013-05-20T22:18:35+0000",
            "content": "I believe this is the same as SOLR-2649:\n\n// For correct lucene queries, turn off mm processing if there\n// were explicit operators (except for AND).\nboolean doMinMatched = (numOR + numNOT + numPluses + numMinuses) == 0;\n(lines 232-234 taken from tags/lucene_solr_3_3/solr/src/java/org/apache/solr/search/ExtendedDismaxQParserPlugin.java) "
        },
        {
            "author": "Cassandra Targett",
            "id": "comment-16312012",
            "date": "2018-01-04T20:52:17+0000",
            "content": "SOLR-2649 is really long, but I think, from what I gathered there, this is a duplicate of that issue. "
        }
    ]
}