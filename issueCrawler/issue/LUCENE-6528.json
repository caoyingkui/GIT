{
    "id": "LUCENE-6528",
    "title": "Sort by SortField.FIELD_SCORE produces NaN scores",
    "details": {
        "resolution": "Not A Problem",
        "affect_versions": "5.1",
        "components": [
            "core/search"
        ],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "Explicit sort by document score/relevance (SortField.FIELD_SCORE) yields Not a Number (NaN) scores.",
    "attachments": {
        "LUCENE-6528.patch": "https://issues.apache.org/jira/secure/attachment/12737962/LUCENE-6528.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14574612",
            "author": "Ahmet Arslan",
            "date": "2015-06-05T14:52:24+0000",
            "content": "A failing test case that demonstrates the bug. "
        },
        {
            "id": "comment-14574637",
            "author": "Ahmet Arslan",
            "date": "2015-06-05T15:05:31+0000",
            "content": "compare internal document ids instead of field values "
        },
        {
            "id": "comment-14574681",
            "author": "Adrien Grand",
            "date": "2015-06-05T15:29:08+0000",
            "content": "Unfortunately that's expected: you need to pass doDocScores=true if you want to have scores filled in your ScoreDoc instances. Otherwise Lucene just uses FieldDoc instances instead of ScoreDoc instances with a NaN score and where one of the sort fields is the score.\n\nHowever I agree this is confusing, we should try to fix these APIs to not expose the score if it was not computed. "
        },
        {
            "id": "comment-14574696",
            "author": "Ahmet Arslan",
            "date": "2015-06-05T15:39:51+0000",
            "content": "Ups thanks for the info and sorry for the noise. When I used searcher.search(query, 10, sort, true, false) test passes. "
        }
    ]
}