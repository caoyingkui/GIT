{
    "id": "SOLR-11763",
    "title": "Upgrade Guava to 23.0",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "7.1",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Our code is running into version conflicts with Solr's old Guava dependency. This fixes it.",
    "attachments": {
        "SOLR-11763.patch": "https://issues.apache.org/jira/secure/attachment/12902107/SOLR-11763.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-12-14T17:33:28+0000",
            "content": "Patch for 7.1.0 ",
            "author": "Markus Jelsma",
            "id": "comment-16291224"
        },
        {
            "date": "2017-12-15T12:44:26+0000",
            "content": "All tests pass except:\n   [junit4] HEARTBEAT J1 PID(1664@midas): 2017-12-15T13:42:58, stalled for 2283s at: HdfsDirectoryTest (suite)\n   [junit4] HEARTBEAT J0 PID(1671@midas): 2017-12-15T13:42:58, stalled for 1752s at: HdfsAutoAddReplicasIntegrationTest (suite)\n\nIt hang the whole night! ",
            "author": "Markus Jelsma",
            "id": "comment-16292453"
        },
        {
            "date": "2018-04-25T13:43:29+0000",
            "content": "Updated patch for master! ",
            "author": "Markus Jelsma",
            "id": "comment-16452268"
        },
        {
            "date": "2018-04-25T16:56:08+0000",
            "content": "HDFS support is the issue with upgrading Guava.  The version of Hadoop that Solr includes has a dependency on Guava version 11.  ANCIENT.\n\nI think we probably need to upgrade to hadoop 3.x to be able to successfully upgrade Guava.  See HADOOP-10101.  I have no idea whether that hadoop upgrade would be seamless. ",
            "author": "Shawn Heisey",
            "id": "comment-16452630"
        },
        {
            "date": "2018-04-25T17:01:29+0000",
            "content": "See also:\nSOLR-11260\nSOLR-10308\nSOLR-8661\nSOLR-5584\n\nThere are a number of closed issues related to Guava dependency problems.  Here's a small sample:\nSOLR-6060\nSOLR-5582 ",
            "author": "Shawn Heisey",
            "id": "comment-16452641"
        },
        {
            "date": "2018-04-25T17:20:04+0000",
            "content": "Maybe we should evaluate how much effort it is to simply start using Java7 / Java8 APIs if they\u00a0have equivalents ?\u00a0\n\nhttps://www.reddit.com/r/java/comments/217rnf/what_is_obsolete_in_guava_since_java_8/\u00a0has some good info although I've just glanced at it\n\nImmutableMap can use Collections.UnmodifiableMap etc ",
            "author": "Varun Thacker",
            "id": "comment-16452675"
        },
        {
            "date": "2018-04-25T17:24:48+0000",
            "content": "+1. I know that Elasticsearch did this 2 years ago and the code looks much cleaner now. Most of the Guava stuff can be replaced by some Java 8 streams constructs. Only the parts using immutable collections as static final fields is harder, but can be easily fixed by a utility class that emulates Java 9 Apis like Set.of(...), List.of(...), Map.of(....). ",
            "author": "Uwe Schindler",
            "id": "comment-16452691"
        },
        {
            "date": "2018-04-25T17:31:16+0000",
            "content": "Maybe we should evaluate how much effort it is to simply start using Java7 / Java8 APIs if they have equivalents ?\n\nSounds great to me.  There isn't a huge amount of Guava usage in our code.  Even if we do this, we will still have difficulties integrating with other software because of Hadoop.  But if a user is NOT running HDFS indexes, and we don't have any Guava usages in the rest of Solr, then they would be able to upgrade Guava in Solr and have no problems.  One thing that I do not know is whether Guava is indirectly required by any of the other dependencies that Solr includes.\n ",
            "author": "Shawn Heisey",
            "id": "comment-16452703"
        },
        {
            "date": "2018-04-25T17:42:42+0000",
            "content": "It looks like the Calcite dependency does require Guava.  IIRC, that is required for the SQL integration.  The specific dependency on Calcite is Guava 19, so it might work OK with the latest Guava. ",
            "author": "Shawn Heisey",
            "id": "comment-16452739"
        },
        {
            "date": "2018-04-26T04:04:38+0000",
            "content": "Calcite 1.15.0 supports up to Guava 23 (see https://calcite.apache.org/news/2017/12/11/release-1.15.0/).\u00a0Calcite 1.16.0 drops support for Guava earlier than Guava 19.\u00a0 ",
            "author": "Kevin Risden",
            "id": "comment-16453464"
        },
        {
            "date": "2018-09-18T23:19:27+0000",
            "content": "It looks like the Calcite dependency does require Guava.\u00a0\nIndeed and because of this we can't get rid of the dependency and move Solr's usage of Guava to Java8\u00a0\n\n\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16619878"
        },
        {
            "date": "2018-09-20T16:11:25+0000",
            "content": "Sadly even upgrading to Hadoop 3.x won't help (yet). HADOOP-10101 was committed and then reverted. HADOOP-15272 is the new Jira to upgrade Guava in Hadoop. It is currently targeting Hadoop 3.2.0. ",
            "author": "Kevin Risden",
            "id": "comment-16622269"
        },
        {
            "date": "2018-10-15T17:47:10+0000",
            "content": "Indeed and because of this we can't get rid of the dependency and move Solr's usage of Guava to Java8 \n\nEven though we can't remove the dependency because it's required by other dependencies, I don't see any reason not to switch from Guava methods to native Java methods in code that we control. ",
            "author": "Shawn Heisey",
            "id": "comment-16650534"
        }
    ]
}