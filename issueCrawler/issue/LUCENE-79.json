{
    "id": "LUCENE-79",
    "title": "QueryParser: time not supported in date ranges",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/queryparser"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "It would be great if time was supported in date ranges. I believe it is a simple\nchange in QueryParser.jj to do this. It should be as simple as changing the\nfollowing line in QueryParser.jj.getRangeQuery():\n    DateFormat df = DateFormat.getDateInstance(DateFormat.SHORT);\nTO\n    DateFormat df = DateFormat.getDateTimeInstance(DateFormat.SHORT,\nDateFormat.SHORT);",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2003-02-23T16:18:20+0000",
            "content": "This would be useful for those who need to make their queries more precise, sure.\nHowever, we don't want to force everyone to have to start entering date and\ntime, so I would suggest that we remain backwards compatible by checking the\nlength of the 'from' date/time and length of 'to' date/time and choosing how to\nget an instance of DateFormat based on that.\n\nIf nobody vetos this suggestion, I'll modify the QueryParser to allow this soon.\nIf you want to send the diff against the latest version of QueryParser (revision\n1.25 in CVS), you'll speed things up.\n ",
            "author": "Otis Gospodnetic",
            "id": "comment-12321184"
        },
        {
            "date": "2011-01-26T12:26:23+0000",
            "content": "No response was sent on this issue, so I close it!\n\nIn general, the correct way to handle this is to override QueryParser#getRangeQuery factory and build the date range out of the lower/upper string parameter. ",
            "author": "Uwe Schindler",
            "id": "comment-12986980"
        }
    ]
}