{
    "id": "LUCENE-8243",
    "title": "IndexWriter might delete DV update files if addIndices are invovled",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "7.4,                                            master (8.0)",
        "status": "Closed",
        "type": "Bug",
        "components": [],
        "fix_versions": [
            "7.4",
            "master (8.0)"
        ]
    },
    "description": "the attached test fails with this output:\n\n\n\n/Library/Java/JavaVirtualMachines/jdk-9.0.1.jdk/Contents/Home/bin/java -ea -Djava.security.egd=file:/dev/./urandom -Didea.test.cyclic.buffer.size=1048576 -Dfile.encoding=UTF-8 -classpath \"/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Users/simonw/projects/lucene-solr/idea-build/lucene/test-framework/classes/test:/Users/simonw/projects/lucene-solr/idea-build/lucene/test-framework/classes/java:/Users/simonw/projects/lucene-solr/lucene/test-framework/lib/junit-4.10.jar:/Users/simonw/projects/lucene-solr/lucene/test-framework/lib/randomizedtesting-runner-2.5.3.jar:/Users/simonw/projects/lucene-solr/idea-build/lucene/codecs/classes/java:/Users/simonw/projects/lucene-solr/idea-build/lucene/core/classes/java:/Users/simonw/projects/lucene-solr/idea-build/lucene/core/classes/test\" com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit4 org.apache.lucene.index.TestAddIndexes,testAddIndexesDVUpdate\nIFD 0 [2018-04-06T19:27:27.176036Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: init: current segments file is \"segments_1\"; deletionPolicy=org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy@27cf18f0\nIFD 0 [2018-04-06T19:27:27.188066Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: init: load commit \"segments_1\"\nIFD 0 [2018-04-06T19:27:27.189800Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: init: seg=_0 set nextWriteDelGen=2 vs current=1\nIFD 0 [2018-04-06T19:27:27.190053Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: init: removing unreferenced file \"_0_1_Lucene70_0.dvd\"\nIFD 0 [2018-04-06T19:27:27.190224Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: init: removing unreferenced file \"_0_1.fnm\"\nIFD 0 [2018-04-06T19:27:27.190371Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: init: removing unreferenced file \"_0_1_Lucene70_0.dvm\"\nIFD 0 [2018-04-06T19:27:27.190528Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: delete [_0_1_Lucene70_0.dvd, _0_1.fnm, _0_1_Lucene70_0.dvm]\nIFD 0 [2018-04-06T19:27:27.192558Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: now checkpoint \"_0(8.0.0):C1:fieldInfosGen=1:dvGen=1\" [1 segments ; isCommit = false]\nIFD 0 [2018-04-06T19:27:27.192806Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: 0 msec to checkpoint\nIW 0 [2018-04-06T19:27:27.193012Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: init: create=false\nIW 0 [2018-04-06T19:27:27.193428Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: \ndir=MockDirectoryWrapper(RAMDirectory@79d3c690 lockFactory=org.apache.lucene.store.SingleInstanceLockFactory@795a0c8b)\nindex=_0(8.0.0):C1:fieldInfosGen=1:dvGen=1\nversion=8.0.0\nanalyzer=org.apache.lucene.analysis.MockAnalyzer\nramBufferSizeMB=16.0\nmaxBufferedDocs=503\nmergedSegmentWarmer=null\ndelPolicy=org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy\ncommit=null\nopenMode=CREATE_OR_APPEND\nsimilarity=org.apache.lucene.search.similarities.AssertingSimilarity\nmergeScheduler=org.apache.lucene.index.SerialMergeScheduler@2f3feff6\ncodec=FastDecompressionCompressingStoredFields(storedFieldsFormat=CompressingStoredFieldsFormat(compressionMode=FAST_DECOMPRESSION, chunkSize=8, maxDocsPerChunk=6, blockSize=201), termVectorsFormat=CompressingTermVectorsFormat(compressionMode=FAST_DECOMPRESSION, chunkSize=8, blockSize=201))\ninfoStream=org.apache.lucene.util.PrintStreamInfoStream\nmergePolicy=[TieredMergePolicy: maxMergeAtOnce=41, maxMergeAtOnceExplicit=44, maxMergedSegmentMB=6.255859375, floorSegmentMB=0.38671875, forceMergeDeletesPctAllowed=4.456652110760543, segmentsPerTier=31.0, maxCFSSegmentSizeMB=8.796093022207999E12, noCFSRatio=0.877330376985384\nindexerThreadPool=org.apache.lucene.index.DocumentsWriterPerThreadPool@257ebcdb\nreaderPooling=true\nperThreadHardLimitMB=1945\nuseCompoundFile=true\ncommitOnClose=true\nindexSort=null\ncheckPendingFlushOnUpdate=true\nsoftDeletesField=null\nwriter=org.apache.lucene.index.IndexWriter@17b77ed5\n\nIW 0 [2018-04-06T19:27:27.194085Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: MMapDirectory.UNMAP_SUPPORTED=true\nIW 0 [2018-04-06T19:27:27.194347Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: now flush at close\nIW 0 [2018-04-06T19:27:27.194630Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]:   start flush: applyAllDeletes=true\nIW 0 [2018-04-06T19:27:27.194864Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]:   index before flush _0(8.0.0):C1:fieldInfosGen=1:dvGen=1\nDW 0 [2018-04-06T19:27:27.194964Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: startFullFlush\nDW 0 [2018-04-06T19:27:27.195096Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD] finishFullFlush success=true\nIW 0 [2018-04-06T19:27:27.195181Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: now apply all deletes for all segments buffered updates bytesUsed=0 reader pool bytesUsed=0\nBD 0 [2018-04-06T19:27:27.195260Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: waitApply: no deletes to apply\nIW 0 [2018-04-06T19:27:27.195330Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: waitForMerges\nIW 0 [2018-04-06T19:27:27.195385Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: waitForMerges done\nIW 0 [2018-04-06T19:27:27.195448Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: commit: start\nIW 0 [2018-04-06T19:27:27.195504Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: commit: enter lock\nIW 0 [2018-04-06T19:27:27.195560Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: commit: now prepare\nIW 0 [2018-04-06T19:27:27.195779Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: prepareCommit: flush\nIW 0 [2018-04-06T19:27:27.195873Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]:   index before flush _0(8.0.0):C1:fieldInfosGen=1:dvGen=1\nDW 0 [2018-04-06T19:27:27.195954Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: startFullFlush\nIW 0 [2018-04-06T19:27:27.196076Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: now apply all deletes for all segments buffered updates bytesUsed=0 reader pool bytesUsed=0\nBD 0 [2018-04-06T19:27:27.196170Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: waitApply: no deletes to apply\nDW 0 [2018-04-06T19:27:27.196299Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD] finishFullFlush success=true\nIW 0 [2018-04-06T19:27:27.196382Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: startCommit(): start\nIW 0 [2018-04-06T19:27:27.196455Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]:   skip startCommit(): no changes pending\nIW 0 [2018-04-06T19:27:27.196542Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: commit: pendingCommit == null; skip\nIW 0 [2018-04-06T19:27:27.196717Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: commit: took 0.8 msec\nIW 0 [2018-04-06T19:27:27.196791Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: commit: done\nIW 0 [2018-04-06T19:27:27.196950Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: rollback\nIW 0 [2018-04-06T19:27:27.197032Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: all running merges have aborted\nIW 0 [2018-04-06T19:27:27.197326Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: rollback: done finish merges\nDW 0 [2018-04-06T19:27:27.197411Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: abort\nDW 0 [2018-04-06T19:27:27.197486Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: done abort success=true\nIW 0 [2018-04-06T19:27:27.197605Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: rollback: infos=_0(8.0.0):C1:fieldInfosGen=1:dvGen=1\nIFD 0 [2018-04-06T19:27:27.197706Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: now checkpoint \"_0(8.0.0):C1:fieldInfosGen=1:dvGen=1\" [1 segments ; isCommit = false]\nIFD 0 [2018-04-06T19:27:27.197837Z; TEST-TestAddIndexes.testAddIndexesDVUpdate-seed#[9F04EE6B720B6BFD]]: 0 msec to checkpoint\n\njava.nio.file.NoSuchFileException: _0_1.fnm in dir=RAMDirectory@79d3c690 lockFactory=org.apache.lucene.store.SingleInstanceLockFactory@795a0c8b\n\n\tat __randomizedtesting.SeedInfo.seed([9F04EE6B720B6BFD:E6EC23304E67E247]:0)\n\tat org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:750)\n\tat org.apache.lucene.store.Directory.openChecksumInput(Directory.java:119)\n\tat org.apache.lucene.store.MockDirectoryWrapper.openChecksumInput(MockDirectoryWrapper.java:1072)\n\tat org.apache.lucene.codecs.lucene60.Lucene60FieldInfosFormat.read(Lucene60FieldInfosFormat.java:113)\n\tat org.apache.lucene.index.IndexWriter.readFieldInfos(IndexWriter.java:1207)\n\tat org.apache.lucene.index.IndexWriter.getFieldNumberMap(IndexWriter.java:1227)\n\tat org.apache.lucene.index.IndexWriter.<init>(IndexWriter.java:1114)\n\tat org.apache.lucene.index.TestAddIndexes.testAddIndexesDVUpdate(TestAddIndexes.java:1364)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1737)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:934)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:970)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:984)\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:368)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:817)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:468)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:943)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:829)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:879)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:890)\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:368)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\n\nNOTE: reproduce with: ant test  -Dtestcase=TestAddIndexes -Dtests.method=testAddIndexesDVUpdate -Dtests.seed=9F04EE6B720B6BFD -Dtests.slow=true -Dtests.badapples=true -Dtests.locale=es-HN -Dtests.timezone=Asia/Singapore -Dtests.asserts=true -Dtests.file.encoding=UTF-8\nNOTE: test params are: codec=FastDecompressionCompressingStoredFields(storedFieldsFormat=CompressingStoredFieldsFormat(compressionMode=FAST_DECOMPRESSION, chunkSize=8, maxDocsPerChunk=6, blockSize=201), termVectorsFormat=CompressingTermVectorsFormat(compressionMode=FAST_DECOMPRESSION, chunkSize=8, blockSize=201)), sim=Asserting(org.apache.lucene.search.similarities.AssertingSimilarity@55f3c81b), locale=es-HN, timezone=Asia/Singapore\nNOTE: Mac OS X 10.13.3 x86_64/Oracle Corporation 9.0.1 (64-bit)/cpus=4,threads=1,free=231833088,total=268435456\nNOTE: All tests run in this JVM: [TestAddIndexes]",
    "attachments": {
        "broken_dv_update.patch": "https://issues.apache.org/jira/secure/attachment/12917893/broken_dv_update.patch",
        "LUCENE-8243.patch": "https://issues.apache.org/jira/secure/attachment/12917898/LUCENE-8243.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16428833",
            "date": "2018-04-06T19:35:53+0000",
            "content": "this was found by Nhat Nguyen I just open the issue (https://github.com/dnhatn/) ",
            "author": "Simon Willnauer"
        },
        {
            "id": "comment-16428842",
            "date": "2018-04-06T19:40:52+0000",
            "content": "I'll dig ... ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-16428866",
            "date": "2018-04-06T20:02:59+0000",
            "content": "I just attached a patch that I think fixes the issue \u2013 the problem was IW.addIndexes(Directory[]) was creating a new SegmentCommitInfo for the copied segment, but was failing to preserve the files associated with doc values updates.\u00a0 All Lucene tests, and ant precommit pass. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-16428896",
            "date": "2018-04-06T20:21:32+0000",
            "content": "LGTM thanks mike! ",
            "author": "Simon Willnauer"
        },
        {
            "id": "comment-16429778",
            "date": "2018-04-08T14:49:57+0000",
            "content": "Hmm actually I'm worried about my fix: this method changes the name of segment, but my change just blindly copies the file names over (from old to new segment) w/o also updating the segment name?\u00a0 Maybe we need a better test that actually changes the segment name, to see this fix is not sufficient?\u00a0 I'll try. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-16429782",
            "date": "2018-04-08T15:13:55+0000",
            "content": "OK I attached new patch w/ a new test that does write a new segment name and it passes!\n\nIt turns out the SegmentCommitInfo APIs for setting the file names rewrite to their segment name, so it's a non issue.\n\nI'll push shortly. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-16429785",
            "date": "2018-04-08T15:15:09+0000",
            "content": "Commit 27ad64d672670d1ece372fbbb20847d6bd9f2a38 in lucene-solr's branch refs/heads/branch_7x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=27ad64d ]\n\nLUCENE-8243: fix IndexWriter.addIndexes(Directory[]) to properly preserve index file names for updated doc values fields ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16429795",
            "date": "2018-04-08T16:02:07+0000",
            "content": "Commit 99364584fffcb8352ca9cd566c3044ed04732582 in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9936458 ]\n\nLUCENE-8243: fix IndexWriter.addIndexes(Directory[]) to properly preserve index file names for updated doc values fields ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16430173",
            "date": "2018-04-09T07:17:56+0000",
            "content": "Commit 7140e432594b67a8d6c93d6bf7ae2103717263ed in lucene-solr's branch refs/heads/branch_7x from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7140e43 ]\n\nLUCENE-8243: Add original finder to the attribution list in the CHANGES.TXT ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16430174",
            "date": "2018-04-09T07:17:57+0000",
            "content": "Commit a49543b48aaec44c0735f6f41e6e455354720b9c in lucene-solr's branch refs/heads/master from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a49543b ]\n\nLUCENE-8243: Add original finder to the attribution list in the CHANGES.TXT ",
            "author": "ASF subversion and git services"
        }
    ]
}