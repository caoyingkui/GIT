{
    "id": "LUCENE-3212",
    "title": "Supply FilterIndexReader based on any o.a.l.search.Filter",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/index",
            "core/search"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "When coding LUCENE-2919 (PKIndexSplitter), Mike and me had the idea, how to effectively apply filters on the lowest level (before query execution). This is very useful for e.g. security Filters that simply hide some documents. Currently when you apply the filter after searching, lots of useless work was done like scoring filtered documents, iterating term positions (for Phrases),...\n\nThis patch will provide a FilterIndexReader subclass (4.0 only, 3.x is too complicated to implement), that hides filtered documents by returning them in getDeletedDocs(). In contrast to LUCENE-2919, the filtering will work on per-segment (without SlowMultiReaderWrapper), so per segment search keeps available and reopening can be done very efficient, as the filter is only calculated on openeing new or changed segments.\n\nThis filter should improve use-cases where the filter can be applied one time before all queries (like security filters) on (re-)opening the IndexReader.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2011-06-26T12:15:37+0000",
            "content": "I think this is idea is similar to the CachedFilterIndexReader on LUCENE-1536?  See https://issues.apache.org/jira/browse/LUCENE-1536?focusedCommentId=12908914&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12908914 ",
            "author": "Michael McCandless",
            "id": "comment-13055061"
        },
        {
            "date": "2011-06-26T16:41:20+0000",
            "content": "It's similar, but I dont understand the impl there. I would simply override getDeletedDocs to return the deleted docs ored with the filtered. Then you dont need to override terms() and fields(). ",
            "author": "Uwe Schindler",
            "id": "comment-13055116"
        },
        {
            "date": "2011-06-26T18:32:06+0000",
            "content": "That's a good point \u2013 I'm not sure why I didn't just override getDeletedDocs!  It seems like that should work fine. ",
            "author": "Michael McCandless",
            "id": "comment-13055146"
        },
        {
            "date": "2011-06-26T21:25:31+0000",
            "content": "I don't think, this issue is obsolete with LUCENE-1536:\nIf you have one filter thats e.g. applied for one user every time, maybe for all his queries, it can live as long as the SegmentReader lives. So simply wrapping the IndexReader with a Filter has much more flexibility, as its done one time on creating the IndexReader - so I think, this filter could additionally live in contrib. If we have RandomAccessFilters, this one and also PKIndexSplitter (which will only use this FIR and drop its own impl) can directly use the Bits supplied by the Filter's DocIdSet. ",
            "author": "Uwe Schindler",
            "id": "comment-13055185"
        },
        {
            "date": "2011-10-30T15:36:32+0000",
            "content": "LUCENE-1536 superceedes this. ",
            "author": "Uwe Schindler",
            "id": "comment-13139646"
        }
    ]
}