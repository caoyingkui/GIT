{
    "id": "LUCENE-1699",
    "title": "Field tokenStream should be usable with stored fields.",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "2.9"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Field.tokenStream should be usable for indexing even for stored values.  Useful for many types of pre-analyzed values (text/numbers, etc)\nhttp://search.lucidimagination.com/search/document/902bad4eae20bdb8/field_tokenstreamvalue",
    "attachments": {
        "LUCENE-1699.patch": "https://issues.apache.org/jira/secure/attachment/12410847/LUCENE-1699.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-06-16T20:13:10+0000",
            "content": "incomplete patch for feedback - needs tests and further work to allow binary field values with token streams (I assume this would be desirable for numeric fields). ",
            "author": "Yonik Seeley",
            "id": "comment-12720324"
        },
        {
            "date": "2009-06-16T21:02:21+0000",
            "content": "Another 2.9 huh? You own it then  ",
            "author": "Mark Miller",
            "id": "comment-12720348"
        },
        {
            "date": "2009-06-16T21:07:16+0000",
            "content": "Watch out - there's a new sheriff in town! ",
            "author": "Yonik Seeley",
            "id": "comment-12720352"
        },
        {
            "date": "2009-06-16T21:10:07+0000",
            "content": "This group could develop hard for the rest of the year no problem by the looks. Someones got to herd these cats. Since we last semi decided it would be a good idea to release 2.9, we have rewritten half the core code base  ",
            "author": "Mark Miller",
            "id": "comment-12720353"
        },
        {
            "date": "2009-06-17T09:20:47+0000",
            "content": "\nPatch looks good:\n\n\n\tCan you make sure CHANGES describes this new behavior (Field is\n    allowed to have both a tokenStream and a String/Reader/binary\n    value)?\n\n\n\n\n\tThe javadoc for readerValue is wrong (copy/paste from stringValue)\n\n\n\n\n\tCan you spell out more clearly in the javadocs that even when a\n    tokenStream value is set, one of String/Reader/binary may also be\n    set, or, not, and if so, that \"other\" value is only used for\n    stored fields.  Eg, explain why one would use setTokenStream\n    instead of setValue(TokenStream value).\n\n ",
            "author": "Michael McCandless",
            "id": "comment-12720578"
        },
        {
            "date": "2009-06-20T19:28:42+0000",
            "content": "Patch attached.\n\nI've attempted to clean up some of the semantics of Fieldable - it's really a reasonable interface, with just a few redundancies (isBinary/getBinary).  I've purposely avoided messing with Field more than necessary (adding yet more constructors, constants, etc).\n\nThis change is back compatible as it just removes some unnecessary restrictions.  I'll commit in a few days. ",
            "author": "Yonik Seeley",
            "id": "comment-12722249"
        },
        {
            "date": "2009-06-22T23:07:38+0000",
            "content": "committed. ",
            "author": "Yonik Seeley",
            "id": "comment-12722886"
        }
    ]
}