{
    "id": "SOLR-10209",
    "title": "UI: Convert all Collections api calls to async requests, add new features/buttons",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "Admin UI"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "We are having discussion on multiple jiras for requests for Collections apis from UI and how to improve them:\n\nSOLR-9818: Solr admin UI rapidly retries any request(s) if it loses connection with the server\nSOLR-10146: Admin UI: Button to delete a shard\nSOLR-10201: Add Collection \"creates collection\", \"Connection to Solr lost\", when replicationFactor>1\n\nProposal =>\n\nPhase 1:\n\nConvert all Collections api calls to async requests and utilise REQUESTSTATUS to fetch the information. There will be performance hit, but the requests will be safe and sound. A progress bar will be added for request status.\n\n> submit the async request\nif (the initial call failed or there was no status to be found)\n{ report an error and suggest the user look check their system before resubmitting the request. Bail out in this case, no retries, no attempt to drive on. }\nelse\n{ put up a progress indicator while periodically checking the status, Continue spinning until we can report the final status. }\n\n\n\nPhase 2:\n\nAdd new buttons/features to collections.html\n\na) \"Split\" shard\nb) \"Delete\" shard\nc) \"Backup\" collection\nd) \"Restore\" collection\n\nOpen to suggestions and feedbacks on this.",
    "attachments": {
        "SOLR-10209-v1.patch": "https://issues.apache.org/jira/secure/attachment/12854927/SOLR-10209-v1.patch",
        "SOLR-10209.patch": "https://issues.apache.org/jira/secure/attachment/12855859/SOLR-10209.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-02-27T16:50:27+0000",
            "content": "Phase 1: \n\nSOLR-10209-v1.patch uploaded introducing collections.js::asyncRequestStatus, incorporated to collections.js::addCollection.\nIn this patch:\n\n\tmodified:   solr/webapp/web/js/angular/controllers/collections.js\n\tmodified:   solr/webapp/web/js/angular/services.js\n\n\nHandled success for addCollection async call, need to check where to display fails, unresponsiveness etc.\nPerformance hit: taking more time than sync call (approx 1-3 sec on local machine) to display the new collection added.\n\nWorking on converting the remaining Collections api to async, progress bar and improvements. ",
            "author": "Amrit Sarkar",
            "id": "comment-15886103"
        },
        {
            "date": "2017-03-07T07:20:27+0000",
            "content": "Need advice on the following:\n\nWe were solving two problems in this:\n1. Indefinite retires of the API calls when the server goes down without completing the request\n2. Don't say the connection is lost if the API is taking more than 10 sec.\n\n(2) is done and good to go, I am working on elegant progress bar so that it can accommodate more than one call at single time.\nFor (1), we are heading towards greater problems as earlier the original API call was replicated, now in addition REQUESTSTATUS api is clinging on with it and now two APIs are filling the network call list.\n\nThere is no way to fix it other than we change the base js file i.e. app.js. This means we will change how the API calls are made in other pages e.g. cloud, core, mbeans etc. I intend not to change the base js file, and suggestions will be deeply appreciated on this. ",
            "author": "Amrit Sarkar",
            "id": "comment-15898867"
        },
        {
            "date": "2017-03-15T11:46:43+0000",
            "content": "Going forward with:\n\nDon't say the connection is lost if the API is taking more than 10 sec\n\nfor now.\n\nWill see what to do with the indefinite retries. ",
            "author": "Amrit Sarkar",
            "id": "comment-15925966"
        },
        {
            "date": "2017-04-26T15:43:03+0000",
            "content": "Been a while posted any update on this.\n\nWith the existing UI code, it is little challenging incorporating a new message box, floating preferred, to show current status, as we intend to refresh the entire scope at the end of each request. I intend to change that specially for heavy APIs and post full and final patch within a week. ",
            "author": "Amrit Sarkar",
            "id": "comment-15985027"
        },
        {
            "date": "2018-05-09T23:13:16+0000",
            "content": "Looking forward to this, seeing such behaviour with thousands of request when developing for the Admin UI. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16469655"
        },
        {
            "date": "2018-09-11T23:17:51+0000",
            "content": "Hi Amrit Sarkar, any plans to move this forward? Would be great to have a UI for doing collection backup/restore etc. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16611368"
        },
        {
            "date": "2018-09-14T13:23:28+0000",
            "content": "Hi Jan H\u00f8ydahl , thank you for noticing this Jira and improvement. I agree it would be nice to have a simple synchronous option for Backup & Restore.\n\nUnfortunately, I lost track of what I was doing a year ago but can definitely work on this somewhere after mid-October (Activate'18). Else happy and comfortable with fellow contributors and committers taking it forward. ",
            "author": "Amrit Sarkar",
            "id": "comment-16614832"
        }
    ]
}