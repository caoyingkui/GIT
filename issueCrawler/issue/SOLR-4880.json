{
    "id": "SOLR-4880",
    "title": "ClientUtils#toSolrInputDocument(SolrDocument d) creates shallow copy for multivalued fields",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [
            "3.6"
        ],
        "components": [
            "clients - java"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Multivalued fields are represented in SolrDocument as java.util.Collection.\nClientUtils#toSolrInputDocument(SolrDocument d) creates shallow copy of the collections in resulted SolrInputDocument.\nThat means that changes to resulted instance (i.e. adding/removing records) affect original instance as well, which is bad.\n\nExpected Behaviour: Deep copy of collections should be created. Changes to resulted instance shouldn't affect original instance\n\nPossible Implementation:\n\npublic static SolrInputDocument toSolrInputDocument(final SolrDocument solrDocument) {\n    final Map<String,SolrInputField> fields = new LinkedHashMap<String,SolrInputField>();\n    return toSolrInputDocument(solrDocument, fields);\n}\n\npublic static SolrInputDocument toSolrInputDocument(final SolrDocument solrDocument, final Map<String,SolrInputField> fields) {\n    final SolrInputDocument result = new SolrInputDocument(fields);\n    for(final Map.Entry<String, Object> entry : solrDocument.entrySet()) {\n        if(entry.getValue() instanceof Collection) {\n            result.setField(entry.getKey(), new ArrayList<Object>((Collection<Object>) entry.getValue()));\n        } else {\n            result.setField(entry.getKey(), entry.getValue());\n        }\n    }\n    return result;\n}\n\n\n\nNote: Believe the same issue is true for ClientUtils#toSolrDocument(SolrInputDocument d)",
    "attachments": {},
    "issue_links": {},
    "comments": []
}