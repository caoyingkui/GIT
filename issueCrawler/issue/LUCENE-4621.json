{
    "id": "LUCENE-4621",
    "title": "FacetIndexing/SearchParams house cleaning",
    "details": {
        "components": [
            "modules/facet"
        ],
        "fix_versions": [
            "4.1",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "Improvement",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "FacetIndexingParams lets you configure few things such as OrdinalPolicy, PathPolicy and partitionSize. However, in order to set them you must extend DefaultFacetIndexingParams and override fixedXY(), as the respective getters are final.\n\nI'd like to do the following:\n\n\tTurn FacetIndexingParams and FacetSearchParams into concrete classes, rather than interfaces. The reason they are interfaces because one app once wants to have one class which implements both. Since FSP holds FIP, I don't think that's needed.\n\n\n\n\n\tAdd setters to FacetIndexingParams for the relevant configuration parameters, rather than forcing someone to extend the class. Extensions should really be for special cases, which we haven't identified so far (except overriding these settings), hence why there's only DefaultFIP/FSP.\n\n\n\n\n\tAdd some javadocs...\n\n\n\n\n\tI'm sure, w/ my pedantic and perfectionist nature, that more thing will be done once I get to it .",
    "attachments": {
        "LUCENE-4621.patch": "https://issues.apache.org/jira/secure/attachment/12560743/LUCENE-4621.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-12-13T09:44:55+0000",
            "content": "Patch does the following:\n\n\n\tFacetIndexingParams is now a concrete class rather than interface, and folds in DefaultFIP.\n\n\n\n\n\tThe entire IndexingParams chain is now immutable. You can pass the CategoryListParams at construction time, but for overriding the rest of the parameters, you need to extend one of the classes in the chain.\n\n\n\n\n\tAdded FIP.ALL_PARENTS as a singleton. If we'll have a decent solution for NO_PARENTS, we should add such singleton too. I figure that what users would like to change would be the OrdinalPolicy, so this constant is a conveniency for not allocating FIP().\n\n\n\nThe chain of indexing params is now:\n\n\tFacetIndexingParams: either use a default CategoryListParams or set your own.\n\t\n\t\tPerDimensionIndexingParams: allows you to specify a mapping from a CategoryPath to CategoryListParams.\n\t\t\n\t\t\tEnhancementsIndexingParams: for indexing category associations. Note, even before this change that class extended PerDimensionIP.\n\t\t\n\t\t\n\t\n\t\n\n\n\nFacetIP has a scary equals() and hashCode() implementations. Not sure why do we need them, i.e. do we put them in a map? Anyway, this should not block the commit.\n\nAll tests pass, I think it's ready. ",
            "author": "Shai Erera",
            "id": "comment-13530832"
        },
        {
            "date": "2012-12-13T09:50:27+0000",
            "content": "FacetSearchParams could also be made immutable, by eliminating addFacetRequest and setClCache. I saw that it might be an issue with the tests, so I'll check if this can be done cleanly. Basically I think it's doable, I'll do it now. ",
            "author": "Shai Erera",
            "id": "comment-13530837"
        },
        {
            "date": "2012-12-13T11:13:49+0000",
            "content": "Updated patch makes FacetSearchParams immutable too. Now all FacetRequests must be specified at construction. For convenience I added these ctors:\n\n\n\tFSP(FacetRequest...) - default indexing params, useful for one or two requests.\n\n\n\n\n\tFSP(List<FacetRequest>) - default indexing params, useful when you need to build a list of requests, because e.g. you don't know how many you'll get.\n\n\n\n\n\tFSP(List<FacetRequest>, FacetIP> - if you want to use custom indexing params, you need to construct a list.\n\n\n\nYou can no longer set CategoryListCache, you need to override. But with all the changes happening (cutting over to DV), I suspect that this method will be nuked completely, soon.\n\nFacetSP do not allow empty requests. That caused trouble in PartitionUtils because it exposed methods that take FSP, but only delegate to FIP methods. I nuked the FSP methods, whoever uses partitions should understand that he can call fsp.getFIP(). The problem was that some places just called PartitionUtils w/ an empty FSP, just because you could initialize one.\n\nI think this is ready. Would be glad if someone took a quick look at FSP, FIP and its chain, see if you think it can be improved somehow. ",
            "author": "Shai Erera",
            "id": "comment-13530903"
        },
        {
            "date": "2012-12-13T11:41:40+0000",
            "content": "Patch looks good. One question - there is a ctor of FIP whose Javadoc states: \"You should use this constructor only if you intend to override any of the getters\". Shouldn't it be protected? ",
            "author": "Sivan Yogev",
            "id": "comment-13530919"
        },
        {
            "date": "2012-12-13T11:51:17+0000",
            "content": "Thanks for the review !\n\nThat comment is meant more to direct user's attention to the constant. If I'd make it protected, then you couldn't do:\n\n\nFacetIndexingParams fip = new FacetIndexParams() {\n  @Override\n  public int getPartitionSize() { return size; }\n}\n\n\n\nThis patter is easy and used in tests, as well as I used it in some code that I wrote. It doesn't force you to actually declare a class. ",
            "author": "Shai Erera",
            "id": "comment-13530925"
        },
        {
            "date": "2012-12-13T11:54:46+0000",
            "content": "OK, ready to commit from my side. ",
            "author": "Sivan Yogev",
            "id": "comment-13530929"
        },
        {
            "date": "2012-12-13T12:18:57+0000",
            "content": "This patch looks like a great cleanup! ",
            "author": "Michael McCandless",
            "id": "comment-13530943"
        },
        {
            "date": "2012-12-13T12:40:18+0000",
            "content": "[trunk commit] Shai Erera\nhttp://svn.apache.org/viewvc?view=revision&revision=1421256\n\nLUCENE-4621: FacetIndexing/SearchParams house cleaning ",
            "author": "Commit Tag Bot",
            "id": "comment-13530961"
        },
        {
            "date": "2012-12-13T12:52:26+0000",
            "content": "[branch_4x commit] Shai Erera\nhttp://svn.apache.org/viewvc?view=revision&revision=1421262\n\nLUCENE-4621: FacetIndexing/SearchParams house cleaning ",
            "author": "Commit Tag Bot",
            "id": "comment-13530969"
        },
        {
            "date": "2012-12-13T12:53:46+0000",
            "content": "Committed to trunk and 4x. ",
            "author": "Shai Erera",
            "id": "comment-13530973"
        }
    ]
}