{
    "id": "LUCENE-5080",
    "title": "CMS setters cannot work unless you setMaxMergeCount before you setMaxThreadCount",
    "details": {
        "components": [],
        "fix_versions": [
            "4.4",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "public void setMaxThreadCount(int count) {\n    ...\n    if (count > maxMergeCount) {\n      throw new IllegalArgumentException(\"count should be <= maxMergeCount (= \" + maxMergeCount + \")\");\n    }\n\n\n\nbut:\n\n\n   public void setMaxMergeCount(int count) {\n    ...\n    if (count < maxThreadCount) {\n      throw new IllegalArgumentException(\"count should be >= maxThreadCount (= \" + maxThreadCount + \")\");\n    }\n\n\n\nSo you must call them in a magical order. I think we should nuke these setters and just have a CMS(int,int)",
    "attachments": {
        "LUCENE-5080.patch": "https://issues.apache.org/jira/secure/attachment/12590127/LUCENE-5080.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-06-27T16:24:15+0000",
            "content": "+1 ",
            "author": "Michael McCandless",
            "id": "comment-13694841"
        },
        {
            "date": "2013-06-27T17:43:43+0000",
            "content": "The only concern I have is that someone may want to dynamically set that based on some overall application workload. Since MS is on LiveIWC, it's fine cause you can reset to a new CMS instance. But in that case what will happen to the other CMS which loops until IW has no more merges? Is that ok?\n\nMaybe instead we can have CMS.reset(int,int) to avoid that case? ",
            "author": "Shai Erera",
            "id": "comment-13694911"
        },
        {
            "date": "2013-06-28T23:54:41+0000",
            "content": "\nMaybe instead we can have CMS.reset(int,int) to avoid that case?\n\nFine by me. if we decide we dont like it later, we can just remove it. ",
            "author": "Robert Muir",
            "id": "comment-13695939"
        },
        {
            "date": "2013-06-29T00:17:15+0000",
            "content": "here's my patch. To address Shai's concern, i just combined the two setters into one and didnt do any ctors (that would sorta be redundant with the combined-setter, and i dont like the name reset).\n\nAdditionally i made the defaults public constants. ",
            "author": "Robert Muir",
            "id": "comment-13695961"
        },
        {
            "date": "2013-06-29T00:58:37+0000",
            "content": "updated patch: some solr tests depended on these previous setters with reflection. ",
            "author": "Robert Muir",
            "id": "comment-13695987"
        },
        {
            "date": "2013-06-29T01:29:09+0000",
            "content": "I committed the new setter. If someone is unhappy about the name, i won't be offended, we can change it.\n\nAt least jenkins will have a nice weekend in the meantime. ",
            "author": "Robert Muir",
            "id": "comment-13696004"
        },
        {
            "date": "2013-06-30T05:20:03+0000",
            "content": "+1 looks good. Thanks Rob! ",
            "author": "Shai Erera",
            "id": "comment-13696274"
        },
        {
            "date": "2013-07-23T18:37:02+0000",
            "content": "Bulk close resolved 4.4 issues ",
            "author": "Steve Rowe",
            "id": "comment-13716724"
        }
    ]
}