{
    "id": "LUCENE-1398",
    "title": "Add ReverseStringFilter",
    "details": {
        "labels": "",
        "priority": "Trivial",
        "components": [
            "modules/analysis"
        ],
        "type": "New Feature",
        "fix_versions": [
            "2.9"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "add ReverseStringFilter and ReverseStringAnalyzer that can be used for backword much. For Example, \"*ry\", \"*ing\", \"*ber\".",
    "attachments": {
        "LUCENE-1398.patch": "https://issues.apache.org/jira/secure/attachment/12390607/LUCENE-1398.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2008-09-22T06:35:00+0000",
            "content": "Patch attached. The patch includes a new constructor of PrefixQuery:\n\n\npublic PrefixQuery(Term prefix, boolean reverse) {\n  if(reverse){\n    String s = prefix.text();\n    int len = s.length();\n    if( len <= 1 ){\n      this.prefix = prefix;\n      return;\n    }\n    StringBuffer sb = new StringBuffer(len);\n    for( int i = 0; i < len; i++ ){\n      sb.append( s.charAt( len - i - 1 ) );\n    }\n    this.prefix = new Term(prefix.field(),sb.toString());\n  }\n  else\n    this.prefix = prefix;\n  }\n\n\n\nso that you can extend PrefixQuery to have SuffixQuery:\n\n\nclass SuffixQuery extends PrefixQuery {\n  public SuffixQuery( Term term ){\n    super( term, true );\n  }\n}\n\n ",
            "author": "Koji Sekiguchi",
            "id": "comment-12633157"
        },
        {
            "date": "2009-02-03T19:48:13+0000",
            "content": "I like the idea of adding this, but I almost think it might best live in contrib. Thats slightly at odds with the prefix query addition - but I'm not sure that really helps you to integrate the solution generally into the query language anyway - it just reverses the term. I think it might be better to leave that to the user, as its likely to remain a special case anyway. I'd rather even do something like a util reverse method.\n\nSo I'll hold out for a wiser opinion, but my initial thought would be to not add to prefixquery, and put the the analyzer in contrib ",
            "author": "Mark Miller",
            "id": "comment-12670080"
        },
        {
            "date": "2009-02-19T03:17:06+0000",
            "content": "Thanks Mark for the comment and sorry for late reply. Move it to contrib. ",
            "author": "Koji Sekiguchi",
            "id": "comment-12674876"
        },
        {
            "date": "2009-02-19T16:03:27+0000",
            "content": "I don't know how others feel, but I'd personally like to stop the practice of making more Analyzer classes whenever a new TokenFilter is added.\n\nThis patch looks like it could/should be a single class (other than test of course): ReverseTokenFilter.  The static reverse() methods could be put directly on that filter. ",
            "author": "Yonik Seeley",
            "id": "comment-12675020"
        },
        {
            "date": "2009-02-25T13:08:50+0000",
            "content": "\nI don't know how others feel, but I'd personally like to stop the practice of making more Analyzer classes whenever a new TokenFilter is added.\n\nThis patch looks like it could/should be a single class (other than test of course): ReverseTokenFilter. The static reverse() methods could be put directly on that filter.\n\nNo problem for me.  Done. ",
            "author": "Koji Sekiguchi",
            "id": "comment-12676641"
        },
        {
            "date": "2009-02-25T20:44:42+0000",
            "content": "Thanks, I just committed this. ",
            "author": "Yonik Seeley",
            "id": "comment-12676768"
        }
    ]
}