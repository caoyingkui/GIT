{
    "id": "SOLR-12292",
    "title": "Make it easier to configure Solr with CORS",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "Server"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "While working on SOLR-8207 I wanted to collect info from other SolrCloud nodes from the AdminUI. However this is blocked by CORS\u00a0policy. In that Jira I instead did the fan-out on the Solr server side for the two handler I needed.\n\nIt would be nice if all nodes in a SolrCloud cluster could automatically accept any other node as a legal origin, and make it easy for users to add other origins by config.\n\nIf we use the Jetty CORS filter\u00a0in web.xml, perhaps we could parse a env.var from solr.in.xx and inject into the allowedOrigins property of that filter? There is also SOLR-6059 which tries to implement CORS inside of Solr handlers and not in Jetty. Don't know pros/cons of those.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2018-05-01T16:34:20+0000",
            "content": "Even though this issue is explicitly about admin calls, I want to say that IMO SearchHandler requests ought to have CORS headers that by default allow any origin.  After all we already support jsonp and thus search requests are effectively exposed to any host already. ",
            "author": "David Smiley",
            "id": "comment-16459830"
        },
        {
            "date": "2018-05-04T21:26:21+0000",
            "content": "JSONP is read-only though. So, it exposes less than CORS.\n\nIF CORS is open than any webpage can hit the localhost and possibly inject stuff, creating a local exploit.\u00a0\n\nThis may be possible with our implementation of JSONP as well, but the risk surface is much smaller. ",
            "author": "Alexandre Rafalovitch",
            "id": "comment-16464413"
        },
        {
            "date": "2018-05-04T22:19:01+0000",
            "content": "From the Jetty CORS filter docs at https://www.eclipse.org/jetty/documentation/9.4.x/cross-origin-filter.html , it supports restricting on HTTP method, so would restricting to just GET be sufficient? (Not sure of the exact requests needed).  ",
            "author": "Michael Braun",
            "id": "comment-16464451"
        },
        {
            "date": "2018-05-05T02:10:13+0000",
            "content": "Even with POST, what good would that do to a SearchHandler? ",
            "author": "David Smiley",
            "id": "comment-16464569"
        },
        {
            "date": "2018-05-08T23:46:17+0000",
            "content": "If we make it easy enough to configure CORS origins, we don't need to have it open for all origins by default, we can pre-configure for all nodes in same cluster to enable Admin UI access.\n\nPerhaps this could be a new clusterProp corsOrigins,\u00a0taking a comma separated list of valid origins? Then we already have the infrastructure to edit the list, through the CLUSTERPROP API and zkcli.sh. We could add an AdminUI edit screen too if we want. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16468116"
        }
    ]
}