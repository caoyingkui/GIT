{
    "id": "SOLR-8226",
    "title": "Is a SocketTimeoutException really a reliable indicator of a zombie in LBHttpSolrClient?",
    "details": {
        "components": [
            "SolrJ"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "In LBHttpSolrClient, we do:\n\n\n } catch (SocketTimeoutException e) {\n395\t      if (!isUpdate) {\n396\t        ex = (!isZombie) ? addZombie(client, e) : e;\n397\t      } else {\n398\t        throw e;\n399\t      }\n\n\n\nIf I have a reasonably low socket timeout configured for my HttpShardHandlerFactory and we hit a slow query, then a perfectly healthy replica gets put into the zombie list, and potentially creating a herd effect on my other replicas as there is now one less replica in the rotation. Moreover, HttpShardHandlerFactory does not let me configure the check interval for adding zombies back into rotation, so a potentially healthy replica is out of rotation for a full minute. At the very least, the interval should be configurable for the HttpShardHandlerFactory, but we should also strive to differentiate between a slow response and a true zombie.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}