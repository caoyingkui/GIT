{
    "id": "LUCENE-4300",
    "title": "BooleanQuery inconsistently applies coord() if it rewrites itself",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "4.0",
            "3.6.2",
            "6.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Tripped by the new random sim from LUCENE-4297:\n\nThe basics are this:\n\n\tBooleanQuery has the following rewrite():\n\n  public Query rewrite(IndexReader reader) throws IOException {\n    if (minNrShouldMatch == 0 && clauses.size() == 1) {                    // optimize 1-clause queries\n\n\n\n\n\n\n\tyou have a coord() impl that doesnt return 1.0 if overlap == maxOverlap, particularly:\n\nreturn overlap / ((float)maxOverlap + 1);\n\n\n\n\n\n\n\tTestBooleanMinShouldMatch.testRandomQueries generates random boolean queries (Q1), then compares the scores of the random query to the same query but with minNrShouldmatch applied to its should clauses (Q2)\n\n\n\n\n\tin the case of a single term BQ, the rewrite applies to Q1, making it a term query, but not to Q2. so the coord() only gets called for Q2, not Q1. and with this crazy coord it means the scores are different.\n\n\n\nI think the rewrite is wrong, we should also rewrite single-query BQs where minNrShouldMatch = 1 and there is a single optional clause.",
    "attachments": {
        "LUCENE-4300.patch": "https://issues.apache.org/jira/secure/attachment/12540155/LUCENE-4300.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-08-09T23:53:46+0000",
            "content": "here's a patch. Ill make a standalone test. ",
            "author": "Robert Muir",
            "id": "comment-13432309"
        },
        {
            "date": "2012-08-10T00:17:49+0000",
            "content": "here's an alternative patch. \n\nAfter doing some tests, I think its too tricky to apply this coord factory consistently in BS2 when there might also be prohibited clauses: so wiring it to 1 this way when maxOverlap == 1 is easiest. ",
            "author": "Robert Muir",
            "id": "comment-13432338"
        },
        {
            "date": "2012-08-10T10:36:36+0000",
            "content": "updated patch: I beefed up the random tests and also added 2 standalone tests (one for minNrShouldMatch == 1, the other for prohibited clauses). ",
            "author": "Robert Muir",
            "id": "comment-13432689"
        },
        {
            "date": "2013-05-10T10:34:07+0000",
            "content": "Closed after release. ",
            "author": "Uwe Schindler",
            "id": "comment-13654127"
        }
    ]
}