{
    "id": "SOLR-1807",
    "title": "UpdateHandler plugin is not fully supported",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "update"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "UpdateHandler is published as a supported Plugin, but code such as the following:\n\nif (core.getUpdateHandler() instanceof DirectUpdateHandler2) \n{\n            ((DirectUpdateHandler2) core.getUpdateHandler()).forceOpenWriter();\n          }\n else \n{\n            LOG.warn(\"The update handler being used is not an instance or sub-class of DirectUpdateHandler2. \" +\n                    \"Replicate on Startup cannot work.\");\n          }\n \n\nsuggest that it is really not fully supported.\n\nMust all implementations of UpdateHandler be subclasses of DirectUpdateHandler2 for it to work with replication?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12842369",
            "date": "2010-03-07T07:09:35+0000",
            "content": "UpdateHandler is an interface so instead of adding a method to it and breaking compatibility, we added it to the DirectUpdateHandler2 class. I guess the only way is to change the UpdateHandler interface. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12843356",
            "date": "2010-03-09T23:21:37+0000",
            "content": "No all plugin APIs are created equal ... some like TokenizerFactories are designed to be extended by lots of people, others werent' particularly well thought out abstractions in the first place, and your milage may vary when implementing them \u2013 feel free to post doc patches/suggestions to help make this more clear.\n\nas to the specific problem...\n\nEven if UpdateHandler had been an abstract class, at best we could have added a version of forceOpenWriter() that just threw an UnsupportedOpException \u2013 there's no \"default\" impl we could have provided that would have worked for any possible UpdateHandler subclass people might have written.\n\nThe best conceivable solution we probably could have come up with at the time would be to introduce a marker interface that UpdateHandlers could optionaly implement containing the APIs needed to support replication, and make the ReplicationHandler test the registered UpdateHandler on startup to see if it implements that API, and if not then throw an error.\n\nThis type of solution could still be implemented today, in place of the \"instanceof DirectUpdateHandler2\" ... particularly now that the code has been vetted a little bit by users and we have a pretty good idea of what type of functionality an UpdateHandler needs to support in order to play nice with ReplicationHandler.\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12843357",
            "date": "2010-03-09T23:23:06+0000",
            "content": "I guess the only way is to change the UpdateHandler interface.\n\nI almost think thats the lessor of two evils. While it breaks impls, those impls cannot fully work with Solr anyway. "
        },
        {
            "author": "John Wang",
            "id": "comment-12843362",
            "date": "2010-03-09T23:45:39+0000",
            "content": "I almost think thats the lessor of two evils. While it breaks impls, those impls cannot fully work with Solr anyway.\n\nI agree 100%\n\nReplicationHandler\n\nThis is a terrific idea. This separates the concern with indexing updating and replication.  "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-15539547",
            "date": "2016-10-02T02:17:08+0000",
            "content": "High-level code discussion that is long out of date. No next action. "
        }
    ]
}