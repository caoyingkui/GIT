{
    "id": "SOLR-10266",
    "title": "invalid assumptions about doc order in TestPointFields, masking test bug with date functions",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "6.5",
            "7.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "There are a bunch of places in TestPointFields where assertQ() is used to verify that many docs match a query and have particular values \u2013 but because of how the XPath expressions are written there are implicit assumptions about the order of the docs matching the order they were added to the index, which isn't always garunteed depending on the randomized merge policy that might be used.\n\nWhile fixing this, I also uncovered another test bug when checking DatePointField function sorting due to every doc having the same effective sort value",
    "attachments": {
        "SOLR-10266.patch": "https://issues.apache.org/jira/secure/attachment/12857371/SOLR-10266.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-03-10T18:54:00+0000",
            "content": "\nHere's the patch of what i've got so far, generally making 2 changes everywhere the test has an implicit assumption about the order docs would be returned:\n\n\n\tchange the order the test adds the docs in to be (effectively) be \"id desc\"\n\t\n\t\tthis forces solr's implicit default sort to mismatch the existing implicitly expected order (even if no funky merging happens) so the tests would fail reliably regardless of seed\n\t\n\t\n\tadd a sort by \"id asc\" everywhere the assertQ() calls had an implicit assumption that the results would be returned in \"id\" order\n\n\n\n(in a few places early on in my fixes, I also added some tighter asserts to the range query testing as well)\n\nthere is one nocommit in this patch, in doTestDatePointFunctionQuery...\n\nAFAICT something is really wrong with the first assertQ in this test \u2013 which is specifically about sorting by a function on the date point field (which also uses DocValues).\n\nEven w/o any of my changes, I can't see any reason why the doc order currently listed in this assert should be the expected doc order for the specified sort.  It looks backwards to me.  And when I flip the order the documents are added to the index, the actual order returned flips as well \u2013 suggesting that the sort by function is having no effect at all.\n\nThis suggests that sorting by function on DatePointField may not be working? ... either that or maybe the particular function used in this test isn't valid for date fields and results in identical values for all docs? (i've never tried usig product(...) on a date before)\n\n\n\nCao Manh Dat - i know you just added DatePointField support in SOLR-9986, can you please take a look at the nocommit in this patch? ",
            "author": "Hoss Man",
            "id": "comment-15905549"
        },
        {
            "date": "2017-03-11T01:48:35+0000",
            "content": "@Hoss : Sure! ",
            "author": "Cao Manh Dat",
            "id": "comment-15905994"
        },
        {
            "date": "2017-03-14T07:07:59+0000",
            "content": "Hoss Man I checked the test and you actually right. The test is badly written, It should change from \n\nassertQ(req(\"q\", \"*:*\", \"fl\", \"id, \" + dvFieldName, \"sort\", \"product(-1,\" + dvFieldName + \") asc\"),\n\n\nto\n\nassertQ(req(\"q\", \"*:*\", \"fl\", \"id, \" + dvFieldName, \"sort\", \"product(-1,ms(\" + dvFieldName + \",\"+baseDate+\")) desc\")\n\n\n\nBut the sorting by function on DatePointField still work. Because ProductFloatFunction is used for product() so the long value ( of date field ) will be converted into float before doing multiplication. It lead into losing some last decimals. So they will end up with same value 7.8973554E11 ",
            "author": "Cao Manh Dat",
            "id": "comment-15923703"
        },
        {
            "date": "2017-03-14T16:05:02+0000",
            "content": "ah ... ok \u2013 so the behavior i was seeing was just because all docs were getting the same (effective) sort value \u2013 after Double conversion.\n\nthat makes sense. ",
            "author": "Hoss Man",
            "id": "comment-15924474"
        },
        {
            "date": "2017-03-14T16:52:16+0000",
            "content": "Commit 5d7b83adbedaef429d0375d9b37c11bcff173500 in lucene-solr's branch refs/heads/branch_6x from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5d7b83a ]\n\nSOLR-10266: fix implicit test assumptions about doc order\n\n(cherry picked from commit 9417367b1afd404b944692d9947f78587e2b2d94) ",
            "author": "ASF subversion and git services",
            "id": "comment-15924555"
        },
        {
            "date": "2017-03-14T16:52:18+0000",
            "content": "Commit 9417367b1afd404b944692d9947f78587e2b2d94 in lucene-solr's branch refs/heads/master from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9417367 ]\n\nSOLR-10266: fix implicit test assumptions about doc order ",
            "author": "ASF subversion and git services",
            "id": "comment-15924556"
        },
        {
            "date": "2017-03-14T17:01:37+0000",
            "content": "updating summay & description ",
            "author": "Hoss Man",
            "id": "comment-15924568"
        }
    ]
}