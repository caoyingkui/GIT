{
    "id": "SOLR-10824",
    "title": "java.lang.NullPointerException ExactSharedStatsCache.getPerShardTermStats",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "search"
        ],
        "type": "Bug",
        "fix_versions": [
            "6.7",
            "7.0"
        ],
        "affect_versions": "6.6",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "INFO [qtp411311908-32] (SolrCore.java:2304) - [collection1_shard3_replica2]  webapp=/solr path=/select params=\nUnknown macro: {..&distrib=false&_stateVer_=collection1} \n status=0 QTime=18\nINFO [qtp2123780104-30] (SolrCore.java:2304) - [collection1_shard1_replica1] ...\n INFO [qtp411311908-45] (SolrCore.java:2304) - [collection1_shard2_replica1]  ...\n\nERROR [qtp411311908-33] (SolrException.java:148) - java.lang.NullPointerException\n\tat org.apache.solr.search.stats.ExactSharedStatsCache.getPerShardTermStats(ExactSharedStatsCache.java:76)\n\tat org.apache.solr.search.stats.ExactStatsCache.sendGlobalStats(ExactStatsCache.java:233)\n\tat org.apache.solr.handler.component.QueryComponent.createMainQuery(QueryComponent.java:930)\n\tat org.apache.solr.handler.component.QueryComponent.regularDistributedProcess(QueryComponent.java:726)\n\tat org.apache.solr.handler.component.QueryComponent.distributedProcess(QueryComponent.java:679)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:345)\n\n\n INFO [qtp411311908-33] (SolrCore.java:2304) - [collection1_shard3_replica2]  webapp=/solr path=/select params=\nUnknown macro: {...&wt=javabin&version=2} \n status=500 QTime=82\n\nSwitching to LRUStatsCache seems help.",
    "attachments": {
        "SOLR-10824.patch": "https://issues.apache.org/jira/secure/attachment/12873078/SOLR-10824.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-06-14T21:24:22+0000",
            "content": "Steps to reproduce:\n\n\tlaunched cloud example 4 nodes,\n\tcreated test collection 3x3 (my gut feeling is that it's caused by 3 replicas, at least it's reproduced when it's 3).\n\tindexed example docs\n\tadded <statsCache class=\"org.apache.solr.search.stats.ExactSharedStatsCache\"/> via zk downconfig/vim/zk upconfig\n\there we go\n\n<lst name=\"responseHeader\">\n  <bool name=\"zkConnected\">true</bool>\n  <int name=\"status\">500</int>\n  <int name=\"QTime\">14</int>\n  <lst name=\"params\">\n    <str name=\"q\">_text_:all</str>\n    <str name=\"indent\">on</str>\n    <str name=\"wt\">xml</str>\n    <str name=\"_\">1497475014424</str>\n  </lst>\n</lst>\n<lst name=\"error\">\n  <str name=\"trace\">java.lang.NullPointerException\n\tat org.apache.solr.search.stats.ExactSharedStatsCache.getPerShardTermStats(ExactSharedStatsCache.java:76)\n\tat org.apache.solr.search.stats.ExactStatsCache.sendGlobalStats(ExactStatsCache.java:233)\n\tat org.apache.solr.handler.component.QueryComponent.createMainQuery(QueryComponent.java:942)\n\tat org.apache.solr.handler.component.QueryComponent.regularDistributedProcess(QueryComponent.java:738)\n\tat org.apache.solr.handler.component.QueryComponent.distributedProcess(QueryComponent.java:691)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:346)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:173)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2477)\n\n\nWhat's your bets and opinions? \n\n ",
            "author": "Mikhail Khludnev",
            "id": "comment-16049672"
        },
        {
            "date": "2017-06-14T21:32:57+0000",
            "content": "Is this related to the speculation on the mailing lists that another prerequisite is that some of the shards do not happen to have documents on them?\n\nOr perhaps is it a problem if the query has zero hits on a particular shard? If this latter it should be pretty easy to reproduce by firing off, say, a query on a <uniqueKey>..... ",
            "author": "Erick Erickson",
            "id": "comment-16049687"
        },
        {
            "date": "2017-06-14T21:50:04+0000",
            "content": "Right, Erick Erickson. This is exactly the case. id query falls off   ",
            "author": "Mikhail Khludnev",
            "id": "comment-16049707"
        },
        {
            "date": "2017-06-15T08:09:02+0000",
            "content": "SOLR-10824.patch reproducer  ",
            "author": "Mikhail Khludnev",
            "id": "comment-16050128"
        },
        {
            "date": "2017-06-15T08:23:48+0000",
            "content": "copypasting NPE check from LRUStatsCache but now id:5 query fails with score mismatch for all three Test*StatsCache tests.\n ",
            "author": "Mikhail Khludnev",
            "id": "comment-16050147"
        },
        {
            "date": "2017-06-15T10:26:27+0000",
            "content": "I don't understand how it may work at all: \n\n======================= Control Response =======================\n1.6931472 = weight(id:`\b\u0002 in 2) [MockConfigurableSimilarity], result of:\n  1.6931472 = fieldWeight in 2, product of:\n    1.0 = tf(freq=1.0), with freq of:\n      1.0 = termFreq=1.0\n    1.6931472 = idf, computed as log((docCount+1)/(docFreq+1)) + 1 from:\n      1.0 = docFreq\n      3.0 = docCount\n    1.0 = fieldNorm(doc=2)\nvs\n\n======================= Shard Response =======================\n1.4054651 = weight(id:`\b\u0002 in 1) [MockConfigurableSimilarity], result of:\n  1.4054651 = fieldWeight in 1, product of:\n    1.0 = tf(freq=1.0), with freq of:\n      1.0 = termFreq=1.0\n    1.4054651 = idf, computed as log((docCount+1)/(docFreq+1)) + 1 from:\n      1.0 = docFreq\n      2.0 = docCount\n    1.0 = fieldNorm(doc=1)\nSo, the problem is the mismatch between control {{ 3.0 = docCount}} and sharded {{ 2.0 = docCount}} \nI can see stats exchange. It seems fine. But I can't find how global docCount is applied to scoring. Can someone give a clue?  ",
            "author": "Mikhail Khludnev",
            "id": "comment-16050294"
        },
        {
            "date": "2017-06-15T14:31:29+0000",
            "content": "\n\tNPE fix is nobrainer itself.\n\tNPE is reproduced if id query is issued before regular query (hitting all shards and warming cache there).\n\tbut id query fails tests because maxdoc (colStat) from no-hits shards are omitted. SOLR-10824.patch shares colStat even it has no certain term (and probably field).\n\n\n\nVarun Thacker, Erick Erickson, what do you think if I commit it?     ",
            "author": "Mikhail Khludnev",
            "id": "comment-16050556"
        },
        {
            "date": "2017-06-19T19:15:40+0000",
            "content": "Hi Mikhail,\n\nI'll take a look at it within the next 2-3 days. Please don't hold it up for me if you are confident about the patch  ",
            "author": "Varun Thacker",
            "id": "comment-16054614"
        },
        {
            "date": "2017-06-24T20:35:19+0000",
            "content": "Commit 3b07e7241ebc539c5acdc642f83e174e5bea9744 in lucene-solr's branch refs/heads/master from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3b07e72 ]\n\nSOLR-10824: fixing NPE ExactSharedStatsCache, avoid maxdocs skew on\nunique terms. ",
            "author": "ASF subversion and git services",
            "id": "comment-16062116"
        },
        {
            "date": "2017-06-24T21:38:15+0000",
            "content": "Commit 49e230edf045ec162a962adc064e76161fa76e36 in lucene-solr's branch refs/heads/branch_6x from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=49e230e ]\n\nSOLR-10824: fixing NPE ExactSharedStatsCache, avoid maxdocs skew on\nunique terms. ",
            "author": "ASF subversion and git services",
            "id": "comment-16062146"
        },
        {
            "date": "2017-06-25T08:09:23+0000",
            "content": "got a failure https://builds.apache.org/job/Lucene-Solr-Tests-master/1901/testReport/ looking into ",
            "author": "Mikhail Khludnev",
            "id": "comment-16062260"
        },
        {
            "date": "2017-06-25T17:24:15+0000",
            "content": "\n\tit fails on ith distrib test iteration, where i>1\n\tit looks like max doc difference between shaded {{ 6.0 = docCount}} and control 12.0 = docCount\n\n======================= Control Response =======================\n{responseHeader={status=0,QTime=1},response={numFound=1,start=0,maxScore=2.871802,docs=[SolrDocument{id=11, range_facet_l=[11], id_i1=11, range_facet_l_dv=[11], range_facet_i_dv=[11], a_t=[one two three], shard_i=[3], multiDefault=[muLti-Default], \n\nrawquerystring=id:11,querystring=id:11,parsedquery=id:11,parsedquery_toString=id:11,explain={11=\n2.871802 = weight(id:11 in 3) [MockConfigurableSimilarity], result of:\n  2.871802 = fieldWeight in 3, product of:\n    1.0 = tf(freq=1.0), with freq of:\n      1.0 = termFreq=1.0\n    2.871802 = idf, computed as log((docCount+1)/(docFreq+1)) + 1 from:\n      1.0 = docFreq\n      12.0 = docCount\n    1.0 = fieldNorm(doc=3)\n},QParser=LuceneQParser,timing={time=1.0,\n\n\n======================= Shard Response =======================\n\n{responseHeader={status=0,QTime=12},response={numFound=1,start=0,maxScore=2.252763,docs=[SolrDocument{id=11, range_facet_l=[11], id_i1=11, range_facet_l_dv=[11], range_facet_i_dv=[11], \ndebug={rawquerystring=id:11,querystring=id:11,parsedquery=id:11,parsedquery_toString=id:11,explain={11=\n2.252763 = weight(id:11 in 0) [MockConfigurableSimilarity], result of:\n  2.252763 = fieldWeight in 0, product of:\n    1.0 = tf(freq=1.0), with freq of:\n      1.0 = termFreq=1.0\n    2.252763 = idf, computed as log((docCount+1)/(docFreq+1)) + 1 from:\n      1.0 = docFreq\n      6.0 = docCount\n    1.0 = fieldNorm(doc=0)\n},QParser=LuceneQParser,\nrawquerystring=id:11,querystring=id:11,parsedquery=id:11,parsedquery_toString=id:11,QParser=LuceneQParser,explain={11=\n2.252763 = weight(id:11 in 0) [MockConfigurableSimilarity], result of:\n  2.252763 = fieldWeight in 0, product of:\n    1.0 = tf(freq=1.0), with freq of:\n      1.0 = termFreq=1.0\n    2.252763 = idf, computed as log((docCount+1)/(docFreq+1)) + 1 from:\n      1.0 = docFreq\n      6.0 = docCount\n    1.0 = fieldNorm(doc=0)\n}}}\n\n   \n\n\n\n\n\tobviously, optimize=true fixes it.\n\n ",
            "author": "Mikhail Khludnev",
            "id": "comment-16062383"
        },
        {
            "date": "2017-06-26T07:41:15+0000",
            "content": "ok. wrong score is cached on request earlier stages (??) and then retrieved from query result cache. Thus, disabling cache fixed the seed\n\ndiff --git a/solr/core/src/test/org/apache/solr/search/stats/TestDefaultStatsCache.java b/solr/core/src/test/org/apache/solr/search/stats/TestDefaultStatsCache.java\nindex 88300ba..f577387 100644\n--- a/solr/core/src/test/org/apache/solr/search/stats/TestDefaultStatsCache.java\n+++ b/solr/core/src/test/org/apache/solr/search/stats/TestDefaultStatsCache.java\n@@ -73,7 +73,7 @@\n     commit();\n \n     if (aDocId != null) {\n-      dfQuery(\"q\", \"id:\"+aDocId,\"debugQuery\", \"true\", \"fl\", \"*,score\");\n+      dfQuery(\"q\", \"{!cache=false}id:\"+aDocId,\"debugQuery\", \"true\", \"fl\", \"*,score\");\n     }\n     dfQuery(\"q\", \"a_t:one a_t:four\", \"debugQuery\", \"true\", \"fl\", \"*,score\");\n   }\n\n  ",
            "author": "Mikhail Khludnev",
            "id": "comment-16062628"
        },
        {
            "date": "2017-06-26T09:03:50+0000",
            "content": "Ok. Randomised test have found a nice case: \n\n\tsearch id:11, got it cached in query results.\n\tadd docs, commit\n\tit triggers cache regeneration, this query is executed per every shard. However, their scores are local only.\n\tsearch id:11 again, got cache hit, retrieve local only scores. Ignore exact stats, even they are properly distributed via GET_TERM_STATS\n\n ",
            "author": "Mikhail Khludnev",
            "id": "comment-16062814"
        },
        {
            "date": "2017-06-26T09:16:17+0000",
            "content": "Commit 7c448623ccb1d7284f72144bb69e2998051f75ab in lucene-solr's branch refs/heads/master from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7c44862 ]\n\nSOLR-10824: fixing stats tests: ignore local scores from query result cache. ",
            "author": "ASF subversion and git services",
            "id": "comment-16062829"
        },
        {
            "date": "2017-06-26T09:19:16+0000",
            "content": "Commit 735365e7ee7dec251a8d9e0484e1bc904636848b in lucene-solr's branch refs/heads/branch_6x from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=735365e ]\n\nSOLR-10824: fixing stats tests: ignore local scores from query result cache. ",
            "author": "ASF subversion and git services",
            "id": "comment-16062834"
        },
        {
            "date": "2017-06-26T09:47:51+0000",
            "content": "followup SOLR-10952  ",
            "author": "Mikhail Khludnev",
            "id": "comment-16062852"
        },
        {
            "date": "2017-06-26T16:56:58+0000",
            "content": "Policeman Jenkins found a reproducing seed for TestPullReplica.testKillLeader() that git bisect blames on commit 7c448623ccb on this issue https://jenkins.thetaphi.de/job/Lucene-Solr-master-Linux/19974:\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestPullReplica -Dtests.method=testKillLeader -Dtests.seed=E7D383DCC0B7483C -Dtests.multiplier=3 -Dtests.slow=true -Dtests.locale=ar-KW -Dtests.timezone=Australia/Queensland -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 96.4s J2 | TestPullReplica.testKillLeader <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: Replica state not updated in cluster state\n   [junit4]    > null\n   [junit4]    > Live Nodes: [127.0.0.1:44447_solr, 127.0.0.1:34771_solr]\n   [junit4]    > Last available state: DocCollection(pull_replica_test_kill_leader//collections/pull_replica_test_kill_leader/state.json/6)={\n   [junit4]    >   \"pullReplicas\":\"1\",\n   [junit4]    >   \"replicationFactor\":\"1\",\n   [junit4]    >   \"shards\":{\"shard1\":{\n   [junit4]    >       \"range\":\"80000000-7fffffff\",\n   [junit4]    >       \"state\":\"active\",\n   [junit4]    >       \"replicas\":{\n   [junit4]    >         \"core_node1\":{\n   [junit4]    >           \"core\":\"pull_replica_test_kill_leader_shard1_replica_n1\",\n   [junit4]    >           \"base_url\":\"http://127.0.0.1:44447/solr\",\n   [junit4]    >           \"node_name\":\"127.0.0.1:44447_solr\",\n   [junit4]    >           \"state\":\"down\",\n   [junit4]    >           \"type\":\"NRT\",\n   [junit4]    >           \"leader\":\"true\"},\n   [junit4]    >         \"core_node2\":{\n   [junit4]    >           \"core\":\"pull_replica_test_kill_leader_shard1_replica_p1\",\n   [junit4]    >           \"base_url\":\"http://127.0.0.1:34771/solr\",\n   [junit4]    >           \"node_name\":\"127.0.0.1:34771_solr\",\n   [junit4]    >           \"state\":\"active\",\n   [junit4]    >           \"type\":\"PULL\"}}}},\n   [junit4]    >   \"router\":{\"name\":\"compositeId\"},\n   [junit4]    >   \"maxShardsPerNode\":\"100\",\n   [junit4]    >   \"autoAddReplicas\":\"false\",\n   [junit4]    >   \"nrtReplicas\":\"1\",\n   [junit4]    >   \"tlogReplicas\":\"0\"}\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([E7D383DCC0B7483C:AEC57768A20CDC6A]:0)\n   [junit4]    > \tat org.apache.solr.cloud.SolrCloudTestCase.waitForState(SolrCloudTestCase.java:269)\n   [junit4]    > \tat org.apache.solr.cloud.TestPullReplica.doTestNoLeader(TestPullReplica.java:401)\n   [junit4]    > \tat org.apache.solr.cloud.TestPullReplica.testKillLeader(TestPullReplica.java:290)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:748)\n\n ",
            "author": "Steve Rowe",
            "id": "comment-16063400"
        },
        {
            "date": "2017-06-26T20:07:50+0000",
            "content": "\n\tthis test doesn't ever load neither of exact stats\n\tit reproduces quite unstable\n\tI checked my mail and found similar failures on Jun 3rd, 10th, 17th at Policeman Jenkins.\nSo, I don't think I can help here anyhow.   \n\n ",
            "author": "Mikhail Khludnev",
            "id": "comment-16063676"
        },
        {
            "date": "2017-06-26T20:19:43+0000",
            "content": "Okay Mikhail Khludnev, thanks for looking into it. ",
            "author": "Steve Rowe",
            "id": "comment-16063693"
        }
    ]
}