{
    "id": "SOLR-2183",
    "title": "DataImportHandler treatment of case for dynamic column mapping vs explicit mapping",
    "details": {
        "affect_versions": "1.4.1",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "There is a difference to how DIH treats the case of columns when using the DataImportHandler and using explicit mapping vs dynamic mapping. The exact test cases I used are described below:\n\n-----------------------------\n\nFrom http://wiki.apache.org/solr/DataImportHandler#A_shorter_data-config : \"It is possible to totally avoid the field entries in entities if the names of the fields are same (case does not matter) as those in Solr schema\" \n\nI confirmed that matching the schema.xml field case to the database table is needed for dynamic fields, and the wiki statement above is incorrect, or at the very least confusing, possibly a bug. \n\nMy database is Oracle 10g and the column names have been created in all uppercase in the database. \n\nIn Oracle: \nTable name: wide_table \nColumn names: COLUMN_1 ... COLUMN_100 (yes, uppercase) \n\nPlease see following scenarios and results I found: \n\ndata-config.xml \n<entity name=\"item\" query=\"select column_1,column_100 from wide_table\"> \n<field column=\"column_100\" name=\"id\"/> \n</entity> \n\nschema.xml \n<dynamicField name=\"column_*\"  type=\"string\"  indexed=\"true\"  stored=\"true\" multiValued=\"true\" /> \n\nResult: \nNothing Imported \n\n========= \n\ndata-config.xml \n<entity name=\"item\" query=\"select COLUMN_1,COLUMN_100 from wide_table\"> \n<field column=\"column_100\" name=\"id\"/> \n</entity> \n\nschema.xml \n<dynamicField name=\"column_*\"  type=\"string\"  indexed=\"true\"  stored=\"true\" multiValued=\"true\" /> \n\nResult: \nNote query column names changed to uppercase. \nNothing Imported \n\n========= \n\n\ndata-config.xml \n<entity name=\"item\" query=\"select column_1,column_100 from wide_table\"> \n<field column=\"COLUMN_100\" name=\"id\"/> \n</entity> \n\nschema.xml \n<dynamicField name=\"column_*\"  type=\"string\"  indexed=\"true\"  stored=\"true\" multiValued=\"true\" /> \n\nResult: \nNote ONLY the field entry was changed to caps \n\nAll records imported, with only COLUMN_100 id field. \n\n============ \n\ndata-config.xml \n<entity name=\"item\" query=\"select column_1,column_100 from wide_table\"> \n<field column=\"COLUMN_100\" name=\"id\"/> \n</entity> \n\nschema.xml \n<dynamicField name=\"COLUMN_*\"  type=\"string\"  indexed=\"true\"  stored=\"true\" multiValued=\"true\" /> \n\nResult: \nNote BOTH the field entry was changed to caps in data-config.xml, and the dynamicField wildcard in schema.xml \n\nAll records imported, with all fields specified. This is the behavior desired. \n\n=============",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12926713",
            "date": "2010-10-31T14:24:43+0000",
            "content": "Just assigning a component "
        }
    ]
}