{
    "id": "LUCENE-6184",
    "title": "BooleanScorer should better deal with sparse clauses",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "priority": "Minor",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "The way that BooleanScorer works looks like this:\n\nfor each (window of 2048 docs) {\n  for each (optional scorer) {\n    scorer.score(window)\n  }\n}\n\n\n\nThis is not efficient for very sparse clauses (doc freq much lower than maxDoc/2048) since we keep on scoring windows of documents that do not match anything. BooleanScorer2 currently performs better in those cases.",
    "attachments": {
        "LUCENE-6184.patch": "https://issues.apache.org/jira/secure/attachment/12692530/LUCENE-6184.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14278782",
            "author": "Adrien Grand",
            "date": "2015-01-15T15:16:04+0000",
            "content": "Here is a patch:\n\n\tBulkScorer now returns a hint on the next matching doc after max\n\tBooleanScorer uses this information in order to only score windows of documents where at least one clause matches (by putting the bulk scorers into a priority queue)\n\n\n\nThis helps boolean queries with dense clauses since this helped remove the hasMatches optimization which helps not iterate over the bit set if there are no matches but had the drawback of making OrCollector.collect\nheavier.\n\nAnd this helps boolean queries with very sparse clauses since they now only collect windows where they have matches.\n\nHere is the result of the luceneutil benchmark on the 10M wikipedia corpus. I added some tasks to test sparse clauses: VeryLow is for term queries that have a doc freq between 400 and 500, and \"VeryLowVeryLow\" is a disjunction of 2 such terms:\n\n\n                    TaskQPS baseline      StdDev   QPS patch      StdDev                Pct diff\n        HighSloppyPhrase       32.70      (4.3%)       32.39      (4.0%)   -1.0% (  -8% -    7%)\n                 Prefix3      162.73      (5.8%)      161.32      (6.6%)   -0.9% ( -12% -   12%)\n                 LowTerm      803.22      (6.2%)      797.47      (6.2%)   -0.7% ( -12% -   12%)\n                  IntNRQ       13.84      (6.9%)       13.75      (7.3%)   -0.7% ( -13% -   14%)\n            OrHighNotLow       60.36      (2.7%)       59.96      (3.9%)   -0.7% (  -7% -    6%)\n         LowSloppyPhrase       17.94      (3.0%)       17.82      (2.8%)   -0.7% (  -6% -    5%)\n                 VeryLow     6095.14      (5.8%)     6057.73      (5.0%)   -0.6% ( -10% -   10%)\n               LowPhrase      276.59      (2.2%)      274.97      (1.6%)   -0.6% (  -4% -    3%)\n            OrHighNotMed       43.56      (2.6%)       43.32      (3.3%)   -0.6% (  -6% -    5%)\n            OrNotHighLow      924.37      (2.5%)      919.21      (2.4%)   -0.6% (  -5% -    4%)\n              AndHighLow      703.38      (2.9%)      699.62      (3.6%)   -0.5% (  -6% -    6%)\n                Wildcard       93.74      (3.1%)       93.29      (3.0%)   -0.5% (  -6% -    5%)\n         MedSloppyPhrase       79.24      (2.8%)       78.91      (2.3%)   -0.4% (  -5% -    4%)\n            OrNotHighMed      207.14      (2.0%)      206.31      (2.2%)   -0.4% (  -4% -    3%)\n            HighSpanNear       12.56      (0.9%)       12.53      (1.1%)   -0.2% (  -2% -    1%)\n              HighPhrase       13.58      (2.3%)       13.55      (2.1%)   -0.2% (  -4% -    4%)\n           OrHighNotHigh       33.29      (1.6%)       33.24      (2.0%)   -0.2% (  -3% -    3%)\n           OrNotHighHigh       56.10      (1.6%)       56.00      (1.8%)   -0.2% (  -3% -    3%)\n                HighTerm       91.52      (2.6%)       91.37      (2.7%)   -0.2% (  -5% -    5%)\n                 Respell       71.63      (5.5%)       71.52      (5.3%)   -0.1% ( -10% -   11%)\n             LowSpanNear       18.17      (1.0%)       18.16      (0.8%)   -0.1% (  -1% -    1%)\n                 MedTerm      146.69      (2.5%)      146.56      (3.0%)   -0.1% (  -5% -    5%)\n              AndHighMed      274.22      (2.6%)      274.00      (2.3%)   -0.1% (  -4% -    4%)\n             MedSpanNear       31.01      (0.9%)       31.00      (1.1%)   -0.0% (  -1% -    1%)\n             AndHighHigh       77.34      (1.8%)       77.32      (1.7%)   -0.0% (  -3% -    3%)\n               MedPhrase       19.10      (6.2%)       19.10      (6.2%)    0.0% ( -11% -   13%)\n                  Fuzzy2       26.84      (6.8%)       26.88      (7.6%)    0.1% ( -13% -   15%)\n                PKLookup      272.91      (3.1%)      274.16      (2.7%)    0.5% (  -5% -    6%)\n               OrHighMed       59.25     (11.8%)       62.90      (6.5%)    6.2% ( -10% -   27%)\n               OrHighLow       64.54     (11.9%)       68.73      (6.5%)    6.5% ( -10% -   28%)\n              OrHighHigh       42.89     (12.2%)       45.77      (6.9%)    6.7% ( -11% -   29%)\n                  Fuzzy1       95.20      (4.2%)      101.65      (5.9%)    6.8% (  -3% -   17%)\n          VeryLowVeryLow     1936.31      (3.2%)     2263.44      (3.3%)   16.9% (  10% -   24%)\n\n "
        },
        {
            "id": "comment-14278783",
            "author": "Adrien Grand",
            "date": "2015-01-15T15:19:16+0000",
            "content": "The reason why Fuzzy1 and Fuzzy2 are faster too is that they rewrite to boolean queries by default, so this optimization helps them too. "
        },
        {
            "id": "comment-14278794",
            "author": "Robert Muir",
            "date": "2015-01-15T15:29:38+0000",
            "content": "The trickiest part here are the new semantics of the return value. But FilteredQuery has a code comment that maybe should be moved to BulkScorer's docs to help elaborate (there is a small typo too in the comment).\n\nCan this lead to a better minshouldmatch impl for booleanscorer? I'm just as happy with it removed too, but i know a while ago we benchmarked that BS1 can still be faster for that query, so its just a possibility. Maybe it should just stay as a pure disjunction scorer. "
        },
        {
            "id": "comment-14278934",
            "author": "Adrien Grand",
            "date": "2015-01-15T16:53:15+0000",
            "content": "Updated patch with better documentation of the semantics of BulkScorer.score.\n\n> Can this lead to a better minshouldmatch impl for booleanscorer?\n\nI don't think it would work in the general case yet. This change is useful to skip over large numbers of non-matching documents, but it still calls nextDoc() all the time, not advance() so I think BS2 is still a better option for now? "
        },
        {
            "id": "comment-14278939",
            "author": "Robert Muir",
            "date": "2015-01-15T16:59:06+0000",
            "content": "Right but with the PQ in place, we could consider adding support, maybe by adding 'min' to score() to specify the start of the range. maybe its also a way to remove this crazy logic the default impl:\n\n        int doc = scorer.docID();\n        if (doc < 0) {\n          doc = scorer.nextDoc();\n        }\n\n "
        },
        {
            "id": "comment-14279175",
            "author": "Adrien Grand",
            "date": "2015-01-15T19:32:13+0000",
            "content": "Yes, I think this way we could handle disjunctions in BooleanScorer (including minShouldMatch)! But this should be a separate issue? "
        },
        {
            "id": "comment-14279181",
            "author": "Robert Muir",
            "date": "2015-01-15T19:34:52+0000",
            "content": "yeah, its just a future idea, maybe relevant to the API change of returning int instead of boolean. "
        },
        {
            "id": "comment-14282382",
            "author": "Adrien Grand",
            "date": "2015-01-19T10:47:23+0000",
            "content": "Same patch, just adding the suggested API in order to make BulkScorer able to skip. Results of the luceneutil benchmark still look similar:\n\n\n              AndHighLow      883.42      (3.5%)      872.51      (3.3%)   -1.2% (  -7% -    5%)\n            OrNotHighLow     1052.93      (4.4%)     1048.44      (4.5%)   -0.4% (  -8% -    8%)\n                PKLookup      277.07      (2.0%)      276.65      (2.1%)   -0.2% (  -4% -    4%)\n              AndHighMed      137.40      (1.9%)      137.30      (2.4%)   -0.1% (  -4% -    4%)\n            HighSpanNear       34.67      (3.1%)       34.65      (3.0%)   -0.0% (  -5% -    6%)\n         LowSloppyPhrase      215.69      (2.5%)      215.61      (2.5%)   -0.0% (  -4% -    5%)\n         MedSloppyPhrase      183.08      (2.5%)      183.11      (2.0%)    0.0% (  -4% -    4%)\n              HighPhrase       26.33      (6.8%)       26.34      (6.8%)    0.0% ( -12% -   14%)\n             AndHighHigh       51.61      (1.8%)       51.64      (2.0%)    0.0% (  -3% -    3%)\n               LowPhrase       74.61      (1.3%)       74.68      (1.4%)    0.1% (  -2% -    2%)\n        HighSloppyPhrase       14.94      (5.7%)       14.97      (5.0%)    0.2% (  -9% -   11%)\n               MedPhrase       31.42      (1.1%)       31.47      (1.1%)    0.2% (  -1% -    2%)\n             LowSpanNear       55.89      (2.5%)       56.00      (2.5%)    0.2% (  -4% -    5%)\n                 Respell       73.38      (2.4%)       73.54      (2.2%)    0.2% (  -4% -    4%)\n            OrNotHighMed      118.20      (1.6%)      118.66      (1.7%)    0.4% (  -2% -    3%)\n             MedSpanNear       78.17      (3.2%)       78.62      (3.5%)    0.6% (  -5% -    7%)\n           OrHighNotHigh       31.47      (1.8%)       31.66      (1.9%)    0.6% (  -2% -    4%)\n           OrNotHighHigh       50.29      (1.6%)       50.63      (2.0%)    0.7% (  -2% -    4%)\n            OrHighNotMed       82.27      (2.3%)       83.17      (2.3%)    1.1% (  -3% -    5%)\n                 VeryLow     6149.21      (4.7%)     6223.22      (5.4%)    1.2% (  -8% -   11%)\n            OrHighNotLow       55.30      (3.2%)       56.25      (2.5%)    1.7% (  -3% -    7%)\n                 LowTerm      808.21      (7.3%)      824.32      (4.5%)    2.0% (  -9% -   14%)\n                HighTerm      106.18      (4.3%)      108.63      (3.0%)    2.3% (  -4% -   10%)\n                 MedTerm      296.65      (4.2%)      304.42      (2.7%)    2.6% (  -4% -   10%)\n                Wildcard       20.85      (7.5%)       21.50      (5.3%)    3.1% (  -8% -   17%)\n                 Prefix3       95.63      (6.2%)       98.81      (5.3%)    3.3% (  -7% -   15%)\n                  Fuzzy2       62.12      (9.0%)       64.44     (10.2%)    3.7% ( -14% -   25%)\n                  IntNRQ        8.85      (8.9%)        9.21      (6.7%)    4.1% ( -10% -   21%)\n                  Fuzzy1      105.42     (11.2%)      116.28      (4.8%)   10.3% (  -5% -   29%)\n               OrHighLow       51.75      (8.2%)       59.92      (8.2%)   15.8% (   0% -   35%)\n              OrHighHigh       32.34      (8.5%)       37.53      (8.5%)   16.0% (   0% -   36%)\n               OrHighMed       16.79      (8.7%)       19.62      (8.8%)   16.8% (   0% -   37%)\n          VeryLowVeryLow     2053.12      (2.3%)     2399.38      (3.2%)   16.9% (  11% -   22%)\n\n "
        },
        {
            "id": "comment-14282572",
            "author": "ASF subversion and git services",
            "date": "2015-01-19T14:49:27+0000",
            "content": "Commit 1653020 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1653020 ]\n\nLUCENE-6184: Make BooleanScorer only score windows that contain matches. "
        },
        {
            "id": "comment-14282575",
            "author": "ASF subversion and git services",
            "date": "2015-01-19T14:58:22+0000",
            "content": "Commit 1653023 from Adrien Grand in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1653023 ]\n\nLUCENE-6184: Make BooleanScorer only score windows that contain matches. "
        },
        {
            "id": "comment-14495305",
            "author": "Timothy Potter",
            "date": "2015-04-15T00:30:30+0000",
            "content": "Bulk close after 5.1 release "
        }
    ]
}