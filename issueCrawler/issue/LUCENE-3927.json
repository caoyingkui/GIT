{
    "id": "LUCENE-3927",
    "title": "allow running trunk tests with IBM JRE",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "general/test"
        ],
        "type": "Task",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "This is currently not possible because of how the SPI loader works,\nwe cannot simulate Lucene3x codec with PreFlexRWCodec.\n\nBut we should still allow basic testing (even though we cannot test preflex).\n\nAfter hacking around the issue, I get interesting fails with this JRE so I think its worth it.",
    "attachments": {
        "LUCENE-3927.patch": "https://issues.apache.org/jira/secure/attachment/12520072/LUCENE-3927.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-03-27T07:21:29+0000",
            "content": "This bug in IBM JDK goes back to Apache Harmony, where you can see how the SPI code is implemented. It uses a HashMap instead of LinkedHashMap as lookup cache and that mixes the SPI classes up. This is a bug, but unfortunately the API is not clear about that.\n\nMaybe we add a \"override\" option to SPILoader, so you can force NamedSPILoader to return a specific impl, ignoring the classpath? By this we can override the \"Lucene3x\" codec to be \"new PreflexRWCodec()\" programmatically. ",
            "author": "Uwe Schindler",
            "id": "comment-13239271"
        },
        {
            "date": "2012-03-27T07:25:16+0000",
            "content": "That would be a better solution than my hack (which swaps in SimpleText as punishment).\n\nThough such an override is pretty dangerous, anyone messing with this is likely to just not\nbe able to read their index. Maybe we can make it private/package-private and setAccessible? ",
            "author": "Robert Muir",
            "id": "comment-13239274"
        },
        {
            "date": "2012-03-27T07:27:31+0000",
            "content": "t uses a HashMap instead of LinkedHashMap as lookup cache and that mixes the SPI classes up. \n\nThis is sad. It's a simple bug to fix but will never be probably... ",
            "author": "Dawid Weiss",
            "id": "comment-13239277"
        },
        {
            "date": "2012-03-27T07:45:04+0000",
            "content": "I reported a bug report on that and it was fixed. I cannot locate now my report (the link I have comes up empty) nor in which version they fixed it. But I have at hand a fixed (unofficial) jar and tests pass with it (without Robert's patch). I will try to find the version which contains the fix. ",
            "author": "Shai Erera",
            "id": "comment-13239287"
        },
        {
            "date": "2012-03-27T08:04:47+0000",
            "content": "Still can't find it. I tried with the latest JRE \"IBM J9 VM (build 2.4, JRE 1.6.0 IBM J9 2.4 Windows 7 amd64-64 jvmwa6460sr10-20111207_96808 (JIT enabled, AOT enabled)\" but TestImpersonation fails. So I guess the fix is not yet included in that version.\n\nI know it has been fixed (because as I said, I have an unofficial JAR with which I can run Trunk tests), so I will try newer releases when they're available.\n\nBut if you can resolve it such that it works without that fix, that will be great. ",
            "author": "Shai Erera",
            "id": "comment-13239296"
        },
        {
            "date": "2012-03-27T08:08:42+0000",
            "content": "Well mainly I wanted to get past this (at least have a patch available!) because i see interesting\ntest failures in trunk with the IBM JVM...\n ",
            "author": "Robert Muir",
            "id": "comment-13239298"
        },
        {
            "date": "2012-03-27T08:17:16+0000",
            "content": "I agree. But if we know in which version it has been fixed, we can at least put a comment to remove that hack. Or if have an alternative solution that does not require that fix, it's better.\n\nBecause as I understand, that patch disables PreFlex for all IBM JREs right?\n\nAnyway, feel free to proceed with that patch because it at least enables running trunk tests with an IBM JRE. ",
            "author": "Shai Erera",
            "id": "comment-13239300"
        },
        {
            "date": "2012-03-27T08:21:01+0000",
            "content": "The hack in the patch is not hardcoded at all IBM: it checks if the impersonation actually works too.\n\nConstants.JAVA_VENDOR.startsWith(\"IBM\") && (!(Codec.forName(\"Lucene3x\") instanceof PreFlexRWCodec));\n\n\n\nFor other JREs we still throw an assertion error saying to fix your classpath.\n\nBut again, we don't necessarily need to commit this patch. Again more interesting is the fact that,\nwith the patch, if i run tests I get 'too many open files' from TestShardSearching, and I get test\nfailures from Solr's CSV support... ",
            "author": "Robert Muir",
            "id": "comment-13239303"
        },
        {
            "date": "2012-03-27T08:52:07+0000",
            "content": "Here is a patch with a workaround for the JRE bug. It forcefully registers the preflex rw codec by reflection and prints warning (once per JVM). ",
            "author": "Uwe Schindler",
            "id": "comment-13239320"
        },
        {
            "date": "2012-03-27T09:01:13+0000",
            "content": "\nif (!(Codec.forName(\"Lucene3x\") instanceof PreFlexRWCodec)) {\n        System.err.println(\"ERROR: Your VM's java.util.ServiceLoader implementation is buggy\"+\n          \" and does not respect classpath order, please report this to the vendor.\");\n\n\n\nI think this could be confusing to people using Sun JVMs, but just with the wrong\nclasspath? There is currently an assert for this:\n\nassert (codec instanceof PreFlexRWCodec) : \"fix your classpath to have tests-framework.jar before lucene-core.jar\";\n\n\n\nSo I think we should just be careful about the warning to not confuse (maybe check Constants.JRE_VENDOR to \nmake sure we send the correct message?) ",
            "author": "Robert Muir",
            "id": "comment-13239327"
        },
        {
            "date": "2012-03-27T09:14:58+0000",
            "content": "Uwe's patch but with the wording tweaked for non-IBM JRE \n\nI think this is ready to commit. Thanks Uwe! ",
            "author": "Robert Muir",
            "id": "comment-13239330"
        },
        {
            "date": "2012-03-27T09:31:17+0000",
            "content": "Thanks Uwe!\n\nI really like this solution: if people have screwed up classpaths they get a warning. If they have a buggy IBM JRE they get a warning. but 'ant test' works. ",
            "author": "Robert Muir",
            "id": "comment-13239343"
        }
    ]
}