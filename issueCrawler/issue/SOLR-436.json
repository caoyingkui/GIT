{
    "id": "SOLR-436",
    "title": "Make SolrServer an abstract superclass rather then an interface",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [
            "1.3"
        ],
        "components": [
            "clients - java"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "To allow more flexability in the future, SolrServer should be an abstract super class",
    "attachments": {
        "SOLR-436-AbstractSolrj.patch": "https://issues.apache.org/jira/secure/attachment/12373861/SOLR-436-AbstractSolrj.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Ryan McKinley",
            "id": "comment-12561784",
            "date": "2008-01-23T19:27:36+0000",
            "content": "moves BaseSolrServer to the SolrServer implementaion "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12561787",
            "date": "2008-01-23T19:32:25+0000",
            "content": "I don't think the abstract class / interface issue matters as much when we are going to be the only implementers of the interface. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12561802",
            "date": "2008-01-23T20:00:32+0000",
            "content": "Even if we are the only implementation, how do you add functions after a release?  Is it just that the standard compatibility rules would not apply? "
        },
        {
            "author": "Alexander Ramos Jardim",
            "id": "comment-12603578",
            "date": "2008-06-09T14:38:04+0000",
            "content": "As I said on the mailing list, I don't think interfaces should be turned to abstract classes. This is a wrong design decision from a pure programming view point as interfaces should expose what abstract classes implements. They are complements and not competitors.\nI think we should have a SolrServer interface and an AbstractSolrServer that implements it.\nMethods should be added to AbstractSolrServer on minor releases, and on each major release, the interface signature should be changed to expose them in an adequate manner. "
        }
    ]
}