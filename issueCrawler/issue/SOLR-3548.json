{
    "id": "SOLR-3548",
    "title": "some queries produced by builtin QParsers do not satisfy QueryUtils checks",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Blocker",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "working on SOLR-3522 i discovered that in some cases Solr is producing queries that aren't equals to themselves, so they can't be cached.\n\nSo far the only observed problem is in func strdist, but i want to make sure we have an exhaustive test of this in case there are others",
    "attachments": {
        "SOLR-3548.patch": "https://issues.apache.org/jira/secure/attachment/12532213/SOLR-3548.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13295786",
            "date": "2012-06-15T17:35:19+0000",
            "content": "test case "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13396341",
            "date": "2012-06-18T23:06:19+0000",
            "content": "it took a lot longer then i though, but here is a patch that adds QueryUtils checking against (at least one of) the Query objects produced by every default QParser and ValueSourceParser.  It includes a future proofing \"testCoverage\" that sets a bit informing an AfterClass method to assert that all of the default parsers were tested so we don't risk this probably again the next time someone adds a new parsers.\n\nCurrently 4 methods are failing, indicating the following problems...\n\n\n\tstrdist func - identical query strings don't produce equals() queries\n\tjoin qparser - clone w/diff boost still has equals hashCode\n\tbbox qparser - clone w/diff boost still has equals hashCode\n\tgeofilt qparser - clone w/diff boost still has equals hashCode\n\n\n\nthe hashCode equality isn't the end of the world, but it suggests a really poor hashCode impl (that evidently doesn't call super since Query.hashCode already handles the boost)\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13396436",
            "date": "2012-06-19T01:09:34+0000",
            "content": "Fixed JoinQuery and SpatialDistanceQuery classes to consult super.equals() and super.hashCode() in their corrisponding methods, and added completely new equals/hashCode impls to JaroWinklerDistance, NGramDistance, and LevensteinDistance (which never had them before aparently).\n\nThis gets all the new tests passing "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13397051",
            "date": "2012-06-19T20:38:45+0000",
            "content": "Committed revision 1351839. - trunk\nCommitted revision 1351843. - 4x "
        }
    ]
}