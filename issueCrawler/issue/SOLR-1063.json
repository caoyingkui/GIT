{
    "id": "SOLR-1063",
    "title": "Spellchecker result through wt=phps and wt=php",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [
            "spellchecker"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Duplicate"
    },
    "description": "First of all, this is not through the provided PHP client but these are the actual results directly from Solr therefore the selected component is not Client/PHP but spellchecker. However, results like these are likely to be caused by the selected responsewriter since similar issues have been seen.\n\nThere seems to be a bug in the PHPS outputHandler when retrieving a\nquery that also produces spellcheck results.\n\nThe following query fails to return an unserializable string:\nspellcheck=true&facet=true&indent=on&facet.mincount=1&spellcheck.extendedResults=true&\nspellcheck.q=groninen&spellcheck.collate=true&wt=phps&rows=8&start=0&\nq=generic_search:groninen&spellcheck.dictionary=jarowinkler&\nfacet.field=city&facet.field=kitchen&facet.field=budget\n\nThe problem is clearly visible at the end of the returned string:\nrectlySpelled\";falses:9:\"collation\";s:9:\"groningen\";}}}\n\nThe query works fine when extendedResults=false, otherwise this problem\noccurs.\n\nUsing the PHP outputHandler instead also produces a result which i\ncannot pass through eval. It complains about the last line of the result\nwhich omits the semi colon.\n\n 'word'=>'groningen')),\n        'correctlySpelled'=>false,\n        'collation'=>'groningen')))\n\nIt would also need a return statement to begin with in order to produce\nany results with eval. For a - simple - query to work properly you would\nneed : \n$data = file_get_contents(query);\nvar_dump(eval(\"return $data;\"));",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-12681889",
            "date": "2009-03-13T20:39:29+0000",
            "content": "The problem is clearly visible at the end of the returned string:\nrectlySpelled\";falses:9:\"collation\";s:9:\"groningen\";}}}\n\nNot knowing PHP at all, the problem isn't clear to me... what part is wrong? "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-12682269",
            "date": "2009-03-16T10:23:52+0000",
            "content": "Yonik,\n\n\nIt is the boolean, only in the spellcheck result, that it erroneous:\ns:16:\"correctlySpelled\";falses:9:\"collation\";s:9:\"groningen\";}}}\n\nThe line below is correct:\ns:16:\"correctlySpelled\";s:5:\"false\";s:9:\"collation\";s:9:\"groningen\";}}}\n\nTypically, in PHP, a serialized format consists of roughly the following\nelements where both key and value follow the same format\nTYPE_IDENTIFIER:LENGTH_OF_VALUE:\"VALUE\";\n\nTwo of these strings combined make a key/value pair.\n\n\nThe boolean, how queer, is here represented as a string, thus true and\nfalse values respectively should be:\ns:4:\"true\";\ns:5:\"false\";\n\n\nAs you can see, the false in the bad string needs something prefixed and\nsuffixed\nprefix: s:5:\"\nsuffix: \";\n\n\nFYI, other booleans from different parts of Solr give good results, it\nis only here in the spellchecker as far as we've seen. \n\n\n\nRegards,\nMarkus\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12708911",
            "date": "2009-05-13T12:52:32+0000",
            "content": "Can anyone post a URL that reproduces this error with the example solr install / data? "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-12708914",
            "date": "2009-05-13T13:23:48+0000",
            "content": "Yonik,\n\n\n\nI've launched Jetty in the example directory of Solr 1.3 but had, of\ncourse, to modify the solrconf.xml to enable the\nPHPSerializedResponseWriter by uncommenting that line. The following URL\nwill result in a unserializable string:\nhttp://localhost:8983/solr/spellCheckCompRH/?q=*:*&spellcheck=true&spellcheck.q=tefst&spellcheck.collate=true&spellcheck.build=true&wt=phps\na:4:{s:14:\"responseHeader\";a:2:\n{s:6:\"status\";i:0;s:5:\"QTime\";i:5;}\ns:7:\"command\";s:5:\"build\";s:8:\"response\";a:3:{s:8:\"numFound\";i:0;s:5:\"start\";i:0;s:4:\"docs\";a:0:{}}s:10:\"spellcheck\";a:1:{s:11:\"suggestions\";a:0:{}}}\n\n\nThe next URL will fail to produce the proper result:\nhttp://localhost:8983/solr/spellCheckCompRH/?q=*:*&spellcheck=true&spellcheck.extendedResults=true&spellcheck.q=tefst&spellcheck.collate=true&spellcheck.build=true&wt=phps\na:4:{s:14:\"responseHeader\";a:2:\n{s:6:\"status\";i:0;s:5:\"QTime\";i:5;}\ns:7:\"command\";s:5:\"build\";s:8:\"response\";a:3:{s:8:\"numFound\";i:0;s:5:\"start\";i:0;s:4:\"docs\";a:0:{}}s:10:\"spellcheck\";a:1:{s:11:\"suggestions\";a:1:\n{s:16:\"correctlySpelled\";true}\n}}\n\n\nYou can clearly see the extendedResults to be enabled in the latter URL.\nHope this helps, if not, then please let me know.\n\n\n\nGood luck,\n\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12708934",
            "date": "2009-05-13T14:11:16+0000",
            "content": "I think this is already fixed in 1.4 trunk by SOLR-892 "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775687",
            "date": "2009-11-10T15:51:59+0000",
            "content": "Bulk close for Solr 1.4 "
        }
    ]
}