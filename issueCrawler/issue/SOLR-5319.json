{
    "id": "SOLR-5319",
    "title": "Collection ZK nodes do not reflect the correct router chosen",
    "details": {
        "affect_versions": "4.4,                                            4.5,                                            6.0",
        "status": "Resolved",
        "fix_versions": [
            "4.6",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "In ZkController.createCollectionZkNode, the doc router is determined by this code snippet:\n\nif (collectionProps.get(DocCollection.DOC_ROUTER) == null) {\n            Object numShards = collectionProps.get(ZkStateReader.NUM_SHARDS_PROP);\n            if (numShards == null) \n{\n              numShards = System.getProperty(ZkStateReader.NUM_SHARDS_PROP);\n            }\n            if (numShards == null) \n{\n              collectionProps.put(DocCollection.DOC_ROUTER, ImplicitDocRouter.NAME);\n            }\n else \n{\n              collectionProps.put(DocCollection.DOC_ROUTER, DocRouter.DEFAULT_NAME);\n            }\n          }\n\nSince OverseerCollectionProcessor never passes on any params prefixed with \"collection\" other than \"collection.configName\" in its create core commands, collectionProps.get(DocCollection.DOC_ROUTER) will never be non-null. Thus, it needs to figure out if the router is implicit or compositeID based on if numShards is passed in. However, collectionProps.get(ZkStateReader.NUM_SHARDS_PROP) will also always be null for the same reason collectionProps.get(DocCollection.DOC_ROUTER) is null, and it isn't explicitly set in the code above, so the only way for numShards not to be null is if it's passed in as a system property.\n\nAs an example, here's a cluster state that's created as compositeId router, but the collection ZK node says it's implicit:\n\nin clusterstate.json:\n\n\"example\":{\n    \"shards\":{\"shard1\":{\n        \"range\":\"80000000-7fffffff\",\n        \"state\":\"active\",\n        \"replicas\":{\"core_node1\":{\n            \"state\":\"active\",\n            \"core\":\"example_shard1_replica1\",\n            \"node_name\":\"localhost:8983_solr\",\n            \"base_url\":\"http://localhost:8983/solr\",\n            \"leader\":\"true\"}}}},\n    \"router\":\"compositeId\"},\n\nin /collections/example data:\n{\n  \"configName\":\"myconf\",\n  \"router\":\"implicit\"}\n\nI've not sure if the collection ZK node router info is actually used anywhere, so it may not matter, but it's confusing.\n\nI think the best fix is for OverseerCollectionProcessor to pass on params prefixed with \"collection.\" to the core creation requests. Otherwise, ZkController.createCollectionZkNode can explicitly set the numShards collectionProps by cd.getNumShards() too.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13790153",
            "date": "2013-10-09T08:12:17+0000",
            "content": "The doc router stored in the collection zk node is not used anywhere. We should just remove that code. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13790157",
            "date": "2013-10-09T08:18:47+0000",
            "content": "Commit 1530521 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1530521 ]\n\nSOLR-5319: Remove unused and incorrect router name from Collection ZK nodes "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13790158",
            "date": "2013-10-09T08:19:45+0000",
            "content": "Commit 1530523 from shalin@apache.org in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1530523 ]\n\nSOLR-5319: Remove unused and incorrect router name from Collection ZK nodes "
        }
    ]
}