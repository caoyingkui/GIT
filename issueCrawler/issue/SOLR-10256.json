{
    "id": "SOLR-10256",
    "title": "Parentheses in SpellCheckCollator",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "spellchecker"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "SpellCheckCollator adds parentheses ( '(' and ')' ) around tokens which have space between them.  \nThis should be configurable, because if WordBreakSpellCheckComponent is being used, queries like : applejuice will be broken down to apple juice. Such suggestions are being surrounded by braces by current SpellCheckCollator. \nAnd when surrounded by brackets, they represent the same position by EdismaxParser , which is not required. \n\nhttps://github.com/apache/lucene-solr/blob/master/solr/core/src/java/org/apache/solr/spelling/SpellCheckCollator.java#L227  \n\nA solution to this will be to have a flag, which can help disable this parenthesisation of spell check suggestions.\n\n----------------------------\nUpdate: \nRaised PR for the same -> https://github.com/apache/lucene-solr/pull/168",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-03-10T11:55:03+0000",
            "content": "Attaching patch for the above issue. \nAdded a flag to SpellCheckCollator. \nAnd made it configurable.  ",
            "author": "Abhishek Kumar Singh",
            "id": "comment-15904960"
        },
        {
            "date": "2017-03-13T15:01:08+0000",
            "content": "Abhishek Kumar Singh  Assuming you can't use the collation provided because of the added parenthesis, could you just specify \"spellcheck.collateExtendedResults=true\" and could your application use the information contained therein to craft a new query the way you want it?  This might be a good workaround until/if we decide to change the current behavior.\n\nReally, instead of having a flag, I'd like to either keep it as-is, or fix it to work correctly for most common use cases, but not to have an obscure flag that users need to worry about.  You may want to review the \"testCollate()\" method in WorkBreakSolrSpellChecker's unit test, and suggest better outcomes for these queries with a little discussion as to why your suggestions would be better.\n\nThe idea here is, if \"pine\" is a required term and the spellcheck breaks it to \"pi ne\", then both \"pi\" and \"ne\" should be required also.  But maybe this is not the best thing to try and enforce?\n\nAnd when surrounded by brackets, they represent the same position by EdismaxParser \n\nI'm trying to find some documentation somewhere that says this, or maybe a test case that demonstrates it?  I apologize for my ignorance on the ins and outs of edismax here. ",
            "author": "James Dyer",
            "id": "comment-15907616"
        },
        {
            "date": "2017-04-04T06:52:43+0000",
            "content": "I agree with your argument that it may not be the best use case. \nBecause it all depends on how we have configured our search to work. And this is why we have configurations like  mm , for specifying the minimum match. \nThe problem arises in cases wherein our mm configuration guarantees 100% tokens-match, but the spellcheck (due to WordBreak) shows the [suggestions wherein even one of the tokens in the broken words](Sugg A)  has a higher frequency than the ones with [reasonable frequency but very less Levenstein distance ] (Sugg B) . \n\nWe would expect Sugg B to have higher weightage in spellcheck suggestions than Sugg A.  \nBut it's not happening due to the compulsory braces.\n\nWhat I feel is, by default it should have braces on, but there should be a configuration to switch it off.   ",
            "author": "Abhishek Kumar Singh",
            "id": "comment-15954662"
        }
    ]
}