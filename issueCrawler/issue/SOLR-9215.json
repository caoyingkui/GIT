{
    "id": "SOLR-9215",
    "title": "QT parameter doesn't appear to function anymore",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.2",
            "7.0"
        ],
        "affect_versions": "6.0,                                            7.0",
        "status": "Closed",
        "resolution": "Not A Problem",
        "priority": "Major"
    },
    "description": "The qt parameter doesn't seem to work anymore. A call directly to the /terms handler returns actual terms, as expected. Using the select handler but with qt=terms returns noting.\n\nhttp://localhost:8983/solr/logs/select?qt=terms&terms=true&terms.fl=compound_digest&terms.limit=100&terms.sort=index\n\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<response>\n\n<lst name=\"responseHeader\">\n  <int name=\"status\">0</int>\n  <int name=\"QTime\">0</int>\n  <lst name=\"params\">\n    <str name=\"qt\">terms</str>\n    <str name=\"indent\">true</str>\n    <str name=\"terms.fl\">compound_digest</str>\n    <str name=\"terms.limit\">100</str>\n    <str name=\"terms.sort\">index</str>\n  </lst>\n</lst>\n<result name=\"response\" numFound=\"0\" start=\"0\">\n</result>\n</response>\n\n\n\nA peculiar detail, my unit tests that rely on the qt parameter are not affected.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-06-16T15:09:23+0000",
            "author": "David Smiley",
            "content": "For requestHandlers with a leading '/', you can only request them directly (without 'qt').  Otherwise, \"qt\" should work for request handlers that don't have a leading \"/\".  If I recall, handleSelect=true in solrconfig.xml might allow you to use \"qt\" even if it has a leading \"/\".  We ought to make this default to false for the next major release.\n\nConfusing things a little is SolrJ... you can specify the request handler via the \"qt\" param (SolrQuery.setRequestHandler works this way).  When SolrJ issues the HTTP request, it will look at \"qt\" to see if it starts with a \"/\" and send it there.  I wish it would also then remove 'qt' since it effectively consumed it's purpose but it does not, which is misleading when on the Solr side you see logged a qt param that Solr ignores server-side. ",
            "id": "comment-15333965"
        },
        {
            "date": "2016-06-22T13:35:45+0000",
            "author": "Markus Jelsma",
            "content": "Yeah thanka, that's the problem indeed and i should have known it. But it is confusing indeed. ",
            "id": "comment-15344313"
        },
        {
            "date": "2016-06-22T14:42:04+0000",
            "author": "Erick Erickson",
            "content": "Can we either close this ticket or propose something specific to un-confuse this? ",
            "id": "comment-15344404"
        },
        {
            "date": "2016-08-19T13:37:38+0000",
            "author": "Shawn Heisey",
            "content": "Confusing things a little is SolrJ... you can specify the request handler via the \"qt\" param (SolrQuery.setRequestHandler works this way). When SolrJ issues the HTTP request, it will look at \"qt\" to see if it starts with a \"/\" and send it there. I wish it would also then remove 'qt' since it effectively consumed it's purpose but it does not, which is misleading when on the Solr side you see logged a qt param that Solr ignores server-side.\n\n+1.  Sorry for the late arrival here ... I'm catching up on email that has sat unread for a while and noticed the last few comments.\n\nI've thought about this before, but it wasn't quite enough of an annoyance to prompt me into action.  I'm fine with SolrJ changing the URL endpoint when it sees a qt parameter starting with a forward slash, but when the endpoint is changed, the parameter should be removed.  Unfortunately, the params may not be a modifiable variety, which is probably why it wasn't done before.\n\nLooking at the children of SolrParams ... I am not sure why we have so many implementations.  For the most part, they are very similar to each other.  Can we collapse all functionality of the children into the base class and deprecate the children in the same way that we did the \"Server\" variants of the Client classes?  If necessary, we could keep implementations that actually behave differently (like DocRowParams and MapSolrParams) around.\n\nThe idea above would make all params modifiable, which might be surprising to some users.  Javadoc updates would be important.  May need a separate issue. ",
            "id": "comment-15428195"
        },
        {
            "date": "2016-08-22T13:25:29+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "+1 to this simplification, unless there is a very good reason why params should normally not be modifiable? ",
            "id": "comment-15430745"
        },
        {
            "date": "2017-07-05T13:29:39+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Closing as \"not a problem\". Please open another JIRA for the SolrParams simplification idea. ",
            "id": "comment-16074750"
        }
    ]
}