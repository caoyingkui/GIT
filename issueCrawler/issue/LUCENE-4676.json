{
    "id": "LUCENE-4676",
    "title": "IndexReader.isCurrent race",
    "details": {
        "components": [
            "core/index"
        ],
        "fix_versions": [
            "4.1",
            "6.0"
        ],
        "affect_versions": "4.0",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Revision: 1431169\n\nant test  -Dtestcase=TestNRTManager -Dtests.method=testThreadStarvationNoDeleteNRTReader -Dtests.seed=925ECD106FBFA3FF -Dtests.slow=true -Dtests.locale=fr_CA -Dtests.timezone=America/Kentucky/Louisville -Dtests.file.encoding=US-ASCII -Dtests.dups=500",
    "attachments": {
        "LUCENE-4676.patch": "https://issues.apache.org/jira/secure/attachment/12564733/LUCENE-4676.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-01-14T14:19:33+0000",
            "content": "after looking at IW infostreams for a while I am convinced this is a test-bug (a pretty rare one I'd say). So what happens here is the following (applyDeletes=false):\n\n\n1. Thread[1] adds a doc (D1)\n2. Thread[1] pull a new reader\n3. Thread[1] adds another doc (D2)\n3a. Thread[2] pull a new reader\n3b. Thread[2] adds a del query\n3c. Thread[2] pull a new reader\n4. Thread[1] checks if reader is current \n\n\n(3a - 3c are concurrent) given that we don't apply deletes on a NRT reader pull we should see isCurrent == false ....\n\nWell this works most of the time unless there is a concurrent merge kicked off right after doc was added in 3 that sees both flushed segments (D1 and D2) and subsequently tries to apply deletes to those segments. Here comes the problem, if the applyDeletes is fast enough (ie. reaches BufferedDeletesStream#prune()) before 4 it drops the delete query from the streams (correct behavior!) but doesn't checkpoint since no segment was affected. If we check isCurrent now we see a true value since the BufferedDeletesStream is empty (pruned) and the merge didn't finish yet (no checkpoint) which means the version of the SegmentInfos is the same.\n\ndoes this make sense? I switched over to NoMergePolicy on this test and tests pass all the time (500k times executed) while with a real MP it fails very quickly for me. ",
            "author": "Simon Willnauer",
            "id": "comment-13552677"
        },
        {
            "date": "2013-01-14T16:19:39+0000",
            "content": "to visualize this again here is a commented Log from a failure:\n\n\n....\nIW [Thread-623]: getReader took 2 msec\nCMS Lucene Merge Thread #0:   merge thread: start\nTEST [Thread-623]: refresh after delete  <<<<========== HERE WE REFRESH AFTER THE DEL BY QUERY\nDW [Thread-623]: anyChanges? numDocsInRam=0 deletes=true hasTickets:false pendingChangesInFullFlush: false\nIW [Thread-623]: nrtIsCurrent: infoVersion matches: true DW changes: true BD changes: true\nDW [Thread-623]: anyChanges? numDocsInRam=0 deletes=true hasTickets:false pendingChangesInFullFlush: false\nDW [Thread-623]: anyChanges? numDocsInRam=0 deletes=true hasTickets:false pendingChangesInFullFlush: false\nDW [Thread-623]: anyChanges? numDocsInRam=0 deletes=true hasTickets:false pendingChangesInFullFlush: false\nDW [Thread-623]: anyChanges? numDocsInRam=0 deletes=true hasTickets:false pendingChangesInFullFlush: false\nIW [Thread-623]: nrtIsCurrent: infoVersion matches: true DW changes: true BD changes: true\nDW [Thread-623]: anyChanges? numDocsInRam=0 deletes=true hasTickets:false pendingChangesInFullFlush: false\nDW [Thread-623]: anyChanges? numDocsInRam=0 deletes=true hasTickets:false pendingChangesInFullFlush: false\nDW [Thread-623]: anyChanges? numDocsInRam=0 deletes=true hasTickets:false pendingChangesInFullFlush: false\nIW [Thread-623]: flush at getReader\nDW [Thread-623]: Thread-623 startFullFlush\nDW [Thread-623]: anyChanges? numDocsInRam=0 deletes=true hasTickets:false pendingChangesInFullFlush: false\nDWFC [Thread-623]: addFlushableState DocumentsWriterPerThread [pendingDeletes=gen=0, segment=null, aborting=false, numDocsInRAM=0, deleteQueue=DWDQ: [ generation: 3 ]]\nDW [Thread-623]: Thread-623: flush naked frozen global deletes  <<<<========== HERE WE PUSH THE DEL BY QUERY TO THE BUFFERED DELETE STREAM\nBD [Thread-623]: push deletes  1 deleted queries bytesUsed=32 delGen=4 packetCount=2 totBytesUsed=1056\nDW [Thread-623]: flush: push buffered deletes:  1 deleted queries bytesUsed=32\nBD Lucene Merge Thread #0: applyDeletes: infos=[_1(5.0):c1, _0(5.0):C1] packetCount=2\nBD Lucene Merge Thread #0: seg=_1(5.0):c1 segGen=3 coalesced deletes=[CoalescedDeletes(termSets=1,queries=1)] newDelCount=0\nBD Lucene Merge Thread #0: seg=_0(5.0):C1 segGen=1 coalesced deletes=[CoalescedDeletes(termSets=2,queries=1)] newDelCount=0\nBD Lucene Merge Thread #0: applyDeletes took 0 msec  <<<<========== THE MERGE KICKS IN\nBD Lucene Merge Thread #0: prune sis=org.apache.lucene.index.SegmentInfos@6dfb8d2e minGen=5 packetCount=2\nBD Lucene Merge Thread #0: pruneDeletes: prune 2 packets; 0 packets remain  <<<<========== MERGE PRUNES AWAY THE PACKAGE\nIW Lucene Merge Thread #0: merge seg=_2 _1(5.0):c1 _0(5.0):C1\nIW Lucene Merge Thread #0: now merge\n  merge=_1(5.0):c1 _0(5.0):C1\n  index=_0(5.0):C1 _1(5.0):c1\nIW Lucene Merge Thread #0: merging _1(5.0):c1 _0(5.0):C1\nIW [Thread-623]: don't apply deletes now delTermCount=0 bytesUsed=0\nIW [Thread-623]: return reader version=6 reader=StandardDirectoryReader(:nrt _0(5.0):C1 _1(5.0):c1)\nDW [Thread-623]: Thread-623 finishFullFlush success=true\nIW [Thread-623]: getReader took 1 msec <<<<========== HERE WE ARE DONE REFRESHING AFTER THE DELETE \u2013 DEL QUERY IS ALREADY GONE \nIW Lucene Merge Thread #0: seg=_1(5.0):c1 no deletes\nIW Lucene Merge Thread #0: seg=_0(5.0):C1 no deletes\nTEST [TEST-TestNRTManager.testThreadStarvationNoDeleteNRTReader-seed#[925ECD106FBFA3FF]]: done updating\nDW [TEST-TestNRTManager.testThreadStarvationNoDeleteNRTReader-seed#[925ECD106FBFA3FF]]: anyChanges? numDocsInRam=0 deletes=false hasTickets:false pendingChangesInFullFlush: false\nIW [TEST-TestNRTManager.testThreadStarvationNoDeleteNRTReader-seed#[925ECD106FBFA3FF]]: nrtIsCurrent: infoVersion matches: true DW changes: false BD changes: false <<<<========== HERE WE ARE ASSERTING ON isCurrent == FALSE and FAIL!!\nDW [TEST-TestNRTManager.testThreadStarvationNoDeleteNRTReader-seed#[925ECD106FBFA3FF]]: anyChanges? numDocsInRam=0 deletes=false hasTickets:false pendingChangesInFullFlush: false\nDW [TEST-TestNRTManager.testThreadStarvationNoDeleteNRTReader-seed#[925ECD106FBFA3FF]]: anyChanges? numDocsInRam=0 deletes=false hasTickets:false pendingChangesInFullFlush: false\nSM Lucene Merge Thread #0: merge store matchedCount=2 vs 2\n ",
            "author": "Simon Willnauer",
            "id": "comment-13552836"
        },
        {
            "date": "2013-01-14T16:42:48+0000",
            "content": "here is a patch to fix this test ",
            "author": "Simon Willnauer",
            "id": "comment-13552863"
        },
        {
            "date": "2013-01-14T19:02:16+0000",
            "content": "This explanation makes perfect sense!  Thanks for digging Simon.  +1 to just use NoMergePolicy. ",
            "author": "Michael McCandless",
            "id": "comment-13552994"
        },
        {
            "date": "2013-01-14T19:50:36+0000",
            "content": "[trunk commit] Simon Willnauer\nhttp://svn.apache.org/viewvc?view=revision&revision=1433079\n\nLUCENE-4676: Use NoMergePolicy in starvation test to prevent buffered deletes pruning ",
            "author": "Commit Tag Bot",
            "id": "comment-13553044"
        },
        {
            "date": "2013-01-14T20:17:36+0000",
            "content": "Thanks Simon! ",
            "author": "Robert Muir",
            "id": "comment-13553071"
        },
        {
            "date": "2013-01-14T20:18:09+0000",
            "content": "[branch_4x commit] Simon Willnauer\nhttp://svn.apache.org/viewvc?view=revision&revision=1433093\n\nLUCENE-4676: Use NoMergePolicy in starvation test to prevent buffered deletes pruning ",
            "author": "Commit Tag Bot",
            "id": "comment-13553072"
        }
    ]
}