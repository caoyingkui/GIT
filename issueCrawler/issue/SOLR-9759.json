{
    "id": "SOLR-9759",
    "title": "Admin UI should post streaming expressions",
    "details": {
        "components": [
            "Admin UI"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "6.2.1",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Haven't had the chance to test this in 6.3, but in 6.2.1 I just ran into request entity too large, when I pasted an expression into the admin ui to begin debugging it... \n\nFurthermore, the UI gives no indication of any error at all, leading one to sit, waiting for the response. Firefox JavaScript console shows a 413 response and this:\n\n11:01:11.095 Error: JSON.parse: unexpected character at line 1 column 1 of the JSON data\n$scope.doStream/<@http://localhost:8984/solr/js/angular/controllers/stream.js:48:24\nv/</e[k]/n<@http://localhost:8984/solr/libs/angular-resource.min.js:33:133\nprocessQueue@http://localhost:8984/solr/libs/angular.js:13193:27\nscheduleProcessQueue/<@http://localhost:8984/solr/libs/angular.js:13209:27\n$RootScopeProvider/this.$get</Scope.prototype.$eval@http://localhost:8984/solr/libs/angular.js:14406:16\n$RootScopeProvider/this.$get</Scope.prototype.$digest@http://localhost:8984/solr/libs/angular.js:14222:15\n$RootScopeProvider/this.$get</Scope.prototype.$apply@http://localhost:8984/solr/libs/angular.js:14511:13\ndone@http://localhost:8984/solr/libs/angular.js:9669:36\ncompleteRequest@http://localhost:8984/solr/libs/angular.js:9859:7\nrequestLoaded@http://localhost:8984/solr/libs/angular.js:9800:9\n1angular.js:11617:18\nconsoleLog/<()angular.js:11617\n$ExceptionHandlerProvider/this.$get</<()angular.js:8567\nprocessQueue()angular.js:13201\nscheduleProcessQueue/<()angular.js:13209\n$RootScopeProvider/this.$get</Scope.prototype.$eval()angular.js:14406\n$RootScopeProvider/this.$get</Scope.prototype.$digest()angular.js:14222\n$RootScopeProvider/this.$get</Scope.prototype.$apply()angular.js:14511\ndone()angular.js:9669\ncompleteRequest()angular.js:9859\nrequestLoaded()angular.js:9800",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-01-22T22:17:58+0000",
            "author": "Gus Heck",
            "content": "One work around (hack) is to edit etc/jetty.xml and change \n\n    <Set name=\"requestHeaderSize\"><Property name=\"solr.jetty.request.header.size\" default=\"8192\" /></Set>\n \n\nto something larger... \n\n    <Set name=\"requestHeaderSize\"><Property name=\"solr.jetty.request.header.size\" default=\"32768\" /></Set>\n \n ",
            "id": "comment-15833731"
        },
        {
            "date": "2017-02-10T22:48:16+0000",
            "author": "Dennis Gove",
            "content": "Just to be clear, the expression you attempted to execute was larger than 8192bytes? ",
            "id": "comment-15861953"
        },
        {
            "date": "2017-02-12T18:17:02+0000",
            "author": "Gus Heck",
            "content": "Yes ",
            "id": "comment-15862899"
        },
        {
            "date": "2017-02-12T19:01:39+0000",
            "author": "Gus Heck",
            "content": "The size of my request was primarily because I don't know of a way to create parameterized subroutines (or perhaps reuse \"named streams\"). I had 4 basic operations that needed to be joined to 2 different data types (thus had to be duplicated), and within each of the 4 operations (now 8) there were 2 complement operations... all from the same source, but again had to be duplicated. meaning there were 24 sources, and with some top and selects thrown in at various levels, I wound up with 128 nodes in the explain graph. Made for a pretty picture, but it was very un-DRY. ",
            "id": "comment-15862916"
        },
        {
            "date": "2017-02-13T01:14:09+0000",
            "author": "Joel Bernstein",
            "content": "Hi Gus Heck,\n\nYou can use Solr's built-in parameter substitution in the situation you described.\n\nhttp://yonik.com/solr-query-parameter-substitution/\n ",
            "id": "comment-15863097"
        },
        {
            "date": "2017-02-14T03:31:56+0000",
            "author": "Gus Heck",
            "content": "Good point Joel, though this is not really supported in the Admin UI. ",
            "id": "comment-15864964"
        }
    ]
}