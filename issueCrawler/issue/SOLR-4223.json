{
    "id": "SOLR-4223",
    "title": "jetty8 with solr4.0: In jetty.xml maxFormContentSize configuration needs Fixing",
    "details": {
        "affect_versions": "4.0",
        "status": "Closed",
        "fix_versions": [
            "4.1",
            "6.0"
        ],
        "components": [
            "search",
            "Tests"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "In jetty.xml, the cofiguration to set the maximum form content size does not work, because jetty contextHandler reads System property org.eclipse.jetty.server.Request.maxFormContentSize.\n\nIn CotextHandler.java line 137, the method call \"Integer.getInteger(\"org.eclipse.jetty.server.Request.maxFormContentSize\",200000).intValue();\" returns always the default value 200000 regardless what is set below.\n\nSo instead of:\n<Call name=\"setAttribute\">\n   <Arg>org.eclipse.jetty.server.Request.maxFormContentSize</Arg>\n   <Arg>400000</Arg>\n</Call>\n\nReplace with: \n<Call class=\"java.lang.System\" name=\"setProperty\">\n    <Arg>org.eclipse.jetty.server.Request.maxFormContentSize</Arg>\n    <Arg>400000</Arg>\n</Call>\n\nPS:\nThere are other ways to set this config limit in commandline like -Dorg.eclipse.jetty.server.Request.maxFormContentSize=700000 or in web-jetty.xml which works fine.",
    "attachments": {
        "SOLR-4223.patch": "https://issues.apache.org/jira/secure/attachment/12562203/SOLR-4223.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Nathan Visagan",
            "id": "comment-13537002",
            "date": "2012-12-20T12:50:39+0000",
            "content": "This has been already raised in the comments of https://issues.apache.org/jira/browse/SOLR-3159\n But still unresolved. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13537019",
            "date": "2012-12-20T13:42:39+0000",
            "content": "This should also work.\n\n\n<Call name=\"setMaxFormContentSize\">\n<Arg>400000</Arg>\n</Call>\n\n\n\nCan you verify? "
        },
        {
            "author": "Nathan Visagan",
            "id": "comment-13537025",
            "date": "2012-12-20T13:59:08+0000",
            "content": "It does not work in jetty.xml.\n\n<Call name=\"setMaxFormContentSize\">\n<Arg>400000</Arg>\n</Call>\n\n\n\nNo method called setMaxFormContentSize is found in class org.eclipse.jetty.server.Server\nBut you can do \n\n<Configure class=\"org.eclipse.jetty.webapp.WebAppContext\">\n  <Set name=\"maxFormContentSize\">400000</Set>\n</Configure>\n\n \nin web-jetty.xml. But this is a setting file in WEB-INF folder which can override the settings mentioned in jetty.xml. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13537243",
            "date": "2012-12-20T18:38:48+0000",
            "content": "Why do we need to set this at all?\nWe read POST content by an InputStream, but we are never interested in the contents interpreted as form-content at all? "
        },
        {
            "author": "Nathan Visagan",
            "id": "comment-13537264",
            "date": "2012-12-20T19:02:00+0000",
            "content": "This happens when I submit a query\n\ncurl -X POST -d @query.txt http://localhost:8787/solr/select\n\n\nquery.txt is the file containg the query "
        },
        {
            "author": "Daniel Collins",
            "id": "comment-13537765",
            "date": "2012-12-21T09:10:29+0000",
            "content": "As nathan says we are seeing errors in Solr, such as:\n\n\n05:53:44 newssolr:ERROR o.a.solr.servlet.SolrDispatchFilter - null:java.lang.IllegalStateException: Form too large348594>200000\n05:53:44 newssolr:~at org.eclipse.jetty.server.Request.extractParameters(Request.java:285)\n05:53:44 newssolr:~at org.eclipse.jetty.server.Request.getParameterMap(Request.java:711)\n05:53:44 newssolr:~at org.apache.solr.request.ServletSolrParams.<init>(ServletSolrParams.java:29)\n05:53:44 newssolr:~at org.apache.solr.servlet.StandardRequestParser.parseParamsAndFillStreams(SolrRequestParsers.java:394)\n05:53:44 newssolr:~at org.apache.solr.servlet.SolrRequestParsers.parse(SolrRequestParsers.java:115)\n05:53:44 newssolr:~at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:260)\n05:53:44 newssolr:~at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1307)\n05:53:44 newssolr:~at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:453)\n05:53:44 newssolr:~at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\n05:53:44 newssolr:~at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:559)\n05:53:44 newssolr:~at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\n05:53:44 newssolr:~at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1072)\n05:53:44 newssolr:~at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:382)\n05:53:44 newssolr:~at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\n05:53:44 newssolr:~at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1006)\n05:53:44 newssolr:~at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\n05:53:44 newssolr:~at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)\n05:53:44 newssolr:~at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)\n05:53:44 newssolr:~at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\n05:53:44 newssolr:~at org.eclipse.jetty.server.Server.handle(Server.java:365)\n05:53:44 newssolr:~at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:485)\n05:53:44 newssolr:~at org.eclipse.jetty.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:53)\n05:53:44 newssolr:~at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:926)\n05:53:44 newssolr:~at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:988)\n05:53:44 newssolr:~at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:642)\n05:53:44 newssolr:~at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)\n05:53:44 newssolr:~at org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:72)\n05:53:44 newssolr:~at org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:264)\n05:53:44 newssolr:~at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\n05:53:44 newssolr:~at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\n05:53:44 newssolr:~at java.lang.Thread.run(Thread.java:619)\n\n\n\nWe have very long queries (we are testing the XML parser) so we POST data instead of GET. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13537773",
            "date": "2012-12-21T09:34:40+0000",
            "content": "Running a very recent branch_4x.  I have this in jetty.xml:\n\n\n<Configure id=\"Server\" class=\"org.eclipse.jetty.server.Server\">\n\n    <!-- Increase the maximum POST size to 1 MB to be able to handle large shard requests -->\n    <Call name=\"setAttribute\">\n      <Arg>org.eclipse.jetty.server.Request.maxFormContentSize</Arg>\n      <Arg>1048576</Arg>\n    </Call>\n\n\n\nBy artificially making my code add 200000 spaces to a deleteByQuery, I duplicated this issue:\n\n\nERROR - 2012-12-21 02:29:00.108; org.apache.solr.common.SolrException; null:java.lang.IllegalStateException: Form too large200077>200000\n        at org.eclipse.jetty.server.Request.extractParameters(Request.java:326)\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13538648",
            "date": "2012-12-22T02:23:40+0000",
            "content": "As noted in SOLR-3159, we're already using hte jetty recommended method for \"Changing the Maximum Form Size for All Apps on a Server\" \u2013 except that apparently that doesn't actually work.\n\nThe attached patch seems to fix this by setting it in the solr context file \u2013 i was hoping to write a junit test to sanity check it moving forward, but all the solr example tests use the \"JettySolrRunner\" to test out hte solr example configs in a jetty instance wired via java \u2013 they weren't designed to test the example jetty configs. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13539079",
            "date": "2012-12-23T19:45:02+0000",
            "content": "I filed a matching bug against the jetty project.\n\nhttps://bugs.eclipse.org/bugs/show_bug.cgi?id=397130 "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13539322",
            "date": "2012-12-24T21:10:34+0000",
            "content": "[trunk commit] Shalin Shekhar Mangar\nhttp://svn.apache.org/viewvc?view=revision&revision=1425683\n\nSOLR-4223: \"maxFormContentSize\" in jetty.xml is not picked up by jetty 8\n  so set it via solr webapp context file "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13539323",
            "date": "2012-12-24T21:27:49+0000",
            "content": "Committed Hoss's patch in trunk and branch_4x. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13539324",
            "date": "2012-12-24T21:28:18+0000",
            "content": "[branch_4x commit] Shalin Shekhar Mangar\nhttp://svn.apache.org/viewvc?view=revision&revision=1425684\n\nSOLR-4223: \"maxFormContentSize\" in jetty.xml is not picked up by jetty 8\n  so set it via solr webapp context file "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13545905",
            "date": "2013-01-07T14:14:19+0000",
            "content": "Just received an email from eclipse bugzilla - a fix for the jetty bug will be in 8.1.9. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13545920",
            "date": "2013-01-07T14:36:21+0000",
            "content": "Hi,\nI am not sure, but this problem was fixed in Solr by my commit yesterday: SOLR-4265 (solr no longer uses ServletRequest.getParameter*() at all, it parses the POST contents by itsself using an own UTF-8 compatible parser). The above settings are affecting POST, right? Because GET URLs are still limited to maximum URL length, right?\n\nThe maximum length inside the default Solr config file for formdata sent through POST is now 2048 KiB ! You can raise it easily using solrconfig.xml. There is no config needed anymore in Solr's web.xml/jetty config, I did not know there were changes in Solr's web.xml about this. We should remove them now.\n\nSee also CHANGES.txt and Solr Wiki about Tomcat configuration. "
        }
    ]
}