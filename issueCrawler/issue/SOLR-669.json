{
    "id": "SOLR-669",
    "title": "SOLR currently does not support caching for (Query, FacetFieldList)",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "It is huge performance bottleneck and it describes huge difference between qtime and SolrJ's elapsedTime. I quickly browsed SolrIndexSearcher: it caches only (Key, DocSet/DocList <Lucene Ids>) key-value pairs and it does not have cache for (Query, FacetFieldList).\nfilterCache stores DocList for each 'filter' and is used for constant recalculations...\n\nThis would be significant performance improvement.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Fuad Efendi",
            "id": "comment-12618574",
            "date": "2008-07-31T01:05:55+0000",
            "content": "This piece of code in SimpleFacets:\n\n    if (sf.multiValued() || ft.isTokenized() || ft instanceof BoolField) {\n      // Always use filters for booleans... we know the number of values is very small.\n      counts = getFacetTermEnumCounts(searcher, docs, field, offset, limit, mincount,missing,sort,prefix);\n    } else {\n      // TODO: future logic could use filters instead of the fieldcache if\n      // the number of terms in the field is small enough.\n      counts = getFieldCacheCounts(searcher, docs, field, offset,limit, mincount, missing, sort, prefix);\n    }\n\n\n\n\n\toptimization for single-valued non-tokenized... 'Lucene FieldCache to get counts for each unique field value in docs'\n\n\n\n\nWe should implement additional caching to support this the FilterCache to get the intersection; FilterCache stores DocSet only and does not store NamedList of field-intersections:\n\n\n    /**\n   * Returns a list of terms in the specified field along with the \n   * corresponding count of documents in the set that match that constraint.\n   * This method uses the FilterCache to get the intersection count between <code>docs</code>\n   * and the DocSet for each term in the filter.\n   *\n   * @see FacetParams#FACET_LIMIT\n   * @see FacetParams#FACET_ZEROS\n   * @see FacetParams#FACET_MISSING\n   */\n  public NamedList getFacetTermEnumCounts(SolrIndexSearcher searcher, DocSet docs, String field, int offset, int limit, int mincount, boolean missing, boolean sort, String prefix)\n    throws IOException {\n...\n}\n\n "
        },
        {
            "author": "Fuad Efendi",
            "id": "comment-12618578",
            "date": "2008-07-31T01:16:46+0000",
            "content": "To confirm: \n\n\tSOLR uses Lucene internals (with caching) only if field is non-tokenized single-valued non-boolean, and SOLR does not have own cache to store calculated intersections (faceting).\n\n "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13581763",
            "date": "2013-02-19T23:41:04+0000",
            "content": "Closing old issue, please re-open if necessary. "
        },
        {
            "author": "Gunnar Wagenknecht",
            "id": "comment-13581976",
            "date": "2013-02-20T05:54:45+0000",
            "content": "This bug is closed as duplicate but I can't actually see a link to the other issue this one duplicates. It would be nice if such a link can be added. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13582549",
            "date": "2013-02-20T21:41:53+0000",
            "content": "Changed resolution state to \"Won't fix\". It appears this is not a feature anyone finds useful enough to even comment on, far less contribute to for almost 5 years, so to me that's a theoretical need, not a real one. Please re-open if you (or anyone else) want to see this solved. "
        }
    ]
}