{
    "id": "SOLR-785",
    "title": "Distributed SpellCheckComponent",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.5",
            "3.1",
            "4.0-ALPHA"
        ],
        "components": [
            "spellchecker"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Enhance the SpellCheckComponent to run in a distributed (sharded) environment.",
    "attachments": {
        "spelling-shard.patch": "https://issues.apache.org/jira/secure/attachment/12408384/spelling-shard.patch",
        "SOLR-785.patch": "https://issues.apache.org/jira/secure/attachment/12426591/SOLR-785.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Matthew Woytowitz",
            "id": "comment-12710378",
            "date": "2009-05-18T14:56:25+0000",
            "content": "This is a patch to enable spellchecking in the distributed setup. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12712562",
            "date": "2009-05-24T15:28:44+0000",
            "content": "Matthew, thanks for the patch. Can you please include a unit test?\n\nAlso, I'm thinking that we could refactor the Lucene spell checker to fetch the suggestions without the edit distance and find out the top 'n' suggestions after performing an edit distance on the aggregator. What do you think? "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12783623",
            "date": "2009-11-30T11:49:48+0000",
            "content": "I'm writing a test for this patch.\n\nWith only one shard (say localhost:57369/solr), I get correct results if I do not specify shards parameter. If I specify shards=localhost:57369/solr on the same Solr, I get a different result. Debugging now. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12783748",
            "date": "2009-11-30T17:13:27+0000",
            "content": "Well, there is only finishStage in the patch which is of no use alone. SpellCheckComponent needs to either generate shard requests or piggyback on existing requests to merge the data in finishStage.\n\nThis brings up interesting questions - How do we perform distributed search for SearchComponents which are not added by default to SearchHandler? Only if the chain has QueryComponent, can we modify its requests. Otherwise we must issue new ShardRequests. Is assuming that configuration of the search component chain is the same between all shards OK? "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12784104",
            "date": "2009-12-01T07:50:33+0000",
            "content": "As noted on solr-dev, I had misunderstood the behavior. The problem was that I had configured a separate handler for spellcheck and I needed to pass shards.qt to make it work with distributed search.\n\nSo distributed spell check is working and I'm trying to write tests making sure that the response returned by distributed spellcheck is the same as the one returned by non-distributed spellcheck for the various spellcheck parameters.\n\nIn the current patch, distributed spellcheck always returns correctlySpelled=false which non-distributed mode does not. I'll have a patch ready soon with the test and fixes. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12784158",
            "date": "2009-12-01T10:27:48+0000",
            "content": "There are a couple of problems with the current patch:\n\n\tIt breaks ties using frequency info even if onlyMorePopular=false\n\tIf more than one suggestion are returned by a shard (extendedResults=false), it uses the first one and discards the rest\n\tIt duplicates a lot of response writing code\n\n\n\nIdeally, we'd like to:\n\n\tShare the same response writing code - Construct a SpellingResult using the shard responses and pass it to the existing toNamedList method so that there is no discrepancy between distributed and non-distributed mode\n\tBreak ties by the configured distance measure. If distance is same and onlyMorePopular=true, then break ties by frequency (same as how Lucene SpellChecker breaks ties)\n\n "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12784488",
            "date": "2009-12-01T22:40:36+0000",
            "content": "\n\tBreak ties exactly as Lucene SpellChecker\n\tMerge frequency info of original tokens as well as suggestions\n\tCreate SpellingResult objects after merging data from shards and pass to #toNamedList to write response\n\n\n\nThis is a half baked patch and not fit to be committed. Problems include (but not limited to!) :\n\n\tThe test case fails for extendedResults=false (something to do how original frequency is added to SpellingResult) as it returns correctlySpelled=false when it shouldn't.\n\tSpellcheck Index corruption in stress tests - race conditions in SpellCheckComponent I guess\n\tNot optimized at all - quick hack\n\n\n\nI'm putting this out because I'll not be able to look at this for the next two days. If someone wants to take this out for a spin, please do. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12785909",
            "date": "2009-12-04T12:45:07+0000",
            "content": "\n\tFixes bugs with response format\n\tFixes another bug with wrong order of results\n\n\n\nWe need to take another look at how the rebuild happens. There seem to be some race conditions which show up when we do stress testing. For now, this patch disables stress tests. I'll investigate and open other issues for that. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12786496",
            "date": "2009-12-05T20:51:45+0000",
            "content": "\nWe need to take another look at how the rebuild happens. There seem to be some race conditions which show up when we do stress testing. For now, this patch disables stress tests. I'll investigate and open other issues for that.\n\nI just noticed the LUCENE-2108 commit. After upgrading the contrib spellcheck jar to lucene trunk, these issues are no longer reproducible. Those changes are not yet ported to the Lucene 2.9 branch but will soon be.\n\nDo we need to keep Lucene core and contrib versions in sync? It seems like we'll need to upgrade contrib-spellcheck. Is it necessary to upgrade both core and contrib to latest 2.9 branch or can we just go ahead and upgrade spellcheck (perhaps even to 3.0 since it is compatible). "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-12786635",
            "date": "2009-12-06T15:57:33+0000",
            "content": "FYI\nThose changes are not yet ported to the Lucene 2.9 branch but will soon be.\nDone!\n "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12787078",
            "date": "2009-12-07T19:51:58+0000",
            "content": "Thanks Simon!\n\n\n\tOverrides modifyRequest to enable spellcheck only in GET_TOP_IDS (otherwise we do the spellcheck for each request)\n\tRequest for at least 5 suggestions from each shard for more accurate merged results\n\tRe-enables stress testing (requires LUCENE-2108)\n\tUse LinkedHashMap for \"origVsSuggested\" map to preserve order of tokens because collation algorithm only works in-order.\n\n\n\nAll tests pass.\n\nThis can definitely be optimized further. The four maps can be removed if we can collect by iterating over the tokens in original query (we may need one to cache SpellCheckResponse). However, I have bigger itches to scratch so I'll leave this here.\n\nI'll commit this after a day or two in case somebody wants to review the patch (or improve it). "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12787087",
            "date": "2009-12-07T20:17:18+0000",
            "content": "Updating for SOLR-1608 commit. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12788082",
            "date": "2009-12-09T13:23:49+0000",
            "content": "Committed revision 888796.\n\nThanks Matthew! "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872828",
            "date": "2010-05-28T03:32:52+0000",
            "content": "\nCorrecting Fix Version based on CHANGES.txt, see this thread for more details...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13013043",
            "date": "2011-03-30T15:45:23+0000",
            "content": "Bulk close for 3.1.0 release "
        }
    ]
}