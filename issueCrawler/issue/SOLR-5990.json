{
    "id": "SOLR-5990",
    "title": "SolrCloud with LotsOfCores does not come up fully",
    "details": {
        "affect_versions": "4.7.1",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "I have ~800 collections, each with a replica in two Solr nodes (so a total of ~1600 cores).\n\nMany times when I restart both nodes they both come up and within a few  minutes all cores are available and there are no problems.\n\nSome times, though, I'll see the following:\n\nAfter a few minutes a bunch of cores are still in a \"down\" state.\n\nIn the logs, I see errors indicating failures for the \"down\" cores like this:\n\n2014-04-16 20:43:18,902 [coreZkRegister-1-thread-260] INFO  org.apache.solr.update.PeerSync - PeerSync: core=instance_5691 url=http://localhost:19082/solr START replicas=[http://localhost:19081/solr/instance_5691/] nUpdates=100\n2014-04-16 20:43:18,902 [coreZkRegister-1-thread-34] INFO  org.apache.solr.update.PeerSync - PeerSync: core=instance_5217 url=http://localhost:19082/solr DONE.  We have no versions.  sync failed.\n\n\nAfter approximately 10 minutes of nothing really happening, the nodes \"woke up\" and a few collections reconciled. There are a lot of failures that indicate a retry will occur - every retry waits double the amount of time as the previous wait.\n\n2014-04-16 20:56:37,515 [http-19081-82] ERROR org.apache.solr.core.ZkContainer - :org.apache.solr.common.SolrException: Error getting leader from zk for shard shard1\n        at org.apache.solr.cloud.ZkController.getLeader(ZkController.java:887)\n        at org.apache.solr.cloud.ZkController.register(ZkController.java:790)\n        at org.apache.solr.cloud.ZkController.register(ZkController.java:738)\n        at org.apache.solr.core.ZkContainer$2.run(ZkContainer.java:263)\n        at org.apache.solr.core.ZkContainer.registerInZk(ZkContainer.java:287)\n        at org.apache.solr.core.CoreContainer.registerCore(CoreContainer.java:491)\n        at org.apache.solr.core.CoreContainer.registerCore(CoreContainer.java:444)\n        at org.apache.solr.core.CoreContainer.getCore(CoreContainer.java:847)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:309)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:217)\n        at veeva.ecm.common.interfaces.web.SolrDispatchOverride.doFilter(SolrDispatchOverride.java:34)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:554)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)\n        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:859)\n        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)\n        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)\n        at java.lang.Thread.run(Thread.java:744) \nCaused by: org.apache.solr.common.SolrException: Could not get leader props\n        at org.apache.solr.cloud.ZkController.getLeaderProps(ZkController.java:934)\n        at org.apache.solr.cloud.ZkController.getLeaderProps(ZkController.java:898)\n        at org.apache.solr.cloud.ZkController.getLeader(ZkController.java:853)\n        ... 23 more\nCaused by: org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /collections/instance_4345_CONTENT/leaders/shard1\n        at org.apache.zookeeper.KeeperException.create(KeeperException.java:111)\n        at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)\n        at org.apache.zookeeper.ZooKeeper.getData(ZooKeeper.java:1151)\n        at org.apache.solr.common.cloud.SolrZkClient$7.execute(SolrZkClient.java:274)\n        at org.apache.solr.common.cloud.SolrZkClient$7.execute(SolrZkClient.java:271)\n        at org.apache.solr.common.cloud.ZkCmdExecutor.retryOperation(ZkCmdExecutor.java:73)\n        at org.apache.solr.common.cloud.SolrZkClient.getData(SolrZkClient.java:271)\n        at org.apache.solr.cloud.ZkController.getLeaderProps(ZkController.java:912)\n        ... 25 more\n\n\nNote that zkClientTimeout is set to 30000. Later I see lots of the following\n\n2014-04-16 21:25:22,861 [RecoveryThread] ERROR org.apache.solr.cloud.RecoveryStrategy - Recovery failed - trying again... (10) core=instance_3007\n2014-04-16 21:25:22,861 [RecoveryThread] INFO  org.apache.solr.cloud.RecoveryStrategy - Wait 600.0 seconds before trying to recover again (11)\n2014-04-16 21:25:24,222 [RecoveryThread] ERROR org.apache.solr.cloud.RecoveryStrategy - Error while trying to recover. core=instance_4345_CONTENT:org.apache.solr.common.SolrException: No registered leader was found after waiting for 4000ms , collection: instance_4345_CONTENT slice: shard1\n        at org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(ZkStateReader.java:531)\n        at org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(ZkStateReader.java:514)\n        at org.apache.solr.cloud.RecoveryStrategy.doRecovery(RecoveryStrategy.java:345) \n        at org.apache.solr.cloud.RecoveryStrategy.run(RecoveryStrategy.java:247)\n\n\nEventually both nodes appear to have replicas in a recovery_failed state. The following is retried dozens of times:\n\n2014-04-16 21:28:17,337 [RecoveryThread] ERROR org.apache.solr.cloud.RecoveryStrategy - Error while trying to recover. core=instance_4345_CONTENT:org.apache.solr.common.SolrException: No registered leader was found after waiting for 4000ms , collection: instance_4345_CONTENT slice: shard1\n\tat org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(ZkStateReader.java:531)\n\tat org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(ZkStateReader.java:514)\n\tat org.apache.solr.cloud.RecoveryStrategy.doRecovery(RecoveryStrategy.java:345)\n\tat org.apache.solr.cloud.RecoveryStrategy.run(RecoveryStrategy.java:247)\n\n2014-04-16 21:28:17,337 [RecoveryThread] ERROR org.apache.solr.cloud.RecoveryStrategy - Recovery failed - trying again... (0) core=instance_4345_CONTENT\n2014-04-16 21:28:17,337 [RecoveryThread] ERROR org.apache.solr.cloud.RecoveryStrategy - Recovery failed - interrupted. core=instance_4345_CONTENT\n2014-04-16 21:28:17,337 [RecoveryThread] ERROR org.apache.solr.cloud.RecoveryStrategy - Recovery failed - I give up. core=instance_4345_CONTENT\n2014-04-16 21:28:17,337 [RecoveryThread] INFO  org.apache.solr.cloud.ZkController - publishing core=instance_4345_CONTENT state=recovery_failed collection=instance_4345_CONTENT\n2014-04-16 21:28:17,337 [RecoveryThread] INFO  org.apache.solr.cloud.ZkController - numShards not found on descriptor - reading it from system property\n2014-04-16 21:28:17,338 [RecoveryThread] WARN  org.apache.solr.cloud.RecoveryStrategy - Stopping recovery for zkNodeName=localhost:19082_solr_instance_4345_CONTENTcore=instance_4345_CONTENT\n2014-04-16 21:28:17,338 [RecoveryThread] INFO  org.apache.solr.cloud.RecoveryStrategy - Finished recovery process. core=instance_4345_CONTENT\n2014-04-16 21:28:17,339 [RecoveryThread] INFO  org.apache.solr.cloud.RecoveryStrategy - Starting recovery process.  core=instance_4345_CONTENT recoveringAfterStartup=false\n2014-04-16 21:28:17,341 [main-EventThread] INFO  org.apache.solr.cloud.ShardLeaderElectionContext - Running the leader process for shard shard1\n2014-04-16 21:28:17,343 [main-EventThread] INFO  org.apache.solr.cloud.ShardLeaderElectionContext - Checking if I should try and be the leader.\n2014-04-16 21:28:17,344 [main-EventThread] INFO  org.apache.solr.cloud.ShardLeaderElectionContext - My last published State was recovery_failed, I won't be the leader.\n2014-04-16 21:28:17,344 [main-EventThread] INFO  org.apache.solr.cloud.ShardLeaderElectionContext - There may be a better leader candidate than us - going back into recovery\n2014-04-16 21:28:17,344 [main-EventThread] INFO  org.apache.solr.update.DefaultSolrCoreState - Running recovery - first canceling any ongoing recovery\n2014-04-16 21:28:17,344 [main-EventThread] WARN  org.apache.solr.cloud.RecoveryStrategy - Stopping recovery for zkNodeName=localhost:19082_solr_instance_4345_CONTENTcore=instance_4345_CONTENT",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14117943",
            "date": "2014-09-02T06:43:09+0000",
            "content": "Hi Rich, one workaround would be to increase the \"coreLoadThreads\" param in solr.xml so that more threads are available to concurrently load all the cores you have. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-14118257",
            "date": "2014-09-02T15:05:28+0000",
            "content": "Rich:\n\nI want to make sure of something. If you're specifying \"lazy loading\" of cores, i.e. things like \"loadOnStartup=false\" and \"transient=true\", AND you're using SolrCloud, you're in uncharted territory. There is work afoot to make these options play nice with SolrCloud, but this hasn't been explored in detail yet.\n\nI just added a banner to the Wiki page, I'll check the ref guide too.\n "
        },
        {
            "author": "Rich Mayfield",
            "id": "comment-14118293",
            "date": "2014-09-02T16:06:33+0000",
            "content": "Thanks Shalin Shekhar Mangar, I'll have to give that a try when I get a chance. "
        },
        {
            "author": "Rich Mayfield",
            "id": "comment-14118296",
            "date": "2014-09-02T16:08:17+0000",
            "content": "Erick Erickson, I definitely was not lazy loading the cores in this case.\n\nI did lazy load once and it was clear that that was not safe. "
        }
    ]
}