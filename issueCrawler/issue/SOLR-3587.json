{
    "id": "SOLR-3587",
    "title": "After reloading a SolrCore, the original Analyzer is still used rather than a new one.",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "4.0-BETA",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Blocker",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "It's a usual practice in Solr to overwrite synonyms/stopwords files and issue a core reload command to force Solr reload these files. We've noticed that this trick is no longer working on trunk. \n\nI started debugging this problem in Eclipse and I can see that Solr actually re-reads updated synonym file on core reload, but indexing process still uses old reference to Synonym filter / SynonymMap instance. \n\nWhen I start Solr initially I can see that my Solr server has 2 instances of SynonymMap (the object that holds actual synonyms data). This is expected as I have 2 SynonymFilters defined in my schema (one field with 2 synonym filters - index + query time)\n\nAfter a core reload I see that Solr has 4 instances of this class. So I thought that there could be some leak and issued many (N) core reload commands and expected to see 2*N instances. It didn't happen. I can only see 20 instances of this class. \n\nThis is pretty interesting number as well because, according to thread dump/list, Solr/Jetty has 10 working threads in thread pool (by default for example configs). So I suspect that we cache something in thread local storage and it hits us. \n\nI looked into the code and found that Lucene caches token streams in ThreadLocal, but I don't know the code enough to state that this is the problem.\n\nSo I took a different approach and found the commit that introduced this bug. I wrote a simple test (shell script) and used git bisect tool to chase this bug.\n\n\nffd9c717448eca895d19be8ee9718bc399ac34a7 is the first bad commit\ncommit ffd9c717448eca895d19be8ee9718bc399ac34a7\nAuthor: Mark Robert Miller <markrmiller@apache.org>\nDate:   Thu Jun 30 13:59:59 2011 +0000\n\n      SOLR-2193, SOLR-2565: The default Solr update handler has been improved so\n      that it uses fewer locks, keeps the IndexWriter open rather than closing it\n      on each commit (ie commits no longer wait for background merges to complete),\n      works with SolrCore to provide faster 'soft' commits, and has an improved API\n      that requires less instanceof special casing.\n\n      You may now specify a 'soft' commit when committing. This will\n      use Lucene's NRT feature to avoid guaranteeing documents are on stable storage in exchange\n      for faster reopen times. There is also a new 'soft' autocommit tracker that can be\n      configured.\n\n     SolrCores now properly share IndexWriters across SolrCore reloads.\n\n    git-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1141542 13f79535-47bb-0310-9956-ffa450edef68\n\nIt looks like sharing IndexWriters across SolrCore reloads could be the root cause, right?",
    "attachments": {
        "SOLR-3587.patch": "https://issues.apache.org/jira/secure/attachment/12534190/SOLR-3587.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Alexey Serba",
            "id": "comment-13404951",
            "date": "2012-07-02T09:08:40+0000",
            "content": "Added Solr test "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13405392",
            "date": "2012-07-02T22:19:38+0000",
            "content": "I have an early hack attempt at a workaround for this. It starts opening a new writer again, but also tracks how many writers are being used by forcing the caller to call a release method. When it's time to open a new writer, we stop giving the writer out, wait for all refs to come in, then open the new writer - then start giving refs to the new writer out.\n\nSome things that complicate this:\n\nAn NRT reader takes the writer as an argument. I have not dealt with this, and I don't yet know how to do so nicely.\n\nA couple tests needed to be changed to use a FSDirectory because on rebooting the writer, no existing index was found in the RAMDir.\n\nStill mostly an exploratory idea/solution.\n\nI'll post an ugly patch in a while, but headed out for a bit now. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13405407",
            "date": "2012-07-02T22:45:56+0000",
            "content": "Can't we just pass null for the writer analyzer (or a dummy one if it can't be null) and then just use the IW APIs that accept Analyzer? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13405454",
            "date": "2012-07-03T00:00:35+0000",
            "content": "Ah - still new to IWConfig - I was looking through the live stuff to try and change the analyzer.\n\nSo that will still leave the other settings unchangeable, but its a much cleaner solution, and the analyzer is really the deal killer here, so I'll give that a shot. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13405468",
            "date": "2012-07-03T00:24:38+0000",
            "content": "...the analyzer is really the deal killer here...\n\nyeah, if there is a clean way to make sure we get the analyzer working in 4.0 that should be the main priority.\n\nif there are other ways to do \"live\" indexwriter setting changes that can make it into 4.0 great, but worse case scenerio we can always document the caveat (or even have an alternate code path where we compare the settings and if they've changed to a hard close and let some updates fail) ... but that's really secondary.\n\nthe number of people who care about RELOADing cores with low level IW settings modified is probably a lot less then the number of people tweaking schema.xml "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13405888",
            "date": "2012-07-03T12:45:33+0000",
            "content": "mentioned patch attached for posterity - I'm going to give a shot at just updating the analyzer now. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13405942",
            "date": "2012-07-03T14:04:07+0000",
            "content": "Another simple patch with alexey's test (now passes) that simply uses an updated analyzer. I made a new issue for the other IW settings. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13405961",
            "date": "2012-07-03T18:22:35+0000",
            "content": "Committed - thanks all! "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13412243",
            "date": "2012-07-11T22:33:57+0000",
            "content": "hoss20120711-manual-post-40alpha-change "
        }
    ]
}