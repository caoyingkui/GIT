{
    "id": "LUCENE-5881",
    "title": "Add test beaster",
    "details": {
        "type": "Task",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [
            "general/build",
            "general/test"
        ],
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "4.10",
            "6.0"
        ]
    },
    "description": "On dev@lao we discussed about integrating a test beaster directly into google.\n\nThis extra target in common-build.xml does the same like Mike's Python script using Groovy.",
    "attachments": {
        "LUCENE-5881.patch": "https://issues.apache.org/jira/secure/attachment/12660825/LUCENE-5881.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14091926",
            "author": "Uwe Schindler",
            "content": "From mailing list:\n\n\nHi,\n\nattached you will find the beaster:\n\n\n\tOnly modifies common-build.xml, so no inherit down (makes no sense otherwise, as you would never run \"ant beast-test\" from top-level. So you have to go to correct submodule and run \"ant beast-test -Dbeast.iters=n -Dtestcase=...\" from there\n\tUses \"antcall\" in a loop, invoking the internal dependency-less \"-test\" target. My first impl used the test-macro directly, but this did not work, because test-macro sets non-local properties, which are then available on second round, causing errors or use always same seed. Antcall creates a new project each time and runs tests.\n\n\n\nI can open an issue or just commit this \n\nUwe\n\n\nUwe Schindler\nH.-H.-Meier-Allee 63, D-28213 Bremen\nhttp://www.thetaphi.de\neMail: uwe@thetaphi.de\n\n\n> ----Original Message----\n> From: Uwe Schindler uwe@thetaphi.de\n> Sent: Friday, August 08, 2014 8:13 PM\n> To: dev@lucene.apache.org\n> Subject: RE: Test iterations\n> \n> Hi,\n> \n> I will look into that as a Groovy Skript: The main problem is: You \n> cannot simply use <antcall/> in a loop, because this would also \n> execute the dependencies on each run.\n> \n> My idea is to do the following:\n> - maybe subclass antcall Task with Groovy (not sure if this is needed)\n> - instantiate it with current project\n> - execute dependent targets\n> - execute the inner target multiple times: store the project \n> properties first and restore them after execution. This is done, \n> because ANT properties can only be set once. If you don't give a \n> fixed test seed, each run would pick a new one (because the project \n> properties are reset, so the seed from the previous execution is gone).\n> \n> Uwe\n> \n> -----\n> Uwe Schindler\n> H.-H.-Meier-Allee 63, D-28213 Bremen\n> http://www.thetaphi.de\n> eMail: uwe@thetaphi.de\n> \n> \n> > ----Original Message----\n> > From: Ryan Ernst ryan@iernst.net\n> > Sent: Friday, August 08, 2014 5:08 PM\n> > To: dev@lucene.apache.org\n> > Subject: Re: Test iterations\n> >\n> > Thanks for the extremely thorough answer, Dawid!  Entertaining as \n> > always. \n> >\n> > > Should we provide this \"beaster\" in common-build?\n> >\n> > I would use it! It sounds like there is a lot of work involved in \n> > making tests.iters work better with LuceneTestCase.  In the mean \n> > time, this sounds like a quick solution that might not be as \n> > efficient (multiple JVMs), but still better than having to come up with a bash script?\n> >\n> > On Fri, Aug 8, 2014 at 7:28 AM, Michael McCandless \n> > <lucene@mikemccandless.com> wrote:\n> > > +1, this sounds awesome?\n> > >\n> > > Mike McCandless\n> > >\n> > > http://blog.mikemccandless.com\n> > >\n> > >\n> > > On Fri, Aug 8, 2014 at 10:06 AM, Uwe Schindler <uwe@thetaphi.de>\n> wrote:\n> > >> Hi,\n> > >>\n> > >> We could emulate the same thing (the repeating beaster) with pure\n> Ant:\n> > >>\n> > >> Just repeat the \"test\" target, which can be done using ant-contrib's \"for\"\n> > task or (much simplier) a groovy script using antcall on the test target.\n> > >> Should we provide this \"beaster\" in common-build?\n> > >>\n> > >> \"ant beast-tests -Dbeast.iter=100 -Dtestcase=...\"\n> > >>\n> > >> Very easy to implement and makes it easier to use for the python \n> > >> haters -\n> > and comes embedded...\n> > >>\n> > >> Uwe\n> > >>\n> > >> -----\n> > >> Uwe Schindler\n> > >> H.-H.-Meier-Allee 63, D-28213 Bremen http://www.thetaphi.de\n> > >> eMail: uwe@thetaphi.de\n> > >>\n> > >>\n> > >>> ----Original Message----\n> > >>> From: Michael McCandless lucene@mikemccandless.com\n> > >>> Sent: Friday, August 08, 2014 3:48 PM\n> > >>> To: Lucene/Solr dev\n> > >>> Subject: Re: Test iterations\n> > >>>\n> > >>> On Fri, Aug 8, 2014 at 9:35 AM, Uwe Schindler <uwe@thetaphi.de>\n> > wrote:\n> > >>> > Hi Dawid,\n> > >>> >\n> > >>> > Thanks for the very good explanation! Indeed the main problem \n> > >>> > with\n> > >>> tests.iters is the static initializers. Maybe put that \n> > >>> explanation into the Wiki! I sometimes also need to remember it, \n> > >>> so it should be\n> > documented.\n> > >>> >\n> > >>> > One (only theoretical) way to solve the whole thing could be:\n> > >>> > Load the class(es) in a separate classloader for every \n> > >>> > repeated execution,... but of course this will very fast blow \n> > >>> > up your permgen (java 6, 7) or anything else we don't know about (java 8).\n> > >>> > In fact the separate classloader approach is not different \n> > >>> > from Mike's scripts, just that Mike's script creates a new \n> > >>> > classloader by forking a new JVM. In fact I don't think the \n> > >>> > separate classloader approach would be much faster, because \n> > >>> > the class clones will all have separate compilation paths in \n> > >>> > Hotspot, so Hotspot cannot share the same assembler code. So \n> > >>> > except the JVM startup time, you gain nothing. Just permgen \n> > >>> > issues \n> > >>>\n> > >>> The big thing the python beasting scripts avoids is all the ant \n> > >>> overhead to just get to the point where it actually spawns the \n> > >>> JVM to run the test.  Really, that's all the beasting script does:\n> > >>> directly spawn the JVM on the test runner (after running \"ant \n> > >>> test-compile\" up\n> > >>> front) and then parse its output/events.\n> > >>>\n> > >>> The distributed test runner, which uses rsync/ssh to run tests \n> > >>> on N machines, is very different from the beasting script: it \n> > >>> runs all Lucene's tests (instead of a single test over and over) \n> > >>> across N JVMs on M machines.  It \"cheats\" by taking the union of \n> > >>> all\n> CLASSPATHs\n> > ...\n> > >>> but this is a huge win because it means all testing is fully \n> > >>> concurrent, not just concurrent within one module.  This script \n> > >>> can also repeat, which means once all lucene tests finish, \n> > >>> re-en-queue all\n> of\n> > them again. ",
            "date": "2014-08-09T22:21:14+0000"
        },
        {
            "id": "comment-14091927",
            "author": "Uwe Schindler",
            "content": "Patch.\n\nThis one is based on that from mailing list, but improved:\n\n\tmore Groovy-like\n\tonly one instance of \"antcall\", executed in a loop\n\n ",
            "date": "2014-08-09T22:22:07+0000"
        },
        {
            "id": "comment-14091931",
            "author": "Robert Muir",
            "content": "+1!!! Can we just name it ant beast?  ",
            "date": "2014-08-09T22:41:17+0000"
        },
        {
            "id": "comment-14091933",
            "author": "Uwe Schindler",
            "content": "I can rename it before committing!  ",
            "date": "2014-08-09T22:46:46+0000"
        },
        {
            "id": "comment-14092059",
            "author": "Uwe Schindler",
            "content": "Patch with renamed target. ",
            "date": "2014-08-10T09:22:02+0000"
        },
        {
            "id": "comment-14092061",
            "author": "Uwe Schindler",
            "content": "I also added docs to \"test-help\".\n\nWill commit this soon! ",
            "date": "2014-08-10T09:41:13+0000"
        },
        {
            "id": "comment-14092062",
            "author": "ASF subversion and git services",
            "content": "Commit 1617078 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1617078 ]\n\nLUCENE-5881: Add \"beasting\" of tests: repeats the whole \"test\" Ant target N times with \"ant beast -Dbeast.iters=N\" ",
            "date": "2014-08-10T09:47:47+0000"
        },
        {
            "id": "comment-14092063",
            "author": "ASF subversion and git services",
            "content": "Commit 1617079 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1617079 ]\n\nLUCENE-5881: Add parameter check, beautify some other groovy code ",
            "date": "2014-08-10T09:55:11+0000"
        },
        {
            "id": "comment-14092064",
            "author": "ASF subversion and git services",
            "content": "Commit 1617080 from Uwe Schindler in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1617080 ]\n\nMerged revision(s) 1617078-1617079 from lucene/dev/trunk:\nLUCENE-5881: Add \"beasting\" of tests: repeats the whole \"test\" Ant target N times with \"ant beast -Dbeast.iters=N\"\nLUCENE-5881: Add parameter check, beautify some other groovy code ",
            "date": "2014-08-10T09:57:07+0000"
        },
        {
            "id": "comment-14092065",
            "author": "Uwe Schindler",
            "content": "Committed to trunk an branch_4x. ",
            "date": "2014-08-10T09:57:37+0000"
        },
        {
            "id": "comment-14092138",
            "author": "Dawid Weiss",
            "content": "Thanks Uwe, I couldn't comment on the patch earlier, it looks good! ",
            "date": "2014-08-10T18:01:06+0000"
        },
        {
            "id": "comment-14092140",
            "author": "Dawid Weiss",
            "content": "This is the original 'run tests with multiple master seeds' issue. I'll leave it open; perhaps I'll be able to implement built-in master seed repeating one day (this would allow running it in the IDE, among other benefits). ",
            "date": "2014-08-10T18:06:55+0000"
        },
        {
            "id": "comment-14092594",
            "author": "Michael McCandless",
            "content": "This is awesome, thanks Uwe! ",
            "date": "2014-08-11T09:14:59+0000"
        }
    ]
}