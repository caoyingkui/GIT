{
    "id": "SOLR-9878",
    "title": "Code smell in if statement",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.4",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Trivial"
    },
    "description": "In recent code snapshot (Github mirror's commit id: c8542b2bd0470af9f8d64bb8133f31828b342604 as today), there is an illogical condition that can be a code smell or a potential bug:\n\n\nReversedWildcardFilterFactory fac = leadingWildcards.get(fieldType);\n    if (fac != null || leadingWildcards.containsKey(fac)) {\n      return fac;\n    }\n\n\n\nIn SOLR-3492, it said there was a fix in SOLR-4093. However, the fix still has an issue as above: containsKey will always have null in this if statement. The second condition could be unnecessary. Does leadingWildcards allow a null object as a key? If so, it will return null that might cause NPE in some other locations.\n\nPatch could be just like in SOLR-3492?:\n\n\nif (fac != null)",
    "attachments": {
        "SOLR-9878.patch": "https://issues.apache.org/jira/secure/attachment/12844115/SOLR-9878.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-12-20T00:29:37+0000",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "content": "Yes, that doesn't look right. Also, leadingWildcards is defined as:\n\nprivate Map<FieldType, ReversedWildcardFilterFactory> leadingWildcards;\n\n\nthere is no way to have a ReversedWildcardFilterFactory as key ",
            "id": "comment-15762753"
        },
        {
            "date": "2016-12-20T19:30:45+0000",
            "author": "Mikhail Khludnev",
            "content": "what about SOLR-9878.patch? this fixes caching of nulls.  ",
            "id": "comment-15765037"
        },
        {
            "date": "2016-12-20T21:29:04+0000",
            "author": "ASF subversion and git services",
            "content": "Commit f1e636f5611abea66efed896a95eebbb6d765300 in lucene-solr's branch refs/heads/master from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f1e636f ]\n\nSOLR-9878: fix ReversedWildcardFilterFactory caching in query parser ",
            "id": "comment-15765293"
        },
        {
            "date": "2016-12-20T21:50:58+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1e22dd25bf20844c71648c39028c48d2a9aa4e58 in lucene-solr's branch refs/heads/branch_6x from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1e22dd2 ]\n\nSOLR-9878: fix ReversedWildcardFilterFactory caching in query parser ",
            "id": "comment-15765346"
        },
        {
            "date": "2016-12-20T22:54:01+0000",
            "author": "JC",
            "content": "I'm wondering why the second condition, \"|| leadingWildcards.containsKey(fieldType)\" still required.\nThe second condition can be reached only when fac is null. Can leadingWildcards.get(fieldType) have null when leadingWildcards.containsKey(fieldType) is true? If yes, this method will return null in this case. (Is this intended?) Since I don't have domain knowledge about this project, I just wanted to confirm this. If no, the second condition might not be necessary since when fac is null,  leadingWildcards.containsKey(fieldType) is always false. It's quite confusing. ",
            "id": "comment-15765487"
        },
        {
            "date": "2016-12-21T06:44:07+0000",
            "author": "Mikhail Khludnev",
            "content": "when a fieldType doesn't have RWFF it's cached as null value and isn't checked anymore. I agree it's not obvious and probably over-engineered, but I decided to fix as is. You can check the test which demonstrate this invariant. \nThanks for reporting.     ",
            "id": "comment-15766287"
        }
    ]
}