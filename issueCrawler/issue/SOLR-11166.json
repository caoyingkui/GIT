{
    "id": "SOLR-11166",
    "title": "Create a new router to automate time-based sharding",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "SolrCloud"
        ],
        "type": "New Feature",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Duplicate",
        "status": "Closed"
    },
    "description": "There has been some interest in time-based sharding on the mailing list.  It is disappointing to have to inform users that if they want to implement this, they will be entirely responsible for all shard management.\n\nI think that creating new shards and directing new documents to the newest shard will be relatively easy parts of this router.  There are some additional features that I think would be really useful:\n\nAutomated merging of older shards into larger time periods.\nSome kind of aliasing to allow searching today, yesterday, this week, last week, this month, last month, and so on, with the list of searched shards changing when a new shard is created.  I don't know if this would be part of the router or implemented elsewhere by another issue.\n\nThe router should have a configuration option to indicate how frequently new shards should be created.  Valid values should probably be hourly, daily, weekly, and monthly.  Multiples of those time periods would be a very good idea.  Another idea to consider: completely custom time periods.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-07-28T15:15:57+0000",
            "content": "Something that might be hard to deal with on an index using the router described here: Reindexes. ",
            "author": "Shawn Heisey",
            "id": "comment-16105089"
        },
        {
            "date": "2017-07-28T21:23:39+0000",
            "content": "Are you assuming docs will not be updated or deleted, so no automatic shard merging? If shard merging, need new merge policy?\n\nQuestion: Is shard-level the best abstraction here or could time-based use cases just as well be solved on the collection level? Create a write-alias pointing to the newest collection, and read aliases pointing to all or some other subset of collections. In this setup, newer collections could have larger replicationFactor to support more queries. And you could reduce #shards for older collections, merge collections and define the oldest collections as \"archive\" which are loaded lazily on demand only etc... People do this already and one could imagine built-in support for all the collection creation and alias housekeeping. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16105693"
        },
        {
            "date": "2017-07-28T21:28:17+0000",
            "content": "This issue feels like a duplicate of SOLR-9690?  Or is that too narrow and instead this issue here (SOLR-11166) should be an umbrella, which would have multiple sub-issues including SOLR-9690?\n\nAlso see SOLR-9562 which is linked to SOLR-9690.\n\nAny way I definitely want to meaningfully participate the discussion in some issue, wether it be this one or another. ",
            "author": "David Smiley",
            "id": "comment-16105713"
        },
        {
            "date": "2017-07-28T21:32:51+0000",
            "content": "Jan H\u00f8ydahl if you wish to espouse the benefits of collection based time sharding, I think that issue is SOLR-9562.  Please copy your comments there; I'd like to consider the merits of this further; maybe re-open the issue. ",
            "author": "David Smiley",
            "id": "comment-16105723"
        },
        {
            "date": "2017-07-28T21:38:39+0000",
            "content": "This issue feels like a duplicate of SOLR-9690?\n\nLooks like you're right.  I did try a few searches to find an existing issue and came up empty, the main description of that issue didn't match any of them. ",
            "author": "Shawn Heisey",
            "id": "comment-16105730"
        }
    ]
}