{
    "id": "SOLR-4358",
    "title": "SolrJ, by preventing multi-part post, loses key information about file name that Tika needs",
    "details": {
        "affect_versions": "4.0",
        "status": "Closed",
        "fix_versions": [
            "4.4",
            "6.0"
        ],
        "components": [
            "clients - java"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "SolrJ accepts a ContentStream, which has a name field.  Within HttpSolrServer.java, if SolrJ makes the decision to use multipart posts, this filename is transmitted as part of the form boundary information.  However, if SolrJ chooses not to use multipart post, the filename information is lost.\n\nThis information is used by SolrCell (Tika) to make decisions about content extraction, so it is very important that it makes it into Solr in one way or another.  Either SolrJ should set appropriate equivalent headers to send the filename automatically, or it should force multipart posts when this information is present.",
    "attachments": {
        "SOLR-4358.patch": "https://issues.apache.org/jira/secure/attachment/12567975/SOLR-4358.patch",
        "additional_changes.diff": "https://issues.apache.org/jira/secure/attachment/12579109/additional_changes.diff"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13564225",
            "date": "2013-01-28T11:54:35+0000",
            "content": "SolrCell will use resource.name request param as filename hint. The application using SolrJ can set this. Not sure if SolrJ really should be closesly tied to SolrCell params, SolrCell being a contrib module.. "
        },
        {
            "author": "Karl Wright",
            "id": "comment-13564230",
            "date": "2013-01-28T12:25:46+0000",
            "content": "My point is independent of SolrCell.  If anything in Solr were to care about the filename in a multipart post, then if SolrJ is making the decision to use standard POST vs multipart, it should also take care to eliminate any resulting differences in the Solr environment.  If SolrJ gives the user control over the posting method, then I don't care if SolrJ tries to fix this or not. "
        },
        {
            "author": "Karl Wright",
            "id": "comment-13571134",
            "date": "2013-02-05T08:12:06+0000",
            "content": "Here's a patch that does essentially what I think is wanted. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13633189",
            "date": "2013-04-16T18:59:31+0000",
            "content": "updated patch to allow get/set useMultiPartPost "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13633200",
            "date": "2013-04-16T19:03:22+0000",
            "content": "Manifold Connectors uses Solrj and should be able to force multipart requests "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13633232",
            "date": "2013-04-16T19:29:32+0000",
            "content": "added to trunk and 4x "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13633512",
            "date": "2013-04-16T22:48:35+0000",
            "content": "As noted by Uwe on the dev list, the changes committed for this issue seem ot have caused various test failures, as well as sending ChaosMonkeySafeLeader into an infinite loop(?!)\n\nRe-opening to investigate - likely need to roll back these changes if we can't get to the bottom of things right away "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13633516",
            "date": "2013-04-16T22:50:56+0000",
            "content": "sorry... digging now... "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13633522",
            "date": "2013-04-16T22:57:03+0000",
            "content": "I stopped Jenkins builds until this is fixed/reverted, because the Windows Jenkins machine needed to be killed hard because ChaosMonkeySafeLeaderTest was eating all virtual CPUs available, making it impossible to shut down the virtual machine or stop tests other than hitting the virtual PowerOff button \nUnder Linux, only kill -9 stops ChaosMonkey. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13633556",
            "date": "2013-04-16T23:33:21+0000",
            "content": "reverted in trunk & 4.x\n\nI can't figure out what is causing the problem though... will keep digging.\n\n "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13633558",
            "date": "2013-04-16T23:35:46+0000",
            "content": "Thanks, I reenabled Jenkins builds. "
        },
        {
            "author": "Karl Wright",
            "id": "comment-13633887",
            "date": "2013-04-17T08:12:07+0000",
            "content": "Diff of additional changes I needed to include in order to get multipart post working again "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13635736",
            "date": "2013-04-18T21:50:39+0000",
            "content": "Here is an updated patch.\n\nIt adds 'setUseMultipart(true)' into the random test configs.\n\nBUT it seems to have issues with ZK distributed search.  I don't know if that is just a test/environmet issue on my side or a real issue.  But I get this failure:\n\nTests with failures:\n -org.apache.solr.cloud.CollectionsAPIDistributedZkTest.testDistribSearch\n\n\n\n "
        },
        {
            "author": "Karl Wright",
            "id": "comment-13635745",
            "date": "2013-04-18T21:56:22+0000",
            "content": "Why would SolrCloud be affected at all by an HttpSolrServer.java change? "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13636032",
            "date": "2013-04-19T04:08:17+0000",
            "content": "SolrCloud/Distributed search uses HttpSolrServer for internal communication \u2013 so something must be fishy.\n\nIt is not clear to me how the tests are failing \u2013 just that they are. "
        },
        {
            "author": "Karl Wright",
            "id": "comment-13636159",
            "date": "2013-04-19T07:27:23+0000",
            "content": "Ok - looking into it. "
        },
        {
            "author": "Karl Wright",
            "id": "comment-13636166",
            "date": "2013-04-19T07:52:05+0000",
            "content": "The test that fails for me is:\n\n\n[junit4:junit4] Tests with failures:\n[junit4:junit4]   - org.apache.solr.cloud.AliasIntegrationTest.testDistribSearch\n\n[junit4:junit4]   - org.apache.solr.cloud.AliasIntegrationTest (suite)\n[junit4:junit4]\n\n\n\nThis on branch_4x.  Perhaps the test was renamed on trunk?  Anyhow, the failure looks suspiciously like I tripped over a local disk error:\n\n\n  2> Creating dataDir: C:\\wip\\solr\\branch_4x\\solr\\build\\solr-core\\test\\J0\\.\\solrtest-AliasIntegrationTest-1366356503950\n  2> !!!! WARNING: best effort to remove C:\\wip\\solr\\branch_4x\\solr\\build\\solr-core\\test\\J0\\.\\org.apache.solr.cloud.AliasIntegrationTest-1366356503947\\jetty1\\index\\org.apache.lucene.store.RAMDirectory@1f24a78 lockFactory=org.apache.lucene.store.NativeFSLockFactory@15b0c83-write.lock FAILED !!!!!\n  2> !!!! WARNING: best effort to remove C:\\wip\\solr\\branch_4x\\solr\\build\\solr-core\\test\\J0\\.\\org.apache.solr.cloud.AliasIntegrationTest-1366356503947\\jetty1\\index FAILED !!!!!\n  2> !!!! WARNING: best effort to remove C:\\wip\\solr\\branch_4x\\solr\\build\\solr-core\\test\\J0\\.\\org.apache.solr.cloud.AliasIntegrationTest-1366356503947\\jetty1 FAILED !!!!!\n  2> !!!! WARNING: best effort to remove C:\\wip\\solr\\branch_4x\\solr\\build\\solr-core\\test\\J0\\.\\org.apache.solr.cloud.AliasIntegrationTest-1366356503947 FAILED !!!!!\n  2> NOTE: reproduce with: ant test  -Dtestcase=AliasIntegrationTest -Dtests.method=testDistribSearch -Dtests.seed=964155E88FA3F7F -Dtests.slow=true -Dtests.locale=en_PH -Dtests.timezone=Etc/GMT0 -Dtests.file.encoding=Cp1252\n[03:28:23.944] ERROR   53.9s | AliasIntegrationTest.testDistribSearch <<<\n   > Throwable #1: org.apache.solr.client.solrj.impl.HttpSolrServer$RemoteSolrException: Server at http://127.0.0.1:56486/_hfw/testalias returned non ok status:500, message:Server Error\n   > \tat __randomizedtesting.SeedInfo.seed([964155E88FA3F7F:88829B46FFA55F43]:0)\n   > \tat org.apache.solr.client.solrj.impl.HttpSolrServer.request(HttpSolrServer.java:385)\n   > \tat org.apache.solr.client.solrj.impl.HttpSolrServer.request(HttpSolrServer.java:180)\n   > \tat org.apache.solr.client.solrj.request.AbstractUpdateRequest.process(AbstractUpdateRequest.java:117)\n   > \tat org.apache.solr.client.solrj.SolrServer.add(SolrServer.java:116)\n   > \tat org.apache.solr.client.solrj.SolrServer.add(SolrServer.java:102)\n   > \tat org.apache.solr.cloud.AliasIntegrationTest.doTest(AliasIntegrationTest.java:213)\n   > \tat org.apache.solr.BaseDistributedSearchTestCase.testDistribSearch(BaseDistributedSearchTestCase.java:806)\n\n\n\nOn repeat, the test succeeded.  Obviously something random about the SolrCloud tests in general, I think.  So I will rerun until I'm satisfied no test fails repeatably. "
        },
        {
            "author": "Karl Wright",
            "id": "comment-13636184",
            "date": "2013-04-19T08:33:42+0000",
            "content": "Ok, I found one that fails repeatably - but it seems to fail not due to HttpSolrServer but due to problems shutting down threads.\n\nThis is how to repeat it:\n\nant test  -Dtestcase=BasicDistributedZk2Test -Dtests.seed=398C285200313054 -Dtests.slow=true -Dtests.locale=uk_UA -Dtests.timezone=Africa/Kigali -Dtests.file.encoding=Cp1252\n\nThe error it gets is this:\n\n\n[junit4:junit4]   2> Creating dataDir: C:\\wip\\solr\\branch_4x\\solr\\build\\solr-cor\ne\\test\\J0\\.\\solrtest-BasicDistributedZk2Test-1366359983221\n[junit4:junit4]   2> !!!! WARNING: best effort to remove C:\\wip\\solr\\branch_4x\\s\nolr\\build\\solr-core\\test\\J0\\.\\org.apache.solr.cloud.BasicDistributedZk2Test-1366\n359983220\\jetty2\\index\\org.apache.lucene.store.RAMDirectory@10c6406 lockFactory=\norg.apache.lucene.store.NativeFSLockFactory@2573a8-write.lock FAILED !!!!!\n[junit4:junit4]   2> !!!! WARNING: best effort to remove C:\\wip\\solr\\branch_4x\\s\nolr\\build\\solr-core\\test\\J0\\.\\org.apache.solr.cloud.BasicDistributedZk2Test-1366\n359983220\\jetty2\\index FAILED !!!!!\n[junit4:junit4]   2> !!!! WARNING: best effort to remove C:\\wip\\solr\\branch_4x\\s\nolr\\build\\solr-core\\test\\J0\\.\\org.apache.solr.cloud.BasicDistributedZk2Test-1366\n359983220\\jetty2 FAILED !!!!!\n[junit4:junit4]   2> !!!! WARNING: best effort to remove C:\\wip\\solr\\branch_4x\\s\nolr\\build\\solr-core\\test\\J0\\.\\org.apache.solr.cloud.BasicDistributedZk2Test-1366\n359983220 FAILED !!!!!\n[junit4:junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=BasicDistributed\nZk2Test -Dtests.method=testDistribSearch -Dtests.seed=398C285200313054 -Dtests.s\nlow=true -Dtests.locale=uk_UA -Dtests.timezone=Africa/Kigali -Dtests.file.encodi\nng=Cp1252\n[junit4:junit4] ERROR   57.2s | BasicDistributedZk2Test.testDistribSearch <<<\n[junit4:junit4]    > Throwable #1: org.apache.solr.client.solrj.impl.HttpSolrSer\nver$RemoteSolrException: Server at http://127.0.0.1:59625/onenodecollectioncore\nreturned non ok status:500, message:Server Error\n[junit4:junit4]    >    at __randomizedtesting.SeedInfo.seed([398C285200313054:B\n86AA64A776E5068]:0)\n[junit4:junit4]    >    at org.apache.solr.client.solrj.impl.HttpSolrServer.requ\nest(HttpSolrServer.java:385)\n[junit4:junit4]    >    at org.apache.solr.client.solrj.impl.HttpSolrServer.requ\nest(HttpSolrServer.java:180)\n[junit4:junit4]    >    at org.apache.solr.client.solrj.request.AbstractUpdateRe\nquest.process(AbstractUpdateRequest.java:117)\n[junit4:junit4]    >    at org.apache.solr.client.solrj.SolrServer.add(SolrServe\nr.java:116)\n[junit4:junit4]    >    at org.apache.solr.client.solrj.SolrServer.add(SolrServe\nr.java:102)\n[junit4:junit4]    >    at org.apache.solr.cloud.BasicDistributedZk2Test.testNod\neWithoutCollectionForwarding(BasicDistributedZk2Test.java:197)\n[junit4:junit4]    >    at org.apache.solr.cloud.BasicDistributedZk2Test.doTest(\nBasicDistributedZk2Test.java:89)\n[junit4:junit4]    >    at org.apache.solr.BaseDistributedSearchTestCase.testDis\ntribSearch(BaseDistributedSearchTestCase.java:806)\n[junit4:junit4]    >    at java.lang.Thread.run(Thread.java:619)\n[junit4:junit4]   1> INFO  - 2013-04-19 04:27:20.374; org.apache.solr.SolrTestCa\nseJ4; ###deleteCore\n[junit4:junit4] HEARTBEAT J0 PID(14064@acromantula): 2013-04-19T04:28:30, stalle\nd for 69.7s at: BasicDistributedZk2Test.testDistribSearch\n[junit4:junit4]   1> ERROR - 2013-04-19 04:29:21.383; org.apache.solr.SolrTestCa\nseJ4; ERROR: SolrIndexSearcher opens=10 closes=8\n[junit4:junit4]   2> 178598 T9 ccr.ThreadLeakControl.checkThreadLeaks WARNING Wi\nll linger awaiting termination of 1 leaked thread(s).\n[junit4:junit4] HEARTBEAT J0 PID(14064@acromantula): 2013-04-19T04:29:30, stalle\nd for  130s at: BasicDistributedZk2Test.testDistribSearch\n[junit4:junit4]   2> 198601 T9 ccr.ThreadLeakControl.checkThreadLeaks SEVERE 1 t\nhread leaked from SUITE scope at org.apache.solr.cloud.BasicDistributedZk2Test:\n\n[junit4:junit4]   2>       1) Thread[id=71, name=searcherExecutor-25-thread-1, s\ntate=WAITING, group=TGRP-BasicDistributedZk2Test]\n[junit4:junit4]   2>            at sun.misc.Unsafe.park(Native Method)\n[junit4:junit4]   2>            at java.util.concurrent.locks.LockSupport.park(L\nockSupport.java:158)\n[junit4:junit4]   2>            at java.util.concurrent.locks.AbstractQueuedSync\nhronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)\n[junit4:junit4]   2>            at java.util.concurrent.LinkedBlockingQueue.take\n(LinkedBlockingQueue.java:399)\n[junit4:junit4]   2>            at java.util.concurrent.ThreadPoolExecutor.getTa\nsk(ThreadPoolExecutor.java:947)\n[junit4:junit4]   2>            at java.util.concurrent.ThreadPoolExecutor$Worke\nr.run(ThreadPoolExecutor.java:907)\n[junit4:junit4]   2>            at java.lang.Thread.run(Thread.java:619)\n[junit4:junit4]   2> 198601 T9 ccr.ThreadLeakControl.tryToInterruptAll Starting\nto interrupt leaked threads:\n[junit4:junit4]   2>       1) Thread[id=71, name=searcherExecutor-25-thread-1, s\ntate=WAITING, group=TGRP-BasicDistributedZk2Test]\n[junit4:junit4]   2> 201602 T9 ccr.ThreadLeakControl.tryToInterruptAll SEVERE Th\nere are still zombie threads that couldn't be terminated:\n[junit4:junit4]   2>       1) Thread[id=71, name=searcherExecutor-25-thread-1, s\ntate=WAITING, group=TGRP-BasicDistributedZk2Test]\n[junit4:junit4]   2>            at sun.misc.Unsafe.park(Native Method)\n[junit4:junit4]   2>            at java.util.concurrent.locks.LockSupport.park(L\nockSupport.java:158)\n[junit4:junit4]   2>            at java.util.concurrent.locks.AbstractQueuedSync\nhronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)\n[junit4:junit4]   2>            at java.util.concurrent.LinkedBlockingQueue.take\n(LinkedBlockingQueue.java:399)\n[junit4:junit4]   2>            at java.util.concurrent.ThreadPoolExecutor.getTa\nsk(ThreadPoolExecutor.java:947)\n[junit4:junit4]   2>            at java.util.concurrent.ThreadPoolExecutor$Worke\nr.run(ThreadPoolExecutor.java:907)\n[junit4:junit4]   2>            at java.lang.Thread.run(Thread.java:619)\n[junit4:junit4]   2> NOTE: test params are: codec=Lucene42: {}, docValues:{}, si\nm=DefaultSimilarity, locale=uk_UA, timezone=Africa/Kigali\n[junit4:junit4]   2> NOTE: Windows Vista 6.0 x86/Sun Microsystems Inc. 1.6.0_21\n(32-bit)/cpus=2,threads=2,free=8746296,total=33193984\n[junit4:junit4]   2> NOTE: All tests run in this JVM: [BasicDistributedZk2Test]\n[junit4:junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=BasicDistributed\nZk2Test -Dtests.seed=398C285200313054 -Dtests.slow=true -Dtests.locale=uk_UA -Dt\nests.timezone=Africa/Kigali -Dtests.file.encoding=Cp1252\n[junit4:junit4] ERROR   0.00s | BasicDistributedZk2Test (suite) <<<\n[junit4:junit4]    > Throwable #1: java.lang.AssertionError: ERROR: SolrIndexSea\nrcher opens=10 closes=8\n[junit4:junit4]    >    at __randomizedtesting.SeedInfo.seed([398C285200313054]:\n0)\n[junit4:junit4]    >    at org.apache.solr.SolrTestCaseJ4.endTrackingSearchers(S\nolrTestCaseJ4.java:252)\n[junit4:junit4]    >    at org.apache.solr.SolrTestCaseJ4.afterClass(SolrTestCas\neJ4.java:101)\n[junit4:junit4]    >    at java.lang.Thread.run(Thread.java:619)Throwable #2: co\nm.carrotsearch.randomizedtesting.ThreadLeakError: 1 thread leaked from SUITE sco\npe at org.apache.solr.cloud.BasicDistributedZk2Test:\n[junit4:junit4]    >    1) Thread[id=71, name=searcherExecutor-25-thread-1, stat\ne=WAITING, group=TGRP-BasicDistributedZk2Test]\n[junit4:junit4]    >         at sun.misc.Unsafe.park(Native Method)\n[junit4:junit4]    >         at java.util.concurrent.locks.LockSupport.park(Lock\nSupport.java:158)\n[junit4:junit4]    >         at java.util.concurrent.locks.AbstractQueuedSynchro\nnizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)\n[junit4:junit4]    >         at java.util.concurrent.LinkedBlockingQueue.take(Li\nnkedBlockingQueue.java:399)\n[junit4:junit4]    >         at java.util.concurrent.ThreadPoolExecutor.getTask(\nThreadPoolExecutor.java:947)\n[junit4:junit4]    >         at java.util.concurrent.ThreadPoolExecutor$Worker.r\nun(ThreadPoolExecutor.java:907)\n[junit4:junit4]    >         at java.lang.Thread.run(Thread.java:619)\n[junit4:junit4]    >    at __randomizedtesting.SeedInfo.seed([398C285200313054]:\n0)Throwable #3: com.carrotsearch.randomizedtesting.ThreadLeakError: There are st\nill zombie threads that couldn't be terminated:\n[junit4:junit4]    >    1) Thread[id=71, name=searcherExecutor-25-thread-1, stat\ne=WAITING, group=TGRP-BasicDistributedZk2Test]\n[junit4:junit4]    >         at sun.misc.Unsafe.park(Native Method)\n[junit4:junit4]    >         at java.util.concurrent.locks.LockSupport.park(Lock\nSupport.java:158)\n[junit4:junit4]    >         at java.util.concurrent.locks.AbstractQueuedSynchro\nnizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)\n[junit4:junit4]    >         at java.util.concurrent.LinkedBlockingQueue.take(Li\nnkedBlockingQueue.java:399)\n[junit4:junit4]    >         at java.util.concurrent.ThreadPoolExecutor.getTask(\nThreadPoolExecutor.java:947)\n[junit4:junit4]    >         at java.util.concurrent.ThreadPoolExecutor$Worker.r\nun(ThreadPoolExecutor.java:907)\n[junit4:junit4]    >         at java.lang.Thread.run(Thread.java:619)\n[junit4:junit4]    >    at __randomizedtesting.SeedInfo.seed([398C285200313054]:\n0)\n[junit4:junit4] Completed in 203.91s, 1 test, 1 failure, 3 errors <<< FAILURES!\n[junit4:junit4]\n[junit4:junit4]\n[junit4:junit4] Tests with failures:\n[junit4:junit4]   - org.apache.solr.cloud.BasicDistributedZk2Test.testDistribSea\nrch\n[junit4:junit4]   - org.apache.solr.cloud.BasicDistributedZk2Test (suite)\n[junit4:junit4]\n[junit4:junit4]\n[junit4:junit4] JVM J0:     1.55 ..   206.98 =   205.43s\n[junit4:junit4] Execution time total: 3 minutes 27 seconds\n[junit4:junit4] Tests summary: 1 suite, 1 test, 3 suite-level errors, 1 error\n\nBUILD FAILED\n\n\n\nI don't think this is related to the patch for this ticket, but to be sure I'll peel the patch out and try it again. "
        },
        {
            "author": "Karl Wright",
            "id": "comment-13636290",
            "date": "2013-04-19T11:32:30+0000",
            "content": "Yup, test fails even with patch removed.  So it's not the patch. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13636572",
            "date": "2013-04-19T16:34:32+0000",
            "content": "this just passed on my local trunk checkout...  I will commit and make sure jenkins is happy with trunk.\n\nIf it is, I will merge to 4.x "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13636575",
            "date": "2013-04-19T16:35:28+0000",
            "content": "[trunk commit] ryan\nhttp://svn.apache.org/viewvc?view=revision&revision=1469946\n\nSOLR-4358: HttpSolrServer now supports forcing multipart requests "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13636842",
            "date": "2013-04-19T20:28:24+0000",
            "content": "[branch_4x commit] ryan\nhttp://svn.apache.org/viewvc?view=revision&revision=1470023\n\nSOLR-4358: HttpSolrServer now supports forcing multipart requests\n........\nMerged revision(s) 1469946 from lucene/dev/trunk: "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13636844",
            "date": "2013-04-19T20:29:31+0000",
            "content": "just added to trunk and 4.x\n\nI'll keep an eye on jenkins and hope this does not cause failures "
        },
        {
            "author": "Karl Wright",
            "id": "comment-13641504",
            "date": "2013-04-25T06:53:46+0000",
            "content": "Has this ticket fix been pulled up into the latest RC for Solr 4.3? "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13644597",
            "date": "2013-04-29T16:00:49+0000",
            "content": "Karl Wright It has been committed into trunk (5.0) and branch_4x (4.4).  The commits happened on April 19th, which is after the 4.3 branch was created.\n\nI thought I remembered a discussion on a vote thread for 4.3 about a fix for a multi-part mime issue that went into one of the later release candidates, but now I can't find it, so it must have happened only in my mind.  I double-checked the 4.3 code branch and this is NOT included.\n\nI believe that it's now too late to get it into 4.3.  You have the option of building branch_4x if you need the fix now. "
        },
        {
            "author": "Furkan KAMACI",
            "id": "comment-13650611",
            "date": "2013-05-07T08:45:02+0000",
            "content": "This has been committed into 4.3 (http://lucene.apache.org/solr/4_3_0/changes/Changes.html#4.3.0.new_features) We can change fix version/s of this issue. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13650885",
            "date": "2013-05-07T14:38:19+0000",
            "content": "Furkan KAMACI I've checked the 4.3.0 source and this patch did not make it in there.\n\nLooking through the commit history and the issue notes, what happened is this: An initial patch was created and committed on April 16th.  That commit included the entry in CHANGES.txt.  It was quickly discovered that this didn't fix the issue, so the code change was reverted - but the entry in CHANGES.txt got left behind.  The 4.3 code branch was created on April 17th.  On April 19th, the true fix for this issue was committed to trunk and the 4x branch.\n\nThe CHANGES.txt for 4.3.0 is unfortunately wrong - the fix is NOT in 4.3. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13716834",
            "date": "2013-07-23T18:38:43+0000",
            "content": "Bulk close resolved 4.4 issues "
        }
    ]
}