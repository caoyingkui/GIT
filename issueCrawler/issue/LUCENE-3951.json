{
    "id": "LUCENE-3951",
    "title": "get-maven-poms should depend on ivy resolve, so that non-mavenized jars are available for use by mvn -P bootstrap install",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "general/build"
        ],
        "type": "Bug",
        "fix_versions": [
            "3.6"
        ],
        "affect_versions": "3.6",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "see title",
    "attachments": {
        "LUCENE-3951-handle-ivy.default.ivy.user.dir.patch": "https://issues.apache.org/jira/secure/attachment/12521357/LUCENE-3951-handle-ivy.default.ivy.user.dir.patch",
        "LUCENE-3951.patch": "https://issues.apache.org/jira/secure/attachment/12521327/LUCENE-3951.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-04-04T14:59:51+0000",
            "content": "But this is really specific to 'the maven build' right?\n\ndist-maven works correctly for releasing.\n\nSo this could also be solved in dev-tools/maven, in its executions\nit could call whatever ant stuff it needs to work. ",
            "author": "Robert Muir",
            "id": "comment-13246325"
        },
        {
            "date": "2012-04-04T15:14:53+0000",
            "content": "There are no longer any non-mavenized jars in the build, so ivy resolve is not a requirement before running the maven build ",
            "author": "Steve Rowe",
            "id": "comment-13246343"
        },
        {
            "date": "2012-04-04T15:23:42+0000",
            "content": "Hmm, JIRA lost a comment I made on this issue before resolving (or I screwed up by editing the issue before submitting a comment I was making) - it was something like:\n\nI confused releasing and enabling 'the maven build', which involves putting the POMs in place via ant get-maven-poms and installing non-mavenized dependencies into the user's local maven repository via mvn -P bootstrap install.  The source of the non-mavenized dependencies was the lib/ directories, which are empty until ivy resolve is done, so ivy resolve is a prerequisite.\n\nHowever, since there are no longer any non-mavenized dependencies (see SOLR-3308, LUCENE-3930, and SOLR-3310 - thanks Robert Muir and Chris Male), ivy resolve is no longer a prerequisite for running 'the maven build'.  I'll resolve this issue as Invalid. ",
            "author": "Steve Rowe",
            "id": "comment-13246359"
        },
        {
            "date": "2012-04-04T15:51:34+0000",
            "content": "so we can remove generate-maven-artifacts task totally?\n\nThen we just have the releasing task: dist-maven ",
            "author": "Robert Muir",
            "id": "comment-13246388"
        },
        {
            "date": "2012-04-04T15:56:25+0000",
            "content": "dist-maven isn't recursive - generate-maven-artifacts provides dist-maven recursion.\n\nI'm missing some dots you've connected here - how is it that 'the maven build' not needing ant resolve to function means that generate-maven-artifacts is not necessary? ",
            "author": "Steve Rowe",
            "id": "comment-13246392"
        },
        {
            "date": "2012-04-04T16:02:11+0000",
            "content": "ok i see: maven build still requires this task, it just doesnt need the libs resolved... ",
            "author": "Robert Muir",
            "id": "comment-13246399"
        },
        {
            "date": "2012-04-04T16:03:42+0000",
            "content": "on 3.x i think it wants the jetty jars to be there.\nbut this can be solved by simply adding an <ant dir=\"solr/example\" target=\"resolve\">\nto this top-level task only needed by the maven build.\n\nThis way it wont interfere with any release tasks. ",
            "author": "Robert Muir",
            "id": "comment-13246401"
        },
        {
            "date": "2012-04-04T16:07:11+0000",
            "content": "ok i see: maven build still requires this task, it just doesnt need the libs resolved...\n\n'The maven build' doesn't require generate-maven-artifacts, and never has. ",
            "author": "Steve Rowe",
            "id": "comment-13246406"
        },
        {
            "date": "2012-04-04T16:08:57+0000",
            "content": "reopening since i want a maven build before rc for 3.x ",
            "author": "Robert Muir",
            "id": "comment-13246409"
        },
        {
            "date": "2012-04-04T16:09:48+0000",
            "content": "patch for 3.x ",
            "author": "Robert Muir",
            "id": "comment-13246412"
        },
        {
            "date": "2012-04-04T16:09:55+0000",
            "content": "\non 3.x i think it wants the jetty jars to be there.\nbut this can be solved by simply adding an <ant dir=\"solr/example\" target=\"resolve\">\nto this top-level task only needed by the maven build.\n\nYes, you're right, only on branch_3x, where jetty and jetty-util are still locally-modified non-released test dependencies, 'the maven build' (specifically running tests under Maven) needs these two jars to be in solr/example/lib.  Re-opening... ",
            "author": "Steve Rowe",
            "id": "comment-13246413"
        },
        {
            "date": "2012-04-04T16:13:12+0000",
            "content": "\n'The maven build' doesn't require generate-maven-artifacts, and never has.\n\nwell at least hudson needs to call the logic in my patch (somehow) because\nthe maven bootstrap uses:\n\n\n <file>solr/example/lib/jetty-${patched.jetty.version}.jar</file>\n\n ",
            "author": "Robert Muir",
            "id": "comment-13246417"
        },
        {
            "date": "2012-04-04T16:16:29+0000",
            "content": "And it seems that maven could do this itself in its executions?\nsee http://search.maven.org/remotecontent?filepath=org/apache/rat/apache-rat-tasks/0.8/apache-rat-tasks-0.8.pom\nfor an example? ",
            "author": "Robert Muir",
            "id": "comment-13246420"
        },
        {
            "date": "2012-04-04T16:22:27+0000",
            "content": "\n'The maven build' doesn't require generate-maven-artifacts, and never has.\n\nwell at least hudson needs to call the logic in my patch (somehow) because the maven bootstrap uses:\n\n\n<file>solr/example/lib/jetty-${patched.jetty.version}.jar</file>\n\n\nYour patch puts ant resolve in the wrong place.\n\nmvn -P bootstrap install is run by the jenkins script before attempting to run mvn install and mvn test,  but ant genenerate-maven-artifacts is called by the jenkins script after running all of these (to deploy snapshots), so ant resolve should happen before any of the mvn ... stuff.\n\n\nAnd it seems that maven could do this itself in its executions?\nsee http://search.maven.org/remotecontent?filepath=org/apache/rat/apache-rat-tasks/0.8/apache-rat-tasks-0.8.pom for an example?\n\nYes, you're right - the ant build shouldn't have to deal with this at all.  I'll make a patch. ",
            "author": "Steve Rowe",
            "id": "comment-13246426"
        },
        {
            "date": "2012-04-04T16:25:44+0000",
            "content": "ok thanks... i'm admittedly lost in how the maven build uses these tasks,\nI just know that packaging works and was trying to think of solutions that\ndon't mess with that... thanks! ",
            "author": "Robert Muir",
            "id": "comment-13246429"
        },
        {
            "date": "2012-04-04T17:36:44+0000",
            "content": "Patch invoking the resolve target in solr/example/build.xml via the maven-antrun-plugin from the bootstrap profile in the Lucene/Solr grandfather POM. \n\nThe Ivy jar included on the classpath for the maven-antrun-plugin is from the user's Maven local repository, apparently because maven-antrun-plugin doesn't look in ~/.ant/lib/: http://maven.apache.org/plugins/maven-antrun-plugin/examples/customTasks.html.\n\nWorks for me locally (from the top-level dir):\n\n\n\tant clean clean-jars get-maven-poms\n\tmvn -N -P bootstrap install -Divy.default.ivy.user.dir=...\n\tmvn -DskipTests install\n\tmvn test\n\n\n\nCommitting shortly. ",
            "author": "Steve Rowe",
            "id": "comment-13246504"
        },
        {
            "date": "2012-04-04T18:32:51+0000",
            "content": "The nightly Jenkins branch_3x Maven job failed because of ivy.default.ivy.user.dir sysprop problems (passing through the non-interpolated reference): \n\n\n[INFO] An Ant BuildException has occured: The following error occurred while executing this line:\n/usr/home/hudson/hudson-slave/workspace/Lucene-Solr-Maven-3.x/checkout/solr/example/build.xml:39: java.lang.IllegalArgumentException: ivy.default.ivy.user.dir must be absolute: ${ivy.default.ivy.user.dir}\naround Ant part ...<ant inheritall=\"false\" target=\"resolve\" antfile=\"solr/example/build.xml\">... @ 4:77 in /usr/home/hudson/hudson-slave/workspace/Lucene-Solr-Maven-3.x/checkout/lucene/build/lucene-solr-grandparent/antrun/build-main.xml\n\n\nThis patch fixes the maven-antrun-plugin setup by defining two executions, one for the case where ivy.default.ivy.user.dir is set, and another for where it is not.\n\nCommitting shortly. ",
            "author": "Steve Rowe",
            "id": "comment-13246560"
        },
        {
            "date": "2012-04-04T18:36:10+0000",
            "content": "Same patch, with the right issue number in the name this time. ",
            "author": "Steve Rowe",
            "id": "comment-13246565"
        },
        {
            "date": "2012-04-04T19:35:23+0000",
            "content": "The most recent Jenkins nightly branch_3x Maven job made it past Ant resolution and compilation, though it had a failure in one of the Solr contribs.  That test failure is unrelated to this issue, though, so I'm resolving as fixed. ",
            "author": "Steve Rowe",
            "id": "comment-13246637"
        }
    ]
}