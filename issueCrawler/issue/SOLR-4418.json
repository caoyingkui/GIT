{
    "id": "SOLR-4418",
    "title": "TestJmxIntegration fails with IBM J9 6.0 and 7.0",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.5",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "I'm not sure if this is a JVM bug or an Oracle-specific assumption somewhere or something simple, but if I run:\n\nant test  -Dtestcase=TestJmxIntegration -Dtests.method=testJmxUpdate -Dtests.seed=DC0CB18E606BDE6D -Dtests.slow=true -Dtests.locale=ja_JP -Dtests.timezone=Australia/Darwin -Dtests.file.encoding=UTF-8\n\n\n\nWith J9 6.0 SR12 or J9 7.0 SR3 it fails with this exception:\n\n\n[junit4:junit4]    > Throwable #1: java.lang.AssertionError: No mbean found for SolrIndexSearcher\n[junit4:junit4]    > \tat __randomizedtesting.SeedInfo.seed([DC0CB18E606BDE6D:CA6B83E4F0BD75C6]:0)\n[junit4:junit4]    > \tat org.junit.Assert.fail(Assert.java:93)\n[junit4:junit4]    > \tat org.junit.Assert.assertTrue(Assert.java:43)\n[junit4:junit4]    > \tat org.junit.Assert.assertFalse(Assert.java:68)\n[junit4:junit4]    > \tat org.apache.solr.core.TestJmxIntegration.testJmxUpdate(TestJmxIntegration.java:99)\n[junit4:junit4]    > \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n[junit4:junit4]    > \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:60)\n[junit4:junit4]    > \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)\n[junit4:junit4]    > \tat java.lang.reflect.Method.invoke(Method.java:611)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1559)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:79)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:737)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:773)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:787)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.rules.SystemPropertiesRestoreRule$1.evaluate(SystemPropertiesRestoreRule.java:53)\n[junit4:junit4]    > \tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)\n[junit4:junit4]    > \tat org.apache.lucene.util.TestRuleFieldCacheSanity$1.evaluate(TestRuleFieldCacheSanity.java:51)\n[junit4:junit4]    > \tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\n[junit4:junit4]    > \tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:49)\n[junit4:junit4]    > \tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)\n[junit4:junit4]    > \tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:358)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:782)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:442)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:746)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.evaluate(RandomizedRunner.java:648)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:682)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:693)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.rules.SystemPropertiesRestoreRule$1.evaluate(SystemPropertiesRestoreRule.java:53)\n[junit4:junit4]    > \tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:46)\n[junit4:junit4]    > \tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n[junit4:junit4]    > \tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:43)\n[junit4:junit4]    > \tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n[junit4:junit4]    > \tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)\n[junit4:junit4]    > \tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:358)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Commit Tag Bot",
            "id": "comment-13574559",
            "date": "2013-02-08T15:52:33+0000",
            "content": "[trunk commit] Michael McCandless\nhttp://svn.apache.org/viewvc?view=revision&revision=1444084\n\nSOLR-4418: workaround "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13574672",
            "date": "2013-02-08T18:04:10+0000",
            "content": "[branch_4x commit] Michael McCandless\nhttp://svn.apache.org/viewvc?view=revision&revision=1444170\n\nSOLR-4418: workaround "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13724488",
            "date": "2013-07-30T21:58:56+0000",
            "content": "Commit 1508661 from hossman@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1508661 ]\n\nSOLR-5094: Fix order of setup in TestJmxIntegration so MBean server is running before Solr init.  Also fixes SOLR-4418 "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13724495",
            "date": "2013-07-30T22:02:36+0000",
            "content": "Commit 1508662 from hossman@apache.org in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1508662 ]\n\nSOLR-5094: Fix order of setup in TestJmxIntegration so MBean server is running before Solr init.  Also fixes SOLR-4418 (merge r1508661) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13724498",
            "date": "2013-07-30T22:03:24+0000",
            "content": "fixed by SOLR-5094 "
        },
        {
            "author": "Adrien Grand",
            "id": "comment-13787156",
            "date": "2013-10-05T10:19:30+0000",
            "content": "4.5 release -> bulk close "
        }
    ]
}