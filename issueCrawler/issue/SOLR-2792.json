{
    "id": "SOLR-2792",
    "title": "Allow case insensitive Hunspell stemming",
    "details": {
        "affect_versions": "3.5,                                            4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "3.5",
            "4.0-ALPHA"
        ],
        "components": [
            "Schema and Analysis"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Same as http://code.google.com/p/lucene-hunspell/issues/detail?id=3\n\nHunspell dictionaries are by nature case sensitive. The Hunspell stemmer thus needs an option to allow case insensitive matching of the dictionaries.\n\nImagine a query for \"microsofts\". It will never be stemmed to the dictionary word \"Microsoft\" because of the case difference. This problem cannot be fixed by putting LowercaseFilter before Hunspell.",
    "attachments": {
        "SOLR-2792.patch": "https://issues.apache.org/jira/secure/attachment/12496506/SOLR-2792.patch",
        "SOLR-2792_3x.patch": "https://issues.apache.org/jira/secure/attachment/12497907/SOLR-2792_3x.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13114067",
            "date": "2011-09-24T20:43:26+0000",
            "content": "Propose an option ignoreCase=\"true\" for HunspellStemFilterFactory, which effectively lowercases everything before matching. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13114798",
            "date": "2011-09-26T17:16:14+0000",
            "content": "First attempt on patch. It works, and I added an -i option to the command-line version of HunspellStemmer so that we can test ignoreCase easily.\n\nI also added an optional ignoreCaseLocale to specify the locale for lowercasing, but this only works for String#toLowerCase, while the lowercasing in CharArrayMap#equals uses plain Character#toLowerCase. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13115423",
            "date": "2011-09-27T11:59:05+0000",
            "content": "I dont think ignoreCaseLocale is a good idea: it doesn't make sense, for the same reason that String.equalsIgnoreCase does not take locale.\n\nString.toLowerCase is only for creating a lowercase presentation to the user, not case-insensitive matching.\n "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13116013",
            "date": "2011-09-27T23:50:21+0000",
            "content": "Ok, makes sense. New patch which removes ignoreCaseLocale, improves javadoc, and fixes a test bug for affix file.\n\nI wonder why CharArrayMap#equals did only lowercase text1 and not text2 in the compare. Does my fix look right? "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13116494",
            "date": "2011-09-28T13:57:34+0000",
            "content": "\nDoes my fix look right?\n\nNo, the entries in the map are already lowercased (this happens on add) "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13116868",
            "date": "2011-09-28T22:46:25+0000",
            "content": "New patch which does not modify CharArrayMap. Also, it lowercases the char[] using a for-loop with Character.toLowerCase instead of the round-trip via a String object. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13116979",
            "date": "2011-09-29T03:20:00+0000",
            "content": "looks batter: a couple questions:\n\n\n\tin the part reading the dictionary, we should avoid the String.toLowerCase() without any locale here, at least use String.toLowerCase(Locale.ENGLISH) for consistency?\n\tshouldn't we case fold the affixes too? however, i'm guessing most of these are already in lowercase.\n\n\n\nAlso, its been a while since I looked at the code, but are we \"merging\" dictionary entries here (I think we should in this lower-casing mode?)\n\nFor example:\n\nfoo/A\nFoo/B\n\nI think we want to combine flags to create foo/AB ? Maybe we are doing this already though "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13117084",
            "date": "2011-09-29T07:32:33+0000",
            "content": "Robert,\n\nin the part reading the dictionary, we should avoid the String.toLowerCase() without any locale here, at least use String.toLowerCase(Locale.ENGLISH) for consistency?\nYep, for consistency it's probably better to lowercase using an explicit locale than system default. I tested with my name, and Locale.ENGLISH converts \u00d8->\u00f8, so I'm happy \n\nshouldn't we case fold the affixes too? however, i'm guessing most of these are already in lowercase.\nThe way it works now is that we case fold the input word after affixes are applied, before comparing with dictionary words. So if either input word or affixes are not lower-case they will both be. We could add a test for it to make sure..\n\nare we \"merging\" dictionary entries here (I think we should in this lower-casing mode?)\nNo, we are not, meaning, I guess, that Foo/B would overwrite foo/A in your example? Would you like to take a stab at the merging code? "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13117089",
            "date": "2011-09-29T07:37:28+0000",
            "content": "Locale.ENGLISH is the only possible solution, because this one is identical (or nearest) to LowerCaseFilter. If you use another locale, the lowercasing would be incompatible to LowerCaseFilter used in the Analyzer, so it will fail for some special locales (like Turkish). "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13117160",
            "date": "2011-09-29T09:10:03+0000",
            "content": "\nSo if either input word or affixes are not lower-case they will both be. We could add a test for it to make sure..\n\nYeah, I'm just thinking we shouldn't rely upon the dictionary to have lower-case affixes.\n\n\nNo, we are not, meaning, I guess, that Foo/B would overwrite foo/A in your example? Would you like to take a stab at the merging code?\n\nOk, ill give it a try. I think its a good test to have anyway, i at least want to know what happens here  "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13117478",
            "date": "2011-09-29T17:59:24+0000",
            "content": "guess i was crazy about the merging thing: i added tests for this and it works already as we want... oh well at least we have a test for it  "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13117721",
            "date": "2011-09-29T23:08:13+0000",
            "content": "Fixed toLowerCase(Locale.ENGLISH).\n\nGetting close to committing? "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13121463",
            "date": "2011-10-05T20:50:59+0000",
            "content": "Robert, do you have more changes you want in before commit? "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13121468",
            "date": "2011-10-05T20:55:32+0000",
            "content": "+1 to commit "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13121521",
            "date": "2011-10-05T21:59:14+0000",
            "content": "Attaching final patch files "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13121533",
            "date": "2011-10-05T22:09:15+0000",
            "content": "Fixed for 3.x and trunk. Wiki page updated. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13157863",
            "date": "2011-11-27T12:36:07+0000",
            "content": "Bulk close after 3.5 is released "
        }
    ]
}