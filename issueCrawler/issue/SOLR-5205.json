{
    "id": "SOLR-5205",
    "title": "MoreLikeThis doesn't escape shard queries",
    "details": {
        "affect_versions": "4.4",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "MoreLikeThis"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "MoreLikeThis does not support Lucene special characters as ID in distributed search. ID's containing special characters such as URL's need to be escaped in the first place. They are then unescaped and get sent to shards in an unescaped form, causing the org.apache.solr.search.SyntaxError exception.",
    "attachments": {
        "SOLR-5205-trunk.patch": "https://issues.apache.org/jira/secure/attachment/12600763/SOLR-5205-trunk.patch",
        "SOLR-5205.patch": "https://issues.apache.org/jira/secure/attachment/12611386/SOLR-5205.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Markus Jelsma",
            "id": "comment-13754577",
            "date": "2013-08-30T10:55:01+0000",
            "content": "Patch for trunk. It uses ClientUtils.escapeQueryChars to properly escape the ID. This fixes the issue with distributed MoreLikeThis for documents with special Lucene characters. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13754730",
            "date": "2013-08-30T14:38:37+0000",
            "content": "I'm a little confused at why MoreLikeThis would know or be escaping for any particular query language. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13754882",
            "date": "2013-08-30T16:45:25+0000",
            "content": "Robert Muir Distributed MLT generates shard queries like the following.  The initial query that used the MLT component was 'tag_id:ugphotos000996', where tag_id is the uniqueKey field:\n\n%2B(catchall:arabian+catchall:close-up+catchall:horse+catchall:closeup+catchall:close+catchall:white+catchall:up+catchall:sassy+catchall:154+catchall:equestrian+catchall:domestic+catchall:animals+catchall:of)+-tag_id:ugphotos000996\n\nThe values seen in the distributed queries are what is in termvectors on the catchall field for this document.  Without this patch, the termvector values are used as-is, which means that if they contain things like unbalanced parentheses, the query fails because of basic parsing rules.\n\nI have run into this and other problems while testing distributed MLT.  The biggest problem I've run into is one for which no issue yet exists - extremely slow performance.  A distributed MLT request can be measured in minutes, whereas an MLT request sent directly to the shard containing a document only takes about 1.5 seconds. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13754927",
            "date": "2013-08-30T17:24:35+0000",
            "content": "Now that I take a good look at the patch, it seems to only affect the last part of the query, where it adds the clause that excludes the original document ID value.  We need a patch that affects the individual termvector values.\n\nAdditionally, the patch is against MoreLikeThisHandler, for what I am doing, I use MoreLikeThisComponent.  I have (so far) been unable to make the Handler work. "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-13754938",
            "date": "2013-08-30T17:34:58+0000",
            "content": "Shawn, this is the MoreLikeThisHelper which is used in the component so it fixes the problem when using it as a component. But, indeed as you point out, it only fixes the issue where the document's unique ID gets excluded because our ID's are URL's and they contain special characters for the classic Lucene query parser.\n\nSo in our case the following queries are generated:\n(field:term1 field:term2) -id:http://apache.org/\nand produce the syntax error exception. This patch only fixes issues with the document's unique ID.\n "
        },
        {
            "author": "Steve Molloy",
            "id": "comment-13810236",
            "date": "2013-10-31T13:29:39+0000",
            "content": "On top of only addressing the id part of the query, this patch may have undesired effects on queries that are not distributed and queries using the MoreLikeThisHandler. Basically, original issue is because distributed queries use the string representation of the query to send to shards, that string representation cannot be parsed as-is because characters are not escaped. I'm posting a patch that changes the toString behaviour for term queries to produce parsable output so it can be used in distributed without changing the actual values in the query object. "
        },
        {
            "author": "Steve Molloy",
            "id": "comment-13810237",
            "date": "2013-10-31T13:30:15+0000",
            "content": "Patch to produce string representations that can be parsed. "
        },
        {
            "author": "Steve Molloy",
            "id": "comment-13810445",
            "date": "2013-10-31T17:13:51+0000",
            "content": "Strike the part trying to avoid code duplication in ClientUtils by calling ToStringUtils, solrj cannot see ToStringUtils in its dependencies.  \n(Should there be a common utility package available for lucene, solr & solrj?) "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-13819006",
            "date": "2013-11-11T14:47:51+0000",
            "content": "Shawn, i hadn't noticed bad performance for distributed MLT before until just now. It looks like that in a 5 shard cluster it fires about 12 queries of which most are really slow. Doing MLT on a not distributed node with a large amount of documents is lightning fast! Many of the queries fired are distrib=true. "
        },
        {
            "author": "Bill Mitchell",
            "id": "comment-13841846",
            "date": "2013-12-06T23:02:32+0000",
            "content": "I missed that this Jira had already been opened when I created SOLR-5521.  \n\nI tried the approach of changing the TermQuery.toString method, seen in the attached SOLR-5205.patch, and had it fail other tests, so I abandoned that approach and went with escaping the term text directly in the MoreLikeThisHandler, as was done in the attached SOLR-5205-trunk.patch.  (I'll admit, in my first attempt to fix this in TermQuery.toString, I was trying to protect the special characters by surrounding the entire term in quotes, and that did not work.)\n\nAs mentioned above by Shawn and Steve, beyond the id, there is the issue of needing to escape the terms (also brought up in a comment to SOLR-788).  Instead of escaping these in the TermQuery.toString, the approach in the patch to SOLR-5521 is to escape these in MoreLikeThis.java, where the BooleanQuery is being built.    "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971058",
            "date": "2014-04-16T12:57:02+0000",
            "content": "Move issue to Solr 4.9. "
        }
    ]
}