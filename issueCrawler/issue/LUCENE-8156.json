{
    "id": "LUCENE-8156",
    "title": "patch-mrjar-classes fails if an old version of ASM is on the Ant classpath",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Task",
        "components": [],
        "fix_versions": [
            "7.3",
            "master (8.0)"
        ]
    },
    "description": "If some optional tasks that depend on an old version of ASM are installed, patching fails with the following error: /home/jpountz/src/lucene-solr/lucene/common-build.xml:565: java.lang.IncompatibleClassChangeError: class org.objectweb.asm.commons.ClassRemapper has interface org.objectweb.asm.ClassVisitor as super class\n\nThe reason is that ClassRemapper is loaded from the right place, but ClassVisitor, its parent class, is loaded from the parent classpath which may be a different version.\n\nIt is easy to reproduce:\n\n\tdownload and extract ant-1.10.1 (latest version)\n\trun bin/ant -f fetch.xml -Ddest=system, this will add lib/asm-2.2.3.jar among other files\n\trun ant clean test at the root of lucene-solr.",
    "attachments": {
        "LUCENE-8156.patch": "https://issues.apache.org/jira/secure/attachment/12909274/LUCENE-8156.patch",
        "image-2018-02-06-00-00-35-434.png": "https://issues.apache.org/jira/secure/attachment/12909325/image-2018-02-06-00-00-35-434.png"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16352893",
            "date": "2018-02-05T20:32:32+0000",
            "content": "Hi Adrien,\nI have the feeling we can't fix this. There are already bugs open and the problem with \"ant -f fetch.xml\" is bringing many problems. It adds horrible (more than 10 year old versions of several tools into ant's default classpath).\n\nMy question: Why does one install those outdated stuff? If it's a bug in the installation - and we should the user tell how to fix it. We had a similar request where somebody else's build was broken, because some crazy Linux Package manager called \"ant -f fetch.xml\" during installation. We closed that as won't fix (have to look it up).\n\nMy idea would be to fail early: If ANT finds asm's ClassReader or some other bad class files on default class path when starting up, it bails out, telling user to fix his classpath.\n\nWhy does ES's half-hourly Lucene tests use this? I'd cleanup the ant/lib folder! ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-16352915",
            "date": "2018-02-05T20:45:22+0000",
            "content": "Here is my proposed patch to bail out early with useful error message. ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-16352924",
            "date": "2018-02-05T20:49:37+0000",
            "content": "Here is how it bails out (I added this 12 year old ASM version to ~/.ant/lib):\n\n\nC:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr1\\lucene\\core>ant jar\nBuildfile: C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr1\\lucene\\core\\build.xml\n\nBUILD FAILED\nC:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr1\\lucene\\core\\build.xml:27: The following error occurred while executing this line:\nC:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr1\\lucene\\common-build.xml:69: Your ~/.ant/lib folder or the main classpath of Ant contains some version of ASM. Please remove it, otherwise this build can't run correcty.\n\nTotal time: 0 seconds\n\nC:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr1\\lucene\\core>\n\n ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-16353117",
            "date": "2018-02-05T23:57:45+0000",
            "content": "In general, on Jenkins builds, I would never ever user the operating system's default ANT. I'd configure Jenkins to use a specific version of ANT, so it downloads and installs a clean version in the Jenkins build. This makes builds reproducible. Apache Jenkins and Policeman are configured like this. It has no dependency to possibly broken operating system packages. ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-16353119",
            "date": "2018-02-06T00:00:45+0000",
            "content": "This is how it looks like on Policeman:\n\n ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-16353164",
            "date": "2018-02-06T00:47:36+0000",
            "content": "Is there no way to avoid relying on what is in ant's classpath (e.g. like javac includeAntRuntime=false)? If we can make the build robust, we should do it. A clear error is one way to do that though. The patch has a typo for \"correctly\". ",
            "author": "Robert Muir"
        },
        {
            "id": "comment-16353526",
            "date": "2018-02-06T07:57:09+0000",
            "content": "Unfortunately no, there is no way: We had three people looking at it yesterday. The includeAntRuntime stuff only works for classpaths of javac - because they are outside JVM's loading mechanisms and do not have to do anything with classloaders (the classpath passed to javac is different).\n\nHere the transformation of class files are done by ant's JVM, so it uses Ant's classloader at thetop level. Ant has options to violate classloading by inverting the parent search order (parentLast), but I did not get that running. Another option would be to fork - but that did not work, as it would then require a local installation of Groovy.\n\nI can fix the typo, sure  ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-16353533",
            "date": "2018-02-06T08:01:13+0000",
            "content": "BTW, Forbiddenapis would have same problem, but it works around the issue\u00a0by having a private shaded\u00a0ASM in its own JAR. ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-16353541",
            "date": "2018-02-06T08:07:07+0000",
            "content": "Uwe Schindler Requiring users to not have ASM on the Ant classpath sounds totally reasonable to me if this issue can't be fixed easily. Thanks for adding this test, this error message is definitely better, I had to do quite some digging to understand what the problem was about. +1 to commit ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16355853",
            "date": "2018-02-07T18:27:18+0000",
            "content": "Commit 466c1ef4dab4e6da932369a13f587410b6df3203 in lucene-solr's branch refs/heads/master from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=466c1ef ]\n\nLUCENE-8156: Require users to not have ASM on the Ant classpath during build (this is required by LUCENE-7966) ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16355857",
            "date": "2018-02-07T18:28:41+0000",
            "content": "I committed to master. I keep this open until LUCENE-7966 is backported, as it is requiredto backport it, too. ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-16357257",
            "date": "2018-02-08T17:31:36+0000",
            "content": "Commit f208fb867006932b575e3b6149163b7e81fec41e in lucene-solr's branch refs/heads/branch_7x from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f208fb8 ]\n\nLUCENE-8156: Require users to not have ASM on the Ant classpath during build (this is required by LUCENE-7966) ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16357269",
            "date": "2018-02-08T17:35:09+0000",
            "content": "Thanks Uwe! ",
            "author": "Adrien Grand"
        }
    ]
}