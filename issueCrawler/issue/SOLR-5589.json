{
    "id": "SOLR-5589",
    "title": "Disabled replication in config is ignored",
    "details": {
        "affect_versions": "4.5",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "replication (java)"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "When replication on master node is explicitly disabled in config, it is still enabled after start. This is because when both master and slave configurations are written with enabled=false, replication handler considers this node is a master and enables it. With proposed patch handler will consider this as master node but will disable replication on startup if it is disabled in config (equivalent to disablereplication command).",
    "attachments": {
        "SOLR-5589.patch": "https://issues.apache.org/jira/secure/attachment/12620835/SOLR-5589.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Vitaliy Zhovtyuk",
            "id": "comment-13881312",
            "date": "2014-01-24T19:03:20+0000",
            "content": "Added ReplicationHandler tests and configuration.\nReplicationHandler state tested by details request (http://slave_host:port/solr/replication?command=details) and by getting handler statistic. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13881717",
            "date": "2014-01-25T06:36:29+0000",
            "content": "Thanks Vitaliy.\n\nI renamed the ReplicationHandlerTest to TestDisabledReplicationHandler to avoid confusion because there was already a test called TestReplicationHandler. Similarly I also renamed the solrconfig-requesthandler.xml to solrconfig-disabled-replicationhandler.xml.\n\nI'll commit this shortly. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13881746",
            "date": "2014-01-25T08:21:54+0000",
            "content": "There are multiple test failures with this patch.\n\nant test:\n[junit4] Tests with failures (first 10 out of 12):\n   [junit4]   - org.apache.solr.cloud.ChaosMonkeySafeLeaderTest.testDistribSearch\n   [junit4]   - org.apache.solr.cloud.ShardSplitTest.testDistribSearch\n   [junit4]   - org.apache.solr.cloud.MigrateRouteKeyTest.testDistribSearch\n   [junit4]   - org.apache.solr.cloud.SyncSliceTest.testDistribSearch\n   [junit4]   - org.apache.solr.cloud.BasicDistributedZk2Test.testDistribSearch\n   [junit4]   - org.apache.solr.cloud.UnloadDistributedZkTest.testDistribSearch\n   [junit4]   - org.apache.solr.handler.TestReplicationHandler.doTestRepeater\n   [junit4]   - org.apache.solr.handler.TestReplicationHandler.doTestStressReplication\n   [junit4]   - org.apache.solr.cloud.ChaosMonkeyNothingIsSafeTest.testDistribSearch\n   [junit4]   - org.apache.solr.handler.TestReplicationHandler.doTestSnapPullWithMasterUrl\n\nFailure from TestReplicationHandler.doTestStressReplication:\n\njava.lang.AssertionError: \nExpected :1390637702930\nActual   :0\n <Click to see difference>\n\tat __randomizedtesting.SeedInfo.seed([A247ABF79E59A37B:79ECAB319B71CAC8]:0)\n\tat org.junit.Assert.fail(Assert.java:93)\n\tat org.junit.Assert.failNotEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:128)\n\tat org.junit.Assert.assertEquals(Assert.java:147)\n\tat org.apache.solr.handler.TestReplicationHandler.assertVersions(TestReplicationHandler.java:980)\n\tat org.apache.solr.handler.TestReplicationHandler.doTestStressReplication(TestReplicationHandler.java:832)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1559)\n\n "
        },
        {
            "author": "Vitaliy Zhovtyuk",
            "id": "comment-13883945",
            "date": "2014-01-28T09:35:31+0000",
            "content": "Master and slave considered as disabled in 3cases: not configured master/slave, configured but missing \"enable\" parameter on master/slave, explicitly defined enable=false on master/slave.\nIn all 3cases when master and slave disabled only default value for non-configured ReplicationHandler is master and replicateOnCommit.\nSince we disable replication in this case (not configured master and slave or omitted enable config) replication stops working.\nThis is the reason of those tests failure (master and replication expected when handler configuration omitted).\n\nI propose to disable replication only in case of explicitly defined enable=false for master and slave. \nAttached patch illustrate the idea. "
        },
        {
            "author": "Alexey Kozhemiakin",
            "id": "comment-13884259",
            "date": "2014-01-28T15:41:38+0000",
            "content": "Vitaly,\nok it looks like my initial patch was not comlete. Thank you for working on it.\n\nWhat if <enable> attribute will be optional and will be used only for explicit disabling when someone need it? Missing <enable> attribute is treated as True to provide backwards compatibility.\n\nIdeally the following config to be enough to say that we want replication but disabled at startup.\n\n<requestHandler name=\"/replication\" class=\"solr.ReplicationHandler\" > \n<lst name=\"master\">\n   <str name=\"enable\">false</str> \n   <str name=\"replicateAfter\">commit</str>\n    <str name=\"confFiles\">schema.xml</str>\n</lst>\n</requestHandler>\n\nSo the patch could be changed to something like\n\nif(disabledExplicitly(slave) || disabledExplicitly(master))\n{\n replicationEnabled.set(false);\n }\n "
        },
        {
            "author": "Vitaliy Zhovtyuk",
            "id": "comment-13885556",
            "date": "2014-01-29T17:22:32+0000",
            "content": "Lets consider the following config:\n<requestHandler name=\"/replication\" class=\"solr.ReplicationHandler\" > \n<lst name=\"master\">\n<str name=\"replicateAfter\">commit</str>\n<str name=\"confFiles\">schema.xml</str>\n</lst>\n    <lst name=\"slave\">\n      <str name=\"enable\">false</str>\n      <str name=\"masterUrl\">http://127.0.0.1:TEST_PORT/solr</str>\n      <str name=\"pollInterval\">00:00:01</str>\n      <str name=\"compression\">COMPRESSION</str>\n    </lst>\n</requestHandler>\n\nSlave is disabled, but master can be used to replicate to separate Solr instance.\nTherefore i think it's only make sense to disable replication when both master and slave explicitly disabled.\nAnd i think it will not have side effects with replication when slave is disabled for some reason, but master is replication to separate instance. "
        },
        {
            "author": "Alexey Kozhemiakin",
            "id": "comment-13891240",
            "date": "2014-02-04T21:30:31+0000",
            "content": "I've attached new patch which illustrates and tests my initial concern. I've introduced new config param \"replicationEnabled\" to control enable\\disable replication on master similar to enable\\disable command. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971019",
            "date": "2014-04-16T12:56:54+0000",
            "content": "Move issue to Solr 4.9. "
        }
    ]
}