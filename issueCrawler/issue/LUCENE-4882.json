{
    "id": "LUCENE-4882",
    "title": "FacetsAccumulator.java:185 throws NullPointerException if it's given an empty CategoryPath.",
    "details": {
        "components": [
            "modules/facet"
        ],
        "fix_versions": [
            "4.3",
            "6.0"
        ],
        "affect_versions": "4.2",
        "priority": "Critical",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "When I wanted to count root categories, I used to pass \"new CategoryPath(new String[0])\" to a CountFacetRequest.\n\nSince upgrading lucene from 4.1 to 4.2, that threw ArrayIndexOfOutBoundsException, so I passed CategoryPath.EMPTY to a CountFacetRequest instead, and this time I got NullPointerException.\n\nIt all originates from FacetsAccumulator.java:185\n\nDoes someone conspire to prevent others from counting root categories?",
    "attachments": {
        "LUCENE-4882.patch": "https://issues.apache.org/jira/secure/attachment/12575472/LUCENE-4882.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-03-26T04:14:00+0000",
            "content": "Does someone conspire to prevent others from counting root categories?\n\nHehe, no, no conspiracy. I'll look into it! ",
            "author": "Shai Erera",
            "id": "comment-13613466"
        },
        {
            "date": "2013-03-26T05:08:58+0000",
            "content": "Patch adds a test and fix. I'll commit later. ",
            "author": "Shai Erera",
            "id": "comment-13613500"
        },
        {
            "date": "2013-03-26T05:18:46+0000",
            "content": "Thanks for a quick response, man. ",
            "author": "crocket",
            "id": "comment-13613506"
        },
        {
            "date": "2013-03-26T05:28:28+0000",
            "content": "Committed a fix to trunk and 4x. Thanks for reporting crocket!\n\nIf you cannot wait until 4.3 (and cannot work with 4x directly), you can use StandardFacetsAccumulator as an alternative, but note that it's slower than FacetsAccumulator. Or, create your own FacetsAccumulator and copy accumulate + fix. ",
            "author": "Shai Erera",
            "id": "comment-13613515"
        },
        {
            "date": "2013-03-26T05:36:04+0000",
            "content": "What about 4.2.1?\n\nAnd when will 4.3 be released? ",
            "author": "crocket",
            "id": "comment-13613518"
        },
        {
            "date": "2013-03-26T05:41:34+0000",
            "content": "Unfortunately it won't make it into 4.2.1, and it's likely that 4.3 will be released before 4.2.2 (though it will take some time since we just cut 4.2). ",
            "author": "Shai Erera",
            "id": "comment-13613519"
        },
        {
            "date": "2013-03-26T21:54:47+0000",
            "content": "I decided to stick to 4.2 for a while.\n\nShould I override methods in both FacetsAccumulator.java and CountingListBuilder.java to make it work? ",
            "author": "crocket",
            "id": "comment-13614597"
        },
        {
            "date": "2013-03-26T22:03:13+0000",
            "content": "The fix that I added to CountingListBuilder is only for the case where you index facets such as \"a\", \"b\", which is done in tests only. Usually, your facets will look like dimension/level1[/level2/level3...], in which case you're not affected by the fix in CLB. I would just extends FacetsAccumulator with a TODO \"remove when 4.3 is out\"... ",
            "author": "Shai Erera",
            "id": "comment-13614604"
        },
        {
            "date": "2013-03-26T22:09:33+0000",
            "content": "1) I have a facet \"me\" that doesn't have a subcategory. Does it mean I need to modify CountingListBuilder as well as FacetsAccumulator or just use StandardFacetsAccumulator?\n\n2) I tried to use StandardFacetsAccumulator, but FacetsCollector.getFacetResults still throws \"java.lang.ArrayIndexOutOfBoundsException: 0\"\nFacetsAccumulator sfa=StandardFacetsAccumulator.create(fsp, searcher.getIndexReader(), taxoReader);\nFacetsCollector fc = FacetsCollector.create(sfa);\n\nDoes it mean I need to apply your patch to my project? ",
            "author": "crocket",
            "id": "comment-13614607"
        },
        {
            "date": "2013-03-26T22:16:57+0000",
            "content": "Ahh. Well, you can still do without modifying CLB, by specifying OrdinalPolicy.ALL_PARENTS for you category lists. That's a change we've done in 4.2, that the root dimension ordinal is not indexed by default (== OP.ALL_BUT_DIMENSION) to save some space as well as CPU cycles. The downside (besides the bug!) is that you don't get the count of the dimension. Performance-wise, this improved some, but not critical. So you can choose between overriding FacetIndexParams.getCategoryListParams() to always return a CLP which specifies OP.ALL_PARENTS for all categories, or extend CLB and apply the fix locally. In both cases, I would put the TODO . ",
            "author": "Shai Erera",
            "id": "comment-13614616"
        },
        {
            "date": "2013-03-26T22:25:29+0000",
            "content": "I tried to use StandardFacetsAccumulator, but FacetsCollector.getFacetResults still throws \"java.lang.ArrayIndexOutOfBoundsException: 0\"\n\nStrange, the test I added to TestFacetsCollector passed with StandardFacetsAccumulator. Also, I don't see that SFA has a static create() method \u2013 are you sure you're using the right version of the code? Or perhaps it was a copy/paste bug? ",
            "author": "Shai Erera",
            "id": "comment-13614621"
        },
        {
            "date": "2013-03-27T04:36:05+0000",
            "content": "It turned out that StandardFacetsAccumulator inherited create from FacetsAccumulator.\nThus, when I invoked StandardFacetsAccumulator.create, FacetsAccumulator.create was called actually.\n\nAfter replacing StandardFacetsAccumulator.create with new StandardFacetsAccumulator, it worked.\n\nI'll replace StandardFacetsAccumulator with something else when 4.3 comes around.\n\nI guess it is safe to close the issue. ",
            "author": "crocket",
            "id": "comment-13614916"
        },
        {
            "date": "2013-03-27T04:49:57+0000",
            "content": "It turned out that StandardFacetsAccumulator inherited create from FacetsAccumulator.\n\nAhh, right. That's why in eclipse I mark these things as warnings because it's dangerous to call static methods in these cases. At any rate, this is just a temporary workaround until 4.3. Thanks for bringing closure! ",
            "author": "Shai Erera",
            "id": "comment-13614928"
        },
        {
            "date": "2013-05-10T10:33:02+0000",
            "content": "Closed after release. ",
            "author": "Uwe Schindler",
            "id": "comment-13653803"
        }
    ]
}