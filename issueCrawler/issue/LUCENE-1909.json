{
    "id": "LUCENE-1909",
    "title": "Make IndexReader.DEFAULT_TERMS_INDEX_DIVISOR public",
    "details": {
        "labels": "",
        "priority": "Trivial",
        "components": [
            "core/index"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "",
    "attachments": {
        "LUCENE_1909.patch": "https://issues.apache.org/jira/secure/attachment/12424577/LUCENE_1909.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-11-11T08:04:24+0000",
            "content": "Grant, are you going to change this for 3.0? If not we should move it out to 3.1. If we make it public the constant should be final though. I attached a patch.\n\nthanks, simon ",
            "author": "Simon Willnauer",
            "id": "comment-12776354"
        },
        {
            "date": "2009-11-11T08:09:00+0000",
            "content": "patch with Javadoc ",
            "author": "Simon Willnauer",
            "id": "comment-12776356"
        },
        {
            "date": "2009-11-11T08:10:34+0000",
            "content": "I think, we should have this in 3.0, it's not a big deal. ",
            "author": "Uwe Schindler",
            "id": "comment-12776359"
        },
        {
            "date": "2009-11-11T09:49:12+0000",
            "content": "+1 for 3.0 ",
            "author": "Michael McCandless",
            "id": "comment-12776394"
        },
        {
            "date": "2009-11-11T10:01:39+0000",
            "content": "@Grant: can somebody else take this? ",
            "author": "Simon Willnauer",
            "id": "comment-12776397"
        },
        {
            "date": "2009-11-11T16:04:32+0000",
            "content": "Simon: Should I take & commit it? ",
            "author": "Uwe Schindler",
            "id": "comment-12776489"
        },
        {
            "date": "2009-11-11T16:10:47+0000",
            "content": "umm ... call me crazy, but why are we making this public? ",
            "author": "Mark Miller",
            "id": "comment-12776490"
        },
        {
            "date": "2009-11-11T16:14:19+0000",
            "content": "Because it's nice to know what the default is and be able to refer to that w/o having to hardcode a magic number somewhere else in your app when it is already hardcoded here. ",
            "author": "Grant Ingersoll",
            "id": "comment-12776492"
        },
        {
            "date": "2009-11-11T16:18:49+0000",
            "content": "+1, I have the same opinion ",
            "author": "Uwe Schindler",
            "id": "comment-12776494"
        },
        {
            "date": "2009-11-11T16:22:01+0000",
            "content": "Whats the use case?\n\nIf if the default was different than 1, I'd still think this was weird - but ...\n\nBut the default is 1 - load them all. Seems weird to me to broadcast this beyond documentation. It locks us into that field and I can't see the benefit myself. You have a specific use case that this makes sense for? ",
            "author": "Mark Miller",
            "id": "comment-12776496"
        },
        {
            "date": "2009-11-11T16:23:09+0000",
            "content": "Okay - 2v1 I guess - but I think you guys have been eating too many of the crazy pills  This is a weird default to expose. ",
            "author": "Mark Miller",
            "id": "comment-12776497"
        },
        {
            "date": "2009-11-12T12:38:32+0000",
            "content": "Hm, I only bought one 500 pills Aspirin package for 3$ in Oakland... ",
            "author": "Uwe Schindler",
            "id": "comment-12776974"
        },
        {
            "date": "2009-11-12T12:57:24+0000",
            "content": "I sort of agree with Mark, now... the default is \"don't subsample the terms index\", so it is rather odd to make this public.\n\nI think it does make sense to have a private named constant for this (instead of \"1\" all throughout the code) for code readability.\n\nYet, Lucene does do this \"static final public default\" constant in a number of places.\n\nMy guess is this is a Solr need, right?  Ie, Solr is exposing control over terms index divisor, and would like to set a default for that param, and so the natural thing to do is wire it to Lucene's default.  Outside Solr, it's hard to imagine why apps would need to (should) refer to this constant. ",
            "author": "Michael McCandless",
            "id": "comment-12776981"
        },
        {
            "date": "2009-11-12T13:49:09+0000",
            "content": "Boy, I had an awesome use case when I wrote this up, but am forgetting it now.  I think it was something like:\n\nIf you are examining the index ahead of time, you could have heuristics about how much memory you want the system to use when loading a reader.  Thus, I could have a clause in my IndexReader code that did something like:\n\n\nif (index is big or memory is tight){\nreader = IndexReader.open(..., largerTermsIndexDiv);\n} else{\nreader = IndexReader.opent(..., DEFAULT_TERMS_INDEX_DIVISOR);\n}\n\n\n\nHard coding a 1 in that else clause seems like a bad thing to do given there is already a \"default\" value spec. by Lucene.\n\nAlso, since it is package private, if I extend IndexReader, I won't have access to it.\n\nAt the end of the day, it's not a big deal.   ",
            "author": "Grant Ingersoll",
            "id": "comment-12776997"
        },
        {
            "date": "2009-11-12T14:30:53+0000",
            "content": "I know its not a big deal - but I have an abrasive reputation to maintain \n\nThe default terms info divisor essentially means that feature is turned off. The 1 just means, don't sub sample the terms index. Its off.\n\nFor your use case, I would do:\n\n\nif (index is big or memory is tight){\n  reader = IndexReader.open(..., largerTermsIndexDiv);\n} else{\n  reader = IndexReader.open(...);\n}\n\n\n\nIf you don't use that argument, you get the default. Whenever I see an issue to open up something in Lucene without a reason that makes sense to me, I think its a good idea to push back. If it really does make sense, it will make it through - but I don't think anything should get a free pass. This one is still not making sense to me.\n\nYour right - its not a big deal - but I still don't see a reason to open it up. ",
            "author": "Mark Miller",
            "id": "comment-12777006"
        },
        {
            "date": "2009-11-12T14:39:05+0000",
            "content": "I have the following use case:\n\ni have a configuration bean, this bean can be customized via xml at config time\nin this bean, i expose the setting for the terms index divisor\nso, my bean has to have a default value for this,\n\nright now, i just use 1 for the default value.\nwould be nice if i could just use the lucene constant instead of using 1, as the lucene constant could change in the future (not really likely, but its one less constant i have to maintain)\n\nif the default is not made public i have 2 options:\n\n\tuse a hard coded constant in my code for the default value (doing this right now)\n\tuse an Integer object, and have null be the default\n\n\n\nthe nasty part about the second option is that i now have to do conditional opening of the reader depending on if null is the value (unset), when it would be much simpler (and easier for me to maintain), if i just always pass in that value ",
            "author": "Tim Smith",
            "id": "comment-12777008"
        },
        {
            "date": "2009-11-12T14:51:41+0000",
            "content": "Okay - fair enough - there is a use case I won't try and argue.\n\nI will say that I don't see the default ever changing - it would change on the IndexWriter side - I see this as an extra feature and 1 just means its off - but far be it from me to make an injectors life harder. ",
            "author": "Mark Miller",
            "id": "comment-12777010"
        },
        {
            "date": "2009-11-12T17:03:17+0000",
            "content": "Eh - still bugging me. If you are allowing users to set this in XML, do you really want to hide what the setting is unless they dig into Lucene internal code? \n\nAs a user, I'm thinking - oh, nice - I can change this - but what am I changing it from? Oh, I have to go dig into Lucene source to see. So you likely want to put in a comment or something saying what the default is - but then you should just put the value, else your still maintaining. It doesnt make sense to have a user go - uh - I'll change this from the unknown default to ... 7!\n\nThis use case hasn't sold me yet after all either. Whatever though - I wouldn't -1 it. \"Its not a big deal\" is something I've already agreed with. ",
            "author": "Mark Miller",
            "id": "comment-12777057"
        },
        {
            "date": "2009-11-12T17:13:56+0000",
            "content": "users can see the live setting via things like JMX/admin ui\nalso, if i intend users to actually change the value regularly, i can provide user facing documentation that would go into detail without the user needing to dig further into lucene internals (memory tuning guide or something)\ncurrently just exposing this setting myself as a SUPER ADVANCED setting (just in case it will need to be tuned for custom use cases in the future) (can't tune it if its not exposed in config)\n ",
            "author": "Tim Smith",
            "id": "comment-12777064"
        },
        {
            "date": "2009-11-12T17:16:19+0000",
            "content": "My guess is this is a Solr need, right?\n\nI don't think so... IMO, Solr should do it like a normal user should do it - pass it to open().\nIMO, exposing global config isn't needed or desirable (i.e. I agree with Mark) ",
            "author": "Yonik Seeley",
            "id": "comment-12777065"
        },
        {
            "date": "2009-11-12T17:48:17+0000",
            "content": "A good admin UI should have this option off by default - ie no terms divisor set on the indexreader side. There is no need to display a number to the user - the option is not in effect by default. Thats always going to make sense. Unless you make your own default and then this is all moot anyway. If Lucene ever decided to change this type of thing, it would happen on the index side. The admin UI should let you enable a terminfodivisor and set a value greater than 1, or turn of the terms index entirely. If a user hasnt enabled it, use the constructors/getters that don't have that param - if they enable it, use the constructors/getters that have that param.\n\nNot sold. Not sold for a need with JMX either. ",
            "author": "Mark Miller",
            "id": "comment-12777085"
        },
        {
            "date": "2009-11-12T18:39:16+0000",
            "content": "what you describe requires effectively 2 settings:\n\n\tcustom term infos divisor enabled/disabled\n\tconfigured value if enabled\n\n\n\nthis then results in more complexity in opening the index reader (conditional opening where a non-conditional open with the configured divisor would do the trick)\nany admin ui would also require more conditional handling of displaying this setting (as you described) (i'm not displaying it other than in JMX now anyway, so it doesn't really matter for me, and JMX just has a readonly attribute that shows the configured value (1 by default))\n\npersonally, i don't care too much if this constant is made public or not (would make it so i use that constant instead of defining my own with the same value), so it only saves me 1 line (and its not like the default will ever change from 1 in the lucene code anyway)\n ",
            "author": "Tim Smith",
            "id": "comment-12777109"
        },
        {
            "date": "2009-11-12T18:43:21+0000",
            "content": "heh - well, if you want to be lazy with the admin code, you can just plug in 1. Do you really need a Lucene constant to tell you that a divisor of 1 is no divisor?\n\neg - Lucene is not using that default in a way that you guys are arguing users would want to - its using it to set the thing as off. Perhaps it shouldnt have default in its name - being internal, it kind of doesn't matter though. Really its just saying, the divisor is off. You don't really need to worry about what  the number is - its just avoiding a magic number in Lucene code.\n\neg - there is no default number as far as the user should be concerned. The default is that the IndexReader divisor feature is off. ",
            "author": "Mark Miller",
            "id": "comment-12777112"
        },
        {
            "date": "2009-11-12T18:53:26+0000",
            "content": "By the way, if you use a final constant, without recompiling it would never change, because even Java puts such constants directly as plain value into class files...  - so a change in the JAR file of a new Lucene Version would have no effect. See the problem with Constants.LUCENE_MAIN_VERSION (which is solved from 2.9.1 on) ",
            "author": "Uwe Schindler",
            "id": "comment-12777116"
        },
        {
            "date": "2009-11-12T18:56:46+0000",
            "content": "Only thing i would want the constant for is to known what the default divisor is. The default just happens to be 1 (no divisor/off).\n\nHowever (while unlikely) a new version of lucene could default to using a real divisor (maybe once everyone is on solid state disks, a higher divisor will result in the same speed of access, with less memory use), at which point, if i upgrade to a new version of lucene, i want to inherit that changed setting (as the default was selected by people that probably know better than me what will better server the general use of lucene in terms of memory and performance)\n\nright now, if i want to inherit the default i would have to do a conditional IndexReader.open() and store my setting as a pair (enabled/disabled, divisor), which could be encoded in an Integer object (null = disabled/use lucene default)\n\nif the constant is made public, its easier for me to inherit that default setting.\nof course at the end of the day, either approach will only be about 5 lines of code difference, so again, i don't really care too much about the outcome of this\n\nBy the way, if you use a final constant, without recompiling it would never change,...\n\nI never drop a new lucene in without recompiling (so that doesn't cause any difference for me) ",
            "author": "Tim Smith",
            "id": "comment-12777118"
        },
        {
            "date": "2009-11-12T19:07:18+0000",
            "content": "If you want to inherit the setting, use the correct constructor \n\nLucene doesn't advertise a default setting now, because the default is off - you only know we are using a 1 divisor because you are peeking. We could switch to not using that constant at all right now. Nice to have flexibility.\n\nHowever (while unlikely) a new version of lucene could default to using a real divisor (maybe once everyone is on solid state disks, a higher divisor will result in the same speed of access, with less memory use)\n\nWe wouldn't change it there by default. Thats a waste on the index size side. We would change the IndexWriter divisor. We wouldn't waste index size on disk for most people just so some people could lower it back to 1 to get there speed back. I'd -1 the heck out of that. There is no default for you to inherit in any case - thats an impl detail. By the default the feature is off. You can't inherit anything about it.\n ",
            "author": "Mark Miller",
            "id": "comment-12777127"
        },
        {
            "date": "2009-11-12T19:20:13+0000",
            "content": "If you want to inherit the setting, use the correct constructor \n\nagreed, just a tiny bit of more complexity on my side for that (but its so insignificant that it doesn't really matter, and is really not even worth arguing over)\n\nif the constant was public, i'd use it, if not, no worries (for me at least)\n\nBy the default the feature is off. You can't inherit anything about it.\n\nideally, i want to inherit that the feature is off by default, then allow config to turn it on (by providing a value greater than one for this setting, or just 1 to allow config to explicitly disable)\nusing the constructor with no divisor does this (i just need to call the constructor conditionally depending on if the setting was explicitly configured), thats easy and is no problem to do at all (just a couple of extra lines of code in my app layer)\n ",
            "author": "Tim Smith",
            "id": "comment-12777136"
        },
        {
            "date": "2009-11-12T22:33:08+0000",
            "content": "I think I move this to 3.1 and then we have enough time to close it or not. ",
            "author": "Uwe Schindler",
            "id": "comment-12777239"
        },
        {
            "date": "2013-07-23T18:44:37+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 ",
            "author": "Steve Rowe",
            "id": "comment-13717006"
        },
        {
            "date": "2014-04-16T12:54:44+0000",
            "content": "Move issue to Lucene 4.9. ",
            "author": "Uwe Schindler",
            "id": "comment-13970859"
        }
    ]
}