{
    "id": "LUCENE-2018",
    "title": "Reconsider boolean max clause exception",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/search"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Now that we have smarter multi-term queries, I think its time to reconsider the boolean max clause setting. It made more sense before, because you could hit it more unaware when the multi-term queries got huge - now its more likely that if it happens its because a user built the boolean themselves. And no duh thousands more boolean clauses means slower perf and more resources needed. We don't throw an exception when you try to use a ton of resources in a thousand other ways.\n\nThe current setting also suffers from the static hell argument - especially when you consider something like Solr's multicore feature - you can have different settings for this in different cores, and the last one is going to win. Its ugly. Yes, that could be addressed better in Solr as well - but I still think it should be less ugly in Lucene as well.\n\nI'd like to consider either doing away with it, or raising it by quite a bit at the least. Or an alternative better solution. Right now, it aint so great.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2009-10-29T18:44:00+0000",
            "content": "I think removing it makes sense? ",
            "author": "Michael McCandless",
            "id": "comment-12771547"
        },
        {
            "date": "2009-10-29T18:48:04+0000",
            "content": "Fuzzy query uses it to limit terms.  Any others? ",
            "author": "Yonik Seeley",
            "id": "comment-12771554"
        },
        {
            "date": "2009-10-29T18:55:32+0000",
            "content": "Ah, right - not the first time I've forgotten Fuzzy didnt get the new rewrite treatment. ",
            "author": "Mark Miller",
            "id": "comment-12771558"
        },
        {
            "date": "2009-12-08T19:00:35+0000",
            "content": "I still think this should be removed - or moved to the MTQ query itself - then a setting on the queryparser could set it, or a user could set it. It shouldn't be a sys property, and I don't necessarily think it should be on by default either. ",
            "author": "Mark Miller",
            "id": "comment-12787658"
        },
        {
            "date": "2009-12-08T19:12:57+0000",
            "content": "I still think this should be removed -\n\n+1 ",
            "author": "Michael McCandless",
            "id": "comment-12787670"
        },
        {
            "date": "2009-12-08T19:16:10+0000",
            "content": "+1.\n\nAnd Fuzzy Query's PQ then would use the MTQ value as max size. ",
            "author": "Uwe Schindler",
            "id": "comment-12787674"
        },
        {
            "date": "2013-07-23T18:44:50+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 ",
            "author": "Steve Rowe",
            "id": "comment-13717071"
        },
        {
            "date": "2014-04-16T12:54:43+0000",
            "content": "Move issue to Lucene 4.9. ",
            "author": "Uwe Schindler",
            "id": "comment-13970855"
        }
    ]
}