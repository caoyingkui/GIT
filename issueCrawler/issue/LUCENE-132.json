{
    "id": "LUCENE-132",
    "title": "Add \"an\" to the English stop words",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "modules/analysis"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "In org.apache.lucene.analysis.StopAnalyzer, the ENGLISH_STOP_WORDS array\ncontains \"a\" but not \"an\".  So searching for \"a fund\" will get the same hits as\n\"fund\", but searching for \"an investment\" will get many more hits than \"investment\".\n\nThis is true in the latest revision of the file, but appears to have always been\nthe case.  I'm amazed nobody's pointed it out before now, our users had only\nbeen testing for a few hours before they complained about it",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2004-05-14T04:46:57+0000",
            "content": "You are right, that's not really consistent.  However, why ar eyou relying on\nthat stop list?  If you want to use English stop words, you should really have\nyour own, more comprehensive list, and set that list.\n\nAdding the 'an' will break backwards compatibility for those who rely on the\nbuilt-in stop word list. ",
            "author": "Otis Gospodnetic",
            "id": "comment-12321356"
        },
        {
            "date": "2004-05-19T01:37:02+0000",
            "content": ">Adding the 'an' will break backwards compatibility for those who rely on the\nbuilt-in stop word list.\n\nIn other words, it's not a bug, it's a feature? \nYou could make the same argument about any bug in any system, \"Oh no, we can't\nfix it, that would annoy anyone who relies on the broken behaviour...\" ",
            "author": "Andrew Stevens",
            "id": "comment-12321357"
        },
        {
            "date": "2004-05-20T22:31:30+0000",
            "content": "I agree that this bug should be fixed, i.e. \"an\" should be added to the \nstopword list and that change should be documented in CHANGES.txt. Anyone \nwho uses Lucene seriously will need to read that file anyway when he updates.  ",
            "author": "Daniel Naber",
            "id": "comment-12321358"
        },
        {
            "date": "2004-05-20T23:40:35+0000",
            "content": "Re-opening... ",
            "author": "Otis Gospodnetic",
            "id": "comment-12321359"
        },
        {
            "date": "2004-05-20T23:40:50+0000",
            "content": "Fixed. ",
            "author": "Otis Gospodnetic",
            "id": "comment-12321360"
        },
        {
            "date": "2004-05-20T23:52:34+0000",
            "content": "This is a can of worms I'm hesitant to open.  If we add \"an\" then we'll be asked\nto add \"its\", and if we add \"its\" we'll be asked to add \"do\", and so on.  This\nstop list was originally generated by looking at the most frequent terms in a\ncollection.  I guess \"an\" was less frequent than \"a\" or any other word in that\ncollection.  There are other, better, ways to define stop lists, but I don't\nthink the Lucene project should be the business of providing high-quality stop\nlists.  The Snowball project is a much better place for that sort of activity.\n\nIf you want a good, big, English stop list, grab:\n\n  http://snowball.tartarus.org/english/stop.txt\n\nI think the best long-term fix for this is to extend the Snowball library in the\nsandbox (http://jakarta.apache.org/lucene/docs/lucene-sandbox/snowball/) so that\nit provides StopFilters for each of the stop lists provided by Snowball.  Once\nwe do this, we can deprecate uses of StopFilter and StopAnalysis that do not\nspecify a custom stop list.  The deprecation documentation can point folks to\nthe Snowball stop filters.  How does that sound?\n\nAny volunteers to implement Snowball-based StopFilters?  I think this could just\nbe a static method, something like:\n  public static StopFilter getStopFilter(String language);\nThe implementation could use ClasssLoader.getResource() to find a stop list file\npackaged in the jar file, then parse the file and construct a StopFilter from\nit.  It should probably also cache these, so that every call doesn't re-parse\nthe file. ",
            "author": "cutting@apache.org",
            "id": "comment-12321361"
        },
        {
            "date": "2004-07-10T04:16:06+0000",
            "content": "\"an\" was added, so I'm not sure why this report is still open. Feel free to \nre-open it again if I overlooked something. \n ",
            "author": "Daniel Naber",
            "id": "comment-12321362"
        }
    ]
}