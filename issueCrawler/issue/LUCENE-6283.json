{
    "id": "LUCENE-6283",
    "title": "More Like This: skip terms, like Fields and lenient defaults",
    "details": {
        "resolution": "Not A Problem",
        "affect_versions": "6.0",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Minor",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "added skip terms: list of terms not to be considered as interesting\n\tadded like on Fields and Terms objects\n\tmade defaults more lenient",
    "attachments": {
        "LUCENE-6283.patch": "https://issues.apache.org/jira/secure/attachment/12700199/LUCENE-6283.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14333361",
            "author": "Robert Muir",
            "date": "2015-02-23T14:43:17+0000",
            "content": "What is the rationale of the defaults changes? To me its not that it makes things more lenient, it is more complicated and has performance and relevance repercussions. \n\nSetting these values to 1 also means we completely remove any 'noise filtering' and rely solely on simple tf-idf ranking.  "
        },
        {
            "id": "comment-14333365",
            "author": "Robert Muir",
            "date": "2015-02-23T14:48:25+0000",
            "content": "I am also curious, what is the difference between skipTerms and MoreLikeThis's setStopWords? It already has a separate stoplist (usually you want something more aggressive here):\n\n\n  /**\n   * Set the set of stopwords.\n   * Any word in this set is considered \"uninteresting\" and ignored.\n   * Even if your Analyzer allows stopwords, you might want to tell the MoreLikeThis code to ignore them, as\n   * for the purposes of document similarity it seems reasonable to assume that \"a stop word is never interesting\".\n   *\n   * @param stopWords set of stopwords, if null it means to allow stop words\n   * @see #getStopWords\n   */\n  public void setStopWords(Set<?> stopWords) {\n\n "
        },
        {
            "id": "comment-14333430",
            "author": "Alex Ksikes",
            "date": "2015-02-23T16:06:58+0000",
            "content": "I'll submit a different patch, but from discussion we could more simply detect on whether a field is a tag field (all tfs are 1) and leave the term freq default as it is. The min_doc_freq is probably too aggressive to remove noisy words and could be set to 2 or 3. As for skip terms, there are not needed if we move the like(Fields) method to the MoreLikeThis.java class. Thanks for the review. "
        },
        {
            "id": "comment-14333439",
            "author": "Robert Muir",
            "date": "2015-02-23T16:13:40+0000",
            "content": "Yeah, +1 to split it up. I like the idea of handling omitTF fields, i think today is unintuitive that MLT does nothing there. "
        }
    ]
}