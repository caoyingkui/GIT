{
    "id": "LUCENE-841",
    "title": "Replace UTF8 characters in stemmer code with integer values.",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "modules/analysis"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "BrazillianStemmer, GermanStemmer, FrenchStemmer and DutchStemmer all contains UTF characters in the java code. All environments does not handle that. It really ought to be integer values instead.\n\nI'll come up with a patch sooner or later.",
    "attachments": {
        "lucene-841.patch": "https://issues.apache.org/jira/secure/attachment/12353916/lucene-841.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2007-03-21T17:45:39+0000",
            "content": "Karl: it would probably be better to use the unicode escape sequences rather then casting raw integer values. ",
            "author": "Hoss Man",
            "id": "comment-12482850"
        },
        {
            "date": "2007-03-21T20:22:41+0000",
            "content": "> All environments does not handle that\n\nWith Eclipse, modifying the text file encoding to utf-8 seems to work fine.\n(Preferences --> General --> Editor). ",
            "author": "Doron Cohen",
            "id": "comment-12482902"
        },
        {
            "date": "2007-03-21T21:15:04+0000",
            "content": "Which environments still don't handle UTF-8? Using anything that escapes the real characters will make the code difficult to read. ",
            "author": "Daniel Naber",
            "id": "comment-12482914"
        },
        {
            "date": "2007-03-21T21:27:47+0000",
            "content": "Escaped unicode, integer value, what not, just not raw UTF8 please.\n\nI for one have problems compiling a mix of code in [my local non UTF8 locale setting I save my own code in] and UTF8. This could of course be fixed locally in my system environemnt, but it would be so much easier to just avoid the raw UTF8 characters.  ",
            "author": "Karl Wettin",
            "id": "comment-12482918"
        },
        {
            "date": "2007-03-21T21:34:05+0000",
            "content": "there are lots of OSes and editors where changing the file encoding is somewhat hard .. particularly if you have reasons why other files need to be in ASCII to deal with other systems.\n\nIt's a trade off, people with UTF-8 capable environments would probably rather see the real character, while people still using ascii would probably rather see \\uXXXX ... i would think the \\xXXXX approach is the most universally functional, since anyone can lookup a character from it's character code, but people looking at funky control characters can't always tell what character code it is.\n\n(I wonder if there is an fast/easy way to get a char from a Unicode Character name?) ",
            "author": "Hoss Man",
            "id": "comment-12482923"
        },
        {
            "date": "2007-03-22T01:15:14+0000",
            "content": "Patch which replaces all non-ASCII characters in the 4 mentioned stemmer files with their \\uxxxx equivalents.\n\nFor anyone else who ever needs to do this, it's a 10-second job in the free Windows editor BabelPad (http://www.babelstone.co.uk/Software/BabelPad.html) ",
            "author": "Paul Cowan",
            "id": "comment-12482977"
        },
        {
            "date": "2007-03-22T10:09:45+0000",
            "content": "Thanks Paul!\n\nI'll update it the patch to contain the old UTF8 as comments behind all escaped values to make as many as possible happy.\n\n      if ((value.charAt(j) == '\\u00F3' /'\u00f3'/) || ",
            "author": "Karl Wettin",
            "id": "comment-12483086"
        },
        {
            "date": "2007-03-22T19:06:58+0000",
            "content": "Karl: better still would be static constants using the unicode character name...\n\n  public static char LATIN_SMALL_LETTER_O_WITH_ACUTE = '\\u00F3';\n  ...\n        if ((value.charAt(j) == LATIN_SMALL_LETTER_O_WITH_ACUTE) || ...\n ",
            "author": "Hoss Man",
            "id": "comment-12483272"
        },
        {
            "date": "2007-03-22T19:38:02+0000",
            "content": "> For anyone else who ever needs to do this, it's a 10-second job in the free Windows editor BabelPad\n\nJava's native2ascii tool is intended for this:\n\nhttp://java.sun.com/j2se/1.5.0/docs/tooldocs/solaris/native2ascii.html\n\nAlso note that there's an Ant task for this:\n\nhttp://ant.apache.org/manual/OptionalTasks/native2ascii.html ",
            "author": "Doug Cutting",
            "id": "comment-12483288"
        },
        {
            "date": "2007-07-24T07:04:20+0000",
            "content": "I just hit this again while compiling.\n\nIs there one of the strategies in the comments that you prefere I use in the patch? ",
            "author": "Karl Wettin",
            "id": "comment-12514883"
        }
    ]
}