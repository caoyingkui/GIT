{
    "id": "LUCENE-1065",
    "title": "Session Time Out For UNLOGGED IN USER During Search -pls help!",
    "details": {
        "labels": "",
        "priority": "Critical",
        "components": [
            "core/query/scoring",
            "core/queryparser",
            "core/search",
            "general/build",
            "general/javadocs",
            "(1)",
            "modules/analysis"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "2.1",
        "resolution": "Invalid",
        "status": "Resolved"
    },
    "description": "Hi,\nThe problem lies in searchresultscontroller.java/searchcontroller.java file under search/web/handler of an application that supports educational note sharing.\nThe problem is that - \nWhen I search with query strings in different fields(as you will find in the above mentioned java files)..the keywords in resourcedto and get some files as search results.\nThen I click on one of the file from within the search result and visit the file.\nHere if I m logged in as an user, and the session time out is set to 1 minute in the web.xml file of the web folder not the admin folder then when I hit the BACK TO SEARCH button it easily goes back to the previous search result page along with the queries string that I had input previously.\nThe problem is that when I m NOT LOGGED in as an user, and I've performed a search with queries and other dropdowns in the search panel, I get the search result page, I visit the file by clicking on one of them but when I hit the BACK TO SEARCH button I don't see the previous search result page from where I had navigated to view the file.\nPlease suggest on what changes shall I make in the code so that even if I m not logged in as an user, I get back to the search result page on hitting the BACK TO SEARCH button from the file view page.\nI m herein pasting the code of the searchresultscontroller.java file, but please feel free to ask for anyother related file whose code you might want to see.\nYou're sure to find all the required files in the search.zip folder attached herein.Letme know if you need anyother files to resolve this issue asap.\nIn order to download the entire web folder which has all the related files - pls download it from this url -http://files-upload.com/files/630754/beta-gg-web.zip\nSEARCHRESULTSCONTROLLER.JAVA FILE CONTENT-\npackage com.mgh.sps.search.web.handler;\nimport java.util.Map;\nimport java.util.regex.Pattern;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport org.apache.log4j.Logger;\nimport org.springframework.validation.BindException;\nimport org.springframework.validation.Errors;\nimport org.springframework.web.servlet.ModelAndView;\nimport org.springframework.web.servlet.mvc.SimpleFormController;\nimport com.mgh.sps.search.business.facade.Search;\nimport com.mgh.sps.common.dto.ResourceDTO;\nimport com.mgh.sps.common.util.SessionAttributeKey;\nimport com.mgh.sps.common.util.SessionManager;\nimport com.mgh.sps.fileusage.web.constants.FileUsageWebConstants;\npublic class SearchResultsController extends SimpleFormController {\n/**\n\n\tSearchResults Controller\n\t@author Muralikrishna.s\n\t@Codedondate DD-MM-YY=26-07-07\n\t@Usecase/s associated =UC504\n*/\nprivate static final Logger logger = Logger\n.getLogger(SearchResultsController.class.getName());\nprivate final static String REG_EXP = \"^[A-Za-z0-9]*$\";\nprivate final static Pattern EMAIL_PATTERN_REG = Pattern.compile(REG_EXP);\n/**\n\tSpring framework method used to hold reference data\n\t\n\t@param request\n\tHttpServletRequest\n\t@param command\n\tObject\n\t@param arg2\n\tErrors\n\t@return Map\n\t@throws Exception\n*/\n@Override\nprotected Map referenceData(HttpServletRequest request, Object command,\nErrors errors) throws Exception {\nlogger.debug(\"SearchResultsController.referenceData() method entered:\"\n+ request + \",\" + command + \",\" + errors);\nSessionManager.setSessionAttribute(SessionAttributeKey.tabIndex,\nFileUsageWebConstants.TAB_SEARCH, request);\nSearch search = (Search) super.getWebApplicationContext().getBean(\n\"searchfacade\");\nResourceDTO resourceDto = (ResourceDTO) command;\nString[] allValues = new String[7];\nif (null != (String[]) SessionManager.getSessionAttribute(\nSessionAttributeKey.allValues, request)) {\nallValues = (String[]) SessionManager.getSessionAttribute(\nSessionAttributeKey.allValues, request);\nresourceDto.setKeywords(allValues[0]);\nresourceDto.setCountry(allValues[1]);\nresourceDto.setUniversityName(allValues[2]);\nresourceDto.setSubjectArea(allValues[3]);\nresourceDto.setQualification(allValues[4]);\nresourceDto.setYearLevel(allValues[5]);\nresourceDto.setSpecificType(allValues[6]);\n}\nlogger.debug(\"%%%%%%%%%%%%%%%%%qualification%%%%%%%%%%%%%%%\"\n+ resourceDto.getQualification());\nString flag = (String) request.getParameter(\"id\");\nresourceDto.setFlag;\nlogger.debug(\"SearchResultsController.referenceData() method exited:\");\nreturn search.retrieveReferenceData(resourceDto);\n}\n/**\n\tSpring framework method used to hold OnSubmit\n\t\n\t@param request\n\tHttpServletRequest\n\t@param response\n\tHttpServletResponse\n\t@param command\n\tObject\n\t@param arg3\n\tBindException\n\t@return ModelAndView\n\t@throws Exception\n*/\n@Override\nprotected ModelAndView onSubmit(HttpServletRequest request,\nHttpServletResponse response, Object command, BindException errors)\nthrows Exception {\nSessionManager.cleanup(request);\nlogger.debug(\"SearchResultsController.onSubmit() method entered:\"\n+ request + \",\" + command + \",\" + response + \",\" + errors);\nSearch search = (Search) super.getWebApplicationContext().getBean(\n\"searchfacade\");\nMap dynamic = (Map) getServletContext().getAttribute(\"config\");\nResourceDTO resourceDto = (ResourceDTO) command;\nSessionManager.removeSessionAttribute(SessionAttributeKey.allValues,\nrequest);\n//changed by sreelatha on sep21\n//resourceDto.setKeywords(request.getParameter(\"keywords\"));\n//String key = request.getParameter(\"keywords\");\n//logger.debug(\"&&&&&&&&&&&&& key &&&&&&&&&&&&\" + key);\nString keywords = (request.getParameter(\"keywords\"));\nif(null!=keywords) {\nkeywords = keywords.trim();\n}\nresourceDto.setKeywords(keywords);\n// changes end\nresourceDto.setUniversityName(request.getParameter(\"universityName\"));\nresourceDto.setSubjectArea(request.getParameter(\"subjectArea\"));\nresourceDto.setCountry(request.getParameter(\"country\"));\nresourceDto.setQualification(request.getParameter(\"qualification\"));\nresourceDto.setYearLevel(request.getParameter(\"yearLevel\"));\nresourceDto.setSpecificType(request.getParameter(\"specificType\"));\nString[] allValues = new String[7];\n//changed by sreelatha on sep21\n//allValues[0] = request.getParameter(\"keywords\");\nallValues[0] = resourceDto.getKeywords();\n//changes end\nallValues[1] = request.getParameter(\"country\");\nallValues[2] = request.getParameter(\"universityName\");\nallValues[3] = request.getParameter(\"subjectArea\");\nallValues[4] = request.getParameter(\"qualification\");\nallValues[5] = request.getParameter(\"yearLevel\");\nallValues[6] = request.getParameter(\"specificType\");\nSessionManager.setSessionAttribute(SessionAttributeKey.allValues,\nallValues, request);\nif(null!=keywords) {\nkeywords = keywords.trim();\nString words=\"\";\nfor(int i=0;i<keywords.length();i++) { \nString key=String.valueOf(keywords.charAt);\nif(key.contains(\"*\")) {\nkey = key.replace(\"*\",\" \");\n} else if(key.contains(\"?\")) {\nkey = key.replace(\"?\",\" \");\n} else if(key.contains(\"[\")) {\nkey = key.replace(\"[\",\" \");\n} else if(key.contains(\"{\")) {\nkey = key.replace(\"{\",\" \");\n} else if(key.contains(\"(\")) {\nkey = key.replace(\"(\",\" \");\n} else if(key.contains(\")\")) {\nkey = key.replace(\")\",\" \");\n} else if(key.contains(\"+\")) {\nkey = key.replace(\"+\",\" \");\n} else if(key.contains(\"\n\")) {\nkey = key.replace(\"\n\",\" \");\n} else if(key.contains(\" \")) {\nkey = key.replace(\" \",\" \");\n} else if(key.contains(\"_\")) {\nkey = key.replace(\"\",\"\");\n} else if(!EMAIL_PATTERN_REG.matcher(key).matches()) {\nkey = key.replaceAll(key,\" \");\n} \nwords = words + key;\n}\nkeywords = words;\nresourceDto.setKeywords(keywords);\n}\nSessionManager.setSessionAttribute(SessionAttributeKey.test, search.setInputValues(resourceDto, dynamic), request);\nString name = (String) SessionManager.getSessionAttribute(SessionAttributeKey.tempName, request);\nString flag1 = request.getParameter(\"id\");\nString status=\"\";\nif (flag1 !=null && flag1.equals(\"loggedInUser\"))\n{ \nif(name==null)\n{\nreturn new ModelAndView();\n}\n}\nif (flag1 !=null && flag1.equals(\"loggedInUser\"))\n{\nstatus = \"redirect:SearchResults.htm?id=loggedInUser\";\n}else if(flag1 !=null && flag1.equals(\"nonLoggedInUser\"))\n{\nstatus = \"redirect:SearchResultsnlu.htm?id=nonLoggedInUser\"; \n}\n//}\nsuper.setSuccessView(status);\nModelAndView mav = new ModelAndView(super.getSuccessView());\nlogger.debug(\"SearchResultsController.onSubmit() method exited:\");\nreturn mav;\n}\n}",
    "attachments": {
        "search.zip": "https://issues.apache.org/jira/secure/attachment/12370153/search.zip",
        "search_final.jsp": "https://issues.apache.org/jira/secure/attachment/12370155/search_final.jsp",
        "register2.jsp": "https://issues.apache.org/jira/secure/attachment/12370156/register2.jsp",
        "search_result.jsp": "https://issues.apache.org/jira/secure/attachment/12370154/search_result.jsp"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2007-11-25T14:17:16+0000",
            "content": "This is not a bug in Lucene.  It is a bug in your code.  If you would like help with your application, try asking on the java-user@lucene.apache.org mailing list.  JIRA is reserved for issues in Lucene itself, not in applications using Lucene. ",
            "author": "Grant Ingersoll",
            "id": "comment-12545267"
        }
    ]
}