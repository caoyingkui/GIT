{
    "id": "LUCENE-7379",
    "title": "Search word request on Chinese is not working properly",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "5.0",
        "components": [
            "core/queryparser"
        ],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Open",
        "type": "Bug"
    },
    "description": "Originally we used Lucene 2.3 in the project for years.\nSome time ago we made an update to the 5.0.0 version of Lucene.\nAfter that Chinese analyzing stopped working normally (I did not test it on Japanese or Korean)\n\nWe have the following code to process the search request:\n\n1. analyzer = new ClassicAnalyzer();\n2. logger.Write2Log(queryString);\n3. QueryParser qp = new QueryParser(fieldName, analyzer);\n4. Query query = qp.parse(queryString);\n5. logger.Write2Log(query.toString(fieldName));\n6. int hits = searcher.search(query, 1).totalHits;\n\nAnalyzer on line 1 could be changed by config.\nLine 2 is printing what we put to the Lucene.\nLine 5 is printing how the query modified in Lucene\n\nNormally we are using the string \u6253\u4e0d\u5f00~0.7 for 70% or more accuracy and  \u6253\u4e0d\u5f00 to find exact this word.\n~0.7 functionality was marked as deprecated since 4.0 version, however it is still worked on English at least.\n\nWhat was before (on Lucene 2.3):\nLine 2: \u6253\u4e0d\u5f00~0.7 \nLine 5: \u6253\u4e0d\u5f00~0.7\nIf we provide the correct string for analysis, line 6 returns correct result\n\nThe same for case of \u6253\u4e0d\u5f00 without accuracy (without ~0.7)\n\nWhat is now (on Lucene 5.0):\nLine 2: \u6253\u4e0d\u5f00~0.7 \nLine 5: \u6253\u4e0d\u5f00~0\nAs I understood it is modifying of deprecated parameter to newly supported one with a little different meaning (at least it is working like I said on English).\nThe string for analysis contains the \u6253\u4e0d\u5f00, however line 6 shows nothing is found.\n\nLine 2: \u6253\u4e0d\u5f00 \nLine 5: \u6253 \u4e0d \u5f00\nLucene added spaces, which are interpreted as OR operator. As result Line 6 returns that keyword found even if it is only one \u4e0d symbol in the string for analysis.\n\nThe same scenario was tested on the CJKAnalyzer, ClassicAnalyzer  and SmartChineseAnalyzer. Results are the same: neither one of them has the same functionality as analyzer on Lucene 2.3\n\nIs it known problem in the product? Could you please explain or provide any docs about how the search should work for Chinese in mentioned cases.\nThanks",
    "attachments": {},
    "issue_links": {},
    "comments": []
}