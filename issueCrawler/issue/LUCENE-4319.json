{
    "id": "LUCENE-4319",
    "title": "Rethink Fields.size() returning -1",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/index"
        ],
        "type": "Task",
        "fix_versions": [],
        "affect_versions": "4.0-BETA",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Fields.size() is allowed to return -1, if size of iterator is unknown. But for all codecs, we know this size and also Fields implements Iterable (see also discussion on LUCENE-4315).\n\nWe should think about enfocing it to be defined.\n\nSome things to do:\n\n\tMaybe automatically make Fields.size() base class iterate, if not reimplemented (risky!).\n\tMultiFields.size() must implement it",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2012-08-21T15:01:53+0000",
            "content": "I guess my concern here is vectors, someone could have one that cannot implement this efficiently.\n\nBut this could be no problem for such a vector impl:\n\n\tlots of vector access (at least in our codebase) goes to a specific field.\n\tmaybe they have optimized bulk copy for merging, so they dont need to know this up front for that either.\n\n\n\nStill nothing like this exists, and it seems like usually you would write the size for convenience anyway... ",
            "author": "Robert Muir",
            "id": "comment-13438781"
        },
        {
            "date": "2012-08-21T18:04:37+0000",
            "content": "+1 to require Fields.size() is always implemented. ",
            "author": "Michael McCandless",
            "id": "comment-13438917"
        }
    ]
}