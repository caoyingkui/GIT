{
    "id": "LUCENE-4001",
    "title": "Grouping module shouldn't depend on queries module",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Task",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Spin off from LUCENE-3997. Basically move FunctionValues and ValueSource to core.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2012-04-19T15:35:41+0000",
            "content": "It turns out that three files need to be moved:\n\nsvn mv lucene/queries/src/java/org/apache/lucene/queries/function/FunctionValues.java lucene/core/src/java/org/apache/lucene/search/\nsvn mv lucene/queries/src/java/org/apache/lucene/queries/function/ValueSource.java lucene/core/src/java/org/apache/lucene/search/\nsvn mv lucene/queries/src/java/org/apache/lucene/queries/function/ValueSourceScorer.java lucene/core/src/java/org/apache/lucene/search/\n\n ",
            "author": "Martijn van Groningen",
            "id": "comment-13257547"
        },
        {
            "date": "2012-04-20T00:38:38+0000",
            "content": "I have real reservations about doing this.  In LUCENE-3997 I explained that I feel we should only move classes into core if they are part of core APIs / concepts.  I don't think FunctionValues and ValueSource are in that boat.  To me they seem tightly bound to FunctionQuery and the implementations in the queries module.  Yes the grouping module uses them, but that doesn't immediately make them core.  I also feel that in 99% of cases, people who want to group by function will be using the impls in the queries module, so why remove the dependency? ",
            "author": "Chris Male",
            "id": "comment-13257945"
        },
        {
            "date": "2012-04-21T09:27:12+0000",
            "content": "In think that there are other features that might want to use functions. Faceting by function or joining by function seem like things that could be added in the future. Question is does this make functions a core concept? After some thinking it seems to me that functions are not a core concept. \n\nWhat I think is a core concept is the abstraction of a where a values comes from (output of a function, int from FC or double from doc values). Perhaps this concept should be in core. The grouping module can use this concept instead of the function concept. This way the grouping module doesn't need to depend on the queries module. MutableValue is already in core, which is good. I think for this to happen we need to change FunctionValues.ValueFiller into MutableValueSource that has the following method:\n\npublic interface MutableValueSource {\n\n   public MutableValue getValue(int doc, MutableValue reuse){\n      ...\n   }\n\n}\n\n\nThis also looks similar to how we use FieldCache or DocValues.Source. ",
            "author": "Martijn van Groningen",
            "id": "comment-13258817"
        }
    ]
}