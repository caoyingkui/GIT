{
    "id": "SOLR-7493",
    "title": "Requests aren't distributed evenly if the collection isn't present locally",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.2.1",
            "5.3",
            "6.0"
        ],
        "affect_versions": "5.0",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "I had a SolrCloud cluster where every node is behind a simple round-robin load balancer.\nThis cluster had two collections (A, B), and the slices of each were partitioned such that one collection (A) used two thirds of the nodes, and the other collection (B) used the remaining third of the nodes.\n\nI observed that every request for collection B that the load balancer sent to a node with (only) slices for collection A got proxied to one specific node hosting a slice for collection B. This node started running pretty hot, for obvious reasons.\n\nThis meant that one specific node was handling the fan-out for slightly more than two-thirds of the requests against collection B.",
    "attachments": {
        "SOLR-7493.patch": "https://issues.apache.org/jira/secure/attachment/12729524/SOLR-7493.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-04-30T16:38:22+0000",
            "author": "Jeff Wartes",
            "content": "It looks like this happens because SolrDispatchFilter's getRemoteCoreURL eventually takes the first viable entry from a HashMap.values list of cores. \n\nHashMap.values ordering is always the same, if you load the HashMap with the same data in the same order. So if the list from ZK is presented in the same order on every node, every node will use the same ordering on every request.\n\nThere might be a better solution, but this patch would randomize that ordering per-request. \nMy environment is a bit messed up at the moment, so I haven't done much more than verify this compiles. ",
            "id": "comment-14521785"
        },
        {
            "date": "2015-05-01T12:21:10+0000",
            "author": "Mark Miller",
            "content": "+1, thanks Jeff! ",
            "id": "comment-14523132"
        },
        {
            "date": "2015-06-06T19:59:34+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "\n\tUses a random seeded with tests.seed of System.currentTimeMillis for shuffling\n\tAdded a simple test which creates creates 3 jettys, 2 collections A, B such that A has replicas on node1, node2 and collection B has replica on node3. The test fires 10 search requests to node3 intended for collection A and asserts that all requests do not go to the same replica of collection A.\n\n ",
            "id": "comment-14575909"
        },
        {
            "date": "2015-06-06T20:03:33+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1683946 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1683946 ]\n\nSOLR-7493: Requests aren't distributed evenly if the collection isn't present locally ",
            "id": "comment-14575913"
        },
        {
            "date": "2015-06-06T20:11:22+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1683948 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1683948 ]\n\nSOLR-7493: Initialize random correctly ",
            "id": "comment-14575917"
        },
        {
            "date": "2015-06-06T20:17:42+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1683950 from shalin@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1683950 ]\n\nSOLR-7493: Requests aren't distributed evenly if the collection isn't present locally. Merges r1683946 and r1683948 from trunk. ",
            "id": "comment-14575919"
        },
        {
            "date": "2015-06-06T20:18:09+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Thanks Jeff! ",
            "id": "comment-14575921"
        },
        {
            "date": "2015-06-08T19:43:01+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Reopening to backport to 5.2.1 ",
            "id": "comment-14577714"
        },
        {
            "date": "2015-06-10T13:49:07+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1684674 from shalin@apache.org in branch 'dev/branches/lucene_solr_5_2'\n[ https://svn.apache.org/r1684674 ]\n\nSOLR-7493: Requests aren't distributed evenly if the collection isn't present locally. Merging r1683950 from branch_5x ",
            "id": "comment-14580536"
        },
        {
            "date": "2015-06-10T14:02:06+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1684675 from shalin@apache.org in branch 'dev/branches/lucene_solr_5_2'\n[ https://svn.apache.org/r1684675 ]\n\nSOLR-7493: Fix compile issue after backport ",
            "id": "comment-14580551"
        }
    ]
}