{
    "id": "LUCENE-5191",
    "title": "SimpleHTMLEncoder in Highlighter module breaks Unicode outside BMP",
    "details": {
        "components": [
            "modules/highlighter"
        ],
        "fix_versions": [
            "4.5",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "The highlighter provides a function to escape HTML, which does to much. To create valid HTML only \", <, >, & must be escaped, everything else can kept unescaped. The escaper unfortunately does also additionally escape everything > 127, which is unneeded if your web site has the correct encoding. It also produces huge amounts of HTML entities if used with eastern languages.\n\nThis would not be a bugf if the escaping would be correct, but it isn't, it escapes like that:\n\nresult.append(\"\\&#\").append((int)ch).append(\";\");\n\nSo it escapes not (as HTML needs) the unicode codepoint, instead it escapes the UTF-16 char, which is incorrect, e.g. for our all-time favourite Deseret:\n\nU+10400 (deseret capital letter long i) would be escaped as &#55297;&#56320; and not as &#66560;.\n\nSo we should remove the stupid encoding of chars > 127 which is simply useless \n\n\nSee also: https://github.com/elasticsearch/elasticsearch/issues/3587",
    "attachments": {
        "LUCENE-5191.patch": "https://issues.apache.org/jira/secure/attachment/12600497/LUCENE-5191.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-08-28T23:09:28+0000",
            "content": "Simple patch. ",
            "author": "Uwe Schindler",
            "id": "comment-13752999"
        },
        {
            "date": "2013-08-28T23:10:14+0000",
            "content": "A different fix would be to iterate on codepoints instead of characters. That would fix the botch with high and low surrogates. ",
            "author": "Walter Underwood",
            "id": "comment-13753002"
        },
        {
            "date": "2013-08-28T23:15:51+0000",
            "content": "Hi Walter,\n\nI agree this could be used to fix, but its not useful here! There is no need to escape codepoints > 127. It just produces huge junks of escapes for all eastern languages! Escaping chars > 127 was done in the 1990s when web pages were not able to use other charsets than ISO-8859-1 or US-ASCII (and HTTP version 0.9 was not binary safe). ",
            "author": "Uwe Schindler",
            "id": "comment-13753009"
        },
        {
            "date": "2013-08-29T09:26:41+0000",
            "content": "We have a variant of this code, recently added by Robert Muir into PostingsHighlighter's DefaultPassageFormatter.\n\nThis escapes a little bit more chars, with a reference to OWASP: https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet#RULE_.231_-_HTML_Escape_Before_Inserting_Untrusted_Data_into_HTML_Element_Content and https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet#RULE_.232_-_Attribute_Escape_Before_Inserting_Untrusted_Data_into_HTML_Common_Attributes\n\nThe code used here escapes any charis >127 and <255 according to the second rule, which is not needed here, because the escaped data is not included into HTML attributes which may be \"unquoted\". So for this only the first rule applies, in which it is enough to escape the 4 well-known escapes and also the forward slash + single quote ('). The latter two ones do not need to be escaped if used in text, but for safety we could include them.\n\nIn any case I would like to unify the different approaches of HTML escaping. As we are not working in unquoted attributes (we just encode floating HTML text), I would use Robert's code without the extra numeric escapes.\n\nThe official HTML4 spec (I used HTML4, the passage is the same for other HTML, see http://www.w3.org/TR/REC-html40/charset.html#h-5.3.2): \n\n\nFour character entity references deserve special mention since they are frequently used to escape special characters:\n\n\"<\" represents the < sign.\n\">\" represents the > sign.\n\"&\" represents the & sign.\n\"\" represents the \" mark.\nAuthors wishing to put the \"<\" character in text should use \"<\" (ASCII decimal 60) to avoid possible confusion with the beginning of a tag (start tag open delimiter). Similarly, authors should use \">\" (ASCII decimal 62) in text instead of \">\" to avoid problems with older user agents that incorrectly perceive this as the end of a tag (tag close delimiter) when it appears in quoted attribute values.\n\nAuthors should use \"&\" (ASCII decimal 38) instead of \"&\" to avoid confusion with the beginning of a character reference (entity reference open delimiter). Authors should also use \"&\" in attribute values since character references are allowed within CDATA attribute values.\n\nSome authors use the character entity reference \"\"\" to encode instances of the double quote mark (\") since that character may be used to delimit attribute values.\n\nAny comments? ",
            "author": "Uwe Schindler",
            "id": "comment-13753455"
        },
        {
            "date": "2013-08-29T15:24:08+0000",
            "content": "\nAs we are not working in unquoted attributes\n\nYou cannot make this determination. If you want to copy this method and put a less secure version in SimpleHTMLEncoder, thats cool with me.\n\nBut don't make PostingsHighlighter less secure: -1 to that. ",
            "author": "Robert Muir",
            "id": "comment-13753720"
        },
        {
            "date": "2013-08-29T16:13:44+0000",
            "content": "I did not want to modify yours although I disagree.\n\nI will commit the current patch and remove the useless extra encoding. ",
            "author": "Uwe Schindler",
            "id": "comment-13753774"
        },
        {
            "date": "2013-08-29T21:55:00+0000",
            "content": "Attached is a new patch also escaping the single ' and the forwards slash (although the latter is not really required, but I did this to make Robert happy). I refuse to encode the Latin1 chars.\n\nI will commit this in a minute. ",
            "author": "Uwe Schindler",
            "id": "comment-13754103"
        },
        {
            "date": "2013-08-29T22:01:48+0000",
            "content": "Commit 1518839 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1518839 ]\n\nLUCENE-5191: Fix Unicode corrumption in HTML escaping of Standard Highlighter and Fast Vector Highlighter. ",
            "author": "ASF subversion and git services",
            "id": "comment-13754110"
        },
        {
            "date": "2013-08-29T22:03:31+0000",
            "content": "Commit 1518840 from Uwe Schindler in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1518840 ]\n\nMerged revision(s) 1518839 from lucene/dev/trunk:\nLUCENE-5191: Fix Unicode corrumption in HTML escaping of Standard Highlighter and Fast Vector Highlighter. ",
            "author": "ASF subversion and git services",
            "id": "comment-13754112"
        },
        {
            "date": "2013-10-05T10:19:04+0000",
            "content": "4.5 release -> bulk close ",
            "author": "Adrien Grand",
            "id": "comment-13787071"
        }
    ]
}