{
    "id": "LUCENE-6492",
    "title": "New SpatialStrategy abstraction that doesn't require Spatial4j",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [
            "modules/spatial"
        ],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Open",
        "type": "Improvement"
    },
    "description": "This issue is about coming up with a new (or updated) SpatialStrategy abstraction.  The primary goal is to remove a dependency on Spatial4j.  Some SpatialStrategies will not use/require the abstractions in Spatial4j.  Strategies that support more complex/interesting cases may require Spatial4j still.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14552280",
            "author": "David Smiley",
            "date": "2015-05-20T13:02:30+0000",
            "content": "For common cases this is aimed at. I think we should assume you're indexing point data, and as-such the \"predicate\" (e.g. intersects, within, etc.) is irrelevant.\n\nThere's basically three methods to concern ourselves with.\n\nFor indexing:\n\npublic abstract Field[] createIndexableFields(Shape shape);\n\n\n\nSince we can only index a point in the simple case, this parameters simply becomes float x, float y.\n\nFor search:\n\npublic abstract Query makeQuery(SpatialArgs args);\n\n\n\nSpatialArgs is basically a wrapper around both a shape and predicate.  The shape could be a rectangle, or point-radius circle, or in more advanced cases something like a polygon.  We could overload makeQuery to at a minimum take the rectangle and circle case.    The rectangle would simply be the 4 edges, and the circle would be an x,y point and a distance radius.  I consider polygons to be an advanced case because so few spatial use-cases require it.\n\nFor distance sort/boost:\n\npublic abstract ValueSource makeDistanceValueSource(Point queryPoint, double multiplier);\n\n\n\nqueryPoint could simply become float x, float y.\n\nThoughts? "
        }
    ]
}