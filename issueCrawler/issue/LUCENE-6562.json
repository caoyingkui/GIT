{
    "id": "LUCENE-6562",
    "title": "GeoPointInBBoxQuery should compute ranges once, not per-segment",
    "details": {
        "resolution": "Won't Fix",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "6.0"
        ],
        "priority": "Major",
        "status": "Resolved",
        "type": "Improvement"
    },
    "description": "We tried to do this in the original issue, using the same shard attributes that FuzzyQuery did, but it's not quite working...",
    "attachments": {
        "LUCENE-6562.patch": "https://issues.apache.org/jira/secure/attachment/12739311/LUCENE-6562.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14583947",
            "author": "Michael McCandless",
            "date": "2015-06-12T19:37:25+0000",
            "content": "Here's a [failing] test case ... need to mull how best to fix it. "
        },
        {
            "id": "comment-14584220",
            "author": "Michael McCandless",
            "date": "2015-06-12T22:54:25+0000",
            "content": "Here's one possible approach ... I save/share the single copy of the ranges via the rewrite method.  It's a little hokey and I had to change MTQCSW to pull the terms enum from the rewrite method but it seems to work.  I'm very open to other ideas ...\n\nAlso, I changed GeoPointTermsEnum from LinkedList to ArrayList, and fixed it to not remove the ranges as it goes  "
        },
        {
            "id": "comment-14606237",
            "author": "Michael McCandless",
            "date": "2015-06-29T19:41:14+0000",
            "content": "Uwe Schindler I think you suggested (in person, over beers!) that there there a cleaner way to do this?  I forgot what you said, maybe too many beers.\n\nIn this patch I made a custom rewrite method for these geo queries, which holds onto the ranges and shares across segments ...\n\nThe ranges can become huge when the bbox is accidentally adversarial, so it'd be best to not regenerate per segment.\n\nI think we may want to set a limit on the queries too, much like how regexp queries limit the max determined states by default. "
        },
        {
            "id": "comment-14606254",
            "author": "Uwe Schindler",
            "date": "2015-06-29T19:45:11+0000",
            "content": "Let me look into it tomorrow  "
        },
        {
            "id": "comment-14606423",
            "author": "Uwe Schindler",
            "date": "2015-06-29T21:19:29+0000",
            "content": "sorry wrong issue  I will still look into this tomorrow, just edited wrong issue. "
        },
        {
            "id": "comment-14609169",
            "author": "Nicholas Knize",
            "date": "2015-06-30T22:13:18+0000",
            "content": "Let me know what you think about my initial fix for this in LUCENE-6547 "
        },
        {
            "id": "comment-14610280",
            "author": "Michael McCandless",
            "date": "2015-07-01T13:59:18+0000",
            "content": "Net/net I think we shouldn't pursue this optimization now: it's going to get too hairy.  And there may be larger changes to how the GeoPoint queries work that make this opto unnecessary ... "
        },
        {
            "id": "comment-14613674",
            "author": "Uwe Schindler",
            "date": "2015-07-04T10:34:12+0000",
            "content": "Sorry for taking so long, I will look into this hopefully not too late. I have this issue on my watch list. First I have to understand what Mike wants to do here, so I can use a custom rewriteMethod (per query instance) that does the rewrite. With Adriens recent changes to RewriteMethod we can make the RewriteMethod use any class (does not need to be a query) where it adds terms to, so you can first collect all terms, store them somehow and return them on every segment.\n\nUwe "
        },
        {
            "id": "comment-14613680",
            "author": "Michael McCandless",
            "date": "2015-07-04T10:41:11+0000",
            "content": "Thanks Uwe Schindler, I did create a custom rewrite method in this patch, and had to change MTQCSW to ask the rewrite method for the terms enum.  But this felt quite invasive ... "
        },
        {
            "id": "comment-14613681",
            "author": "Michael McCandless",
            "date": "2015-07-04T10:42:03+0000",
            "content": "Also, another problem with the patch is the big list of terms is still held even after query is done executing ... we need to add a test case catching this, and somehow fix it. "
        },
        {
            "id": "comment-14713360",
            "author": "Shalin Shekhar Mangar",
            "date": "2015-08-26T13:13:16+0000",
            "content": "Bulk move to 5.4 after 5.3 release. "
        },
        {
            "id": "comment-15158685",
            "author": "Michael McCandless",
            "date": "2016-02-23T10:34:41+0000",
            "content": "Nicholas Knize can we resolve this as won't fix?  I.e. LUCENE-6930 makes the term enumeration much more efficient so that redoing it per-segment is OK? "
        },
        {
            "id": "comment-15169227",
            "author": "Nicholas Knize",
            "date": "2016-02-26T15:56:48+0000",
            "content": "Obsolete per LUCENE-6930 "
        }
    ]
}