{
    "id": "SOLR-6806",
    "title": "Reduce the size of the main Solr binary download",
    "details": {
        "components": [
            "Build"
        ],
        "type": "Task",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.0",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "There has been a lot of recent discussion about how large the Solr download is, and how to reduce its size.  The last release (4.10.2) weighs in at 143MB for the tar and 149MB for the zip.\n\nMost users do not need the full download.  They may never need contrib features, or they may only need one or two, with DIH being the most likely choice.  They could likely get by with a download that's less than 40 MB.\n\nOur primary competition has a 29MB zip download for the release that's current right now, and not too long ago, that was about 20MB.  I didn't look very deep, but any additional features that might be available for download were not immediately apparent on their website.  I'm sure they exist, but I would guess that most users never need those features, so most users never even see them.\n\nSolr, by contrast, has everything included ... a \"kitchen sink\" approach. Once you get past the long download time and fire up the example, you're presented with configs that include features you're likely to never use.\n\nAlthough this offers maximum flexibility, I think it also serves to cause confusion in a new user.\n\nA much better option would be to create a core download that includes only a minimum set of features, probably just the war, the example servlet container, and an example config that only uses the functionality present in the war.  We can create additional downloads that offer additional functionality and configs ... DIH would be a very small addon that would likely be downloaded frequently.\n\nSOLR-5103 describes a plugin infrastructure which would make it very easy to offer a small core download and then let the user download additional functionality using scripts or the UI.",
    "attachments": {
        "solr-zip-extract-graph.png": "https://issues.apache.org/jira/secure/attachment/12825877/solr-zip-extract-graph.png",
        "solr-zip-docs-extracted.png": "https://issues.apache.org/jira/secure/attachment/12825878/solr-zip-docs-extracted.png"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2014-11-29T16:22:53+0000",
            "author": "Shawn Heisey",
            "content": "A fix for this issue would probably increase the size of the binary artifacts that a release manager must upload, which is contrary to LUCENE-5589 goals ... but hopefully it would not increase it by very much. ",
            "id": "comment-14228819"
        },
        {
            "date": "2014-11-29T16:26:14+0000",
            "author": "Shawn Heisey",
            "content": "One thing we could do for immediate relief is to only include the war in the dist directory, not the webapps directory.  The bin/solr script that was recently added could copy the war from the dist directory to the webapps directory, if it's not already present.  That would reduce the download by almost 30MB. ",
            "id": "comment-14228824"
        },
        {
            "date": "2014-11-29T17:06:28+0000",
            "author": "Yonik Seeley",
            "content": "One thing we could do for immediate relief is to only include the war in the dist directory, not the webapps directory.\n\nSeems like it should be vice-versa given that a war is no longer distributed? ",
            "id": "comment-14228847"
        },
        {
            "date": "2014-11-29T19:02:10+0000",
            "author": "Ramkumar Aiyengar",
            "content": "Seems like it should be vice-versa given that a war is no longer distributed?\n\nI just uploaded a patch to do this in SOLR-4792. ",
            "id": "comment-14228900"
        },
        {
            "date": "2014-11-30T05:30:55+0000",
            "author": "Shawn Heisey",
            "content": "Seems like it should be vice-versa given that a war is no longer distributed?\n\nIt's all making my head spin.   I don't know where things are going to land. ",
            "id": "comment-14229021"
        },
        {
            "date": "2014-12-02T01:00:53+0000",
            "author": "Hoss Man",
            "content": "My broad strokes opinion on being concerned with the release sizes is simple: \n\n\n\tFolks who care a lot about the num bytes they have to download should be encouraged to use the source releases and compile themselves\n\t\n\t\tas much as possible we should make it dead simple to \"build\" solr from source for these people with poor net connections who are concerned about saving bytes.\n\t\n\t\n\tthe binary releases should strive for being as dead simple to use as possible, since their target user is a novice who doesn't (yet) know/understand what they need/want.\n\t\n\t\tif that means they are kind of big, because they include all contribs, that is (in my opinion) more new user friendly then having users discover after downloading & installing solr that they have to go download and install 27 other micro plugins in order to get it to do what they want.\n\t\n\t\n\n\n\nas Doug once wisely pointed out...\n\nThe reason is that you don't optimize the out-of-box experience for advanced users: it's okay to frustrate them a bit, they're going to find what they need in the download.  The more important thing is not to confuse newbies.  A single download with documentation and examples is what newbies need.  While you might be somewhat annoyed by the extra baggage, how much harder does it really make your life? ",
            "id": "comment-14230784"
        },
        {
            "date": "2014-12-02T01:25:04+0000",
            "author": "Yonik Seeley",
            "content": "IMO, we don't currently really have off-line documentation.   We could cut out the javadoc without hurting newbies at all, and I think the off-line tutorial could go as well (why try to maintain a different online and offline version?)\nA kitchen sink approach can also leave one with the impression of \"bloated, complicated, confusing\". ",
            "id": "comment-14230803"
        },
        {
            "date": "2015-02-22T17:35:39+0000",
            "author": "Alexandre Rafalovitch",
            "content": "From the things that could be removed (I think):\nSolr ships with lucene-test library (and junit, ant, etc) in dist/test-framework. That's another 10Mb. I don't think anything in the binary distribution actually relies on it. ",
            "id": "comment-14332264"
        },
        {
            "date": "2015-02-22T21:04:49+0000",
            "author": "Shawn Heisey",
            "content": "Folks who care a lot about the num bytes they have to download should be encouraged to use the source releases and compile themselves \n\nThis is somewhat deceptive in terms of what has to be downloaded.  Let's say that a user starts with a clean system that already has all the required tools downloaded and installed - ant, the jdk, etc.  The solr source download for 5.0.0 is 35MB, which is considerably smaller than the 128MB (zip) or 122 MB (tgz) binary download.  So far so good, but you're not done getting large amounts of data from the Internet yet.  Building the 5.0.0 server target will download 119MB into the ivy cache, so the total download required is larger than the binary.  Additional builds will use the already downloaded cache, of course.\n\nSide note: I found it interesting that the Lucene core builds before any third-party libraries are downloaded.  It's pretty awesome that the most important piece of the puzzle is written entirely with code native to the JDK. ",
            "id": "comment-14332368"
        },
        {
            "date": "2015-08-19T10:52:30+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Solr ships with lucene-test library (and junit, ant, etc) in dist/test-framework. That's another 10Mb. I don't think anything in the binary distribution actually relies on it.\n\nAccording to README.txt {{The Solr test-framework products base classes and utility classes for \nwritting JUnit tests excercising Solr functionality.}} it looks like it was put there to enable users to write unit tests for their own search application software more easily. But we could easily get rid of it and add a comment to CHANGES.txt and ref-guide on how to get hold of the test-framework.\n\nIMO, we don't currently really have off-line documentation. We could cut out the javadoc without hurting newbies at all, and I think the off-line tutorial could go as well...\n\n+1 to replace the contents of the docs folder with a simple index.html linking to an online version of the tutorial and javadocs (save 12Mb)\n\nIf we also pursue SOLR-5103 (see my last comment there) we could get rid of the contrib folder, saving 69Mb. Instead we could have a step in the docs and tutorials telling people to install plugins as needed via a simple bin/solr one-liner.  ",
            "id": "comment-14702845"
        },
        {
            "date": "2016-03-19T23:05:03+0000",
            "author": "Alexandre Rafalovitch",
            "content": "Just as a data point. Javadocs are 5Mb extra in the download and ~70Mb when unpacked. And most of the classes they describe are not very useful for a non-developer. I'd cut that and make Javadoc much more accessible through the main website instead. ",
            "id": "comment-15203002"
        },
        {
            "date": "2016-03-20T01:35:20+0000",
            "author": "Alexandre Rafalovitch",
            "content": "Another data point. We have two copies of the icu4j-54.1.jar library at 11Mb each (in Solr 5.5). They are at:\n\n./contrib/analysis-extras/lib/icu4j-54.1.jar\n./contrib/extraction/lib/icu4j-54.1.jar\n\nWe probably only need one of them; I am guessing the one in the /extraction. ",
            "id": "comment-15203043"
        },
        {
            "date": "2016-03-20T04:33:05+0000",
            "author": "Shawn Heisey",
            "content": "Ouch.  That represents a fairly significant drop in the size of the contrib folder, and a small drop in the overall size of the artifacts that a release manager must upload.\n\nI actually would have suggested the one in analysis-extras as the one to keep.  I use the ICU classes from Lucene, so it's logical for that to be the one I'd expect to be there.  In the end, I don't really care which one is kept, as long as there's general consensus.  I haven't got any clue about which of those contrib modules gets used more often.\n\nWe could drop a symlink into one of those locations in the .tgz archive. ",
            "id": "comment-15203097"
        },
        {
            "date": "2016-03-20T04:47:48+0000",
            "author": "Shawn Heisey",
            "content": "Here are the obvious things to move to their own artifacts, and their .zip sizes (in KB, for precision).  I made a stab at a name for the zip version of the archive.\n\ncontrib: 68423KB (solr-contrib-x.x.x.zip)\ndist: 17960KB (solr-jars-x.x.x.zip)\ndocs: 11893KB (solr-docs-x.x.x.zip)\nexample: 4265KB (solr-examples-x.x.x.zip)\n\nThe kuromoji and hadoop jars from WEB-INF/lib could be placed in another artifact.  Not sure what to call it, perhaps solr-extras.\n\nThe idea with each of these supporting artifacts is that they would be extracted to the same location as the main artifact, so they would contain a similar directory structure.  Not sure whether we would omit the solr-x.x.x top-level directory that is in the main artifact.  Most people who have .tgz experience would expect it to be there, but zip users might be confused. ",
            "id": "comment-15203106"
        },
        {
            "date": "2016-03-20T16:35:35+0000",
            "author": "Shawn Heisey",
            "content": "One idea that would take care of most every concern created by splitting artifacts in the first place:  Put all of the pieces that we extract from the main artifact (except docs, that gets its own) into a \"solr-extras\" artifact.  It would be large, but there will be a lot less \"if x then y\" documentation required. ",
            "id": "comment-15203353"
        },
        {
            "date": "2016-03-20T16:41:31+0000",
            "author": "Shawn Heisey",
            "content": "Side proposal, which I'm willing to forget about: Consider putting the main DIH jar back into WEB-INF/lib, and possibly even moving its code into core.  The DIH-extras code and jars probably still belong in contrib.\n\nI think that for a lot of users, DIH was the primary reason that they seriously investigated Solr.  I know it was a primary consideration when I first started.  For users like that, DIH is not \"extra\" functionality, it's part of their core usage.  The main DIH jar is also very small, slightly larger than 200KB. ",
            "id": "comment-15203355"
        },
        {
            "date": "2016-03-22T00:44:12+0000",
            "author": "Shawn Heisey",
            "content": "\nas Doug once wisely pointed out...\nWhile you might be somewhat annoyed by the extra baggage, how much harder does it really make your life?\n\nI think this is an excellent point and completely relevant for Lucene \u2013 a development library.  The majority of people interested in downloading Lucene are developers and can be painted more or less with the \"expert\" brush.  Looking at the various pieces in the Lucene download, I don't see an obvious way to decide which modules would be useless to a large cross-section of users.\n\nI think that Doug's advice is less relevant for Solr.  It's an application that attracts a lot of novice users who might not have ANY idea what they are doing.  The example configs include large amounts of Solr's extended functionality, which is a little overwhelming for expert users, and a LOT overwhelming for the novice.  A large cross-section of users will only need core functionality, and maybe DIH so they can import from their database.\n\nIf Solr were split into a 25 MB main archive with examples illustrating core functionality, an 11MB docs archive, and an extras archive weighing in around 100 MB, that would be awesome.  Users can check the README or the reference guide to see if they need any functionality in the extras archive. ",
            "id": "comment-15205470"
        },
        {
            "date": "2016-08-27T16:38:26+0000",
            "author": "Shawn Heisey",
            "content": "Screenshots from a Windows machine showing the impact of the docs directory on zipfile extraction.  You can see that the docs directory is 4716 items (files and directories) out of the 6620 items in the zipfile.  On the unpacking graph, I have placed a big red rectangle, representing the approximate portion of the graph where the docs were being extracted.  Anybody can repeat the zipfile extraction on a Windows machine and see just how much time is spent on the various directories in the archive. ",
            "id": "comment-15441873"
        },
        {
            "date": "2016-08-27T16:41:19+0000",
            "author": "Shawn Heisey",
            "content": "A potential baby step is to do something different with docs.  I see two good options:\n\n\n\tRemove the docs from the main download entirely, create a separate downloadable archive for them.  For 6.2, this archive would be about 13MB, making the main download nearly 10 percent lighter.\n\tPut the compressed docs archive in the main archive.  This wouldn't reduce the size of the download, but it WOULD make the archive extract a LOT faster.  See screenshots that I attached earlier.\n\n\n\nI think it's a good idea to do the second option to the licenses directory.  This directory doesn't have as many small files in it as the docs directory, but it still has a significant impact on main archive extraction speed.  These files need to be in the main archive, but IMHO it's perfectly acceptable to have them contained in an inner archive. ",
            "id": "comment-15441878"
        },
        {
            "date": "2016-08-27T21:49:08+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Let's replace the contents of the docs folder with one single file index.html, which contains just one link to the online docs (e.g.) http://lucene.apache.org/solr/6_2_0/index.html\nOn that online docs page we could alternatively provide a download link to download the docs offline. We don't need to formally release a docs archive? It is all in the src download anyway. ",
            "id": "comment-15442275"
        },
        {
            "date": "2016-08-28T15:17:06+0000",
            "author": "Shawn Heisey",
            "content": "In general, I like the idea of just providing a reference to the online copy. The percentage of users that download Solr and use it in an offline system would be VERY small, perhaps statistically insignificant ... and as you say, downloading the source code (which is much smaller than the binary) would give them the ability to generate the docs locally.\n\nI've mostly been thinking about Solr here.  Because Lucene users are developers who have a decent chance of writing code in places with no connectivity (like airplanes), I do think that Lucene must include its docs in the binary archive, and for that, it should probably be an inner archive, to avoid initial extraction of thousands of tiny files.\n\nI do think that placing licenses into an inner archive should happen for both Lucene and Solr.  It will slightly complicate the build system, because the zip needs a zip and the tgz needs a tgz.\n\nCan't see any reason to change how these things work in the source code. ",
            "id": "comment-15443601"
        },
        {
            "date": "2016-08-29T10:36:29+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Opened sub task SOLR-9450 for this ",
            "id": "comment-15445507"
        },
        {
            "date": "2017-02-23T11:12:14+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Now that SOLR-4950 is getting resolved, what is the next baby step in reducing the Solr download size? ",
            "id": "comment-15880269"
        },
        {
            "date": "2017-02-24T13:24:34+0000",
            "author": "Alexandre Rafalovitch",
            "content": "dist/test-framework is still there. I still don't think we need it. That's 10Mb. ",
            "id": "comment-15882655"
        },
        {
            "date": "2017-02-24T13:34:57+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Good point, if you need it you can always download the src and build it, since you're obviously doing some kind of development, right? Do you want to create a sub-task for it? ",
            "id": "comment-15882673"
        },
        {
            "date": "2017-02-24T13:53:31+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Also, commons-collections-3.2.2.jar is in WEB-INF/lib as well as in contrib/velocity/lib, no need for that. (0,5Mb)\ncommons-io, httplilient and more is in WEB-INF and dist/solrj\nicu4j-56.1.jar is in both contrib/extraction and contrib/analysis-extra (11Mb!)\nsolr-core*.jar (4,3Mb) is one of many both in WEB-INF/lib and dist. Could we write a script prep-dist that copies dupes from wherever into dist?  ",
            "id": "comment-15882709"
        },
        {
            "date": "2017-02-24T14:40:10+0000",
            "author": "Shawn Heisey",
            "content": "Glad to see some ideas being generated, and some work getting done.  SOLR-9450 will make a big difference in the download size and a HUGE difference in how long archive extraction takes.\n\nPrevious comments cover the pain points pretty well.  Here's what I see as remaining low-hanging fruit:\n\n\n\tEliminate duplicate jars where possible.  Adding a \"makedist\" script to copy jars from disparate locations to dist is probably a good idea.\n\tCompress the licenses into an inner archive so archive extraction is speedier.\n\tSplit the test framework and dependencies only required for testing into a separate download.\n\tConsider splitting large things currently included in the webapp, like the hadoop integration, into a separate download.\n\tConsider splitting contrib modules and dependencies into a separate download.\n\tDecide whether the splits mentioned above would all be in the same file, or separate files.\n\n ",
            "id": "comment-15882799"
        },
        {
            "date": "2017-02-24T14:44:11+0000",
            "author": "Alexandre Rafalovitch",
            "content": "I think the whole solrj-client folder is full of duplicate libraries. Perhaps it is necessary, but it is certainly something to keep a note about. ",
            "id": "comment-15882806"
        },
        {
            "date": "2017-02-24T14:57:52+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "A problem with makedist.sh is that you don't support the usecase where people have scripted download of solr-x.y.tgz, untar, copy dist to somewhere.\n\nRegarding making more release artifacts such as solr-contribs-6.4.1.tgz etc, that would help a lot on download size but hurt ease of testing all features for newbies. That could be easened by a java -jar bin/downloader.jar contrib command bundled that would go online, fetch the corresponding contrib artifact and unzip it into $SOLR_TIP/contrib. The same approach could be taken for compiling the dist folder, getting the test dependencies, javadocs mm without needing to implement a full plugin architecture from day one. I still think the ideas in SOLR-5103 is a superior long-term plan though  ",
            "id": "comment-15882830"
        },
        {
            "date": "2017-02-24T14:58:45+0000",
            "author": "Shawn Heisey",
            "content": "I think the whole solrj-client folder is full of duplicate libraries.\n\nYes, dist/solrj-lib is comprised of  duplicates, taking 6MB of space.  It would be one of the things copied by the makedist script I mentioned.\n\nI still think that the main DIH code and jar should be moved into core.  The extras probably should remain outside, especially because the dependencies are not trivial in size.\n\nI do find it confusing that the contrib jars are in dist, but their dependencies are in contrib.  Seems like they should be together in contrib. ",
            "id": "comment-15882832"
        },
        {
            "date": "2017-02-24T15:03:11+0000",
            "author": "Shawn Heisey",
            "content": "Jan H\u00f8ydahl, you make some good points.  If we can build a reliable and fully scripted download mechanism, we solve multiple problems. ",
            "id": "comment-15882836"
        },
        {
            "date": "2017-02-24T15:08:15+0000",
            "author": "Alexandre Rafalovitch",
            "content": "Do we have a document on what libs are supposed to go into what directory. I admit this is a total black box issue for me.\n\nI do agree with Jan though that ease of use is the primary concern. So, I would focus first on the things that are just not used at all or not used by the people running Solr as the search engine (javadocs, test libraries, maybe some of the contribs that are not trivial to integrate and we don't provide examples for, etc).\n\nDIH - to me -is a complex story. It really needs to be cleaned up/replaced instead of making it more core. But the discussions don't really get anywhere so far. \n\nWith solrj-lib, could we instead have a README file that points to what jars are required from other already-existing locations? Because the easiest way to get SolrJ is with Maven dependency anyway (right?) and that already manages the dependencies by the reference. ",
            "id": "comment-15882844"
        },
        {
            "date": "2017-02-24T15:12:04+0000",
            "author": "Kevin Risden",
            "content": "One of the main issues with solrj-lib is that you have to include it all if you want a third party program to work with Solr that doesn't have maven. An example is the JDBC piece in Solr. There was an issue about trying to distribute a single jar for SolrJ so that might even help to not require having solrj-lib? SOLR-8680\n\nMaven Central doesn't help download all dependencies of solr-solrj if you aren't using Maven to compile. There is no shaded or uber jar on Maven for solr-solrj. ",
            "id": "comment-15882850"
        },
        {
            "date": "2017-02-24T15:16:45+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "The downloader just needs to \n\n\tKnow what version we have, so we can download corresponding ver\n\tFind nearest Apache mirror with http://www.apache.org/dyn/closer.lua/lucene/solr?preferred=true\n\tAttempt download of archive, if 404, revert to main dist site, then to archive\n\tDownload checksum from the archive and validate\n\tUnzip\n\n\n\nThe bigger issue here I guess is to start releasing more artifacts. We then get source.zip/tgz, bin.zip/tgz, contrib.zip/tgz + .asc, .sha files for each version and more work for RMs. ",
            "id": "comment-15882859"
        },
        {
            "date": "2017-02-24T16:33:49+0000",
            "author": "Alexandre Rafalovitch",
            "content": "Kevin Risden Do the jars have to be all together in the solrj-lib though? I was trying to say that the jars were already present but in different directories (web-inf, dist, etc). The important knowledge is which jars are the minimal set required for SolrJ. So, if there is a document that lists them clearly, it may be enough. And I am guessing that document is already somewhere in the build instructions, we can just expose it in different ways from copying actual jars.\n\nAnd if you do uber-jar for solrj, you could still pull those jars automatically from wherever the primary copies are. ",
            "id": "comment-15883034"
        },
        {
            "date": "2017-07-14T22:26:11+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Created sub task SOLR-11087 for the jar duplicates issue ",
            "id": "comment-16088203"
        }
    ]
}