{
    "id": "LUCENE-3462",
    "title": "Jenkins builds hang quite often in TestIndexWriterWithThreads.testCloseWithThreads",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Last hung test run: https://builds.apache.org/job/Lucene-Solr-tests-only-trunk/10638/console\n\n\n[junit] \"main\" prio=5 tid=0x0000000801ef3800 nid=0x1965c waiting on condition [0x00007fffffbfd000]\n[junit]    java.lang.Thread.State: WAITING (parking)\n[junit] \tat sun.misc.Unsafe.park(Native Method)\n[junit] \t- parking to wait for  <0x0000000825d853a8> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\n[junit] \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n[junit] \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:838)\n[junit] \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:871)\n[junit] \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1201)\n[junit] \tat java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:214)\n[junit] \tat java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:290)\n[junit] \tat org.apache.lucene.index.DocumentsWriterFlushControl.markForFullFlush(DocumentsWriterFlushControl.java:403)\n[junit] \tat org.apache.lucene.index.DocumentsWriter.flushAllThreads(DocumentsWriter.java:557)\n[junit] \t- locked <0x0000000825d81998> (a org.apache.lucene.index.DocumentsWriter)\n[junit] \tat org.apache.lucene.index.IndexWriter.prepareCommit(IndexWriter.java:2776)\n[junit] \t- locked <0x0000000825d7d840> (a java.lang.Object)\n[junit] \tat org.apache.lucene.index.IndexWriter.commitInternal(IndexWriter.java:2904)\n[junit] \t- locked <0x0000000825d7d830> (a java.lang.Object)\n[junit] \tat org.apache.lucene.index.IndexWriter.closeInternal(IndexWriter.java:1156)\n[junit] \tat org.apache.lucene.index.IndexWriter.close(IndexWriter.java:1099)\n[junit] \tat org.apache.lucene.index.TestIndexWriterWithThreads.testCloseWithThreads(TestIndexWriterWithThreads.java:200)\n[junit] \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n[junit] \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n[junit] \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n[junit] \tat java.lang.reflect.Method.invoke(Method.java:616)\n[junit] \tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n[junit] \tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n[junit] \tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n[junit] \tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n[junit] \tat org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:48)\n[junit] \tat org.apache.lucene.util.LuceneTestCase$2$1.evaluate(LuceneTestCase.java:611)\n[junit] \tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n[junit] \tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)\n[junit] \tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)\n[junit] \tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:148)\n[junit] \tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:50)\n[junit] \tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)\n[junit] \tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)\n[junit] \tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)\n[junit] \tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)\n[junit] \tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)\n[junit] \tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n[junit] \tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)\n[junit] \tat org.junit.runners.ParentRunner.run(ParentRunner.java:236)\n[junit] \tat junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)\n[junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:420)\n[junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:911)\n[junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:743)",
    "attachments": {
        "LUCENE-3462.patch": "https://issues.apache.org/jira/secure/attachment/12497205/LUCENE-3462.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-09-25T15:22:05+0000",
            "content": "I hung previously several times, but this time I requested stack trace. Seems to be related to DWPT, never happens in 3.x.\n\nHung several times last 4 weeks (about 10 times). ",
            "author": "Uwe Schindler",
            "id": "comment-13114279"
        },
        {
            "date": "2011-09-25T15:25:54+0000",
            "content": "Also interesting: No other thread is running at the same time, so it simply waits and waits for nothing else (the rest of stack trace is only internal JVM cleanup threads and the Jenkins server itsself). ",
            "author": "Uwe Schindler",
            "id": "comment-13114280"
        },
        {
            "date": "2011-09-30T19:30:03+0000",
            "content": "again a tricky one. During close we deactivate all unreleased thread states but if a thread is currently trying to get a new threadstate and enters the newThreadState() method once the unreleased threadstates were deactivated it hits a NPE since the threadstates dwpt has been reset to null ie. deactivated. That threadstate got locked right before that.\n\nHere is a patch. ",
            "author": "Simon Willnauer",
            "id": "comment-13118309"
        },
        {
            "date": "2011-10-01T08:13:18+0000",
            "content": "committed in rev. 1177941 ",
            "author": "Simon Willnauer",
            "id": "comment-13118703"
        },
        {
            "date": "2011-10-01T09:15:04+0000",
            "content": "Thanks! ",
            "author": "Uwe Schindler",
            "id": "comment-13118710"
        }
    ]
}