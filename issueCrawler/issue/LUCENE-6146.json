{
    "id": "LUCENE-6146",
    "title": "Directory.copy -> Directory.copyFrom",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [
            "core/store"
        ],
        "labels": "",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Task"
    },
    "description": "Spinoff of LUCENE-4746.\n\nThis method is currently:\n\ncopy(Directory to, String src, String dest, IOContext context)\n\n\n\nBut it would be better to restructure this so the destination directory is the one actually being changed by the operation:\n\ncopyFrom(Directory from, String src, String dest, IOContext context)\n\n\n\nBesides fixing the order to make sense, adding it to the name might help prevent bugs like the current TrackingDirectoryWrapper impl (used by IndexWriter to track what files are used):\n\n\npublic void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n  createdFileNames.add(dest); // BUG!\n  in.copy(to, src, dest, context);\n}",
    "attachments": {
        "LUCENE-6146.patch": "https://issues.apache.org/jira/secure/attachment/12689603/LUCENE-6146.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14261717",
            "author": "Robert Muir",
            "date": "2014-12-31T00:28:44+0000",
            "content": "initial patch. "
        },
        {
            "id": "comment-14262056",
            "author": "Adrien Grand",
            "date": "2014-12-31T09:30:33+0000",
            "content": "+1 "
        },
        {
            "id": "comment-14262125",
            "author": "Uwe Schindler",
            "date": "2014-12-31T11:57:23+0000",
            "content": "+1\n\nHi, this confused me yesterday when responding to the java-user ML request yesterday. Indeed, the target directory should have the copy option, because it is modified.\n\nThanks for finding this horrible bug in TrackingDirectoryWrapper!\n\nOne question: I did not know that we already have this tracking wrapper, could we not use it to have the same effect like the horrible \"staleFiles\" horror in FSDirectory? We could remove it from FSDirectory and let IndexWriter track itsself which files have to be synced? "
        },
        {
            "id": "comment-14262126",
            "author": "Uwe Schindler",
            "date": "2014-12-31T11:59:44+0000",
            "content": "Ah, don't forget to add a note into MIGRATE.txt of Lucene 5! This may affect users who implement own directories where their optimization may suddenly no longer used (and they have not used @Override annotation, so compiler does not catch the bug). "
        },
        {
            "id": "comment-14262154",
            "author": "Uwe Schindler",
            "date": "2014-12-31T12:53:45+0000",
            "content": "I opened LUCENE-6150 to remove the broken staleFiles map in FSDirectory. "
        },
        {
            "id": "comment-14262240",
            "author": "Robert Muir",
            "date": "2014-12-31T15:15:27+0000",
            "content": "\nAh, don't forget to add a note into MIGRATE.txt of Lucene 5! This may affect users who implement own directories where their optimization may suddenly no longer used (and they have not used @Override annotation, so compiler does not catch the bug).\n\nNot a chance. Such cases will still work correctly, and thats the users fault. We don't need to clutter up migration notes with unnecessary shit like that. "
        },
        {
            "id": "comment-14262258",
            "author": "Uwe Schindler",
            "date": "2014-12-31T15:43:18+0000",
            "content": "Not a chance.\n\nOK "
        },
        {
            "id": "comment-14262289",
            "author": "Robert Muir",
            "date": "2014-12-31T16:41:43+0000",
            "content": "Sorry, i am just unhappy thinking about optimizations when we have these bugs in the directory API. \n\nI am ok with a one-liner to warn there. But honestly this method is still not going to work well for \"subclassing\" anyway. Its almost pointless to optimize the impls because something like a FilterDirectory will easily wipe away the optimization. \n\nAn alternative solution would be a method on Directory to optionally return a Path for a filename, or some abstraction like a \"handle\", but i hate overengineering it.  "
        },
        {
            "id": "comment-14262573",
            "author": "ASF subversion and git services",
            "date": "2015-01-01T15:15:15+0000",
            "content": "Commit 1648851 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1648851 ]\n\nLUCENE-6146: Replaced Directory.copy() with Directory.copyFrom() "
        },
        {
            "id": "comment-14262577",
            "author": "ASF subversion and git services",
            "date": "2015-01-01T15:29:34+0000",
            "content": "Commit 1648854 from Robert Muir in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1648854 ]\n\nLUCENE-6146: Replaced Directory.copy() with Directory.copyFrom() "
        },
        {
            "id": "comment-14332633",
            "author": "Anshum Gupta",
            "date": "2015-02-23T05:01:04+0000",
            "content": "Bulk close after 5.0 release. "
        }
    ]
}