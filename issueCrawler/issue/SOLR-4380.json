{
    "id": "SOLR-4380",
    "title": "ReplicationHandler replicateAfter startup not showing commits after SOLR-3911",
    "details": {
        "affect_versions": "4.1",
        "status": "Closed",
        "fix_versions": [
            "4.2",
            "6.0"
        ],
        "components": [
            "replication (java)"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "In the process of upgrading to 4.1 from 3.6, I've noticed that our master servers do not show any commit points \u2013 e.g. via http://127.0.0.1:8983/solr/collection1/replication?command=commits \u2013 available until after a new commit happens. So, for static indexes, replication doesn't happen and for dynamic indexes, we have to wait until an incremental update of master for slaves to see any commits.\n\nTracing through the code, it looks like the change that may have effected us was part of SOLR-3911, specifically commenting out the initialization of the newIndexWriter in the replicateAfterStartup block [1]:\n\n// TODO: perhaps this is no longer necessary then?\n// core.getUpdateHandler().newIndexWriter(true);\n\n\n\nI'm guessing this is commented out because it is assumed that indexCommitPoint was going to be set by that block, but when a slave requests commits, that goes back to core.getDeletionPolicy().getCommits() to fetch the list of commits. If no indexWriter has been initialized, then, as far as I can tell, IndexDeletionPolicyWrapper#onInit will not have been called and there will be no commits available.\n\nBy uncommenting this line, I was able to see commits on startup and slaves began to replicate successfully.\n\n\n[1] http://svn.apache.org/viewvc/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/ReplicationHandler.java?annotate=1420992&diff_format=h&pathrev=1420992#l880",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Andrzej Bialecki",
            "id": "comment-13566270",
            "date": "2013-01-30T07:59:20+0000",
            "content": "I confirm this is an issue in my environment too, where we use a custom deletion policy to replicate additional side-load index data.\n\nIf reopening a writer was too heavy-weight for NRT (was that the motivation for this change) then perhaps the replication code should use a different mechanism to obtain the list of IndexCommit-s if there is no writer? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13566526",
            "date": "2013-01-30T15:06:55+0000",
            "content": "Gregg, can you check if the follow patch solves this for you?\n\n\nIndex: solr/core/src/java/org/apache/solr/handler/ReplicationHandler.java\n===================================================================\n--- solr/core/src/java/org/apache/solr/handler/ReplicationHandler.java\t(revision 1440432)\n+++ solr/core/src/java/org/apache/solr/handler/ReplicationHandler.java\t(working copy)\n@@ -42,6 +42,7 @@\n import org.apache.lucene.index.IndexCommit;\n import org.apache.lucene.index.IndexDeletionPolicy;\n import org.apache.lucene.index.DirectoryReader;\n+import org.apache.lucene.index.IndexWriter;\n import org.apache.lucene.store.Directory;\n import org.apache.lucene.store.IOContext;\n import org.apache.lucene.store.IndexInput;\n@@ -877,10 +878,9 @@\n             }\n           }\n \n-          // reboot the writer on the new index\n-          // TODO: perhaps this is no longer necessary then?\n-         // core.getUpdateHandler().newIndexWriter(true);\n-\n+          // ensure the writer is init'd\n+          RefCounted<IndexWriter> iw = core.getUpdateHandler().getSolrCoreState().getIndexWriter(core);\n+          iw.decref();\n         } catch (IOException e) {\n           LOG.warn(\"Unable to get IndexCommit on startup\", e);\n         } finally {\n\n\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13566529",
            "date": "2013-01-30T15:12:39+0000",
            "content": "was that the motivation for this change\n\nNo, based on the comment I'm thinking I couldn't see why it was necessary and no test failed without it.\n\nHowever, when I try to uncomment it, the tests seem to show problems given the work done in SOLR-3911. Perhaps that is part of why it's commented out as well, I don't remember.\n\nThe above tries to just make sure the writer has been init'd rather than forcing a new one. "
        },
        {
            "author": "Gregg Donovan",
            "id": "comment-13566542",
            "date": "2013-01-30T15:33:07+0000",
            "content": "Mark \u2013 Your new patch works perfectly for us. I like the approach better than just restoring the call to newIndexWriter, as well. If a writer already exists when ReplicationHandler#inform gets called, why make a new one? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13566569",
            "date": "2013-01-30T16:13:54+0000",
            "content": "Thanks Gregg - I've added a test that catches this issue as well. I'll commit shortly. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13566602",
            "date": "2013-01-30T16:42:47+0000",
            "content": "Committed - accidentally tagged it as SOLR-3911 though. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13566611",
            "date": "2013-01-30T16:58:12+0000",
            "content": "[trunk commit] Mark Robert Miller\nhttp://svn.apache.org/viewvc?view=revision&revision=1440518\n\nSOLR-4380: fix JIRA issue number "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13566625",
            "date": "2013-01-30T17:06:14+0000",
            "content": "[branch_4x commit] Mark Robert Miller\nhttp://svn.apache.org/viewvc?view=revision&revision=1440521\n\nSOLR-4380: fix JIRA issue number "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13654155",
            "date": "2013-05-10T10:34:13+0000",
            "content": "Closed after release. "
        }
    ]
}