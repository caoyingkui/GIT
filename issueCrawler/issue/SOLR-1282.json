{
    "id": "SOLR-1282",
    "title": "Replication handler's fetchindex command randomly ignores masterUrl parameter",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [
            "replication (java)"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "The fetchindex command of the replication handler is randomly ignoring the value of a specified masterUrl parameter, instead using the masterUrl configured in solrconfig.xml.\n\nInjecting some debugging code shows that the contents of solrParams disappear sometime after the thread running doSnapPull() starts in ReplicationHandler's handleRequestBody() method.\n\nThis behavior is observed in the most recent nightly build (2009-07-14).\n\nHow to replicate:\n\n    Configure a core as a slave with a masterUrl:\n\n        <requestHandler name=\"/replication\" class=\"solr.ReplicationHandler\">\n            <lst name=\"slave\">\n                <str name=\"masterUrl\">http://dummy1</str>\n            </lst>\n        </requestHandler>\n\n    Run the core's fetchindex replication command several times, passing a different masterUrl:\n\n        /replication?command=fetchindex&masterUrl=http://dummy2\n\n    Logs show that the configured masterUrl (dummy1) is being used for at least half the requests.",
    "attachments": {
        "repl-debug.patch": "https://issues.apache.org/jira/secure/attachment/12413559/repl-debug.patch",
        "repl-clone-params.patch": "https://issues.apache.org/jira/secure/attachment/12413562/repl-clone-params.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Noble Paul",
            "id": "comment-12731335",
            "date": "2009-07-15T08:11:57+0000",
            "content": "why is the dummy1 even specified ? you can totally avoid the slave declaration\n\n\n<lst name=\"slave\">\n<str name=\"masterUrl\">http://dummy1</str>\n</lst>\n\n\n\nhow did you figure out that the values  in solrParams is disapearing ? did you use logging? can you give the changes a s a path ?  "
        },
        {
            "author": "Brian Loudon",
            "id": "comment-12731493",
            "date": "2009-07-15T14:58:33+0000",
            "content": "The dummy1/2 URLs are there only to more clearly show whether the slave attempted to use the configured or specified masterUrl for a particular request, as the slave generates an error message stating one or the other. The random failure to use the value of the masterUrl parameter still occurs when the slave does not have a masterUrl configured. In all cases the slave's response to the fetchindex command is 'OK', and any failure must be determined through examining logs.\n\nI added logging calls to the top of doSnapPull in org.apache.solr.handler.ReplicationHandler to display the contents of the SolrParams instance it is given. On requests where the masterUrl parameter appears to be ignored the logs show that the SolrParams instance contains no parameters. "
        },
        {
            "author": "Brian Loudon",
            "id": "comment-12731494",
            "date": "2009-07-15T15:01:45+0000",
            "content": "Attached patch containing logging added to examine the contents of solrParams on each doSnapPull call. "
        },
        {
            "author": "Brian Loudon",
            "id": "comment-12731503",
            "date": "2009-07-15T15:14:24+0000",
            "content": "Attached patch which clones the SolrParams instance prior to giving it to doSnapPull.\n\nNote that my knowledge of Java programming is about a week old and was mostly prompted by this issue, so I'm sure this change is going about things in entirely the wrong way. It does, however, result in the masterUrl parameter being consistently used on every call to fetchindex. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12731793",
            "date": "2009-07-16T04:21:42+0000",
            "content": "hi Brian. I made those changes to the code (copying the object before spawning a new threda) . SO the last nightly should have the fix "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775808",
            "date": "2009-11-10T15:52:10+0000",
            "content": "Bulk close for Solr 1.4 "
        }
    ]
}