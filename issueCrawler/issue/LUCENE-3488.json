{
    "id": "LUCENE-3488",
    "title": "Factor out SearcherManager from NRTManager",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "3.5",
            "4.0-ALPHA"
        ],
        "affect_versions": "3.5,                                            4.0-ALPHA",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Currently we have NRTManager and SearcherManager while NRTManager contains a big piece of the code that is already in SearcherManager. Users are kind of forced to use NRTManager if they want to have SearcherManager goodness with NRT. The integration into NRTManager also forces you to maintain two instances even if you know you always want deletes. To me NRTManager tries to do more than necessary and mixes lots of responsibilities ie. handling searchers and handling indexing generations. NRTManager should use a SearcherManager by aggregation rather than duplicate a lot of logic. SearcherManager should have a NRT and Directory based implementation users can simply choose from.",
    "attachments": {
        "LUCENE-3488.patch": "https://issues.apache.org/jira/secure/attachment/12497772/LUCENE-3488.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-10-05T09:46:42+0000",
            "content": "here is a patch that extracts a common SearcherManager abstract class providing simply static methods to get a SM instance for either Directory or IndexWriter. NRTManager handles all the versioning and provides methods to wait for generations just like it did before. However, NRTManager doesn't return IS anymore but SearcherManager instead. There are still a hand full of nocommits (javadoc) in the patch but since this is a major change to what we had before I figured I should upload it.\n ",
            "author": "Simon Willnauer",
            "id": "comment-13120779"
        },
        {
            "date": "2011-10-05T13:25:02+0000",
            "content": "Great!  Next step is integrating it into Solr and nuking the current atrocious Solr code.   ",
            "author": "Jason Rutherglen",
            "id": "comment-13120941"
        },
        {
            "date": "2011-10-05T13:41:05+0000",
            "content": "Jason, Solr's searcher management code has been around for 7 years, has been in production for 6, and has proven pretty bulletproof.  It's heavily integrated into Solr's cache warming, replication, and many other features depends on it (in a way that make's it not-so-easy to just change how it's done).\n\nWhat you suggest only makes sense at a high level if you wave your hands around alot.  If you get down to the details, it makes little sense. ",
            "author": "Yonik Seeley",
            "id": "comment-13120971"
        },
        {
            "date": "2011-10-05T13:54:17+0000",
            "content": "has been around for 7 years\n\nThat's far too long.  Hence the push for modules. ",
            "author": "Jason Rutherglen",
            "id": "comment-13120984"
        },
        {
            "date": "2011-10-05T17:00:32+0000",
            "content": "What you suggest only makes sense at a high level if you wave your hands around alot. If you get down to the details, it makes little sense.\ni am not saying we should but if we take this as a basis we should have never started with flex, DWPT etc. Stuff like this can only improve the quality of the product, make it lean and easier to maintain. ",
            "author": "Simon Willnauer",
            "id": "comment-13121140"
        },
        {
            "date": "2011-10-05T18:27:02+0000",
            "content": "if we take this as a basis we should have never started with flex, DWPT etc.\n\nYou mean those didn't make sense to start off with? \n\nAnyway, I take exception to the characterization of this part of Solr's code as \"atrocious\", and really don't understand where it comes from or what the specific complaints are.  But as always, patches welcome. ",
            "author": "Yonik Seeley",
            "id": "comment-13121328"
        },
        {
            "date": "2011-10-05T18:44:08+0000",
            "content": "Atrocious or perhaps horrible is:\n\nLines 1041 - 1345 of [1].  Saying patches are welcome when these issues were brought up in SOLR-2193 when that gave way to SOLR-2565 which ended up being 155k plus several additional patches is ludicrous.   A redesign could / should have yielded much better results.  I didn't.  \n\n1. http://svn.apache.org/viewvc/lucene/dev/trunk/solr/core/src/java/org/apache/solr/core/SolrCore.java?view=markup ",
            "author": "Jason Rutherglen",
            "id": "comment-13121350"
        },
        {
            "date": "2011-10-05T18:52:21+0000",
            "content": "Stuff like this can only improve the quality of the product, make it lean and easier to maintain.\n\nCall me crazy, but I dont find these manager classes leaner or easier to maintain at all! ",
            "author": "Mark Miller",
            "id": "comment-13121357"
        },
        {
            "date": "2011-10-05T18:57:45+0000",
            "content": "Call me crazy, but I dont find these manager classes leaner or easier to maintain at all!\nsee my comment: \"i am not saying we should but if we take..\"\n\nbut hey as long as you can wrap your head around  public RefCounted<SolrIndexSearcher> getSearcher(...) fine, I can't! ",
            "author": "Simon Willnauer",
            "id": "comment-13121361"
        },
        {
            "date": "2011-10-05T19:05:32+0000",
            "content": "see my comment: \"i am not saying we should but if we take..\"\n\nI'm not arguing about that - I'm just commenting on your comment.\n\nbut hey as long as you can wrap your head around public RefCounted<SolrIndexSearcher> getSearcher(...) fine, I can't!\n\nWell, if you take out all of the things that it's doing above and beyond these manager classes, sure it would be a much leaner class ... but thats more than a few features removed... removed features generally means less code.\n\nI'm not saying it's not a method that couldn't be broken down or refactored to be made more clear - but as someone that has written classes like these manager classes, and has worked closely on this area of Solr, I'm just not finding these comments jive with my experience. People love to jump on Solr code, but generally it's not very strong arguments. The UpdateHandler was redesigned IMO - I tackled that with an open page. If someone thinks it should be redesigned further, the proof is in the pudding. I'm happy where I took it at the moment. Wasn't a big redesign because in the end, that was not necessary - it was not a bad design to start - some of it was simply dated compared to Lucene advancements. ",
            "author": "Mark Miller",
            "id": "comment-13121368"
        },
        {
            "date": "2011-10-05T19:06:12+0000",
            "content": "manager classes leaner \n\nLeaner, better, modularized, pluggable, etc ... etc.  \n\nSolrCore is final.  I remember having that debate a while back with Chris Hostetter.  Why Solr needs to be monolithic, I don't know.  Attempts to fix that have met with, and continue to be met with push back.  That is quite evidently clear! ",
            "author": "Jason Rutherglen",
            "id": "comment-13121369"
        },
        {
            "date": "2011-10-05T19:09:32+0000",
            "content": "and continue to be met with push back. \n\nArn't you used to pushback on your code / ideas by now? ",
            "author": "Mark Miller",
            "id": "comment-13121372"
        },
        {
            "date": "2011-10-05T19:14:38+0000",
            "content": "Ok. lets got back to this code. non of the comments have been related to this!\n ",
            "author": "Simon Willnauer",
            "id": "comment-13121377"
        },
        {
            "date": "2011-10-05T19:21:17+0000",
            "content": "Ok. lets got back to this code. non of the comments have been related to this!\n\n+1 to the code!  ",
            "author": "Jason Rutherglen",
            "id": "comment-13121381"
        },
        {
            "date": "2011-10-05T20:41:15+0000",
            "content": "This is great Simon!\n\nI love how you now ask NRTMgr for a w/ deletes and w/o deletes\nSearcherManager, and then can just use the SearcherMgr from then on\n(optionally waiting for the right gen, on the NRTMgr, if you need to).\n\nMaybe we can somehow take this further... like you open a separate\nNRTMgr that doesn't care about deletes (this is super-expert anyway);\nthen we don't have the \"if (mustApplyDeletes)\" throughout (but we can\ndo this under a new issue).\n\nI made some small cleanups (removed some \"TODO Auto-generated method\nstub\"s); renamed NRTSearchManager -> NRTSearcherManager (the inner\nclass in SearcherManager; added default ctor setting\nalwaysApplyDeletes=true in NRTManager; put synchronized back in\nSearcherManager.swapSearcher (ok?)). ",
            "author": "Michael McCandless",
            "id": "comment-13121453"
        },
        {
            "date": "2011-10-05T22:39:21+0000",
            "content": "Arn't you used to pushback on your code / ideas by now?\n\nMark, I missed this, it's particularly funny given this issue isn't mine!  Please stay on topic! (Sorry Simon, nice work!) ",
            "author": "Jason Rutherglen",
            "id": "comment-13121556"
        },
        {
            "date": "2011-10-06T10:41:27+0000",
            "content": "Thanks mike for fixing those issues and for the cleanups! I must have missed that sync on swapSearcher. Here is the next iteration, fixing all javadocs and removes the acquireLatest and release utilities from NRTManager. Users should really use the SM instead!\n\nI think we are ready here! ",
            "author": "Simon Willnauer",
            "id": "comment-13121827"
        },
        {
            "date": "2011-10-06T21:28:31+0000",
            "content": "I still see a few javadoc warnings... but otherwise +1 to commit; what a great simplification.  It's nice that you can again pass either a Directory or Writer to SearcherManager as your \"source\" for new readers... ",
            "author": "Michael McCandless",
            "id": "comment-13122314"
        },
        {
            "date": "2011-10-07T08:04:18+0000",
            "content": "final patch. fixed all javadoc warnings and added a changes entry since NRTManager was released with 3.3 and this issue changes the API quite significantly. I am going to commit this is a bit ",
            "author": "Simon Willnauer",
            "id": "comment-13122604"
        },
        {
            "date": "2011-10-07T08:22:50+0000",
            "content": "committed to trunk in rev: 1179956\nbackported to 3.x in rev: 1179958 ",
            "author": "Simon Willnauer",
            "id": "comment-13122612"
        },
        {
            "date": "2011-11-27T12:29:30+0000",
            "content": "Bulk close after release of 3.5 ",
            "author": "Uwe Schindler",
            "id": "comment-13157782"
        }
    ]
}