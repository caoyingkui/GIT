{
    "id": "SOLR-5217",
    "title": "CachedSqlEntity fails with stored procedure",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Not A Problem"
    },
    "description": "When using DIH with CachedSqlEntityProcessor and importing data from MS-sql using stored procedures, it imports data for nested entities only once and then every call with different arguments for nested entities are only served from cache.My db-data-config is attached.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13760303",
            "date": "2013-09-06T16:04:45+0000",
            "content": "I don't think this is a bug. CachedSqlEntityProcessor will execute the query only once and that is its USP. If you don't want the caching, then just use SqlEntityProcessor. "
        },
        {
            "author": "Solr Node",
            "id": "comment-13760932",
            "date": "2013-09-07T06:00:58+0000",
            "content": "Actual use cases of nested entities are relevant to their parent entity only. if parent entity changes so do nested entity values too.off course in few use cases nested entity values may also remain same. But CachedSqlEntityProcessor should and if i am not wrong caches where conditions from queries.Same should be the case with stored procedures , as input parameters changes it should cache result set for each new parameters too.Then only CachedSqlEntityProcessor can serve its purpose. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13760957",
            "date": "2013-09-07T07:59:38+0000",
            "content": "I'm trying to understand the bug here.\n\nI assume that you are trying to use CachedSqlEntityProcessor as in example 1 in http://wiki.apache.org/solr/DataImportHandler#CachedSqlEntityProcessor\n\nFor example:\n\n<entity name=\"x\" query=\"select * from x\">\n    <entity name=\"y\" query=\"select * from y where xid=${x.id}\" processor=\"CachedSqlEntityProcessor\">\n    </entity>\n<entity>\n\n\n\nExcept that, instead of a SQL query, you are using parameterized stored procedures. In such a case, when a query is run the results are stored and if the same query is run again, it is fetched from the cache and returned. Are you seeing a different behaviour? "
        },
        {
            "author": "Solr Node",
            "id": "comment-13761503",
            "date": "2013-09-08T18:33:34+0000",
            "content": "Yes,over the iteration on parent entity, child entity's parametrized stored procedure params are changing but,CachedSqlEntityProcessor returns same result.More over tracing DB calls it revels the fact that those SPs are called only once during the DIH run. "
        },
        {
            "author": "Solr Node",
            "id": "comment-13761505",
            "date": "2013-09-08T18:38:51+0000",
            "content": "CachedSqlEntityProcessor should take in consideration where clauses in case of sql query and parameters passed in case of stored procedure. "
        },
        {
            "author": "Gunnlaugur Thor Briem",
            "id": "comment-13894473",
            "date": "2014-02-07T12:53:03+0000",
            "content": "That error is CachedSqlEntityProcessor borking on looking up null as a key, and it causes processing of the document to be aborted altogether.\n\nYou can work around it by changing your document query (the getAllRevDetPlatWideSearch thing) to never output a NULL folder_id; e.g. output COALESCE(folder_id, -1) instead of folder_id (assuming -1 will not appear as an actual folder ID in the folderadmin_list query).\n\nI think it's a valid bug, though. CachedSqlEntityProcessor should not fail so drastically on a null key; either it should simply not match on null (treating it as any other unmapped key) or it should support it like any other key, if it does appear as a key in the cached query.\n\nI suggest changing the issue title to \u201cCachedSqlEntity fails looking up null as a key, aborting document update\u201d "
        },
        {
            "author": "Gunnlaugur Thor Briem",
            "id": "comment-14368698",
            "date": "2015-03-19T08:39:44+0000",
            "content": "You just said \u201cstill it seems to be not working\u201d but then you closed it as \u201cNot a Problem\u201d \u2014 was that a mistake?\n\nI still maintain that this intolerance of null keys is a bug that should be fixed. "
        }
    ]
}