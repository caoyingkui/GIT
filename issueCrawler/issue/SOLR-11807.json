{
    "id": "SOLR-11807",
    "title": "maxShardsPerNode=-1 needs special handling while restoring collections",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "Backup/Restore"
        ],
        "type": "Bug",
        "fix_versions": [
            "7.5",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "When you start Solr 6.6. and run the cloud example here's the log excerpt :\n\nConnecting to ZooKeeper at localhost:9983 ...\n\nINFO\u00a0 - 2018-06-20 13:44:47.491; org.apache.solr.client.solrj.impl.ZkClientClusterStateProvider; Cluster at localhost:9983 ready\n...\n\nCreating new collection 'gettingstarted' using command:\n\nhttp://localhost:8983/solr/admin/collections?action=CREATE&name=gettingstarted&numShards=2&replicationFactor=2&maxShardsPerNode=2&collection.configName=gettingstarted\n\nmaxShardsPerNode get's set to 2 .\u00a0\n\n\u00a0\n\nCompare this to Solr 7.3\u00a0\n\nINFO\u00a0 - 2018-06-20 13:55:33.823; org.apache.solr.client.solrj.impl.ZkClientClusterStateProvider; Cluster at localhost:9983 ready\n\nCreated collection 'gettingstarted' with 2 shard(s), 2 replica(s) with config-set 'gettingstarted'\n\nSo something changed and now we no longer set maxShardsPerNode and it defaults to -1 .\u00a0\n\n\u00a0\n\n-1 has special handing while creating a collection ( it means max int ) . This special handling is not there while\u00a0restoring a collection and hence this fails\n\nWe should not set maxShardsPerNode to -1 in the first place\n\nSteps to reproduce:\n\n1. ./bin/solr start -e cloud -noprompt : This creates a 2 node cluster and a gettingstarted collection which 2X2\n 2.\u00a0Add 4 docs (id=1,2,3,4) with commit=true and openSearcher=true (default)\n 3. Call backup: http://localhost:8983/solr/admin/collections?action=BACKUP&name=gettingstarted_backup&collection=gettingstarted&location=/Users/varunthacker/solr-7.1.0\n 4. Call restore:\n http://localhost:8983/solr/admin/collections?action=restore&name=gettingstarted_backup&collection=restore_gettingstarted&location=/Users/varunthacker/solr-7.1.0",
    "attachments": {
        "SOLR-11807.patch": "https://issues.apache.org/jira/secure/attachment/12906294/SOLR-11807.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-01-16T22:52:13+0000",
            "content": "I think the better way to solve this problem would be to make sure maxShardsPerNode is not set to -1 in the gettingstarted example. Also there is no documentation that -1 is a special value of \"unlimited\" so we should not have special handling for that. ",
            "author": "Varun Thacker",
            "id": "comment-16327950"
        },
        {
            "date": "2018-01-17T00:23:32+0000",
            "content": "Running tests against the latest patch before committing it ",
            "author": "Varun Thacker",
            "id": "comment-16328045"
        },
        {
            "date": "2018-06-20T08:46:48+0000",
            "content": "Okay so now I understand what happened. this was changed in 7.0 (\u00a0SOLR-11239 )\u00a0\n\n\u00a0\n\nNoble Paul / Shalin Shekhar Mangar what do you guys think of the right solution here for dealing with maxShardsPerNode=-1 while restoring a collection ? Add the special handling there as well?\u00a0\n\n\u00a0\n\nAlso I don't understand a few things from SOLR-11239 . From that Jira there is a comment saying\n\n\u00a0\nFirstly,\u00a0maxShardsPerNode\u00a0defaults to 1. So if anyone needs to host more than 1 replica per node then they must specify\u00a0maxShardsPerNode\u00a0while creating the collection via the collection API.\nThis didn't change ? When I try adding a collection like this\n\nadmin/collections?action=create&name=test&numShards=4&replicationFactor=4\n\nI get an error\u00a0\n\nCannot create collection test. Value of maxShardsPerNode is 1, and the number of nodes currently live or live and part of your createNodeSet is 2. This allows a maximum of 2 to be created. Value of numShards is 4, value of nrtReplicas is 4, value of tlogReplicas is 0 and value of pullReplicas is 0. This requires 16 shards to be created (higher than the allowed number)\n\nWas this intentionally not addressed in that Jira? ",
            "author": "Varun Thacker",
            "id": "comment-16517931"
        },
        {
            "date": "2018-06-20T08:56:43+0000",
            "content": "The  /bin/solr script sends the value as -1 . But if you use the REST API, it passes nothing and the default value is 1. So, when you are restoring collections just pass -1 if you know how many nodes are going to be created . ",
            "author": "Noble Paul",
            "id": "comment-16517943"
        },
        {
            "date": "2018-06-20T12:12:49+0000",
            "content": "So we want to keep -1 as a value to indicate \"unlimited\" ? ",
            "author": "Varun Thacker",
            "id": "comment-16518085"
        },
        {
            "date": "2018-06-20T12:19:14+0000",
            "content": "Well, -1 is not persisted to state.json what is persisted to state.json is Integer.MAX_VALUE. -1 is  a special value understood by the command ",
            "author": "Noble Paul",
            "id": "comment-16518089"
        },
        {
            "date": "2018-06-20T12:21:32+0000",
            "content": "I don't think that's true. If you run \"bin/solr start -e cloud -noprompt\" you'll get this in the state.json for the gettingstarted collection\n\n    \"router\":{\"name\":\"compositeId\"},\n    \"maxShardsPerNode\":\"-1\",\n    \"autoAddReplicas\":\"false\",\n    \"nrtReplicas\":\"1\",\n    \"tlogReplicas\":\"0\"}}\n ",
            "author": "Varun Thacker",
            "id": "comment-16518090"
        },
        {
            "date": "2018-06-20T13:15:30+0000",
            "content": "Patch which expects that a user can pass in -1 and state.json can also contain -1\u00a0\n\nThe restore treats -1 as \"unlimited\" ",
            "author": "Varun Thacker",
            "id": "comment-16518121"
        },
        {
            "date": "2018-06-20T14:14:41+0000",
            "content": "I don't think that's true. If you run \"bin/solr start -e cloud -noprompt\" you'll get this in the state.json for the gettingstarted collection\n\nI was mistaken. \nAnyway, it's safe to use -1 ",
            "author": "Noble Paul",
            "id": "comment-16518186"
        },
        {
            "date": "2018-06-21T09:04:10+0000",
            "content": "Committed!\n\nmaster : 3a2ec9b\n\nbranch_7x :\u00a09c432b7 ",
            "author": "Varun Thacker",
            "id": "comment-16519105"
        },
        {
            "date": "2018-06-25T15:41:49+0000",
            "content": "Policeman Jenkins found a reproducing seed for a TestLocalFSCloudBackupRestore failure that git bisect blames\u00a0on commit 3a2ec9b on this issue https://jenkins.thetaphi.de/job/Lucene-Solr-7.x-Linux/2183/:\n\n\nChecking out Revision 82b793df56c8c9fb50c29f46f39465453a87f2b2 (refs/remotes/origin/branch_7x)\n[...]\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestLocalFSCloudBackupRestore -Dtests.method=test -Dtests.seed=7CEE52DAF9E4606 -Dtests.multiplier=3 -Dtests.slow=true -Dtests.locale=bs-Cyrl -Dtests.timezone=America/Boise -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 15.8s J2 | TestLocalFSCloudBackupRestore.test <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: Node 127.0.0.1:40147_solr has 6 replicas. Expected num replicas : 3 state file \n   [junit4]    > DocCollection(backuprestore_restored//collections/backuprestore_restored/state.json/13)={\n   [junit4]    >   \"pullReplicas\":0,\n   [junit4]    >   \"replicationFactor\":2,\n   [junit4]    >   \"shards\":{\n   [junit4]    >     \"shard2\":{\n   [junit4]    >       \"range\":\"0-7fffffff\",\n   [junit4]    >       \"state\":\"active\",\n   [junit4]    >       \"replicas\":{\n   [junit4]    >         \"core_node122\":{\n   [junit4]    >           \"core\":\"backuprestore_restored_shard2_replica_n121\",\n   [junit4]    >           \"base_url\":\"https://127.0.0.1:40147/solr\",\n   [junit4]    >           \"node_name\":\"127.0.0.1:40147_solr\",\n   [junit4]    >           \"state\":\"active\",\n   [junit4]    >           \"type\":\"NRT\",\n   [junit4]    >           \"force_set_state\":\"false\",\n   [junit4]    >           \"leader\":\"true\"},\n   [junit4]    >         \"core_node128\":{\n   [junit4]    >           \"core\":\"backuprestore_restored_shard2_replica_n127\",\n   [junit4]    >           \"base_url\":\"https://127.0.0.1:40147/solr\",\n   [junit4]    >           \"node_name\":\"127.0.0.1:40147_solr\",\n   [junit4]    >           \"state\":\"active\",\n   [junit4]    >           \"type\":\"NRT\",\n   [junit4]    >           \"force_set_state\":\"false\"}},\n   [junit4]    >       \"stateTimestamp\":\"1529839664323341145\"},\n   [junit4]    >     \"shard1_1\":{\n   [junit4]    >       \"range\":\"c0000000-ffffffff\",\n   [junit4]    >       \"state\":\"active\",\n   [junit4]    >       \"replicas\":{\n   [junit4]    >         \"core_node124\":{\n   [junit4]    >           \"core\":\"backuprestore_restored_shard1_1_replica_n123\",\n   [junit4]    >           \"base_url\":\"https://127.0.0.1:40147/solr\",\n   [junit4]    >           \"node_name\":\"127.0.0.1:40147_solr\",\n   [junit4]    >           \"state\":\"active\",\n   [junit4]    >           \"type\":\"NRT\",\n   [junit4]    >           \"force_set_state\":\"false\",\n   [junit4]    >           \"leader\":\"true\"},\n   [junit4]    >         \"core_node130\":{\n   [junit4]    >           \"core\":\"backuprestore_restored_shard1_1_replica_n129\",\n   [junit4]    >           \"base_url\":\"https://127.0.0.1:40147/solr\",\n   [junit4]    >           \"node_name\":\"127.0.0.1:40147_solr\",\n   [junit4]    >           \"state\":\"active\",\n   [junit4]    >           \"type\":\"NRT\",\n   [junit4]    >           \"force_set_state\":\"false\"}},\n   [junit4]    >       \"stateTimestamp\":\"1529839664323360463\"},\n   [junit4]    >     \"shard1_0\":{\n   [junit4]    >       \"range\":\"80000000-bfffffff\",\n   [junit4]    >       \"state\":\"active\",\n   [junit4]    >       \"replicas\":{\n   [junit4]    >         \"core_node126\":{\n   [junit4]    >           \"core\":\"backuprestore_restored_shard1_0_replica_n125\",\n   [junit4]    >           \"base_url\":\"https://127.0.0.1:40147/solr\",\n   [junit4]    >           \"node_name\":\"127.0.0.1:40147_solr\",\n   [junit4]    >           \"state\":\"active\",\n   [junit4]    >           \"type\":\"NRT\",\n   [junit4]    >           \"force_set_state\":\"false\",\n   [junit4]    >           \"leader\":\"true\"},\n   [junit4]    >         \"core_node132\":{\n   [junit4]    >           \"core\":\"backuprestore_restored_shard1_0_replica_n131\",\n   [junit4]    >           \"base_url\":\"https://127.0.0.1:40147/solr\",\n   [junit4]    >           \"node_name\":\"127.0.0.1:40147_solr\",\n   [junit4]    >           \"state\":\"active\",\n   [junit4]    >           \"type\":\"NRT\",\n   [junit4]    >           \"force_set_state\":\"false\"}},\n   [junit4]    >       \"stateTimestamp\":\"1529839664323379971\"}},\n   [junit4]    >   \"router\":{\"name\":\"compositeId\"},\n   [junit4]    >   \"maxShardsPerNode\":\"6\",\n   [junit4]    >   \"autoAddReplicas\":\"true\",\n   [junit4]    >   \"nrtReplicas\":2,\n   [junit4]    >   \"tlogReplicas\":0}\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([7CEE52DAF9E4606:8F9ADAF701622BFE]:0)\n   [junit4]    > \tat org.apache.solr.cloud.api.collections.AbstractCloudBackupRestoreTestCase.lambda$testBackupAndRestore$1(AbstractCloudBackupRestoreTestCase.java:346)\n   [junit4]    > \tat java.base/java.util.HashMap.forEach(HashMap.java:1341)\n   [junit4]    > \tat org.apache.solr.cloud.api.collections.AbstractCloudBackupRestoreTestCase.testBackupAndRestore(AbstractCloudBackupRestoreTestCase.java:345)\n   [junit4]    > \tat org.apache.solr.cloud.api.collections.AbstractCloudBackupRestoreTestCase.test(AbstractCloudBackupRestoreTestCase.java:145)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n   [junit4]    > \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n   [junit4]    > \tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n   [junit4]    > \tat java.base/java.lang.Thread.run(Thread.java:844)\n[...]\n   [junit4]   2> NOTE: test params are: codec=HighCompressionCompressingStoredFields(storedFieldsFormat=CompressingStoredFieldsFormat(compressionMode=HIGH_COMPRESSION, chunkSize=3858, maxDocsPerChunk=6, blockSize=4), termVectorsFormat=CompressingTermVectorsFormat(compressionMode=HIGH_COMPRESSION, chunkSize=3858, blockSize=4)), sim=RandomSimilarity(queryNorm=true): {}, locale=bs-Cyrl, timezone=America/Boise\n   [junit4]   2> NOTE: Linux 4.13.0-41-generic amd64/Oracle Corporation 10.0.1 (64-bit)/cpus=8,threads=1,free=134185200,total=518979584\n\n ",
            "author": "Steve Rowe",
            "id": "comment-16522446"
        },
        {
            "date": "2018-06-25T15:43:44+0000",
            "content": "Thanks Steve! I'll look into it tomorrow. I beasted this test quite a bit before committing but looks like Jenkins uncovered something\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16522449"
        },
        {
            "date": "2018-06-26T11:09:53+0000",
            "content": "Commit c33bb65cf6e45a131d36c887aac77b7791d43bcf in lucene-solr's branch refs/heads/master from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c33bb65 ]\n\nSOLR-11807: Test code didn't take into account changing maxShardsPerNode for one code path ",
            "author": "ASF subversion and git services",
            "id": "comment-16523579"
        },
        {
            "date": "2018-06-27T06:15:31+0000",
            "content": "Commit 0741a9834ca1c7bef5e350c3f5d5181b445d61b9 in lucene-solr's branch refs/heads/branch_7x from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0741a98 ]\n\nSOLR-11807: Test code didn't take into account changing maxShardsPerNode for one code path\n\n(cherry picked from commit c33bb65) ",
            "author": "ASF subversion and git services",
            "id": "comment-16524624"
        },
        {
            "date": "2018-07-31T22:19:33+0000",
            "content": "Commit c9e3c456e304522c0c37950d520c19c1565625f7 in lucene-solr's branch refs/heads/master from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c9e3c45 ]\n\nSOLR-11807: Simply testing of createNodeSet with restoring collection and fixing the test failure ",
            "author": "ASF subversion and git services",
            "id": "comment-16564428"
        },
        {
            "date": "2018-07-31T22:20:24+0000",
            "content": "Commit a0afe4646f6fe08497a234834b59abc74b4c4208 in lucene-solr's branch refs/heads/branch_7x from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a0afe46 ]\n\nSOLR-11807: Simply testing of createNodeSet with restoring collection and fixing the test failure\n\n(cherry picked from commit c9e3c45) ",
            "author": "ASF subversion and git services",
            "id": "comment-16564430"
        }
    ]
}