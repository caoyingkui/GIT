{
    "id": "SOLR-8680",
    "title": "Distribute JDBC driver as a separate jar",
    "details": {
        "components": [],
        "type": "New Feature",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Currently the JDBC driver comes included with the Solrj libraries. As the JDBC driver matures it will be useful to distribute a separate jar which includes all of the dependancies, rather then having to include all the Solrj dependancies separately. This will make it much easier to install and ship with products like JasperSoft, Spotfire and Tableau.",
    "attachments": {
        "SOLR-8680.patch": "https://issues.apache.org/jira/secure/attachment/12791789/SOLR-8680.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-02-16T16:43:29+0000",
            "author": "Kevin Risden",
            "content": "This would be great since it would eliminate having to copy all the jars from solrj-lib and the solrj-solrj jar. Currently its a bit of a pain to test releases with each build requiring a lot of copying to the right place. ",
            "id": "comment-15148881"
        },
        {
            "date": "2016-02-16T16:44:01+0000",
            "author": "Kevin Risden",
            "content": "If this gets implemented then documentation from SOLR-8521 would be a lot easier. ",
            "id": "comment-15148882"
        },
        {
            "date": "2016-03-07T17:29:36+0000",
            "author": "Kevin Risden",
            "content": "Linked to JIRAs that are related and this would help them. ",
            "id": "comment-15183311"
        },
        {
            "date": "2016-03-07T17:47:02+0000",
            "author": "Joel Bernstein",
            "content": "Steve Rowe, I was wondering if you had some ideas about the best way to package up and distribute the jdbc driver as a separate jar? Basically whats needed is a single jar that contains all the Solrj dependancies.  ",
            "id": "comment-15183342"
        },
        {
            "date": "2016-03-07T17:47:39+0000",
            "author": "Kevin Risden",
            "content": "No idea if this is the right approach at all. It seems to build a solr-solrj-jdbc jar properly. Will test here shortly to make sure it has the right pieces. ",
            "id": "comment-15183344"
        },
        {
            "date": "2016-03-07T17:48:55+0000",
            "author": "Steve Rowe",
            "content": "Joel Bernstein, Kevin Risden, I'll take a look. ",
            "id": "comment-15183347"
        },
        {
            "date": "2016-03-07T18:10:09+0000",
            "author": "Kevin Risden",
            "content": "I just tested the solr-solrj-jdbc*.jar file that is created with the above patch seems to include everything required for JDBC to work. It gets packaged up in the tar.gz when running \"ant package\" as well. ",
            "id": "comment-15183373"
        },
        {
            "date": "2016-03-07T18:11:23+0000",
            "author": "Kevin Risden",
            "content": "The fully assembled jar is really a full SolrJ jar and not just for JDBC. It includes all the solrj-libs and solr-solrj jar. Maybe it should be renamed from solr-solrj-jdbc to something else? ",
            "id": "comment-15183375"
        },
        {
            "date": "2016-03-07T18:23:54+0000",
            "author": "Uwe Schindler",
            "content": "Very important: Please don't deploy this artifact on Maven Central! If you really want a UBER-JAR file, use Maven Shade plugin and rewrite package names. ",
            "id": "comment-15183397"
        },
        {
            "date": "2016-03-07T18:48:13+0000",
            "author": "Joel Bernstein",
            "content": "Thanks Uwe Schindler and Steve Rowe, we'll definitely need guidance on how do this properly. The goal is to have the JDBC driver be as easy as possible to install in clients like Apache Zeppelin. Most of these types of clients don't pull from maven. And once maven gets involved the dependancies are managed anyway so I'm not sure a maven artifact is needed.\nSo perhaps it makes sense to start with a packaged jar that is distributed with the Solr binaries and a separate link from the Solr home page. ",
            "id": "comment-15183445"
        },
        {
            "date": "2016-03-07T19:03:12+0000",
            "author": "Uwe Schindler",
            "content": "In fact this is a complete solrj.jar file with all dependencies munged together without respecting packages and licenses. This is not good practise to have on Maven Central for several reasons:\n\n\n\tit leads to class path hell, because the user cannot figure out class duplicates (so if he has slf4j or httpclient in his classpath, by adding the uber-jar, he would have 2 versions of all class files on classpath, possibly incompatible versions without knowing). So Uber JARs should use Maven Shade plugin or the jarjar Ant plugin to rewrite all package names in dependecies to something like org.apache.solr.3rdparty.*; e.g. forbiddenapis does this to bundle ASM (which is a typical candidate that always breaks in Uber-JARs, because versions are incompatible to eac other, see https://github.com/policeman-tools/forbidden-apis/blob/master/build.xml#L361-L380 how to do this). If you do this you can name this file solr-solrj-uber.jar and also deploy on Maven Central without problems. But you have to place all additional LICENSE files in the META-INF folder (not only the ASF license).\n\n\n\n\n\twont work with Java 9 anyways once modules are there, if you dont rewrite package names\n\n\n\nJust to conclude here: It may also be a good idea for other people to have an solrj uber JAR on Maven central (which would have no dependencies), because this helps people who get into conflicts e.g. with httpclient in their classpath. I have seen this quite often for SolrJ (solrj needs httpclient4 but another lib requires version 3 -> boom).\n\nThose people could just user solr-solrj-uber.jar and have a solr client without any dependencies and because all packages are rewritten it wont conflict with other jars in classpath, ",
            "id": "comment-15183468"
        },
        {
            "date": "2016-03-07T19:07:22+0000",
            "author": "Kevin Risden",
            "content": "I don't think this should even go on Maven Central. Users of maven can just pull in solr-solrj and it will work correctly if they are building java applications.\n\nThe only reason to have this uber jar is to support 3rd party JDBC clients which need to have all of the solrj dependent jars on the classpath. Currently there are ~11 jars that need to be added to the classpath and its cumbersome to do so. Its more of a convenience to only have to add 1 jar to the classpath. ",
            "id": "comment-15183474"
        },
        {
            "date": "2016-03-07T19:09:58+0000",
            "author": "Uwe Schindler",
            "content": "That is not allowed in the way it is done. All licenses are missing. So I'd suggest to got the correct Apache way and package the Uber JAR correctly. The attached patch just copying files into one JAR is a no-go. ",
            "id": "comment-15183484"
        },
        {
            "date": "2016-03-07T19:13:50+0000",
            "author": "Kevin Risden",
            "content": "Thanks Uwe Schindler for the explanation. ",
            "id": "comment-15183490"
        },
        {
            "date": "2016-03-07T19:19:05+0000",
            "author": "Joel Bernstein",
            "content": "I think the best way to approach this is to build the uber jar (Licenses included), and place it a separate location in the release where it won't be added to the Solrj class path. Perhaps a new directory called jdbc somewhere in the build. ",
            "id": "comment-15183504"
        },
        {
            "date": "2016-03-07T20:05:05+0000",
            "author": "Steve Rowe",
            "content": "If I'm reading the patch right, there is nothing specific to JDBC in the produced uber-jar.  If that doesn't change, I don't think we should include jdbc in the name. solrj-shaded-<version>.jar maybe? ",
            "id": "comment-15183603"
        },
        {
            "date": "2016-03-07T20:14:13+0000",
            "author": "Joel Bernstein",
            "content": "I think having JDBC in name would be helpful. It helps to clarify that this is the jar that is needed for JDBC clients. ",
            "id": "comment-15183621"
        },
        {
            "date": "2016-03-07T20:18:07+0000",
            "author": "Steve Rowe",
            "content": "But as Uwe indicated above, there are other situations where a Solrj uber-jar would be useful, and including \"jdbc\" in the name would be confusing for people who want such a thing.  Maybe documentation and/or a  jdbc/ directory with a symlink to the uber-jar? ",
            "id": "comment-15183631"
        },
        {
            "date": "2016-03-07T20:28:11+0000",
            "author": "Joel Bernstein",
            "content": "I could always be wrong about this but I suspect most people using Solrj will be including it through maven. The jdbc clients though will be picking through the directory structure hunting for the jar. So anything that can help this process will be good. But if you feel strongly about leaving jdbc out of the file name than we can leave it out and document / symlink. ",
            "id": "comment-15183642"
        }
    ]
}