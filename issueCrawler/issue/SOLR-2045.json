{
    "id": "SOLR-2045",
    "title": "DIH doesn't release jdbc connections in conjunction with DB2",
    "details": {
        "affect_versions": "1.4.1,                                            3.6,                                            4.0",
        "status": "Closed",
        "fix_versions": [
            "4.1",
            "6.0"
        ],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Using the JDBCDatasource in conjunction with the DB2 JDBC Drivers results in the following error when the DIH tries to close the the connection due to active transactions. As a consequence each delta im port or full import opens a new connection without closing it. So the maximum amount of connections will be reached soon. Setting the connection to readOnly or changing the transaction isolation level doesn't help neither.\n\nThe JDBC Driver I used: \"com.ibm.db2.jcc.DB2Driver\" relieing in db2jcc4.jar shipped with DB2 Express 9.7 for example\n\nHere is the stack trace...\n\n14.08.2010 01:49:51 org.apache.solr.handler.dataimport.JdbcDataSource closeConnection\nFATAL: Ignoring Error when closing connection\ncom.ibm.db2.jcc.am.SqlException: [jcc][10251][10308][4.8.87] java.sql.Connection.close() requested while a transaction is in progress on the connection.The transaction remains active, and the connection cannot be closed. ERRORCODE=-4471, SQLSTATE=null\n\tat com.ibm.db2.jcc.am.gd.a(gd.java:660)\n\tat com.ibm.db2.jcc.am.gd.a(gd.java:60)\n\tat com.ibm.db2.jcc.am.gd.a(gd.java:120)\n\tat com.ibm.db2.jcc.am.lb.u(lb.java:1202)\n\tat com.ibm.db2.jcc.am.lb.x(lb.java:1225)\n\tat com.ibm.db2.jcc.am.lb.v(lb.java:1211)\n\tat com.ibm.db2.jcc.am.lb.close(lb.java:1195)\n\tat com.ibm.db2.jcc.uw.UWConnection.close(UWConnection.java:838)\n\tat org.apache.solr.handler.dataimport.JdbcDataSource.closeConnection(JdbcDataSource.java:399)\n\tat org.apache.solr.handler.dataimport.JdbcDataSource.close(JdbcDataSource.java:390)\n\tat org.apache.solr.handler.dataimport.DataConfig$Entity.clearCache(DataConfig.java:173)\n\tat org.apache.solr.handler.dataimport.DataConfig.clearCaches(DataConfig.java:331)\n\tat org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:339)\n\tat org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:389)\n\tat org.apache.solr.handler.dataimport.DataImporter$1.run(DataImporter.java:370)\n\nWell the issue can be solved by invoking a commit or rollback directly before the connection.close() statement. Here is the code snipped of changes I made in JdbcDatasource.java\n\n  private void closeConnection()  {\n    try {\n      if (conn != null) {\n\n    \tif (conn.isReadOnly())\n\t\t\n{\n\t\t\tLOG.info(\"connection is readonly, therefore rollback\");\n\t\t\tconn.rollback();\n\t\t}\n else\n\t\t{\n\t\t\tLOG.info(\"connection is not readonly, therefore commit\");\n\t\t\tconn.commit();\n\t\t}\n\n        conn.close();\n      }\n    } catch (Exception e) \n{\n      LOG.error(\"Ignoring Error when closing connection\", e);\n    }\n  }",
    "attachments": {
        "SOLR-2045.patch": "https://issues.apache.org/jira/secure/attachment/12552334/SOLR-2045.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Lance Norskog",
            "id": "comment-12915577",
            "date": "2010-09-28T00:49:01+0000",
            "content": "Mysql has the same problem: incremental updates do not reuse a connection and therefore fail. "
        },
        {
            "author": "Kjetil \u00d8degaard",
            "id": "comment-12933479",
            "date": "2010-11-18T17:10:13+0000",
            "content": "We see the same issue on Oracle (11g). "
        },
        {
            "author": "Alexey Serba",
            "id": "comment-13047948",
            "date": "2011-06-11T16:55:54+0000",
            "content": "I encountered the same problem with Derby database. The reason is that you need to issue commit or rollback before releasing jdbc connection (that's ridiculous requirement but it is what it is). So this patch fixing this problem.\n\nBut there's even more easy workaround that doesn't require patching Solr sources. You can set data source autoCommit property to true.\n\nSetting the connection to readOnly or changing the transaction isolation level doesn't help neither.\nreadOnly property should help as well, but there's a bug in parameters parsing logic. Documentation claims that readOnly parameter causes setting autoCommit property to true, but that's not true as the next conditional statement resets this property back to false.\n\n\"JDBCDataSource.createConnectionFactory:164\"\nif (Boolean.parseBoolean(initProps.getProperty(\"readOnly\"))) {\n  c.setReadOnly(true);\n  // Add other sane defaults\n  c.setAutoCommit(true);\n  c.setTransactionIsolation(Connection.TRANSACTION_READ_UNCOMMITTED);\n  c.setHoldability(ResultSet.CLOSE_CURSORS_AT_COMMIT);\n}\nif (!Boolean.parseBoolean(initProps.getProperty(\"autoCommit\"))) {\n  c.setAutoCommit(false);\n}\n\n "
        },
        {
            "author": "James Dyer",
            "id": "comment-13491788",
            "date": "2012-11-06T20:27:23+0000",
            "content": "For this issue I will add Derby alongside HSQLDB as a random option for testing SqlEntityProcessor, building on the new tests added with SOLR-3856.  The bug described here fails with Derby but not HSQLDB, so it is good to have at least RDBMS to test with. "
        },
        {
            "author": "James Dyer",
            "id": "comment-13491791",
            "date": "2012-11-06T20:35:00+0000",
            "content": "This patch fixes the problem by issuing a \"commit\" before closing the connection, as suggested by Fenior.  \n\nI added Derby as a randomly-selected test db to have coverage for this bug.  As derby is only needed for testing, I configured Ivy to locate the derby jar in the same directory as the hsqldb jar, under the dih example.  \n\nI also added the 2 db jars to the Eclipse dot.classpath and to the Idea config files so that you can easily run these tests from either ide. (this is my first exposure to Idea but with all the good words I've heard on this mailing list I thought this a good time to try it out...)\n\nI plan on committing this patch tomorrow. "
        },
        {
            "author": "James Dyer",
            "id": "comment-13495429",
            "date": "2012-11-12T17:16:49+0000",
            "content": "new patch to commit. "
        },
        {
            "author": "James Dyer",
            "id": "comment-13495445",
            "date": "2012-11-12T17:45:09+0000",
            "content": "committed...\nTrunk: r1408364/r1408368 (CHANGES.txt)\n4x: r1408370\n\nThanks, Fenlor.  Sorry it took 2+ years for such an easy change. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13504144",
            "date": "2012-11-26T21:46:33+0000",
            "content": "[branch_4x commit] James Dyer\nhttp://svn.apache.org/viewvc?view=revision&revision=1412266\n\nSOLR-2045: workaround for Locales not supported by Derby\n "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13504153",
            "date": "2012-11-26T21:46:38+0000",
            "content": "[trunk commit] James Dyer\nhttp://svn.apache.org/viewvc?view=revision&revision=1412262\n\nSOLR-2045: workaround for Locales not supported by Derby\n "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13610510",
            "date": "2013-03-22T16:14:11+0000",
            "content": "[branch_4x commit] James Dyer\nhttp://svn.apache.org/viewvc?view=revision&revision=1412266\n\nSOLR-2045: workaround for Locales not supported by Derby "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13610553",
            "date": "2013-03-22T16:17:16+0000",
            "content": "[branch_4x commit] Steven Rowe\nhttp://svn.apache.org/viewvc?view=revision&revision=1408688\n\nSOLR-2045: Maven configuration: add derby test dependency to DIH (merge trunk r1408685) "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13610559",
            "date": "2013-03-22T16:17:34+0000",
            "content": "[branch_4x commit] James Dyer\nhttp://svn.apache.org/viewvc?view=revision&revision=1408389\n\nSOLR-2045:  fix svn:eol-style for sha1 file "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13610560",
            "date": "2013-03-22T16:17:37+0000",
            "content": "[branch_4x commit] James Dyer\nhttp://svn.apache.org/viewvc?view=revision&revision=1408380\n\nSOLR-2045:  suppress creation of derby.log during test "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13610561",
            "date": "2013-03-22T16:17:42+0000",
            "content": "[branch_4x commit] James Dyer\nhttp://svn.apache.org/viewvc?view=revision&revision=1408370\n\nSOLR-2045:  DIH doesn't release jdbc connections for some databases "
        }
    ]
}