{
    "id": "LUCENE-5489",
    "title": "Add query rescoring API",
    "details": {
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.8",
            "6.0"
        ]
    },
    "description": "When costly scoring factors are used during searching, a common\napproach is to do a cheaper / basic query first, collect the top few\nhundred hits, and then rescore those hits using the more costly\nquery.\n\nIt's not clear/simple to do this with Lucene today; I think we should\nmake it easier.",
    "attachments": {
        "LUCENE-5489.patch": "https://issues.apache.org/jira/secure/attachment/12632863/LUCENE-5489.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13921133",
            "author": "Michael McCandless",
            "content": "An initial patch, extracted from LUCENE-5288.  It just takes the TopDocs from the first pass search, makes a Filter, runs the second pass search with that Filter, and then does a linear combination of the scores and resorts by that.\n\nThis is just a start; we need to iterate.\n\nE.g. it won't work with \"deep paging\", when the user wants to page beyond the topN of the first pass search. ",
            "date": "2014-03-05T18:08:12+0000"
        },
        {
            "id": "comment-13939022",
            "author": "Michael McCandless",
            "content": "New patch, just fixing javadocs / nocommits ... I think this is ready, and we can iterate later for future improvements. ",
            "date": "2014-03-18T09:54:08+0000"
        },
        {
            "id": "comment-13939053",
            "author": "Robert Muir",
            "content": "+1 to commit this. API is very simple and nice. I tried to think of a better name for the filter, but its private, so its not important. ",
            "date": "2014-03-18T10:59:21+0000"
        },
        {
            "id": "comment-13939069",
            "author": "Simon Willnauer",
            "content": "it's awesome that we are adding this. I have almost the same code on a high level in Elasticsearch and it works just great. Ideally I'd love to drop the code from ES and replace it with the lucene one but I think we need to iterate more on this. From what I can see the biggest issues are :\n\n\n\tthe way how scores are combined is hardcoded (we just multiply)\n\twe only have one way to rescore ie. we use another query by default which would be nice if the interface would allow us to use other ways of rescorers.\n\tmost of the goodies are hidden in a static method I think we should add a nice interface / abstract class\n\tit would be awesome if the interface could provide a way to get an Explanation like other queries...\n\n\n\nwhat I think would make sense is something like this:\n\n\npublic class AbstractRescorer implements Rescore {\n\n  @Override\n  public TopDocs rescore(IndexSearcher searcher, TopDocs topDocs, int topN) {\n     // do what is done int he static method\n  }\n\n  protected abstract float combine(float originalScore, float resocredScore);\n  \n  @Override \n  public Explanation explain(IndexSearcher searcher, Explanation sourceExplain, int docId) {\n    // impl explain\n  }\n\n}\n\n\n\nI hope this makes sense?\n\n ",
            "date": "2014-03-18T11:10:27+0000"
        },
        {
            "id": "comment-13939075",
            "author": "Robert Muir",
            "content": "Can it just be a one method abstract class (essentially the combine)? The patch could even keep the simple method signature of today, implemented via this (which means there is basically a usable example sitting there in the source code, too) ",
            "date": "2014-03-18T11:18:24+0000"
        },
        {
            "id": "comment-13939079",
            "author": "Simon Willnauer",
            "content": "I'd be totally ok with skipping the Explain that can be fixed later or in user code. I think as long as I can override the combine it's actually helpful. I think for users the static simple method should remain but I don't think the (non-static) rescore method should be polluted with a Query since that is impl. specifc and can be passed via Ctor args or so but still be hidden if the user uses the simple static API. ",
            "date": "2014-03-18T11:21:57+0000"
        },
        {
            "id": "comment-13940314",
            "author": "Michael McCandless",
            "content": "OK, new patch, folding in Simon's & Rob's feedback (thanks!), adding more tests.\n\nI made an entirely abstract class Rescorer, and then a QueryRescorer subclass that uses a Query to get the 2nd pass scores.  In the future we can have other sources of scores, e.g. an ExpressionRescorer. ",
            "date": "2014-03-19T08:56:37+0000"
        },
        {
            "id": "comment-13942272",
            "author": "Simon Willnauer",
            "content": "hey mike, thanks for the new patch I think you overlooked that one but the signature looks funky:\n\nprotected abstract float combine(float firstPassScore, Float secondPassScore);\n\n\n\nI guess we can use the primitive for both args? I also think this method should only be on QueryRescorer and not in the interface?\n\nI also wonder why you extract the IDs and Scores, I think you should clone the scoreDocs array and sort that first. Then you can just sort the rescored scoreDocs array and simply merge the scores. Once you are done you resort the previously cloned array and we don't need to do all the auto boxing in that hashmap and it's the same sorting we already do? ",
            "date": "2014-03-20T21:03:15+0000"
        },
        {
            "id": "comment-13942278",
            "author": "Simon Willnauer",
            "content": "oh I see the Float was to mark a match / non-match.. I guess we should really just pass a boolean to make thinks clear.  ",
            "date": "2014-03-20T21:06:54+0000"
        },
        {
            "id": "comment-13942364",
            "author": "Michael McCandless",
            "content": "I guess we should really just pass a boolean to make thinks clear.\n\nI'll switch to a boolean; I agree the sig is weird now. ",
            "date": "2014-03-20T21:55:38+0000"
        },
        {
            "id": "comment-13942369",
            "author": "Michael McCandless",
            "content": "I also think this method should only be on QueryRescorer and not in the interface?\n\nWoops, right, I'll move it.\n\n\nI also wonder why you extract the IDs and Scores, I think you should clone the scoreDocs array and sort that first. Then you can just sort the rescored scoreDocs array and simply merge the scores. Once you are done you resort the previously cloned array and we don't need to do all the auto boxing in that hashmap and it's the same sorting we already do?\n\nI think this can wait?  It's just an optimization (making the code more hairy but a bit faster).  I'll put a TODO... ",
            "date": "2014-03-20T21:56:49+0000"
        },
        {
            "id": "comment-13942377",
            "author": "Simon Willnauer",
            "content": "yeah it can wait I guess - please go ahead and put a TODO ",
            "date": "2014-03-20T22:01:28+0000"
        },
        {
            "id": "comment-13942469",
            "author": "Michael McCandless",
            "content": "New patch, folding in feedback ... I think it's ready. ",
            "date": "2014-03-20T23:00:39+0000"
        },
        {
            "id": "comment-13942532",
            "author": "Robert Muir",
            "content": "This looks good, thanks for moving combine(), as the expression already indicates how to combine with the score. It would be cool for us to add that subclass in a followup issue, then we have a better feeling the abstractions are really working. ",
            "date": "2014-03-20T23:42:37+0000"
        },
        {
            "id": "comment-13942910",
            "author": "Simon Willnauer",
            "content": "I think this looks great +1 to commit ",
            "date": "2014-03-21T09:21:23+0000"
        },
        {
            "id": "comment-13942930",
            "author": "ASF subversion and git services",
            "content": "Commit 1579911 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1579911 ]\n\nLUCENE-5489: add Rescorer/QueryRescorer ",
            "date": "2014-03-21T10:08:38+0000"
        },
        {
            "id": "comment-13942933",
            "author": "ASF subversion and git services",
            "content": "Commit 1579913 from Michael McCandless in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1579913 ]\n\nLUCENE-5489: add Rescorer/QueryRescorer ",
            "date": "2014-03-21T10:10:39+0000"
        },
        {
            "id": "comment-13942936",
            "author": "ASF subversion and git services",
            "content": "Commit 1579914 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1579914 ]\n\nLUCENE-5489: add changes ",
            "date": "2014-03-21T10:12:02+0000"
        },
        {
            "id": "comment-13942937",
            "author": "ASF subversion and git services",
            "content": "Commit 1579915 from Michael McCandless in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1579915 ]\n\nLUCENE-5489: add changes ",
            "date": "2014-03-21T10:12:16+0000"
        },
        {
            "id": "comment-13942938",
            "author": "Michael McCandless",
            "content": "Thanks guys! ",
            "date": "2014-03-21T10:12:26+0000"
        },
        {
            "id": "comment-13943110",
            "author": "ASF subversion and git services",
            "content": "Commit 1579948 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1579948 ]\n\nLUCENE-5489: fix test bug ",
            "date": "2014-03-21T14:48:01+0000"
        },
        {
            "id": "comment-13943111",
            "author": "ASF subversion and git services",
            "content": "Commit 1579949 from Michael McCandless in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1579949 ]\n\nLUCENE-5489: fix test bug ",
            "date": "2014-03-21T14:48:28+0000"
        },
        {
            "id": "comment-13982624",
            "author": "Uwe Schindler",
            "content": "Close issue after release of 4.8.0 ",
            "date": "2014-04-27T23:26:00+0000"
        }
    ]
}