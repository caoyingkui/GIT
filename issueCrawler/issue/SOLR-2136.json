{
    "id": "SOLR-2136",
    "title": "Function Queries: if() function",
    "details": {
        "affect_versions": "1.4.1",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [
            "search"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Add an if() function which will enable conditional function queries.\n\nThe function could be modeled after a spreadsheet if function (e.g: http://wiki.services.openoffice.org/wiki/Documentation/How_Tos/Calc:_IF_function)\n\nIF(test; value1; value2) where:\n    test is or refers to a logical value or expression that returns a logical value (TRUE or FALSE).\n    value1 is the value that is returned by the function if test yields TRUE.\n    value2 is the value that is returned by the function if test yields FALSE.\n\nIf value2 is omitted it is assumed to be FALSE; if value1 is also omitted it is assumed to be TRUE.\n\nExample use:\nif(color==\"red\"; 100; if(color==\"green\"; 50; 25))\nThis function will check the document field \"color\", and if it is \"red\" return 100, if it is \"green\" return 50, else return 25.",
    "attachments": {
        "SOLR-2136.patch": "https://issues.apache.org/jira/secure/attachment/12480292/SOLR-2136.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Nils Weber",
            "id": "comment-12989182",
            "date": "2011-02-01T12:43:07+0000",
            "content": "any news on that one and/or on SOLR-2137 yet?\n\nregards JC "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13038693",
            "date": "2011-05-24T18:06:48+0000",
            "content": "Here's a first cut at adding boolean support to function queries, if(), exists(), and(), or(), and not().\n\nNo tests yet. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13043030",
            "date": "2011-06-02T20:29:25+0000",
            "content": "Here's an update with tests that builds out more boolean support, including true/false constants.  This also adds xor() and def() functions.\n\ndef is short for default and yields the first value where exists()==true. Thus\ndef(myfield, 1.0) is equivalent to if(exists(myfield),myfield,1.0)\n\nI think this is ready to commit! "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13045148",
            "date": "2011-06-06T21:46:05+0000",
            "content": "Great Yonik!\nIs it possible to have exists() work on multi valued fields too without crashing? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13045230",
            "date": "2011-06-07T01:15:11+0000",
            "content": "Is it possible to have exists() work on multi valued fields too without crashing?\n\nNot currently... but note that exists() works on subqueries too, not just fields.\n\nSo a slow way to do it would be\n\n  ...exists(query($qq))&qq=myfield:[* TO *]\n\n\n\nOr a faster workaround could be to index a special EXISTS token or EMPTY token and do\n\n  ...exists(query($qq))&qq=myfield:EXISTS\n\n\n\nSee the test code in TestFunctionQuery for an easy way to use pseudo-fields to test this stuff.\n\n "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-13048642",
            "date": "2011-06-13T16:40:12+0000",
            "content": "I've met a strange behavior. With empty index, start example solr. Then hit:\n\nhttp://localhost:8983/solr/select/?q=\n{!func}\nif(exists(f1_b),10,20)&debug=results\n\nyou got an empty xml as expected. Then hit the above URL again, you got the following exception:\n\n\nSEVERE: java.lang.ClassCastException: org.apache.solr.search.ValueSourceParser$60$1 cannot be cast to org.apache.solr.search.function.SingleFunction\n\tat org.apache.solr.search.function.SimpleBoolFunction.equals(SimpleBoolFunction.java:66)\n\tat org.apache.solr.search.function.IfFunction.equals(IfFunction.java:137)\n\tat org.apache.solr.search.function.FunctionQuery.equals(FunctionQuery.java:202)\n\tat org.apache.solr.search.QueryResultKey.equals(QueryResultKey.java:78)\n\tat java.util.HashMap.getEntry(HashMap.java:349)\n\tat java.util.LinkedHashMap.get(LinkedHashMap.java:280)\n\tat org.apache.solr.search.LRUCache.get(LRUCache.java:129)\n\tat org.apache.solr.search.SolrIndexSearcher.getDocListC(SolrIndexSearcher.java:991)\n\tat org.apache.solr.search.SolrIndexSearcher.search(SolrIndexSearcher.java:346)\n\tat org.apache.solr.handler.component.QueryComponent.process(QueryComponent.java:441)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:239)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:129)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1308)\n\tat org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:353)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:248)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1212)\n\tat org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:399)\n\tat org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\n\tat org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)\n\tat org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)\n\tat org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:450)\n\tat org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)\n\tat org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)\n\tat org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)\n\tat org.mortbay.jetty.Server.handle(Server.java:326)\n\tat org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)\n\tat org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:928)\n\tat org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:549)\n\tat org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)\n\tat org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)\n\tat org.mortbay.jetty.bio.SocketConnector$Connection.run(SocketConnector.java:228)\n\tat org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13048646",
            "date": "2011-06-13T16:49:17+0000",
            "content": "Thanks Koji, I just committed a fix for this cut'n'paste error. "
        },
        {
            "author": "William Bell",
            "id": "comment-13070274",
            "date": "2011-07-24T23:14:39+0000",
            "content": "Can we add multiValued field support? "
        },
        {
            "author": "William Bell",
            "id": "comment-13070275",
            "date": "2011-07-24T23:23:18+0000",
            "content": "How about on fq? I want to run 1 query and if the numFound > 0, then return that fq, otherwise skip it. This was inspired by your test case:\n\n\"\n{!frange l=1 u=1}\nif(exists(\"f\"),1,0)\" \n\nOk,\nf=specialties:Cardiologist\n\n\n\"fq=if(numfound(query(\"+f+\")),f,*:*)\" \n\n\n\nWill something like that work?\n "
        }
    ]
}