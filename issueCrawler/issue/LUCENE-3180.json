{
    "id": "LUCENE-3180",
    "title": "Can't delete a document using deleteDocument(int docID) if using IndexWriter AND IndexReader",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/index"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "3.2",
        "resolution": "Invalid",
        "status": "Resolved"
    },
    "description": "It is impossible to delete a document with \"reader.deleteDocument(docID)\" if using an IndexWriter too.\n\nusing:\n\nwriter = new IndexWriter(directory, config);\nreader = IndexReader.open(writer, true);\n\n\n\nresults in:\n\n  Exception in thread \"main\" java.lang.UnsupportedOperationException: This IndexReader cannot make any changes to the index (it was opened with readOnly = true)\n      at org.apache.lucene.index.ReadOnlySegmentReader.noWrite(ReadOnlySegmentReader.java:23)\n      at org.apache.lucene.index.ReadOnlyDirectoryReader.acquireWriteLock(ReadOnlyDirectoryReader.java:43)\n      at org.apache.lucene.index.IndexReader.deleteDocument(IndexReader.java:1067)\n      at de.morpheum.morphy.ImpossibleLuceneCode.main(ImpossibleLuceneCode.java:60)\n\n\n\nand using:\n\nwriter = new IndexWriter(directory, config);\nreader = IndexReader.open(directory, false);\n\n\n\nresults in:\n\n  org.apache.lucene.store.LockObtainFailedException: Lock obtain timed out: NativeFSLock@S:\\Java\\Morpheum\\lucene\\write.lock\n      at org.apache.lucene.store.Lock.obtain(Lock.java:84)\n      at org.apache.lucene.index.DirectoryReader.acquireWriteLock(DirectoryReader.java:765)\n      at org.apache.lucene.index.IndexReader.deleteDocument(IndexReader.java:1067)\n      at de.morpheum.morphy.ImpossibleLuceneCode.main(ImpossibleLuceneCode.java:69)",
    "attachments": {
        "ImpossibleLuceneCode.java": "https://issues.apache.org/jira/secure/attachment/12481781/ImpossibleLuceneCode.java"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-06-08T07:16:15+0000",
            "content": "A workaround is:\n\n  for (ScoreDoc scoreDoc : hits) {\n      Document document = reader.document(scoreDoc.doc);\n\n      writer.addDocument(document);\n  }\n\n  writer.deleteDocuments(query);\n\n\n\nBut this is using the query twice and may result in inconsistent data (new added documents may be removed also).\nOn the other hand I can't use the \"writer.deleteDocuments(query)\" first because I need the documents for some updates. ",
            "author": "Danny Lade",
            "id": "comment-13045817"
        },
        {
            "date": "2011-06-08T08:54:16+0000",
            "content": "Danny, this is all expected behavior. I am going to close this issue now since there is no bug here whatsoever. Please can you phrase quickly what you are trying to do and I am happy to explain best practice on the user list. Thanks. ",
            "author": "Simon Willnauer",
            "id": "comment-13045846"
        },
        {
            "date": "2011-06-08T09:41:59+0000",
            "content": "I tried to update some documents got by a query. The main problem ist, that not all documents I found has to be updated (because the information to the changes is calculated outside the index).\n\nIt looks like in the appended example:\n\n\nfor (ScoreDoc scoreDoc : hits) {\n    Document document = reader.document(scoreDoc.doc);\n\n    // calculate changes, if no changes, than ignore it\n    if (!hasChanged) {\n        continue;\n    }\n    \n    // update document\n    // - remove / add fields\n    // - etc\n    \n    // update at index\n    reader.deleteDocument(scoreDoc.doc);\n    writer.addDocument(document);\n}\n\n\n\nSo how do I \"update\" (or \"delete and add\") a collection of documents without a query or term given? ",
            "author": "Danny Lade",
            "id": "comment-13045866"
        },
        {
            "date": "2011-06-08T18:22:07+0000",
            "content": "Hey Danny,\n\nyou can/should modify the lucene index only with one writer at the same time. in your example the IndexReader needs to acquire the lock on the index which is hold by the IndexWriter already. In order to modify the index via IndexReader you need to open it writeable too (pass false to readOnly).\n\nUsually to update a document you use some kind of Unique ID field and pass the ID term plus the document to IndexWriter#updateDocument. This will delete all previous documents with the same ID term indexed.  \n\nHope that helps. You should get some help on the user list too. ",
            "author": "Simon Willnauer",
            "id": "comment-13046120"
        },
        {
            "date": "2011-06-09T09:12:16+0000",
            "content": "Hello Simon,\n\nI will add an ID to my documents, that should do the trick.\n\nThanks for the help. \n ",
            "author": "Danny Lade",
            "id": "comment-13046415"
        }
    ]
}