{
    "id": "LUCENE-1326",
    "title": "Inflater.end() method not always called in FieldsReader",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "2.4"
        ],
        "affect_versions": "2.3.1",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "We've just found an insidious memory leak in our own application as we did not always call Deflater.end() and Inflater.end(). As documented here;\n\nhttp://bugs.sun.com/view_bug.do?bug_id=4797189\n\nThe non-heap memory that the native zlib code uses is not freed in a timely manner.\n\nFieldsWriter appears safe as no exception can be thrown between the Deflater's creation and end() as it uses a ByteArrayOutputStream\n\nFieldsReader, however, is not safe. In the event of a DataFormatException the call to end() will not occur.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2008-07-03T18:32:24+0000",
            "content": "I think a try {} finally {} around both places should be enough.\n\nP.S.: Thank you for the comment, I fixed a missing close() around DeflaterOutputStream/InflaterInputStream and GZIP pendants in two of my servlets and a OAI harvester with Lucene. ",
            "author": "Uwe Schindler",
            "id": "comment-12610312"
        },
        {
            "date": "2008-07-03T18:39:35+0000",
            "content": "\nYou're welcome and thanks for the quick response!\n\nBy the way, our specific issue was with DeflaterOutputStream.close(). It only calls end() on the deflater if it created it itself, so this;\n\ndos = new DeflaterOutputStream();\ntry {\n ...\n} finally {\n  dos.close();\n}\n\nfrees all resources but this does not;\n\ndos = new DeflaterOutputStream(new Deflater(Deflater.BEST_COMPRESSION, true));\ntry {\n ...\n} finally {\n  dos.close();\n}\n\nYou have to call Deflater.end() yourself if you make one when you pass it in. close() is not sufficient.\n\n ",
            "author": "Robert Newson",
            "id": "comment-12610315"
        },
        {
            "date": "2008-07-04T08:55:09+0000",
            "content": "I'll commit a try/finally for both FieldsReader & FieldsWriter.  Thanks Robert! ",
            "author": "Michael McCandless",
            "id": "comment-12610489"
        }
    ]
}