{
    "id": "SOLR-4696",
    "title": "All threads become blocked resulting in hang when bulk adding",
    "details": {
        "affect_versions": "4.1,                                            4.2,                                            4.2.1",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Duplicate"
    },
    "description": "During a bulk load after about 150,000 documents load, thread usage spikes, solr no longer processes any documents.  Any additional documents added result in a new thread until the pool is exhausted.",
    "attachments": {
        "solr.jstack.1": "https://issues.apache.org/jira/secure/attachment/12577854/solr.jstack.1",
        "screenshot-1.jpg": "https://issues.apache.org/jira/secure/attachment/12577858/screenshot-1.jpg",
        "solr.jstack.2": "https://issues.apache.org/jira/secure/attachment/12577855/solr.jstack.2",
        "solrconfig.xml": "https://issues.apache.org/jira/secure/attachment/12577875/solrconfig.xml"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "matt knecht",
            "id": "comment-13626954",
            "date": "2013-04-09T19:00:45+0000",
            "content": "jstack from solr once problem manifests.  Stopped adding documents before running out of threads.  One jstack from each solr node (4 cores, 2 shards) "
        },
        {
            "author": "matt knecht",
            "id": "comment-13626958",
            "date": "2013-04-09T19:04:51+0000",
            "content": "jconsole overview.  Solr stops processing new documents, CPU usage drops, threads grow as new docs are submitted that go into immediate wait. "
        },
        {
            "author": "matt knecht",
            "id": "comment-13627024",
            "date": "2013-04-09T20:09:24+0000",
            "content": "solrconfig mostly default, except for:\n\n     <autoCommit> \n       <!-- 30 minute auto commit -->\n       <maxTime>1800000</maxTime> \n       <maxTime>100000</maxTime>\n       <openSearcher>false</openSearcher> \n     </autoCommit>\n       <autoSoftCommit> \n         <maxTime>1000</maxTime>\n       </autoSoftCommit> "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13627405",
            "date": "2013-04-10T02:54:32+0000",
            "content": "Hmmm, I strongly suspect there's something you're leaving out. Lots of people are indexing more than 150K docs, so what you're seeing must be something peculiar to your setup. Which we need to understand....\n\nSo, how are you indexing documents? SolrJ? DIH? post.jar? Have you bounced any of your servers? Because your autocommit interval is actually pretty long. Doing an <autoCommit> with openSearcher=false is actually a pretty cheap operation that truncates your transaction log and starts a new segment. The transaction log is replayed upon node startup. So if you're bouncing a node, it's going to replay everything since the last hard commit.\n\nSo try lowering the autocommit time to, say, 15 seconds. This doesn't really explain the behavior you're seeing especially if you're not bouncing your Solr servers, but it'd be interesting information. "
        },
        {
            "author": "matt knecht",
            "id": "comment-13627776",
            "date": "2013-04-10T13:26:44+0000",
            "content": "The indexer is a PHP script that's making http calls to the box.  Other than the schema, everything else matches dist.  The nodes were never bounced or restarted, and I've seen the same behavior on 4.0, 4.1, 4.2 and 4.2.1.  Java 6 fails much faster on me than any of the java 7's I've tried.  The VMs are bare fresh installed ubuntu 12.04.2 base + openssh + tomcat7 and Oracle Java.  OpenJDK/JRE were removed.\n\nI started out on solr 4.0 with the default 15 second commit and no soft commits.  I've gradually lengthened the autocommit time, and also turned off calling a commit after X records in the code allowing autocommits to do all that work.\n\nI can get a 2 node 2 core 1 shard setup to index all 350k of my documents with the same setup.\n\nIf there's anything else I can give you to help, I'd be more than happy to supply it.  Setup was automated via ansible so its easy to reproduce for me. "
        },
        {
            "author": "matt knecht",
            "id": "comment-13627823",
            "date": "2013-04-10T14:13:11+0000",
            "content": "When the threads go into busy/wait, a bounce of tomcat will clear the issue and we'll progress.  After that happens I don't let it finish and reset the everything and try again (Different java, different tomcat, different commit patterns, etc... anything that I can think of that will help to clear it) "
        },
        {
            "author": "Walter Underwood",
            "id": "comment-13627890",
            "date": "2013-04-10T15:15:17+0000",
            "content": "How many open connections does netstat show? The normal behavior for PHP is to open a brand-new HTTP connection for every single request. As far as I can tell, PHP has no support for connection pooling or reuse. "
        },
        {
            "author": "matt knecht",
            "id": "comment-13627906",
            "date": "2013-04-10T15:27:56+0000",
            "content": "Nagios shows that both solr nodes had a peak of about 50 open connections, 150 in TIME_WAIT and maybe a dozen in CLOSE_WAIT.  Once the problem manifests, I see around 50 open, and 100 stuck in CLOSE_WAIT.  Both nodes look nearly identical.\n\nThe host doing the insert/updates shows a peak of around 100 open connections and around 9000 in TIME_WAIT.  Once the problem manifests all those TIME_WAIT connections clear.  During one test, I gave tomcat a thread pool of 4096 and saw those eaten up as well.\n\nOn a successful load of all 350k documents, I see a similar pattern, perhaps a few less connections in TIME_WAIT.\n\nThe PHP script sends batches of 30 at a time for processing.\n "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13723945",
            "date": "2013-07-30T15:18:59+0000",
            "content": "I'm pretty sure this is a duplicate of SOLR-5081, we can re-open if not. "
        }
    ]
}