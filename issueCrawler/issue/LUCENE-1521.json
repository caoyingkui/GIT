{
    "id": "LUCENE-1521",
    "title": "\"fdx size mismatch\" exception in StoredFieldsWriter.closeDocStore() when closing index with 500M documents",
    "details": {
        "labels": "",
        "priority": "Critical",
        "components": [
            "core/index"
        ],
        "type": "Bug",
        "fix_versions": [
            "2.4.1",
            "2.9"
        ],
        "affect_versions": "2.4",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "When closing index that contains 500,000,000 randomly generated documents, an exception is thrown:\n\njava.lang.RuntimeException: after flush: fdx size mismatch: 500000000 docs vs 4000000004 length in bytes of _0.fdx\n\tat org.apache.lucene.index.StoredFieldsWriter.closeDocStore(StoredFieldsWriter.java:94)\n\tat org.apache.lucene.index.DocFieldConsumers.closeDocStore(DocFieldConsumers.java:83)\n\tat org.apache.lucene.index.DocFieldProcessor.closeDocStore(DocFieldProcessor.java:47)\n\tat org.apache.lucene.index.DocumentsWriter.closeDocStore(DocumentsWriter.java:367)\n\tat org.apache.lucene.index.IndexWriter.flushDocStores(IndexWriter.java:1688)\n\tat org.apache.lucene.index.IndexWriter.doFlush(IndexWriter.java:3518)\n\tat org.apache.lucene.index.IndexWriter.flush(IndexWriter.java:3442)\n\tat org.apache.lucene.index.IndexWriter.closeInternal(IndexWriter.java:1623)\n\tat org.apache.lucene.index.IndexWriter.close(IndexWriter.java:1588)\n\tat org.apache.lucene.index.IndexWriter.close(IndexWriter.java:1562)\n        ...\n\nThis appears to be a bug at StoredFieldsWriter.java:93:\n\n      if (4+state.numDocsInStore*8 != state.directory.fileLength(state.docStoreSegmentName + \".\" + IndexFileNames.FIELDS_INDEX_EXTENSION))\n\nwhere the multiplication by 8 is causing integer overflow. The fix would be to cast state.numDocsInStore to long before multiplying.\n\nIt appears that this is another instance of the mistake that caused bug LUCENE-1519. I did a cursory seach for *8 against the code to see if there might be yet more instances of the same mistake, but found none.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2009-01-16T15:59:49+0000",
            "content": "Ugh, right.  Plus another one (* 16) in TermVectorsTermsWriter.java.  I'll fix. ",
            "author": "Michael McCandless",
            "id": "comment-12664544"
        },
        {
            "date": "2009-01-16T16:19:00+0000",
            "content": "Committed revision 735043.  Thanks Shon! ",
            "author": "Michael McCandless",
            "id": "comment-12664550"
        },
        {
            "date": "2009-02-19T01:37:22+0000",
            "content": "Reopening for backport to 2.4.1. ",
            "author": "Michael McCandless",
            "id": "comment-12674860"
        },
        {
            "date": "2009-02-19T10:10:25+0000",
            "content": "Committed revision 745803 on 2.4 branch. ",
            "author": "Michael McCandless",
            "id": "comment-12674951"
        },
        {
            "date": "2009-05-21T09:38:22+0000",
            "content": "Note that this issue only hits an index with many (> ~268 million) docs. ",
            "author": "Michael McCandless",
            "id": "comment-12711538"
        },
        {
            "date": "2009-08-27T20:32:45+0000",
            "content": "I received this on 2.4.1, not sure if it is this bug or not:\nException in thread \"main\" java.lang.RuntimeException: after flush: fdx size mismatch: 10 docs vs 0 length in bytes of _sl3.fdx\n        at org.apache.lucene.index.StoredFieldsWriter.closeDocStore(StoredFieldsWriter.java:94)\n        at org.apache.lucene.index.DocFieldConsumers.closeDocStore(DocFieldConsumers.java:83)\n        at org.apache.lucene.index.DocFieldProcessor.closeDocStore(DocFieldProcessor.java:47)\n        at org.apache.lucene.index.DocumentsWriter.closeDocStore(DocumentsWriter.java:367)\n        at org.apache.lucene.index.DocumentsWriter.flush(DocumentsWriter.java:567)\n        at org.apache.lucene.index.IndexWriter.doFlush(IndexWriter.java:3540)\n        at org.apache.lucene.index.IndexWriter.flush(IndexWriter.java:3450)\n        at org.apache.lucene.index.IndexWriter.prepareCommit(IndexWriter.java:3363)\n        at org.apache.lucene.index.IndexWriter.commit(IndexWriter.java:3408)\n        at edu.jhu.library.ivoa.VOImageAccessUrlDownload.go(VOImageAccessUrlDownload.java:357)\n        at edu.jhu.library.ivoa.VOImageAccessUrlDownload.main(VOImageAccessUrlDownload.java:103)\n\nI'm working with over 500,000 docs in this particular index. ",
            "author": "Elliot Metsger",
            "id": "comment-12748555"
        },
        {
            "date": "2009-08-27T20:44:00+0000",
            "content": "Nevermind, it doesn't look like this is an occurrence of this bug.  Not sure what happened... underlying storage is a ZFS file system.  Anyway, this thread http://www.mail-archive.com/solr-user@lucene.apache.org/msg22264.html was helpful, explaining what may be happening. ",
            "author": "Elliot Metsger",
            "id": "comment-12748558"
        },
        {
            "date": "2009-08-28T08:52:23+0000",
            "content": "Is there any thing in your env that might be removing index files out from under the IndexWriter?  Are you changing your Directory's default locking impl, or disabling locking?\n\nZFS should be fine \u2013 I use it in my daily development.  What a fabulous file system   Snapshots & clones are very addictive... ",
            "author": "Michael McCandless",
            "id": "comment-12748745"
        }
    ]
}