{
    "id": "SOLR-9194",
    "title": "Enhance the bin/solr script to perform file operations to/from Zookeeper",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.2",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "There are a few other files that can reasonably be pushed to Zookeeper, e.g. solr.xml, security.json, clusterprops.json. Who knows? Even <collection>/state.json for the brave.\n\nThis could reduce further the need for bouncing out to zkcli.\n\nAssigning to myself just so I don't lose track, but I would love it if someone else wanted to take it...\n\nI'm thinking the commands would be \n\nbin/solr zk -putfile -z <ensemble> -p <zookeeper path> -f <local file path>\nbin/solr zk -getfile -z <ensemble> -p <zookeeper path> -f <local file path>\n\nbut I'm not wedded to those, all suggestions welcome.",
    "attachments": {
        "SOLR-9194-windows_fix3.patch": "https://issues.apache.org/jira/secure/attachment/12816074/SOLR-9194-windows_fix3.patch",
        "SOLR-9194.patch": "https://issues.apache.org/jira/secure/attachment/12812543/SOLR-9194.patch",
        "SOLR-9194-windows_fix.patch": "https://issues.apache.org/jira/secure/attachment/12815939/SOLR-9194-windows_fix.patch",
        "SOLR-9194-windows_fix2.patch": "https://issues.apache.org/jira/secure/attachment/12815968/SOLR-9194-windows_fix2.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-06-08T08:55:31+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I'd love for it to be a more unix-like feel to the copying commands, e.g.\n\nbin/solr zk cp zk:/security.json .               # download\nbin/solr zk cp security.json zk:/security.json   # upload\nbin/solr zk cp -r zk:/configs ./configs_bak\nbin/solr zk cp -r ./myFolder/conf zk:/configs/mynewconf\n\n ",
            "id": "comment-15320261"
        },
        {
            "date": "2016-06-08T14:39:43+0000",
            "author": "Erick Erickson",
            "content": "My original suggestion was more along the lines of trying to emulate the current zkcli pattern. Which I've always found difficult to remember anyway. \n\nHmmm, while we're at it, what about adding rm?\n\nbin/solr zk -rm /whatever\nbin/solr zk -rm -r /whatever\n\n\nWhat do others think? If we adopt this suggestion I'd think that the upconfig and downconfig should stay as a way to be a bit more structured about configsets, as well as find the pre-packaged configsets by just name. If you knew exactly what you were doing you could just use the 'cp' syntax and ignore them.\n\n//Removed truly silly comment, no coffee yet.\n\nMinor quibble: We should require a hyphen before the cp, as:\n\nbin/solr zk -cp zk:/security.json .\n\n\nfor consistency's sake with other commands if nothing else I think. ",
            "id": "comment-15320660"
        },
        {
            "date": "2016-06-08T20:24:21+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Minor quibble: We should require a hyphen before the cp, as:\nI hate that hyphen  It feels wrong, since it is really not an option but a command argument. I think it was technical limitations from SolrCLI.java which made it easiest to parse arguments that way?\n\nSo I'm more for removing the mandatory dash from up/downconfig (leaving the dash variant working for all of 6.x).\n\nWe then get this \"man page\" for solr zk\n\nUsage: solr zk upconfig|downconfig -d <confdir> -n <configName> [-z zkHost]\n       solr zk cp [-r] <src> <dest> [-z zkHost]\n       solr zk rm [-r] <path> [-z zkHost]\n       solr zk mv <src> <dest> [-z zkHost]\n\n     upconfig uploads a configset from the local machine to Zookeeper. (Backcompat: -upconfig)\n\n     downconfig downloads a configset from Zookeeper to the local machine. (Backcompat: -downconfig)\n\n     cp copies files or folders to/from Zookeeper\n        <src>, <dest> : [file:]/path/to/local/file or zk:/path/to/zk/node\n                        When <src> is a zk resource, <dest> may be \".\"\n                        If <dest> ends with \"/\", files are copied into that folder\n                        Wildcards are not supported\n\n     rm removes files or folders on Zookeeper\n        <path>        : [zk:]/path/to/zk/node\n\n     mv moves and/or renames files internally on Zookeeper\n\n     -z zkHost        Zookeeper connection string. Only needed if not configured in solr.in.sh\n\n     -r               Recursive copying\n\n     -n configName    Name of the configset in Zookeeper that will be the destinatino of\n                       'upconfig' and the source for 'downconfig'.\n\n     -d confdir       The local directory the configuration will be uploaded from for\n                      'upconfig' or downloaded to for 'downconfig'. For 'upconfig', this\n                      can be one of the example configsets, basic_configs, data_driven_schema_configs or\n                      sample_techproducts_configs or an arbitrary directory.\n\n ",
            "id": "comment-15321376"
        },
        {
            "date": "2016-06-16T17:15:01+0000",
            "author": "Erick Erickson",
            "content": "I may have some time to work with this while flying back to MI, I generally hate the in-flight movies anyway....\n\nSo, what do people think? Once the mechanics are in place, changing the form of the command is pretty easy.\n\nThe questions are:\n\n1> Follow the ZK put/get(file) stuff or adopt the more unix-like commands. Straw-man: use the unix-style. More people are familiar with that than ZK\n\n2> Require the hyphen for -cp (-rm) or take them away from the upconfig/downconfig stuff? It looks like I added the hyphen to upconfig/downconfig gratuitously anyway so taking it out is no big deal (keeping it around for back-compat only for upconfig/downconfig). straw-man: take it away. ",
            "id": "comment-15334194"
        },
        {
            "date": "2016-06-16T17:18:12+0000",
            "author": "Noble Paul",
            "content": "put/get is more intuitive ",
            "id": "comment-15334200"
        },
        {
            "date": "2016-06-16T17:42:01+0000",
            "author": "Erick Erickson",
            "content": "Only if you are ZK-savvy.\n\nMy take is that people with their heads in ZK are probably familiar with the Unix-style commands, but not vice-versa. Although the open question is whether switching context to Unix styles is A Good Thing given that people are, after all, dealing with ZK.\n\nJan H\u00f8ydahl In your suggested help text, the [-z zkHost] indicates an optional param to me. Should it be mandatory or is there some thing I'm missing here? ",
            "id": "comment-15334266"
        },
        {
            "date": "2016-06-16T21:06:03+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Jan H\u00f8ydahl In your suggested help text, the [-z zkHost] indicates an optional param to me. Should it be mandatory or is there some thing I'm missing here?\n\nThe reason I propose -z zkHost to be optional, is that solr.in.sh already contains ZK_HOST=, so the -z would only be needed if that is not configured or you want to talk to another ZK. ",
            "id": "comment-15334682"
        },
        {
            "date": "2016-06-17T08:09:10+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "put/get is more intuitive\nWe could still have put/get as convenience aliases for those who like it better, i.e. solr zk put foo.json /foo.json is rewritten to solr zk cp foo.json zk:/foo.json. I'm not heavy invested in the renaming of commands here, but I think we should have a fresh thinking and not bring over all the awkwardness from zkcli.sh.\n\nI think the introduction of protocol zk: will make the commands more clear as you cannot confuse file path with zk path. Quiz: what does this zkcli command do?\n\nzkcli.sh -zkhost localhost:9983 -cmd putfile /foo.xml /bar.xml\n\n ",
            "id": "comment-15335642"
        },
        {
            "date": "2016-06-17T16:02:57+0000",
            "author": "Erick Erickson",
            "content": "I'm actually not a fan of \"there being many ways to do the same thing\", think Perl....\n\n-1 for  combining the prefix notation with anything having to do with synonyms. And I do like the zk: prefix, Jan's quiz is a good one. Plus (see below) there's no reason the copy command can't have both the src and dst be znodes. I'll treat file: as a default, people will be able to specify it for consistency, but it'll  be the assumed prefix for anything without zk:. And at least one zk: prefix will be required.\n\nWith synonyms and the zk: prefix, these are equivalent and I'm not going to even try to write the help text for explaining that.\n\nput zk:path_on_zk path_on_local\nput path_on_local zk:path_on_zk \nput file:path_on_local zk:path_on_zk \n\nAs I was working on this yesterday I realized the cp command is not necessarily local<->zk only, it's perfectly possible to do a zk<->zk copy. My question is whether it would be useful. Because I'm also not a fan of burdening code with useless functionality. Any opinions here on whether zk<->zk copy is desirable? I admit I'm having trouble thinking of reasons why you'd want to do this. It seems to me that the usual use-case is to copy from ZK, change then copy back up to ZK in a different place. And the zk<->zk copy can be accomplished in two steps.\n\nI suppose it's \"perfectly possible\" to have the bin/solr script do a local<->local copy but that's just silly ...\n\nAnd one final question: ZkConfigManager already has all the recursive copy code for going back and forth between ZK and local uploadToZK/downloadFromZK. Currently they're private. I'm not about to cut/paste so the question becomes whether these should just be made public or extracted to some utility? ",
            "id": "comment-15336355"
        },
        {
            "date": "2016-06-17T19:57:36+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Erick, I edited your comment to fix an unintended strikethrough effect caused by <-> usage \nI agree that file: can be default, and that zk: must be specified on either src or dest. ",
            "id": "comment-15336807"
        },
        {
            "date": "2016-06-22T17:09:00+0000",
            "author": "Erick Erickson",
            "content": "Here's a pretty complete patch for the Unix side, I'd appreciate anyone who wants to give it a whirl and provide feedback. There are several things I'd like people to look at if they have an opinion:\n\n> First checking if my Git mojo is improved enough to create a complete patch when adding new files.....\n\n> I added a configsets/cloud-subdirs directory so I'd have something concise to copy around to test recursive copy and move. I'm a bit reluctant to actually include this, any better suggestions? All I really care about is that there's a place with subdirectories that isn't huge. Maybe just cloud-robust or something so we have a place to create more complete configset examples? I don't want there to be a zillion configsets is all.\n\n> ZkConfigManager already has recursive methods that the 'cp -r' and 'mv -r' zk commands could use if they were public (I've made them so temporarily with nocommits). This seems kind of A Bad Thing though since they're now mis-placed; the cp command has nothing to do with configuration management. Should these be moved to some new ZkUtil class or some such?\n\n> Copying and moving when the destination is ZK is a bit strange in that parent znodes can have data too. So you get different behavior when copying, say, schema.xml -> 'zk:/configsets/myconfigs' as opposed to 'zk:/configests/myconfigs/' (notice trailing slash). This can lead to odd situations where you have content associated with, say, /configsets/myconfigs. On the one hand \"that's just the way Zookeeper works\". On the other it'll be surprising. Any suggestions on how to handle? I tried to be smart about making the decision based on whether the znode had children, but there's no reason one can't copy to 'zk:/wherever/something.txt' which has no children so relying on presence of children on the ZK nodes to figure out whether to put data in the node specified or a child breaks copying individual files to individual (new) files. And relying on data in a node precludes copying data to an empty ZNode. Perhaps provide a rmdata command to make it easy for people to recover the mistake?\n\n> I don't yet have access to a Windows machine so anyone who wants to incorporate the changes to the bin/solr script to solr.cmd feel free . I'll get around to it \"sometime\", but sure would appreciate somebody who is more experienced than me with Windows programming taking it on. All that should have to be done is reflect the changes in bin/solr then run the new ... BTW, I did glance at that before my battery ran out on the plane and the use of '@echo' as opposed to 'echo' seems inconsistent.\n\n> Speaking of Windows there's code around looking for a trailing slash. Can I rely on the Windows script to make sure the Java code only sees forward slashes or do I need to normalize that in the Java code? This is important to the point above about copying.\n\nThanks! ",
            "id": "comment-15344755"
        },
        {
            "date": "2016-06-22T23:24:27+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "You patch does not apply to master. Are you sure you don't have any local commits that you git diff against?\npatch cannot find file solr/core/src/test/org/apache/solr/cloud/SolrCLIZkUtilsTest.java, isn't it a new file?\nTry e.g. git diff ece9d85cbea962fd7d327010f1ba184cefdfa8ed to diff against last master commit?\n\nAlso, there is a help print in your patch that says\n\n+    echo \"Zookeeper operation (one of 'upconfig', 'downconfig', '-upconfig' or  '-downconfig') is required!\"\n\nYou should probably mention cp, rm, mv there as well? ",
            "id": "comment-15345384"
        },
        {
            "date": "2016-06-23T00:32:55+0000",
            "author": "Erick Erickson",
            "content": "Sorry about that. My Git mojo is evolving very slowly.\n\nThis should be a better patch, I produced it with IntelliJ and applied it against a fresh trunk with \"patch -p0 patchfile\".\n\nAlso changed the echo line to NOT mention the -up/downconfig and added in rm, mv and cp.\n\nThanks! ",
            "id": "comment-15345474"
        },
        {
            "date": "2016-06-23T15:41:12+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Got the patch applied. Here are some comments:\n\n When mis-typing, such as omitting the -z,  we print the error msg followed by the full usage. Suggest we instead print the helpful error message followed by Type bin/solr zk -help for usage help\n There's a debug print that should probably go away? run_tool cp -src build.xml -dst zk:/ -zkHost localhost:9983 -recurse false (bin/solr line 1001)\n Tested cp both ways and zk->zk, recursive error msg and and with and without trailing slask \n Tested rm on both file and folder\n Tested with ZK_HOST set in solr.in.sh \n Tested mv of znode\n This log msg from CloudSolrClient is annoying: INFO  - 2016-06-23 16:22:05.124; org.apache.solr.client.solrj.impl.CloudSolrClient; Final constructed zkHost string: localhost:9983, and it is followed by a blank line..\n Tested upconfig\n Typo: Name of the configset in Zookeeper that will be the destinatino of...\n The command bin/solr zk rm -r / succeeds, rendering Solr useless  Should we simply thow an error instead?\n\nWhy do we write \"Solr MUST be started once to initialize Zookeeper before using these commands\"? Cannot this script put e.g. security.json in the chroot even if Solr is not yet started?\n\nCould we wish for a solr zk ls command? But that should ba a follow-on ticket. ",
            "id": "comment-15346622"
        },
        {
            "date": "2016-06-24T01:58:10+0000",
            "author": "Erick Erickson",
            "content": "Jan:\n\nThanks for testing and the feedback.\n\nYour \"X's\"\nbq: When mis-typing, such as omitting the -z, we print the error msg followed by the full usage. Suggest we instead print the helpful error message followed by Type bin/solr zk -help for usage help\n\nDone. The long help messages do, indeed, get in the way of figuring out what was wrong.\n\nbq: This log msg from CloudSolrClient is annoying:\n\nMade it into a DEBUG rather than INFO.\n\nbq: Typo: Name of the...\n\nfixed\n\nbq: The command bin/solr zk rm -r / succeeds, rendering Solr useless\n\nWell don't do that . I put in a check and the script now barfs in that situation.\n\nbq: Why do we write \"Solr MUST be started on.....\n\nbecause when I was copying things around during the original upconfig/downconfig I used CloudSolrClient like other tools in SolrCLI did and there is a check to see if Zookeeper has been initialized. In other words because I didn't look at it carefully enough  I just proofed out using SolrZkClient and at least it works on the 'cp' command. So I should be able to convert the rest. That's annoyed me for quite a while but I never tried getting around it. Now I have.\n\nbq: Could we wish for a solr zk ls command?\nYep, we sure could. Testing the cp command just made me wish for one, I think I'll put it in while I'm at it.\n\nThanks again! Probably get another patch up this weekend with all this, including the ls command. ",
            "id": "comment-15347550"
        },
        {
            "date": "2016-06-24T08:37:18+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "No prob. This feature is going to be a super useful one.\n\nThinking about the \"short\" help printout - ut could include the usage patterns part, but you choose:\n\nUsage: solr zk upconfig|downconfig -d <confdir> -n <configName> [-z zkHost]\n       solr zk cp [-r] <src> <dest> [-z zkHost]\n       solr zk rm [-r] <path> [-z zkHost]\n       solr zk mv <src> <dest> [-z zkHost]\n\n\n\nAlso I have thought about the file: prefix. Since it looks like the standardized file protocol, perhaps we should accept file:// prefix as syntax as well? If we do, then that syntax would only allow for absolute file paths though. Don't know if the same makes sense for zk:// though. ",
            "id": "comment-15347995"
        },
        {
            "date": "2016-06-24T08:47:25+0000",
            "author": "Upayavira",
            "content": "Just a thought - am happy to be ignored:\n\nIs Zookeeper essential to Solr? Should we be naming this option after Zookeeper, or rather are we uploading the configs to Solr, which happens to store them in ZK?\n\nThus:\n\n\nsolr config upload -d <confdir> -n <confName> -z zkHost\nsolr config cp schema.xml solr:schema.xml\netc\n\n ",
            "id": "comment-15348012"
        },
        {
            "date": "2016-06-25T16:46:26+0000",
            "author": "Erick Erickson",
            "content": "Jan:\n\nGood questions. Here's what I'm going to do:\n\n1> Each help text for the \"zk\" family of commands  prings out the (now 5 commands including ls) short form with the message \"Type bin/solr zk -help for full usage help\" as well. Much less overwhelming, great suggestion.\n\n2> The annoying \"you have to have started Solr at least once\" is gone, gone, gone\n\n3> I'm not going to deal with a \"proper\" file: prefix. It's got to be \"file:\" and that will be stripped. It looks like a rats nest. Formally, the // is required, so to specify the root you need file:/// \"but most browsers accept file:/\"... yuck. So 'file:/somewhere'  is the root and 'file:somwhere' is a relative directory... I did add a bit to the help text to make this clear. \n\nI want to move some code around, I'm not happy with the actual code that transfers files being scattered around several classes.\n\n ",
            "id": "comment-15349716"
        },
        {
            "date": "2016-06-25T16:53:09+0000",
            "author": "Erick Erickson",
            "content": "Upayavira:\n\nEventually we want to hide Zookeeper and make it \"the one source of truth\". Currently though, we expect users to know about Zookeeper so I think it would be more confusing to have this one bit reference Solr but really mean manipulating Zookeeper. I'd like to wait and make a change like that as part of a comprehensive move rather than have this be an anomaly.\n\nThanks for bringing it up. I hadn't even considered it and we should...\n ",
            "id": "comment-15349720"
        },
        {
            "date": "2016-06-26T21:19:49+0000",
            "author": "Erick Erickson",
            "content": "I think this is ready, as far as the UNIX version is concerned. I've edited the solr.cmd file but I desperately need someone who has\n1> a Windows machine to test on\nand\n2> Windows mojo\n\nto work with the windows script. I've moved stuff over, but with no good way to test I'm sure that there are both syntax errors and functional errors in what I've done. Plus I changed how I was parsing values half way through so..\n\nSee especially the NOCOMMIT in the solr.cmd file. And the substring operations in general.... ",
            "id": "comment-15350253"
        },
        {
            "date": "2016-06-28T14:50:41+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "First test on Windows 10 fails miserably \n\n\nC:\\Users\\janms\\Desktop\\solr-7.0.0-SNAPSHOT>bin\\solr zk\n'ELSE' is not recognized as an internal or external command,\noperable program or batch file.\n'ELSE' is not recognized as an internal or external command,\noperable program or batch file.\n'ELSE' is not recognized as an internal or external command,\noperable program or batch file.\n'ELSE' is not recognized as an internal or external command,\noperable program or batch file.\n'ELSE' is not recognized as an internal or external command,\noperable program or batch file.\n'ELSE' is not recognized as an internal or external command,\noperable program or batch file.\n'ELSE' is not recognized as an internal or external command,\noperable program or batch file.\n'ELSE' is not recognized as an internal or external command,\noperable program or batch file.\n'ELSE' is not recognized as an internal or external command,\noperable program or batch file.\n'ELSE' is not recognized as an internal or external command,\noperable program or batch file.\n'ELSE' is not recognized as an internal or external command,\noperable program or batch file.\n'ELSE' is not recognized as an internal or external command,\noperable program or batch file.\n'ELSE' is not recognized as an internal or external command,\noperable program or batch file.\n'ELSE' is not recognized as an internal or external command,\noperable program or batch file.\n'ELSE' is not recognized as an internal or external command,\noperable program or batch file.\n'ELSE' is not recognized as an internal or external command,\noperable program or batch file.\n'ELSE' is not recognized as an internal or external command,\noperable program or batch file.\n'ELSE' is not recognized as an internal or external command,\noperable program or batch file.\n'ELSE' is not recognized as an internal or external command,\noperable program or batch file.\nThe system cannot find the batch label specified - zk_short_usage\n\n\n\nThis seems to be the line executed before the ELSE failures:\n\nIF EXIST \"C:\\Users\\janms\\Desktop\\solr-7.0.0-SNAPSHOT\\bin\\solr.in.cmd\" CALL \"C:\\Users\\janms\\Desktop\\solr-7.0.0-SNAPSHOT\\bin\\solr.in.cmd\"\n\n\n\nFound two bugs for sure:\n\n\tlabel zk_short_usage should be prefixed with :, not suffixed\n\tCopy/paste of line set ERROR_MSG=\"-n option must be set for upconfig\" both for upconfig and downconfig\n\n ",
            "id": "comment-15353122"
        },
        {
            "date": "2016-06-28T15:22:10+0000",
            "author": "Erick Erickson",
            "content": "Of course it fails miserably, I said I moved stuff over and didn't have a way to test .\n\nI'm not doing any work on this currently, if someone (hint hint) would be so kind as to fix the errors in the windows script and post it back I'd be forever grateful. A patch would be fine or just the entire Windows script. It seems like a long way around to tell me about errors, have me post a new patch and then just find the others....\n ",
            "id": "comment-15353208"
        },
        {
            "date": "2016-06-28T20:12:02+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I'll take a stab at getting it running... ",
            "id": "comment-15353631"
        },
        {
            "date": "2016-06-28T21:56:56+0000",
            "author": "Erick Erickson",
            "content": "Thanks! One thing I wonder about is certainly whether Windows file patters with backslashes are handled appropriately. ",
            "id": "comment-15353773"
        },
        {
            "date": "2016-06-28T22:01:29+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Got solr.cmd working a bit better. It is now parsing the options correctly and I successfully tested the cp command.\n\nStill stuff to clean up and test!!\n\nAlso, I think the changes somehow must have messed up the solr start cmd. I got the response 'to' is not recognized as an internal or external command when executing solr start -c\n ",
            "id": "comment-15353778"
        },
        {
            "date": "2016-06-28T22:06:31+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I still don't understand why we're doing all this command option parsing in .sh and .cmd, when we could have passed the whole input to SolrCLI.java and make the logic there.\n\nWell, I understand that currently we rely on parsing solr.in.sh|cmd for various Java options like memory, port etc, but that file could be a properties file parsed by Java, and then Java could fork a new child process calling Java with all the correct options, not? ",
            "id": "comment-15353783"
        },
        {
            "date": "2016-06-28T23:33:56+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "\n\tFixed -r param\n\tTested cp, mv, rm, ls\n\tFixed some error print, now complains explicitly for missing -z\n\tDo not require zk: prefix for mv\n\tPrint help on bin\\solr zk (instead of infinite hang)\n\n\n\nThink it's getting closer to something. Nice if someone else on Windows can test it through as well.\n\nDid not test upconfig/downconfig/-upconfig/-downconfig commands ",
            "id": "comment-15353930"
        },
        {
            "date": "2016-06-28T23:59:12+0000",
            "author": "Erick Erickson",
            "content": "Thanks a bunch! BTW, in some other testing I was doing I wanted to do things like remove all the collections. One can now do things like...\nrm -r /collections\nand on my local box\nrm -rf example/cloud\n\nand be back to a clean slate. With the configs already up there. Then use 'ls' to see that things are gone. Then... The 'ls' command is way more important than I though, glad you prompted for it.... ",
            "id": "comment-15353949"
        },
        {
            "date": "2016-06-30T14:14:06+0000",
            "author": "Erick Erickson",
            "content": "OK, I'll commit this over the weekend. Any additional testing (especially on Windows with Jan's patch) would be most welcome. ",
            "id": "comment-15357143"
        },
        {
            "date": "2016-07-02T18:27:54+0000",
            "author": "ASF subversion and git services",
            "content": "Commit a851d5f557aefd76c01ac23da076a14dc7576d8e in lucene-solr's branch refs/heads/master from Erick\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a851d5f ]\n\nSOLR-9194: Enhance the bin/solr script to perform file operations to/from Zookeeper ",
            "id": "comment-15360275"
        },
        {
            "date": "2016-07-02T18:29:58+0000",
            "author": "Erick Erickson",
            "content": "Final patch, fixed a precommit tab is the only change ",
            "id": "comment-15360276"
        },
        {
            "date": "2016-07-02T18:36:32+0000",
            "author": "ASF subversion and git services",
            "content": "Commit fa3e79ba3c3dfc39372d1a66c1130d602947cbe9 in lucene-solr's branch refs/heads/branch_6x from Erick\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=fa3e79b ]\n\nSOLR-9194: Enhance the bin/solr script to perform file operations to/from Zookeeper\n(cherry picked from commit a851d5f) ",
            "id": "comment-15360279"
        },
        {
            "date": "2016-07-02T18:43:44+0000",
            "author": "ASF subversion and git services",
            "content": "Commit ee0dbf55f72822befaec84cb72a158e8d38746f8 in lucene-solr's branch refs/heads/branch_6x from Erick\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ee0dbf5 ]\n\nSOLR-9194: fixed merge foo ",
            "id": "comment-15360280"
        },
        {
            "date": "2016-07-02T21:18:24+0000",
            "author": "Erick Erickson",
            "content": "Fix windows failures ",
            "id": "comment-15360334"
        },
        {
            "date": "2016-07-03T02:13:34+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 961eaf9add8a83cd19f5cdb8a8753f40039310ea in lucene-solr's branch refs/heads/master from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=961eaf9 ]\n\nSOLR-9194: Enhance the bin/solr script to perform file operations to/from Zookeeper - Fix Windows failures ",
            "id": "comment-15360381"
        },
        {
            "date": "2016-07-03T02:14:37+0000",
            "author": "Erick Erickson",
            "content": "Turns out the windows tests revealed something that was flat wrong. ",
            "id": "comment-15360382"
        },
        {
            "date": "2016-07-03T02:16:23+0000",
            "author": "ASF subversion and git services",
            "content": "Commit dd761584c7715b205a30ea2781dc19406b7d06e7 in lucene-solr's branch refs/heads/branch_6x from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=dd76158 ]\n\nSOLR-9194: Enhance the bin/solr script to perform file operations to/from Zookeeper - Fix Windows failures ",
            "id": "comment-15360383"
        },
        {
            "date": "2016-07-03T05:09:32+0000",
            "author": "Erick Erickson",
            "content": "I'll leave this open until tomorrow to see if this fix is right. ",
            "id": "comment-15360410"
        },
        {
            "date": "2016-07-04T00:16:52+0000",
            "author": "Erick Erickson",
            "content": "Another patch to account for Windows differences, plus a bit of cleanup.\n\nIf trying to back-port this, the sequence of patches is\nSOLR-9194.patch\nSOLR-9194-windows_fix.patch\nSOLR-9194-windows_fix2.patch ",
            "id": "comment-15360716"
        },
        {
            "date": "2016-07-04T00:26:21+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 65c34857f825aabd956a99fb0f622c7648ed4489 in lucene-solr's branch refs/heads/master from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=65c3485 ]\n\nSOLR-9194: Enhance the bin/solr script to perform file operations to/from Zookeeper. More Windows fixes ",
            "id": "comment-15360720"
        },
        {
            "date": "2016-07-04T00:39:40+0000",
            "author": "ASF subversion and git services",
            "content": "Commit c0036aaeeecff96b07de726e18952def90b8c6f2 in lucene-solr's branch refs/heads/branch_6x from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c0036aa ]\n\nSOLR-9194: Enhance the bin/solr script to perform file operations to/from Zookeeper. More Windows fixes\n(cherry picked from commit 65c3485) ",
            "id": "comment-15360723"
        },
        {
            "date": "2016-07-04T17:26:17+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 9dd9a6fc9193e001210fa64adafe5a6a24c966ef in lucene-solr's branch refs/heads/master from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9dd9a6f ]\n\nSOLR-9194: Enhance the bin/solr script to perform file operations to/from Zookeeper. Windows text fix 3 ",
            "id": "comment-15361617"
        },
        {
            "date": "2016-07-04T17:28:09+0000",
            "author": "Erick Erickson",
            "content": "Apply windows_fix3 after windows_fix2. This is a test issue, not code correctness ",
            "id": "comment-15361618"
        },
        {
            "date": "2016-07-04T17:36:23+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 71842a627772f804ca2c97b09487137d368f7d8d in lucene-solr's branch refs/heads/branch_6x from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=71842a6 ]\n\nSOLR-9194: Enhance the bin/solr script to perform file operations to/from Zookeeper. Windows text fix 3\n(cherry picked from commit 9dd9a6f) ",
            "id": "comment-15361626"
        },
        {
            "date": "2016-07-06T00:41:40+0000",
            "author": "Erick Erickson",
            "content": "OK, I think I've finally gotten the Windows stuff right. We can open new JIRAS for future issues. ",
            "id": "comment-15363550"
        },
        {
            "date": "2016-08-26T14:00:40+0000",
            "author": "Michael McCandless",
            "content": "Bulk close resolved issues after 6.2.0 release. ",
            "id": "comment-15439048"
        }
    ]
}