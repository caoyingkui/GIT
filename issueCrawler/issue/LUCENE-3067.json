{
    "id": "LUCENE-3067",
    "title": "Lucene test cases do not properly close input and output instances",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "general/build",
            "general/test"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "3.1,                                            4.0-ALPHA",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "The Lucene tests do not take care to close all file handles. Unless I am missing something, every single instance of Directory, IndexReader, IndexWriter, IndexSearcher, TermPositions, etc. should be wrapped with a try-finally pattern, such that the instance is always closed. Not doing so risks leaving files open, depending on the GC behavior. I believe this causes tests to fail with a \"could not delete\" exception, inconsistently. I at least observe this on a fast machine with Windows, where deletion is a little more sensitive to open handles. It seems dangerous and undesirable, anyway (again, unless I am missing something). I don't know of another pattern in Java that would actually be safe.\n\nSome of these objects may just happen to be safe to let dangle in the wind, until the GC reaps, but by the contracts that really can't be allowed. The close methods need to be called to release resources.\n\nFixing this appears to alleviate the test failures, but it is hard to tell due to the nondeterministic behavior. I am reluctant to make up the whole patch if this is inaccurate - it is somewhat tedious. The classes involved can be instrumented to expose this problem. (In particular, I would imagine that the finalizer should never be reached without the close() methods being previously invoked.)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2011-05-04T01:22:01+0000",
            "content": "Hi Robert, can you provide more information on exactly which tests you are having a problem with?\n\nAll tests wrap Directory instances via MockDirectoryWrapper.\nThese Directory instances are themselves registered with LuceneTestCase, and the test will fail if you do not close the Directory.\n\nFurthermore, you cannot close these Directory instances themselves until open files are closed, as they track open files for this purpose. If you don't close all IndexReaders etc the test will fail. ",
            "author": "Robert Muir",
            "id": "comment-13028545"
        },
        {
            "date": "2011-11-24T06:23:19+0000",
            "content": "I believe that this is the same issue as later discovered in LUCENE-3583. ",
            "author": "Robert Ragno",
            "id": "comment-13156562"
        },
        {
            "date": "2011-11-24T07:44:12+0000",
            "content": "Robert Ragno: You mean files outside managed \"Lucene Directory\" instances opened and not properly closed? ",
            "author": "Uwe Schindler",
            "id": "comment-13156582"
        }
    ]
}