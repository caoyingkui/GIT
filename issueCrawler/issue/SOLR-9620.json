{
    "id": "SOLR-9620",
    "title": "{!join score=.. fromIndex=..} throws \"undefined field\" for numeric field if from and to schemas are different",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.4"
        ],
        "affect_versions": "6.3",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "numeric \"from\" field is mistakenly looked in \"to\" schema. see org.apache.solr.search.join.ScoreJoinQParserPlugin.....parse()\n\n       private Query createQuery(final String fromField, final String fromQueryStr,\n                                 String fromIndex, final String toField, final ScoreMode scoreMode,\n                                 boolean byPassShortCircutCheck) throws SyntaxError {\n+        FieldType.LegacyNumericType fromNumericType = req.getSchema().getField(fromField).getType().getNumericType();\n+        FieldType.LegacyNumericType toNumericType = req.getSchema().getField(toField).getType().getNumericType();\n\n\nit's in branch_6x only. Users who are faced this are advised to just declare \"from\" field in \"to\" schema. It should work. Take care.  \n\none line fix and improvements for TestCrossCoreJoin.java are quite welcome.",
    "attachments": {
        "SOLR-9620.patch": "https://issues.apache.org/jira/secure/attachment/12844945/SOLR-9620.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-12-30T09:38:44+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 6168a5d63e43efd4d193b9ad6fae1f372794a1c8 in lucene-solr's branch refs/heads/branch_6x from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6168a5d ]\n\nSOLR-9620: fix cross core query time join by numeric fields ",
            "id": "comment-15787321"
        },
        {
            "date": "2016-12-30T09:44:38+0000",
            "author": "Mikhail Khludnev",
            "content": "It's resolved only in 6x, since master (7.0) doesn't support join by numeric.  ",
            "id": "comment-15787335"
        }
    ]
}