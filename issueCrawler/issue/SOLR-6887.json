{
    "id": "SOLR-6887",
    "title": "SolrResourceLoader does not canonicalise the path",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "4.10.2",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "I get \n\n\nCan't find (or read) directory to add to classloader\n\nerrors for valid config files.\n\nTo reproduce:\n\nStep 1: run up a Solr with a zookeeper (default collection, 1 node, 1 shard):\n\n\ntar xvf ~/Downloads/solr-4.10.2.tgz \ncd solr-4.10.2/\n./bin/solr -e cloud\nWelcome to the SolrCloud example!\n\n\nThis interactive session will help you launch a SolrCloud cluster on your local workstation.\n\nTo begin, how many Solr nodes would you like to run in your local cluster? (specify 1-4 nodes) [2] 1\nOk, let's start up 1 Solr nodes for your example SolrCloud cluster.\n\nPlease enter the port for node1 [8983] \n8983\nCloning /Users/mak/solr-4.10.2/example into /Users/mak/solr-4.10.2/node1\n\nStarting up SolrCloud node1 on port 8983 using command:\n\nsolr start -cloud -d node1 -p 8983   \n\n\nWaiting to see Solr listening on port 8983 [/]  \nStarted Solr server on port 8983 (pid=14245). Happy searching!\n\n\nNow let's create a new collection for indexing documents in your 1-node cluster.\n\nPlease provide a name for your new collection: [gettingstarted] \ngettingstarted\nHow many shards would you like to split gettingstarted into? [2] 1\n1\nHow many replicas per shard would you like to create? [2] 1\n1\nPlease choose a configuration for the gettingstarted collection, available options are: default or schemaless [default] \ndefault\n\nDeploying default Solr configuration files to embedded ZooKeeper using command:\n\n/Users/mak/solr-4.10.2/example/scripts/cloud-scripts/zkcli.sh -zkhost localhost:9983 -cmd upconfig -confdir /Users/mak/solr-4.10.2/example/solr/collection1/conf -confname default\n\nSuccessfully deployed the /Users/mak/solr-4.10.2/example/solr/collection1/conf configuration directory to ZooKeeper as default\n\n\n\nCreating new collection gettingstarted with 1 shards and replication factor 1 using Collections API command:\n\nhttp://localhost:8983/solr/admin/collections?action=CREATE&name=gettingstarted&replicationFactor=1&numShards=1&collection.configName=default&maxShardsPerNode=1&wt=json&indent=2\n\nFor more information about the Collections API, please see: https://cwiki.apache.org/confluence/display/solr/Collections+API\n\n{\n  \"responseHeader\":{\n    \"status\":0,\n    \"QTime\":2139},\n  \"success\":{\n    \"\":{\n      \"responseHeader\":{\n        \"status\":0,\n        \"QTime\":1906},\n      \"core\":\"gettingstarted_shard1_replica1\"}}}\n\n\n\nVerify the server is running on http://localhost:8983/solr/#/\n\nStep 2: duplicate the zookeeper config:\n\n\nmkdir zkshell\ncd zkshell/\nvirtualenv venv\nsource venv/bin/activate\npip install zk_shell\nzk-shell localhost:9983\nWelcome to zk-shell (0.99.05)\n(CONNECTING) /> \n(CONNECTED) /> \n(CONNECTED) /> cd configs\n(CONNECTED) /configs> cp myconf myconf2 true\n(CONNECTED) /configs> cd myconf\n(CONNECTED) /configs/myconf> get solrconfig.xml\n(CONNECTED) /configs> quit\n\n\n\nadmire the config file, and note the <lib dir=\"../../../contrib/extraction/lib\" regex=\".*\\.jar\" />. That configuration comes from somewhere like this.\n\nStep 3: create a collection with the new config:\n\n\ncurl 'http://localhost:8983/solr/admin/collections?action=CREATE&name=collection2&collection.configName=myconf2&numShards=1'\n\n\n\nStep 4: check the logs:\n\n\ngrep org.apache.solr.core.SolrResourceLoader ./node1/logs/solr.log\n...\nINFO  - 2014-12-23 18:32:55.165; org.apache.solr.core.SolrResourceLoader; new SolrResourceLoader for directory: '/Users/mak/solr-4.10.2/node1/solr/collection2_shard1_replica1/'\nWARN  - 2014-12-23 18:32:55.218; org.apache.solr.core.SolrResourceLoader; Can't find (or read) directory to add to classloader: ../../../contrib/extraction/lib (resolved as: /Users/mak/solr-4.10.2/node1/solr/collection2_shard1_replica1/../../../contrib/extraction/lib).\nWARN  - 2014-12-23 18:32:55.218; org.apache.solr.core.SolrResourceLoader; Can't find (or read) directory to add to classloader: ../../../dist/ (resolved as: /Users/mak/solr-4.10.2/node1/solr/collection2_shard1_replica1/../../../dist).\n\n\n\nNote the error for /Users/mak/solr-4.10.2/node1/solr/collection2_shard1_replica1/../../../dist.\nBut that path does exist:\n\n\nls /Users/mak/solr-4.10.2/node1/solr/collection2_shard1_replica1/../../../dist | grep '\\.jar$' | wc -l\n      32\n\n\n\nbut the `../../..` causes trouble here.\n\nThe error message comes from https://github.com/apache/lucene-solr/blob/trunk/solr/core/src/java/org/apache/solr/core/SolrResourceLoader.java#L192 \n\nIf I modify the code to add a File.getCanonicalFile() (gist, which also has added some expanded error checking, which I've not verified), it works without error:\n\nTo patch:\n\n\nmak@crab 529 lucene-solr [detached] $ git co lucene_solr_4_10_2\nHEAD is now at be4a1a6... Lucene/Solr release 4.10.2\n\nmak@crab 545 lucene-solr [detached] $ curl -# -o p https://gist.githubusercontent.com/makuk66/20b04e4a8e4ff682714f/raw/c0981917ffad96e53939902e4a7938f2ee264d89/gistfile1.diff \n######################################################################## 100.0%\n\nmak@crab 546 lucene-solr [detached] $ patch -p1 < p\npatching file solr/core/src/java/org/apache/solr/core/SolrResourceLoader.java\n\nmak@crab 548 lucene-solr [detached] $ ant compile && (cd solr; ant dist-war)\n...\n\nmak@crab 552 lucene-solr [detached] $ killall java\nmak@crab 554 lucene-solr [detached] $ rm -fr ~/solr-4.10.2/\nmak@crab 537 ~ $ tar xf ~/Downloads/solr-4.10.2.tgz \nmak@crab 541 ~ $ cp ~/github/lucene-solr/solr/dist/solr-4.10.2-SNAPSHOT.war solr-4.10.2/dist/solr-4.10.2.war \nmak@crab 544 ~ $ cp ~/github/lucene-solr/solr/dist/solr-4.10.2-SNAPSHOT.war solr-4.10.2//example/webapps/solr.war\n\n\n\nThen repro as above, but with \"collection3\" instead of \"collection2\", and now we get:\n\n\nINFO  - 2014-12-23 19:12:34.406; org.apache.solr.core.SolrResourceLoader; new SolrResourceLoader for directory: '/Users/mak/solr-4.10.2/node1/solr/collection3_shard1_replica1/'\nINFO  - 2014-12-23 19:12:34.453; org.apache.solr.core.SolrResourceLoader; Adding 'file:/Users/mak/solr-4.10.2/contrib/extraction/lib/apache-mime4j-core-0.7.2.jar' to classloader\n\n\n\nSo I conclude that the canonicalisation is desirable here.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2014-12-23T20:17:36+0000",
            "author": "Mark Miller",
            "content": "This is really interesting! Why is it not a problem for the first collection?\n\nWhat interests me most is why is this happening though! I think it's actually because a path that starts with '.' is treated as hidden and so java will actually say it doesn't exist!\n\n\n    public int getBooleanAttributes(File f) {\n        int rv = getBooleanAttributes0(f);\n        String name = f.getName();\n        boolean hidden = (name.length() > 0) && (name.charAt(0) == '.');\n        return rv | (hidden ? BA_HIDDEN : 0);\n    }\n\n\n\nSo these paths that start as ../ are treated as hidden files, and if you canonicalize it (or I assume getAbsolutePath), it works.\n\nVery surprising to me if that is the case. That is a really interesting ugly corner. ",
            "id": "comment-14257459"
        },
        {
            "date": "2014-12-23T20:36:54+0000",
            "author": "Mark Miller",
            "content": "Hmm, still getName would have to be having some problem too for that be happening...\n\nI may have to try and step through it to figure out what is happening.  ",
            "id": "comment-14257482"
        },
        {
            "date": "2014-12-23T20:47:45+0000",
            "author": "Martijn Koster",
            "content": "\nWhy is it not a problem for the first collection?\n\nIt is; the above just happened to be the flow I was using when I noticed it.\nIf you just do the ./bin/solr -e cloud you get:\n\n\nINFO  - 2014-12-23 20:45:22.097; org.apache.solr.core.SolrResourceLoader; new SolrResourceLoader for directory: '/Users/mak/solr-4.10.2/node1/solr/gettingstarted_shard1_replica1/'\nWARN  - 2014-12-23 20:45:22.156; org.apache.solr.core.SolrResourceLoader; Can't find (or read) directory to add to classloader: ../../../contrib/extraction/lib (resolved as: /Users/mak/solr-4.10.2/node1/solr/gettingstarted_shard1_replica1/../../../contrib/extraction/lib).\n\n ",
            "id": "comment-14257507"
        },
        {
            "date": "2014-12-23T22:27:06+0000",
            "author": "Martijn Koster",
            "content": "Looking through some system call traces, I think this is a ordering issue: The \"exists()\" results in a stat with the full path including the \"gettingstarted_shard1_replica1\" and the \"../../..\", and that fails because the gettingstarted_shard1_replica1 directory has not yet been created, so the walk down-and-up fails. If you canonicalise, that directory is removed from the string, an its non-existence on-disk no longer matters. ",
            "id": "comment-14257613"
        },
        {
            "date": "2015-01-08T20:29:48+0000",
            "author": "Erik Hatcher",
            "content": "This issue was alleviated in SOLR-6661 (Solr 4.10.3 is when it appeared first in a release), such that the start script sets the install dir which is then used as a system property reference in the config files such that relative paths are not used for <lib> references.  While SolrResourceLoader may still deserve some TLC, maybe the actual problem encountered here won't be experienced out of the box again. ",
            "id": "comment-14270007"
        },
        {
            "date": "2015-01-09T00:08:48+0000",
            "author": "Mark Miller",
            "content": "Cool.\n\nThis is a crazy little bug. We should plug in this canonicalise for 5.0 anyway. Something similar is also done by Lucene's FSDirectory. ",
            "id": "comment-14270262"
        }
    ]
}