{
    "id": "SOLR-12874",
    "title": "Java 9+ GC Log files are being rotated every 20KB instead of every 20MB",
    "details": {
        "type": "Bug",
        "status": "Resolved",
        "labels": "",
        "fix_versions": [
            "7.6",
            "master (8.0)"
        ],
        "components": [],
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "7.5"
    },
    "description": "The Java 9+ GC logging options in bin/solr and bin/solr.cmd specify a log rotation file size of 20000 which according to\u00a0JEP 158 (https://openjdk.java.net/jeps/158) should be the \"file size in kb\" however when running Solr on Java 11 I'm seeing GC logs rotated every 20KB.\n\nChanging \"filesize=20000\" to \"filesize=20M\" fixes the problem for me under Linux.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16650900",
            "content": "Is 20M properly interpreted by Java 8?  If not, we'll need different options for different java versions.\n\nSounds like there needs to be a bug filed against Java, because all of Oracle's documentation that I've been able to locate indicates that the number should be interpreted as kilobytes if a unit is not provided. ",
            "author": "Shawn Heisey",
            "date": "2018-10-15T22:31:40+0000"
        },
        {
            "id": "comment-16650964",
            "content": "Shawn Heisey\u00a0The options are already broken out by java version.\u00a0 20M is currently used for Java 8.\u00a0 Here is the current code:\n \u00a0\u00a0\n\n# if verbose gc logging enabled, setup the location of the log file and rotation\nif [ \"$GC_LOG_OPTS\" != \"\" ]; then\n  if [[ \"$JAVA_VER_NUM\" -lt \"9\" ]] ; then\n    gc_log_flag=\"-Xloggc\"\n    if [ \"$JAVA_VENDOR\" == \"IBM J9\" ]; then\n      gc_log_flag=\"-Xverbosegclog\"\n    fi\n    GC_LOG_OPTS+=(\"$gc_log_flag:$SOLR_LOGS_DIR/solr_gc.log\" '-XX:+UseGCLogFileRotation' '-XX:NumberOfGCLogFiles=9' '-XX:GCLogFileSize=20M')\n  else\n    # http://openjdk.java.net/jeps/158\n    for i in \"${!GC_LOG_OPTS[@]}\";\n    do\n      # for simplicity, we only look at the prefix '-Xlog:gc'\n      # (if 'all' or multiple tags are used starting with anything other then 'gc' the user is on their own)\n      # if a single additional ':' exists in param, then there is already an explicit output specifier\n      GC_LOG_OPTS[$i]=$(echo ${GC_LOG_OPTS[$i]} | sed \"s|^\\(-Xlog:gc[^:]*$\\)|\\1:file=$SOLR_LOGS_DIR/solr_gc.log:time,uptime:filecount=9,filesize=20000|\")\n    done\n  fi\nfi\n\n\nJava 8 (and anything less than 9) is using:\n\n-XX:GCLogFileSize=20M\n\n ",
            "author": "Tim Underwood",
            "date": "2018-10-15T23:31:49+0000"
        },
        {
            "id": "comment-16651261",
            "content": "This seems to be a bug in Java 11 (maybe they changed the spec for good?). Can we verify what happens in Java 10 and 9? If the change is wanted and Java 9/10 cannot handle \"20M\", we need another inner if/then/else.\n\nImportant: The PR does not handle Windows, please keept that in sync, as this also affects solr.cmd. ",
            "author": "Uwe Schindler",
            "date": "2018-10-16T07:31:08+0000"
        },
        {
            "id": "comment-16651861",
            "content": "I just verified 2 things on both Linux and OS X:\n\n\t\"filesize=20M\" syntax works on Java 9, Java 10 and Java 11\n\t\"filesize=20000\" is treated at 20,000 bytes on Java 9, Java 10 and Java 11\n\n\n\nI have NOT tested on Windows.\n\nUwe Schindler The PR includes changes for both\u00a0solr/bin/solr and\u00a0solr/bin/solr.cmd so as far as I can tell it does keep the Windows version in sync.\u00a0 Am I missing something? ",
            "author": "Tim Underwood",
            "date": "2018-10-16T15:03:52+0000"
        },
        {
            "id": "comment-16651912",
            "content": "According to the #openjdk IRC channel the JEP 158 Documentation is wrong and 20M is expected to work:\n\n[08:08] <tpunder> Anybody know anything about the JEP 158 (Unified JVM Logging) \"filesize\" argument?  JEP 158 says that value is in KB and uses \"filesize=1024\" as an example for 1MB gc log file sizes.  However on both Linux and OS X \"filesize=1024\" gives me gc log files that are 1024 bytes in length.\n[08:11] <shade1> I think JEP grammar is incorrect, and UL accepts the usual suffixes (K, M, G), and no-suffix is bytes\n[08:13] <Maldivia_> tpunder: java -Xlog:help gives this as an example:  -Xlog:gc=trace:file=gctrace.txt:uptimemillis,pids:filecount=5,filesize=1m\n[08:14] <tpunder> Yes, filesize=1M does work.  Just wondering why the JEP says it should be KB.\n[08:15] <shade1> it think it was drafted before implementation and tests\n[08:15] <shade1> so, mistake (or rather, optimistic typo) in grammar comment\n[08:16] <tpunder> I specifically ran into a problem upgrading Apache Solr to Java 11 because the launch scripts were setup to use filesize=20000 (they meant wanted 20M) based on the JEP documentation.  Manually patching the launch script to filesize=20M works.\n[08:16] <tpunder> Ok thanks for confirming.\n\n ",
            "author": "Tim Underwood",
            "date": "2018-10-16T15:19:31+0000"
        },
        {
            "id": "comment-16651947",
            "content": "Aleksey Shipilev verified the parsing code and is looking into updating the JEP documentation:\u00a0http://mail.openjdk.java.net/pipermail/hotspot-dev/2018-October/034693.html ",
            "author": "Tim Underwood",
            "date": "2018-10-16T15:40:15+0000"
        },
        {
            "id": "comment-16653151",
            "content": "Cool. I see the PR contains both platforms. It should be fast to merge. Should I merge this now, or do you want to wait until Aleksey reports back? ",
            "author": "Uwe Schindler",
            "date": "2018-10-17T07:55:39+0000"
        },
        {
            "id": "comment-16653637",
            "content": "I think it should be safe to merge now given that the gc logging options in bin/solr currently don't work as expected on Java 9, 10 and 11. ",
            "author": "Tim Underwood",
            "date": "2018-10-17T14:34:43+0000"
        },
        {
            "id": "comment-16654126",
            "content": "FYI the JEP has been updated to drop the \"in kb\" part:\n\nhttps://bugs.openjdk.java.net/browse/JDK-8046148\n\nhttps://openjdk.java.net/jeps/158\n\n\u00a0 ",
            "author": "Tim Underwood",
            "date": "2018-10-17T20:04:48+0000"
        },
        {
            "id": "comment-16654197",
            "content": "Sure, will merge! ",
            "author": "Uwe Schindler",
            "date": "2018-10-17T21:18:49+0000"
        },
        {
            "id": "comment-16654218",
            "content": "Commit 4b2136eb3c8890999aee6c063e66d577367fa333 in lucene-solr's branch refs/heads/master from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4b2136e ]\n\nSOLR-12874: Java 9+ GC Logging filesize parameter should use a unit\n(merge branch 'java9plus_gc_logging_filesize' of https://github.com/tpunder/lucene-solr); this closes #470 ",
            "author": "ASF subversion and git services",
            "date": "2018-10-17T21:25:09+0000"
        },
        {
            "id": "comment-16654221",
            "content": "Commit afc9898ae246823109b5a952a6703056b143f468 in lucene-solr's branch refs/heads/branch_7x from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=afc9898 ]\n\nSOLR-12874: Java 9+ GC Logging filesize parameter should use a unit\n(merge branch 'java9plus_gc_logging_filesize' of https://github.com/tpunder/lucene-solr); this closes #470 ",
            "author": "ASF subversion and git services",
            "date": "2018-10-17T21:26:55+0000"
        },
        {
            "id": "comment-16654223",
            "content": "Thanks Tim! ",
            "author": "Uwe Schindler",
            "date": "2018-10-17T21:27:44+0000"
        },
        {
            "id": "comment-16656107",
            "content": "Commit 4b2136eb3c8890999aee6c063e66d577367fa333 in lucene-solr's branch refs/heads/jira/http2 from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4b2136e ]\n\nSOLR-12874: Java 9+ GC Logging filesize parameter should use a unit\n(merge branch 'java9plus_gc_logging_filesize' of https://github.com/tpunder/lucene-solr); this closes #470 ",
            "author": "ASF subversion and git services",
            "date": "2018-10-19T00:49:59+0000"
        }
    ]
}