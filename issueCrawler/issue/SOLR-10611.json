{
    "id": "SOLR-10611",
    "title": "TestLeaderElectionWithEmptyReplica failure on jenkins",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "SolrCloud",
            "Tests"
        ],
        "type": "Bug",
        "fix_versions": [
            "6.6",
            "7.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "See https://jenkins.thetaphi.de/job/Lucene-Solr-6.x-Windows/875/\n\n\nFAILED:  org.apache.solr.cloud.TestLeaderElectionWithEmptyReplica.test\n\nError Message:\nShard shard1 replicas do not have same number of documents expected:<10> but was:<0>\n\nStack Trace:\njava.lang.AssertionError: Shard shard1 replicas do not have same number of documents expected:<10> but was:<0>\n        at __randomizedtesting.SeedInfo.seed([2093B412EF46AACD:A8C78BC841BAC735]:0)\n        at org.junit.Assert.fail(Assert.java:93)\n        at org.junit.Assert.failNotEquals(Assert.java:647)\n        at org.junit.Assert.assertEquals(Assert.java:128)\n        at org.junit.Assert.assertEquals(Assert.java:472)\n        at org.apache.solr.cloud.TestLeaderElectionWithEmptyReplica.assertConsistentReplicas(TestLeaderElectionWithEmptyReplica.java:119)\n        at org.apache.solr.cloud.TestLeaderElectionWithEmptyReplica.test(TestLeaderElectionWithEmptyReplica.java:101)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
    "attachments": {
        "consoleText.txt": "https://issues.apache.org/jira/secure/attachment/12866596/consoleText.txt",
        "SOLR-10611.patch": "https://issues.apache.org/jira/secure/attachment/12866621/SOLR-10611.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-05-05T11:16:18+0000",
            "content": "Full console log from the jenkins run is attached. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-15998171"
        },
        {
            "date": "2017-05-05T11:48:26+0000",
            "content": "I might cause it under SOLR-9867 by later assigning SDF.cores. The difference between passed and failed test is \n\n977663 INFO  (parallelCoreAdminExecutor-3875-thread-1-processing-n:127.0.0.1:37836_solr 3242b4df-cbc0-448c-9cab-bf31c4e20ca3806815162400450 CREATE) [n:127.0.0.1:37836_solr c:solr_9504 s:shard1  x:solr_9504_shard1_replica2] o.a.s.u.PeerSync PeerSync: core=solr_9504_shard1_replica2 url=http://127.0.0.1:37836/solr DONE.  We have no versions.  sync failed.\n   [junit4]   2> 977672 ERROR (qtp1297973957-10258) [    ] o.a.s.s.SolrDispatchFilter Error processing the request. CoreContainer is either not initialized or shutting down.\n   [junit4]   2> 977673 WARN  (qtp1297973957-10258) [    ] o.e.j.s.ServletHandler /solr/solr_9504_shard1_replica1/get\n   [junit4]   2> org.apache.solr.common.SolrException: Error processing the request. CoreContainer is either not initialized or shutting down.\n   [junit4]   2>        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:311)\n   [junit4]   2>        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:301)\n   [junit4]   2>        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1699)\n   [junit4]   2>        at org.apache.solr.client.solrj.embedded.JettySolrRunner$DebugFilter.doFilter(JettySolrRunner.java:136)\n   [junit4]   2>        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1699)\n..\n   [junit4]   2> 977676 INFO  (parallelCoreAdminExecutor-3875-thread-1-processing-n:127.0.0.1:37836_solr 3242b4df-cbc0-448c-9cab-bf31c4e20ca3806815162400450 CREATE) [n:127.0.0.1:37836_solr c:solr_9504 s:shard1  x:solr_9504_shard1_replica2] o.a.s.c.SyncStrategy Leader's attempt to sync with shard failed, moving to the next candidate\n\n  \n\nCan this exception cause test failure? Shouldn't /get request to be retired?  ",
            "author": "Mikhail Khludnev",
            "id": "comment-15998211"
        },
        {
            "date": "2017-05-05T13:46:03+0000",
            "content": "SOLR-10611.patch here is the reproducer. \nCan we retry org.apache.solr.update.PeerSync.requestVersions(String) until SDF.init() is done? \n\n   [junit4]   2> 9006 ERROR (qtp1430667538-101) [    ] o.a.s.s.SolrDispatchFilter Error processing the request. CoreContainer is either not initialized or shutting down.\n   [junit4]   2> 9007 WARN  (qtp1430667538-101) [    ] o.e.j.s.ServletHandler /solr/solr_9504_shard1_replica1/get\n   [junit4]   2> org.apache.solr.common.SolrException: Error processing the request. CoreContainer is either not initialized or shutting down.\n   [junit4]   2> \tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:327)\n   [junit4]   2> \tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:317)\n\n ",
            "author": "Mikhail Khludnev",
            "id": "comment-15998338"
        },
        {
            "date": "2017-05-05T20:05:38+0000",
            "content": "SOLR-10611.patch the reproducer and the fix. \nSummary \nSOLR-9867 make SDP.cores assign in the end of init(). Thus, early sync request got 500 (not 503 see below) Error processing the request. CoreContainer is either not initialized or shutting down.. And it brokes synchronisation. \nThis fix makes SDP.doFilter() respond with 503 on early request and makes PeerSync retry on that code.   \nHowever\nI suppose it's a way to nowhere since we have quite many pieces of code sends peer request, it would be madness to retry all of them, for the same obvious reason. I propose to step back and consider an old good latch at SOLR-9867. \ncc Mike Drob, Andrey Kudryavtsev.Erick Erickson  ",
            "author": "Mikhail Khludnev",
            "id": "comment-15998885"
        },
        {
            "date": "2017-05-05T20:24:46+0000",
            "content": "FWIW\ndoFilter() throws SolrException (503) when is invoked before cores are assigned or container is stopped. However, jetty turns in 500, not what we really want. \nThe correct way is to throw UnavailableException with or without timeout. Jetty turns it into 503 or 404 (Not Found) sic! Since after SOLR-10614 there is no case for former, it makes sense to approach the later case, just to be more http compliant.  ",
            "author": "Mikhail Khludnev",
            "id": "comment-15998907"
        },
        {
            "date": "2017-05-07T10:18:15+0000",
            "content": "Fixed under SOLR-10615 ",
            "author": "Mikhail Khludnev",
            "id": "comment-15999770"
        }
    ]
}