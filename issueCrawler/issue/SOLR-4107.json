{
    "id": "SOLR-4107",
    "title": "Parse Error message lost from 3.5.0 to 3.6.1",
    "details": {
        "affect_versions": "3.6.1",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "clients - java"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "QueryComponent.prepare builds a SolrException from ParseException encountered, using a constructor that forces error message to null\n\nin 3.5.0\npublic SolrException(ErrorCode code, Throwable th) {\n   super(th);\n   this.code=code.code;\n   logged=true;\n}\n\n\nin 3.6.1 :\npublic SolrException(ErrorCode code, Throwable th) {\n   this(code, null, th, (th instanceof SolrException) ? ((SolrException)th).logged : false);\n}\ncalling :\npublic SolrException(ErrorCode code, String msg, Throwable th, boolean alreadyLogged) {\n   super(msg,th);\n   this.code=code.code;\n   logged=alreadyLogged;\n}\n\nI don't think this is a desired behaviour, so I guessed this should be corrected by changing line 93 to \n   this(code, th.getMessage(), th, (th instanceof SolrException) ?(SolrException)th).logged : false);\n\nI'll try to add a patch later today.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Pierre Goss\u00e9",
            "id": "comment-13503141",
            "date": "2012-11-23T10:12:56+0000",
            "content": "Oups, this class is in solrj, so I'm not sure component \"search\" is appropriate. "
        }
    ]
}