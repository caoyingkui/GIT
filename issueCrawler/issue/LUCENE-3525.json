{
    "id": "LUCENE-3525",
    "title": "Avoid private nonnested classes",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/store"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "3.0.3",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "https://svn.apache.org/repos/asf/lucene/dev/trunk/lucene/src/java/org/apache/lucene/store/NativeFSLockFactory.java shows a private top-level class NativeFSLock. This is a JDK 1.0-ism which should be considered deprecated. Either use a nested class, or create a separate source file.\n\nCan produce problems for tools. Cause of: https://netbeans.org/bugzilla/show_bug.cgi?id=204039",
    "attachments": {
        "LUCENE-3525.diff": "https://issues.apache.org/jira/secure/attachment/12502864/LUCENE-3525.diff"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-10-20T23:53:31+0000",
            "content": "How is this not a bug in Netbeans? \n\nSeriously, this code compiles just fine, its legal java. ",
            "author": "Robert Muir",
            "id": "comment-13132221"
        },
        {
            "date": "2011-10-21T17:53:46+0000",
            "content": "I agree with Robert: It's a bug with Netbeans.\n\nBut we should change those stupid side-by-side package private classes and make them subclasses. I have seen a lot of them in old code. Whenever I updated a class using this, I changed it. ",
            "author": "Uwe Schindler",
            "id": "comment-13132868"
        },
        {
            "date": "2011-10-21T19:16:36+0000",
            "content": "The bug in NetBeans was already given in the link above. But this construction is long obsolete and particularly tricky for tools to support in general , so it should be replaced whenever possible.\n\n Since to find an associated source file you need to inspect a bytecode attribute. For JDK 1.1+ sources it suffices to just look at the class FQN to determine the source path. ",
            "author": "Jesse Glick",
            "id": "comment-13132955"
        },
        {
            "date": "2011-10-21T23:36:11+0000",
            "content": "Can you provide a patch for Lucene/Solr trunk, that transforms all those classes to static inner ones? This would be nice to have, but I see no real need for doing that now, so I am a little bit reluctant to do it. ",
            "author": "Uwe Schindler",
            "id": "comment-13133191"
        },
        {
            "date": "2011-11-08T02:00:43+0000",
            "content": "Patch to remove all private top-level classes from Lucene/Solr trunk sources including tests. ",
            "author": "Jesse Glick",
            "id": "comment-13146034"
        },
        {
            "date": "2011-11-08T02:29:01+0000",
            "content": "This netbeans bug was just reported a few weeks ago - surely it's a transient bug and will be fixed soon?\n\nWe shouldn't blindly change package private classes to static inner clases - first of all, it sometimes makes no sense... why would NullUpdateLog be scoped within FSUpdateLong?  Second, it changes the class names (i.e. breaks things Class.forName that are used by solr configuration). ",
            "author": "Yonik Seeley",
            "id": "comment-13146042"
        },
        {
            "date": "2011-11-08T15:30:09+0000",
            "content": "BTW I missed TransactionLog (in FSUpdateLog.java) before.\n\n\"surely it's a transient bug\" - probably existed for years. There is just not that much code out there using JDK 1.0 private classes for people to notice it earlier.\n\n\"will be fixed soon\" - no idea. For the same reason, it is not a high priority. Anyway there are surely other things affected. While hyperlinking stack traces with such classes is easy enough once you know about it (for \\tat p.B(A.java:123) ignore B and open p/A.java), other tool features can be harder to fix since you need a bytecode parser.\n\n\"why would NullUpdateLog be scoped within FSUpdateLong\" - no good reason that I can see. Why was it in FSUpdateLong.java? A candidate for refactoring of some kind, in this case probably to be moved into UpdateHandler.java.\n\n\"Class.forName used by Solr configuration\" - perhaps, though remember that these classes are necessarily package-private so not usable via reflection unless setAccessible(true) is called. For such cases (is there a list?) you would want to move the class into its own source file. For a committer this would be simple enough; for purposes of a submitted patch I did not want to make any such changes because the diff would be unreviewable and unlikely to apply cleanly after other trunk changes. ",
            "author": "Jesse Glick",
            "id": "comment-13146356"
        },
        {
            "date": "2012-03-25T15:43:58+0000",
            "content": "I fixed that for DocSet and DocSetBase in Solr. ",
            "author": "Uwe Schindler",
            "id": "comment-13237894"
        }
    ]
}