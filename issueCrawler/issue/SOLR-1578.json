{
    "id": "SOLR-1578",
    "title": "Geocoding Spatial Query Parser",
    "details": {
        "affect_versions": "None",
        "status": "Reopened",
        "fix_versions": [],
        "components": [
            "spatial"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Given all the work around spatial, it would be beneficial if Solr had a query parser for dealing with spatial queries.  For starters, something that used geonames data or maybe even Google Maps API would be really useful.  Longer term, a spatial grammar that can robustly handle all the vagaries of addresses, etc. would be really cool.\n\nRefs: \n[1] http://www.geonames.org/export/client-libraries.html (note the Java client is ASL)\n[2] Data from geo names: http://download.geonames.org/export/dump/",
    "attachments": {
        "schema.xml": "https://issues.apache.org/jira/secure/attachment/12622608/schema.xml",
        "Indexer.java": "https://issues.apache.org/jira/secure/attachment/12622610/Indexer.java",
        "solrconfig.xml": "https://issues.apache.org/jira/secure/attachment/12622609/solrconfig.xml",
        "geocodercomponent_initial.patch": "https://issues.apache.org/jira/secure/attachment/12622607/geocodercomponent_initial.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Jason Rutherglen",
            "id": "comment-12780184",
            "date": "2009-11-19T18:26:11+0000",
            "content": "GBase http://code.google.com/apis/base/docs/2.0/query-lang-spec.html (Locations section at the bottom of the page) has a query syntax for spatial queries (i.e. @+40.75-074.00 + 5mi) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872552",
            "date": "2010-05-27T22:07:41+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043658",
            "date": "2011-06-03T16:46:23+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106302",
            "date": "2011-09-16T14:50:28+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Furkan KAMACI",
            "id": "comment-13859534",
            "date": "2013-12-31T15:37:12+0000",
            "content": "Hi;\n\nWhat are the requirement here? I have read that article: http://www.ibm.com/developerworks/java/library/j-spatial/index.html written by Grant Ingersoll and if we can explain the requirements I can develop a patch for this issue. "
        },
        {
            "author": "David Smiley",
            "id": "comment-13859644",
            "date": "2013-12-31T19:40:17+0000",
            "content": "I'm closing this as a duplicate of SOLR-4242.  This issue came first but I think there is better context/discussion there. "
        },
        {
            "author": "David Smiley",
            "id": "comment-13860249",
            "date": "2014-01-02T15:02:48+0000",
            "content": "Grant Ingersoll had this to say about this issue:\n\nFWIW, my intent behind SOLR-1578, was a geocoding query parser (i.e. put in addresses, POIs, etc.), not more spatial QP operators.  I'm fine w/ marking it as a duplicate, but at least wanted to capture that the issue was trying to achieve something different than what this is.\n\nThe issue title here should be renamed to include \"geocoding\" \u2013 a key intended distinction. I'll rename it and even re-open it.  But that said... it's hard to imagine Solr shipping with geocoding unless perhaps it ended up as a contrib module.  I saw Ishan Chattopadhyaya's Lucene Revolution presentation on geocoding and it is very non-trivial and requires large data files to resolve against. "
        },
        {
            "author": "Ishan Chattopadhyaya",
            "id": "comment-13869412",
            "date": "2014-01-13T10:39:49+0000",
            "content": "Here's an early patch based on the approach discussed in the talk. This is for a geocoding component organized as a SearchComponent.\n\nIt uses per-field, in-memory bloom filters to perform quick query classification into various hierarchical toponyms in the index. It takes in a set of valid geocoding grammar rules (from solrconfig.xml) and for those permutations of classifications that pass the grammar rules, it creates boolean queries and fires against the index.\n\nI have included a util class Indexer.java to index GeoNames US data into the index. \n\nThe patch needs further work to handle queries containing house numbers etc. Some queries that work:\nhttp://HOSTNAME:8983/solr/collection1/geocoder?q=pizza%20near%20san%20francisco,%20ca\nhttp://HOSTNAME:8983/solr/collection1/geocoder?q=california\nhttp://HOSTNAME:8983/solr/collection1/geocoder?q=redwood+city\n\n(Please replace HOSTNAME with geocoder.in for a live demo)\n\nGrant Ingersoll, David Smiley and others, please review. Thanks. "
        }
    ]
}