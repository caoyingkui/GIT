{
    "id": "SOLR-1113",
    "title": "Error reports from ExtractingRequestHandler and Co do not indicate name of rejected documents",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "update"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "The ExtractingRequestHandler rejects documents that are larger than the configured multipartUploadLimitInKB in solrconfig.xml. None of the generated error messages indicate the name of the rejected document or provide any way of identifying the rejected document. The failure to identify the rejected document complicates the middleware used to look after indexes.\n\nHere is the trace produced by a recent version of trunk.\n\n\nSEVERE: org.apache.commons.fileupload.FileUploadBase$SizeLimitExceededException: the request was rejected because its size (4585774) exceeds the configured maximum (2097152)\n\tat org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl.<init>(FileUploadBase.java:914)\n\tat org.apache.commons.fileupload.FileUploadBase.getItemIterator(FileUploadBase.java:331)\n\tat org.apache.commons.fileupload.FileUploadBase.parseRequest(FileUploadBase.java:349)\n\tat org.apache.commons.fileupload.servlet.ServletFileUpload.parseRequest(ServletFileUpload.java:126)\n\tat org.apache.solr.servlet.MultipartRequestParser.parseParamsAndFillStreams(SolrRequestParsers.java:343)\n\tat org.apache.solr.servlet.StandardRequestParser.parseParamsAndFillStreams(SolrRequestParsers.java:396)\n\tat org.apache.solr.servlet.SolrRequestParsers.parse(SolrRequestParsers.java:114)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:217)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Cao Manh Dat",
            "id": "comment-15556987",
            "date": "2016-10-08T02:43:55+0000",
            "content": "In my own opinion. What happen here is when user do a multipart request to upload a file and the length of the request exceed multipartUploadLimitInKB. Under the hood when we read the header of the request, we found the \"Content-Length\" exceed the limit, so we will stop handle the request and throw out an exception, so we don't have a chance to look down for all file names of the request to print out a precise error. I think this is correct behavior because we do not want a user to upload whole the file and get an error about exceed file upload limit. So this is kinda a problem related to user behavior, they must check whether the request is successful or not ( moreover the update process can throw a lot of different kind of exception, so they have to catch problem all the time )\n\nBecause of that, I think we can close this issue as won't fix. "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-15557036",
            "date": "2016-10-08T03:15:55+0000",
            "content": "The improvement requested in this issue is not possible as the information is not provided by the underlying apache commons library until after the file is read (catch-22).\n\nA potential improvement (in its own JIRA) would be to switch multipart file parsing from all-in-one to the streaming API available from the commons library, which would allow - for example - to log on Debug level what files were parsed. But this still would not help the middleware with the one that fails. "
        },
        {
            "author": "Cao Manh Dat",
            "id": "comment-15557406",
            "date": "2016-10-08T06:55:35+0000",
            "content": "Thanks! "
        }
    ]
}