{
    "id": "LUCENE-7681",
    "title": "Remove LegacyDocValues implementations from MemoryIndex",
    "details": {
        "labels": "",
        "priority": "Minor",
        "resolution": "Fixed",
        "affect_versions": "7.0",
        "status": "Resolved",
        "type": "Improvement",
        "components": [],
        "fix_versions": [
            "7.0"
        ]
    },
    "description": "MemoryIndex in master is using the LegacyDocValue wrappers.  We should replace these with plain 7.0-style iterators instead.",
    "attachments": {
        "LUCENE-7681.patch": "https://issues.apache.org/jira/secure/attachment/12851406/LUCENE-7681.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15856080",
            "date": "2017-02-07T14:25:28+0000",
            "content": "Patch.  This also re-instates the caching of norm values that was removed when we cut over to the iterator API (we cache the value itself rather than a NumericDocValues instance).  I'm open to stripping this out again though, or just computing it up-front rather than lazily as is done now. ",
            "author": "Alan Woodward"
        },
        {
            "id": "comment-15856451",
            "date": "2017-02-07T18:09:46+0000",
            "content": "+1 for using the new iterator API!\n\nIs the norm really computed lazily? I see a call to getNormDocValues in freeze() which makes me think it is computed up-front.\nAlso I think the advanceExact impls do not honor the contract that docId() returns target after advanceExact(target) has been called, regardless of whether the document had a value for that doc (however, since target needs to be a valid docID, it may only be 0 in the case of MemoryIndex). ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15859384",
            "date": "2017-02-09T11:27:52+0000",
            "content": "Is the norm really computed lazily?\n\nIt is if you don't call freeze, which I hope to remove for 7.0.\n\nre advanceExact, I don't think that applies here, because DV fields in MemoryIndex will always have a value?  Unless I'm misunderstanding you.  If you call advanceExact(0), then docId() will return 0, but if you call it with any other value then it will return NO_MORE_DOCS. ",
            "author": "Alan Woodward"
        },
        {
            "id": "comment-15859521",
            "date": "2017-02-09T13:34:35+0000",
            "content": "That works for me, thanks for the explanations! ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-15861231",
            "date": "2017-02-10T13:07:40+0000",
            "content": "+1 looks good! ",
            "author": "Martijn van Groningen"
        },
        {
            "id": "comment-15871556",
            "date": "2017-02-17T09:50:51+0000",
            "content": "Commit 7a8c59dd86ae8788b61047aad7f2bc159733e604 in lucene-solr's branch refs/heads/master from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7a8c59d ]\n\nLUCENE-7681: Remove LegacyDocValues implementations from MemoryIndex ",
            "author": "ASF subversion and git services"
        }
    ]
}