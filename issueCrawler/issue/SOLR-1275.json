{
    "id": "SOLR-1275",
    "title": "Add expungeDeletes to DirectUpdateHandler2",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [
            "update"
        ],
        "type": "Improvement",
        "priority": "Trivial",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "expungeDeletes is a useful method somewhat like optimize is offered by IndexWriter that can be implemented in DirectUpdateHandler2.",
    "attachments": {
        "SOLR-1275.patch": "https://issues.apache.org/jira/secure/attachment/12413630/SOLR-1275.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Noble Paul",
            "id": "comment-12731302",
            "date": "2009-07-15T06:31:32+0000",
            "content": "So , this should be an extra option in the CommitUpdateComand ? "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12731801",
            "date": "2009-07-16T04:55:12+0000",
            "content": "Untested patch. for review "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12731999",
            "date": "2009-07-16T15:52:52+0000",
            "content": "Patch looks good to me (also not tested it) "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12732032",
            "date": "2009-07-16T17:24:11+0000",
            "content": "I can add some tests? (would like to get familiar with Solr's test framework) "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12738942",
            "date": "2009-08-04T12:29:23+0000",
            "content": "jason, is there a way to test if expungeDeletes is indeed called?\n "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12739744",
            "date": "2009-08-05T20:56:29+0000",
            "content": "Sure, I'll have time at some point to post it, we can use the one from Lucene.  Basically create deletes in multiple segments, then call expungeDeletes, check the number of segments left.   "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12740972",
            "date": "2009-08-08T21:21:10+0000",
            "content": "Pushing this off to 1.5 given that it's very expert use, and it's not even clear what the use cases are. "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12740992",
            "date": "2009-08-08T22:42:40+0000",
            "content": "Given the simplicity of the functionality I don't see a reason to put this off.  expungeDeletes has been in INdexWriter since 2.4?   "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12740994",
            "date": "2009-08-08T23:04:43+0000",
            "content": "Apologies - my brain went the wrong way when I saw \"expungeDeletes\" and I temporarily thought it meant throwing away the deletedDocs BitVector (i.e. undeleting all previously deleted documents).  So there are definitely use cases for this.  Seems simple enough, I'll move it back to 1.4 "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12744897",
            "date": "2009-08-19T05:32:34+0000",
            "content": "\n\tAdded DirectUpdateHandlerTest.testExpungeDeletes which creates\na bunch of docs (i.e. several segments), terms known to be in\nspecific segments are found and deleted. Expunge deletes is\ncalled, the segments are fewer and the segments with the deleted\nterms no longer exist.\n\n\n\n\n\tAdded expungeDeletes functionality to DirectUpdateHandler2\n\n\n\n\n\tThe patch randomly didn't create enough of the expected\nsegments, this could be due to ConcurrentMergeScheduler. I\ncouldn't reproduce consistently.\n\n "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12744951",
            "date": "2009-08-19T08:09:43+0000",
            "content": "The patch looks fine to me . I plan to commit this shortly "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12745031",
            "date": "2009-08-19T12:22:17+0000",
            "content": "committed: r805774\nthanks Jason "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12745128",
            "date": "2009-08-19T17:07:16+0000",
            "content": "the testcase fails "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12745135",
            "date": "2009-08-19T17:13:12+0000",
            "content": "committed r805888\n\nThe test passes now. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12745150",
            "date": "2009-08-19T17:56:51+0000",
            "content": "The tests are passing ,but for the time being I wish to keep this open . Let us review the change in DUH2#commit() once again and ensure that the fix is right "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12745172",
            "date": "2009-08-19T19:07:14+0000",
            "content": "\n\tAdded solrconfig-serialms.xml which uses a\nSerialMergeScheduler (instead of ConcurrentMergeScheduler).\nOtherwise we get inconsistent numbers of segments at variable\ntimes (because the merging is happening asynchronously)\n\n\n\n\n\tCommit is called every 500 docs to insure we get enough\nsegments\n\n\n\n\n\tTest passes\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12745214",
            "date": "2009-08-19T21:31:36+0000",
            "content": "The standard solrconfig.xml in the test directory has a LogDocMergePolicy and maxBufferedDocs=10 to generate more segments.\nIn some other Solr tests, I add a few docs, then do a commit, add a few docs, then do another commit to get 2 segments for example.  Shouldn't that work to get a fixed number of segments? "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12745249",
            "date": "2009-08-20T00:14:09+0000",
            "content": "Because maxBufferedDocs=10, and the previous patch was creating\n3000 docs, a lot of merging was happening in the background. SMS\ngives predictable merging for any number of documents which is\nmore suitable for testing. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12745467",
            "date": "2009-08-20T16:00:39+0000",
            "content": "How about this much simpler test that's faster to execute, and should be very easy to fix if/when behavior changes in the future (which it certainly could with NRT stuff).  It also tests more of the complete loop too by going through the XML update command. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12745468",
            "date": "2009-08-20T16:02:16+0000",
            "content": "Hmmm, it's harder to see in diff format... the test just boils down to this:\n\n\n  public void testExpungeDeletes() throws Exception {\n    assertU(adoc(\"id\",\"1\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"3\"));\n    assertU(adoc(\"id\",\"2\"));\n    assertU(adoc(\"id\",\"4\"));\n    assertU(commit());\n\n    SolrQueryRequest sr = req(\"q\",\"foo\");\n    SolrIndexReader r = sr.getSearcher().getReader();\n    assertTrue(r.maxDoc() > r.numDocs());   // should have deletions\n    assertTrue(r.getLeafReaders().length > 1);  // more than 1 segment\n    sr.close();\n\n    assertU(commit(\"expungeDeletes\",\"true\"));\n\n    sr = req(\"q\",\"foo\");\n    r = sr.getSearcher().getReader();\n    assertEquals(r.maxDoc(), r.numDocs());  // no deletions\n    assertTrue(r.getLeafReaders().length > 1);  // still more than 1 segment\n    sr.close();\n  }\n\n "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12745643",
            "date": "2009-08-20T21:04:34+0000",
            "content": "I like using XML, I was wondering why in\nTermVectorComponentTest.testDistributed we're manually creating\nthe distributed part? I'm currently picking art\nTestDistributedSearch to test out a distributed component (a bit\nof work). \n\nexpungeDeletes is supposed to remove segments that contains\ndeletes. The patch posted does this by checking the segment\nnames. This will work fine with NRT. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12745695",
            "date": "2009-08-20T22:16:47+0000",
            "content": "Isn't it much simpler to just check that the segments have no deletes after expungeDeletes is called?\nIs there something my proposed patch doesn't test that you think it should? "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12745717",
            "date": "2009-08-20T23:08:25+0000",
            "content": "> Isn't it much simpler \n\nCalling SR.undelete would remove the deletes and the test would\npass? "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12745731",
            "date": "2009-08-20T23:48:18+0000",
            "content": "I'll check in a new patch that's faster (i.e. indexes fewer docs). "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12745952",
            "date": "2009-08-21T12:58:43+0000",
            "content": "Calling SR.undelete would remove the deletes and the test would pass?\n\nSimple to fix... check against the exact number of documents instead of checking that there are no deletes. "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12747120",
            "date": "2009-08-24T22:44:09+0000",
            "content": "\n\tReduced the num docs indexed to make the test faster\n\n\n\n\n\texpungeDeletes merges away segments with deletes, if we don't\n  test to insure the segments with deletes are in fact gone, we're \n  unfortunately not testing the functionality of the method\n\n\n\n\n\tIncorporated Yonik's additions\n\n\n\n\n\tcommit(\"expungeDeletes\",\"true\");  // doesn't work\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12747446",
            "date": "2009-08-25T14:44:08+0000",
            "content": "if we don't test to insure the segments with deletes are in fact gone, we're unfortunately not testing the functionality of the method.\n\nDo we need to?  We should be testing that the method is called and look for evidence that it has done it's work.  All of the corner cases of testing if it did it's work correctly would seem to belong in Lucene unit tests? "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12747788",
            "date": "2009-08-26T05:41:31+0000",
            "content": "Do we need to? We should be testing that the method is called and look for evidence that it has done it's work.\n\nI guess , we should only test if the message indeed got called . Whether the call really does the work need not be tested "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12752696",
            "date": "2009-09-08T19:51:49+0000",
            "content": "What's the status on this one? "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12752880",
            "date": "2009-09-09T03:29:54+0000",
            "content": "here is some confusion on whether the testcase is right/good enough. Yonik may have a final word on this "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12753132",
            "date": "2009-09-09T15:47:24+0000",
            "content": "Yonik may have a final word on this \n\nHey, there aren't any benevolent dictators around here   Arguments should stand on their own.\n\nI was just confused why the test was so complicated, and didn't look forward to maintaining it in the face of future changes.  But I guess we can always cross that bridge when we come to it.\n\nAre the current tests failing for anyone? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12753142",
            "date": "2009-09-09T16:14:00+0000",
            "content": "Hey, there aren't any benevolent dictators around here\n\nI always suspected we were being guided by selfish dictators  "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12753179",
            "date": "2009-09-09T17:36:06+0000",
            "content": "the tests never failed in my box or in the nightly builds. \nJason , did you observe it failing? "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12753628",
            "date": "2009-09-10T14:03:32+0000",
            "content": "Tests pass for me, Noble, can this be resolved now? "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12753646",
            "date": "2009-09-10T14:53:30+0000",
            "content": "marking this as resolved. let us open another issue if the testcase needs to be changed "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12755234",
            "date": "2009-09-14T23:09:15+0000",
            "content": "The DirectUpdateHandlerTest fails as solrconfig-serialms.xml didn't make it into trunk.  Which patch was committed? "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12755322",
            "date": "2009-09-15T03:31:51+0000",
            "content": "solrconfig-serialms.xml is not in the trunk. which testcase and patch has this? "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12755339",
            "date": "2009-09-15T04:51:27+0000",
            "content": "The latest patch dated 2009-08-24 03:44 PM. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775805",
            "date": "2009-11-10T15:52:10+0000",
            "content": "Bulk close for Solr 1.4 "
        }
    ]
}