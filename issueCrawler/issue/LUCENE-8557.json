{
    "id": "LUCENE-8557",
    "title": "LeafReader.getFieldInfos should always return the same instance",
    "details": {
        "components": [],
        "status": "Resolved",
        "resolution": "Fixed",
        "fix_versions": [],
        "affect_versions": "7.5",
        "labels": "",
        "priority": "Major",
        "type": "Bug"
    },
    "description": "Most implementations of the LeafReader cache an instance of FieldInfos which is returned in the LeafReader.getFieldInfos() method.\u00a0 There are a few places that currently do not and this can cause performance problems.\n\nThe most notable example is the lack of caching in Solr's SlowCompositeReaderWrapper which caused unexpected performance slowdowns when trying to use Solr's JSON Facets compared to the legacy facets.\n\nThis proposed change is mostly relevant to Solr but touches a few Lucene classes.\u00a0 Specifically:\n\n1. Adds a check to TestUtil.checkReader to verify that LeafReader.getFieldInfos() returns the same instance:\n\n\u00a0\n\n// FieldInfos should be cached at the reader and always return the same instance\n if (reader.getFieldInfos() != reader.getFieldInfos()) {\n throw new RuntimeException(\"getFieldInfos() returned different instances for class: \"+reader.getClass());\n }\n\n\nI'm not entirely sure this is wanted or needed but adding it uncovered most of the other LeafReader implementations that were not caching FieldInfos.\u00a0 I'm happy to remove this part of the patch though.\n\n\u00a0\n\n2. Adds a FieldInfos.EMPTY that can be used in a handful of places\n\n\u00a0\n\npublic final static FieldInfos EMPTY = new FieldInfos(new FieldInfo[0]);\n\n\nThere are several places in the Lucene/Solr tests that were creating empty instances of FieldInfos which were causing the check in #1 to fail.\u00a0 This fixes those failures and cleans up the code a bit.\n\n3. Fixes a few LeafReader implementations that were not caching FieldInfos\n\nSpecifically:\n\n\tMemoryIndex.MemoryIndexReader - The constructor was already looping over the\u00a0fields so it seemed natural to just create the FieldInfos at that time\n\tSlowCompositeReaderWrapper - This was the one causing me trouble.\u00a0 I've moved the caching of FieldInfos from SolrIndexSearcher to\u00a0SlowCompositeReaderWrapper.\n\tCollapsingQParserPlugin.ReaderWrapper - getFieldInfos() is immediately called twice after this is constructed\n\tExpandComponent.ReaderWrapper -\u00a0getFieldInfos() is immediately called twice after this is constructed\n\n\n\n\u00a0\n\n4. Minor Solr tweak to avoid calling SolrIndexSearcher.getSlowAtomicReader in\u00a0FacetFieldProcessorByHashDV.\u00a0 This change is now optional since\u00a0SlowCompositeReaderWrapper caches FieldInfos.\n\n\u00a0\n\nAs suggested by David Smiley this takes the place of\u00a0SOLR-12878 since it touches some Lucene code.",
    "attachments": {
        "LUCENE-8557.patch": "https://issues.apache.org/jira/secure/attachment/12947106/LUCENE-8557.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16674056",
            "author": "David Smiley",
            "content": "+1 ",
            "date": "2018-11-03T14:17:29+0000"
        },
        {
            "id": "comment-16677045",
            "author": "David Smiley",
            "content": "In this updated patch I made some further improvements to Solr's CollapseQParserPlugin & ExpandComponent to share the same ReaderWrapper since they are the same code. \u00a0I plan to commit this pretty soon. \u00a0I'm just running tests and precommit. ",
            "date": "2018-11-06T17:31:10+0000"
        },
        {
            "id": "comment-16677088",
            "author": "Tim Underwood",
            "content": "Updated patch looks good to me. ",
            "date": "2018-11-06T17:59:07+0000"
        },
        {
            "id": "comment-16677235",
            "author": "ASF subversion and git services",
            "content": "Commit d0cd4245bdb8363e9adf3812817b9989ce4f506c in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d0cd424 ]\n\nLUCENE-8557: LeafReader.getFieldInfos should always return the same instance\nMemoryIndex: compute/cache up-front\nSolr Collapse/Expand with top_fc: compute/cache up-front\nJson Facets numerics / hash DV: use the cached fieldInfos on SolrIndexSearcher\nSolrIndexSearcher: move the cached FieldInfos to SlowCompositeReaderWrapper ",
            "date": "2018-11-06T19:45:40+0000"
        },
        {
            "id": "comment-16677244",
            "author": "ASF subversion and git services",
            "content": "Commit 12719d19609d87ab0e2a4132d4988dd4362b6575 in lucene-solr's branch refs/heads/branch_7x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=12719d1 ]\n\nLUCENE-8557: LeafReader.getFieldInfos should always return the same instance\nMemoryIndex: compute/cache up-front\nSolr Collapse/Expand with top_fc: compute/cache up-front\nJson Facets numerics / hash DV: use the cached fieldInfos on SolrIndexSearcher\nSolrIndexSearcher: move the cached FieldInfos to SlowCompositeReaderWrapper\n\nCloses #487\n(cherry picked from commit d0cd4245bdb8363e9adf3812817b9989ce4f506c) ",
            "date": "2018-11-06T19:56:53+0000"
        }
    ]
}