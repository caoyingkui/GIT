{
    "id": "SOLR-2861",
    "title": "transaction log / realtime-get failures",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "realtime-get or the transaction log fails sometimes",
    "attachments": {
        "fail13_postfix.xml": "https://issues.apache.org/jira/secure/attachment/12501780/fail13_postfix.xml",
        "TEST-org.apache.solr.search.TestRealTimeGet.xml": "https://issues.apache.org/jira/secure/attachment/12501284/TEST-org.apache.solr.search.TestRealTimeGet.xml",
        "trunk-0.txt": "https://issues.apache.org/jira/secure/attachment/12501289/trunk-0.txt",
        "fail4.xml": "https://issues.apache.org/jira/secure/attachment/12501449/fail4.xml",
        "jenkins_output.txt": "https://issues.apache.org/jira/secure/attachment/12501203/jenkins_output.txt",
        "fail5.xml": "https://issues.apache.org/jira/secure/attachment/12501478/fail5.xml",
        "fail11.xml": "https://issues.apache.org/jira/secure/attachment/12501712/fail11.xml",
        "fail17.xml": "https://issues.apache.org/jira/secure/attachment/12502098/fail17.xml",
        "solr_debug.patch": "https://issues.apache.org/jira/secure/attachment/12501533/solr_debug.patch",
        "fail16.xml": "https://issues.apache.org/jira/secure/attachment/12501998/fail16.xml"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-13137784",
            "date": "2011-10-28T00:33:31+0000",
            "content": "Here's the output from one of the failed jenkins runs.  I have not been able to reproduce these EOF exceptions on my boxes. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13137786",
            "date": "2011-10-28T00:42:47+0000",
            "content": "One failure I was able to reproduce after running for an hour was this:\n\n\nSEVERE: java.lang.RuntimeException: java.lang.NullPointerException\n        at org.apache.solr.core.SolrCore.getSearcher(SolrCore.java:1140)\n        at org.apache.solr.update.DirectUpdateHandler2.commit(DirectUpdateHandler2.j\nava:332)\n        at org.apache.solr.update.processor.RunUpdateProcessor.processCommit(RunUpda\nteProcessorFactory.java:84)\n        at org.apache.solr.handler.XMLLoader.processUpdate(XMLLoader.java:158)\n        at org.apache.solr.handler.XMLLoader.load(XMLLoader.java:78)\n        at org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(Conten\ntStreamHandlerBase.java:58)\n        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBa\nse.java:129)\n        at org.apache.solr.core.SolrCore.execute(SolrCore.java:1453)\n        at org.apache.solr.servlet.DirectSolrConnection.request(DirectSolrConnection\n.java:131)\n        at org.apache.solr.util.TestHarness.update(TestHarness.java:247)\n        at org.apache.solr.util.TestHarness.checkUpdateStatus(TestHarness.java:295)\n        at org.apache.solr.util.TestHarness.validateUpdate(TestHarness.java:265)\n        at org.apache.solr.SolrTestCaseJ4.checkUpdateU(SolrTestCaseJ4.java:357)\n        at org.apache.solr.SolrTestCaseJ4.assertU(SolrTestCaseJ4.java:336)\n        at org.apache.solr.SolrTestCaseJ4.assertU(SolrTestCaseJ4.java:330)\n        at org.apache.solr.search.TestRealTimeGet$1.run(TestRealTimeGet.java:212)\nCaused by: java.lang.NullPointerException\n        at org.apache.solr.core.SolrCore.getIndexDir(SolrCore.java:156)\n        at org.apache.solr.core.SolrCore.getSearcher(SolrCore.java:1104)\n        ... 15 more\n\n\n\n\nBut this doesn't look related. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13137793",
            "date": "2011-10-28T00:47:31+0000",
            "content": "The reason for the bug above looks relatively clear - the _searcher variable is being accessed without grabbing searcherLock, and that's a no-no.  SolrCore.getIndexDir() is buggy.  I'll fix. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13138249",
            "date": "2011-10-28T12:03:01+0000",
            "content": "OK, I finally got an assertion failure after running all night.  Log attached.\n\nI've still never seen a single EOF exception like jenkins sees...  "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13138701",
            "date": "2011-10-28T20:00:36+0000",
            "content": "Thanks selckin!  Looks like you hit what I did (a test assert, but not an EOF exception).\nHow easy is it for you to reproduce? "
        },
        {
            "author": "selckin",
            "id": "comment-13139114",
            "date": "2011-10-29T05:02:05+0000",
            "content": "hit that one in about 30min then swapped to running all tests "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13139264",
            "date": "2011-10-29T13:12:27+0000",
            "content": "Here are some selected lines from fail4.xml, with comments:\n\n\n316   TEST:WRITER7: adding id 30 val= 3 DONE\n466   TEST:WRITER9: softCommit start\n# Note: this is only the start of softCommit in the test... it's synchronized in Solr so only one thread can reopen the\n# reader and create a new searcher at a time.\n3074  TEST:WRITER10: deleting id 30 val= 6 DONE\n# At this point the delete command has returned (and in the test, we put -6 in the model as the value)\n3592  VERBOSE:WRITER9: TLOG: preSoftCommit: prevMap=1355224018 new map=10577597\n# Note: actual reopen happens here, in a synchronized context.\n3593  VERBOSE:WRITER9: added searcher  Searcher@6460029d main  to _searchers reader version= 1319870174085\n3673  VERBOSE:READER7: TLOG: lookup: for id 30 in prevMap 10577597 got null lookupLog=/opt/code/lusolr/solr/build/solr-core/test/1/solrtest-TestRealTimeGet-1319870172806/tlog/tlog.0000000000000000002\n3673  VERBOSE:READER7: RealTimeGet using searcher  Searcher@6460029d main\n3677  TEST:READER7: ERROR, id= 30 foundVal= 3 model val= -6 realTime= true\n# We find the old value using the new searcher!\n\n\n\nFrom this, it doesn't look like it's the transaction log, or realtime-get.\nWe can see that the doc was deleted, a new searcher was opened, and then it was used to do a lookup and got the old value.\n\nBrainstorming:\n\n\tBug in solr reopen code. This seems less likely since getSearcher() calls that result in a reopen are synchronized from the outside...  so races shouldn't be possible there.\n\tBug in lucene.  This is looking more likely now, but I can't yet reproduce it in a pure lucene test.  It could be a reopen concurrency bug (like the last were) or possibly a MultiFields & friends bug (see SolrIndexSearcher/getFirstMatch used to do the lookup by id)\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13139484",
            "date": "2011-10-29T22:54:20+0000",
            "content": "Here's the fail5.xml analysis (more debugging prints this run):\n\n\n2340  TEST:WRITER5: adding id 0 val= 7 DONE\n2347  VERBOSE:WRITER3: commit reopen start: reopenWithWriter= true searcher= Searcher@1e9cd8db main{DirectoryReader(segments_4:1319924531747:nrt _3(4.0):C7/4 _2(4.0):C4/3),version=1319924531747} reader= DirectoryReader(segments_4:1319924531747:nrt _3(4.0):C7/4 _2(4.0):C4/3)\n\n2438 TEST:WRITER6: deleting id 0 val= 8\n2480 TEST:WRITER6: deleting id 0 val= 8 DONE\n\n2491  VERBOSE:WRITER3: reopen DONE: searcher= Searcher@2aa937cd main{DirectoryReader(segments_4:1319924531751:nrt _4(4.0):C13/8),version=1319924531751} reader= DirectoryReader(segments_4:1319924531751:nrt _4(4.0):C13/8)\n\n### Note that the delete happened sometime during (or right before or after) the reopen, so we don't know if version 1319924531751 reflects the delete.  That's OK, because we are going to do another reopen next:\n\n2516  VERBOSE:WRITER6: commit reopen start: reopenWithWriter= true searcher= Searcher@2aa937cd main{DirectoryReader(segments_4:1319924531751:nrt _4(4.0):C13/8),version=1319924531751} reader= DirectoryReader(segments_4:1319924531751:nrt _4(4.0):C13/8)\n2518  VERBOSE:WRITER6: reopen DONE: searcher= Searcher@59c958af main{DirectoryReader(segments_4:1319924531751:nrt _4(4.0):C13/8),version=1319924531751} reader= DirectoryReader(segments_4:1319924531751:nrt _4(4.0):C13/8)\n\n### OK... so the reopen didn't change the reader.  That's OK, since there weren't necessarily any new\n    changes (i.e. the delete of 0 could be reflected in the previous reopen).\n\n2529  VERBOSE:READER18: RealTimeGet using searcher  Searcher@59c958af main{DirectoryReader(segments_4:1319924531751:nrt _4(4.0):C13/8),version=1319924531751}\n2531  TEST:READER18: ERROR, id= 0 foundVal= 7 model val= -8 realTime= true\n\n#### Oops, we've found the old value again somehow.\n\n\n\nStarting to look more like a lucene bug - but still can't reproduce at that level. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13139785",
            "date": "2011-10-30T21:39:15+0000",
            "content": "Update:  I think I may have found one logic bug in solr - a hard commit reopen can go back in time since it doesn't use the writer to repoen.  For example Thread1: commit()  Thread2: reopen(writer)  Thread1: reopen(without_writer).   That last reopen will reopen at the point of the commit, going back in time if updates happened in between.\n\nNow the bad news: I changed the test to only use soft commits, and still hit problems.  I also changed some of the prints to immediately proceed and follow the lucene API calls to try and further nail this down.  The log file was too large to attach, but here is the analysis:\n\n\n13628  TEST:WRITER21: adding id 4 val= 21\n13779  VERBOSE:WRITER21: updateDocument id:4 Document<stored,indexed,indexOptions=DOCS_ONLY<id:4> stored,indexed,tokenized,omitNorms,indexOptions=DOCS_ONLY<val_l:21>> org.apache.solr.update.SolrIndexWriter@4ba76eff\n13969  VERBOSE:WRITER21: updateDocument id:4 DONE\n\n69276  VERBOSE:WRITER3: start reopen from Searcher@17db8f8e main{DirectoryReader(segments_4:1320005350742:nrt _4h(4.0):C18/17 _4i(4.0):C3/2 _4j(4.0):C1 _4k(4.0):C3/1 _4l(4.0):C6)} writer= org.apache.solr.update.SolrIndexWriter@4ba76eff\n69293  VERBOSE:WRITER3: reopen result DirectoryReader(segments_4:1320005350743:nrt _4h(4.0):C18/17 _4i(4.0):C3/2 _4j(4.0):C1 _4k(4.0):C3/1 _4l(4.0):C6/1)\n\n69349  TEST:WRITER2: deleting id 4 val= 22\n69365  VERBOSE:WRITER2: deleteDocuments id:4 org.apache.solr.update.SolrIndexWriter@4ba76eff\n69366  VERBOSE:WRITER9: start reopen from Searcher@256d6cf main{DirectoryReader(segments_4:1320005350743:nrt _4h(4.0):C18/17 _4i(4.0):C3/2 _4j(4.0):C1 _4k(4.0):C3/1 _4l(4.0):C6/1)} writer= org.apache.solr.update.SolrIndexWriter@4ba76eff\n69367 VERBOSE:WRITER9: reopen result (null)\n\n69394  VERBOSE:WRITER2: deleteDocuments id:4 DONE\n\n69424  VERBOSE:WRITER7: start reopen from Searcher@61c3e3fb main{DirectoryReader(segments_4:1320005350743:nrt _4h(4.0):C18/17 _4i(4.0):C3/2 _4j(4.0):C1 _4k(4.0):C3/1 _4l(4.0):C6/1)} writer= org.apache.solr.update.SolrIndexWriter@4ba76eff\n69426  VERBOSE:WRITER7: reopen result (null)\nT\n\n69447  VERBOSE:READER14: RealTimeGet using searcher  Searcher@742136c6 main{DirectoryReader(segments_4:1320005350743:nrt _4h(4.0):C18/17 _4i(4.0):C3/2 _4j(4.0):C1 _4k(4.0):C3/1 _4l(4.0):C6/1)}\nTEST:READER14: ERROR, id= 4 foundVal= 21 model val= -20 realTime= true\n\n\n\nSo as you can see, this looks much like anaylsis5 - a delete happened during the first reopen (hence may or may not be reflected in that reopen), and then there was another reopen which resulted in \"null\" (no changes).  But a lookup using the resulting reader finds the document which should be deleted.\n\nThis is still looking like we have a lucene bug. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13139790",
            "date": "2011-10-30T21:42:05+0000",
            "content": "Here's a patch with the debugging code I've been using.  Notice the prints surrounding the lucene API calls for adding, deleting, and reopening. "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13139823",
            "date": "2011-10-30T23:06:08+0000",
            "content": "tricky shit man! I think I found the issue! we only check the bufferedDeleteStream for changes in IW#nrtIsCurrent instead we should check the deleteQueue since there could be some deletes still in the queue but not yet applied to the delete stream. here is a diff though:\n\n\nIndex: java/org/apache/lucene/index/IndexWriter.java\n===================================================================\n--- java/org/apache/lucene/index/IndexWriter.java\t(revision 1195214)\n+++ java/org/apache/lucene/index/IndexWriter.java\t(working copy)\n@@ -4074,7 +4074,7 @@\n   synchronized boolean nrtIsCurrent(SegmentInfos infos) {\n     //System.out.println(\"IW.nrtIsCurrent \" + (infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedDeletesStream.any()));\n     ensureOpen();\n-    return infos.version == segmentInfos.version && !docWriter.anyChanges() && !bufferedDeletesStream.any();\n+    return infos.version == segmentInfos.version && !docWriter.anyChanges() && !docWriter.deleteQueue.anyChanges();\n   }\n\n\n\nyonik, I didn't try this since I only looked at the code for a little while to figure out what could be the reason you see this. Can you verify? "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13139996",
            "date": "2011-10-31T08:23:34+0000",
            "content": "I created LUCENE-3546 to track this problem further "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13140204",
            "date": "2011-10-31T14:56:19+0000",
            "content": "Thanks Simon - I'll see if I can reproduce a failure with infostream on. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13140567",
            "date": "2011-10-31T21:18:11+0000",
            "content": "I haven't yet been able to reproduce with infostream on, but here's another failure w/ it off (again raw log file too big to attach)\n\n\n187551  VERBOSE:WRITER27: deleteDocuments id:25 org.apache.solr.update.SolrIndexWriter@10c789fb\n187552  VERBOSE:WRITER0: start reopen from Searcher@5df9cdda main{DirectoryReader(segments_t:1320072235329:nrt _hz(4.0):C18/11 _hy(4.0):c1 _hw(4.0):c1 _i1(4.0):C12/6 _i3(4.0):c1 _i4(4.0):C3 _i5(4.0):c1)} writer= org.apache.solr.update.SolrIndexWriter@10c789fb\n187553  VERBOSE:WRITER0: reopen result (null)\n187554  VERBOSE:WRITER27: deleteDocuments id:25 DONE\n\n187559  VERBOSE:WRITER4: start reopen from Searcher@5166b0df main{DirectoryReader(segments_t:1320072235329:nrt _hz(4.0):C18/11 _hy(4.0):c1 _hw(4.0):c1 _i1(4.0):C12/6 _i3(4.0):c1 _i4(4.0):C3 _i5(4.0):c1)} writer= org.apache.solr.update.SolrIndexWriter@10c789fb\n187560  VERBOSE:WRITER4: reopen result (null)\n\n187891  VERBOSE:READER8: RealTimeGet using searcher  Searcher@642424ad main{DirectoryReader(segments_t:1320072235329:nrt _hz(4.0):C18/11 _hy(4.0):c1 _hw(4.0):c1 _i1(4.0):C12/6 _i3(4.0):c1 _i4(4.0):C3 _i5(4.0):c1)}\n187892  TEST:READER8: ERROR, id= 25 foundVal= 9 model val= -10 realTime= true\n\n\n\nDefinitely a pattern developing here (same as the previous two)... a delete happens concurrently with a reopen (of course from prints alone, we can't tell if it was just before, during, or just after).  The reopen following that reopen should reflect the delete at least... but it doesn't. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13140624",
            "date": "2011-10-31T22:17:14+0000",
            "content": "\nUpdate: I think I may have found one logic bug in solr - a hard commit reopen can go back in time since it doesn't use the writer to repoen. For example Thread1: commit() Thread2: reopen(writer) Thread1: reopen(without_writer). That last reopen will reopen at the point of the commit, going back in time if updates happened in between.\n\nActually, I don't think this is true.  AFAIK, once you call openIfChanged(reader,writer) it doesn't matter if future calls are just to openIfChanged(reader) since reopening an NRT reader will always result in another NRT reader? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13140770",
            "date": "2011-11-01T01:23:38+0000",
            "content": "OK, it finally failed with the infostream set (see fail11.xml)!  Unfortunately, I'm not sure if it will provide much (or any) info.\n\n\n46563  VERBOSE:WRITER7: start reopen from Searcher@5f159e0c main{DirectoryReader(segments_2:1320108281745:nrt _5p(4.0):C20/16 _5n(4.0):C7/5 _5q(4.0):C7/2 _5r(4.0):C7 _5s(4.0):C2)} writer= org.apache.solr.update.SolrIndexWriter@1de4eb5b\n46686  VERBOSE:WRITER7: reopen result DirectoryReader(segments_2:1320108281747:nrt _5p(4.0):C20/16 _5n(4.0):C7/5 _5q(4.0):C7/3 _5r(4.0):C7/1 _5s(4.0):C2 _5t(4.0):C1)\n\n46706  VERBOSE:WRITER11: deleteDocuments id:12 org.apache.solr.update.SolrIndexWriter@1de4eb5b\n46707  VERBOSE:WRITER0: start reopen from Searcher@502c06b2 main{DirectoryReader(segments_2:1320108281747:nrt _5p(4.0):C20/16 _5n(4.0):C7/5 _5q(4.0):C7/3 _5r(4.0):C7/1 _5s(4.0):C2 _5t(4.0):C1)} writer= org.apache.solr.update.SolrIndexWriter@1de4eb5b\n46708  VERBOSE:WRITER0: reopen result (null)\n46709  VERBOSE:WRITER11: deleteDocuments id:12 DONE\n\n46714  VERBOSE:WRITER12: start reopen from Searcher@7a6bb93c main{DirectoryReader(segments_2:1320108281747:nrt _5p(4.0):C20/16 _5n(4.0):C7/5 _5q(4.0):C7/3 _5r(4.0):C7/1 _5s(4.0):C2 _5t(4.0):C1)} writer= org.apache.solr.update.SolrIndexWriter@1de4eb5b\n46715  VERBOSE:WRITER12: reopen result (null)\n\n46924  VERBOSE:READER1: RealTimeGet using searcher  Searcher@69ed2bbd main{DirectoryReader(segments_3:1320108281747:nrt _5p(4.0):C20/16 _5n(4.0):C7/5 _5q(4.0):C7/3 _5r(4.0):C7/1 _5s(4.0):C2 _5t(4.0):C1)}\n46926  VERBOSE:READER1: ERROR, id= 12 foundVal= 30 model val= -31 realTime= true\n\n\n\n\nIt's the same story: the delete happened concurrently (or slightly before or after) the reopen.  Both that reopen, and the following reopen returned null, which is definitely a bug. "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13141118",
            "date": "2011-11-01T12:55:41+0000",
            "content": "I reopened LUCENE-3546 since the bug actually exists. see my comments on  LUCENE-3546 "
        },
        {
            "author": "Michael McCandless",
            "id": "comment-13141141",
            "date": "2011-11-01T13:00:33+0000",
            "content": "once you call openIfChanged(reader,writer) it doesn't matter if future calls are just to openIfChanged(reader) since reopening an NRT reader will always result in another NRT reader?\n\nThat's correct. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13141222",
            "date": "2011-11-01T15:04:43+0000",
            "content": "Here's a run  (fail13) w/ mixed hard+soft commits after Simon's patch.\n\n\n14047  VERBOSE:WRITER5: start reopen without writer, reader= DirectoryReader(segments_6:1320156373422:nrt _y(4.0):C78/7 _n(4.0):c2/1 _x(4.0):c11/1 _w(4.0):c1)\n14184  VERBOSE:WRITER14: updateDocument id:98 Document<stored,indexed,indexOptions=DOCS_ONLY<id:98> stored,indexed,tokenized,omitNorms,indexOptions=DOCS_ONLY<val_l:3>> org.apache.solr.update.SolrIndexWriter@43a4181c\n14504  VERBOSE:WRITER14: updateDocument id:98 DONE\n14523  VERBOSE:WRITER5: reopen result DirectoryReader(segments_6:1320156373425:nrt _y(4.0):C78/15 _n(4.0):c2/1 _x(4.0):c11/1 _w(4.0):c1 _z(4.0):C7)\n\n### The update to id:98 may or may not be in the resulting reader above\n\n14728  VERBOSE:WRITER8: start reopen from Searcher@28294f62 main{DirectoryReader(segments_6:1320156373425:nrt _y(4.0):C78/15 _n(4.0):c2/1 _x(4.0):c11/1 _w(4.0):c1 _z(4.0):C7)} writer= org.apache.solr.update.SolrIndexWriter@43a4181c\n14729  VERBOSE:WRITER8: reopen result (null)\n\n### But this reopen shows no changes, so the update id:98 must be in reader 1320156373425\n\n14920  VERBOSE:READER2: RealTimeGet using searcher  Searcher@79b0d33c main{DirectoryReader(segments_6:1320156373425:nrt _y(4.0):C78/15 _n(4.0):c2/1 _x(4.0):c11/1 _w(4.0):c1 _z(4.0):C7)}\n14922  VERBOSE:READER2: ERROR, id= 98 foundVal= 2 model val= 3 realTime= true\n\n### Since we got the old value, we either missed the whole update, or just the delete part of the update\n(since the uniqueKey lookup stops at the first match, the new document may be in the index, but we hit the old document first that wasn't marked as deleted)\n\n "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13141265",
            "date": "2011-11-01T16:00:38+0000",
            "content": "\n#those two happen at the same time roughly\n14728 VERBOSE:WRITER8: start reopen from Searcher@28294f62 main{DirectoryReader(segments_6:1320156373425:nrt _y(4.0):C78/15 _n(4.0):c2/1 _x(4.0):c11/1 _w(4.0):c1 _z(4.0):C7)} writer= org.apache.solr.update.SolrIndexWriter@43a4181c\n14729 VERBOSE:WRITER8: reopen result (null)\n\n14733 VERBOSE:WRITER7: start reopen from Searcher@79b0d33c main{DirectoryReader(segments_6:1320156373425:nrt _y(4.0):C78/15 _n(4.0):c2/1 _x(4.0):c11/1 _w(4.0):c1 _z(4.0):C7)} writer= org.apache.solr.update.SolrIndexWriter@43a4181c\n\n14920 VERBOSE:READER2: RealTimeGet using searcher  Searcher@79b0d33c main{DirectoryReader(segments_6:1320156373425:nrt _y(4.0):C78/15 _n(4.0):c2/1 _x(4.0):c11/1 _w(4.0):c1 _z(4.0):C7)}\n14922 VERBOSE:READER2: ERROR, id= 98 foundVal= 2 model val= 3 realTime= true\n\n# here were are done -- ie the doc should be in 1320156373429\n14928 VERBOSE:WRITER7: reopen result DirectoryReader(segments_6:1320156373429:nrt _y(4.0):C78/18 _n(4.0):c2/1 _x(4.0):c11/1 _w(4.0):c1 _z(4.0):C7 _10(4.0):c5 _11(4.0):c2)\n\n\n\n\nas I said - we can not rely on the order these logs are printed - this doesn't seem like a bug in lucene no?\n\nsimon "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13141287",
            "date": "2011-11-01T16:22:39+0000",
            "content": "as I said - we can not rely on the order these logs are printed\n\nI think we can rely on that order, and have seen nothing to indicate otherwise.\n\n#those two happen at the same time roughly\n\nRight, hence my comment \"The update to id:98 may or may not be in the resulting reader above\"\nBut then after the next openIfChanged() should definitely reflect the update.\n\nthis doesn't seem like a bug in lucene no?\n\nIt absolutely looks like a lucene bug.\nBut given that it seems to only happen with a mix of hard and soft commits, it should be easier to track down.  First guess: maybe DirectoryReader.applyDeletes is false when it should be true. "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13142073",
            "date": "2011-11-02T11:55:48+0000",
            "content": "I opened LUCENE-3551 for yet another issue in IW#nrtIsCurrent. I ran TestRealtimeGet over 1k times (trunk settings) without a failure usually this doesn't survive more than 100. yonik can you try to confirm? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13142237",
            "date": "2011-11-02T16:02:59+0000",
            "content": "I just got a failure, but I had turned off verbose and cranked up the iterations to try and detect failures faster.\nI'll try and reproduce with verbose on again. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13142374",
            "date": "2011-11-02T18:18:28+0000",
            "content": "OK, here's the latest failure.\nI verified that I'm up-to-date on trunk (as of 11am EST) and that the patch from LUCENE-3551 is applied.\n\n\n12125  VERBOSE:WRITER3: updateDocument id:12 Document<stored,indexed,indexOptions=DOCS_ONLY<id:12> stored,indexed,tokenized,omitNorms,indexOptions=DOCS_ONLY<val_l:63>> org.apache.solr.update.SolrIndexWriter@62d337d3\n12126  VERBOSE:WRITER3: updateDocument id:12 DONE\n\n12920  VERBOSE:WRITER9: start reopen without writer, reader= DirectoryReader(segments_6:1320256147506:nrt _1t(4.0):C21/14 _1u(4.0):C14/11)\n12984  VERBOSE:WRITER9: reopen result DirectoryReader(segments_6:1320256147507:nrt _1t(4.0):C21/14 _1u(4.0):C14/11)\n\n13042  VERBOSE:WRITER7: deleteDocuments id:12 org.apache.solr.update.SolrIndexWriter@62d337d3\n13043  VERBOSE:WRITER7: deleteDocuments id:12 DONE\n\n13249  VERBOSE:WRITER3: start reopen from Searcher@56e20ef8 main{DirectoryReader(segments_6:1320256147507:nrt _1t(4.0):C21/14 _1u(4.0):C14/11)} writer= org.apache.solr.update.SolrIndexWriter@62d337d3\n13250  VERBOSE:WRITER3: reopen result (null)\n\n13255  VERBOSE:READER3: RealTimeGet using searcher  Searcher@1344e858 main{DirectoryReader(segments_6:1320256147507:nrt _1t(4.0):C21/14 _1u(4.0):C14/11)}\n13256  VERBOSE:READER3: ERROR, id= 12 foundVal= 63 model val= -64 realTime= true\n\n\n\nI just realized that since this seems to be happening with a mix of soft and hard commits, it's probably a thread safety issue when updates concurrently happen with a commit and I should add prints before/after calling commit also. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13142830",
            "date": "2011-11-03T04:37:15+0000",
            "content": "Here's a failure with prints for the commit and with info stream on.\n\nKey debug outout:\n\n27273  VERBOSE:WRITER1: start reopen from Searcher@71412b61 main{DirectoryReader(segments_5:1320282632962:nrt _z(4.0):C21/17 _10(4.0):C3/2 _11(4.0):C6/5 _14(4.0):C8/3 _13(4.0):C4/1 _15(4.0):C1 _16(4.0):C5/1 _18(4.0):C5)} writer= org.apache.solr.update.SolrIndexWriter@1badd463\n27321  VERBOSE:WRITER9: deleteDocuments id:14 org.apache.solr.update.SolrIndexWriter@1badd463\n27895  VERBOSE:WRITER9: deleteDocuments id:14 DONE\n28120  VERBOSE:WRITER1: reopen result DirectoryReader(segments_5:1320282632968:nrt _17(4.0):C19/7 _16(4.0):C5/3 _18(4.0):C5/2 _1a(4.0):C6/1 _19(4.0):C2)\n\n28124  VERBOSE:WRITER6: writer.commit() start writer= org.apache.solr.update.SolrIndexWriter@1badd463\n\n28135  VERBOSE:WRITER4: start reopen from Searcher@c16c2c0 main{DirectoryReader(segments_5:1320282632968:nrt _17(4.0):C19/7 _16(4.0):C5/3 _18(4.0):C5/2 _1a(4.0):C6/1 _19(4.0):C2)} writer= org.apache.solr.update.SolrIndexWriter@1badd463\n28136  VERBOSE:WRITER4: reopen result (null)\n\n28159  VERBOSE:READER2: RealTimeGet using searcher  Searcher@962e703 main{DirectoryReader(segments_5:1320282632968:nrt _17(4.0):C19/7 _16(4.0):C5/3 _18(4.0):C5/2 _1a(4.0):C6/1 _19(4.0):C2)}\n28226  VERBOSE:READER2: ERROR, id= 14 foundVal= 17 model val= -18 realTime= true\n\n28355  VERBOSE:WRITER6: writer.commit() end\n\n\n\nFor this one, it looks like the reopen was concurrent with the delete, and another reopen was concurrent with the commit.  Given that we seem to be only seeing these issues now with a mix of hard & soft commits, I'd guess that the issue is when the commit overlaps with a reopen. "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13143117",
            "date": "2011-11-03T13:05:58+0000",
            "content": "Yonik, I isolated a testcase which fails very quickly. See LUCENE-3551  "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13143194",
            "date": "2011-11-03T14:16:51+0000",
            "content": "Great!  Trying it out now... "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13144268",
            "date": "2011-11-04T19:32:22+0000",
            "content": "OK, 24 hours on my box w/o a fail! "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13144291",
            "date": "2011-11-04T20:07:40+0000",
            "content": "OK, 24 hours on my box w/o a fail!\nawesome! I am going to commit LUCENE-3551 soon "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13146109",
            "date": "2011-11-08T07:07:08+0000",
            "content": "this has been fixed in LUCENE-3551 "
        }
    ]
}