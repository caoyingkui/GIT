{
    "id": "SOLR-1621",
    "title": "Allow current single core deployments to be specified by solr.xml",
    "details": {
        "affect_versions": "1.5",
        "status": "Closed",
        "fix_versions": [
            "1.5",
            "3.1",
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "supporting two different modes of deployments is turning out to be hard. This leads to duplication of code. Moreover there is a lot of confusion on where do we put common configuration. See the mail thread http://markmail.org/message/3m3rqvp2ckausjnf",
    "attachments": {
        "SOLR-1621.patch": "https://issues.apache.org/jira/secure/attachment/12427098/SOLR-1621.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Noble Paul",
            "id": "comment-12785791",
            "date": "2009-12-04T07:05:35+0000",
            "content": "The proposed design.\n\nGoing forward for the single core example we will add a solr.xml to the $SOLR_HOME/solr directory whose content will look like\n\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<solr persistent=\"false\">\n  <cores adminPath=\"/admin/cores\">\n    <!-- \"DEFAULT_CORE\" is a special name . Solr will automatically create an alias \"\" for this name-->\n    <core name=\"DEFAULT_CORE\" instanceDir=\".\" />    \n  </cores>\n</solr>\n\n\n\nthe core will be accessible by both the names\n\n\n\thttp://host:port/solr/ (\"\" is an alias for DEFAULT_CORE )\n\thttp://host:port/solr/DEFAULT_CORE\n\n\n\nAll coreadmin actions can be performed using the core name as DEFAULT_CORE. So all coreadmin features will work for single core as well\n\nFor legacy users who have single core deployments no change needs to be done. if the solr.xml is missing we will use a default solr.xml whose content is same as above. So everything will be backward compatible. We can mark the deployments w/o solr.xml as deprecated and the we can remove it completely later.\n\n\n "
        },
        {
            "author": "Karthik K",
            "id": "comment-12785800",
            "date": "2009-12-04T07:30:11+0000",
            "content": "+1 . Thanks - This is long due, the moment we get into the multi-core world.  "
        },
        {
            "author": "Eric Pugh",
            "id": "comment-12785932",
            "date": "2009-12-04T13:47:42+0000",
            "content": "Glad to see this bug.  In the Solr book we mentioned that this was a very likely thing, and that even if you think you only need 1 core, starting out with a multicore setup is the way to go!  Especially when you toss in all the great management features of multiple cores! "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12786051",
            "date": "2009-12-04T18:16:16+0000",
            "content": "I wrote a little patch trying this out -\n\nOne of the minor issues is that the default page that shows all of the cores doesn't care about aliases - I think thats something we should address -\n\nadd a getNonAliasCores (with a different name) or something. Otherwise you see the following on the index.jsp page:\n\nWelcome to Solr!\n\nAdmin DEFAULT_CORE\nAdmin DEFAULT_CORE\n\nBased on the feedback in the discussion that spawned this, we should also consider not deprecating solr.xml. I think we should\nput one in the default example, but continue supporting no solr.xml without deprecation. If a user is not going to customize anything,\nwe don't gain much by forcing them to add the default solr.xml that we can assume anyway - and we still get all of the advantages of this issue. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12786343",
            "date": "2009-12-05T05:15:46+0000",
            "content": "continue supporting no solr.xml without deprecation. If a user is not going to customize anything,\n\nIt is better to be consistent in the long run. There is no harm if the user drops in this default solr.xml whether he customizes it or not. So , I believe we should get rid of it 2 releases later.\n\nOne of the minor issues is that the default page that shows all of the cores doesn't care about aliases -\n\nanother thing I wish to change in this is we should store the aliases also in the CoreDescriptor . That makes it simpler to show details. \n\nIt should show something like \n\nAdmin DEFAULT_CORE (alias :\"\" )\nAdmin core1 (alias : \"c2\",\"c3\")\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12786407",
            "date": "2009-12-05T13:50:04+0000",
            "content": "It is better to be consistent in the long run.\n\nWhy - what are the supporting reasons? Making current users put in a boiler plate file in the future doesn't appear to have any benefits to me. If they want to use settings in the file, they can add the file, but just to add it for the sake of adding it is not very appealing. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12786449",
            "date": "2009-12-05T17:17:35+0000",
            "content": "what are the supporting reasons?\n\nIt gives transparency. And the user will be conscious about the existence of solr.xml . like tomcat offers the default web.xml which users usually don't edit. But tells the users that it exists and certain behaviour is driven from that .\nUsers usually take the example and make the necessary changes. So technically they don't 'add' it.  Anyway this is a minor technicality.  "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12786454",
            "date": "2009-12-05T17:35:57+0000",
            "content": "And the user will be conscious about the existence of solr.xml .\n\nThey will be aware because we will include it with example.\n\nSo technically they don't 'add' it.\n\nNew users won't add it, but old users will have to it - generally with no benefit. If you are just running single core, being conscious of solr.xml is not very useful. Forcing older users to add the file, just to make them conscious off it, is not very persuasive in my opinion. Its more config for the user with no benefit.\n\nAnyway this is a minor technicality\n\nIts something that we will have to come to consensus on. "
        },
        {
            "author": "Uri Boness",
            "id": "comment-12786456",
            "date": "2009-12-05T17:56:44+0000",
            "content": "In addition to the awareness I believe it's also consistent. Having two deferent configuration mechanisms for single and multi-core eventually adds to the complexity. A consistent directory layout and one single access point to the configuration (that is, solr.xml) simplifies things - user don't need to keep in their mind \"oh... this is multi-core... so it uses this layout\" or \"oh... it's only one core, so there is not solr.xml just this directory\". Instead they get a consistent view of the directory/configuration structure  whether the use multi-core or not. \n\nAlso note it also helps in developing tools for Solr as you don't need to deal with different configurations types and scenarios.\n\nThinks of RDBMS's... MySQL for example. Imagine MySQL would come with a default configuration of a single database. But when you wanted to add more databases, you would have to change the directory structure somewhere, introduce a new configuration file, and only then you would be able to add more databases. In that respect, Solr can be seen RDBMS and Solr Core can be seen as a Database within this RDBMS.  "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12786459",
            "date": "2009-12-05T18:14:43+0000",
            "content": "If you don't see solr.xml, you just assume the very simple default solr.xml - the same as solr will.\n\nyou would have to change the directory structure somewhere\n\nThats the point of this issue - you won't have to change the directory structure.\n\nintroduce a new configuration file, and only then you would be able to add more databases\n\nYou will only introduce a new config file if you decided to forgo it to start - thats fair. The example will come with it.\n\nHaving two deferent configuration mechanisms for single and multi-core eventually adds to the complexity\n\nThere won't be two configuration mechanisms - if you want to do core configuration you will need the file - in either case, for a release or two, solr will assume a solr.xml that works with no solr.xml in the dir - taking that away is more pain for those that don't have or want it than helpful in my opinion. There won't be two configuration mechanisms in either case.\n\nThe purpose of this issue is to make the current single core specifiable from solr.xml - that doesn't mean you need an explicit solr.xml - any tool and solr can assume the most basic solr.xml that would be the default anyway :  private final static String SINGLE_CORE_CONFIG = \"<solr persistent=\\\"false\\\"><cores adminPath=\\\"/admin/cores\\\"><core name=\\\"DEFAULT_CORE\\\" instanceDir=\\\".\\\" /></cores></solr>\";\n\nI'll let it go - others that don't wan't it required (from the zookeeper issue) can chime in, or I'll just let it go. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12786461",
            "date": "2009-12-05T18:31:45+0000",
            "content": "Just to clear this up:\n\nThis issue is not a proposal to deprecate the current single core mode - its a proposal to allow specifying the current single core mode from solr.xml. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12786481",
            "date": "2009-12-05T20:13:30+0000",
            "content": "\nIt should show something like\n\nAdmin DEFAULT_CORE (alias :\"\" )\nAdmin core1 (alias : \"c2\",\"c3\")\n\n\n\n+1 - that would be nice. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12786516",
            "date": "2009-12-05T21:55:47+0000",
            "content": "I think this description is more in line with what the proposal is - while deprecation may occur, its not the primary work to be done - this is an improvement and issue whether we decided to deprecate or not - we are also not deprecating \"single core deployments\" - we would be deprecating a lack of solr.xml. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12786625",
            "date": "2009-12-06T15:24:51+0000",
            "content": "The necessary code changes for corecontainer.  "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12786643",
            "date": "2009-12-06T16:23:29+0000",
            "content": "Nice! Essentially the same as my little patch, but I hadn't done the alias stuff. Reviewing now. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12786658",
            "date": "2009-12-06T17:31:51+0000",
            "content": "Looks like it has the same issue I ran into -\n\nThe solrConfigFilename doesn't work right now (used by tests and web.xml override).\n\nWhat I did is add another load method that also takes the config filename (or not if its null). I don't like adding the extra methods for this, so I'm not sure this is the best solution, but its a solution to get started with.\n\nThat will get the NoCacheHeaderTest to pass.\n\nI also dropped a solr.xml into example to get started there. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12786666",
            "date": "2009-12-06T18:49:20+0000",
            "content": "We should try and hit SOLR-1626 with this too since we are doing alias work anyway.\n\nWe either need to drop too many closes as a logging error in SolrCore, or set things up so that we only close primary core names and not aliases. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12786675",
            "date": "2009-12-06T19:25:40+0000",
            "content": "This solves the closing core too many times issue you can have by just simply checking if a core is closed before closing it in shutdown.\n\nBy the way, why not allow removing the DEFAULT_CORE? Shouldn't it be treated like any other core, other than the special property of getting a \"\" alias?\n\n\n\tedit *\n\n\n\nWe still need to solve listing alias' as primary cores in index.jsp as well. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12786677",
            "date": "2009-12-06T19:39:36+0000",
            "content": "Whoops - wrong solr.xml example in last patch - had core1 for the name. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12786783",
            "date": "2009-12-07T05:10:15+0000",
            "content": "hi Mark could you update the patch to trunk? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12786883",
            "date": "2009-12-07T12:06:54+0000",
            "content": "Its up to trunk - looks like its an issue with $id - I'm so sick of running into that. Here is a patch with the $id created by the patch replaced with the actual $id string - that should make it apply. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12787006",
            "date": "2009-12-07T17:39:55+0000",
            "content": "the index pages are fixed "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12787031",
            "date": "2009-12-07T18:25:42+0000",
            "content": "the index pages are fixed\n\nhow are they fixed?\n\nI think one problem with how you are handling alias' is that it only works with alias' defined in solr.xml?\n\nIf you use the request handler to create an alias (with the alias command), I still don't think that works properly. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12787038",
            "date": "2009-12-07T18:36:21+0000",
            "content": "Aliases were marked as experimental - if they cause too much grief, we always have the option to remove. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12787303",
            "date": "2009-12-08T04:28:53+0000",
            "content": "if they cause too much grief, we always have the option to remove.\n\nDo we really have a usecase for ALIAS ? if there is no no compelling enough usecase we should consider removing it. there is a lot of code which is there just becaus eof this alias feature "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12787310",
            "date": "2009-12-08T04:42:09+0000",
            "content": "it works now even after the alias command . I still think we should remove the 'alias' command. It is a fancy feature which adds too much of complexity into ref counting of cores "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12787704",
            "date": "2009-12-08T19:53:00+0000",
            "content": "The nice thing about the idea of ALIAS is that you can have cores with very explicit names (ie: catalog_v1, catalog_v2, etc...) and then you can have aliases like \"LIVE\" and \"EXPERIMENTAL\" that you can move around as needed.  Similar things can be accomplished with the SWAP command, but it's more limiting.\n\nThat said: the last time i tired using ALIAS it was such a confusing pain in the ass because of the way the original name was still tracked separately from the list of aliases, even if that name had been taken over by another core) i couldn't bring myself to use it \u2013 using SWAP and keeping track of the logical names externally was less confusing.\n\nIf we can make ALIAS work well, it will kick ass \u2013 but we can always yank it for now if it's in our way, and add it back again later if someone comes up with a good way to do it.  (it was probably a mistake to try and treat names an aliases as equals in the first place ... looking up a core by a \"string\" is probably the only use cases where they should be treated equally, all of the other CoreAdmin commands should really differentiate.) "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12787712",
            "date": "2009-12-08T20:08:43+0000",
            "content": "I'm good with yanking ALIAS for now.\n\nBut I think it would be nice to have a single hard-coded alias (perhaps just at the level of dispatch filter) that can treat an existing core as the default core (w/o having to name it something specific like DEFAULT_CORE.  As long as we can have a normal core with a normal name like \"music\", with the ability to use it with legacy URLs. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12787908",
            "date": "2009-12-09T04:24:49+0000",
            "content": "I'm good with yanking ALIAS for now.\n\nI am happy to remove a lot of complexity from CoreContainer which was introduced by ALIAS. When we implemented SOLR-1293 (internally) we disabled ALIAS so that the implementation is simple. \nLet us revisit ALIAS later and make it simpler.  "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12787962",
            "date": "2009-12-09T08:08:53+0000",
            "content": "with ALIAS deprecated "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12787968",
            "date": "2009-12-09T08:23:06+0000",
            "content": "also deprecated specifying solrconfig from web.xml. We may not need it anymore because we should not support 2 ways of doing the same "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12789116",
            "date": "2009-12-11T05:10:47+0000",
            "content": "hi . If everyone is OK I would just cleanup the patch and commit this shortly.. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12789302",
            "date": "2009-12-11T13:23:25+0000",
            "content": "I'd like to take a quick look - will report back. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12789439",
            "date": "2009-12-11T18:31:33+0000",
            "content": "You've deprecated handleAliasAction, but you have also made it so its not called with the default handleRequestBody.\n\nI think its safer to just remove handleAliasAction - someone that overrode handleAliasAction but kept the default handleRequestBody would be in a for a silent nasty surprise anyway. Better to get a compile time error. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12789443",
            "date": "2009-12-11T18:33:56+0000",
            "content": "Also, its confusing the way the Alias test is commented out - shouldn't we just remove to be less confusing? It will still be in subversion if we decide we want to bring it back. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12789447",
            "date": "2009-12-11T18:38:45+0000",
            "content": "Lastly : there are a couple little unrelated changes in this patch.\n\n1. The change to the import statement in CoreDescriptor, but no other changes to the file.\n2. The change in index.jsp from self closing tags to closing link tags - this has no apparent purpose, so I think it shouldn't be part of this commit. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12789460",
            "date": "2009-12-11T19:01:38+0000",
            "content": "You mark setSolrConfigFilename as deprecated, but it simply doesn't work anymore either - thats not really deprecation. I feel that deprecating solrconfig-filename should be its own issue so thats a more clear entry in CHANGES. And it should prob be deprecated rather than turned off out of the blue. I don't suppose its a big deal either way though.\n\nYou have also changed CoreContainer#getCores - but that change is unrelated to this patch. I really feal an issue should just stick to the issue - it makes commits more clear. That change (which isn't back compat anyway), should be its own commit.\n\nThis latest update removes a bunch of the unrelated changes.\n\nThe patch is still unfinished though - you removed my fix to use the solrconfig override without replacing it with an alternative fix. As a result, some tests don't use the right config now, and in particular, NoCacheHeaderTest is back to failing. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12789467",
            "date": "2009-12-11T19:12:15+0000",
            "content": "This patch reinstates a fix for the SolrDispatcher config name override so that all tests pass again.\nIt also changes DEFAULT_CORE to use a final static constant rather than be repeated.\n\n\nPersonally, I also almost think that removing the alias feature should be its own issue.\n\n(EDIT okay, I see you made that a sub-issue - nice) "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12789675",
            "date": "2009-12-12T04:13:42+0000",
            "content": "You mark setSolrConfigFilename as deprecated, but it simply doesn't work anymore either - thats not really deprecation. I feel that deprecating solrconfig-filename should be its own issue so thats a more clear entry in CHANGES\n\nI shall open another issue for this.  The setSolrConfigFilename() did not work for multicore . So it does not make sense for us to bend over backwards to make it work in this and add too many overloaded methods. Anyway, users won't need \n "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12789689",
            "date": "2009-12-12T05:22:37+0000",
            "content": "I guess deprecating ALIAS can be committed first so that the changes for this issue will be smaller and more manageable "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12789926",
            "date": "2009-12-13T18:43:37+0000",
            "content": "The setSolrConfigFilename() did not work for multicore . \n\nBut it did work for single core, and we are emulating that. I agree that it should be removed, but perhaps not in how. I think it should go away with warning - and I don't think we should mark something as deprecated when it just no longer works - deprecation means the method should still work. Also, I'm not sure if you have realized it yet, but tests currently rely on this functionality - it cannot be pulled without replacing the functionality for tests in some manner.\n\nSo it does not make sense for us to bend over backwards to make it work in this and add too many overloaded methods. \n\nIt doesn't require bending over backwards. It doesn't even require overloaded methods (see my latest patch) - that was just one method.\n\n\nAnyway, users won't need\n\nIts not about users needing this - they won't need it because they can now use solr.xml - its about functionality that someone is currently counting on simply disappearing. Personally, I'd prefer a form of deprecation first. At a minimum, it needs to be its own issue so that the warning to users that they need to change what they are doing is very clear. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12789988",
            "date": "2009-12-14T04:58:07+0000",
            "content": "Personally, I'd prefer a form of deprecation first.\n\nme too.  But this looked like an exception. This is rarely used (if at all) and according to me is a bad feature because it needs editing web.xml . \n\nAt a minimum, it needs to be its own issue so that the warning to users that they need to change what they are doing is very clear.\n\nThere is another issue now SOLR-1647 .I should change the language. they are really not deprecations. \n\nOk . I can go both ways on this. we can keep the feature deprecated and remove it later or remove it right away. My preference would be to remove it.\n "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12790079",
            "date": "2009-12-14T10:27:44+0000",
            "content": "The patch looks fine . I plan to commit it soon "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12790128",
            "date": "2009-12-14T13:01:31+0000",
            "content": "me too. But this looked like an exception. This is rarely used (if at all) and according to me is a bad feature because it needs editing web.xml .\n\nThats fine - as long as we have good warnings, I'm fine with removing it - but we must have a replacement for the tests that count on this feature. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12790145",
            "date": "2009-12-14T13:38:38+0000",
            "content": "The patch looks fine . I plan to commit it soon\n\nI still think we need to do something about handleAliasAction - possibly just remove it. It's not really a deprecation like it says - if someone overrode it, its no longer called. Better to get a hard error. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12790185",
            "date": "2009-12-14T14:46:09+0000",
            "content": "I shall soon give a final patch w/ the removal of ALIAS. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12790597",
            "date": "2009-12-15T06:51:20+0000",
            "content": "Throw a message saying 'ALIAS is removed' when ALIAS is invoked "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12790600",
            "date": "2009-12-15T07:06:52+0000",
            "content": "committed r890675 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872768",
            "date": "2010-05-28T02:43:39+0000",
            "content": "\nCorrecting Fix Version based on CHANGES.txt, see this thread for more details...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13013068",
            "date": "2011-03-30T15:45:27+0000",
            "content": "Bulk close for 3.1.0 release "
        }
    ]
}