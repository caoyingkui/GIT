{
    "id": "SOLR-2279",
    "title": "Add a MockDirectoryFactory (or similar) for Solr tests",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "3.6",
            "4.0-ALPHA"
        ],
        "components": [
            "Build"
        ],
        "type": "Test",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Currently, all Lucene tests open directories with newDirectory() [and soon-to-be added newFSDirectory() which always ensures the directory returned is an FSDir subclass, see LUCENE-2804 for this]. Additionally the directory is wrapped with MockDirectoryWrapper.\n\nThis has a number of advantages:\n\n\tBy default the directory implementation is random, but you can easily specify a specific impl e.g. -Dtests.directory=MMapDirectory. When proposing a change to one of our directory implementations, we can run all tests with it this way... it would be good for Solr tests to respect this too.\n\tThe test framework (LuceneTestCase before/afterclass) ensures that these directories are properly closed, if not, it causes the test to fail with a stacktrace of where you\nfirst opened the directory.\n\tMockDirectoryWrapper.close() then ensures that there are no resource leaks by default, when you open a file they save the stacktrace of where you opened it from. If you try to close the directory without say, closing an IndexReader, it fails with the stacktrace of where you opened the reader from. This is helpful for tracking down resource leaks. Currently Solr warns if it cannot delete its test temporary directory, but this is better since you know exactly where the resource leak came from. This can be disabled with an optional setter which we should probably expose for some tests that have known leaks like SpellCheck.\n\tMockDirectoryWrapper enforce consistent test behavior on any operating system, as it won't be dependent on the return value of FSDirectory.open\n\tMockDirectoryWrapper has a number of other checks and features, such as simulating a crash, simulating disk full, emulating windows (where you can't delete open files), etc.",
    "attachments": {
        "SOLR-2279.patch": "https://issues.apache.org/jira/secure/attachment/12465991/SOLR-2279.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Robert Muir",
            "id": "comment-12970192",
            "date": "2010-12-10T15:29:03+0000",
            "content": "here's a patch, but many solr tests fail because as Shai mentioned, they don't close() their Directory instances.\n\nI think this is a pretty serious bug. While it may be the case that this works with our supplied directories, i think for \"DirectoryFactory\" to be exposed as a public extension point, we should call .close().  "
        },
        {
            "author": "Robert Muir",
            "id": "comment-12982745",
            "date": "2011-01-17T17:17:22+0000",
            "content": "moving out.. i don't see myself fixing this test issue very quickly. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13042017",
            "date": "2011-06-01T07:17:23+0000",
            "content": "updated patch: I really want to be able to track file handles in Solr's tests, so I added a hack to avoid the issue of Directory.close() never being called.\n\nA couple tests fail using MockDirectoryWrapperFactory, still trying to track down why this is. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13042033",
            "date": "2011-06-01T08:05:22+0000",
            "content": "attached is a committable patch, changes from previous:\n\n\tadded to uima contrib too\n\tdisabled for the two problematic tests.\n\n\n\nI think its ok for now that we disable this factory for two tests like such in setUp():\n\n    // TODO: fix this test to use MockDirectoryFactory\n    System.clearProperty(\"solr.directoryFactory\");\n\n\n\nHopefully we can fix these tests in the future, but for now this is a good improvement in test coverage. I'll test on windows now, and commit this as a first step if everything is ok. I'll keep the issue open because I think we want to fix those 2 tests.\n\nAlso, I was surprised to find no problems with the spellchecker, but the reason for this is that it doesnt use the DirectoryFactory in solr, instead just FSDirectory.open! (I wonder if this should be improved separately?)  "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13042041",
            "date": "2011-06-01T08:29:17+0000",
            "content": "I committed the initial patch in 1130042, and backported to branch3x in 1130044.\n\nSo the remaining tests to figure out are the ones with the TODO:\n\n\tMergeIndexesEmbeddedTest (trunk, branch_3x)\n\tMultiCoreExampleJettyTest (trunk, branch_3x)\n\tMultiCoreEmbeddedTest <-- strangely enough, this one only on branch_3x\n\n "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13042052",
            "date": "2011-06-01T09:00:55+0000",
            "content": "Ok, so now i can explain why MultiCoreEmbeddedTest only failed on trunk,\nits because we System.clearProperty()'ed in a previous test to disable MDW,\nwhich disabled it for all subsequent tests in the JVM.\n\nI'm fixing this now so its reset in beforeClass(). "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13042057",
            "date": "2011-06-01T09:12:51+0000",
            "content": "Now that all 3 tests fail consistently with MockDirectoryWrapper, I suspect its\nsomething in these base multicore test classes... "
        },
        {
            "author": "Shai Erera",
            "id": "comment-13042103",
            "date": "2011-06-01T11:00:20+0000",
            "content": "I debug-traced MultiCoreEmbeddedTest and this is what I found: the test opens two indexes, one under a temp directory, and one under trunk/solr/example/multicore/core0/data/index. The one under temp is populated alright (and exists), while the one under solr/example (to clarify \u2013 this directory is expected to be found on the checkout, so it seems) is empty, and hence the test fails on IndexNotFoundException.\n\nI don't understand the test, so I cannot fix it. Just put it here in case someone else knows this code. I don't understand why this test passes w/ RAMDirectoryFactory.\n\nAlso, under solr/example/multicore/core0/conf, solrconfig.xml lists dirFactory to be StandardDirFactory. I don't know what are the implications of this on the test, but pointing it out as well.\n\nHope this info helps someone debug and fix the test . "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106331",
            "date": "2011-09-16T14:50:37+0000",
            "content": "3.4 -> 3.5 "
        }
    ]
}