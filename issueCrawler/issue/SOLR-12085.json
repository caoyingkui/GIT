{
    "id": "SOLR-12085",
    "title": "IndexFetcher does not honor SolrDeletionPolicy",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "replication (java)"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "5.4.1,                                            7.1,                                            7.2",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Index Fetcher is not in sync with Solr Deletion Policy.\n\nIf we set the SolrDeletionPolicy to retain more than 1 commit - i.e. maxCommitsToKeep > 1. Then slaves get stuck in alternate full replication. This happens because within IndexFetcher, there is a check for unusedFiles - hasUnusedFile, which takes IndexDirectory and latest commit as parameters. If there are files unrelated to latest commit in the index dir then this method returns true, and SolrDeletionPolicy is invoked. However there are no pending files to delete according to the index deletion policy since that is aware of other valid commits, and no action is taken. Once all the retries are exhausted, index fetcher sets fullreplication to true. \u00a0\n\nPossible solutions:\u00a0\n\n\tremove the check for hasUnusedFile completely. We invoke IndexWriter#deleteUnusedFiles and move on.\n\tAdd another method in IndexFileDeleter (Lucene) which returns number of pending deleted files. We can replace the IndexFetcher#hasUnusedFile method with this.\n\tKeep track of unused files in IndexDeletionPolicyWrapper. \u00a0 \u00a0\n\n\n\nA variation of this bug was previously noted in https://issues.apache.org/jira/browse/SOLR-9278",
    "attachments": {},
    "issue_links": {},
    "comments": []
}