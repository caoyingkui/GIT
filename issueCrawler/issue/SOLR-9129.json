{
    "id": "SOLR-9129",
    "title": "Solr Cloud hangs when creating large number of collections and node fails to recover after restart",
    "details": {
        "components": [
            "Server"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "6.0",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "I attempted to benchmark SolrCloud to see how well it would work with some sample data set of ours. \nI wanted to create about 2500 empty collections first to see how that would scale.\n\nUnfortunately, the test was not successful. Solr started failing after creating around 2000 collections and the cluster has failed to recover after a complete restart, which is quite concerning to me. \n\nI based my environment on the cloud example (I use the same config set as the gettingstarted example collection etc); so I have the vanilla install and used the following commands to bring the nodes online:\n\n.../solr/6.0.0/bin/solr start -m 2g -cloud -p 8983 -s\n\".../solr/6.0.0/example/cloud/node1/solr\"\n.../solr/6.0.0/bin/solr start -m 2g -cloud -p 7574 -s\n\".../solr/6.0.0/example/cloud/node2/solr\" -z localhost:9983\n.../solr/6.0.0/bin/solr start -m 2g -cloud -p 8984 -s\n\".../solr/6.0.0/example/cloud/node3/solr\" -z localhost:9983\n.../solr/6.0.0/bin/solr start -m 2g -cloud -p 7575 -s\n\".../solr/6.0.0/example/cloud/node4/solr\" -z localhost:9983\n\nAfter about 2000 collections were created, SolR got hung; REST requests started failing. I found the following entry in the logs, wihch I could relate to the failed REST request. For further logs, please see the attachment of this issue. \n\nnull:org.apache.solr.common.SolrException: Could not fully create collection: FOOBAR\n\tat org.apache.solr.handler.admin.CollectionsHandler.handleResponse(CollectionsHandler.java:266)\n\tat org.apache.solr.handler.admin.CollectionsHandler.handleRequestBody(CollectionsHandler.java:197)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:155)\n\tat org.apache.solr.servlet.HttpSolrCall.handleAdminRequest(HttpSolrCall.java:658)\n\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:441)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:229)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:184)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1160)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1092)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:119)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:518)\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:308)\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:244)\n\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:273)\n\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)\n\tat org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93)\n\tat org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:246)\n\tat org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:156)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\n\tat java.lang.Thread.run(Thread.java:745)\n\nFor further logs, please see the attachment of this issue. \n\nAfter the Solr instance affected has failed to recover, I decided to restart the whole cluster (using the official solr stop-start commands). Unfortunately, after this, at least one node remained spinning in ZooKeeper logic, creating more than four thousand (!!) threads.",
    "attachments": {
        "solr_node_hung_after_restart.txt": "https://issues.apache.org/jira/secure/attachment/12804660/solr_node_hung_after_restart.txt",
        "exception4.txt": "https://issues.apache.org/jira/secure/attachment/12804659/exception4.txt",
        "solr_visualvm.png": "https://issues.apache.org/jira/secure/attachment/12804662/solr_visualvm.png",
        "exception1.txt": "https://issues.apache.org/jira/secure/attachment/12804656/exception1.txt",
        "solr_visualvm2.png": "https://issues.apache.org/jira/secure/attachment/12804664/solr_visualvm2.png",
        "solr_node_hung_before_restart.txt": "https://issues.apache.org/jira/secure/attachment/12804661/solr_node_hung_before_restart.txt",
        "exception3.txt": "https://issues.apache.org/jira/secure/attachment/12804658/exception3.txt",
        "exception2.txt": "https://issues.apache.org/jira/secure/attachment/12804657/exception2.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-06-02T21:50:53+0000",
            "author": "Shawn Heisey",
            "content": "SolrCloud does not scale well with a very large number of collections.  See SOLR-7191. ",
            "id": "comment-15313145"
        },
        {
            "date": "2016-06-03T07:02:06+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I'm wondering whether the internal ZK on 9983 is really built to cope with large-scale use cases?\nCan you perhaps install a standalone ZooKeeper and repeat the same tests?\nThe same could be said about running 4 \"nodes\" on the same box, does it really test Solr's ability to scale #collections, or does it test some bottlenecks on one single computer/OS? ",
            "id": "comment-15313761"
        },
        {
            "date": "2017-12-24T17:32:53+0000",
            "author": "Gus Heck",
            "content": "Interestingly I'm seeing this exception while working on a command for creating routed aliases. In my case only one collection is being created (the initial collection for the routing set) in advance of creating the associated alias. I am already using a separate local zookeeper on port 2181. ",
            "id": "comment-16302905"
        }
    ]
}