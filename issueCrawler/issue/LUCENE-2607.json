{
    "id": "LUCENE-2607",
    "title": "IndexWriter.isLocked() fails on a read-only directory",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/index"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "2.9.2",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "This appears to be a regression of some sort because the issue was only discovered by us some time after upgrading to the 2.9 series, and was not present when we were using 2.3 (big gap between those two, though.)\n\nWe had some code like:\n\n\n    if (IndexWriter.isLocked(directory))\n    {\n        IndexWriter.unlock(directory);\n    }\n\n\n\nAnd now we get an exception when this code runs on a read-only location:\n\n\njava.lang.RuntimeException: Failed to acquire random test lock; please verify filesystem for lock directory 'X:\\Data\\Index' supports locking at\n    org.apache.lucene.store.NativeFSLockFactory.acquireTestLock(NativeFSLockFactory.java:99) at\n    org.apache.lucene.store.NativeFSLockFactory.makeLock(NativeFSLockFactory.java:137) at\n    org.apache.lucene.store.Directory.makeLock(Directory.java:131) at\n    org.apache.lucene.index.IndexWriter.isLocked(IndexWriter.java:5672) at\n\n\n\nI think it makes more logical sense to return false - if locking is not possible then it cannot be locked, therefore isLocked should always return false.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}