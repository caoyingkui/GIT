{
    "id": "SOLR-8397",
    "title": "Join query can sometimes throw an exception if highlighted",
    "details": {
        "components": [
            "highlighter"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.3",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "If you use the combination of a join query with the 'old' QueryScorer as a highlighter, you get a classcast exception\n\n\njava.lang.ClassCastException: org.apache.lucene.search.IndexSearcher cannot be cast to org.apache.solr.search.SolrIndexSearcher\n\tat org.apache.solr.search.JoinQuery.createWeight(JoinQParserPlugin.java:217)\n\tat org.apache.lucene.search.IndexSearcher.createWeight(IndexSearcher.java:855)\n\tat org.apache.lucene.search.IndexSearcher.createNormalizedWeight(IndexSearcher.java:838)\n\tat org.apache.lucene.search.highlight.QueryTermExtractor.getTerms(QueryTermExtractor.java:131)\n\tat org.apache.lucene.search.highlight.QueryTermExtractor.getTerms(QueryTermExtractor.java:106)\n\tat org.apache.lucene.search.highlight.QueryTermExtractor.getTerms(QueryTermExtractor.java:119)\n\tat org.apache.lucene.search.highlight.QueryTermExtractor.getTerms(QueryTermExtractor.java:62)\n\tat org.apache.lucene.search.highlight.QueryTermScorer.<init>(QueryTermScorer.java:52)\n\tat org.apache.solr.highlight.DefaultSolrHighlighter.getQueryScorer(DefaultSolrHighlighter.java:244)\n\tat org.apache.solr.highlight.DefaultSolrHighlighter.getHighlighter(DefaultSolrHighlighter.java:197)\n\tat org.apache.solr.highlight.DefaultSolrHighlighter.doHighlightingByHighlighter(DefaultSolrHighlighter.java:586)\n\tat org.apache.solr.highlight.DefaultSolrHighlighter.doHighlighting(DefaultSolrHighlighter.java:428)\n\tat org.apache.solr.handler.component.HighlightComponent.process(HighlightComponent.java:143)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:277)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:143)\n\n\n\nthe query parameters that will produce this are\n\n\n?hl=true\n&hl.usePhraseHighlighter=false\n&hl.fl=somefield\n&q={!join from=x to=y}somequery\n\n\n\nThis does not happen when the default SpanScorer is used (which happens when hl.usePhraseHighlighter=true or is unspecified)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-12-09T22:09:43+0000",
            "author": "David Smiley",
            "content": "Pete, aside from the unexpected unfortunate exception, what behavior were you expecting when highlighting a join query?\n\nThe standard Highlighter's SpanScorer effectively ignores queries it doesn't know about, and that which don't subclass MultiTermQuery.\nThe standard Highlighter's QueryScorer gets the query weight to then call extractTerms, and it does so using an empty IndexReader.  The PostingsHighlighter does the same.\n\nI think what should probably be done is modify JoinQuery in JoinQParserPlugin to have a createWeight() that will return a no-op / non-scoring, no-doc Weight (e.g. new BooleanQuery.Builder().build().createWeight) in the event the IndexSearcher isn't a SolrIndexSearcher and it has 0 docs.  I don't think the highlighters are doing anything wrong here.  This is definitely an edge case. ",
            "id": "comment-15049460"
        },
        {
            "date": "2015-12-09T22:53:45+0000",
            "author": "Peter Ciuffetti",
            "content": "Good point!  I wasn't expecting any highlights.  This was an unfortunate side effect of our middleware always defaulting to having highlighting on unless turned off, and also having a backwards default of usePhraseHighlighter=false.  This particular query didn't need any highlighting.   But in our attempt to upgrade from 4.10 to 5.3 I'm dealing with legacy queries embedded in various unit tests and frontend code.\n\nSo I have already worked around this by making the default usePhraseHighlighter=true.  You can mark this bug minor or 'wont fix' if you'd like... just thought it should be reported.  Maybe others will run into it if they use highlight queries maybe?  Haven't tried this. ",
            "id": "comment-15049537"
        }
    ]
}