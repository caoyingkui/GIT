{
    "id": "LUCENE-7267",
    "title": "Field with an explicit TokenStream must be tokenized and then uses the default Analyzer offset gaps",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Minor",
        "status": "Open",
        "type": "Bug"
    },
    "description": "This took me somewhat by surprise. We have a pretty complex code that uses fields with explicit token streams (which provide their own offset data) and multivalues.\n\nIt was surprising to see that offsets for subsequent values were shifted by 1 compared to what was explicitly provided in the OffsetAttribute. A bit of debugging showed this code inside PerField.invert:\n\n\n      if (analyzed) {\n        invertState.position += docState.analyzer.getPositionIncrementGap(fieldInfo.name);\n        invertState.offset += docState.analyzer.getOffsetGap(fieldInfo.name);\n      }\n\n\n\nA field with an explicit token stream must still be declared as tokenized and PerField then thinks that this field must have come from an analyzer (where in fact it didn't):\n\n\n      final boolean analyzed = fieldType.tokenized() && docState.analyzer != null;\n\n\n\nWhile the default position increment is 0, the default offset gap isn't \u2013 it's 1, causing the shift.\n\nThoughts?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15266101",
            "author": "David Smiley",
            "date": "2016-05-02T04:22:49+0000",
            "content": "RE the default offset gap being 1 \u2013 it's been this way since I don't know how long.  Note that the PostingsHighlighter assumes a single char offset gap.  What do you think Lucene should be doing here?  It's not clear to me what you propose.  What it's doing seems fine to me but maybe I'm not understanding your point? "
        }
    ]
}