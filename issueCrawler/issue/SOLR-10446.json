{
    "id": "SOLR-10446",
    "title": "Http based ClusterStateProvider (CloudSolrClient needn't talk to ZooKeeper)",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "SolrJ"
        ],
        "type": "Sub-task",
        "fix_versions": [
            "6.6",
            "7.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "An HTTP based ClusterStateProvider to remove the sole dependency of CloudSolrClient on ZooKeeper, and hence provide an optional way for CSC to access cluster state without requiring ZK.",
    "attachments": {
        "SOLR-9057.patch": "https://issues.apache.org/jira/secure/attachment/12862485/SOLR-9057.patch",
        "SOLR-10446.patch": "https://issues.apache.org/jira/secure/attachment/12862558/SOLR-10446.patch",
        "SOLR-10446.doc.patch": "https://issues.apache.org/jira/secure/attachment/12869918/SOLR-10446.doc.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-04-07T14:06:13+0000",
            "content": "Adding a WIP patch that introduces a Solr instance based ClusterStateProvider.\n\nTODO: Add an endpoint for Collection Aliases and call that from here. I'll add it to a separate ticket. ",
            "author": "Ishan Chattopadhyaya",
            "id": "comment-15960841"
        },
        {
            "date": "2017-04-08T03:00:36+0000",
            "content": "Updated patch. Using the LISTALIASES command. ",
            "author": "Ishan Chattopadhyaya",
            "id": "comment-15961658"
        },
        {
            "date": "2017-04-08T08:06:35+0000",
            "content": "You are only adding a optional way to use CSC without ZooKeeper, right? Pretty sure we don't want to eliminate the dependency on ZooKeeper completely. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-15961731"
        },
        {
            "date": "2017-04-08T16:35:34+0000",
            "content": "Yes thanks, that's right! I meant that this is to remove the \"sole dependency\" on ZK (by providing another option that doesn't depend on ZK). I'll fix the wording (English is my 3rd language  ). ",
            "author": "Ishan Chattopadhyaya",
            "id": "comment-15961875"
        },
        {
            "date": "2017-04-10T03:25:34+0000",
            "content": "\n\n\tunused Map<String, Object> all = req.getParams().getAll(null); in CollectionsHandler\n\twhat is the endpoint for aliases in /v2?\n\tuse NamedList#asMap() instead of adding to Utils\n\tin constructor, fetch the livenodes, instead of just relying on the seed nodes\n\n ",
            "author": "Noble Paul",
            "id": "comment-15962399"
        },
        {
            "date": "2017-04-10T04:36:20+0000",
            "content": "Updated patch as per Noble's review. This patch also contains SOLR-10447 patch.\n\n\nunused Map<String, Object> all = req.getParams().getAll(null); in CollectionsHandler\nFixed\nwhat is the endpoint for aliases in /v2?\n/collections/aliases now\nuse NamedList#asMap() instead of adding to Utils\nFixed\nin constructor, fetch the livenodes, instead of just relying on the seed nodes\nFixed ",
            "author": "Ishan Chattopadhyaya",
            "id": "comment-15962418"
        },
        {
            "date": "2017-04-13T02:39:30+0000",
            "content": "Updated the patch with the following changes:\n\n\tInstead of keeping HttpSolrClients for every liveNode, now creating the HSCs on the fly.\n\tCaching the liveNodes and aliases for a configurable timeout, defaulting to 5 seconds. After this timeout, a fetch is done for liveNodes and aliases upon a request.\n\tLISTALIASES endpoint now registered at /cluster/aliases for V2 APIs.\n\tAll unit tests in CloudSolrClientTest now randomly use either the ZK based cluster state provider or this new Solr based cluster state provider.\n\n ",
            "author": "Ishan Chattopadhyaya",
            "id": "comment-15967027"
        },
        {
            "date": "2017-04-13T04:08:04+0000",
            "content": "Renamed SolrClusterStateProvider to HttpClusterStateProvider. ",
            "author": "Ishan Chattopadhyaya",
            "id": "comment-15967092"
        },
        {
            "date": "2017-04-13T13:18:35+0000",
            "content": "Why does the class HttpClusterStateProvider use deprecated methods? ",
            "author": "Noble Paul",
            "id": "comment-15967572"
        },
        {
            "date": "2017-04-14T04:26:12+0000",
            "content": "Updated patch, removed calls to deprecated HttpSolrClient constructor calls. ",
            "author": "Ishan Chattopadhyaya",
            "id": "comment-15968585"
        },
        {
            "date": "2017-04-14T09:59:48+0000",
            "content": "\n\tthis has no error handling when there is no collection with that name available\n\tcode like below is bad\n\nSet<String> liveNodes = new HashSet((List<String>)(clusterStateMap.get(\"live_nodes\")));\n    if (liveNodes != null) {\n      this.liveNodes = liveNodes;\n      liveNodesTimestamp = System.nanoTime();\n    }\n\n\nhow can liveNodes be null\n\n\n\nwhat kind of exception are you trying to catch and why? what is the point in hitting another server after you get a SolrException?\n\ntry (HttpSolrClient client = new HttpSolrClient.Builder().\n          withBaseSolrUrl(ZkStateReader.getBaseUrlForNodeName(nodeName, urlScheme)).\n          withHttpClient(httpClient).build()) {\n        ClusterState cs = fetchClusterState(client, collection);\n        return cs.getCollectionRef(collection);\n      } catch (SolrServerException | IOException e) {\n        log.warn(\"Attempt to fetch cluster state from \" +\n            ZkStateReader.getBaseUrlForNodeName(nodeName, urlScheme) + \" failed.\", e);\n      }\n\n\n\nNamedList#asMap() does a deep copy . why do you even do it here?\n\n NamedList cluster = (SimpleOrderedMap) client.request(request).get(\"cluster\");\n   Map<String, Object> clusterStateMap = cluster.asMap(10); // contains live_nodes and collections\n\n ",
            "author": "Noble Paul",
            "id": "comment-15968865"
        },
        {
            "date": "2017-04-14T11:43:36+0000",
            "content": "this has no error handling when there is no collection with that name available\nThe exception for non-existent collection comes from CloudSolrClient when using ZkClientClusterStateProvider, and it came from HttpClusterStateProvider as per the patch. However, I've updated the patch now where I've caught the RemoteSolrException, checked for the exception message (as returned from the CLUSTERSTATUS api) and returned null when collection doesn't exist so that CloudSolrClient can return the same exception as it does when ZkClientClusterStateProvider. Added a test for this (CloudSolrClientTest#testCollectionDoesntExist).\n\ncode like below is bad \nRemoved the spurious null check.\n\nwhat kind of exception are you trying to catch and why? what is the point in hitting another server after you get a SolrException?\nI imagine a server that is struggling for some reason, throwing things like OOMs or timeouts or 404s. This server could possibly be not live at the moment. The point of hitting another server is that hopefully another live server would respond with the proper clusterstate/live_nodes.\n\nNamedList#asMap() does a deep copy . why do you even do it here?\nAh, I didn't realize there exists a NamedList#asShallowMap() method. Switched to use that. ",
            "author": "Ishan Chattopadhyaya",
            "id": "comment-15968927"
        },
        {
            "date": "2017-04-17T04:43:59+0000",
            "content": "Commit 4df4c52c0cfb8b47a066a0495bd164f6a4c973de in lucene-solr's branch refs/heads/master from Ishan Chattopadhyaya\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4df4c52 ]\n\nSOLR-10447, SOLR-10447: LISTALIASES Collections API command; CloudSolrClient can be initialized using Solr URL\n\n   SOLR-10447: Collections API now supports a LISTALIASES command to return a list of all collection aliases.\n\n   SOLR-10446: CloudSolrClient can now be initialized using the base URL of a Solr instance instead of\n    ZooKeeper hosts. This is possible through the use of newly introduced HttpClusterStateProvider.\n    To fetch a list of collection aliases, this depends on LISTALIASES command, and hence this way of\n    initializing CloudSolrClient would not work with older versions of Solr that doesn't support LISTALIASES. ",
            "author": "ASF subversion and git services",
            "id": "comment-15970666"
        },
        {
            "date": "2017-04-17T04:45:09+0000",
            "content": "Commit 7eedb81c4274bf1b9ad4f3b2e3ef6ae1b816469e in lucene-solr's branch refs/heads/branch_6x from Ishan Chattopadhyaya\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7eedb81 ]\n\nSOLR-10447, SOLR-10447: LISTALIASES Collections API command; CloudSolrClient can be initialized using Solr URL\n\n   SOLR-10447: Collections API now supports a LISTALIASES command to return a list of all collection aliases.\n\n   SOLR-10446: CloudSolrClient can now be initialized using the base URL of a Solr instance instead of\n    ZooKeeper hosts. This is possible through the use of newly introduced HttpClusterStateProvider.\n    To fetch a list of collection aliases, this depends on LISTALIASES command, and hence this way of\n    initializing CloudSolrClient would not work with older versions of Solr that doesn't support LISTALIASES. ",
            "author": "ASF subversion and git services",
            "id": "comment-15970670"
        },
        {
            "date": "2017-04-17T04:49:28+0000",
            "content": "I have backported this to 6x, however this won't work with Solr versions older than 6.6 due to unavailability of LISTALIASES endpoint. If someone wants this to work with older Solr as well, we would need additional work to make this work such that the aliases are obtained from /admin/zookeeper or the CLUSTERSTATUS command (which contains aliases for every collection). ",
            "author": "Ishan Chattopadhyaya",
            "id": "comment-15970671"
        },
        {
            "date": "2017-04-17T05:52:29+0000",
            "content": "this won't work with Solr versions older than 6.6 due to unavailability of LISTALIASES endpoint.\n\nThat should be okay, but can we detect a 404 on LISTALIASES and throw an exception with an appropriate message? ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-15970702"
        },
        {
            "date": "2017-04-17T07:50:39+0000",
            "content": "This also means that, this feature works with older solr versions, if the alias feature is not used. We should document it as such? ",
            "author": "Noble Paul",
            "id": "comment-15970816"
        },
        {
            "date": "2017-04-17T10:59:27+0000",
            "content": "That should be okay, but can we detect a 404 on LISTALIASES and throw an exception with an appropriate message?\nI am testing a fix for this. Would also test if \"this feature works for older Solr, if the alias feature is not used.\" ",
            "author": "Ishan Chattopadhyaya",
            "id": "comment-15970969"
        },
        {
            "date": "2017-04-17T21:43:43+0000",
            "content": "Commit fd4125ea413d90497789a2dcceaece9174293bef in lucene-solr's branch refs/heads/master from Ishan Chattopadhyaya\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=fd4125e ]\n\nSOLR-10446: Making HttpClusterStateProvider work with server that doesn't have LISTALIASES ",
            "author": "ASF subversion and git services",
            "id": "comment-15971678"
        },
        {
            "date": "2017-04-17T21:48:45+0000",
            "content": "This feature will continue to work with Solr servers that don't have LISTALIASES. It will throw a warning while fetching aliases, and won't work if aliases are used in queries/requests. \n\nIf someone wants support for aliases with older Solr versions, we would need to make this work using the cluster state's output which contains alias information as per another JIRA issue. ",
            "author": "Ishan Chattopadhyaya",
            "id": "comment-15971692"
        },
        {
            "date": "2017-04-17T21:49:50+0000",
            "content": "Commit a3b9e8ebf4e88f567978c0fb0f2ed3c985e1a15e in lucene-solr's branch refs/heads/branch_6x from Ishan Chattopadhyaya\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a3b9e8e ]\n\nSOLR-10446: Making HttpClusterStateProvider work with server that doesn't have LISTALIASES ",
            "author": "ASF subversion and git services",
            "id": "comment-15971695"
        },
        {
            "date": "2017-05-25T19:30:55+0000",
            "content": "Cassandra Targett, please review the documentation changes. ",
            "author": "Ishan Chattopadhyaya",
            "id": "comment-16025258"
        },
        {
            "date": "2017-05-25T19:52:54+0000",
            "content": "please review the documentation changes.\n\n+1 Ishan Chattopadhyaya, looks good. Thanks. ",
            "author": "Cassandra Targett",
            "id": "comment-16025284"
        },
        {
            "date": "2017-06-02T15:25:18+0000",
            "content": "Commit 5c4f0a27a327dba22e121680a19c192a53b8d75e in lucene-solr's branch refs/heads/branch_6_6 from Ishan Chattopadhyaya\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5c4f0a2 ]\n\nSOLR-10446, SOLR-6736: Ref guide documentation ",
            "author": "ASF subversion and git services",
            "id": "comment-16034862"
        },
        {
            "date": "2017-06-02T15:26:03+0000",
            "content": "Commit f358c6834d3957b73690d73e49c021644c2f61fb in lucene-solr's branch refs/heads/branch_6x from Ishan Chattopadhyaya\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f358c68 ]\n\nSOLR-10446, SOLR-6736: Ref guide documentation ",
            "author": "ASF subversion and git services",
            "id": "comment-16034865"
        },
        {
            "date": "2017-06-02T15:26:27+0000",
            "content": "Commit 2eb324f9bae1553c9c68c4a740a4f865b0ec6da5 in lucene-solr's branch refs/heads/master from Ishan Chattopadhyaya\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2eb324f ]\n\nSOLR-10446, SOLR-6736: Ref guide documentation ",
            "author": "ASF subversion and git services",
            "id": "comment-16034868"
        }
    ]
}