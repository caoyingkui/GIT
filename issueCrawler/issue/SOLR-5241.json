{
    "id": "SOLR-5241",
    "title": "SimplePostToolTest is slow on some systmes - likely due to hostname resolution of \"example.com\"",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "4.6",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "As noted by Shai on the dev @lucene list, SimplePostToolTest is ridiculously slow when he ran from ant, but only takes 1 second in his IDE.\n\nproblem seems to be relate to the URL class attempting to response \"example.com\"",
    "attachments": {
        "SOLR-5241.patch": "https://issues.apache.org/jira/secure/attachment/12603072/SOLR-5241.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13766791",
            "date": "2013-09-13T18:46:38+0000",
            "content": "patch switching all usage of example.com to a lookback IP.\n\nthis makes the entire test class take 2 seconds on my system (as 6 minutes before this) "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13766811",
            "date": "2013-09-13T18:57:56+0000",
            "content": "Won't this still be an issue for jenkins runs because even loopback addresses are blackholed? "
        },
        {
            "author": "Dawid Weiss",
            "id": "comment-13766818",
            "date": "2013-09-13T19:03:24+0000",
            "content": "Yeah... maybe that fake:// protocol handler is actually a sensible idea for such tests. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13766823",
            "date": "2013-09-13T19:05:27+0000",
            "content": "I don't think so, but maybe i don't fully understand what the FreeBSD blackhole does.\n\nThe test never attempts to open any sockets to these URL objects \u2013 the problem so far (that i can see) is just that by nature of being java.net.URL, there is a DNS check when the equals/hashCode methods get used and that seems to be the speed problem when the urls contain \"example.com\" ... so i figured using a \"safe\" IP would prevent that...\n\nhttp://www.eishay.com/2008/04/javas-url-little-secret.html\n\nis there any reason the freebsd blackhole would affect dns lookups on \"127.42.42.42\" even if the URL class did decide to try to \"resolve\" that IP as a hostname (i don't think it does) ? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13766827",
            "date": "2013-09-13T19:08:47+0000",
            "content": "maybe that fake:// protocol handler is actually a sensible idea for such tests.\n\nI'm not sure, but i think the URL class would still try to resolve the hostname portion of the URL, even if we registered our own fake protocol.\n\n\u2014\n\nI really don't see how the blackhole could affect this even if it did block dns lookups, since no lookup should ever happen with an ip specified, but if it does then i think the whole test just needs re-written not to use the URL class. "
        },
        {
            "author": "Dawid Weiss",
            "id": "comment-13766835",
            "date": "2013-09-13T19:13:54+0000",
            "content": "I'd have to check, I don't remember. Looking at this it seems you could write a custom parsing routine \u2013\nhttp://docs.oracle.com/javase/7/docs/api/java/net/URLStreamHandler.html#parseURL(java.net.URL, java.lang.String, int, int)\n\nbut this may be an overkill. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13766840",
            "date": "2013-09-13T19:19:34+0000",
            "content": "why is it trying to resolve the host? Is it so that it can then try to connect to it and the test expects that this will fail?\n\nIts the latter part that will cause the issue: use ips like [ff01::114] instead. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13766844",
            "date": "2013-09-13T19:21:43+0000",
            "content": "and if you really just need a URL, why not use file://.... "
        },
        {
            "author": "Shai Erera",
            "id": "comment-13766874",
            "date": "2013-09-13T19:55:49+0000",
            "content": "With this patch, the test runs for 1.8-3.2s (varies, but much faster than before). "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13766913",
            "date": "2013-09-13T20:36:02+0000",
            "content": "FYI: today is the first time i've looked at this test before, so take all of my comments with a grain of salt...\n\nwhy is it trying to resolve the host? Is it so that it can then try to connect to it and the test expects that this will fail?\n\nFrom what i can tell, nothing in the test, that i can see, is trying to resolve the hostname or IP or connect to any of these URLs.  A \"MockPageFetcher\" is explicitly plugged into the SimplePostTool when used in the test to mock out the HTTP communication to prevent this.\n\nThe problem (again: as far as i can tell) is entirely because the tests (and underlying code in SimplePostTool) use the java.net.URL class, which can/will attempt hostname resolution of DNS names used in URLs under the covers in some cases \u2013 notable anytime the URL.equals() or URL.hashCode methods are called.\n\nuse ips like [ff01::114] instead.\n\nI've got no problem doing that if you think it makes a diff \u2013 but just so i understand: can you explain why that is better then 127.42.42.42 ?\n\nif you really just need a URL, why not use file://....\n\nThat might work, but the SimplePostTool actually supports diff options for dealing with local files vs remote web urls, and the test's MockPageFetcher actually simulates servers that response with diff HTTP status codes, so i'm not sure if using \"file://\" will work and/or test the same things.\n\n\n\nattaching an updated patch using \"[ff01::114]\" instead of \"127.42.42.42\" per rmuir's request.\n\nShai Erera: does this still run \"fast\" for you?\n\nany objections from anyone to be committing this? "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13767328",
            "date": "2013-09-14T02:49:33+0000",
            "content": "\nI've got no problem doing that if you think it makes a diff \u2013 but just so i understand: can you explain why that is better then 127.42.42.42 ?\n\nits specifically allocated for test purposes and wont be routed if something tries to make a connection, and will fail fast with protocol not supported, or worst case no route to host... everywhere, not just jenkins.\n\nin jenkins specifically, tests can never try to connect to an unbound port and expected a connection refused, it will just hang for a huge amount of time until it finally times out.\n "
        },
        {
            "author": "Shai Erera",
            "id": "comment-13767351",
            "date": "2013-09-14T03:45:01+0000",
            "content": "This still runs fast, but a bit slower than with the previous patch: 5s from Ant. However, with this patch (I haven't checked previous patch), Eclipse runs faster than before: 0.1s (vs 1s). I'll try to get to the bottom of it, though let's commit this (or previous) patch, because it's already a huge improvement. "
        },
        {
            "author": "Shai Erera",
            "id": "comment-13767367",
            "date": "2013-09-14T04:32:51+0000",
            "content": "Hoss, see my comments on the thread. Seems to be related to our tests.policy security settings. I don't mind if you commit the patch, but maybe if there's a simple solution, we don't need to change the test. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13767368",
            "date": "2013-09-14T04:44:03+0000",
            "content": "if the test violates the security settings, then SecurityException would be thrown.\n\nSo maybe there is a bug in the solr code hiding/masking exceptions. "
        },
        {
            "author": "Dawid Weiss",
            "id": "comment-13767404",
            "date": "2013-09-14T07:49:31+0000",
            "content": "While I appreciate Hoss's solution I think what Robert said \u2013 we should get to the bottom of this problem, this difference in runtime is not easily explained and it may lead to a bigger can of worms. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13767411",
            "date": "2013-09-14T08:16:47+0000",
            "content": "Hi,\nas I said in response to Shai's e-mail: The problem may indeed be related to the security policy. To check if a connection is allowed, the security manager has to resolve dns. As this gets a not found or whatever error, it will not throw a security exception. This also explains why there is a runtime env difference: With Eclipse the security manager is not used, with ANT it is.\nThe fix should be not to use hostnames for invalid URLs and use the same strategy like in Solr Cloud tests: Use a non-routeable IPv6 address. To me the problem is exactly what Robert and I thought is the reason.\n\nSee BaseDistributedTestCase:\n\n    this.deadServers = new String[] {\"[ff01::114]:33332\" + context, \n                                     \"[ff01::083]:33332\" + context, \n                                     \"[ff01::213]:33332\" + context};\n\n\n\nPlease use these URLs and the problem should be gone. Real DNS names out of our control are bad to emulate failures. What happens if soebody links example.com to real IP adresses? "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13767421",
            "date": "2013-09-14T09:08:18+0000",
            "content": "From analyzing the test:\nThe main probelm is just the DNS resolve. We can really use any IP (IPv6 or IPv4) here, because the stream handler never actually connects to anywhere. Theoretically we could also use 127.0.0.1, the blackhole is not related here, because it just looks up hostnames. The actual connection is prevented by the stream handler. So finally we can use any numeric IP, just no host name. "
        },
        {
            "author": "Dawid Weiss",
            "id": "comment-13767484",
            "date": "2013-09-14T13:31:14+0000",
            "content": "Thanks Uwe. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13768474",
            "date": "2013-09-16T16:39:30+0000",
            "content": "Commit 1523725 from hossman@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1523725 ]\n\nSOLR-5241: Fix SimplePostToolTest performance problem - implicit DNS lookups "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13768478",
            "date": "2013-09-16T16:43:16+0000",
            "content": "Commit 1523726 from hossman@apache.org in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1523726 ]\n\nSOLR-5241: Fix SimplePostToolTest performance problem - implicit DNS lookups (merge r1523725) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13768481",
            "date": "2013-09-16T16:47:55+0000",
            "content": "... Theoretically we could also use 127.0.0.1, the blackhole is not related here, because it just looks up hostnames. ...\n\nwe could, this was my point earlier when i asked rmuir why \"[ff01::114]\" was better - since we're never opening a socket i didn't understand the diff.\n\nnow that i do understand the diff however, i definitely think \"[ff01::114]\" is better \u2013 not because of anything in the test now, but because it helps protect us from the risk of someone working on the test in the future and accidentally changing something so that it does start trying to open sockets.\n\nso i've committed the most recent patch as is.\n\nThanks everybody for your help. "
        }
    ]
}