{
    "id": "LUCENE-3543",
    "title": "Add previous versions to maven-metadata.xml files generated by 'ant generate-maven-artifacts'",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "general/build"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "3.4,                                            4.0-ALPHA",
        "resolution": "Won't Fix",
        "status": "Resolved"
    },
    "description": "The generate-maven-artifacts target generates one maven-metadata.xml file per artifact.  In a repository, these files should contain a list of all previous releases along with the current release, but because Maven Ant Tasks doesn't have access to these versions, it does not include them in the files it produces.\n\nTwo possible solutions: \n\n\n\tdownload Maven central's versions of the files prior to running generate-maven-artifacts and pre-populate the target local repository; or\n\tpost-process the files to include the previous versions - this would require some form of access to the previously released versions for each artifact being published",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2012-04-06T22:11:41+0000",
            "content": "Maven artifacts are no longer pushed to repositories from the internal-repository-structure-on-a-local-filesystem created by ant generate-maven-artifacts.  Instead:\n\n\n\tsnapshot artifacts are uploaded to the ASF snapshot repository by Jenkins nightly jobs via ant generate-maven-artifacts with properties m2.repository.id and m2.repository.url defined such that the artifacts go over the wire instead of being hosted by Jenkins; and\n\trelease artifacts are staged to the ASF release repository via ant stage-maven-artifacts: LUCENE-3964.\n\n ",
            "author": "Steve Rowe",
            "id": "comment-13248925"
        },
        {
            "date": "2018-03-23T20:33:48+0000",
            "content": "I see something that is either this issue (sorta) or should perhaps be a new issue. \u00a0At least it matches the description loosely.\n\nant generate-maven-artifacts\u00a0will indeed populate my local repo with the artifacts. \u00a0But the layout when it's a SNAPSHOT is wrong (or seems to be). \u00a0In particular, the saved files should have the form solr-test-framework-7.4.0-SNAPSHOT.jar but instead I see solr-test-framework-7.4.0-20180323.173533-1.jar. As a result, even though the artifacts are plainly there and in my local repo, they are not there in a way that allows them to be resolved. I think the way they are saved now makes sense for a remote style path (e.g. to be served by a webserver as a remote repo), but not local which doesn't follow the same rules exactly.\n\nI was really pulling my hair out for awhile. I even went so far as to get Maven's sources (particularly the \"maven-resolver\") so I could use a debugger in another program to see why the heck Maven itself wouldn't resolve the artifacts. AFAICT it didn't care at all about the maven-metadata-local.xml\u00a0file (that would have pointed to the \"7.4.0-20180323.173533-1\") and instead it insisted the file is named simply with the SNAPSHOT suffix in the obvious way. ",
            "author": "David Smiley",
            "id": "comment-16412023"
        },
        {
            "date": "2018-03-23T22:12:28+0000",
            "content": "The maven ant tasks project, which Lucene/Solr uses to install/deploy maven artifacts, has been defunct for a while.  I'm kinda surprised it mostly still works .  I've been thinking we'll have to switch to something Ivy-based (assuming the build system remains as Ant) in the relatively near future.\n\nHere's a patch that appears to fix the problem for me (info source: http://maven.apache.org/ant-tasks/reference.html#install) - just add uniqueVersion=\"false\" to the <artifact:deploy> tag in the m2-deploy macro in common-build.xml:\n\n\ndiff --git a/lucene/common-build.xml b/lucene/common-build.xml\nindex 86e4288..408dd1d 100644\n--- a/lucene/common-build.xml\n+++ b/lucene/common-build.xml\n@@ -640,7 +640,7 @@\n       <artifact:install-provider artifactId=\"wagon-ssh\" version=\"1.0-beta-7\"/>\n       <parent-poms/>\n       <artifact:pom id=\"maven.project\" file=\"@{pom.xml}\"/>\n-      <artifact:deploy file=\"@{jar.file}\">\n+      <artifact:deploy file=\"@{jar.file}\" uniqueVersion=\"false\">\n         <artifact-attachments/>\n         <remoteRepository id=\"${m2.repository.id}\" url=\"${m2.repository.url}\">\n           <credentials/>\n\n ",
            "author": "Steve Rowe",
            "id": "comment-16412178"
        },
        {
            "date": "2018-03-23T22:38:01+0000",
            "content": "Also, ant validate-maven-artifacts depends on -install-maven-artifacts, which will use the -SNAPSHOT suffix when populating the local repository.  Maybe we could make -install-maven-artifacts callable from the cmdline by removing its leading dash? ",
            "author": "Steve Rowe",
            "id": "comment-16412203"
        }
    ]
}