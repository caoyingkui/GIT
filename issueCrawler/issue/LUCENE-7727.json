{
    "id": "LUCENE-7727",
    "title": "Replace EOL'ed pegdown by flexmark-java for Java 9 compatibility",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Improvement",
        "components": [
            "general/build"
        ],
        "fix_versions": [
            "6.5",
            "7.0"
        ]
    },
    "description": "The documentation tasks use a library called \"pegdown\" to convert Markdown to HTML. Unfortunately, the developer of pegdown EOLed it and points the users to a faster replacement: flexmark-java (https://github.com/vsch/flexmark-java).\n\nThis would not be important for us, if pegdown would work with Java 9, but it is also affected by the usual \"setAccessible into private Java APIs\" issue (see my talk at FOSDEM: https://fosdem.org/2017/schedule/event/jigsaw_challenges/).\n\nThe migration should not be too hard, its just a bit of Groovy Code rewriting and dependency changes.\n\nThis is the pegdown problem:\n\n\nCaused by: java.lang.RuntimeException: Could not determine whether class 'org.pegdown.Parser$$parboiled' has already been loaded\n        at org.parboiled.transform.AsmUtils.findLoadedClass(AsmUtils.java:213)\n        at org.parboiled.transform.ParserTransformer.transformParser(ParserTransformer.java:35)\n        at org.parboiled.Parboiled.createParser(Parboiled.java:54)\n        ... 50 more\nCaused by: java.lang.reflect.InaccessibleObjectException: Unable to make protected final java.lang.Class java.lang.ClassLoader.findLoadedClass(java.lang.String) accessible: module java.base does not \"opens java.lang\" to unnamed module @551b6736\n        at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:335)\n        at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:278)\n        at java.base/java.lang.reflect.Method.checkCanSetAccessible(Method.java:196)\n        at java.base/java.lang.reflect.Method.setAccessible(Method.java:190)\n        at org.parboiled.transform.AsmUtils.findLoadedClass(AsmUtils.java:206)\n        ... 52 more",
    "attachments": {
        "LUCENE-7727.patch": "https://issues.apache.org/jira/secure/attachment/12855499/LUCENE-7727.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15891375",
            "date": "2017-03-02T00:42:28+0000",
            "content": "Rewrite to use flexmark.\n\nI changed the task names to use \"markdown\" and let the implementation be hidden (which is flexmark after this patch).\n\nThere is some room for improvements by not using the PegDown Adapter (this removes many dependencies). I will look into this tomorrow. For now build works with Java 9 and the HTML output matches. ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15892109",
            "date": "2017-03-02T11:38:57+0000",
            "content": "New patch with cleanup:\n\n\n\tremove of Pegdown compatibility layer (minimal dependencies)\n\tauto-generate IDs (remove <a name>, so I also removed the regex for website publishing\n\textract HTML title from AST). I verified the autogen'd IDs are identical.\n\n\n\nI think that's ready. I will commit it later this afternoon. ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15892578",
            "date": "2017-03-02T16:44:01+0000",
            "content": "Commit 707d7b91e8793b4bb017e132c8a206acf85885ab in lucene-solr's branch refs/heads/master from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=707d7b9 ]\n\nLUCENE-7727: Replace end-of-life Markdown parser \"Pegdown\" by \"Flexmark\" for compatibility with Java 9 ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15892581",
            "date": "2017-03-02T16:45:22+0000",
            "content": "Commit 48f8471fea823abd1a5c62ac21048a86af11de8b in lucene-solr's branch refs/heads/branch_6x from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=48f8471 ]\n\nLUCENE-7727: Replace end-of-life Markdown parser \"Pegdown\" by \"Flexmark\" for compatibility with Java 9 ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15897693",
            "date": "2017-03-06T17:26:16+0000",
            "content": "Uwe, when I try to run ant precommit, I now see this error:\n\nresolve-markdown:\n\nBUILD FAILED\n/SmileyDev/Search/lucene-solr/lucene/common-build.xml:2415: ivy:cachepath doesn't support the nested \"dependency\" element.\n\n\nI'm wondering if you know what the cause of that may be.  This is happening on one of my machines consistently, but not at all on another. ",
            "author": "David Smiley"
        },
        {
            "id": "comment-15898354",
            "date": "2017-03-06T23:16:34+0000",
            "content": "Outdated Ivy? We require 2.3 minimum. Maybe clean up your ~/.ant/lib folder and run \"ant ivy-bootstrap\"? ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15898366",
            "date": "2017-03-06T23:22:10+0000",
            "content": "See http://ant.apache.org/ivy/history/2.3.0/use/postresolvetask.html:\n\n\nChild elements\n(Since 2.3)\n\nThese child elements are defining an inlined ivy.xml's dependencies elements. (...)\n\nFor flexmark we actually require multiple dependencies and this can only be handles with a single cachepath in that version. An alternative would be to have a ivy.xml file, but that's complicated for common-build.xml.\n\nSo there is only the way to update to Ivy 2.3 as documented since years. ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15898771",
            "date": "2017-03-07T05:22:43+0000",
            "content": "Thanks for the tips Uwe.  I forgot to mention I did run ant ivy-bootstrap.  So the problem was that my ~/.ant/lib/ had both ivy-2.2.0.jar and ivy-2.3.0.jar somehow for who knows how long, and this is biting me now.  Perhaps Java 9 might better alert users to classpaths containing jars with classes in the same package?  Something to look forward to if so. ",
            "author": "David Smiley"
        },
        {
            "id": "comment-15898945",
            "date": "2017-03-07T08:26:20+0000",
            "content": "In my other projects using Ivy I have a version check on bootup of ant. Maybe we should do this, too, and print useful error message. The problem is that ANT does not have a version comparator (it only has <antversion>). So I print a warning in my projects if version is different that the expected.\n\nJava 9 won't bring changes to classpath. With Jigsaw modules all is better, as every modular jar has to define which packages it \"exports\". But for that we have to make modules out of Lucene and all dependencies (auto-modules may help). But this would also require to refactor Lucene and Solr to never use and export the same package name in different JARs. ",
            "author": "Uwe Schindler"
        }
    ]
}