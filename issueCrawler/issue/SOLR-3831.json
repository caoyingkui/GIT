{
    "id": "SOLR-3831",
    "title": "atomic updates do not distribute correctly to other nodes",
    "details": {
        "affect_versions": "4.0-BETA",
        "status": "Closed",
        "fix_versions": [
            "4.0",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Blocker",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "After setting up two independent solr nodes using the SolrCloud tutorial, atomic updates to a field of type \"payloads\" gives an error when updating the destination node.\n\nThe error is:\n\nSEVERE: java.lang.NumberFormatException: For input string: \"100}\"\n\nThe input sent to the first node is in the expected default format for a payload field (eg \"foo|100\") and that update succeeds. I've found that the update always works for the first node, but never the second.\n\nI've tested each server running independently and found that this update works as expected.",
    "attachments": {
        "SOLR-3831.patch": "https://issues.apache.org/jira/secure/attachment/12545242/SOLR-3831.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Jim Musil",
            "id": "comment-13455361",
            "date": "2012-09-13T22:13:06+0000",
            "content": "Actually, it appears that atomic updates to any type of field do not distribute correctly to the other nodes.\n\nThe root problem seems to be that when the subsequent node receives the update request, it does not apply any of the atomic update logic that's been added to DistributedUpdateProccessor.getUpdatedDocument(). Instead it tries to use the string representation of the Map object (eg \"\n{set=1}\n\") as the value.\n\nIf I send the following json to update [{\"id\":\"1\", \"cat_s\":{\"set\":\"999\"}}] The leader sets it correctly without deleting the other fields. Node 2, however, sets the value of cat_s to be \"\n{set=999}\n\".\n\nI've hacked a solution by forcing all update requests to use getUpdatedDocument(), but I'm not clear what other effects this may have.\n\nI'm not sure what the correct solution should be, but I'm willing to try to patch it.\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13455502",
            "date": "2012-09-14T00:57:15+0000",
            "content": "Thanks for the report Jim, this looks serious.  I've marked this as a blocker for 4.0.\n\nThere are some very basic tests for cloud mode in BasicDistributedZkTest.doOptimisticLockingAndUpdating(), but it should have been enough to catch an issue like this. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13455508",
            "date": "2012-09-14T01:10:21+0000",
            "content": "The root problem seems to be that when the subsequent node receives the update request, it does not apply any of the atomic update logic\n\nWe shouldn't need to at that point.\nThe current logic is for the leader to retrieve the correct document, apply the updates, then index as a normal document as well as forward to all replicas. "
        },
        {
            "author": "Jim Musil",
            "id": "comment-13455958",
            "date": "2012-09-14T17:21:24+0000",
            "content": "Ok, that makes sense. I don't think that's what the code is doing, however. The logic appears to be:\n\n1. clone the input doc\n2. apply atomic update logic to produce full doc\n3. add the full doc locally\n4. revert back to the original input doc\n5. distribute the command to other nodes\n\nA problem occurs deep within #5 because there's no atomic update logic built into the distribAdd() chain for converting \"add\", \"set\", or \"inc\" into a proper LuceneDocument.\n\nBy simply commenting out this line (343 on trunk) in DistributedUpdateProcessor.java, the updates go through correctly.\n\n   cmd.solrDoc = clonedDoc;\n\n\n\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13456052",
            "date": "2012-09-14T19:22:44+0000",
            "content": "Thanks for investigating Jim - the \"clone the input doc\" definitely doesn't belong first! "
        },
        {
            "author": "Jim Musil",
            "id": "comment-13456122",
            "date": "2012-09-14T20:31:44+0000",
            "content": "No problem. I'm very eager to start using them. Let me know if there's something I can do to help. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13456231",
            "date": "2012-09-14T23:43:21+0000",
            "content": "patch that moves the clone - also only does it if we are actually going to distribute the update "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13456456",
            "date": "2012-09-15T17:49:01+0000",
            "content": "Fix committed - thanks Jim! "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13494980",
            "date": "2012-11-11T20:28:01+0000",
            "content": "[branch_4x commit] Mark Robert Miller\nhttp://svn.apache.org/viewvc?view=revision&revision=1385138\n\nSOLR-3831: Atomic updates do not distribute correctly to other nodes.\n "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-13495157",
            "date": "2012-11-12T08:48:02+0000",
            "content": "Hi - i've seen some issues being committed to 4x branch but not for trunk yet this and other issues are marked as resolved. Are they going to be committed to trunk? thanks "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13495280",
            "date": "2012-11-12T14:21:13+0000",
            "content": "This should be in trunk.\n\nYou may be confused by the above commit bot message?\n\nNew tool I'm working on, and yesterday I accidentally triggered it for my name in the last 400 or so commits, but only for 4x - I stopped it before it did 5x.\n\nSo if you know something is not on 5x that is on 4x, we need to fix it. But don't go by the commit bot messages for these past issues - hoping that's something you can count on in the future, but it's in development at the moment. "
        },
        {
            "author": "Markus Jelsma",
            "id": "comment-13495294",
            "date": "2012-11-12T14:37:19+0000",
            "content": "I was indeed confused. Thanks! "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13610832",
            "date": "2013-03-22T16:38:38+0000",
            "content": "[branch_4x commit] Mark Robert Miller\nhttp://svn.apache.org/viewvc?view=revision&revision=1385138\n\nSOLR-3831: Atomic updates do not distribute correctly to other nodes. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13653977",
            "date": "2013-05-10T10:33:37+0000",
            "content": "Closed after release. "
        }
    ]
}