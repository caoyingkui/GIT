{
    "id": "SOLR-2679",
    "title": "Optimize memory usage in JavaBinCodec.readStr()",
    "details": {
        "affect_versions": "3.3",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "clients - java",
            "Response Writers",
            "update"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "In Solr 3.3, JavaBinCodec.readStr() reads complete string into byte[] and then converts it into String. FastInputStream is already buffered, so this it not necessary and may take a lot of memory if data string is large.\n\nThis patch replaces usage of big byte[] with usage of dis.readUnsignedByte() for getting characters directly from stream.\n\nPatch reduces memory usage and may slightly improve performance of reading text data in javabin-codec.\n\nJavaBinCodec.readStr() function already has unit test in TestJavaBinCodec, no additional unit test is required.",
    "attachments": {
        "SOLR-2679.patch": "https://issues.apache.org/jira/secure/attachment/12488086/SOLR-2679.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Maxim Valyanskiy",
            "id": "comment-13072298",
            "date": "2011-07-28T11:07:45+0000",
            "content": "patch "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106335",
            "date": "2011-09-16T14:50:38+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13165575",
            "date": "2011-12-08T21:20:22+0000",
            "content": "Does anyone have an opinion on this? It seems to me that the tradeoff is that the current form of this code reads the bytes from a local array, where the proposed patch makes a method call for every byte that's read, which seems like it'd be slower since the dis.readFully method does an arrayCopy under the covers.\n\nI'll volunteer to apply or close this, it seems like a time/space tradeoff. And the underlying byte[] grows to a max size and gets re-used.\n\nSince the class that's used to read data is called FastInputStream, my straw-man proposal is that we do NOT apply this patch and I'll close the JIRA. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13165692",
            "date": "2011-12-08T23:46:42+0000",
            "content": "I think the right approach to increased efficiency here is to expose the byte[] of the FastInputStream.\nIt's not a super-simple approach since it needs to operate chunk-at-a-time and deal with multi-byte chars crossing chunks.\nThe goal of eliminating the double-buffering seems fine though - I think we can leave this issue open. "
        },
        {
            "author": "Maxim Valyanskiy",
            "id": "comment-13169224",
            "date": "2011-12-14T09:21:00+0000",
            "content": "I think that there is no performance degradation after apply of my patch - I hope that JIT compiler is smart enough to optimize that method call when we read from stream buffer. I can make a benchmark if you think that proof is required.\n\nMy patch brings other change - it builds character array while reading data from (buffered) stream so it may be even faster when very large text field is read from network stream. Current version reads complete text field into byte array and then builds character array. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13234671",
            "date": "2012-03-21T18:08:49+0000",
            "content": "Bulk of fixVersion=3.6 -> fixVersion=4.0 for issues that have no assignee and have not been updated recently.\n\nemail notification suppressed to prevent mass-spam\npsuedo-unique token identifying these issues: hoss20120321nofix36 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717466",
            "date": "2013-07-23T18:48:20+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971364",
            "date": "2014-04-16T12:57:53+0000",
            "content": "Move issue to Solr 4.9. "
        }
    ]
}