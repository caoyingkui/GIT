{
    "id": "SOLR-7507",
    "title": "Collection specific properties for SolrCloud",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.1",
        "status": "Closed",
        "resolution": "Incomplete",
        "priority": "Minor"
    },
    "description": "SolrCloud uses the collection abstraction and propagates to not think of cores. But currently the collection properties are just stored as core properties of the created cores. These won't get propagated to new nodes automatically. This is counter-intuitive.\n\nThis patch adds the possibility to add collection specific config files. These are put under the collection node in zookeeper. The resolution order for config file accesses is now: 1) collection node, 2) config set node, 3) classpath. Notice that the filesystem fallback (default: conf/solrcore.properties) has been removed for SolrCloud mode.\n\nThis allows for having one generic config set being used for different collections which just differ in their solrcore.properties. Furthermore the solrcore.properties need no more to exist in the filesystem but are distributed via zookeeper as it should be (IMO).\n\nIf you like this patch, I will add a patch for ZkCLI which allows the upload of config files for a collection in the linkconfig command.",
    "attachments": {
        "SolrCloudCollectionConfig.patch": "https://issues.apache.org/jira/secure/attachment/12731145/SolrCloudCollectionConfig.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-05-07T14:46:13+0000",
            "author": "Noble Paul",
            "content": "I really did not get it. \n\"Collection specific config for SolrCloud\" isn't it already possible? ",
            "id": "comment-14532790"
        },
        {
            "date": "2015-05-07T15:05:24+0000",
            "author": "Markus Heiden",
            "content": "No, not as it should be: If you create a collection the custom properties have to be specified each via a parameter in the CREATE-URL. This is annoying, if you have many of them. Furthermore these properties are stored only in the core.properties of the created core and not in zookeeper. So if you create new nodes for a collection, you have to provide the same properties over and over again -> error-prone.\n\nWhat we try to achieve is to have one config set for all of our collections which just differ in their properties. Currently this is only possible if we manually create the cores and provide a conf/solrcore.properties in the filesystem for each core. We don't like the brute force alternative: Avoiding properties by multiplying our config sets. ",
            "id": "comment-14532826"
        },
        {
            "date": "2015-05-07T15:23:21+0000",
            "author": "Noble Paul",
            "content": "What are the typical core specific properties that you pass ? ",
            "id": "comment-14532846"
        },
        {
            "date": "2015-05-07T15:52:08+0000",
            "author": "Markus Heiden",
            "content": "We only have custom collection properties. We do not have core specific properties, except the required ones (name etc.).\n\nE.g. we are loading our synonyms from a database instead of the filesystem. For specifying which synonyms to use, we have properties containing the SQL to select the wanted synonyms from the database:\n\nsolr.jdbc.synonyms.normalize-genderages = SELECT lower(concat(array_to_string(origin,','), '=>', normalization)) AS line FROM normalization WHERE active AND type = 'equivalent-genderages'.\nSame for many other synonym types.\n\nFurthermore we have some properties which are configuring grouping and scoring.\n\nIn total we got ~ 30 custom properties for each collection.  ",
            "id": "comment-14532899"
        },
        {
            "date": "2015-05-08T04:35:26+0000",
            "author": "Noble Paul",
            "content": "OK, Now I understand what you are trying to do\n\nyou are passing these properties as \n\n\nproperty.name=value\n\n\n\nNow tell me , how are you consuming these properties?\n\nHave you considered using the user props in config API ? https://cwiki.apache.org/confluence/display/solr/Config+API#ConfigAPI-CommandsforUser-DefinedProperties\n ",
            "id": "comment-14533843"
        },
        {
            "date": "2015-05-08T07:52:17+0000",
            "author": "Markus Heiden",
            "content": "The config api seems just to change the config set. But I want to change the properties of collections which all base on the same config set. \n\nWe currently do not use the config api, because our config does not change during runtime. I think it is too much overhead to create our complete configuration with it. Here are some small snippets from our configuration:\n\nschema.xml:\n\n   <fieldType name=\"redis_ranking\" \n              redisHostName=\"${solr.redis.hostname}\" \n              redisPort=\"${solr.redis.port}\"\n              redisFieldPrefix=\"rank_\"\n              redisType=\"hash\"\n              translateFieldName=\"shop_id\" \n              translateDefaultValue=\"1\"\n              multiValued=\"false\"\n              class=\"com.s24.search.schema.ExternalRedisField\" />\n\n\n\nsolrconfig.xml:\n\n   <searchComponent class=\"solr.SpellCheckComponent\" name=\"suggest\">\n      <lst name=\"spellchecker\">\n         <str name=\"name\">popular_queries_dictionary</str>\n         <str name=\"classname\">com.s24.search.solr.autosuggest.RedisPopularQueriesSuggester</str>\n         <str name=\"lookupImpl\">org.apache.solr.spelling.suggest.fst.WFSTLookupFactory</str>\n\n         <str name=\"field\">autocomplete</str>\n\n         <str name=\"buildOnCommit\">false</str>\n         <str name=\"buildOnOptimize\">false</str>\n         <bool name=\"exactMatchFirst\">true</bool>\n         <str name=\"suggestAnalyzerFieldType\">autosuggest_analyzer</str>\n\n         <str name=\"redisHost\">${solr.redis.hostname}</str>\n         <str name=\"redisPort\">${solr.redis.port}</str>\n         <str name=\"redisKey\">autocomplete_a${solr.core.appid}</str>\n\n         <float name=\"thresholdTokenFrequency\">.0001</float>\n      </lst>\n   </searchComponent>\n\n ",
            "id": "comment-14534038"
        },
        {
            "date": "2015-05-08T07:59:27+0000",
            "author": "Noble Paul",
            "content": "The config api seems to configure core properties, not collection properties.\n\nIn does not matter if you do not share config . Your usecase fits into user props. It was designed for this purpose. Can you tell me any disadvantages of using user props ?\n\nWe do not use it, because our config does not change during runtime. \n\nIt can't be a generic enough usecase . Most people will end up changing variables sometime during the lifetime of the collection\n\nBut I want to change the properties of collections which all base on the same config set.\nIf you change one of the collections it will reflect on all collections using the same configset ",
            "id": "comment-14534048"
        },
        {
            "date": "2015-05-08T08:09:17+0000",
            "author": "Markus Heiden",
            "content": "Maybe I am missing some point, but the user properties are just changing the config set. So all collections using it will change. But this is not what I need. I want a single config set used as base for several collections which each have different properties.\n\nI can work around this situation by creating multiple config sets which just differ in their properties, but I do not really want that.  ",
            "id": "comment-14534067"
        },
        {
            "date": "2015-05-08T08:30:36+0000",
            "author": "Markus Heiden",
            "content": "One point I do not understand is, why the solrcore.properties are not loaded from zookeeper? We are not changing our configs during runtime. Instead we are deploying the complete (fixed) config during a release. Due to not having solrcore.properties in zookeeper we need to manually create each core and add a conf/solrcore.properties to each instancedir. ",
            "id": "comment-14534104"
        },
        {
            "date": "2015-05-08T08:37:14+0000",
            "author": "Noble Paul",
            "content": "I understand your usecase but I don't think this warrants a new feature. We have a proliferation of configurable things. This leads to too much confusion. Implementing this is not as simple as your patch. All nodes need to watch for changes of this properties and update themselves .\n\nbq:why the solrcore.properties are not loaded from zookeeper\n solrcore.properties is a legacy thing and I don't expect that feature is very relevant in SolrCloud. Actually we don't want users to be conscious about the cores at all when they are using cloud. if at all we should have something like that , it should be called collection.properties\n\nYour best bet is to use one configset per collection and to use userprops for this. We already have a well defined API and documentation for the same ",
            "id": "comment-14534111"
        },
        {
            "date": "2015-05-08T14:54:05+0000",
            "author": "Markus Heiden",
            "content": "I agreed that the file should be called collection.properties and that it should be watched. So my patch is not sufficient.\nWe are trying hard to not duplicate our config, but currently it seems to be the only officially supported way.\nThanks for your effort pointing this facts out. ",
            "id": "comment-14534643"
        }
    ]
}