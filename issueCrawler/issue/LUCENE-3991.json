{
    "id": "LUCENE-3991",
    "title": "Random shared by threads in RandomIndexWriter and MockAnalyzer",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Task",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "This is currently patched by creating a non-asserting Random like this:\n\n    public MockIndexWriter(Random r, Directory dir, IndexWriterConfig conf) throws IOException {\n      super(dir, conf);\n      // TODO: this should be solved in a different way; Random should not be shared (!).\n      this.r = new Random(r.nextLong());\n    }\n\n\nand\n\n  public MockAnalyzer(Random random, CharacterRunAutomaton runAutomaton, boolean lowerCase, CharacterRunAutomaton filter, boolean enablePositionIncrements) {\n    super(new PerFieldReuseStrategy());\n    // TODO: this should be solved in a different way; Random should not be shared (!).\n    this.random = new Random(random.nextLong());\n\n\n\nIf you replace new Random(...) with a simple assignment you'll get errors indicating the Random instance is shared (or passed between threads). I don't know how to fix it so I left it as it was before.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}