{
    "id": "SOLR-1997",
    "title": "analyzed field: Store internal value instead of input one",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Solr implements a set of filters and tokenizers that allow the filtering and treatment of text, but when the field is set to be stored, the text stored is the input one. This is may useful when the end user reads the input, but may not be like this in others, cases, when for example there are payloads and the text is something like A|2.0 good|1.0 day|3.0, or if the result of a query is processed using something like Carrot2\n\nSo this is a simple new kind of field that takes as input the output of a given type (source), and then performs the normal processing with the desired tokenizers and filters . The difference is that the stored value is the output of the source type, and this is what is retrieved when getting the document.\n\nThe name of the field type  is AnalyzedField and in the schema is introduced in the following way to create the analyzedSourceType from the  SourceType\n\t\t<fieldType name=\"SourceType\" class=\"solr.TextField\"  >\n\t\t\t<analyzer type=\"index\">\n\t\t\t\t<tokenizer class=\"solr.StandardTokenizerFactory\" />\n\t\t\t\t<filter class.......\" />\n\t\t\t</analyzer>\n\t\t\t<analyzer type=\"query\">\n\t\t\t\t<tokenizer class=\"solr.StandardTokenizerFactory\" />\n\t\t\t\t<filter .....\" />\n\t\t\t</analyzer>\n\t\t</fieldType>\n\n\n <fieldType name=\"analyzedSoureType\" class=\"solr.AnalyzedField\" positionIncrementGap=\"100\" preProcessType=\"SourceType\">\n             <analyzer>\n                 <tokenizer class=\"solr.WhitespaceTokenizerFactory\"/>\n           </analyzer>\n </fieldType>\n\nmany times just the WhitespaceTokenizerFactory  is needed as the tokens have already been cut down by the  SourceType\n\nfinally, a field can be declared as \n<field name=\"analyzedData\" type=\"analyzedSoureType\" indexed=\"true\" stored=\"true\" termVectors=\"true\" multiValued=\"true\"/>\n\nwhich can be written directly or can be defined as a copy of the source one.\n\n<field name=\"Data\" type=\"analyzedSoureType\" indexed=\"true\" stored=\"true\" termVectors=\"true\" multiValued=\"true\"/>\n...\n<copyField source=data\" dest=\"analyzedData\"/>",
    "attachments": {
        "SOLR-1997-1.4.patch": "https://issues.apache.org/jira/secure/attachment/12449250/SOLR-1997-1.4.patch",
        "SOLR-1997-1.5.patch": "https://issues.apache.org/jira/secure/attachment/12449251/SOLR-1997-1.5.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Joan Codina",
            "id": "comment-12887389",
            "date": "2010-07-12T14:49:06+0000",
            "content": "Patch for Solr 1.5 "
        },
        {
            "author": "Joan Codina",
            "id": "comment-12887390",
            "date": "2010-07-12T14:54:28+0000",
            "content": "patch for 1.4 and 1.5 versions "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12897139",
            "date": "2010-08-11T04:59:44+0000",
            "content": "Check an old old issue SOLR-314... that did the same thing\n\nI'm still torn if this is a good idea or not... "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12898507",
            "date": "2010-08-14T02:45:07+0000",
            "content": "This overlaps somewhat with SOLR-1535. "
        },
        {
            "author": "Joan Codina",
            "id": "comment-12901306",
            "date": "2010-08-23T08:26:46+0000",
            "content": "With respect to Solr-1535 from what I understand, it allows to load data externally generated in a given format that is not processed by Solr but indexed as desired. This is slightly different as we do process it with solr  but store it \nafter processing not before (as usually Solr does) \n\nWith Solr-314 I think the idea here is much simpler: To store something different that is in the input, but using always the Solr existing analyzers\n\nthe idea is that the ouptut of one analyzer is used as the input of a field. As the field stores the input as is, the output of the analyzer is stored.\nWhy? well, for many reasons.: for example it text includes Payloads, we don't want to show them. Or if we remove some labels... \nWe can decide to do half of the processing with the previous analyzer and then do some extra processing in the field. But in this way we can control what we store and what we index.\nI think that are a few lines of code that add functionality to the schema, so once integrated users don't need to program.\n\n\n "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043796",
            "date": "2011-06-03T16:47:07+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106400",
            "date": "2011-09-16T14:50:54+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13234634",
            "date": "2012-03-21T18:08:39+0000",
            "content": "Bulk of fixVersion=3.6 -> fixVersion=4.0 for issues that have no assignee and have not been updated recently.\n\nemail notification suppressed to prevent mass-spam\npsuedo-unique token identifying these issues: hoss20120321nofix36 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717223",
            "date": "2013-07-23T18:47:31+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971311",
            "date": "2014-04-16T12:57:44+0000",
            "content": "Move issue to Solr 4.9. "
        }
    ]
}