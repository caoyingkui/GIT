{
    "id": "SOLR-7883",
    "title": "MoreLikeThis is incompatible with facets",
    "details": {
        "components": [
            "faceting",
            "MoreLikeThis"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.2.1",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "When using the MoreLikeThis request handler, it doesn't seem possible to also have facets. This worked in Solr 4, but seems to be broken now.\n\nExample:\nThis works: ?qt=mlt&q=id:item1&mlt.fl=content\nThis doesn't: ?qt=mlt&q=id:item1&mlt.fl=content&facet=true\n\n(Yes, you don't even need to specify any facet fields/ranges/queries. The q query just has to match an item.)\nWhile the latter will actually return the same result set as the former, the HTTP status is 500 and the following error included in the response:\n\n\njava.lang.NullPointerException\n\tat org.apache.solr.request.SimpleFacets.getHeatmapCounts(SimpleFacets.java:1753)\n\tat org.apache.solr.request.SimpleFacets.getFacetCounts(SimpleFacets.java:289)\n\tat org.apache.solr.handler.MoreLikeThisHandler.handleRequestBody(MoreLikeThisHandler.java:233)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:143)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2064)\n\tat org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:654)\n\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:450)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:227)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:196)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:497)\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)\n\tat org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\n\tat java.lang.Thread.run(Thread.java:745)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-09-01T14:37:49+0000",
            "author": "Michael Daum",
            "content": "The problem still persists in 5.3.0 though the error message changed a bit.\n\nUsing oracle java8 (build 1.8.0_60-b27) 64-Bit\n\norg.apache.solr.common.SolrException: Unable to compute facet ranges, facet context is not set\\n\\tat org.apache.solr.handler.component.RangeFacetProcessor.getFacetRangeCounts(RangeFacetProcessor.java:72)\\n\\tat org.apache.solr.handler.component.FacetComponent.getFacetCounts(FacetComponent.java:296)\\n\\tat org.apache.solr.handler.MoreLikeThisHandler.handleRequestBody(MoreLikeThisHandler.java:238)\\n\\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:143)\\n\\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2068)\\n\\tat org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:669)\\n\\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:462)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:210)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:179)\\n\\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\\n\\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\\n\\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)\\n\\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\\n\\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\\n\\tat org.eclipse.jetty.server.Server.handle(Server.java:499)\\n\\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\\n\\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)\\n\\tat org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\\n\\tat java.lang.Thread.run(Thread.java:745)\\n\", ",
            "id": "comment-14725489"
        },
        {
            "date": "2015-09-20T15:52:36+0000",
            "author": "Fengtan",
            "content": "I don't seem to be able to reproduce the problem on a fresh Solr 5.3 server. Here is what I did:\n\n\ngit clone http://github.com/apache/lucene-solr.git\ncd lucene-solr/solr\ngit checkout lucene_solr_5_3 \nant server\n./bin/solr -e schemaless\ncurl \"http://localhost:8983/solr/gettingstarted/update?commit=true\" -H \"content-type:application/json\" -d \"[{\"id\":\"item1\",\"foo\":\"bar\"}]\"\ncurl -i \"http://localhost:8983/solr/gettingstarted/select?qt=mlt&q=id:item1&mlt.fl=content\"            # returns HTTP status 200 with no error in the logs\ncurl -i \"http://localhost:8983/solr/gettingstarted/select?qt=mlt&q=id:item1&mlt.fl=content&facet=true\" # returns HTTP status 200 with no error in the logs\n\n\n\nMaybe the problem got resolved ? ",
            "id": "comment-14899987"
        },
        {
            "date": "2015-09-24T14:44:30+0000",
            "author": "Tobias K\u00e4ssmann",
            "content": "We ran into the same exception with Solr 5.3 and in our case it was a wrongly configured Request handler.\nWe accidentally skip the prepare step of the FacetComponent by activate facetting in our own component afterwards. ",
            "id": "comment-14906437"
        },
        {
            "date": "2015-09-25T18:53:10+0000",
            "author": "Sean Xie",
            "content": "Ran into the same exception. Could you please share how to do the prepare step of the FacetComponent when configuring the Request Handler? ",
            "id": "comment-14908504"
        },
        {
            "date": "2015-09-25T19:36:46+0000",
            "author": "Sean Xie",
            "content": "The error is on mlt handler, MLT as search component is working fine, but if adding the MLT handler:\n\n/mlt?\n\nAdding the facet=on seems to throw the exception. ",
            "id": "comment-14908558"
        },
        {
            "date": "2015-09-28T07:58:05+0000",
            "author": "Tobias K\u00e4ssmann",
            "content": "set facet=true by default and place the FacetComponent at the end of the component list ",
            "id": "comment-14910135"
        },
        {
            "date": "2015-09-28T14:13:30+0000",
            "author": "Sean Xie",
            "content": "actually don't see how to configure FacetComponent in handler section: <requestHandler name=\"/mlt\" class=\"solr.MoreLikeThisHandler\"></requestHandler> ",
            "id": "comment-14933343"
        },
        {
            "date": "2015-09-28T15:31:27+0000",
            "author": "Sean Xie",
            "content": "to re-produce the issue:\n\ncurl \"http://localhost:8983/solr/techproducts/mlt?q=id%3aSP2514N&mlt.interestingTerms=details&mlt.mintf=1&wt=json&mlt.match.include=true&rows=20&start=0&fl=score,id,name,manu_id_s,cat,features,popularity,instock&mlt.fl=cat,feature&facet=true&facet.field=cat\" ",
            "id": "comment-14933446"
        },
        {
            "date": "2016-01-06T11:24:39+0000",
            "author": "Michael Daum",
            "content": "This is the checkin that introduced the error message \"Unable to compute facet ranges, facet context is not set\":\n\nhttps://fisheye6.atlassian.com/changelog/Lucene?cs=1689802\n\nPart of SOLR-4212, SOLR-6353 ",
            "id": "comment-15085425"
        },
        {
            "date": "2016-06-28T08:08:54+0000",
            "author": "Michael Daum",
            "content": "This error still persists and can easily be reproduced:\n\n(1) add  <requestHandler name=\"/mlt\" class=\"solr.MoreLikeThisHandler\" /> to example/techproducts/solr/techproducts/conf/solrconfig.xml\n\n(2) bin/solr -e techproducts\n\n(3) curl \"http://localhost:8983/solr/techproducts/mlt?indent=true&q=id%3aSP2514N&mlt.mintf=1&wt=json&mlt.match.include=true&rows=0&mlt.fl=cat&facet=true&facet.field=cat\"\n\nResult\n\n\n{\n  \"responseHeader\":{\n    \"status\":500,\n    \"QTime\":4},\n  \"match\":{\"numFound\":1,\"start\":0,\"docs\":[\n      {\n        \"id\":\"SP2514N\",\n        \"name\":\"Samsung SpinPoint P120 SP2514N - hard drive - 250 GB - ATA-133\",\n        \"manu\":\"Samsung Electronics Co. Ltd.\",\n        \"manu_id_s\":\"samsung\",\n        \"cat\":[\"electronics\",\n          \"hard drive\"],\n        \"features\":[\"7200RPM, 8MB cache, IDE Ultra ATA-133\",\n          \"NoiseGuard, SilentSeek technology, Fluid Dynamic Bearing (FDB) motor\"],\n        \"price\":92.0,\n        \"price_c\":\"92.0,USD\",\n        \"popularity\":6,\n        \"inStock\":true,\n        \"manufacturedate_dt\":\"2006-02-13T15:26:37Z\",\n        \"store\":\"35.0752,-97.032\",\n        \"_version_\":1538365554589433856}]\n  },\n  \"response\":{\"numFound\":11,\"start\":0,\"docs\":[]\n  },\n  \"error\":{\n    \"metadata\":[\n      \"error-class\",\"org.apache.solr.common.SolrException\",\n      \"root-error-class\",\"org.apache.solr.common.SolrException\"],\n    \"msg\":\"Unable to compute facet ranges, facet context is not set\",\n    \"trace\":\"org.apache.solr.common.SolrException: Unable to compute facet ranges, facet context is not set\\n\\tat org.apache.solr.handler.component.RangeFacetProcessor.getFacetRangeCounts(RangeFacetProcessor.java:67)\\n\\tat org.apache.solr.handler.component.FacetComponent.getFacetCounts(FacetComponent.java:296)\\n\\tat org.apache.solr.handler.MoreLikeThisHandler.handleRequestBody(MoreLikeThisHandler.java:235)\\n\\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:155)\\n\\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2102)\\n\\tat org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:654)\\n\\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:460)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:257)\\n\\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:208)\\n\\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\\n\\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\\n\\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)\\n\\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\\n\\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\\n\\tat org.eclipse.jetty.server.Server.handle(Server.java:499)\\n\\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\\n\\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)\\n\\tat org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\\n\\tat java.lang.Thread.run(Thread.java:745)\\n\",\n    \"code\":500}}\n\n\n\n\nCan anybody please look into this? Thanks. ",
            "id": "comment-15352557"
        },
        {
            "date": "2016-06-28T11:47:25+0000",
            "author": "Erik Hatcher",
            "content": "Michael Daum - have you tried the MLT query parser as an alternative?   Use regular ol' /select with faceting, along with the MLT query parser - that should work.   The MLT handler, while it is coded to support facets, the parser is (IMO) the better way to leverage MLT functionality. ",
            "id": "comment-15352846"
        },
        {
            "date": "2016-06-28T13:07:22+0000",
            "author": "Michael Daum",
            "content": "My use case is to return similar tags given the ones provided in a document. The MLT search component of a /select rather seems to be returning pointers to other documents. Alas faceting these doesn't work anymore. A /select?q=id:xxx only returns facets of this query (which is of course a bit bogus) ... but not those of the results of the MLT component.\n\nNote that this once worked perfectly in 4.2 or so.  ",
            "id": "comment-15352951"
        },
        {
            "date": "2016-06-28T18:16:49+0000",
            "author": "Sean Xie",
            "content": "Michael Daum 's case is exactly what I have experienced. For the needs we won't be able to use mlt as a search component nor as a MLT query parser. Having looking into the MLT source code and what we have done for a hack is to implement a second search using the interesting terms (same default max terms and adjustable). ",
            "id": "comment-15353474"
        },
        {
            "date": "2016-06-28T18:53:04+0000",
            "author": "Erik Hatcher",
            "content": "While there's a bug here in the MLT handler's use of faceting, I'm not sure why the MLT query parser doesn't suffice for the need here?   Sean Xie - what are your needs that aren't met by q={!mlt}? ",
            "id": "comment-15353524"
        },
        {
            "date": "2016-06-28T19:29:18+0000",
            "author": "Michael Daum",
            "content": "q={!mlt} does work out somehow yet this is still not correct. No matter what document id: is used facets are always the same values and counts. It seems to facet on the main results, not on the MLT result set.  ",
            "id": "comment-15353585"
        },
        {
            "date": "2016-06-28T21:38:55+0000",
            "author": "Erik Hatcher",
            "content": "Facets are driven off the result set (generated from the MLT query).  Maybe you're just not seeing the effect of it?   Here's an example:\n\nSolr 5.4.1 (because that's the latest one I had laying around)\n\n$ bin/solr start -e techproducts\n\n$ curl 'http://localhost:8983/solr/techproducts/select?wt=ruby&indent=on&debug=query&rows=0&facet=on&facet.field=cat&facet.mincount=1&q=%7B!mlt%20mindf=1%20mintf=1%20qf=name%7DSP2514N'\n{\n  'responseHeader'=>{\n    'status'=>0,\n    'QTime'=>1,\n    'params'=>{\n      'q'=>'{!mlt mindf=1 mintf=1 qf=name}SP2514N',\n      'facet.field'=>'cat',\n      'debug'=>'query',\n      'indent'=>'on',\n      'facet.mincount'=>'1',\n      'rows'=>'0',\n      'wt'=>'ruby',\n      'facet'=>'on'}},\n  'response'=>{'numFound'=>2,'start'=>0,'docs'=>[]\n  },\n  'facet_counts'=>{\n    'facet_queries'=>{},\n    'facet_fields'=>{\n      'cat'=>[\n        'electronics',2,\n        'hard drive',1,\n        'music',1]},\n    'facet_dates'=>{},\n    'facet_ranges'=>{},\n    'facet_intervals'=>{},\n    'facet_heatmaps'=>{}},\n  'debug'=>{\n    'rawquerystring'=>'{!mlt mindf=1 mintf=1 qf=name}SP2514N',\n    'querystring'=>'{!mlt mindf=1 mintf=1 qf=name}SP2514N',\n    'parsedquery'=>'(+(name:gb name:hard name:drive name:250 name:spinpoint name:133 name:p120 name:samsung name:sp2514n name:ata) -id:SP2514N)/no_coord',\n    'parsedquery_toString'=>'+(name:gb name:hard name:drive name:250 name:spinpoint name:133 name:p120 name:samsung name:sp2514n name:ata) -id:SP2514N',\n    'QParser'=>'SimpleMLTQParser'}}\n\n$ curl 'http://localhost:8983/solr/techproducts/select?wt=ruby&indent=on&debug=query&rows=0&facet=on&facet.field=cat&facet.mincount=1&q=%7B!mlt%20mindf=1%20mintf=1%20qf=name%7DGB18030TEST'\n{\n  'responseHeader'=>{\n    'status'=>0,\n    'QTime'=>0,\n    'params'=>{\n      'q'=>'{!mlt mindf=1 mintf=1 qf=name}GB18030TEST',\n      'facet.field'=>'cat',\n      'debug'=>'query',\n      'indent'=>'on',\n      'facet.mincount'=>'1',\n      'rows'=>'0',\n      'wt'=>'ruby',\n      'facet'=>'on'}},\n  'response'=>{'numFound'=>2,'start'=>0,'docs'=>[]\n  },\n  'facet_counts'=>{\n    'facet_queries'=>{},\n    'facet_fields'=>{\n      'cat'=>[\n        'electronics',1,\n        'music',1,\n        'search',1,\n        'software',1]},\n    'facet_dates'=>{},\n    'facet_ranges'=>{},\n    'facet_intervals'=>{},\n    'facet_heatmaps'=>{}},\n  'debug'=>{\n    'rawquerystring'=>'{!mlt mindf=1 mintf=1 qf=name}GB18030TEST',\n    'querystring'=>'{!mlt mindf=1 mintf=1 qf=name}GB18030TEST',\n    'parsedquery'=>'(+(name:with name:encoded name:test name:some name:characters name:gb18030) -id:GB18030TEST)/no_coord',\n    'parsedquery_toString'=>'+(name:with name:encoded name:test name:some name:characters name:gb18030) -id:GB18030TEST',\n    'QParser'=>'SimpleMLTQParser'}}\n\n ",
            "id": "comment-15353755"
        },
        {
            "date": "2016-06-28T21:43:50+0000",
            "author": "Erik Hatcher",
            "content": "I gave incorrect query parser syntax before, so that may have been the issue.  It should be like this: \n\nq={!mlt mindf=1 mintf=1}<id>\n ",
            "id": "comment-15353760"
        },
        {
            "date": "2017-06-09T17:04:27+0000",
            "author": "Edward Rudd",
            "content": "How can I reconfigure an \"mlt\" searchHandler to correctly support facet's on SOLR 5+..    We are using Sunspot which doesn't allow us to use the /select handler with \n{!mlt}\n w/o significant rewriting of the library.\n\nI would simply like a working recipe for an MLT requestHandler that actually works in SOLR 5+. ",
            "id": "comment-16044685"
        }
    ]
}