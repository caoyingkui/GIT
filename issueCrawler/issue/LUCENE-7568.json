{
    "id": "LUCENE-7568",
    "title": "Optimize merge when index sorting is used but the index is already sorted",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Resolved",
        "type": "Improvement",
        "components": [
            "core/index"
        ],
        "fix_versions": [
            "6.4",
            "7.0"
        ]
    },
    "description": "When the index sorting is defined a lot of optimizations are disabled during the merge. For instance the bulk merge of the compressing stored fields is disabled since documents are not merged sequentially. Though it can happen that index sorting is enabled but the index is already in sorted order (the sort field is not filled or filled with the same value for all documents). In such case we can detect that the sort is not needed and activate the merge optimization.",
    "attachments": {
        "LUCENE-7568.patch": "https://issues.apache.org/jira/secure/attachment/12839843/LUCENE-7568.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15684213",
            "date": "2016-11-21T17:45:42+0000",
            "content": "Here is a first patch that detects if an index is already sorted and makes this information available through MergeState. This information is then used by all the merge strategy to activate (or not) some optimizations. ",
            "author": "Jim Ferenczi"
        },
        {
            "id": "comment-15685113",
            "date": "2016-11-21T23:37:21+0000",
            "content": "This looks great!  Thanks Jim Ferenczi.\n\nMaybe we could improve the new tests a bit to:\n\n\n\tAllow merging, using newLogMergePolicy, which keeps docs in order but randomizes how merges are done; we want to make sure this opto still applies when a newly merged segment is then picked for another merge\n\n\n\n\n\tAssert that the resulting MergeState.needsIndexSort is always false\n\n\n\nI think this would increase test coverage since MultiSorter.sort is only part of the logic in computing that boolean.\n\nTo do that 2nd part ... I think you could make a simple FilterCodec that overrides one of the formats, e.g. PointsFormat, so that it can intercept the merge call at which point it would check the boolean? ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15686572",
            "date": "2016-11-22T12:12:22+0000",
            "content": "Thanks for the review Michael McCandless].\nI've modified the test with your suggestions. I am not sure I use the FilterCodec appropriately though (especially how I choose the delegating codec), can you take a look ?  ",
            "author": "Jim Ferenczi"
        },
        {
            "id": "comment-15687527",
            "date": "2016-11-22T18:42:13+0000",
            "content": "Thanks Jim Ferenczi, nice test refactoring!  The patch looks great ... I'll push shortly. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15687599",
            "date": "2016-11-22T19:10:31+0000",
            "content": "Commit 21735161dcbdfcad52220d0389637c43f0d7989d in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2173516 ]\n\nLUCENE-7568: Optimize merging when index sorting is used but the index is already sorted ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15687658",
            "date": "2016-11-22T19:32:50+0000",
            "content": "Commit 8d7c540e2c5da81063acf5b29f2a86b670b4a969 in lucene-solr's branch refs/heads/branch_6x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8d7c540 ]\n\nLUCENE-7568: Optimize merging when index sorting is used but the index is already sorted ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15687659",
            "date": "2016-11-22T19:33:07+0000",
            "content": "Thanks Jim Ferenczi! ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-15855935",
            "date": "2017-02-07T13:04:33+0000",
            "content": "Commit 37b75bef3f39840227f85aa5c330337fd101b003 in lucene-solr's branch refs/heads/master from Jim Ferenczi\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=37b75be ]\n\nLUCENE-7568: Fix test that should never create segments with a single document. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15855938",
            "date": "2017-02-07T13:05:26+0000",
            "content": "Commit 568f130c501c9c04a40a27e7952699490f155759 in lucene-solr's branch refs/heads/branch_6x from Jim Ferenczi\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=568f130 ]\n\nLUCENE-7568: Fix test that should never create segments with a single document. ",
            "author": "ASF subversion and git services"
        }
    ]
}