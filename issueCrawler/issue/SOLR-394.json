{
    "id": "SOLR-394",
    "title": "Ruby response writer emits invalid integers for numbers stored with leading zeros",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "clients - ruby - flare"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "There is an issue with the ruby response (and others too, perhaps json and python) when an \"integer\" field is sent with leading zeros.   For example (from a report to ruby-dev@lucene), the Solr response is:\n\n {'responseHeader'=>{'status'=>0,'QTime'=>1,'params'=>{'wt'=>'ruby','rows'=>'1','start'=>'5','q'=>'accounting','fl'=>'zip_code','qt'=>'standard'}},'response'=>{'numFound'=>15005,'start'=>5,'docs'=>[\n{'zip_code'=>[08817]}\n]}}\n\nWhich gives this error:\n\n solr/response/ruby.rb:30:in `initialize': invalid ruby code:\n (eval):1:in `initialize': compile error (Solr::Exception) (eval):1:\n Illegal octal digit\n\n\n\nI had proposed prefixing all integer ruby output with '0d' which would do the trick nicely.   Yonik, however, proposed simply stripping leading zeros for json and subclasses.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-12537725",
            "date": "2007-10-25T21:05:41+0000",
            "content": "the check/strip should probably be in IntField.write() so it doesn't penalize other sources of integer values. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12541811",
            "date": "2007-11-12T15:37:45+0000",
            "content": "I just committed a fix for this. "
        }
    ]
}