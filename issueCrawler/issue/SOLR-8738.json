{
    "id": "SOLR-8738",
    "title": "invalid DBQ initially sent to a non-leader node will report success",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.5.1",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Discovered this while working on SOLR-445.\n\nIf a Delete By Query gets sent to a node which is not hosting a leader (ie: only hosts replicas, or doesn't host any cores related to the specified collection) then a success will be returned, even if the DBQ is completely malformed and actually failed.",
    "attachments": {
        "SOLR-8738.patch": "https://issues.apache.org/jira/secure/attachment/12790005/SOLR-8738.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-02-25T19:33:26+0000",
            "author": "Hoss Man",
            "content": "The most trivial/obvious way to reproduce is...\n\n\n\tbin/solr -e cloud\n\tPick \"3\" for number of nodes\n\taccept the default port numbers (8983, 7574, 8984)\n\taccept the default collection name (gettingstarted)\n\tpick \"1\" for the number of shards\n\taccept the default number of replicas per shard (2)\n\taccept the default config set (data_driven_schema_configs)\n\n\n\n(So now you should have a single collection with a single shard with 2 replicas on 2 diff nodes and the remaining node doesn't host any cores related to the collection)\n\nNow try running a broken DBQ against all 3 nodes...\n\n\n$ curl -H 'Content-Type: application/json' 'http://127.0.1.1:8983/solr/gettingstarted/update' --data-binary '{\"delete\":{\"query\" : \"foo_i:yak\"}}'\n{\"responseHeader\":{\"status\":400,\"QTime\":18},\"error\":{\"metadata\":[\"error-class\",\"org.apache.solr.common.SolrException\",\"root-error-class\",\"org.apache.solr.common.SolrException\"],\"msg\":\"Invalid Number: yak\",\"code\":400}}\n$ curl -H 'Content-Type: application/json' 'http://127.0.1.1:8984/solr/gettingstarted/update' --data-binary '{\"delete\":{\"query\" : \"foo_i:yak\"}}'\n{\"responseHeader\":{\"status\":0,\"QTime\":25}}\n$ curl -H 'Content-Type: application/json' 'http://127.0.1.1:7574/solr/gettingstarted/update' --data-binary '{\"delete\":{\"query\" : \"foo_i:yak\"}}'\n{\"responseHeader\":{\"status\":0,\"QTime\":7}}\n\n\n\n...only the node hosting the leader correctly repsponds back with the error, requests that initially hit nodes only hosting replicas or not hosting any cores incorrectly indicate that the delete succeeded.\n\n\n\n2 important notes:\n\n\n\tThis can also be reproduced using numShards > 1, most easily by running -e cloud and choosing 4 nodes, and accepting the default 2 shards, 2 replicas.  Then repeat the same curl commands above over all 4 ports.\n\t\n\t\tyou should see 2 nodes correctly return failures, and 2 nodes incorrectly claim success\n\t\n\t\n\tYou can also reproduce using -e cloud -noprompt but since that that defaults to only 2 nodes they are garunteed to each have a leader on them, so you have to be more explicit about the requests.\n\t\n\t\tUse the Solr UI to determine the non-leader core_node_names (ex: gettingstarted_shard1_replica1) and which node they are located on, then use those in url instead of the simple collection name (otherwise smple collection paths will be auto-route to a leader on each node)\n\t\n\t\n\n\n\n ",
            "id": "comment-15167711"
        },
        {
            "date": "2016-02-25T21:38:08+0000",
            "author": "Hoss Man",
            "content": "here's a MiniSolrCloudCluster based test patch i hacked out of the existing SOLR-445 work demonstrating the problem.\n\nstill tracing trough to try and figure out why the errors aren't getting propogated. ",
            "id": "comment-15167914"
        },
        {
            "date": "2016-02-26T18:29:28+0000",
            "author": "Hoss Man",
            "content": "The crux of why the errors are silently ignored seems to be because DUP.doFinish() only logs a WARN \u2013 but does not propogate \u2013 any error returned by cmdDistrib.getErrors(); unless the type of Node involved in the request was a RetryNode.  The reason given for this being...\n\n\n// else\n// for now we don't error - we assume if it was added locally, we\n// succeeded \n\n\n\nThe problem aparently being that when a DBQ is forwarded to all leaders, StdNode is (currently) used \u2013 but there was no local operation executed, only the forward to the leaders, so there is no local success/failure.\n\n\n\nThe attached patch changes the DBQ propagation logic to use RetryNode \u2013 i'm still running full tests, but at a minimum it makes the new TestCloudDeleteByQuery in the patch start passing.\n\ni don't fully understand the entire ramifications of this change, particularly as it relates to rest of the code in DUP.doFinish and things like forcing leader recovery, but based on the comments on the StdNode / RetryNode classes and the other uses of StdNode / RetryNodeRetryNode (notably: STD->replica vs RETRY->leader) this seems like the most correct fix in general. ",
            "id": "comment-15169479"
        },
        {
            "date": "2016-03-01T00:17:32+0000",
            "author": "Hoss Man",
            "content": "Updated patch to refactor test to take advantage of SolrCloudTestCase added by SOLR-8758.\n\nStill need someone who actually understands this code to review the non-test changes. ",
            "id": "comment-15172958"
        },
        {
            "date": "2016-03-01T15:44:31+0000",
            "author": "Noble Paul",
            "content": "It is easy to understand why and how this fix works. \nBut it's kinda hard to understand why DUP is written to look at classname to propagate the errors. \n\n+1 to commit ",
            "id": "comment-15173921"
        },
        {
            "date": "2016-03-01T17:06:51+0000",
            "author": "ASF subversion and git services",
            "content": "Commit ff6557cbcb5308d60f17114de1d0ad29003e9668 in lucene-solr's branch refs/heads/jira/SOLR-445 from Chris Hostetter (Unused)\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ff6557c ]\n\nSOLR-8738: Fixed false success response when invalid deleteByQuery requests intially hit non-leader cloud nodes ",
            "id": "comment-15174037"
        },
        {
            "date": "2016-03-01T17:06:56+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 2401c9495319e1b5065b05ef3a36ee586f06b6d4 in lucene-solr's branch refs/heads/jira/SOLR-445 from Chris Hostetter (Unused)\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2401c94 ]\n\nSOLR-445 Merge branch 'master' into jira/SOLR-445 (pick up SOLR-8738 changes) ",
            "id": "comment-15174040"
        },
        {
            "date": "2016-03-01T17:06:57+0000",
            "author": "ASF subversion and git services",
            "content": "Commit ff6557cbcb5308d60f17114de1d0ad29003e9668 in lucene-solr's branch refs/heads/master from Chris Hostetter (Unused)\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ff6557c ]\n\nSOLR-8738: Fixed false success response when invalid deleteByQuery requests intially hit non-leader cloud nodes ",
            "id": "comment-15174041"
        },
        {
            "date": "2016-04-21T21:09:24+0000",
            "author": "Anshum Gupta",
            "content": "Reopening for 5.5.1 ",
            "id": "comment-15252744"
        },
        {
            "date": "2016-04-21T21:49:32+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 9e77319abcf3ff372b86cec4d66bac11f7e038b6 in lucene-solr's branch refs/heads/branch_5x from Chris Hostetter (Unused)\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9e77319 ]\n\nSOLR-8738: Fixed false success response when invalid deleteByQuery requests intially hit non-leader cloud nodes ",
            "id": "comment-15252820"
        },
        {
            "date": "2016-04-21T22:14:59+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 66d3c2eb0a1e7b28621557c87c8d5b5219a95add in lucene-solr's branch refs/heads/branch_5_5 from Chris Hostetter (Unused)\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=66d3c2e ]\n\nSOLR-8738: Fixed false success response when invalid deleteByQuery requests intially hit non-leader cloud nodes ",
            "id": "comment-15252873"
        }
    ]
}