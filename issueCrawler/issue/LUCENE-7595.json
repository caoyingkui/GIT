{
    "id": "LUCENE-7595",
    "title": "RAMUsageTester in test-framework and static field checker no longer works with Java 9",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Resolved",
        "type": "Bug",
        "components": [
            "general/test"
        ],
        "fix_versions": [
            "6.4",
            "7.0"
        ]
    },
    "description": "Lucene/Solr tests have a special rule that records memory usage in static fields before and after test, so we can detect memory leaks. This check dives into JDK classes (like java.lang.String to detect their size). As Java 9 build 148 completely forbids setAccessible on any runtime class, we have to change or disable this check:\n\n\n\tAs first step I will only add the rule to LTC, if we not have Java 8\n\tAs a second step we might investigate how to improve this\n\n\n\nRobert Muir had some ideas for the 2nd point:\n\n\n\tDon't dive into classes from JDK modules and instead \"estimate\" the size for some special cases (like Strings)\n\tDisallow any static field in tests that is not final (constant) and points to an Object except: Strings and native (wrapper) types.\n\n\n\nIn addition we also have RAMUsageTester, that has similar problems and is used to compare estimations of Lucene's calculations of Codec/IndexWriter/IndexReader memory usage with reality. We should simply disable those tests.",
    "attachments": {
        "LUCENE-7595.patch": "https://issues.apache.org/jira/secure/attachment/12844712/LUCENE-7595.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15753834",
            "date": "2016-12-16T08:38:59+0000",
            "content": "I agree certain classes could be approximated (like String, Lists, etc.). \n\nDisallow any static field in tests that is not final (constant) and points to an Object except: Strings and native (wrapper) types.\n\nThe check could be less strict \u2013 we could fail if the value of such a field is non-null after the test and permit nullified reference fields. ",
            "author": "Dawid Weiss"
        },
        {
            "id": "comment-15779360",
            "date": "2016-12-27T01:48:47+0000",
            "content": "Here is my patch that makes test works on whole Lucene:\n\n\tOn Java 9 it disables the static leak detector\n\tRamUsageTester was fixed to have some \"shortcuts\" which are used  if Java 9+ is detected: String/StringBuffer/StringBuilder and some other types are calculated using their length/capacity. It also estimates memory usage of Maps and Iterables by just iterating over their items (not respecting the Hash/LinkedHash impl details, just plain stupid summing up). Because of this I had to disable one test for the LRU cache, but otherwise the estimation is almost correct. All other uses of RamUsageTester pass \n\n\n\nDawid Weiss: What do you think? ",
            "author": "Uwe Schindler"
        },
        {
            "id": "comment-15779982",
            "date": "2016-12-27T09:02:05+0000",
            "content": "Looks good to me overall. A few notes and ideas.\n\nThere is a separate RUE impl. inside randomized runner just for the sake of StaticFieldsInvariantRule... perhaps we could simply copy over this rule's source code to Lucene to make use of the local ram estimator \u2013 then you'd have full control to tweak it as needed. Perhaps it'd also simplify the static rule initialization block.\n\n\n+      a(String.class, v -> charArraySize(v.length())); // may not be correct with Java 9's compact strings!\n\n\n\nYup, this is overestimating based on the patch (https://bugs.openjdk.java.net/browse/JDK-8054307). But I think it's ok \u2013 better to overestimate here and blow up early and there's no way to check which representation (byte or char-based) was actually chosen by the jvm. Yes, we could reimplement the Latin1 vs. UTF16 heuristic, but it seems like an overkill. \n\n ",
            "author": "Dawid Weiss"
        },
        {
            "id": "comment-15784137",
            "date": "2016-12-29T00:56:40+0000",
            "content": "Commit f29d2b5668296dfcdb8d650305449674faa29847 in lucene-solr's branch refs/heads/master from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f29d2b5 ]\n\nLUCENE-7595: Improve RAMUsageTester in test-framework to estimate memory usage of runtime classes and work with Java 9 EA (b148+). Disable static field heap usage checker in LuceneTestCase ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15784166",
            "date": "2016-12-29T01:12:44+0000",
            "content": "Commit ea7db0a176979559e874b292522fa7006b578882 in lucene-solr's branch refs/heads/branch_6x from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ea7db0a ]\n\nLUCENE-7595: Improve RAMUsageTester in test-framework to estimate memory usage of runtime classes and work with Java 9 EA (b148+). Disable static field heap usage checker in LuceneTestCase ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15785952",
            "date": "2016-12-29T19:32:05+0000",
            "content": "Commit db9190db9372ae88a7392a7186397441ce070a96 in lucene-solr's branch refs/heads/master from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=db9190d ]\n\nLUCENE-7595: Fix bug with RamUsageTester incorrectly handling Iterables outside Java Runtime ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15785955",
            "date": "2016-12-29T19:33:18+0000",
            "content": "Commit 80512ec412c20517341ddd50c78baf5270fcdc2f in lucene-solr's branch refs/heads/branch_6x from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=80512ec ]\n\nLUCENE-7595: Fix bug with RamUsageTester incorrectly handling Iterables outside Java Runtime ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15786225",
            "date": "2016-12-29T21:59:01+0000",
            "content": "Commit d65c02e8cc14f03389c2426ea3d3ddd75e12b1ec in lucene-solr's branch refs/heads/master from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d65c02e ]\n\nLUCENE-7595: Disable another test not compatible with RamUsageTester ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-15786229",
            "date": "2016-12-29T22:00:11+0000",
            "content": "Commit 40a8b4edb4cfc7de5b62037fdcb389afa247573d in lucene-solr's branch refs/heads/branch_6x from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=40a8b4e ]\n\nLUCENE-7595: Disable another test not compatible with RamUsageTester ",
            "author": "ASF subversion and git services"
        }
    ]
}