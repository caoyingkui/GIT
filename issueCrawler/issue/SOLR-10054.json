{
    "id": "SOLR-10054",
    "title": "Core swapping doesn't work with new metrics changes in place",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "6.4.1",
            "7.0"
        ],
        "affect_versions": "6.4,                                            7.0",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "The new 6.4.0 version includes some significant changes having to do with metrics.  These changes have broken core swapping.  Will attach some screenshots.\n\nFor the screenshots that I will attach, I started Solr directly from the 6.4.0 download on Windows 7 (bin\\solr start).  Then I created a \"foo\" core and a \"bar\" core, each from a different configset, using the bin\\solr command.\n\n\n\tScreenshot 1: you can see the two cores in CoreAdmin.\n\tScreenshot 2: Attempting to swap the cores, an error message appears about a metric already existing for the ping handler.\n\tScreenshot 3: Clicking somewhere else and then back to CoreAdmin shows that both cores have the same name \u2013 bar.\n\tIf Solr is stopped and then started back up, the admin UI looks like screenshot 1 again \u2013 the change that caused two cores with the same name only took place within the running Solr and did not update core.properties files.",
    "attachments": {
        "solr64coreswap3.png": "https://issues.apache.org/jira/secure/attachment/12850070/solr64coreswap3.png",
        "solr64coreswap1.png": "https://issues.apache.org/jira/secure/attachment/12850068/solr64coreswap1.png",
        "SOLR-10054.patch": "https://issues.apache.org/jira/secure/attachment/12850288/SOLR-10054.patch",
        "solr64coreswap2.png": "https://issues.apache.org/jira/secure/attachment/12850069/solr64coreswap2.png"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-01-30T22:31:44+0000",
            "content": "Attaching screenshots. ",
            "author": "Shawn Heisey",
            "id": "comment-15846056"
        },
        {
            "date": "2017-01-30T22:36:39+0000",
            "content": "The initial problem report came in via the #solr IRC channel. ",
            "author": "Shawn Heisey",
            "id": "comment-15846064"
        },
        {
            "date": "2017-01-30T23:24:05+0000",
            "content": "The error message visible in the admin UI is \"A metric named ADMIN./admin/ping.requestTimes already exists\"\n\nBelow is the full ERROR entry from the logfile when the core swap is attempted.  This is from the binary 6.4.0 release:\n\n\n2017-01-30 22:18:20.746 ERROR (qtp1769597131-22) [   ] o.a.s.h.RequestHandlerBase java.lang.IllegalArgumentException: A metric named ADMIN./admin/ping.requestTimes already exists\n\tat com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:91)\n\tat com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389)\n\tat com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104)\n\tat org.apache.solr.metrics.SolrMetricManager.moveMetrics(SolrMetricManager.java:227)\n\tat org.apache.solr.metrics.SolrCoreMetricManager.afterCoreSetName(SolrCoreMetricManager.java:76)\n\tat org.apache.solr.core.SolrCore.setName(SolrCore.java:423)\n\tat org.apache.solr.core.SolrCores.swap(SolrCores.java:243)\n\tat org.apache.solr.core.CoreContainer.swap(CoreContainer.java:1012)\n\tat org.apache.solr.handler.admin.CoreAdminOperation.lambda$static$3(CoreAdminOperation.java:122)\n\tat org.apache.solr.handler.admin.CoreAdminOperation.execute(CoreAdminOperation.java:377)\n\tat org.apache.solr.handler.admin.CoreAdminHandler$CallInfo.call(CoreAdminHandler.java:379)\n\tat org.apache.solr.handler.admin.CoreAdminHandler.handleRequestBody(CoreAdminHandler.java:165)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:166)\n\tat org.apache.solr.servlet.HttpSolrCall.handleAdminRequest(HttpSolrCall.java:664)\n\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:445)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:345)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:296)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1691)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:582)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1180)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:512)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1112)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:119)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:534)\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:320)\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:251)\n\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:273)\n\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)\n\tat org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93)\n\tat org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.executeProduceConsume(ExecuteProduceConsume.java:303)\n\tat org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceConsume(ExecuteProduceConsume.java:148)\n\tat org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:136)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:671)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:589)\n\tat java.lang.Thread.run(Thread.java:745)\n\n ",
            "author": "Shawn Heisey",
            "id": "comment-15846130"
        },
        {
            "date": "2017-01-30T23:37:05+0000",
            "content": "I see that there is \"TestCoreAdmin\" but the text \"swap\" does not appear in that test.  I cannot find any evidence that core swapping is tested by any Solr tests at all. ",
            "author": "Shawn Heisey",
            "id": "comment-15846150"
        },
        {
            "date": "2017-01-31T18:53:54+0000",
            "content": "Yeah, we definitely need more test coverage of such fundamental functionality... \n\nThe issue turned out to be less trivial than I thought. When rename or swap core is requested the metrics subsystem needs to preserve metrics that are already accumulated under the old core name (we use separate registries per core). Since metrics' initialization occurs when core is constructed we can't easily re-register all SolrMetricProducer-s in the new registry, so the existing code tried to move actual Metric instances from the old to the new repository. The problem was that more or less the same metric names already existed in the target repository, because they were registered there by the other core's producers - and vice versa.\n\nThe solution was to implement a dedicated operation SolrMetricManager.swap(name1, name2) that knows how to atomically (or rather under proper locking) swap these two registries, without moving metric instances between registries.\n\nI also added TestCoreAdmin.testCoreSwap and testValidCoreRename, and extended CoreAdminRequest to support the swap operation. ",
            "author": "Andrzej Bialecki",
            "id": "comment-15847292"
        },
        {
            "date": "2017-01-31T19:00:58+0000",
            "content": "Patch relative to branch_6x. ",
            "author": "Andrzej Bialecki",
            "id": "comment-15847314"
        },
        {
            "date": "2017-02-01T08:43:05+0000",
            "content": "Updated patch. All tests are passing, I think this is ready. ",
            "author": "Andrzej Bialecki",
            "id": "comment-15848134"
        },
        {
            "date": "2017-02-01T15:56:38+0000",
            "content": "Commit 8299378eab3282e4dcb14b92645a4f1d214f13cc in lucene-solr's branch refs/heads/branch_6x from Andrzej Bialecki \n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8299378 ]\n\nSOLR-10054: Core swapping doesn't work with new metrics changes in place. ",
            "author": "ASF subversion and git services",
            "id": "comment-15848561"
        },
        {
            "date": "2017-02-01T16:50:24+0000",
            "content": "Commit bef725aeefea0ba34bdf9c74b8e67376377e8983 in lucene-solr's branch refs/heads/master from Andrzej Bialecki \n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bef725a ]\n\nSOLR-10054: Core swapping doesn't work with new metrics changes in place. ",
            "author": "ASF subversion and git services",
            "id": "comment-15848616"
        }
    ]
}