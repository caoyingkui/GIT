{
    "id": "LUCENE-5664",
    "title": "New meaning of equal sign in StandardQueryParser",
    "details": {
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved",
        "components": [
            "modules/queryparser"
        ],
        "affect_versions": "4.5,                                            4.8",
        "status": "Open",
        "fix_versions": []
    },
    "description": "The StandardSyntaxParser.jj has (undocumented?) support for the <, <=, > and => operators that generate a TermRangeQueryNode. The equal operator, however, behaves just like the colon and produces a regular Term node instead of a TermRangeQueryNode.\n\nI've been using the attached patch in a project where we had to be able to query the exact value of a field and I'm hoping there is interest to apply it upstream.\n\n(Note that the colon operator works just as before, producing TermQuery or PhraseQuery nodes.)",
    "attachments": {
        "LUCENE-5664.patch": "https://issues.apache.org/jira/secure/attachment/12644125/LUCENE-5664.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13997085",
            "author": "Ahmet Arslan",
            "content": "query the exact value of a field \nCan you give an example? You mean values containing special characters? like ! || ? * ~  etc. ",
            "date": "2014-05-14T00:19:54+0000"
        },
        {
            "id": "comment-16644561",
            "author": "Martin Blom",
            "content": "OK, I realize this late reply is just ridiculous, but ...\n\nYes, it's exactly the same comparison as the other operators, i.e. name=\"some value\" behaves just like name>=\"some value\" AND name<=\"some value\".\n\n\u00a0 ",
            "date": "2018-10-10T07:29:52+0000"
        }
    ]
}