{
    "id": "SOLR-9271",
    "title": "Make fragment ellipsis definable",
    "details": {
        "components": [
            "highlighter"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.4.1",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "The client has to deal if the highlight fragment is only an excerpt or the whole content of a field. \n\nIt would be a good feature if the highlight component could already process this information, and enrich the highlight fragment with configured ellipsis.\n\nSee stackoverflow: http://stackoverflow.com/questions/3400271/display-ellipsis-before-and-after-fragment-in-solr",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-07-06T05:07:37+0000",
            "author": "David Smiley",
            "content": "I agree this would be useful; not sure if it should do this by default as some people may not care... but then such clients could trivially remove an ellipsis at the very start or end if they didn't care.\n\nFWIW with the Postings highlighter, this can be done by extending DefaultPassageFormatter with one that adds these ellipsis conditionally to the front & back when they should be there.  To plug it into Solr, you'd extend PostingsSolrHighlighter.  Or if DefaultPassageFormatter simply worked this way to begin with (patching at the Lucene level) then this would be even simpler of course.\n\nThe other highlighter impls are different, unfortunately.\n\nLoosely related to this is SOLR-1954 pertaining to enhancing the highlighting response structure to expose offsets. That would enable a client to add the ellipsis since it'd know if the fragment started at offset 0 or not.  Although knowing to insert a trailing ellipsis would require knowing the doc length.  Hmmm. ",
            "id": "comment-15363781"
        }
    ]
}