{
    "id": "LUCENE-1200",
    "title": "IndexWriter.addIndexes* can deadlock in rare cases",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/index"
        ],
        "type": "Bug",
        "fix_versions": [
            "2.3.2",
            "2.4"
        ],
        "affect_versions": "2.4",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "In somewhat rare cases it's possible for addIndexes to deadlock\nbecause it is a synchronized method.\n\nNormally the merges that are necessary for addIndexes are done\nserially (with the primary thread) because they involve segments from\nan external directory.  However, if mergeFactor of these merges\ncomplete then a merge becomes necessary for the merged segments, which\nare not external, and so it can run in the background.  If too many BG\nthreads need to run (currently > 4) then the \"pause primary thread\"\napproach adopted in LUCENE-1164 will deadlock, because the addIndexes\nmethod is holding a lock on IndexWriter.\n\nThis was appearing as a intermittant deadlock in the\nTestIndexWriterMerging test case.\n\nThis issue is not present in 2.3 (it was caused by LUCENE-1164).\n\nThe solution is to shrink the scope of synchronization: don't\nsynchronize on the whole method & wrap synchronized(this) in the right\nplaces inside the methods.",
    "attachments": {
        "LUCENE-1200.patch": "https://issues.apache.org/jira/secure/attachment/12377063/LUCENE-1200.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2008-03-04T10:17:00+0000",
            "content": "Attached patch.  I plan to commit in a day or two. ",
            "author": "Michael McCandless",
            "id": "comment-12574913"
        },
        {
            "date": "2008-03-11T19:29:22+0000",
            "content": "targeted for 2.3.2 bug fix release ",
            "author": "Hoss Man",
            "id": "comment-12577575"
        }
    ]
}