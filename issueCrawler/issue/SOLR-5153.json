{
    "id": "SOLR-5153",
    "title": "CollationKeyFilter returns unexpected output",
    "details": {
        "affect_versions": "4.3",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "SearchComponents - other"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Not A Problem"
    },
    "description": "Given the default situation and the example from solr-wiki: http://wiki.apache.org/solr/UnicodeCollation\nthe solr analysis reports strange output for the CKF.\nSettings:\n\n<fieldType name=\"germanText\" class=\"solr.TextField\">\n\t<analyzer type=\"index\">\n\t\t<tokenizer class=\"solr.WhitespaceTokenizerFactory\"/>\n\t\t<filter class=\"solr.CollationKeyFilterFactory\" language=\"de\" strength=\"primary\"/>\n\t</analyzer>\n\t<analyzer type=\"query\">\n\t\t<tokenizer class=\"solr.WhitespaceTokenizerFactory\"/>\n\t\t<filter class=\"solr.CollationKeyFilterFactory\" language=\"de\" strength=\"primary\"/>\n\t</analyzer>\n</fieldType>\n\n<field name=\"germanText\" type=\"germanText\" indexed=\"true\" stored=\"false\" multiValued=\"true\"/>\n\n<copyField source=\"title\" dest=\"germanText\"/>\n\n\n\nInput:\n\nPeter\n\n\n\nOutput:\n\nWT:  Peter [50 65 74 65 72]\nCKF: 1\u4016\f\u7005\u4003\u1400 [31 e4 80 96 c e7 80 85 e4 80 83 e1 90 80 0 0 0]",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Robert Muir",
            "id": "comment-13739787",
            "date": "2013-08-14T15:44:28+0000",
            "content": "This is expected, see http://wiki.apache.org/solr/UnicodeCollation#Searching\n\n\"Please note that the strange output you see from the filter is really a binary collation key encoded in a special form. What is important is that it is the same value for equivalent tokens as defined by that collator.\" "
        },
        {
            "author": "Maciej Niemczyk",
            "id": "comment-13739792",
            "date": "2013-08-14T15:49:21+0000",
            "content": "Ok, thanks for such fast response. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13739795",
            "date": "2013-08-14T15:52:20+0000",
            "content": "No problem, i know it looks crazy from the analysis output "
        },
        {
            "author": "Maciej Niemczyk",
            "id": "comment-13739797",
            "date": "2013-08-14T15:54:46+0000",
            "content": "so it`s kind of hash tag that matches both cases, right?  "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13739803",
            "date": "2013-08-14T15:59:39+0000",
            "content": "yes, its like a byte[] \"sort key\" (described in http://www.unicode.org/reports/tr10/), but then encoded in such a way to be \"utf-8 clean\" "
        },
        {
            "author": "Maciej Niemczyk",
            "id": "comment-13739812",
            "date": "2013-08-14T16:05:27+0000",
            "content": "thank you very much for great background information, this really helps us to decide which way to solve the diacritics problem in our, german language based position. Have a nice day! "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13739815",
            "date": "2013-08-14T16:08:53+0000",
            "content": "For german diacritics, maybe you want to use the GermanNormalizationFilterFactory (its in the text_de fieldtype in the solr/example i think).\n\n\n/**\n * Normalizes German characters according to the heuristics\n * of the <a href=\"http://snowball.tartarus.org/algorithms/german2/stemmer.html\">\n * German2 snowball algorithm</a>.\n * It allows for the fact that \u00e4, \u00f6 and \u00fc are sometimes written as ae, oe and ue.\n * <p>\n * <ul>\n * <li> '\u00df' is replaced by 'ss'\n * <li> '\u00e4', '\u00f6', '\u00fc' are replaced by 'a', 'o', 'u', respectively.\n * <li> 'ae' and 'oe' are replaced by 'a', and 'o', respectively.\n * <li> 'ue' is replaced by 'u', when not following a vowel or q.\n * </ul>\n * <p>\n * This is useful if you want this normalization without using\n * the German2 stemmer, or perhaps no stemming at all.\n */\n\n "
        },
        {
            "author": "Maciej Niemczyk",
            "id": "comment-13740043",
            "date": "2013-08-14T18:51:09+0000",
            "content": "Wow, thats fantastic and exactly what i was trying to achieve with the CollationKeyFilter. I\u00b4m a bit ashamed for not studying the org.apache.solr.analysis package in detail - i thought the wiki page http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters handles all available Filters, but thats great to know that there is even more to discover. Thank You Very Much again!\nBest Regards, Maciek. "
        }
    ]
}