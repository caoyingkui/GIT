{
    "id": "SOLR-8572",
    "title": "Json Facets not working correctly when request is \"quite complex\"",
    "details": {
        "components": [
            "Facet Module"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.2.1",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Solr Version: 5.2.1\n\nHere is the json.facet parameter request:\n\n\n{\n  mes: {\n    type: terms,\n    field: mes,\n    limit: 1,\n    offset: 0,\n    mincount: 1,\n    sort: \"index desc\",\n    missing: false,\n    numBuckets: true,\n    allBuckets: true,\n    facet: {\n      mostrar_cant_teus: \"sum(mostrar_cant_teus)\",\n      AUX: {\n        type: query,\n        q: \"cod_coo:(CN)\",\n        facet: {\n          cod_coo: {\n            type: terms,\n            field: cod_coo,\n            limit: 1,\n            offset: 0,\n            mincount: 1,\n            sort: \"mostrar_cant_teus desc\",\n            missing: false,\n            numBuckets: true,\n            allBuckets: true,\n            facet: {\n              mostrar_cant_teus: \"sum(mostrar_cant_teus)\",\n              AUX: {\n                type: query,\n                q: \"cod_port_of_dep:(57035)\",\n                facet: {\n                  cod_port_of_dep: {\n                    type: terms,\n                    field: cod_port_of_dep,\n                    limit: 1,\n                    offset: 0,\n                    mincount: 1,\n                    sort: \"mostrar_cant_teus desc\",\n                    missing: false,\n                    numBuckets: true,\n                    allBuckets: true,\n                    facet: {\n                      mostrar_cant_teus: \"sum(mostrar_cant_teus)\"\n                    }\n                  }\n                }\n              },\n              AUX: {\n                type: query,\n                q: \"nro_shipper_unif:(1)\",\n                facet: {\n                  nro_shipper_unif: {\n                    type: terms,\n                    field: nro_shipper_unif,\n                    limit: 1,\n                    offset: 0,\n                    mincount: 1,\n                    sort: \"mostrar_cant_teus desc\",\n                    missing: false,\n                    numBuckets: true,\n                    allBuckets: true,\n                    facet: {\n                      mostrar_cant_teus: \"sum(mostrar_cant_teus)\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      AUX: {\n        type: query,\n        q: \"cod_transportista:(MSCU)\",\n        facet: {\n          cod_transportista: {\n            type: terms,\n            field: cod_transportista,\n            limit: 1,\n            offset: 0,\n            mincount: 1,\n            sort: \"mostrar_cant_teus desc\",\n            missing: false,\n            numBuckets: true,\n            allBuckets: true,\n            facet: {\n              mostrar_cant_teus: \"sum(mostrar_cant_teus)\",\n              AUX: {\n                type: query,\n                q: \"hs2:(94)\",\n                facet: {\n                  hs2: {\n                    type: terms,\n                    field: hs2,\n                    limit: 1,\n                    offset: 0,\n                    mincount: 1,\n                    sort: \"mostrar_cant_teus desc\",\n                    missing: false,\n                    numBuckets: true,\n                    allBuckets: true,\n                    facet: {\n                      mostrar_cant_teus: \"sum(mostrar_cant_teus)\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  mostrar_cant_teus: \"sum(mostrar_cant_teus)\"\n}\n\n\n\nAnd the \"facets\" response is the following:\n\n\n\"facets\": {\n\"count\": 42663421,\n\"mostrar_cant_teus\": 60686638.53527718,\n\"mes\": {\n\"numBuckets\": 12,\n\"allBuckets\": {\n\"count\": 42663421,\n\"mostrar_cant_teus\": 60686638.53527718\n},\n\"buckets\": [\n{\n\"val\": \"201412\",\n\"count\": 3534902,\n\"mostrar_cant_teus\": 5001808.791391041,\n\"AUX\": {\n\"count\": 238136,\n\"cod_transportista\": {\n\"numBuckets\": 1,\n\"allBuckets\": {\n\"count\": 238136,\n\"mostrar_cant_teus\": 390971.76781999925\n},\n\"buckets\": [\n{\n\"val\": \"MSCU\",\n\"count\": 238136,\n\"mostrar_cant_teus\": 390971.76781999925,\n\"AUX\": {\n\"count\": 22291,\n\"hs2\": {\n\"numBuckets\": 86,\n\"allBuckets\": {\n\"count\": 25075,\n\"mostrar_cant_teus\": 58216.2562400001\n},\n\"buckets\": [\n{\n\"val\": \"94\",\n\"count\": 22291,\n\"mostrar_cant_teus\": 44126.786240000154\n}]}}}]}}}]}}\n\n\n\nThe problem is in the response. It is not retrieving information on the field cod_coo. Of course it is independent of the cod_coo field, I tried with other fields and it keeps ignoring them also.\n\nAll the fields are of the type string, except from hs2 which is of type \"text_ws\".\n\nLet me know if you need any more info.\n\nThanks.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-01-20T16:32:19+0000",
            "author": "Yonik Seeley",
            "content": "Since you're reusing tags (AUX), it's really hard to orient myself in the response and understand what's missing.\nIs there a way to boil this down into a smaller request?  If not, could you point to exactly what information is missing and where?\nIs this still an issue in the latest Solr release?  There have been quite a few bugs fixed. ",
            "id": "comment-15108851"
        },
        {
            "date": "2016-01-20T19:51:16+0000",
            "author": "Pablo Anzorena",
            "content": "Ok, I found the bug (or maybe it is not an bug). The problem was that I was using the same tag (AUX). \nHow it works nowadays, It is always keeping the last tag, if it is more than one tag on the same level of the tree (considering the json.facet as a tree). Then it overrides the previous ones with the same tag. ",
            "id": "comment-15109276"
        },
        {
            "date": "2016-01-20T22:01:57+0000",
            "author": "Yonik Seeley",
            "content": "Ah, thanks for tracking it down!\n\nThis overwriting behavior would be done at the point where a JSON Object is created.\nPerhaps we should throw an exception on repeated JSON keys?\nOr perhaps automatically build a list, which should then result in a syntax error at some later point? ",
            "id": "comment-15109567"
        },
        {
            "date": "2016-01-21T17:00:34+0000",
            "author": "Pablo Anzorena",
            "content": "IMHO I think the first option would be the best. ",
            "id": "comment-15110912"
        }
    ]
}