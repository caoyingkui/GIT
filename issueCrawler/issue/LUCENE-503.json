{
    "id": "LUCENE-503",
    "title": "Contrib: ThaiAnalyzer to enable Thai full-text search in Lucene",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "modules/analysis"
        ],
        "type": "New Feature",
        "fix_versions": [],
        "affect_versions": "1.4",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "Thai text don't have space between words. Usually, a dictionary-based algorithm is used to break string into words. For Lucene to be usable for Thai, an Analyzer that know how to break Thai words is needed.\n\nI've implemented such Analyzer, ThaiAnalyzer, using ICU4j DictionaryBasedBreakIterator for word breaking. I'll upload the code later.\n\nI'm normally a C++ programmer and very new to Java. Please review the code for any problem. One possible problem is that it requires ICU4j. I don't know whether this is OK.",
    "attachments": {
        "ThaiWordFilter.java": "https://issues.apache.org/jira/secure/attachment/12325227/ThaiWordFilter.java",
        "ThaiAnalyzer.java": "https://issues.apache.org/jira/secure/attachment/12325225/ThaiAnalyzer.java",
        "TestThaiAnalyzer.java": "https://issues.apache.org/jira/secure/attachment/12334718/TestThaiAnalyzer.java"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2006-04-12T12:18:12+0000",
            "content": "ThaiAnalyzer which simply return a TokenFilter chain with ThaiWordFilter in the middle ",
            "author": "Samphan Raruenrom",
            "id": "comment-12374132"
        },
        {
            "date": "2006-04-12T12:19:47+0000",
            "content": "ThaiWordFilter which use java.text.BreakIterator to break Thai words into tokens ",
            "author": "Samphan Raruenrom",
            "id": "comment-12374134"
        },
        {
            "date": "2006-04-12T13:15:14+0000",
            "content": "I've changed the code to use java.text.BreakIterator instead of ICU4j to remove the dependency on ICU4j. The ThaiAnayzer is tested intensively by several groups of developers in at least two production systems (by To-Be-One Technology, who support the development) so it is quite stable. The code is rather small cause I try to make it as efficient and easy to read as possible. It's tested in Lucece 1.4 and lately in Lucene 1.9.1. ",
            "author": "Samphan Raruenrom",
            "id": "comment-12374136"
        },
        {
            "date": "2006-04-29T16:50:56+0000",
            "content": "Thanks for your contribution. We're currently preparing Lucene 2.0 and as feature updates are only planned for the release after 2.0 it will take some more time to integrate this. \n\nTwo remarks:\n\n-It uses the english stop words, does that make sense?\n-Could you write some test cases, similar maybe to those for the French analyzer? ",
            "author": "Daniel Naber",
            "id": "comment-12377071"
        },
        {
            "date": "2006-05-01T10:48:17+0000",
            "content": "> -It uses the english stop words, does that make sense?\n\nYes. Thai usually mix English words in Thai text here and there. So English stop words should apply but this is arguable. I'll consull with the developer community.\n\n> -Could you write some test cases, similar maybe to those for the French analyzer? \n\nOK. I'm thinking of writing them. ",
            "author": "Samphan Raruenrom",
            "id": "comment-12377206"
        },
        {
            "date": "2006-05-29T16:38:46+0000",
            "content": "related projects/implementations:\n\n\nSansarnLook\nbased on Lucene, with additional ThaiAnalyzer\n  ref: http://sansarn.com/look/technique/ \n  file: http://sansarn.com/look/download/\n\n\nPichai Ongvasith's ThaiAnalyzer\n  ref: http://mail-archives.apache.org/mod_mbox/lucene-java-dev/200402.mbox/%3C20040218004604.61360.qmail@web41501.mail.yahoo.com%3E\n  file: http://pichai.netfirms.com/thai_analyzer.zip ",
            "author": "Arthit Suriyawongkul",
            "id": "comment-12413695"
        },
        {
            "date": "2006-05-30T11:36:28+0000",
            "content": "Add TestThaiAnalyzer junit test, modified from TestFrenchAnalyzer. The Thai words are picked so that changing the dictionary (or algorithm in JDK) should not affect the test. ",
            "author": "Samphan Raruenrom",
            "id": "comment-12413755"
        },
        {
            "date": "2006-05-30T11:50:40+0000",
            "content": "All the code have been tested with Lucene 2.0.0.\nThanks Art for the info/URL. I've never known about Pichai's work before I started this project. However I heard about NECTEC's SansarnLook when I visit them and talk about my ThaiAnalyzer. My goal for this job is for the code to be included in Lucene for Thai to work out-of-the-box. So no more wheel reinventing. ",
            "author": "Samphan Raruenrom",
            "id": "comment-12413756"
        },
        {
            "date": "2006-06-03T08:01:13+0000",
            "content": "I don't know anything about the Thai language ... but this code is clean, fairly easy to follow, and has tests that pass.\n\nIf no one (who knows something about Thai) sees anything wrong with this implimentation and objects i'll commit it sometime this weekend.\n ",
            "author": "Hoss Man",
            "id": "comment-12414548"
        },
        {
            "date": "2006-06-06T00:28:41+0000",
            "content": "commited ",
            "author": "Hoss Man",
            "id": "comment-12414797"
        }
    ]
}