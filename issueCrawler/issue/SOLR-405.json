{
    "id": "SOLR-405",
    "title": "Search additional fields when using DisMaxRequestHandler",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "search"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "We are heavily leaning towards using a few DisMaxRequestHandlers for searching instead of copy fields, but we ran into an issue.  Currently our sites use something like a copy field to search stories, but they also need to search additional fields (like story_source, which we don't want in the dismax).  With the DisMaxRequestHandler as it is, anything you have in the q param is searched for in the fields defined in the DisMaxRequestHandler.  We need a little more flexibility with this.\n\nAs an example, if you search for something like \"bush+AND+story_source:associated\", all the fields in the dismax are searched for 'bush' and 'story_source:associated'. (The story_source field is not in the dismax handler, and we don't want it to be.)  What we want to do is search the fields defined in the dismax for 'bush', but also query the story_source field (and only the story_source field) for 'associated'.\n\nWe came up with this small patch to let us do what we need, but wanted to throw it out there in case others were interested, or know of a better way to do this.  We're not entirely sure we did this in the right place and are hoping that  maybe someone can provide some insight on that as well.",
    "attachments": {
        "dismax_additional_fields.patch": "https://issues.apache.org/jira/secure/attachment/12368828/dismax_additional_fields.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Doug Steigerwald",
            "id": "comment-12539396",
            "date": "2007-11-01T15:48:41+0000",
            "content": "Small patch that modified the DisjunctionMaxQueryParser to allow the search of additional fields.\n\nAnything in the q param that has a specific field to search is just searched on that field, otherwise the DisMax query is created the same way.\n\nAlso making sure we can allow people to search for things like \"mailto:doug@...\". "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12539401",
            "date": "2007-11-01T16:13:50+0000",
            "content": "The specific example you give would best be accomplished by a filter.\nfq=story_source:associated\nThe only issue is if you wanted relevancy scores for these other parts included in the main score. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12551233",
            "date": "2007-12-13T06:21:28+0000",
            "content": "ditto yonik's comment.\n\nthis patch also violates the spirit of dismax, which is that user providing the \"q\" param shouldn't be expected to know what the field names of hte index are ... not to mention there are a probably a lot of fields you don't want the user able to \"accidently\" query against specificly.\n\nIf people like the idea of allowing stuff like this, a cleaner way would be to allow some dismax options for specifing a list of mapping of \"field aliases\" you want to advertise to your users and the real field names you want them to corrispond to (so you can tell users they can search for \"author:Bob\" but behind the scenes you search for author_text:Bob) then:\n   1) have the dismax handler register these \"aliases\" on the dismax parser (it already supports aliases, the current behavior comes from the fact that the default field is aliased to list of things in the \"qf\")\n   2) modify the partialEscape function to know about the list of aliases and don't escape any colon that appears after the name of a configured field alias. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12621045",
            "date": "2008-08-08T20:33:22+0000",
            "content": "Yonik is right, but I think it would still be nice to allow field:XXX + DisMax combinations and have the field:XXX influence relevancy score.\n\nHoss example seems to assume the searching is always done by people (hence the possible need to hide some fields).  But many times Solr is searched \"programmatically\" by other apps (while humans sleep), so there is no need to hide.\n\nNow that query parsers are pluggable, I wonder if we could have a custom QP that allows this... Doug? "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13611486",
            "date": "2013-03-23T00:39:41+0000",
            "content": "You can use edismax for this\n\nSPRING_CLEANING_2013 "
        }
    ]
}