{
    "id": "SOLR-12375",
    "title": "ScoreMode not always set correctly in Solr queries",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "search"
        ],
        "type": "Improvement",
        "fix_versions": [
            "7.4"
        ],
        "affect_versions": "5.1,                                            7.3.1",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "A query can be informed that scores are not needed based on it's context/use, and some queries are able to operate more efficiently if it knows this up-front.  This is about the ScoreMode enum.\n\nI reviewed the use of ScoreMode.COMPLETE in Solr and I think we should make the following changes:\n\nSolr filter queries (fq) are non-scoring.  SolrIndexSearcher.getProcessedFilter will pass ScoreMode.COMPLETE when it ought to be COMPLETE_NO_SCORES to createWeight.  This perf bug is only applicable when the filter query is not cached (either cache=false local-param or no filter cache).  This error was made in LUCENE-6220 (Solr 5.1); at that time it was a boolean.\n\nThe /export handler (more specifically ExportQParserPlugin) is also affected; it's COMPLETE when it should always be COMPLETE_NO_SCORES.  Also appears to be in error since Solr 5.1.\n\nSolrIndexSearcher.getDocListAndSetNC ought to use TOP_SCORES to track the top-score to be more correct but it's a distinction without a difference since MultiCollector.wrap with the DocSetCollector will combine it with COMPLETE_NO_SCORES to conclude the result is COMPLETE.",
    "attachments": {
        "SOLR-12375.patch": "https://issues.apache.org/jira/secure/attachment/12924148/SOLR-12375.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-05-18T16:39:53+0000",
            "content": "In addition, the ExpandComponent is affected.  The grouped docs were always operating with COMPLETE when it would be more appropriate to use COMPLETE_NO_SCORES if, for example, they are field ordered instead of score ordered.  The sub TopFieldCollector already initialized with \"false\" for trackDocScores (ExpandComponent line 538) ",
            "author": "David Smiley",
            "id": "comment-16480879"
        },
        {
            "date": "2018-05-18T19:10:57+0000",
            "content": "My only concern is RE ExpandComponent.  I didn't notice a test for detecting the score in the grouped docs.  Assuming it works now, we don't want it to go away with this patch.  If it does go away, I suspect the fix is more smartly determining the args to TopFieldCollector.create.  So I ought to add a little test for this and see what happens. ",
            "author": "David Smiley",
            "id": "comment-16481072"
        },
        {
            "date": "2018-05-23T19:32:05+0000",
            "content": "From a W.I.P. test for expanded docs they don't return the score today regardless of what I do in this patch. \u00a0I'll attach that to SOLR-12393.\n\nSo I'll commit the current patch\u00a0shortly. ",
            "author": "David Smiley",
            "id": "comment-16487908"
        },
        {
            "date": "2018-05-23T19:37:45+0000",
            "content": "Commit 53a3de3b98a5a06146a33251c176b7e4475270e4 in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=53a3de3 ]\n\nSOLR-12375: Optimize Lucene ScoreMode use:\n\n\tA non-cached filter query could be told incorrectly that scores were needed.\n\tThe /export (ExportQParserPlugin) would declare incorrectly that scores are needed.\n\tExpanded docs (expand component) could be told incorrectly that scores are needed.\n\n ",
            "author": "ASF subversion and git services",
            "id": "comment-16487924"
        },
        {
            "date": "2018-05-23T19:50:47+0000",
            "content": "Commit 11fb992abb3d209ab34a50956f2affe9626380b0 in lucene-solr's branch refs/heads/branch_7x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=11fb992 ]\n\nSOLR-12375: Optimize Lucene needsScore / ScoreMode use:\n\n\tA non-cached filter query could be told incorrectly that scores were needed.\n\tThe /export (ExportQParserPlugin) would declare incorrectly that scores are needed.\n\tExpanded docs (expand component) could be told incorrectly that scores are needed.\n\n\n\nnote: non-trivial changes back-ported; ScoreMode is in master; 7x has needsScore.\n\n(cherry picked from commit 53a3de3) ",
            "author": "ASF subversion and git services",
            "id": "comment-16487943"
        },
        {
            "date": "2018-05-29T21:19:24+0000",
            "content": "Commit 7355e26c0baeb720c88983eca9ff65fbf50311f8 in lucene-solr's branch refs/heads/branch_7x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7355e26 ]\n\nSOLR-12358: CHANGES.txt: fix accidentally removed reference to SOLR-12375 ",
            "author": "ASF subversion and git services",
            "id": "comment-16494291"
        }
    ]
}