{
    "id": "SOLR-10231",
    "title": "Cursor value always different for last page with sorting by a date based function using NOW",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "SearchComponents - other"
        ],
        "type": "Bug",
        "fix_versions": [
            "6.5"
        ],
        "affect_versions": "4.10.2",
        "resolution": "Information Provided",
        "status": "Closed"
    },
    "description": "Cursor based results fetching is a deal breaker for search performance.\nIt works extremely well when paging using sort by field(s).\n\nExample, that works (Id is unique field in the schema):\nQuery:\n\nhttp://solr-host:8983/solr/documents/select?q=*:*&fq=DocumentId:76581059&cursorMark=AoIGAAAAAC5TU1ItNzY1ODEwNTktMQ==&fl=DocumentId&sort=UserId+asc%2CId+desc&rows=1\n\n\nResponse:\n\n<response>\n<lst name=\"responseHeader\">\n<int name=\"status\">0</int>\n<int name=\"QTime\">4</int>\n<lst name=\"params\">\n<str name=\"q\">*:*</str>\n<str name=\"fl\">DocumentId</str>\n<str name=\"cursorMark\">AoIGAAAAAC5TU1ItNzY1ODEwNTktMQ==</str>\n<str name=\"fq\">DocumentId:76581059</str>\n<str name=\"sort\">UserId asc,Id desc</str>\n<str name=\"rows\">1</str>\n</lst>\n</lst>\n<result name=\"response\" numFound=\"1\" start=\"0\"/>\n<str name=\"nextCursorMark\">AoIGAAAAAC5TU1ItNzY1ODEwNTktMQ==</str>\n</response>\n\n\n\nnextCursorMark equals to cursorMark and so we know this is last page.\n\nHowever, sorting by function behaves differently:\nQuery:\n\nhttp://solr-host:8983/solr/documents/select?rows=1&q=*:*&fq=DocumentId:76581059&cursorMark=AoIFQf9yCCAAAAAuU1NSLTc2NTgxMDU5LTE=&fl=DocumentId&sort=min(ms(NOW,DynamicDateField_1),ms(NOW,DynamicDateField_12),ms(NOW,DynamicDateField_3),ms(NOW,DynamicDateField_5))%20asc,Id%20desc\n\n\nResponse:\n\n<response>\n<lst name=\"responseHeader\">\n<int name=\"status\">0</int>\n<int name=\"QTime\">6</int>\n<lst name=\"params\">\n<str name=\"q\">*:*</str>\n<str name=\"fl\">DocumentId</str>\n<str name=\"cursorMark\">AoIFQf9yCCAAAAAuU1NSLTc2NTgxMDU5LTE=</str>\n<str name=\"fq\">DocumentId:76581059</str>\n<str name=\"sort\">\nmin(ms(NOW,DynamicDateField_1),ms(NOW,DynamicDateField_12),ms(NOW,DynamicDateField_3),ms(NOW,DynamicDateField_5)) asc,Id desc\n</str>\n<str name=\"rows\">1</str>\n</lst>\n</lst>\n<result name=\"response\" numFound=\"1\" start=\"0\">\n<doc>\n<str name=\"DocumentId\">76581059</str>\n</doc>\n</result>\n<str name=\"nextCursorMark\">AoIFQf9yFyAAAAAuU1NSLTc2NTgxMDU5LTE=</str>\n</response>\n\n\n\nnextCursorMark does not equal to cursorMark, which suggests there are more results. Which is not true (numFound=1). And so the client goes into infinite loop.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-03-08T19:37:29+0000",
            "content": "this isn't a general problem with sorting by function, the problem is specific to sorting by a date based function that involves the NOW constant.\n\n The problem is that every time this function is computed for a document, the value can change \u2013 so when requests asks for everything with a cursor value \"after\" the computed value of the last doc on the previous request, you're getting overlap with some existing documents \u2013 and ultimately the cursor never ends, because the \"last\" doc constantly computes a sort value that comes \"after\" the sort value it computed the \"last\" time the request was made.\n\n(what's happening is essentially the same as what you would see if, between every request for the \"next\" page of the cursor using \"sort=counter+asc\", someone did an atomic update on the doc to inc counter ... but in this case the counter increase is just happening because time elapses)\n\n\n\nThe best work around I can suggest would be to to include a fixed value for the NOW param in any requests involving sorting by date math \u2013 that way the computed sort values will be consistent across all the subsequent requests.\n\n(Perhaps the NOW value should also be encoded into the cursor values so this happens automatically under the covers? ... not sure if that's a good idea in general, would need to think about it more) ",
            "author": "Hoss Man",
            "id": "comment-15901855"
        },
        {
            "date": "2017-03-13T14:14:03+0000",
            "content": "Hoss Man thanks for clarifying and suggestions. Going to test the fixed timestamp value for the NOW param. In the meantime we falled back to non-cursor pagination method. Btw, would the same issue exist in 6.x? ",
            "author": "Dmitry Kan",
            "id": "comment-15907528"
        },
        {
            "date": "2017-03-14T00:35:43+0000",
            "content": "Btw, would the same issue exist in 6.x?\n\nyeah, there's nothing version specific happening here \u2013 it's just the nature of the way cursors work.  Sorting by a NOW relative function like this, where the result for each doc changes every time you send a request, is just like sorting on a field that you constantly update for every doc in between every request.\n\n(Perhaps the NOW value should also be encoded into the cursor values so this happens automatically under the covers? ... not sure if that's a good idea in general, would need to think about it more)\n\nThe more i think about it, the more convinced i am this wouldn't be a good idea \u2013 because it would complicate usescases where people want filter queries that involve \"NOW\" that they do want/expect to change in subsequent requests as they walk cursor \u2013 ie: an fq=expiresAt:[\\NOW TO *] that should use a NOW that represents the actual moment the request is made, even if they've been tailing a cursor (with a sort that might not even involve expiresAt) continuously \n\nI've added a note about sorts (implicitly) involving NOW to the docs on cursors...\n\nhttps://cwiki.apache.org/confluence/pages/diffpagesbyversion.action?pageId=38572235&selectedPageVersions=28&selectedPageVersions=29 ",
            "author": "Hoss Man",
            "id": "comment-15923312"
        },
        {
            "date": "2017-03-14T00:36:47+0000",
            "content": "marking as resolved since I think documentation is really the only correct fix for this situation. ",
            "author": "Hoss Man",
            "id": "comment-15923315"
        }
    ]
}