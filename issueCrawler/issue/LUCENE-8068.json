{
    "id": "LUCENE-8068",
    "title": "Allow IndexWriter to write a single DWPT to disk",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Improvement",
        "components": [],
        "fix_versions": [
            "7.2",
            "master (8.0)"
        ]
    },
    "description": "Today we IW can only flush a DWPT to disk if an external resource calls flush()  or refreshes a NRT reader or if a DWPT is selected as flush pending. Yet, the latter has the problem that it always ties up an indexing thread and if flush / NRT refresh is called a whole bunch of indexing threads is tied up. If IW could offer a simple `flushNextBuffer()` method that synchronously flushes the next pending or biggest active buffer to disk memory could be controlled in a more fine granular fashion from outside of the IW. This is for instance useful if more than one IW (shards) must be maintained in a single JVM / system.",
    "attachments": {
        "LUCENE-8068.patch": "https://issues.apache.org/jira/secure/attachment/12899495/LUCENE-8068.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16267614",
            "date": "2017-11-27T21:40:22+0000",
            "content": "here is an initial patch ",
            "author": "Simon Willnauer"
        },
        {
            "id": "comment-16268469",
            "date": "2017-11-28T09:49:41+0000",
            "content": "added some more javadocs and shared more code in `DocumentsWriterFlushControl` Michael McCandless can you take a look a this? ",
            "author": "Simon Willnauer"
        },
        {
            "id": "comment-16268666",
            "date": "2017-11-28T12:38:02+0000",
            "content": "This is a really nice idea!  It gives more granular control over moving IW's RAM buffer to disk, and lets other threads (than the indexing threads) participate in flushing.\n\nCan you mark the new method as @lucene.experimental?\n\nThere's no guarantee it flushes that largest (most heap consuming) DWPT right?  I think that's fine.  It looks like it first tries to find any DWPT already marked for flush, and failing that, it then finds the largest one.\n\nWhat if the largest one is currently still indexing a document (via another thread)?  Do we wait (on the lock call) for that one document to finish?  Or are we only iterating over DWPTs not currently indexing a document?  But then is there a starvation risk?\n\nIs there a (small) concurrency risk that a flush (via another thread) is called right after you first asked for next pending DWPT, got null, then tried to find the largest non-pending DWPT, but the concurrent flush has now marked them all pending?  I think it's fine if so; maybe explain in the javadocs that this is just \"best effort\"?\n\nShould the new method maybe return a boolean indicating whether it actually wrote a segment?\n\nMaybe instead of using \"documents writer per thread\" and \"writer per thread buffer\" in the javadocs, just refer to them as the per-thread in memory segments?\n\nSmall typo here (\"non\" -> \"none\"):\n\n\n+   * Returns the largest non-pending flushable DWPT or <code>null</code> if there is non.\n\n\n\nMaybe assert that freeList.remove returned true here?\n\n\n+  ThreadState getAndLock(ThreadState state) {\n+    synchronized (this) {\n+      freeList.remove(state);\n+    }\n+    state.lock();\n+    return state;\n+  }\n+\n\n ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-16268785",
            "date": "2017-11-28T14:12:29+0000",
            "content": "thanks Michael McCandless I applied your feedback and simplified the locking part in the DWPTThreadPool. can you take another look ",
            "author": "Simon Willnauer"
        },
        {
            "id": "comment-16271084",
            "date": "2017-11-29T16:54:04+0000",
            "content": "+1, new patch looks great, except still has \"non\" typo  ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-16271430",
            "date": "2017-11-29T19:43:20+0000",
            "content": "new patch with fixed typo and a changes entry. I will commit this later today or tomorrow unless anybody objects. ",
            "author": "Simon Willnauer"
        },
        {
            "id": "comment-16273060",
            "date": "2017-11-30T17:58:19+0000",
            "content": "Commit 01d12777c4bcab7ae8085d5ed5e1b20a0e1a5526 in lucene-solr's branch refs/heads/master from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=01d1277 ]\n\nLUCENE-8068: Allow IndexWriter to write a single DWPT to disk\n\nAdds a `flushNextBuffer` method to IndexWriter that allows the caller to\nsynchronously move the next pending or the biggest non-pending index buffer to\ndisk. This enables flushing selected buffer to disk without highjacking an\nindexing thread. This is for instance useful if more than one IW (shards) must\nbe maintained in a single JVM / system. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16273069",
            "date": "2017-11-30T17:59:55+0000",
            "content": "Commit 53c185aa35fa5fbb6d73e4bc0cc56e0fd0da0b33 in lucene-solr's branch refs/heads/branch_7x from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=53c185a ]\n\nLUCENE-8068: Allow IndexWriter to write a single DWPT to disk\n\nAdds a `flushNextBuffer` method to IndexWriter that allows the caller to\nsynchronously move the next pending or the biggest non-pending index buffer to\ndisk. This enables flushing selected buffer to disk without highjacking an\nindexing thread. This is for instance useful if more than one IW (shards) must\nbe maintained in a single JVM / system. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16274462",
            "date": "2017-12-01T14:37:46+0000",
            "content": "Commit 832a975bc4aaa12f7f96443bd1b2b4b6be65a48c in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=832a975 ]\n\nLUCENE-8068: remove now-unused import\n\n(to fix 'ant precommit' failing) ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16274485",
            "date": "2017-12-01T14:56:31+0000",
            "content": "Commit d2554218c711bccd4b8a56b4d18b64a8f691c170 in lucene-solr's branch refs/heads/branch_7x from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d255421 ]\n\nLUCENE-8068: remove now-unused import\n\n(to fix 'ant precommit' failing) ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16279441",
            "date": "2017-12-06T00:34:49+0000",
            "content": "TestTopFieldCollectorEarlyTermination.testEarlyTermination() has been failing reproducibly since commit 01d12777 under this issue.  See LUCENE-8079. ",
            "author": "Steve Rowe"
        }
    ]
}