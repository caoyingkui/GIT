{
    "id": "LUCENE-2586",
    "title": "move intblock/sep codecs into test",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/index"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "The intblock and sep codecs in core exist to make it easy for people to try different low-level algos for encoding ints.\n\nSep breaks docs, freqs, pos, skip data, payloads into 5 separate files (vs 2 files that standard codec uses).\n\nIntblock further enables the docs, freqs, pos files to encode fixed-sized blocks of ints at a time.\n\nSo an app can easily \"subclass\" these codecs, using their own int encoder.\n\nBut these codecs are now concrete, and they use dummy low-level block int encoder (eg encoding 128 ints as separate vints).\n\nI'd like to change these to be abstract, and move these dummy codecs into test.\n\nThe tests would still test these dummy codecs, by rotating them in randomly for all tests.\n\nI'd also like to rename IntBlock -> FixedIntBlock, because I'm trying to get a VariableIntBlock working well (for int encoders like Simple9, Simple16, whose block size varies depending on the particular values).",
    "attachments": {
        "LUCENE-2586.patch": "https://issues.apache.org/jira/secure/attachment/12451160/LUCENE-2586.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2010-08-03T20:59:50+0000",
            "content": "Attached patch.\n\nIt can't be applied because it's a bunch of svn mv's...\n\nBut the gist is that intblock/sep in core are now \"abstract\", moved into test as \"MockFixedIntBlock\" and \"MockSep\". ",
            "author": "Michael McCandless",
            "id": "comment-12895038"
        },
        {
            "date": "2010-09-24T09:24:31+0000",
            "content": "Forgot to resolve this... ",
            "author": "Michael McCandless",
            "id": "comment-12914387"
        }
    ]
}