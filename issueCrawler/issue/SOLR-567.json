{
    "id": "SOLR-567",
    "title": "SolrCore Pluggable",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "SolrCore needs to be an abstract class with the existing functionality in a subclass.  SolrIndexSearcher the same.  It seems that most of the Searcher methods in SolrIndexSearcher are not used.  The new abstract class need only have the methods used by the other Solr classes.  This will allow other indexing and search implementations to reuse the other parts of Solr.  Any other classes that have functionality specific to the Solr implementation of indexing and replication such as SolrConfig can be made abstract.",
    "attachments": {
        "solr-567.patch": "https://issues.apache.org/jira/secure/attachment/12382262/solr-567.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Ryan McKinley",
            "id": "comment-12595406",
            "date": "2008-05-08T21:46:31+0000",
            "content": "I take it this is related to SOLR-564?  (oceansearch looks good BTW \u2013 in particular:  TagIndex)  \n\nIs this a general request, or do you have something concrete in mind? "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12595408",
            "date": "2008-05-08T21:58:08+0000",
            "content": "I figured someone on the core team should implement given the impact on the rest of the code base.  "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12595580",
            "date": "2008-05-09T12:37:54+0000",
            "content": "IndexSchema needs references to SolrConfig removed.  Like:\n\npublic IndexSchema(SolrConfig solrConfig, String name, InputStream is) {\n\nand \n\nSolrConfig.severeErrors.add( e ); "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12595845",
            "date": "2008-05-10T18:20:43+0000",
            "content": "solr.567.5.10.2008.patch\n\nHere's a rough patch of the changes.  SolrIndexSearcher becomes SolrIndexSearcherImpl.  It looks like most of SolrCore can remain mostly the same and be inherited from.  SolrIndexSearcher is an abstract class implementing methods the rest of the system uses.  \n\norg.apache.solr.search.SolrIndexSearcher.initRegenerators should move and not static.\n\nThe CacheRegenerator is a problem because it uses SolrCache which other Searcher implementations may not use and may implement a different cache system.\n\nIs UpdateHandler being deprecated?   "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12595909",
            "date": "2008-05-11T13:21:40+0000",
            "content": "solr.567.5.11.2008.patch\n\nNeeded to abstract SolrCore, old one became SolrCoreImpl.  SolrConfig needs to be abstracted somehow.   "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12595933",
            "date": "2008-05-11T18:35:19+0000",
            "content": "Forgot to mention about a couple of new classes inside SolrCore.  This helps separate them from SolrConfig.  Files such as the config and schema can be loaded from the network. \n\n\n \npublic static abstract class FileLoader {\n    public abstract InputStream open(String resource);\n  }\n  \n  public static abstract class ClassInstantiator {\n    public abstract Class findClass(String cname, String... subpackages);\n    \n    public abstract Object newInstance(String cname, String ... subpackages);\n  }\n\n  "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12597736",
            "date": "2008-05-17T14:56:00+0000",
            "content": "solr.567.5.17.2008.patch \n\nIn the interest of minimizing impact on the existing code base, the patch consists of a few things changed from private and the addition of classname attribute to coredescriptor and multicore dynamically loading the class.  This allows alternate SolrCore implementations to be defined.  \n "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12597776",
            "date": "2008-05-18T02:35:34+0000",
            "content": "Jason, if you keep the same name for the patch, JIRA will automatically \"gray out\" the old ones.  Common practice is name patches after the issue, e.g. SOLR-567.patch. "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12597799",
            "date": "2008-05-18T11:35:10+0000",
            "content": "solr-567.patch\n\nMoved defining the solrcoreclass to config.  SolrDispatchFilter and MultiCore construct SolrCore using reflection.   "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12598311",
            "date": "2008-05-20T14:46:39+0000",
            "content": "solr-567.patch\n\nMoved SimpleFacets.getFieldCacheCounts to SolrIndexSearcher to allow an alternate SolrCore to use a different implementation due to direct top level field cache access. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12628541",
            "date": "2008-09-05T04:00:02+0000",
            "content": "The code has changed drastically since the last patch is cut. It will be useful if we have a patch in sync with the trunk "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12628613",
            "date": "2008-09-05T10:57:33+0000",
            "content": "Without looking at the code, what has changed? "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12628624",
            "date": "2008-09-05T12:53:31+0000",
            "content": "As a general approach , A pluggable SolrCore does not look like a very good idea. Too many components depend on too many methods on SolrCore. So ,you will have to  support all/most of them to be compatible .\n\nCorrrect me if I am wrong. You may only wish to plugin a IndexSearcher and and IndexWriter. If we make the SolrIndexSearcher and SolrIndexWriter pluggable ,that can be easier "
        },
        {
            "author": "Jason Rutherglen",
            "id": "comment-12985993",
            "date": "2011-01-24T21:12:15+0000",
            "content": "Sorry if this spam's things, however it's unlikely that I'll work on these. "
        }
    ]
}