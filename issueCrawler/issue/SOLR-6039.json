{
    "id": "SOLR-6039",
    "title": "debug=track causes debug=query info to be suppressed when no results found",
    "details": {
        "affect_versions": "4.7",
        "status": "Resolved",
        "fix_versions": [
            "4.8.1",
            "4.9",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Shamik Bandopadhyay noted on the mailing list that debugQuery=true wasn't returning info about how the query was being parsed in SolrCloud.\n\nSteps to reproduce...\n\n\n\tstartup a simple 2 shard solr cluster using the example configs\n\tLoad this URL:\n\t\n\t\thttp://localhost:8983/solr/select?q=Foo&debug=query\n\t\tnote that the debug=query causes a debug block including \"parsedquery\" showing \"title:foo\"\n\t\n\t\n\tLoad either of these URLs:\n\t\n\t\thttp://localhost:8983/solr/select?q=Foo&debug=query&debug=track\n\t\thttp://localhost:8983/solr/select?q=Foo&debugQuery=true (legacy short hand option for enabling all debug options)\n\t\tNote that the debug block exists, but only includes the distributed \"track\" options - the query parsing debugging info is not available\n\t\n\t\n\tindex the sample data (java -jar post.jar *.xml)\n\tLoad either of these URLs:\n\t\n\t\thttp://localhost:8983/solr/select?q=Solr&debugQuery=true&fl=id\n\t\thttp://localhost:8983/solr/select?q=Solr&debug=query&debug=track&fl=id\n\t\tNote that now we have at least one matching doc, and the parsedquery info is included in the debug block along with the tracking info\n\t\n\t\n\tLoad either of these URLs:\n\t\n\t\thttp://localhost:8983/solr/select?q=Solr&debug=query&debug=track&rows=0\n\t\thttp://localhost:8983/solr/select?q=Solr&debug=query&debug=track&rows=0\n\t\tNote: even though we have a matching doc, since rows=0 prevents it from being returned, the parsedquery debug info again no longer works - just the track debug info\n\t\n\t\n\n\n\n\n\nThe work around, for people who want don't care about the newer \"debug tracking\" and what the same debug information as pre-4.7, is to enumerate the debug options (ie: debug=query&debug=timing&debug=results) instead of relying on the shorthand: debugQuery=true",
    "attachments": {
        "SOLR-6039.patch": "https://issues.apache.org/jira/secure/attachment/12642978/SOLR-6039.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Shawn Heisey",
            "id": "comment-13987159",
            "date": "2014-05-01T23:18:50+0000",
            "content": "I had noticed this with a non-cloud distributed search on Solr 4.7.  It was causing problems when trying to figure out why a search wasn't returning results.  I sent the query directly to a shard to get the info, and put the problem in the mental category of \"Report it later when there's time.\" "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-13987237",
            "date": "2014-05-02T01:11:29+0000",
            "content": "I'm looking into this issue. This patch would fix the problem described in the users list with the query explain, but not yet the with the timing. \nI kind of see where the timing issue is too, but I'm wondering if this is expected. Seems like the timing info should be merged in DebugComponent.finishStage(...), but as it is now, it would only consider the time spent in the phases with GET_DEBUG purpose. This purpose is only included in in the GET_FIELDS phase, we would not be considering time in parts of the request?\nIn addition, once it gets the timing information from the shards it adds it. I think it would be better if it get the max value instead? after all, the time in each phase will be the time the slowest shard took, right? "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-13987923",
            "date": "2014-05-02T17:12:38+0000",
            "content": "This patch adds the timing info in all phases. The times responded by shards are still being added "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13988325",
            "date": "2014-05-02T22:05:40+0000",
            "content": "This patch adds the timing info in all phases. The times responded by shards are still being added\n\nYeah ... i think for now it makes sense to just \"fix\" the bug relating ot wether the info comes back - but leave the definition the same as it's been and leave the question for wether the timing info should be \"merged\" differnetly for another issue (i can see different advantages to both sum vs max)\n\nI didnt' fully understand the changes you made when skimming your patch \u2013 but i did understand your test, and it looks good & fairly ccomprehensive and fills me with confidence that the fix is correct.  One thing i thing i noticed was still missing though is some testing of picking multiple options (ie: \"debug=query&debug=timing\") so i've added a randomized testing method that accounts for that case 9among other things)\n\n "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-13988329",
            "date": "2014-05-02T22:10:37+0000",
            "content": "i think for now it makes sense to just \"fix\" the bug relating ot wether the info comes back \nI agree now. When I started to think how to use max vs sum in some situations I saw the changes were not trivial, better to leave that for a different Jira. \n\nI was about to upload a new patch with some more changes and tests, please give me some time until I merge with your changes before committing. "
        },
        {
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-13988391",
            "date": "2014-05-02T23:01:42+0000",
            "content": "I didnt' fully understand the changes you made when skimming your patch\nBesides adding the query section when there are no \"GET_DEBUG_PURPOSE\" requests (that it's on on the GET_FIELDS phase), one thing that changes with the patch is that the shard requests for all phases will require \"debug=timing\" if timing is needed. Then after the final phase those times are added. \nBefore this change, the timing section didn't come back on queries with no docs (this is I think a previous than SOLR-5399), now it does. \nAnother implication with this change is that all shard requests will be considered, and not only the last phase (will now show higher times). As I say before, the times for all shard responses are being added, and because many of those requests are sent in parallel, this means that the timing displayed may be higher than the clock time of the request. I think this is useful information anyway and should be considered more as a metric of how much each component is taking in all the request.  "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13989841",
            "date": "2014-05-05T18:54:10+0000",
            "content": "Commit 1592605 from hossman@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1592605 ]\n\nSOLR-6039: fixed debug output when no results in response "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13989849",
            "date": "2014-05-05T18:58:47+0000",
            "content": "Commit 1592609 from hossman@apache.org in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1592609 ]\n\nSOLR-6039: fixed debug output when no results in response (merge r1592605) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13989850",
            "date": "2014-05-05T19:00:36+0000",
            "content": "thanks Tomas\n\nI'll let jenkins hammer this for a day or so and then look into back-porting for 4.8.1 "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13990916",
            "date": "2014-05-06T18:11:31+0000",
            "content": "Commit 1592821 from hossman@apache.org in branch 'dev/branches/lucene_solr_4_8'\n[ https://svn.apache.org/r1592821 ]\n\nMerge back several \"low hanging\" bug fixes into the 4.8 branch...\nSOLR-6029: r1590867\nSOLR-6030: r1591555\nSOLR-6037: r1591800\nSOLR-6023: r1592195\nSOLR-5090: r1592591\nSOLR-6039: r1592605\nSOLR-5993: r1588415\nSOLR-5904: r1587702 "
        }
    ]
}