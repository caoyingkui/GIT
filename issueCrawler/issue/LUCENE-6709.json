{
    "id": "LUCENE-6709",
    "title": "Add RandomAccessOrds support to UninvertedReader's SortedSetDocValues impl (DocTermOrds.Iterator)",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Open",
        "type": "Improvement"
    },
    "description": "UninvertedReader's SortedSetDocValues impl doesn't implement the RandomAccessOrds API, so it can't be used with SortedSetSelector.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14648077",
            "author": "Hoss Man",
            "date": "2015-07-30T18:27:11+0000",
            "content": "NOTE: I have no idea if/how feasible this is, i mainly just wanted to file it as an open issue for linking as a blocker to some other issues. "
        },
        {
            "id": "comment-16516010",
            "author": "Erick Erickson",
            "date": "2018-06-18T16:55:09+0000",
            "content": "Hoss ManThese tests haven't failed since early April, should they still be AwaitsFix? "
        },
        {
            "id": "comment-16516062",
            "author": "Hoss Man",
            "date": "2018-06-18T17:35:27+0000",
            "content": "I don't understand your question...\n\n\tthe tests that i know of that mention LUCENE-6709 are Solr tests marked AwaitsFix - not BadApple, so they aren't run by any jenkins job that i know of (even on the BadApple jenkins job results they are listed as \"skipped\")\n\twhen i try to run some of them manually with something like ant test -Dtests.awaitsfix=true -Dtestcase=TestMinMaxOnMultiValuedField -Dtests.method=testIntFieldCache i do in fact see failures depending on the randomization of points vs trie fields\n\t\n\t\tthis limitation that UninvertedReader's SortedSetDocValues doesn't work with SortedSetSelector doesn't affect Points fields since they don't use SortedSetDocValues\n\t\tyou can force it to fail everytime w/something like this: ant test -Dtests.awaitsfix=true -Dtestcase=TestMinMaxOnMultiValuedField -Dtests.method=testIntFieldCache -Dsolr.tests.use.numeric.points=false\n\t\n\t\n\teven if the underlying functionality requested in LUCENE-6709 had been added/fixed to UninvertedReader w/o updating those tests, they still wouldn''t start automatically working, since the Affected solr field types have explicit error checks that would prevent that could from being usable until they were removed...\n\n$ grep -A 5 LUCENE-6709 ./src/java/org/apache/solr/schema/TrieField.java\n    // See LUCENE-6709\n    if (! field.hasDocValues()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                              \"docValues='true' is required to select '\" + choice.toString() +\n                              \"' value from multivalued field (\"+ field.getName() +\") at query time\");\n    }\n\n\n\n "
        },
        {
            "id": "comment-16516074",
            "author": "Erick Erickson",
            "date": "2018-06-18T17:44:01+0000",
            "content": "OK, my mistake. Somehow I thought AwaitsFix were run too. Ignore me.\n\nSorry for the noise. "
        },
        {
            "id": "comment-16517053",
            "author": "David Smiley",
            "date": "2018-06-19T13:10:12+0000",
            "content": "Out of curiosity I looked closer here. \u00a0This issue ought to be re-titled because, for one thing, RandomAccessOrds doesn't exist anymore as of LUCENE-7407 (Lucene 7.0). \u00a0SortedSetSelector used to demand that the input sortedSet implement RandomAccessOrds but the current code has no equivalent constraint. \u00a0This suggests maybe things will \"just work\" if perhaps the the check in TrieField that Hoss pointed out were removed. \u00a0Indeed, I did that and the test Hoss said which used to fail now passes. "
        }
    ]
}