{
    "id": "LUCENE-1973",
    "title": "Remove deprecated query components",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/search"
        ],
        "type": "Task",
        "fix_versions": [
            "3.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Remove the rest of the deprecated query components.",
    "attachments": {
        "LUCENE-1973-BoostingTermQuery.patch": "https://issues.apache.org/jira/secure/attachment/12423012/LUCENE-1973-BoostingTermQuery.patch",
        "LUCENE-1973-Similarity.patch": "https://issues.apache.org/jira/secure/attachment/12423008/LUCENE-1973-Similarity.patch",
        "LUCENE-1973-MultiValueSource-BW.patch": "https://issues.apache.org/jira/secure/attachment/12424517/LUCENE-1973-MultiValueSource-BW.patch",
        "LUCENE-1973-Similarity-BW.patch": "https://issues.apache.org/jira/secure/attachment/12423009/LUCENE-1973-Similarity-BW.patch",
        "LUCENE-1973-MultiValueSource.patch": "https://issues.apache.org/jira/secure/attachment/12424516/LUCENE-1973-MultiValueSource.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-10-13T14:41:21+0000",
            "content": "There are still some of them:\n\n\texplain() in Scorer (I do not know what to do exactly here, I use explain() very seldom) -> (DONE, see LUCENE-2011)\n\tidf() in Similarity (DONE)\n\tIndexSearcher.fieldSortDoTrackScores / IS.fieldSortDoMaxScore (DONE by un-deprecation, thanks Mike!)\n\tBoostingTermQuery (DONE)\n\tMultiValueSource (DONE)\n\tBooleanQuery scoreDocOutOfOrder & others (LUCENE-944) (DONE)\n\n\n\nFixed all. ",
            "author": "Uwe Schindler",
            "id": "comment-12765093"
        },
        {
            "date": "2009-10-22T12:34:37+0000",
            "content": "Anybody wants to help? ",
            "author": "Uwe Schindler",
            "id": "comment-12768661"
        },
        {
            "date": "2009-10-23T10:05:31+0000",
            "content": "Here patch on removal of Similarity deprecations. One more occurence of my famous MethodSupport dies  \n\nDo not wonder about the assertTrue() -> assertEquals() changes in TestSimilarity, but I had a problem at the beginning to find out why the score() was not 1.0 for the PhraseQuery (I just removed the collection idf() method from the SimpleSimilarity, but had to reimplement is using Eplanations()). And this both in BW branch and trunk.\n\nWill commit soon when all tests have been run. ",
            "author": "Uwe Schindler",
            "id": "comment-12769161"
        },
        {
            "date": "2009-10-23T10:26:51+0000",
            "content": "Updated patch, I forgot the test for PayloadNearQuery, which also had a custom Similarity. ",
            "author": "Uwe Schindler",
            "id": "comment-12769166"
        },
        {
            "date": "2009-10-23T11:26:41+0000",
            "content": "Committed similarity changes in revision: 829002 ",
            "author": "Uwe Schindler",
            "id": "comment-12769182"
        },
        {
            "date": "2009-10-23T11:29:33+0000",
            "content": "Here my committed patch, I only added one more SimpleSimilarity implementation in TestOmitTf ",
            "author": "Uwe Schindler",
            "id": "comment-12769183"
        },
        {
            "date": "2009-10-23T12:18:48+0000",
            "content": "remove BoostingTermQuery.\n\nThe xml-query-parser now creates a PayloadTermQuery with the default payload function. ",
            "author": "Uwe Schindler",
            "id": "comment-12769191"
        },
        {
            "date": "2009-10-23T12:22:36+0000",
            "content": "Committed removal of BoostingTermQuery in revision: 829020 ",
            "author": "Uwe Schindler",
            "id": "comment-12769194"
        },
        {
            "date": "2009-10-26T15:07:33+0000",
            "content": "I looked into the following:\n\nIndexSearcher.fieldSortDoTrackScores / IndexSearcher.fieldSortDoMaxScore and into the following deprecated method:\n\nIndexSearcher.setDefaultFieldSortScoring(boolean doTrackScores, boolean doMaxScore) // (non-static)\n\n\n\nIn my opinion, this is a good setting in IndexSearcher to enable the scores tracking for sorted queries, too. Without this setting, one have to craete the TopFieldDocCollector manually, what we not really want the user to do (because the static ctor params are source of confusion). If I had known the method before, I would use it in my IndexSearcher and set it to true, if needed. It is a per instance setting, so it is no static hell affected (like anywhere else).\n\nShould we simply document it correct and un-deprecate in 2.9? It makes life easier.\n\n+1 from my side. ",
            "author": "Uwe Schindler",
            "id": "comment-12770050"
        },
        {
            "date": "2009-10-26T17:00:22+0000",
            "content": "Should we simply document it correct and un-deprecate in 2.9? It makes life easier.\n\n+1, I think this makes sense. ",
            "author": "Michael McCandless",
            "id": "comment-12770091"
        },
        {
            "date": "2009-10-26T17:05:35+0000",
            "content": "Can you do it? You are the RM.\n\nA short documentation and CHANGES entry should be added. Something like: \"If you want to have scores or maxScore for sorted results, you should use setDefaultFieldSortScoring(). Otherwise you have to create TopFieldCollector yourself, which is not recommended.\"\n\nWe can then remove the item from the TODO for this issue (and also un-deprecate it in trunk). ",
            "author": "Uwe Schindler",
            "id": "comment-12770093"
        },
        {
            "date": "2009-10-26T17:12:59+0000",
            "content": "OK will do. ",
            "author": "Michael McCandless",
            "id": "comment-12770096"
        },
        {
            "date": "2009-10-26T18:14:46+0000",
            "content": "Now it gets simplier. These are the remaining deprecations in core, as far as I know.\n\nI would keep MultiValueSource but the explain thing is more work, but hat this time nothing to do with 2.9.1 \n\nedit\n\nI verified, these are really the remaining deprecations-to-remove in core. You will find more of them, but they are needed for index compatibility and must stay until 3.9 or are simply markers for other things to remove some time (non-public methods or fields).\n\nSo we are close to 3.0 release  ",
            "author": "Uwe Schindler",
            "id": "comment-12770114"
        },
        {
            "date": "2009-10-27T22:33:37+0000",
            "content": "Now only MultiValueSource remains. Remove? Or keep for users not able to do per-segment searches? ",
            "author": "Uwe Schindler",
            "id": "comment-12770684"
        },
        {
            "date": "2009-11-10T22:15:37+0000",
            "content": "The last deprecation in search package. If somebody thinks, we still need MultiValueSource (even TestOrdValues pass without them), please tell me. I do not exactly know the reason for this newly-deprecated class in 2.9. Hoss? Mark? Who did the FieldCacheSanity checker?\n\nI will commit this tomorrow morning GMT. ",
            "author": "Uwe Schindler",
            "id": "comment-12776108"
        },
        {
            "date": "2009-11-10T23:29:21+0000",
            "content": "Fix also JavaDocs. ",
            "author": "Uwe Schindler",
            "id": "comment-12776167"
        },
        {
            "date": "2009-11-11T09:15:35+0000",
            "content": "Committed MultiValueSource removal in revision: 834812\n\nNow we are finished with deprec removal in core. I'll check again... - Found one more  ",
            "author": "Uwe Schindler",
            "id": "comment-12776382"
        }
    ]
}