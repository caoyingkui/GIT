{
    "id": "SOLR-1933",
    "title": "improve solr indenting",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "3.1"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Improve the uniformity and scale of solr indenting (solr only supported 7 levels of indenting previously)",
    "attachments": {
        "SOLR-1933.patch": "https://issues.apache.org/jira/secure/attachment/12445846/SOLR-1933.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-12873286",
            "date": "2010-05-29T14:15:44+0000",
            "content": "Background: the very first versions of Solr always indented... and hence only supported indenting up to 7 levels, and was very frugal in it's use of bandwidth (most indenting levels consisted of just 2 characters in total, not including the newline).  It did this through a mix of tabs and spaces, which lead to varying width for each indentation level.\n\n\n private static final String[] indentArr = new String[] {\n    \"\\n\",\n    \"\\n \",\n    \"\\n  \",\n    \"\\n\\t\",\n    \"\\n\\t \",\n    \"\\n\\t  \",  // could skip this one (the only 3 char seq)\n    \"\\n\\t\\t\" };\n\n\n\nGiven that there is now an intent=true/false parameter that defaults to false (this has been there since Solr was open-sourced), we should perhaps improve the indenting at the cost of bandwidth. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12873288",
            "date": "2010-05-29T14:24:54+0000",
            "content": "Here's a quick patch that supports 2 space indents up to 20 levels.\n\nAnd before anyone asks... I don't think we should make it configurable (beyond turning on/off).  It would be extra complexity + params to check for every request, with very very little to gain.\n\nAny concerns?  I don't believe anyone would be using indent=on for high volume queries in production. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12873303",
            "date": "2010-05-29T16:37:16+0000",
            "content": "improve the indenting at the cost of bandwidth.\n\n+1 Yeah!!!!! ... no more tabs from solr!!!!\n\n2 space indents up to 20 levels. \n\nwhy stop at 20?\n\nif they want indenting, it's for human consumption - if it's for human consumption, and they have data nested deeper then 20 levels, we might as well go all the way (because data that complicated is just going to be more complicated if it stops indenting consistently.\n\nI don't think we should make it configurable (beyond turning on/off)\n\n+1 "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12874124",
            "date": "2010-06-01T17:53:47+0000",
            "content": "why stop at 20?\n\nDidn't seem useful beyond that (an indent of 40 chars), and having a fixed limit lets one optimize the indent by implementing it with a singe write out of a char array.  It would be easy to up that to 80 chars (40 levels of indents)... anything in that range seems like it will be pretty unreadable anyway, with or without additional indenting. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12874128",
            "date": "2010-06-01T18:02:59+0000",
            "content": "Didn't seem useful beyond that (an indent of 40 chars)\n\ni'm mainly just wondering about having an odd indent break in hte middle of  a data structure \n\nhaving a fixed limit lets one optimize the indent by implementing it with a singe write out of a char array\n\nthat was the part i wasn't thinking through \u2013 using a single write.  totaly makes sense. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13013202",
            "date": "2011-03-30T15:45:51+0000",
            "content": "Bulk close for 3.1.0 release "
        }
    ]
}