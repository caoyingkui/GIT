{
    "id": "LUCENE-4777",
    "title": "NPE in MultiFieldQueryParser",
    "details": {
        "components": [
            "core/queryparser"
        ],
        "fix_versions": [],
        "affect_versions": "4.1",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "The method getRegexpQuery() in MultiFieldQueryParser is not overridden.\nThat leads to RegexpQueries where field=null (see example below).\n\n\n\nQueryParser qp = new MultiFieldQueryParser(Version.LUCENE_41, new String[]{ \"content\" }, new StandardAnalyzer(Version.LUCENE_41)) \nQuery q = qp.parse(\"path:foo/bar/foo\"); // throws no ParseException\nq.toString() // throws NPE\n\n\n\nWorkaround for MultiFieldQueryParser:\n\n\n@Override\nprotected Query getRegexpQuery(String field, String termStr) throws ParseException {\n  if (field == null) {\n    List<BooleanClause> clauses = new ArrayList<BooleanClause>();\n    for (int i = 0; i < fields.length; i++) {\n      clauses.add(new BooleanClause(getRegexpQuery(fields[i], termStr), BooleanClause.Occur.SHOULD));\n    }\n    return getBooleanQuery(clauses, true);\n  }\n  return super.getRegexpQuery(field, termStr);\n}",
    "attachments": {},
    "issue_links": {},
    "comments": []
}