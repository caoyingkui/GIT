{
    "id": "SOLR-8415",
    "title": "Provide command to switch between non/secure mode in ZK",
    "details": {
        "components": [
            "security",
            "SolrCloud"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "We have the ability to run both with and without zk acls, but we don't have a great way to switch between the two modes. Most common use case, I imagine, would be upgrading from an old version that did not support this to a new version that does, and wanting to protect all of the existing content in ZK, but it is conceivable that a user might want to remove ACLs as well.",
    "attachments": {
        "SOLR-8415.patch": "https://issues.apache.org/jira/secure/attachment/12777515/SOLR-8415.patch",
        "SOLR-8415.branch_5x.patch": "https://issues.apache.org/jira/secure/attachment/12783847/SOLR-8415.branch_5x.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-12-14T18:01:00+0000",
            "author": "Mike Drob",
            "content": "Adding a patch -p0 against trunk.\n\nUsers can specify if they are setting or removing acls by selecting the appropriate ZkAclProvider using VM props.\n\nThis will need a bunch of documentation to make clear.\n\nAlso, still missing tests, but I wanted to get people's feedback on it before I went too far down the rabbit hole. ",
            "id": "comment-15056388"
        },
        {
            "date": "2015-12-15T19:13:03+0000",
            "author": "Mike Drob",
            "content": "Attaching a new patch that includes some tests for converting both ways between secure and non secure nodes.\n\nDocs should go on the wiki somewhere. I'll write them up as soon as somebody gives me a nudge to help find a good home for them. ",
            "id": "comment-15058584"
        },
        {
            "date": "2015-12-15T20:28:28+0000",
            "author": "Mark Miller",
            "content": "Docs should go on the wiki somewhere.\n\nI'd start looking around https://cwiki.apache.org/confluence/display/solr/ZooKeeper+Access+Control ",
            "id": "comment-15058733"
        },
        {
            "date": "2015-12-17T16:19:20+0000",
            "author": "Mike Drob",
            "content": "Thanks Mark! That page looks reasonable.\n\nProposed text, to go after \"Example Usages\":\n\nSwapping ACL Schemes\nOver the lifetime of operating your Solr cluster, you may decide to move from a unsecured ZK to a secured instance. Changing the configured zkACLProvider in solr.xml will ensure that newly created nodes are secure, but will not protect the already existing data. To modify all existing ACLs, you can use ZkCLI -cmd resetacl.\n\nTo change the ACLs this way, you must specify the following VM properties: -DzkACLProvider=... -DzkCredentialsProvider=....\n\n\tThe Credential Provider must be one that has admin privileges on the nodes. If starting with an unsecure configuration, this may be omitted.\n\tThe ACL Provider will be used to compute the new ACLs. When creating an unsecure configuration, this may be omitted.\n\tTo swap from one secure setup to a new secure setup, such as when changing the password, it ma be necessary to use an unsecure intermediate step.\n\n ",
            "id": "comment-15062257"
        },
        {
            "date": "2015-12-17T17:26:59+0000",
            "author": "Mike Drob",
            "content": "Also, we would add resetacl to https://cwiki.apache.org/confluence/display/solr/Command+Line+Utilities ",
            "id": "comment-15062382"
        },
        {
            "date": "2015-12-21T20:43:29+0000",
            "author": "Gregory Chanan",
            "content": "Some comments on the proposed documentation:\n\n\nbut will not protect the already existing data\n\n\"data\" is ambiguous.  ZooKeeper metadata?  ZNodes?\n\n\nit ma be necessary\n\nmay be necessary\n\n\nuse an unsecure intermediate step.\n\nIs this true?  Let's say you wanted to switch from secure setup old: (old acls, old credentials)  to secure setup new (new acls, new credentials).  You can call resetacls with (old acls + new acls, old credentials).  Then call reset acls with (new acls, new credentials).  That requires an intermediate step, but it isn't unsecure. ",
            "id": "comment-15067043"
        },
        {
            "date": "2015-12-21T20:59:23+0000",
            "author": "Gregory Chanan",
            "content": "\n+        } else if (line.getOptionValue(CMD).equals(RESETACL)) {\n+          zkClient.resetACLs(\"/\");\n\n\nshould take a path, like CLEAN\n\n\n+    List<String> children = getChildren(znode, null, true);\n\n\ncatch NoNodeException, like CLEAN\n\n\n+      getSolrZooKeeper().setACL(znode, getZkACLProvider().getACLsToAdd(znode), -1);\n\n\n\nWill this work if the version of the znode is set?\n\nWhy don't you support retryOnConnLoss?\n\nWould be good to test that the acls get applied recursively ",
            "id": "comment-15067054"
        },
        {
            "date": "2015-12-22T19:31:00+0000",
            "author": "Gregory Chanan",
            "content": "Is this true? Let's say you wanted to switch from secure setup old: (old acls, old credentials) to secure setup new (new acls, new credentials). You can call resetacls with (old acls + new acls, old credentials). Then call reset acls with (new acls, new credentials). That requires an intermediate step, but it isn't unsecure.\n\nmaybe change your test to do this (or do both this and the secure/non-secure version, should be simple to do both probably). ",
            "id": "comment-15068609"
        },
        {
            "date": "2015-12-22T21:17:39+0000",
            "author": "Mike Drob",
            "content": "should take a path, like CLEAN\nOptional path or required path? Could still default to / if no path given, or could make the path required for consistency. Or could accept multiple paths.\nI think operating on / will be the most common use case, so it would make sense to default to it, but I'll defer to you on this.\n\n\ncatch NoNodeException, like CLEAN\nGood catch.\n\nWill this work if the version of the znode is set?\nYea, the -1 means don't care about the version.\n\nWhy don't you support retryOnConnLoss?\nNot sure what this means.\n\nWould be good to test that the acls get applied recursively\nThe existing test does this. Set acls on /, test on /collections/collection1\n\nmaybe change your test to do this (or do both this and the secure/non-secure version, should be simple to do both probably).\nI've been tinkering with a test for this, I'm having some trouble getting the providers and credentials lines up in a way that tests something meaningful. I think I can get it though. ",
            "id": "comment-15068742"
        },
        {
            "date": "2015-12-22T21:47:14+0000",
            "author": "Gregory Chanan",
            "content": "Optional path or required path? Could still default to / if no path given, or could make the path required for consistency. Or could accept multiple paths.\nI think operating on / will be the most common use case, so it would make sense to default to it, but I'll defer to you on this.\n\nWhatever you think is best.\n\nWhy don't you support retryOnConnLoss?\nNot sure what this means.\n\nSee a bunch of the other commands in SolrZkClient, like makePath.  They support a retryOnConnLoss parameter, which would be useful here.\n\nThe existing test does this. Set acls on /, test on /collections/collection1\n\nMy mistake.  I'd check \"/\" as well, that sort of thing is easy to screw up. ",
            "id": "comment-15068778"
        },
        {
            "date": "2015-12-23T16:37:51+0000",
            "author": "Mike Drob",
            "content": "Let's say you wanted to switch from secure setup old: (old acls, old credentials) to secure setup new (new acls, new credentials). You can call resetacls with (old acls + new acls, old credentials). Then call reset acls with (new acls, new credentials). That requires an intermediate step, but it isn't unsecure\n\nI continued working on this and the main \"problem\" is that VMParamsAllAndReadonlyDigestZkACLProvider and VMParamsSingleSetCredentialsDigestZkCredentialsProvider use the same VM properties for the ACLs and Credentials. Normally, this is nice and makes things simpler, but when migrating and you want them to be different then that doesn't help us much. Since those are the only two out of the box Providers, the unsecure route is the only option when using the command line only.\n\nIt's pretty straightforward to do this with access to writing some java classes, but at that point I'm not sure who our audience is. ",
            "id": "comment-15069844"
        },
        {
            "date": "2015-12-23T18:11:48+0000",
            "author": "Gregory Chanan",
            "content": "It's pretty straightforward to do this with access to writing some java classes, but at that point I'm not sure who our audience is.\n\nThe point was the proposed documentation was incorrect.  Our audience is someone who wants to switch from one secure acl regime to another.  If you don't think that's a popular enough use case to warrant documentation then I'd suggest getting rid of that part including the incorrect information. ",
            "id": "comment-15069982"
        },
        {
            "date": "2016-01-11T17:32:36+0000",
            "author": "Mike Drob",
            "content": "I do not expect it to be a popular use case, but I do expect it to be a non-zero use case. I'm fine with getting a functional implementation for now, though, and then refining it later. Here's new documentation that sidesteps the issue:\n\n\nSwapping ACL Schemes\nOver the lifetime of operating your Solr cluster, you may decide to move from a unsecured ZK to a secured instance. Changing the configured zkACLProvider in solr.xml will ensure that newly created nodes are secure, but will not protect the already existing data. To modify all existing ACLs, you can use ZkCLI -cmd resetacl [path]. If no path is specified, then the command will operate on the whole tree.\n\nTo change the ACLs this way, use the following VM properties: -DzkACLProvider=... -DzkCredentialsProvider=....\n\n\tThe Credential Provider must be one that has current admin privileges on the nodes. When omitted, the process will use no credentials (suitable for an unsecure configuration).\n\tThe ACL Provider will be used to compute the new ACLs. When omitted, the process will set all permissions to all users, removing any security present.\n\tYou may use the VMParamsSingleSetCredentialsDigestZkCredentialsProvider and VMParamsAllAndReadonlyDigestZkACLProvider as described earlier in the page for these properties.\n\n\n\nI will upload a new patch shortly. ",
            "id": "comment-15092335"
        },
        {
            "date": "2016-01-12T01:37:22+0000",
            "author": "Gregory Chanan",
            "content": "One thing I'm a bit unclear on from the docs: what is the recommended strategy for changing the permissions?  Stop the servers, change the solr.xml, run the ZkCLI command, start the servers?  Would be good to specify that.\n\nWhat is the current plan with the patch?  Do you think it's ready to go or are you still working on more testing? ",
            "id": "comment-15093095"
        },
        {
            "date": "2016-01-12T18:12:39+0000",
            "author": "Mike Drob",
            "content": "New patch against trunk.\n\nGoing secure -> insecure, probably can do against a running cluster.\nGoing to a different secure configuration, yea, would need to update solr.xml. I think that's sufficiently covered in the other sections of the page, though. ",
            "id": "comment-15094421"
        },
        {
            "date": "2016-01-12T18:58:49+0000",
            "author": "Gregory Chanan",
            "content": "Going secure -> insecure, probably can do against a running cluster.\n\nWhy probably?  Don't you need to update solr.xml?\n\nGoing to a different secure configuration, yea, would need to update solr.xml. I think that's sufficiently covered in the other sections of the page, though.\n\nWhich page are you referring to?  https://cwiki.apache.org/confluence/display/solr/ZooKeeper+Access+Control?  Maybe I'm missing something, but that all seems to be about initial setup. ",
            "id": "comment-15094505"
        },
        {
            "date": "2016-01-12T19:43:44+0000",
            "author": "Mike Drob",
            "content": "Why probably? Don't you need to update solr.xml?\nI was thinking that you don't need to update the Credentials, but now I realize that you would need to update the ACL Provider, otherwise future content will still be locked down.\n\nMaybe I'm missing something, but that all seems to be about initial setup.\nThe steps for initial setup and migration are almost identical, aside from needing to convert existing ACLs.\n\nHow about:\n\n\nSwapping ACL Schemes\nOver the lifetime of operating your Solr cluster, you may decide to move from a unsecured ZK to a secured instance. Changing the configured zkACLProvider in solr.xml will ensure that newly created nodes are secure, but will not protect the already existing data. To modify all existing ACLs, you can use ZkCLI -cmd resetacl [path].\n\nChanging ACLs in ZK should only be done while your SolrCloud cluster is stopped. Attempting to do so while Solr is running may result in inconsistent state and some nodes becoming inaccessible. To configure the new ACLs, run ZkCli with the following VM properties: -DzkACLProvider=... -DzkCredentialsProvider=....\n\n\tThe Credential Provider must be one that has current admin privileges on the nodes. When omitted, the process will use no credentials (suitable for an unsecure configuration).\n\tThe ACL Provider will be used to compute the new ACLs. When omitted, the process will set all permissions to all users, removing any security present.\n\n\n\nYou may use the VMParamsSingleSetCredentialsDigestZkCredentialsProvider and VMParamsAllAndReadonlyDigestZkACLProvider implementations as described earlier in the page for these properties.\n\nAfter changing the ZK ACLs, make sure that the contents of your solr.xml match, as described for initial set up.\n\n\nI made path required to line up better with clear, and to hopefully reduce accidents.\n\nAside: There has to be a better way to share this than just pasting my proposed changes in a comment each time.\n\n\nAdded another test for using the System Properties as well. ",
            "id": "comment-15094630"
        },
        {
            "date": "2016-01-12T20:25:16+0000",
            "author": "Gregory Chanan",
            "content": "Aside: There has to be a better way to share this than just pasting my proposed changes in a comment each time.\n\nHmm, you could just go ahead and change the wiki I guess?  Don't know of a better way.\n\nPatch looks good.  Some comments:\n1) Provide javadoc for \n\n+  public Stat setACL(String path, List<ACL> acls, boolean retryOnConnLoss) throws InterruptedException, KeeperException  {\n\n\n2) Using the @FunctionalInterface stuff means I can't commit this to 5.x, are you okay with that?\n3) The set vs reset in SolrZkClient is kind of confusing.  As it stands, set means a single node, reset means recursive.  That's not the common usage of the words, e.g. we don't have clean vs reclean to mean a single node vs recursively (there it's delete vs clean).  I don't know which terminology to use; reset seems to imply changing from ACLs that existed (either from secure-> other secure or secure->unsecure), while set seems to imply changing from unsecure to secure.  This is really a problem with ZooKeeper lacking declarative APIs (what you actually want is an API that says \"after this runs, the ACLs are this\" \u2013 you don't really care how it actually happens).  Given that, what makes the most sense to me is to just call everything \"set\", since this matches the ZK API that you are calling.  Maybe instead of setAcl vs resetACLs you should have setAcl vs setAcls or setAcl vs setAclsRecursively.  Thoughts? ",
            "id": "comment-15094863"
        },
        {
            "date": "2016-01-12T20:37:12+0000",
            "author": "Mike Drob",
            "content": "1) Done.\n2) The FunctionalInterface is the right way to do this, but it would be nice to have in 5.x as well. I'm willing to create a separate patch that drops it specifically for 5.x\n3) Naming things is hard, I hadn't considered the possible confusion there but now that you point it out I can't unsee it. Maybe setAcl and updateAcls? updateAllAcl? Is it fine to still call the ZkCli command resetacl? Maybe reinitacl? Original intent was to convey something with gravitas. ",
            "id": "comment-15094892"
        },
        {
            "date": "2016-01-12T21:12:22+0000",
            "author": "Gregory Chanan",
            "content": "2) The FunctionalInterface is the right way to do this, but it would be nice to have in 5.x as well. I'm willing to create a separate patch that drops it specifically for 5.x\n\nSure, let's do a separate patch if that's what you prefer.\n\n3) Naming things is hard, I hadn't considered the possible confusion there but now that you point it out I can't unsee it. Maybe setAcl and updateAcls? updateAllAcl? Is it fine to still call the ZkCli command resetacl? Maybe reinitacl? Original intent was to convey something with gravitas.\n\nI think setAcl and updateAcls is good.  I get the gravitas point, but anything with \"re\" I think is going to cause more confusion because it implies some initial state that may or may not be true.  I'd just match the ZkCli command name to the SolrZkClient function name, so in this case updateAcls.  But if you feel really strongly for something else, let's do that. ",
            "id": "comment-15094953"
        },
        {
            "date": "2016-01-12T22:23:49+0000",
            "author": "Mike Drob",
            "content": "Patch with command renamed to UpdateACLs. ",
            "id": "comment-15095093"
        },
        {
            "date": "2016-01-13T22:52:53+0000",
            "author": "Gregory Chanan",
            "content": "Here's a patch with some minor changes:\n\n\tChanged UPDATEACL to UPDATEACLS to match the constant value\n\tChanged the constant value from updateAcls to updateacls for consistency and the test seems to fail without it\n\tAdded retryOnConnLoss to javadoc\n\n\n\nI'll commit this assuming the tests pass. ",
            "id": "comment-15097205"
        },
        {
            "date": "2016-01-14T00:33:35+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1724532 from gchanan@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1724532 ]\n\nSOLR-8415: Provide command to switch between non/secure mode in ZK ",
            "id": "comment-15097363"
        },
        {
            "date": "2016-01-14T00:36:06+0000",
            "author": "Gregory Chanan",
            "content": "committed to trunk.  Mike Drob if you post a 5x patch, I'll commit. ",
            "id": "comment-15097367"
        },
        {
            "date": "2016-01-22T16:00:27+0000",
            "author": "Mike Drob",
            "content": "Attaching a --no-prefix patch for branch 5. ",
            "id": "comment-15112582"
        },
        {
            "date": "2016-01-28T05:48:06+0000",
            "author": "Gregory Chanan",
            "content": "branch 5 patch seems to be based on a previously posted patch, not what was committed.  Attached a version based on the committed version. ",
            "id": "comment-15120809"
        },
        {
            "date": "2016-01-28T07:28:32+0000",
            "author": "ASF subversion and git services",
            "content": "Commit bc1cbb4812fe76f100788795189d1f2d9833aed1 in lucene-solr's branch refs/heads/branch_5x from Gregory Chanan\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bc1cbb4 ]\n\nSOLR-8415: Provide command to switch between non/secure mode in ZK ",
            "id": "comment-15120941"
        },
        {
            "date": "2016-01-28T07:29:24+0000",
            "author": "Gregory Chanan",
            "content": "Thanks Mike.  In addition to the previous Trunk commit, also committed to 5.5. ",
            "id": "comment-15120943"
        },
        {
            "date": "2016-01-28T15:30:23+0000",
            "author": "Mike Drob",
            "content": "What's the process for updating the Ref Guide? Should I open a new JIRA for that so my comments don't get lost? ",
            "id": "comment-15121696"
        },
        {
            "date": "2016-01-28T19:57:55+0000",
            "author": "Cassandra Targett",
            "content": "Is the most recent snippet up-to-date? I haven't read the entire issue, but it looks like the most recent snippet refers to resetacl, but then that was changed?\n\nIf it's ready to go, I'll put it in the Ref Guide now to not forget. The other approach would be to add the text as a comment to the page you want to add it to and someone will pick those up (eventually, before 5.5 comes out). ",
            "id": "comment-15122224"
        },
        {
            "date": "2016-01-28T20:32:13+0000",
            "author": "Mike Drob",
            "content": "Yes, that needs to be changed. Here's a fully updated section.\n\n\nChanging ACL Schemes\nOver the lifetime of operating your Solr cluster, you may decide to move from a unsecured ZK to a secured instance. Changing the configured zkACLProvider in solr.xml will ensure that newly created nodes are secure, but will not protect the already existing data. To modify all existing ACLs, you can use ZkCLI -cmd updateAcls /zk-path.\n\nChanging ACLs in ZK should only be done while your SolrCloud cluster is stopped. Attempting to do so while Solr is running may result in inconsistent state and some nodes becoming inaccessible. To configure the new ACLs, run ZkCli with the following VM properties: -DzkACLProvider=... -DzkCredentialsProvider=....\n\n\tThe Credential Provider must be one that has current admin privileges on the nodes. When omitted, the process will use no credentials (suitable for an unsecure configuration).\n\tThe ACL Provider will be used to compute the new ACLs. When omitted, the process will set all permissions to all users, removing any security present.\n\n\n\nYou may use the VMParamsSingleSetCredentialsDigestZkCredentialsProvider and VMParamsAllAndReadonlyDigestZkACLProvider implementations as described earlier in the page for these properties.\n\nAfter changing the ZK ACLs, make sure that the contents of your solr.xml match, as described for initial set up.\n ",
            "id": "comment-15122280"
        },
        {
            "date": "2016-01-28T21:12:53+0000",
            "author": "Gregory Chanan",
            "content": "the command is updateacls, not updateAcls. ",
            "id": "comment-15122318"
        },
        {
            "date": "2016-01-28T21:36:07+0000",
            "author": "Mike Drob",
            "content": "So it is. ",
            "id": "comment-15122344"
        },
        {
            "date": "2016-01-28T21:38:57+0000",
            "author": "Cassandra Targett",
            "content": "No problem, I'll fix it when I put it in the Ref Guide. ",
            "id": "comment-15122349"
        },
        {
            "date": "2016-01-28T22:09:02+0000",
            "author": "Cassandra Targett",
            "content": "Please take a look at https://cwiki.apache.org/confluence/display/solr/ZooKeeper+Access+Control. I decided to make it a level-2 heading and put it in the section with the other config options, since I thought it would be easier to find there. ",
            "id": "comment-15122397"
        },
        {
            "date": "2016-02-05T16:19:32+0000",
            "author": "Mike Drob",
            "content": "+1 ",
            "id": "comment-15134393"
        }
    ]
}