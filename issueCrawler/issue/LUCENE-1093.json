{
    "id": "LUCENE-1093",
    "title": "SpanFirstQuery modification to aid term boosting based on position.",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/query/scoring"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "This is a request for a modification to SpanFirstQuery that would allow term boosting based on a term's distance from the beginning of the document.\n\nThis modification to SpanFirstQuery would be that the Spans returned by SpanFirstQuery.getSpans() must always return 0 from its start() method. Then the slop passed to sloppyFreq(slop) would be the distance from the beginning of the indexed field to the end of the Spans of the SpanQuery passed to SpanFirstQuery.\n\nHere is the discussion behind this issue:\nhttp://www.nabble.com/Can-I-do-boosting-based-on-term-postions--to11939423.html#a11939423",
    "attachments": {
        "SpanFirst20071219.patch": "https://issues.apache.org/jira/secure/attachment/12371963/SpanFirst20071219.patch",
        "TestBasics20071227.patch": "https://issues.apache.org/jira/secure/attachment/12372270/TestBasics20071227.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2007-12-19T04:59:39+0000",
            "content": "NOTE: this should be an option, not a change to the default behavior (right now a SpanFirstQuery always returns Spans the same size as it's subquery ... changing this could radically affect the scores users get from existing queries.\n\nAPI that seems like it would make the most sense is a new boolean getter/setter that defaults to false ... no idea what agood descriptive name for it would be.\n\n\n(I too thought we added this a long time ago, i remember asking about it when i was writing  unit tests for SpanQuery.explain) ",
            "author": "Hoss Man",
            "id": "comment-12553232"
        },
        {
            "date": "2007-12-19T12:59:02+0000",
            "content": "Another option would be to introduce something like SpanFrontWeightedQuery or something like that and leave SFQ alone. ",
            "author": "Grant Ingersoll",
            "id": "comment-12553341"
        },
        {
            "date": "2007-12-19T19:18:26+0000",
            "content": "This 20071219 patch adds a private flag and a constructor for this flag to SpanFirstQuery. The flag indicates whether the start of the resulting Spans should be zero or default to the start of the given spans.\n\nant -Dtestcase='Test*Span*' test-core\npasses independent of whether or not this flag is set by default, so some more  tests are needed. ",
            "author": "Paul Elschot",
            "id": "comment-12553439"
        },
        {
            "date": "2007-12-27T21:13:04+0000",
            "content": "Here is a patch to 'TestBasics' that adds a test case for 'passSpansFirst = false' ",
            "author": "Peter Keegan",
            "id": "comment-12554609"
        },
        {
            "date": "2007-12-27T22:09:02+0000",
            "content": "With both patches applied, SpanFirstQuery and test in TestBasics, all tests pass nicely here. ",
            "author": "Paul Elschot",
            "id": "comment-12554623"
        },
        {
            "date": "2013-02-28T13:03:54+0000",
            "content": "This issue has been inactive for more than 4 years. Please close if it's no longer relevant/needed, or bring it up to date if you intend to work on it. SPRING_CLEANING_2013 ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13589507"
        }
    ]
}