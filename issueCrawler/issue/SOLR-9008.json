{
    "id": "SOLR-9008",
    "title": "Investigate feasibilty and impact of using SparseFixedBitSet where Solr is currently using FixedBitSet",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Found this gem in one of Mike's blog posts:\n\n\nBut with 5.0.0, Lucene now supports random-writable and advance-able sparse bitsets (RoaringDocIdSet and SparseFixedBitSet), so the heap required is in proportion to how many bits are set, not how many total documents exist in the index. \nhttp://blog.mikemccandless.com/2014/11/apache-lucene-500-is-coming.html\n\nI don't see any uses of either of these classes in Solr code but from a quick look, sounds compelling for saving memory, such as when caching fq's\n\nThis ticket is for exploring where Solr can leverage these structures and whether there's an improvement in performance and/or memory usage.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}