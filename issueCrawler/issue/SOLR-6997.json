{
    "id": "SOLR-6997",
    "title": "Support distributed 'facet on same field different ways'",
    "details": {
        "components": [
            "faceting"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "4.10.5"
        ],
        "affect_versions": "4.10.3",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "SOLR-1351 brought the ability to facet on the same field differently using local parameters but distributed process (FacetComponent::FieldFacet) does not honor local params from facet string.",
    "attachments": {
        "0001-honor-facet-field-local-params.patch": "https://issues.apache.org/jira/secure/attachment/12693048/0001-honor-facet-field-local-params.patch",
        "0001-SEA-1284-field-facet-local-param-parsing-fails-on-fi.patch": "https://issues.apache.org/jira/secure/attachment/12698021/0001-SEA-1284-field-facet-local-param-parsing-fails-on-fi.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-01-19T09:19:17+0000",
            "author": "Pablo Queixalos",
            "content": "Attached patch that adds support for local params for distributed field facets. ",
            "id": "comment-14282289"
        },
        {
            "date": "2015-02-11T08:28:12+0000",
            "author": "Pablo Queixalos",
            "content": "Also, as solr/lucene allows naming fields using hyphen character, attached patch for identifier parsing in QueryParsing.java, which is basically :\n\n-          if (!Character.isJavaIdentifierPart(ch) && ch != '.') {\n+          if (!Character.isJavaIdentifierPart(ch) && ch != '.' && ch != '-' ) {\n\n ",
            "id": "comment-14315777"
        },
        {
            "date": "2015-02-12T15:23:32+0000",
            "author": "Erick Erickson",
            "content": "While this fix is easy enough, I'm -1 on it. The fact that Solr allows it is not the same as supporting it. From the ref guide:\n\n\"Field names should consist of alphanumeric or underscore characters only and not start with a digit\"\n\nI would vastly prefer to go the opposite way, fail any names that didn't follow the rule above. Unfortunately, that would break existing installations and require re-indexing, which is much too onerous. Historically I think supporting \"non-standard\" field names was more an accident than intentional.\n\nAs far as query parsing is concerned, I'd be a bit afraid of this popping out somewhere and messing up the NOT operator. ",
            "id": "comment-14318367"
        },
        {
            "date": "2015-02-18T12:57:51+0000",
            "author": "Pablo Queixalos",
            "content": "Thanks for sharing.\n\nLooking QueryParsing::getId() method calls and the way it is implemented I do not see how it could interfere with NOT operator parsing (but I may not have enough distance and possibly missed something).\n\nStill the first aspect of this issue is relevant, and somehow critical. IMO the biggest value Solr is not providing an API on top of lucene but to distribute searches.\n\nThose two patches are implemented in our fork. Solr tests pass, ours too. Some manual QA did not discover any regressions since then, I will update this jira if we find corner cases. ",
            "id": "comment-14325830"
        },
        {
            "date": "2015-02-18T16:43:46+0000",
            "author": "Erick Erickson",
            "content": "Hmmm, while I'm still -1 on including hyphens in the field names, if you want to pursue it please put it in it's own JIRA. That change has nothing to do with the title of this JIRA and would make it difficult to track.\n ",
            "id": "comment-14326163"
        },
        {
            "date": "2015-03-05T15:38:26+0000",
            "author": "Michael McCandless",
            "content": "Push out to 4.10.5 release ",
            "id": "comment-14348928"
        }
    ]
}