{
    "id": "SOLR-8089",
    "title": "Support query parsers being able to set enablePositionIncrements",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "In 5.0 LUCENE-4963 disallowed setting enablePositionIncrements=false on any token filter. The idea being no filter should change the token stream in a way that could mess up preceding or following analysis components\n\nSo if a user wants to be able to have PhraseQueries that match across stopwords they cannot unless the parser is configured to not take position increments into account when generating phrase queries .\n\nThis is documented in the \"Token Position Increments\" section here : https://lucene.apache.org/core/5_3_0/core/org/apache/lucene/analysis/package-summary.html",
    "attachments": {
        "SOLR-8089.patch": "https://issues.apache.org/jira/secure/attachment/12762096/SOLR-8089.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-09-24T09:24:43+0000",
            "author": "Varun Thacker",
            "content": "Patch with a test case of EDismax . The tests are failing for queries with enablePositionIncrements=false\n\nFor the following two failing queries here is how the positions are getting put\n\nq=\"the sky is blue\"\nsky at pos=0\nblue at pos=1\n\nq=\"sky blue\"\nsky at pos=0\nblue at pos=1\n\nThe relevant code from QueryBuilder#analyzePhrase\n\n\nwhile (stream.incrementToken()) {\n      if (enablePositionIncrements) {\n        position += posIncrAtt.getPositionIncrement();\n      } else {\n        position += 1;\n      }\n      builder.add(new Term(field, termAtt.getBytesRef()), position);\n    }\n\n\n\nSo I can see why they are not matching the document. \n\nWhat am I missing here ?  ",
            "id": "comment-14906094"
        },
        {
            "date": "2015-09-28T11:15:52+0000",
            "author": "Varun Thacker",
            "content": "QueryParserBase#setEnablePositionIncrements will ignore holes in the query token stream . We need some sort of support at indexing time as well here for it to match. ",
            "id": "comment-14933173"
        },
        {
            "date": "2017-11-29T05:46:36+0000",
            "author": "David Smiley",
            "content": "I think query time is not enough; wouldn't we need to adjust the index analysis to posInc=1 too?  Otherwise index data of \"foo the bar\" would not be found by the query \"foo bar\" (and we want it to if a user wants enablePositionIncrements=false)\nEDIT: DUH; just like your last comment says!  I need to go to bed \n\ndisclaimer: I didn't look at the patch\n\np.s. recent discussion here: https://issues.apache.org/jira/browse/LUCENE-8036?focusedCommentId=16270188&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16270188 ",
            "id": "comment-16270190"
        }
    ]
}