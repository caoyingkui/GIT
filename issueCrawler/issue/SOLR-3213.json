{
    "id": "SOLR-3213",
    "title": "Upgrade to commons-csv once it is released",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "Response Writers",
            "update"
        ],
        "type": "Task",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Since SOLR-3204 we have a jarjar'ed apache-solr-commons-csv-SNAPSHOT.jar file in lib folder. Once version 1.0 of commons-csv is officially released, we should upgrade that to this version, remove maven publishing and change the import statements to the official package name in java files.",
    "attachments": {
        "SOLR-3213-noremoves.patch": "https://issues.apache.org/jira/secure/attachment/12662370/SOLR-3213-noremoves.patch",
        "SOLR-3213.patch": "https://issues.apache.org/jira/secure/attachment/12662262/SOLR-3213.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-13224931",
            "date": "2012-03-08T01:56:58+0000",
            "content": "Adding a fix version so that this has to ride the release 'push' train. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717441",
            "date": "2013-07-23T18:48:15+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971138",
            "date": "2014-04-16T12:57:16+0000",
            "content": "Move issue to Solr 4.9. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-14099356",
            "date": "2014-08-15T23:44:59+0000",
            "content": "Commons-csv 1.0 has finally been released: http://commons.apache.org/proper/commons-csv/changes-report.html "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14099566",
            "date": "2014-08-16T08:36:34+0000",
            "content": "Thanks Steve! This should be possible to do, mainly we have to change import statements to reflect \"original\" package name. And maybe fix some API changes. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14099574",
            "date": "2014-08-16T08:53:05+0000",
            "content": "Hi,\nI quickly tried it out. The IVY code works and I removed the o.a.solr.internal packages from core and tests and search/replaced the imports.\n\nUnfortunately the compilation ails mainly because CSVStrategy no longer exists. There is also some method signatures different, but mainly that should work.\n\nI have not much time today, but I will attach a patch with the work already done. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14099576",
            "date": "2014-08-16T08:57:23+0000",
            "content": "Patch with deletions and IVY additions. Code does not yet compile because commons-cli API changed "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14099579",
            "date": "2014-08-16T09:47:16+0000",
            "content": "I think I know how to refactor this:\n\n\tCSVStrategy -> CSVFormat\n\tCSVFormat is no longer a mutable JavaBean, it uses builder pattern, so change code to respect that\n\tCSVWriter is now final, so the shared buffer stuff cannot be used, but is bogus with newer JVMs (and not really threadsafe).\n\n\n\nI will look into this later! "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14100004",
            "date": "2014-08-17T17:36:37+0000",
            "content": "Hi,\nthe whole thing is not easy possible. The older commpns-csv as bundled with Solr is totally different than what was released as 1.0. This could theoretically be fixed API-wise, but there is a nother problem:\nFor \"mv\" fields (MultiValued), the whole underlying CSV parser is misused (parser inside parser). This cannot be done with common-csv, because the new common-csv-API is completely based on Iterable and invoking a new parser is quite heavy. Also its not easily possible to switch between CSVPrinters for one output Writer: You would need to do the same like for parsing: Create a new CSVWriter instance per multi-value that writes to StringWriter and then feed that StringWriter's value down to the main CSVPrinter.\nThis all is only possible in a performant way with a complete rewrite of CSV components in Solr.\n\nI am not sure how to handle this:\n\n\tKeep the current CSV parser/printer? If we do this, we should maybe include it completely into Solr's package structure and not use \"internal\" als package name. This would just be a simple Eclipse-rename. We should then add a NOTICE.txt entry that refers to common-csv and that we have a forked, older version of this component that was modified for performance.\n\tIn the future use common-csv, but completely rewrite the CSV handlers in Solr? This is especially hard for Multivalued fields, but the new API of commons-csv looks much better tahn the old one, although its more restricted (formats are stateless, parsers just implement Iterable, but don't allow to look into internals), so it is not easy to do the crazy record-in-value stuff for MultiFields.\n\n "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14100011",
            "date": "2014-08-17T17:45:57+0000",
            "content": "Here is the pacth up to the time where I gave up:\n\n\tI fixed most of the initialization code (creating the formats)\n\tI did not change the actual parsing/printing\n\n "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-14100013",
            "date": "2014-08-17T17:48:28+0000",
            "content": "Here the same patch again, but without the removal of the forked classes. This shows what I have already done. "
        }
    ]
}