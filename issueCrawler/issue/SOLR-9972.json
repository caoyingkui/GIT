{
    "id": "SOLR-9972",
    "title": "SpellCheckComponent to return collations and suggestions as a JSON object rather than a list",
    "details": {
        "components": [
            "Response Writers"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.5",
            "6.6"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "original title: JSON-Specific Parameters arrntv causing some error for spellcheck component\n\nSo I tried using the new array named list arrntv from solr 6.5 jenkins build\nbut the json returned was broken when it returned response for spellcheck with word break.\nfor example :\n\n {\"name\":\"collation\",{\n        \"type\":\"str\",\"value\":\"collationQuery\":\"indomie kuing\",\n        \"hits\":81,\n        \"misspellingsAndCorrections\":\n        [\n          {\"name\":\"indomee\",\"type\":\"str\",\"value\":\"indomie\"},\n          {\"name\":\"kuih\",\"type\":\"str\",\"value\":\"kuing\"}\n        ]}\n }\n\n\nas you may see that \"collationQuery\":\"indomie kuing\" was considered as value thus causing the json to fail.\ni think the correct json was :\n\n{\"name\":\"collation\",\n        \"type\":\"object\",\n        \"value\":{\n        \"collationQuery\":\"indomie kuing\",\n        \"hits\":81,\n        \"misspellingsAndCorrections\":\n        [\n          {\"name\":\"indomee\",\"type\":\"str\",\"value\":\"indomie\"},\n          {\"name\":\"kuih\",\"type\":\"str\",\"value\":\"kuing\"}\n        ]}\n }\n\n\nsorry for bad grammar english was not my first language and i know that object was not supported by current arrntv options.",
    "attachments": {
        "SOLR-9972-impact.out": "https://issues.apache.org/jira/secure/attachment/12848136/SOLR-9972-impact.out",
        "SOLR-9972-hunch-no-test.patch": "https://issues.apache.org/jira/secure/attachment/12847784/SOLR-9972-hunch-no-test.patch",
        "SOLR-9972-impact": "https://issues.apache.org/jira/secure/attachment/12848135/SOLR-9972-impact",
        "SOLR-9972.patch": "https://issues.apache.org/jira/secure/attachment/12847863/SOLR-9972.patch",
        "SOLR-9972-with-test-after-SOLR-9975.patch": "https://issues.apache.org/jira/secure/attachment/12847838/SOLR-9972-with-test-after-SOLR-9975.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-01-17T09:13:26+0000",
            "author": "Christine Poerschke",
            "content": "Hello Ricky Oktavianus Lazuardy - thanks for opening this ticket.\n\nIf you have it available, could you also share example responses for the other json.nl choices for comparison e.g. arrmap, arrarr, flat, map - thank you. ",
            "id": "comment-15825687"
        },
        {
            "date": "2017-01-17T09:42:00+0000",
            "author": "Christine Poerschke",
            "content": "From a quick look around, this might be another case of SimpleOrderedMap vs. NamedList similar to SOLR-6064 though that is only a hunch at this point. ",
            "id": "comment-15825728"
        },
        {
            "date": "2017-01-17T11:43:50+0000",
            "author": "Christine Poerschke",
            "content": "Attached patch is my hunch as code (without tests).\n\nI have used the bin/solr -e techproducts example and the http://localhost:8983/solr/techproducts/spell?df=text&spellcheck.q=delll+ultra+sharp&spellcheck=true&spellcheck.collateParam.q.op=AND query mentioned in the Solr Reference Guide's Spell Checking to obtain a response with a collationQuery element, similar to the response above.\n\nThe patch would also need a test e.g. in SpellCheckComponentTest class.\n\n\n\nAn alternative, wider reaching solution might be to try and remove the \"collation\" elements within the \"collations\" element. Links into the code:\n\n\thttps://github.com/apache/lucene-solr/blob/master/solr/core/src/java/org/apache/solr/handler/component/SpellCheckComponent.java#L303-L322\n\thttps://github.com/apache/lucene-solr/blob/master/solr/core/src/java/org/apache/solr/handler/component/SpellCheckComponent.java#L439-L456\n\n ",
            "id": "comment-15825917"
        },
        {
            "date": "2017-01-17T15:15:35+0000",
            "author": "Christine Poerschke",
            "content": "Attaching proposed change with test (the test extends the test proposed to be added in SOLR-9975). ",
            "id": "comment-15826192"
        },
        {
            "date": "2017-01-17T16:09:33+0000",
            "author": "Ricky Oktavianus Lazuardy",
            "content": "Christine Poerschke : Sorry for late response and thanks for quick response\nthis one is arrmap one example (i think you don't need it anymore):\n\n{\n        \"collation\": {\n          \"collationQuery\": \"indomie kuah\",\n          \"hits\": 98,\n          \"misspellingsAndCorrections\": [\n            {\n              \"indomee\": \"indomie\"\n            },\n            {\n              \"kuih\": \"kuah\"\n            }\n          ]\n        }\n      },\n\n\nand yes i think removing collation object may fix this problems. ",
            "id": "comment-15826313"
        },
        {
            "date": "2017-01-17T16:49:07+0000",
            "author": "Christine Poerschke",
            "content": "Attaching proposed fix. James Dyer, would you have a chance to review perhaps? Thank you. ",
            "id": "comment-15826374"
        },
        {
            "date": "2017-01-17T17:29:08+0000",
            "author": "James Dyer",
            "content": "Christine Poerschke This looks straightforward, and I like your clean-up on existing tests!  \n\nJust to be clear, this fixes the case of invalid json with \"extended collate\".  It does not break backwards-compatibility in any other way, right?  Is the xml rendering the same either way?  Does solrj handle the change? (I'm pretty sure if we broke backwards in either case, either oas.spelling.SpellCheckCollatorTest#testExtendedCollate or oas.client.solrj.response.TestSpellCheckResponse#testSpellCheckResponse_Extended would fail, but its good to keep these things in mind.)\n\nBut besides being doubly sure we don't break backwards on the response format (except for fixing the invalid json), this looks great, +1 . ",
            "id": "comment-15826438"
        },
        {
            "date": "2017-01-18T20:29:08+0000",
            "author": "Christine Poerschke",
            "content": "James Dyer, thanks for the code review. I am attaching a utility shell script and its output to try and answer your backward compat questions.\n\nAs can be seen from the output file, the impact of the \"SpellCheckComponent collations and suggestions returned as a JSON object rather than a list\" change here goes beyond use of collateExtendedResults=true and changes not only some wt=json output but also some wt=ruby and wt=python output.\n\nNow to the 'elephant in the room' question, if there were to be an RC2 for the 6.4.0 Solr release, would it be worth putting forward the inclusion of the change here? I don't know enough about use of the SpellCheckComponent to have an informed opinion on this.\n\nHoss Man and Jonny Marks (json.nl=arrntv stakeholders from SOLR-9442 and SOLR-9787, the json.nl=arrntv addition flagged up NamedList vs. SimpleOrderedMap in the existing SpellCheckComponent code, similar to SOLR-6064, the proposed fix impacts not just those using json.nl=arrntv) - if you have any thoughts on this, please let us know. Thank you. ",
            "id": "comment-15828727"
        },
        {
            "date": "2017-01-18T21:18:18+0000",
            "author": "James Dyer",
            "content": "Christine Poerschke  As I understand it, the python/ruby output are specialized json responses and so I think users will like it better if the json is well-formed.  So no problem altering these, imo.  I appreciate the painstaking steps you've taken to check this.\n\n If it were me, I'd just wait for the next release rather than putting this into the next release-candidate.  This feature has been around since Solr 1.4, I believe, and no doubt the bug is a longstanding one, this being the first time anyone has raised the issue in this forum.  ",
            "id": "comment-15828786"
        },
        {
            "date": "2017-01-26T14:37:05+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 01878380226c5be6bfedc45b8fb6174de4181a7c in lucene-solr's branch refs/heads/master from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0187838 ]\n\nSOLR-9972: SpellCheckComponent collations and suggestions returned as a JSON object rather than a list\n(Christine Poerschke in response to bug report from Ricky Oktavianus Lazuardy) ",
            "id": "comment-15839759"
        },
        {
            "date": "2017-01-26T15:32:48+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 4cd3d15da8ef77ef50e2bda91ed6d3c6e87b5426 in lucene-solr's branch refs/heads/branch_6x from Christine Poerschke\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4cd3d15 ]\n\nSOLR-9972: SpellCheckComponent collations and suggestions returned as a JSON object rather than a list\n(Christine Poerschke in response to bug report from Ricky Oktavianus Lazuardy) ",
            "id": "comment-15839873"
        },
        {
            "date": "2017-01-27T11:22:56+0000",
            "author": "Christine Poerschke",
            "content": "Ricky Oktavianus Lazuardy - thanks for creating this issue.\n\nJames Dyer - thanks for code reviewing. ",
            "id": "comment-15842585"
        },
        {
            "date": "2017-05-08T16:06:26+0000",
            "author": "James Dyer",
            "content": "Re-open to revert for Solr 6.6, as this fix breaks the \"original\" json response format.  See SOLR-10522. ",
            "id": "comment-16000995"
        },
        {
            "date": "2017-05-08T18:28:20+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 571264bcc007a3d853f678dd7ac5b529644e938d in lucene-solr's branch refs/heads/master from jdyer1\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=571264b ]\n\nSOLR-10522: Revert \"SOLR-9972: SpellCheckComponent collations and suggestions returned as a JSON object rather than a list\"\n\nThis reverts commit 4cd3d15da8ef77ef50e2bda91ed6d3c6e87b5426. ",
            "id": "comment-16001264"
        },
        {
            "date": "2017-05-08T18:29:20+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 82b78bd95e95b95b9e7527d9396be24a0dc221df in lucene-solr's branch refs/heads/master from jdyer1\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=82b78bd ]\n\nSOLR-10522: Revert \"SOLR-9972: SpellCheckComponent collations and suggestions returned as a JSON object rather than a list\" ",
            "id": "comment-16001267"
        },
        {
            "date": "2017-05-08T18:30:49+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 68f51e6a128e0d56ae37b070834bb36e00ceca50 in lucene-solr's branch refs/heads/branch_6x from jdyer1\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=68f51e6 ]\n\nSOLR-10522: Revert \"SOLR-9972: SpellCheckComponent collations and suggestions returned as a JSON object rather than a list\"\n\nThis reverts commit 4cd3d15da8ef77ef50e2bda91ed6d3c6e87b5426. ",
            "id": "comment-16001273"
        },
        {
            "date": "2017-05-08T18:30:55+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 854347d5e09ea92f1d738458a05fc2224ca3d7aa in lucene-solr's branch refs/heads/branch_6x from jdyer1\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=854347d ]\n\nSOLR-10522: Revert \"SOLR-9972: SpellCheckComponent collations and suggestions returned as a JSON object rather than a list\" ",
            "id": "comment-16001275"
        },
        {
            "date": "2017-05-08T18:32:52+0000",
            "author": "James Dyer",
            "content": "Revert complete.  This fixes SOLR-10522.  I opened SOLR-10635 to investigate fixing the response output issue on the response writer end.  \n\nMy apologies Christine Poerschke for missing this when you asked me to look at the issue in the first place! ",
            "id": "comment-16001279"
        }
    ]
}