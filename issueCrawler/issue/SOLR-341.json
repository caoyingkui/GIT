{
    "id": "SOLR-341",
    "title": "PHP Solr Client",
    "details": {
        "affect_versions": "1.2",
        "status": "Resolved",
        "fix_versions": [
            "1.5"
        ],
        "components": [
            "clients - php"
        ],
        "type": "New Feature",
        "priority": "Trivial",
        "labels": "",
        "resolution": "Invalid"
    },
    "description": "Since I'm unable to currently update the Solr WIKI page that points to this issue and its downloads, I've left this issue open. I, however, need to note that active releases of the PHP code are now available from:\n\nhttp://code.google.com/p/solr-php-client/downloads/list\n\nIf you have any issues specific to this PHP client, please post / discuss them there (or on the solr user mailing list - I am a subscriber).",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Donovan Jimenez",
            "id": "comment-12521184",
            "date": "2007-08-20T18:20:39+0000",
            "content": "Source code, license stuff, and PHPDocs "
        },
        {
            "author": "Donovan Jimenez",
            "id": "comment-12521215",
            "date": "2007-08-20T19:56:44+0000",
            "content": "Attaching a new zip because previous had bug in Solr_Service::escape function "
        },
        {
            "author": "Donovan Jimenez",
            "id": "comment-12531853",
            "date": "2007-10-02T17:13:34+0000",
            "content": "Updates to the Solr Client:\n\n\tsearch can now take muliple parameters of the same name, such as when using facets\n\tping now can take a timeout value which acts as a maximum time allowed to wait for a response\n\tnamespace change to Apache_Solr to avoid confusion with php Solar (unrelated) project\n\tApache_Solr_Document now implements iterator interface, so its fields can be foreach'd\n\tReference implementation of a read from slave / write to master balancer has be added\n\n "
        },
        {
            "author": "Donovan Jimenez",
            "id": "comment-12561572",
            "date": "2008-01-23T03:35:33+0000",
            "content": "Updates to PHP client\n\n\tfixes Apache_Solr_Document::setMultiValue typo\n\tApache_Solr_Service_Balancer fixes\n\tApache_Solr_Service / Apache_Solr_Response now use the json.nl parameter for NamedList handling at the Solr server side instead of doing PHP client side\n\tApache_Solr_Service::commit() method signature has changed for optimize parameter\n\tIncluded a Changelog file generated from subversion\n\n "
        },
        {
            "author": "Mark Lindeman",
            "id": "comment-12571403",
            "date": "2008-02-22T13:20:26+0000",
            "content": "it would be nice to have support for custom instances of StandardRequestHandler. Apache_Solr_Service now uses a class constant SEARCH_SERVLET to build it's query.\n\nA quick fix would be:\nadd extra parameter to function search:\npublic function search($query, $offset = 0, $limit = 10, $params = array(), $search_servlet = null)\n\nand change last line of this function to:\n$searchUrl = $search_servlet==null ? $this->_searchUrl : $this->_constructUrl($search_servlet);\nreturn $this->_sendRawGet($searchUrl . $this->_queryDelimiter . $queryString);\n\nAnother wish:\nplease make your methods and object variables \"protected\" in stead of \"private\" so we can extend your great Class. "
        },
        {
            "author": "Donovan Jimenez",
            "id": "comment-12627701",
            "date": "2008-09-02T14:48:34+0000",
            "content": "Made private members and functions protected so that they could be used / overridden by subclasses. See included changelog for other changes. "
        },
        {
            "author": "Rich R",
            "id": "comment-12647555",
            "date": "2008-11-14T09:44:59+0000",
            "content": "Hi\n\nI've encountered an issue in the _documentToXmlFragment() method of the Apache_Solr_Service class.\n\nTo cut a long story short, I'm building up documents from database rows, some of which contain NULL values.  I've noticed that NULL values interfere with the following (Iterator-based) code in the above method:\n\n\nforeach ($document as $key => $value)\n{\n    ...\n\n\nWhat basically happens is that a NULL $value seems to cause the foreach loop to terminate prematurely.  Any fields 'beyond' that with the NULL value do not get added to the index.\n\nThe very simple workaround for this was to replace the above code fragment with the following:\n\n\n$keys = $document->getFieldNames();\nforeach ($keys as $key)\n{\n    $value = $document->$key;\n    ...\n\n\nAs you can see, it's essentially the same, and fully backwards-compatible.  It just avoids the issue I've been experiencing with the iterator.\n\nI'd really like to see this change make it to the code if possible (I can submit a patch if necessary).\n\nFor reference, I'm using PHP 5.3 on OSX.\n\nBest regards\nRich "
        },
        {
            "author": "Donovan Jimenez",
            "id": "comment-12647741",
            "date": "2008-11-14T22:37:31+0000",
            "content": "Rich Robinson helped me to track down an issue where he found that documents with values = false were creating prematurely exiting foreach loops (when iterating a document). I determined it was the valid() implementation of the Iterator iterface, and after fussing with it decided to just implement IteratorAggregator instead and use the pre-existing SPL ArrayIterator class. This simplifies the Apache_Solr_Document code and now all document values are looped even when some are false. "
        },
        {
            "author": "Pieter Berkel",
            "id": "comment-12650095",
            "date": "2008-11-24T02:14:20+0000",
            "content": "Hi Donovan,\n\nGreat work on the PHP client library, however I noticed that there is no way to specify document- and/or field-level boost values when creating and indexing documents:\n\nhttp://wiki.apache.org/solr/UpdateXmlMessages \n\nPerhaps Apache_Solr_Document could have a constructor method with an optional parameter for setting the document boost:\n\npublic function __construct($boost = '1.0') {\n\nNot so sure how the field-level boost should be set, maybe add methods setFieldBoost($key) and getFieldBoost($key) to Apache_Solr_Document?\n\nIf necessary I can also submit code patches for these changes.\n\ncheers,\nPiete "
        },
        {
            "author": "Donovan Jimenez",
            "id": "comment-12650381",
            "date": "2008-11-24T23:32:17+0000",
            "content": "Added additional functionality to Apache_Solr_Document and Apache_Solr_Service for document and field based boost values.\n\n\n$doc = new Apache_Solr_Document();\n\n// can set document boost \n$doc->setBoost(1.5);\n\n// can set a field boost at value assignment time\n$doc->setField('foo', 'bar', 1.3);\n\n// or as a separate call\n$doc->setFieldBoost('foo', 3.141579);\n\n "
        },
        {
            "author": "Pieter Berkel",
            "id": "comment-12650781",
            "date": "2008-11-25T23:04:56+0000",
            "content": "Thanks for the quick response, just wanted to check that you uploaded the updated class files? I couldn't find the new setBoost() / setField() / setFieldBoost() methods in the Document class located in SolrPhpClient.2008-11-24.zip "
        },
        {
            "author": "Donovan Jimenez",
            "id": "comment-12650811",
            "date": "2008-11-26T00:11:16+0000",
            "content": "You are correct, I didn't zip up the updated files.  I did the work on a branch, but my build script takes from trunk.\n\nThis new one should be what you want - i double checked , sorry for the confusion. "
        },
        {
            "author": "Mark Lindeman",
            "id": "comment-12668470",
            "date": "2009-01-29T13:48:13+0000",
            "content": "in Apache/Solr/Document.php on line 218:\n$this->_fieldBoosts = $boost;\n\nthis should be:\n$this->_fieldBoosts[$key] = $boost;\n\nIf I do not use the $fieldboost parameter in setField() method, than I end up with a document full off boost=\"\" parameters which triggers errors in Solr 1.3 "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12674116",
            "date": "2009-02-17T07:29:26+0000",
            "content": "Marked for 1.5 "
        },
        {
            "author": "Nick Martin",
            "id": "comment-12680694",
            "date": "2009-03-11T00:00:18+0000",
            "content": "Revision 5 of PhpSolrClient is used by the apachesolr Drupal module (http://drupal.org/project/apachesolr). That revision of the code is absent from this site, but the apachesolr readme.txt lists downloading code from here as a viable option. Unfortunately the older versions of the code posted here do not work. Could you please post revision 5 here?\n\nThanks! "
        },
        {
            "author": "Peter Wolanin",
            "id": "comment-12681893",
            "date": "2009-03-13T20:51:13+0000",
            "content": "r6 has been bundled into a release:  http://code.google.com/p/solr-php-client/downloads/list\n\nWe'll test this with the Drupal module soon, but is likely to work fine. "
        },
        {
            "author": "Donovan Jimenez",
            "id": "comment-12681907",
            "date": "2009-03-13T21:57:40+0000",
            "content": "updated issue text to reflect new file hosting on Google Code. "
        },
        {
            "author": "Donovan Jimenez",
            "id": "comment-12682439",
            "date": "2009-03-16T20:05:20+0000",
            "content": "Now that the Solr integration in PHP wiki page is updated to reflect the new download location for the client this issue no longer needs to stay open. "
        }
    ]
}