{
    "id": "SOLR-2630",
    "title": "XsltUpdateRequestHandler",
    "details": {
        "affect_versions": "3.3,                                            4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "3.4",
            "4.0-ALPHA"
        ],
        "components": [
            "update"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "An update request handler that can accept a tr param, allowing the indexing of any XML content that is passed to solr, so long as there is an XSLT stylesheet in solr/conf/xslt that can transform it to the <add><doc/></add> format.\n\nCould be used, for example, to allow Solr to ingest docbook directly, without any preprocessing.",
    "attachments": {
        "xslt-update-handler.patch": "https://issues.apache.org/jira/secure/attachment/12484867/xslt-update-handler.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Upayavira",
            "id": "comment-13058537",
            "date": "2011-07-01T12:52:20+0000",
            "content": "Patch for XsltUpdateRequestHandler, along with a test case for it "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13058540",
            "date": "2011-07-01T13:00:22+0000",
            "content": "XML is binary data, so you should not convert it to Strings. Ideally the already transformed DOM tree or SAX stream would directly be passed to the importer. I know, this is not easily possible, so the most correct way would be to pass the binary byte[] dierectly and reparse.\n\nI will try to investigate to directly pass the SAX events / XSL DOM tree around, which is possible, as transformer API can also directly pipe to StAX, used by the underlying XMLImporter. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13058541",
            "date": "2011-07-01T13:03:14+0000",
            "content": "Also you miss to pass the content type charset to the StreamSource. I will post a improved patch fixing both problems soon.\n\nThanks for the patch! "
        },
        {
            "author": "Upayavira",
            "id": "comment-13058552",
            "date": "2011-07-01T13:45:43+0000",
            "content": "Great! I was sure I'd missed stuff. Happy to improve stuff here too (e.g. port to 3.x). "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13058581",
            "date": "2011-07-01T14:52:03+0000",
            "content": "Here improved patch. This impl does not internally serialize the XML again to a stream and read it using StAX; this one uses the XSL ResultTreeFragment (RTF) which is always built as a DOM tree by XSL transformers and feeds it to StAX. So we dont need any stupid serialize/deserialize step inbetween. This patch also respects the content-type parameter of the input like XMLLoader. The intermediate buffering is needed because we need to change from push to pull APIs.\n\nThis patch also fixes a small issue in XSLTResponseWriter, as it also misses to correctly log transformation warn/error events to slf4j. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13058583",
            "date": "2011-07-01T14:53:51+0000",
            "content": "Merging to 3.x should be simple, too! "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13058666",
            "date": "2011-07-01T17:38:49+0000",
            "content": "Committed trunk revision: 1141999\nCommitted 3.x revision: 1142003\n\nThanks Upayavira, the idea is great and also of use for myself (if PANGAEA/panFMP moves to Solr, but since we have facetting now in Lucene I don't think we will do this step)! "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13058679",
            "date": "2011-07-01T17:59:26+0000",
            "content": "Hmmm... from a user perspective does it really make sense for this to be an entirely new RequestHandler?\n\nwouldn't it make more sense if users could just continue to use XmlUpdateRequestHandler along with a tr param indicating the transform to apply first? "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13058681",
            "date": "2011-07-01T18:02:51+0000",
            "content": "I was thinking about that, it would be easy to implement as the current code would simply be moved to XMLLoader?\n\nShould I add patch relative to whats currently committed? "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13058690",
            "date": "2011-07-01T18:18:16+0000",
            "content": "On the other hand, this one is similar to XSLTResponseWriter which also is separate to XMLResponseWriter. XMLResponseWriter could also take an optional tr param and then transform? So the current solution is more consistent. "
        },
        {
            "author": "Upayavira",
            "id": "comment-13058705",
            "date": "2011-07-01T19:00:31+0000",
            "content": "I considered the same thing, making the XmlUpdateRequestHandler accept tr, but opted not to for the same reason as Uwe. Which ever way, consistency is a good thing! "
        },
        {
            "author": "David Smiley",
            "id": "comment-13102849",
            "date": "2011-09-12T17:56:23+0000",
            "content": "Just a side comment...\n  I've been posting arbitrary XSLT and transforming it before this patch using the DIH ContentStreamDataSource: http://wiki.apache.org/solr/DataImportHandler#ContentStreamDataSource  "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106208",
            "date": "2011-09-16T14:48:51+0000",
            "content": "bulk close for 3.4 "
        }
    ]
}