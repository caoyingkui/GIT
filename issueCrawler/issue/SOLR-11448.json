{
    "id": "SOLR-11448",
    "title": "Implement an option in collection commands to wait for command results",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "AutoScaling"
        ],
        "type": "Sub-task",
        "fix_versions": [
            "7.2",
            "master (8.0)"
        ],
        "affect_versions": "7.2",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "In order to reliably track results and impact of executing collection-level commands in the autoscaling framework we need an option to execute the requested operation (eg. move replica) and then wait for the operation results to actually take effect (the replica has been moved AND it became active).\n\nThis is different than executing commands synchronously, in which case the API only waits for the operation itself to be completed (eg. moving the replica succeeded) but it does not wait for the final effects of this operation to take place (eg. the replica becomes active).",
    "attachments": {
        "SOLR-11448.diff": "https://issues.apache.org/jira/secure/attachment/12892636/SOLR-11448.diff"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-17T15:52:15+0000",
            "content": "Patch adding waitForFinalState option to commands that may take significant time to execute. ",
            "author": "Andrzej Bialecki",
            "id": "comment-16207823"
        },
        {
            "date": "2017-10-18T14:29:00+0000",
            "content": "Commit 8b4ab2644d726a1af1b8e1a5d38a6a79b76f6641 in lucene-solr's branch refs/heads/master from Andrzej Bialecki \n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8b4ab26 ]\n\nSOLR-11448: Implement an option in collection commands to wait for final results. ",
            "author": "ASF subversion and git services",
            "id": "comment-16209421"
        },
        {
            "date": "2017-10-18T14:30:05+0000",
            "content": "Commit af42560f70ba376fb7d4c951d2b908e52e730ba5 in lucene-solr's branch refs/heads/branch_7x from Andrzej Bialecki \n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=af42560 ]\n\nSOLR-11448: Implement an option in collection commands to wait for final results. ",
            "author": "ASF subversion and git services",
            "id": "comment-16209423"
        },
        {
            "date": "2017-12-04T05:28:22+0000",
            "content": "\n\tDoes waitForFinalState work with async as well ? i.e async will only return success when a replica has become active?\n\tIs this param meant for users as well? I can imagine this being useful for users who are building their automation tools ? In which case should we add it to the ref guide?\n\n ",
            "author": "Varun Thacker",
            "id": "comment-16276302"
        },
        {
            "date": "2017-12-04T16:58:34+0000",
            "content": "This option works with async, with the caveat that for simple operations (that don't involve multiple calls or multiple parallel ops) this option is at odds with async - because it will essentially make the operation execute synchronously.\n\nGood point on the ref guide docs - I'll add them shortly. Thanks! ",
            "author": "Andrzej Bialecki",
            "id": "comment-16277078"
        },
        {
            "date": "2017-12-13T20:33:58+0000",
            "content": "Commit 44cc0defe8f9ba884c50d1c6d2c1cd5a3eb7bf32 in lucene-solr's branch refs/heads/master from Cassandra Targett\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=44cc0de ]\n\nSOLR-11753: copy edits; add docs for SOLR-11448 ",
            "author": "ASF subversion and git services",
            "id": "comment-16289844"
        },
        {
            "date": "2017-12-13T20:34:55+0000",
            "content": "Commit 4b45328153df62a46291c7321002ef5248a65b57 in lucene-solr's branch refs/heads/branch_7x from Cassandra Targett\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4b45328 ]\n\nSOLR-11753: copy edits; add docs for SOLR-11448 ",
            "author": "ASF subversion and git services",
            "id": "comment-16289847"
        },
        {
            "date": "2017-12-13T20:35:31+0000",
            "content": "Commit bca54cad5a9f6a80800944fd5bd585b68acde8c8 in lucene-solr's branch refs/heads/branch_7_2 from Cassandra Targett\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bca54ca ]\n\nSOLR-11753: copy edits; add docs for SOLR-11448 ",
            "author": "ASF subversion and git services",
            "id": "comment-16289850"
        },
        {
            "date": "2017-12-21T16:44:58+0000",
            "content": "Andrzej Bialecki  Would this feature make SOLR-8416 obsolete?  At least I am looking expressly at CollectionsHandler.invokeAction calling waitForActiveCollection on line 252.  Instead we could pass CommonAdminParams.WAIT_FOR_FINAL_STATE as a param, or in fact make this default to true?  Although there is a distinction... waitForActiveCollection uses a checkLeaderOnly setting and thus could return sooner/faster.  The last sentence in this issue makes the distinction between \"completed\" vs \"active\" so I suppose waitForActiveCollection is still needed.  I guess I hoped for CommonAdminParams.WAIT_FOR_FINAL_STATE to be something more than it may be... why wouldn't we always want to wait for final state (assuming this isn't an async call)? ",
            "author": "David Smiley",
            "id": "comment-16300258"
        },
        {
            "date": "2018-01-02T16:12:48+0000",
            "content": "why wouldn't we always want to wait for final state (assuming this isn't an async call)?\nDavid Smiley the purpose of the waitForFinalState flag is somewhat different - it just ensures that all shards have leaders, OR that any replicas that were being moved have indeed been moved successfully and became active. The reason for this flag is to make sure the autoscaling actions leave collections in stable state when they report success (or failure) - reporting success prematurely, while some replicas are still recovering, would cause the subsequent autoscaling actions to work with a cluster state that is bound to change while the autoscaling plan is being computed (which itself may take several seconds) - ultimately causing the newly computed plan to be either invalid or suboptimal.\n\nWhen collection commands are issued manually this timing is not so important - in fact, defaulting to false allows the command to report success sooner, and it's usually acceptable to user that the cluster state may still undergo changes as replicas gradually recover and become active. ",
            "author": "Andrzej Bialecki",
            "id": "comment-16308297"
        },
        {
            "date": "2018-01-02T18:34:56+0000",
            "content": "Okay.\n\nand it's usually acceptable to user that the cluster state may still undergo changes as replicas gradually recover and become active.\n\nSo long as such changes don't impact the apparent usability of the collection (ability to search and add docs without error) then I agree, otherwise I don't.  If we don't then do you mean sometimes the user may not care?  Well that's what async is for; no?\n\nIt seems like a wart to see CollectionsHandler check that a collection creation is being performed and then call a waitForActiveCollection... this is an exceptional case instead of being agnostic of the command.  I think you'd see what I mean if you look over there in CollectionsHandler.  Instead, I propose CreateCollectionCmd actually waits sufficiently long for the collection to be usable at the point it returns (thus move this method over there).  Would it need a new parameter to know when to not wait or does \"async\" imply as much?  But even in async case... it might as well wait for things to complete so that if the async status is finally done then the collection is truly usable. ",
            "author": "David Smiley",
            "id": "comment-16308475"
        }
    ]
}