{
    "id": "LUCENE-7351",
    "title": "BKDWriter should compress doc ids when all values in a block are the same",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "6.2",
            "7.0"
        ],
        "priority": "Minor",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "BKDWriter writes doc ids using 4 bytes per document. I think it should compress similarly to postings when all docs in a block have the same packed value. This can happen either when a field has a default value which is common across documents or when quantization makes the number of unique values so small that a large index will necessarily have blocks that all contain the same value (eg. there are only 63490 unique half-float values).",
    "attachments": {
        "LUCENE-7351.patch": "https://issues.apache.org/jira/secure/attachment/12813676/LUCENE-7351.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15351092",
            "author": "Adrien Grand",
            "date": "2016-06-27T14:16:15+0000",
            "content": "I have been experimenting with the attached patch, which compresses doc ids based on the number of required bytes to store them (it only specializes 8, 16, 24 and 32 bits per doc id) and also adds delta-compression for blocks whose values are all the same. The IndexAndSearchOpenStreetMaps reported a slow down of 1.7% for the box benchmark (72.3 QPS -> 71.1 QPS) but storage requirements decreased by 9.1% (635MB -> 577MB). The storage requirements improve even more with types that require fewer bytes (LatLonPoint requires 8 bytes per value). For instance indexing 10M random half floats with the patch requires 28MB vs 43MB on master (-35%). "
        },
        {
            "id": "comment-15357361",
            "author": "Adrien Grand",
            "date": "2016-06-30T16:11:47+0000",
            "content": "Updated patch. It now specializes both reading doc ids into an array and feeding a visitor, which seems to help get the performance back to what it is on master, or at least less than 1% slower (not easy to distinguish minor slowdowns to noise at this stage).\n\nIt has 3 cases:\n\n\tincreasing doc ids, which is expected to happen for either sorted segments or when all docs in a block have the same value. In that case, we delta-encode using vints.\n\tdoc ids requiring less than 24 bits, which are encoded on 3 bytes.\n\tdoc ids requiring less than 32 bits, which are encoded on 4 bytes like on master today.\n\n\n\nI think it's ready to go? "
        },
        {
            "id": "comment-15357388",
            "author": "Robert Muir",
            "date": "2016-06-30T16:20:37+0000",
            "content": "I like this better than the last patch, I think the optimization is more general. \n\nI think in the base test class, tesMostEqual() is a mistake? "
        },
        {
            "id": "comment-15357478",
            "author": "Adrien Grand",
            "date": "2016-06-30T17:06:35+0000",
            "content": "Hmm I can remove both actually, they do not bring value now that the detection of whether doc ids are sorted is based on the doc ids themselves rather than the fact that there is a single value in a block. "
        },
        {
            "id": "comment-15360973",
            "author": "ASF subversion and git services",
            "date": "2016-07-04T07:49:54+0000",
            "content": "Commit 01de73bc0a1b315bbbe4df046b5c0661cec8de2e in lucene-solr's branch refs/heads/branch_6x from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=01de73b ]\n\nLUCENE-7351: Doc id compression for points. "
        },
        {
            "id": "comment-15360975",
            "author": "ASF subversion and git services",
            "date": "2016-07-04T07:49:57+0000",
            "content": "Commit d66e9935c39ed859659de46d3d5cfb66f2279bd4 in lucene-solr's branch refs/heads/master from Adrien Grand\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d66e993 ]\n\nLUCENE-7351: Doc id compression for points. "
        },
        {
            "id": "comment-15439060",
            "author": "Michael McCandless",
            "date": "2016-08-26T14:00:53+0000",
            "content": "Bulk close resolved issues after 6.2.0 release. "
        }
    ]
}