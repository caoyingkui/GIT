{
    "id": "SOLR-930",
    "title": "SolrCore.close() : Warn in the logger when the internal reference count is > 0",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "SolrCore.close() -> Add a warning statement when the internal reference count is > 0. ( as opposed to 0, as expected ) -",
    "attachments": {
        "SOLR-930.patch": "https://issues.apache.org/jira/secure/attachment/12396433/SOLR-930.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Karthik K",
            "id": "comment-12657916",
            "date": "2008-12-18T21:36:11+0000",
            "content": "\u2014 src/java/org/apache/solr/core/SolrCore.java\t(revision 727831)\n\n   public void close() {\n     int count = refCount.decrementAndGet();\n\n\tif (count > 0) return;\n+    if (count > 0) \n{\n+      log.warn(\"Attempted close on \" + this + \" did not succeed because the new reference count \" + count + \" is > 0. \");\n+      return;\n+    }\n\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12657933",
            "date": "2008-12-18T22:41:04+0000",
            "content": "added in trunk.\nthanks Kay "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12658020",
            "date": "2008-12-19T06:32:39+0000",
            "content": "Ryan, after this commit, I see the following message on almost every request to Solr. Just use the example jetty and request any JSP (stats/info) and you will find the warning in the log. Perhaps this logging is not needed?\n\n\nWARNING: Attempted close on org.apache.solr.core.SolrCore@b86944 did not succeed because the new reference count 1 is > 0\n "
        },
        {
            "author": "Karthik K",
            "id": "comment-12658105",
            "date": "2008-12-19T15:47:00+0000",
            "content": "I believe the fact that refcount > 0 while closing is still a warning. If this were frequent enough - then probably some other resource manager, after incrementing the count is not decrementing the same after the use . We need to address that separately as opposed to commenting this one out.  "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12658107",
            "date": "2008-12-19T15:53:54+0000",
            "content": "for now, i will just change the log level to \"debug\" "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12658138",
            "date": "2008-12-19T17:42:56+0000",
            "content": "The count being greater than zero is not an error condition - close() is called on every request.\nThis patch should be reverted. "
        },
        {
            "author": "Kay Kay",
            "id": "comment-12658140",
            "date": "2008-12-19T17:58:07+0000",
            "content": "If it were not an error condition - something has to be abnormal since we are not releasing resources / calling closeHooks - upon close and return prematurely right at the beginning of the function. \n\nSo - it indicates a possible resource leak that needs to be looked into, (possibly elsewhere ). \n\nI am not for reverting / changing the logging level . \n "
        },
        {
            "author": "Karthik K",
            "id": "comment-12658144",
            "date": "2008-12-19T18:20:00+0000",
            "content": "Reopening the issue - since close() is important to keep track of if the SolrCore is active ( if we were to re-register the core ,etc.) \n\nIf count > 0 - close() returns silently as of now. \n\nIf count < 0 , close() logs an error ( previously - it used to throwing an exception at least , to signify that we are into uncharted territory ). \n\nWith the current behavior - it is impossible to actually know if close() indeed completed successfully with counter set to 0, and it will be hard to track memory references / reachability of object during memory leaks with the current behavior.  "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12658148",
            "date": "2008-12-19T18:45:58+0000",
            "content": "1) i think you are miss-understanding the point of close() ... it's called by every person who uses the core once they are done with it to indicate they are done with it.  the resources are only truely freed once the count returns to 1 ... note the javadocs of hte method.\n\n2) if you want to know if all the resources have been freed (ie: everyone using the core has closed it) use \"isClosed()\"\n\n\nperhaps the confusion here is just the legacy name (close() was named back when SolrCore was a singleton i believe).\n "
        },
        {
            "author": "Karthik K",
            "id": "comment-12658153",
            "date": "2008-12-19T18:57:46+0000",
            "content": "Thanks Hoss . That clarifies. \n\nAdded @see to the javadoc to clarify more about it. Also - modified the javadoc about throwing exceptions if refCount < 0  (the code does not do it anymore ). \n\nThe revised patch should be javadoc changes relevant to the part.  "
        },
        {
            "author": "Karthik K",
            "id": "comment-12658154",
            "date": "2008-12-19T18:58:26+0000",
            "content": "Updating javadoc about not throwing exceptions . \n\nAdded @see isClosed() for cross-reference.  "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12666029",
            "date": "2009-01-22T01:33:10+0000",
            "content": "Kay: @see tags can't contain \n{@link}\n tags (at least not in Javadoc 1.5)\n\nI took some of the text from your patch and reworked it into some new javadocs that are a bit more explicit about what exactly is going on under the hood...\n\nCommitted revision 736518. "
        },
        {
            "author": "Karthik K",
            "id": "comment-12666154",
            "date": "2009-01-22T14:32:41+0000",
            "content": "\n\n\n Kay: @see tags can't contain \n{@link}\n tags (at least not in Javadoc 1.5)\n\n\n\n\n\nOops - I was using java 6 (javadoc compiler). Thanks for the clarification in the docs.  "
        }
    ]
}