{
    "id": "SOLR-9363",
    "title": "TestStressCloudBlindAtomicUpdates.test_dv_stored() failure",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.2",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "My Jenkins found a reproducing seed - though note that in order to reproduce I had to a) run the test at the same SHA as the one listed, and b) leave off -Dtests.method=test_dv_stored; under those conditions it failed both times I ran it:\n\n\nChecking out Revision 53a34b312e78ce6f56c0bb41304ac834b28b9534 (refs/remotes/origin/master)\n[...]\n  [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestStressCloudBlindAtomicUpdates -Dtests.method=test_dv_stored -Dtests.seed=60C9AAFC94FD8921 -Dtests.multiplier=2 -Dtests.nightly=true -Dtests.slow=true -Dtests.linedocsfile=/home/jenkins/lucene-data/enwiki.random.lines.txt -Dtests.locale=id -Dtests.timezone=America/Puerto_Rico -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] FAILURE 9.09s J0 | TestStressCloudBlindAtomicUpdates.test_dv_stored <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: expected:<332> but was:<205>\n   [junit4]    >        at __randomizedtesting.SeedInfo.seed([60C9AAFC94FD8921:F2F5CB7828BAB4F9]:0)\n   [junit4]    >        at org.apache.solr.cloud.TestStressCloudBlindAtomicUpdates.checkField(TestStressCloudBlindAtomicUpdates.java:253)\n   [junit4]    >        at org.apache.solr.cloud.TestStressCloudBlindAtomicUpdates.test_dv_stored(TestStressCloudBlindAtomicUpdates.java:192)\n   [junit4]    >        at java.lang.Thread.run(Thread.java:745)",
    "attachments": {
        "Lucene-Solr-Nightly-master.271.log.gz": "https://issues.apache.org/jira/secure/attachment/12821342/Lucene-Solr-Nightly-master.271.log.gz",
        "SOLR-9363.patch": "https://issues.apache.org/jira/secure/attachment/12821478/SOLR-9363.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-08-01T15:41:00+0000",
            "author": "Steve Rowe",
            "content": "Attaching the compressed log, trimmed to include just the failing test output. ",
            "id": "comment-15402270"
        },
        {
            "date": "2016-08-01T17:46:15+0000",
            "author": "Hoss Man",
            "content": "I've started looking into his.\n\nSo far, my experience mostly matches sarowe's...\n\nin order to reproduce I had to a) run the test at the same SHA as the one listed, and b) leave off -Dtests.method=test_dv_stored; under those conditions it failed both times I ran it\n\n...except that i have definitely seen the failure reproduce multiple times on the HEAD of master, w/o needing to explicitly check out that GIT SHA (which is a relief, because the only diff between 53a34b312 and d86c369533 (current HEAD) is some css and html changes to the admin UI which would have been confusing as hell)\n\n\nSince the test passes when -Dtests.method=test_dv_stored is included in the run line, that suggests that the failure is related to some sort of state left over from previous method runs that doesn't exist when running a single test \u2013 this is certainly possible since it's a cloud test that re-uses a MiniSolrCloudCluster and collection \u2013 it's certainly where i'll start digging into the logs.\n\n\u2014\n\nOne other note: All the failures i see happen at the same point as sarowe, and with teh same \"expected\" value, but the actual value seems to vary...\n\n\n   [junit4]    > Throwable #1: java.lang.AssertionError: expected:<332> but was:<264>\n\n   [junit4]    > Throwable #1: java.lang.AssertionError: expected:<332> but was:<330>\n\n   [junit4]    > Throwable #1: java.lang.AssertionError: expected:<332> but was:<264>\n\n   [junit4]    > Throwable #1: java.lang.AssertionError: expected:<332> but was:<263>\n\n ",
            "id": "comment-15402486"
        },
        {
            "date": "2016-08-02T00:08:16+0000",
            "author": "Hoss Man",
            "content": "I should have mentioned earlier, but the particular assertion that fails is before the test even gets started on anything remotely interesting related to atomic updates \u2013 it's a beginning of the test sanity check that the index is starting with the expected number of documents.\n\nAfter getting hung up on a small red herring for a bit (git bisect identified a commit related to LUCENE-7390 \u2013 which has to do with IndexWriter buffering \u2013 as being where this seed started fail, but it turns out RandomCodec was modified in that commit to consume more entropy, which makes it meaninless if this seed passed prior to that commit) I've been wading through things and i think ultimatley i've identified 2 unrelated problems:\n\n\n\tTestInjection's use of Random doesn't create reproducible sequences of events when running individual test methods vs an entire class\n\treplicas which are in the middle of recovery will ignore explicit commits (ie: Ignoring commit while not ACTIVE - state: BUFFERING replay: false) but will aparently still participate in search requests.\n\n\n\n...neither of which really has anything to do with atomic updates.\n\nI'll file more detailed bugs on both of these issues, in the meantime i'm pretty sure that in this test i can work around the combination of #1 + #2 ... details once i do some experimenting. ",
            "id": "comment-15403074"
        },
        {
            "date": "2016-08-02T01:23:48+0000",
            "author": "Hoss Man",
            "content": "Here's a patch i'm currently hammering at on my laptop.\n\nbecause of hte nature of the change, the old seed no longer produces the same sequence of events, but using -Dtests.nightly=true -Dtests.multiplier=3 -Dtests.asserts=true should help tickle TestInjection related \"failures\" as much as possible (due to the use of atLeast(...) and usually()) ",
            "id": "comment-15403178"
        },
        {
            "date": "2016-08-02T16:01:48+0000",
            "author": "ASF subversion and git services",
            "content": "Commit c17605b4a9978311b6b231f202d70dd800e473e6 in lucene-solr's branch refs/heads/branch_6x from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c17605b ]\n\nSOLR-9363: tweak test to work around SOLR-9366 + SOLR-9367 since those issues are not key to what's being tested here\n\n(cherry picked from commit 04321c401c6584395c76c509f8513c5e5e4730ee) ",
            "id": "comment-15404246"
        },
        {
            "date": "2016-08-02T16:01:53+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 04321c401c6584395c76c509f8513c5e5e4730ee in lucene-solr's branch refs/heads/master from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=04321c4 ]\n\nSOLR-9363: tweak test to work around SOLR-9366 + SOLR-9367 since those issues are not key to what's being tested here ",
            "id": "comment-15404249"
        },
        {
            "date": "2016-08-26T13:59:34+0000",
            "author": "Michael McCandless",
            "content": "Bulk close resolved issues after 6.2.0 release. ",
            "id": "comment-15438998"
        }
    ]
}