{
    "id": "SOLR-12083",
    "title": "RealTimeGetComponent fails for INPLACE_UPDATE when Cdcr enabled",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "CDCR"
        ],
        "type": "Bug",
        "fix_versions": [
            "7.3"
        ],
        "affect_versions": "7.2,                                            7.2.1",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "When we were adding bi-directional sync support in CDCR (\u00a0SOLR-11003 ) we changed the CDCR Update Log codec to write an extra bits.\u00a0\n\nWhen we use the RealTimeGet component on a cluster running CDCR and have in-place updates in the update log we will falsely trip an assert thus causing the\u00a0request\u00a0to fail\n\nHere's the proposed change\n\n-                 assert entry.size() == 5;\n+                 if (ulog instanceof CdcrUpdateLog) {\n+                   assert entry.size() == 6;\n+                 }\n+                 else {\n+                   assert entry.size() == 5;\n+                 }",
    "attachments": {
        "SOLR-12083-B-wo-test-framework.patch": "https://issues.apache.org/jira/secure/attachment/12914295/SOLR-12083-B-wo-test-framework.patch",
        "SOLR-12083.patch": "https://issues.apache.org/jira/secure/attachment/12914200/SOLR-12083.patch",
        "add_support_for_random_ulog_in_tests.patch": "https://issues.apache.org/jira/secure/attachment/12914353/add_support_for_random_ulog_in_tests.patch",
        "SOLR-12083-A-within-test-framework.patch": "https://issues.apache.org/jira/secure/attachment/12914354/SOLR-12083-A-within-test-framework.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-03-13T06:20:21+0000",
            "content": "I'll think about this more but what if we starting randomizing between the TransactionLog and\u00a0 CdcrTransactionLog for some of our tests.\u00a0\n\nFor example in\u00a0TestRealTimeGet what if we randomized between\u00a0TransactionLog and\u00a0CdcrTransactionLog as the implementation .\u00a0That would test both implementations for real time GET's\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16396602"
        },
        {
            "date": "2018-03-13T11:14:27+0000",
            "content": "If we can randomise between:\n\n    <updateLog>\n      <str name=\"dir\">${solr.ulog.dir:}</str>\n      <str name=\"maxNumLogsToKeep\">${solr.ulog.maxNumLogsToKeep:10}</str>\n      <str name=\"numRecordsToKeep\">${solr.ulog.numRecordsToKeep:100}</str>\n      <int name=\"tlogDfsReplication\">${solr.ulog.tlogDfsReplication:2}</int>\n    </updateLog>\n\n\n\n    <updateLog class=\"solr.CdcrUpdateLog\">\n      <str name=\"dir\">${solr.ulog.dir:}</str>\n      <str name=\"maxNumLogsToKeep\">${solr.ulog.maxNumLogsToKeep:10}</str>\n      <str name=\"numRecordsToKeep\">${solr.ulog.numRecordsToKeep:100}</str>\n      <int name=\"tlogDfsReplication\">${solr.ulog.tlogDfsReplication:2}</int>\n    </updateLog>\n\n\nin our solrconfig's. In-place property substitution doesn't work with XML arguments, at least I don't know how to do it. like:\n\n<updateLog class=${substitute.prop}>\n\n\nVarun Thacker: unfortunately TestRealTimeGet doesn't fail when we have CdcrUpdateLog, but TestInPlaceUpdatesDistrib do, which essentially fails for RealTimeGetComponent. Please find the updated patch. ",
            "author": "Amrit Sarkar",
            "id": "comment-16396833"
        },
        {
            "date": "2018-03-13T19:23:35+0000",
            "content": "I have uploaded three patches with different designs:\n\n1. add_support_for_random_ulog_in_tests.patch : This patch has nothing to do with the problem here but randomizing UpdateLog b/w 'UpdateLog' and 'CdcrUpdateLog'. We don't need to do 'HdfsUpdateLog' as it gets picked up anyway when directoryFactory is HDFSDirectoryFactory.\n\n2. SOLR-12083-B-wo-test-framework.patch : This patch fixes the problem by randomising the UpdateLog b/w 'UpdateLog' and 'CdcrUpdateLog' within the TestInPlaceUpdatesDistrib which validates the fix I have put in place.\n\n3. SOLR-12083-A-within-test-framework.patch : This patch extends the 'add_support_for_random_ulog_in_tests' with the fix in place. ",
            "author": "Amrit Sarkar",
            "id": "comment-16397501"
        },
        {
            "date": "2018-03-14T04:57:46+0000",
            "content": "Thanks Amrit for working on this!\n\nI kind of like the SOLR-12083-A-within-test-framework.patch approach better\n\nCouple of things about the SOLR-12083-A-within-test-framework.patch\u00a0patch\n\n\tAny reason why we don't randomzie the update log in TestInPlaceUpdatesDistrib like we do in the other approach?\n\tCan we log in\u00a0randomizeUpdateLogClsProp which update log is being used\n\tA small refactor could be instead of using a sysprop and then reading the sysprop in\u00a0SolrTestCaseJ4 to call\u00a0randomizeUpdateLogClsProp , why not just make\u00a0randomizeUpdateLogClsProp and\u00a0clearUpdateLogClsProp public and call them directly in the beforeClass/afterClass method of\u00a0TestInPlaceUpdatesDistrib / UpdateLogTest . What do you think?\n\n\n\nAlso when uploading a patch with the changes folded in can you please call the patch\u00a0SOLR-12083.patch ",
            "author": "Varun Thacker",
            "id": "comment-16398107"
        },
        {
            "date": "2018-03-14T06:27:16+0000",
            "content": "Varun Thacker, thank you for the feedback.\n\nAny reason why we don't randomzie the update log in TestInPlaceUpdatesDistrib like we do in the other approach?\nRandomization of UpdateLog should be part of underlying test framework instead of developer setting it in tests, as every component should work with CdcrUpdateLog, which works with UpdateLog, unless you are testing UpdateLog itself. Like in the patch, we enforce 'solr.UpdateLog' for UpdateLogTest. Everytime now a new test is written and 'solrconfig-tlog.xml' is used, it will automatically test both for UpdateLog and CdcrUpdateLog without the need of developer of mentioning it specially.\n\nCan we log in randomizeUpdateLogClsProp which update log is being used\nWill do that.\n\nA small refactor could be instead of using a sysprop and then reading the sysprop in SolrTestCaseJ4 to call randomizeUpdateLogClsProp , why not just make randomizeUpdateLogClsProp and clearUpdateLogClsProp public and call them directly in the beforeClass/afterClass method of TestInPlaceUpdatesDistrib / UpdateLogTest . What do you think?\nI can make them public, but in TestInPlaceUpdatesDistrib, there is no need to specify as this randomization should be smart. ",
            "author": "Amrit Sarkar",
            "id": "comment-16398144"
        },
        {
            "date": "2018-03-14T18:33:05+0000",
            "content": "Final patch which I think is ready! Thanks Amrit\n\nRunning tests and precommit now. I plan on committing it to master and branch7x within the next few hours. The current CHANGES entry for the change is under 7.3\u00a0\n\nIf Jenkins is happy today I'll check with the RM if it's okay to backport it to the release branch. If it's too late then i'll move the CHANGES to 7.4 on master and branch7x ",
            "author": "Varun Thacker",
            "id": "comment-16399065"
        },
        {
            "date": "2018-03-14T19:51:31+0000",
            "content": "precommit, all tests,\u00a0beasted\u00a010 rounds of TestInPlaceUpdatesDistrib and TestRealTimeGet all\u00a0passed\n\nCommitting shortly ",
            "author": "Varun Thacker",
            "id": "comment-16399205"
        },
        {
            "date": "2018-03-14T19:58:44+0000",
            "content": "Commit 57524f1d4179f3ab57ffa53ba8f5e4dd1e198a11 in lucene-solr's branch refs/heads/master from Varun Saxena\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=57524f1 ]\n\nSOLR-12083: Fix RealTime GET to work on a cluster running CDCR when using Solr's in-place updates ",
            "author": "ASF subversion and git services",
            "id": "comment-16399216"
        },
        {
            "date": "2018-03-14T19:59:46+0000",
            "content": "Commit f8bbfcdc75af2fe9cfbd6e507fba81d720406402 in lucene-solr's branch refs/heads/branch_7x from Varun Saxena\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f8bbfcd ]\n\nSOLR-12083: Fix RealTime GET to work on a cluster running CDCR when using Solr's in-place updates\n\n(cherry picked from commit 57524f1) ",
            "author": "ASF subversion and git services",
            "id": "comment-16399218"
        },
        {
            "date": "2018-03-14T20:06:22+0000",
            "content": "Until\u00a0INFRA-15850\u00a0is resolved the user tagged with the commit will not be me\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16399224"
        },
        {
            "date": "2018-03-16T21:04:01+0000",
            "content": "Commit c4d0223ad40d36fd908bb0d3b291763425fe69b4 in lucene-solr's branch refs/heads/master from Varun Saxena\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c4d0223 ]\n\nSOLR-12083: Fix PeerSync, Leader Election failures and CDCR checkpoint inconsistencies on a cluster running CDCR ",
            "author": "ASF subversion and git services",
            "id": "comment-16402531"
        },
        {
            "date": "2018-03-16T21:04:50+0000",
            "content": "Commit 033afbfbbbbaad0fc0b0a48967765cddf9e2b455 in lucene-solr's branch refs/heads/branch_7x from Varun Saxena\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=033afbf ]\n\nSOLR-12083: Fix PeerSync, Leader Election failures and CDCR checkpoint inconsistencies on a cluster running CDCR\n\n(cherry picked from commit c4d0223) ",
            "author": "ASF subversion and git services",
            "id": "comment-16402532"
        },
        {
            "date": "2018-03-18T18:43:52+0000",
            "content": "Commit 8b014ef41e7bff2d621d759bf7e37781c2ad1d09 in lucene-solr's branch refs/heads/branch_7_3 from Varun Saxena\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8b014ef ]\n\nSOLR-12083: Fix RealTime GET to work on a cluster running CDCR when using Solr's in-place updates\n\n(cherry picked from commit 57524f1) ",
            "author": "ASF subversion and git services",
            "id": "comment-16404115"
        },
        {
            "date": "2018-03-18T18:44:29+0000",
            "content": "Thanks Amrit! ",
            "author": "Varun Thacker",
            "id": "comment-16404118"
        }
    ]
}