{
    "id": "SOLR-936",
    "title": "Facet Results - REST vs SolrJ",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [
            "clients - java",
            "search"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Invalid"
    },
    "description": "There is a difference in the way Facet results are reported in SolrJ from the REST interface.  In REST, if you apply a facet via the fq param, no matter what the count it is always reported back in the list of facets in the responses.  However, with SolrJ - it only reports back facets that don't match the total number of documents.  This is quite frustrating to deal with.  \n\nThe difference can be seen when ORing or ANDing in the fq param.  When I or to facet values together, they come back in SolrJ since their counts don't match the total docs.  But if I AND them together, they don't appear in the list.  So then I need to munge in the applied fq values.\n\nWhy the difference in behavior between REST and SolrJ?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Ryan McKinley",
            "id": "comment-12658776",
            "date": "2008-12-23T06:39:39+0000",
            "content": "There is no difference between the results in solrj and directly querying solr (solrj makes the same calls to solr)\n\nYour issues is probably related to facet.mincount=0 vs facet.mincount=1.\ncheck:\nhttp://wiki.apache.org/solr/SimpleFacetParameters\n\nit that does not fix things, ask on solr-user@lucene... "
        },
        {
            "author": "Andrew Nagy",
            "id": "comment-12658870",
            "date": "2008-12-23T16:23:36+0000",
            "content": "I am referring to the code in SolrJ that filters out any facets with the same count as the total number of search results.  This is different from the REST interface.\n\nSee the bottom of:\nhttp://svn.apache.org/viewvc/lucene/solr/trunk/src/solrj/org/apache/solr/client/solrj/response/FacetField.java?revision=724175&view=markup\n\nSolrj filters out facet values where as the raw output from the REST interface does not. "
        },
        {
            "author": "Andrew Nagy",
            "id": "comment-12658871",
            "date": "2008-12-23T16:28:15+0000",
            "content": "It might also be beneficial to have a list of \"Applied Facets\" so we can differentiate whether a facet has been applied and what the count is for that facet. "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12658874",
            "date": "2008-12-23T16:29:36+0000",
            "content": "I see what Andrew is talking about.\n\nThe difference is this:\n\nSolrj returns a list of further refinements, so it strips out anything that would not further reduce the set.  It says, if the facet count == the total document count, don't return it in the list of further refinements.\n\nWhereas the raw response obviously has not yet stripped it.\n\nSo Solrj could probably use a list of facets that are not further refinements if it is interesting for users of the API to have those.  They don't make sense as possible new refinements but they do make sense in that they exist and some people care that they exist in the resulting data. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12658875",
            "date": "2008-12-23T16:32:23+0000",
            "content": "Are you talking about:\n\n   public FacetField getLimitingFields(long max) \n\n\n\nIf so, that is just a utility function that lets you filter out facets that have fewer options that some number (typically getNumFound)\n\nIf you don't want filtered results, just that FacetField directly and call:\n\n   public List<Count> getValues();\n\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12658880",
            "date": "2008-12-23T16:38:36+0000",
            "content": "\n\n\n It might also be beneficial to have a list of \"Applied Facets\"\n\n\n\n\n\nI don't follow \u2013 as is, every facet that is applied creates a section in the response (not to mention that you put it in the request).  What am i missing?\n\nAre you talking about fq=? "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12658884",
            "date": "2008-12-23T16:45:55+0000",
            "content": "actually, perhaps you are using:\n\nQueryResponse#getFacetFields()\n   vs\nQueryResponse#getLimitingFacets();\n\nThe first returns all results directly from solr, the second returns facets that will reduce the number of documents returned. "
        },
        {
            "author": "Jayson Minard",
            "id": "comment-12658904",
            "date": "2008-12-23T17:41:49+0000",
            "content": "erk.  Guess I got caught up in the fun and games...  I always thing of getFacetFields() as the list of facet fields passed in as the requested set of facets, not the response.  Don't know where my brain was at.\n\nGuessing that solves Andrew's problem and this should be closed.\n\nAndrew? "
        },
        {
            "author": "Andrew Nagy",
            "id": "comment-12658934",
            "date": "2008-12-23T19:36:13+0000",
            "content": "Yes - thanks - this does solve my problem.\n\nIn regards to the \"Applied Facets\" it might be nice to separate the list of returned facets to a list of available facets and a list of \"applied\" facets.\n\nWhat is driving this idea is my curiosity on how to build a list of facets that uses checkboxes instead of links.  How do I know if the checkboxes should be checked or not with out saving some state information about what the user clicked on.  It would be nice if solr could do this for me by either flagging the facets that are in my fq or by keeping them in a different list. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12659001",
            "date": "2008-12-24T00:02:24+0000",
            "content": "You may also want to check out SOLR-911 or SOLR-792 \u2013 solrj does not deal with this functionality yet.  Contributions are welcome! "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775618",
            "date": "2009-11-10T15:51:54+0000",
            "content": "Bulk close for Solr 1.4 "
        }
    ]
}