{
    "id": "LUCENE-1529",
    "title": "back-compat tests (\"ant test-tag\") should test JAR drop-in-ability",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "general/build"
        ],
        "type": "New Feature",
        "fix_versions": [
            "2.9"
        ],
        "affect_versions": "2.9",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "We now test back-compat with \"ant test-tag\", which is very useful for\ncatching breaks in back compat before committing.\n\nHowever, that currently checks out \"src/test\" sources and then\ncompiles them against the trunk JAR, and runs the tests.  Whereas our\nback compat policy:\n\n  http://wiki.apache.org/lucene-java/BackwardsCompatibility\n\nstates that no recompilation is required on upgrading to a new JAR.\nIe you should be able to drop in the new JAR in place of your old one\nand things should work fine.\n\nSo... we should fix \"ant test-tag\" to:\n\n\n\tDo full checkout of core sources & tests from the back-compat-tag\n\n\n\n\n\tCompile the JAR from the back-compat sources\n\n\n\n\n\tCompile the tests against that back-compat JAR\n\n\n\n\n\tSwap in the trunk JAR\n\n\n\n\n\tRun the tests",
    "attachments": {
        "lucene-1529.patch": "https://issues.apache.org/jira/secure/attachment/12402602/lucene-1529.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-03-19T20:59:30+0000",
            "content": "Changes 'test-tag' in build.xml to executes the compatibility tests like Mike described here. ",
            "author": "Michael Busch",
            "id": "comment-12683611"
        },
        {
            "date": "2009-03-20T08:47:55+0000",
            "content": "Committed revision 756374. ",
            "author": "Michael Busch",
            "id": "comment-12683798"
        },
        {
            "date": "2009-04-14T15:12:54+0000",
            "content": "I think something is wrong with this fix.  Over in LUCENE-1593 we hit a case where (I think) the test should have failed, because we changed a method from returning void to returning something else.\n\nEG if you change IndexWriter.addDocument to (say) return int instead of void, then I think ant test-tag should fail, but it doesn't. ",
            "author": "Michael McCandless",
            "id": "comment-12698799"
        },
        {
            "date": "2009-04-14T20:12:26+0000",
            "content": "Perhaps that's related: target test-tag has this step:\n\n\t  <!-- compile tag tests against tag jar -->\t\n\t  <compile-test-macro srcdir=\"${tags.dir}/${tag}/src/test\" destdir=\"${build.dir}/${tag}/classes/test\"\n\t\t\t  \t\t\t  test.classpath=\"tag.test.classpath\"/>\n\n\n\nNotice that test.classpath is set to tag.test.classpath, which is defined as:\n\n  <path id=\"tag.test.classpath\">\n    <path refid=\"demo.classpath\"/>\n    <path refid=\"junit-path\"/>\n    <pathelement location=\"${build.dir}/${tag}/classes/test\"/>\n  \t<pathelement location=\"${build.dir}/${tag}/${tag}.jar\"/>\n  </path>\n\n\n\n\"demo.classpath\" includes build/classes/demo as well as build/classes/java, which includes the current trunk's build classes.\n\nIf I change the definition to rely only on tag.jar, demo classes and junit jar:\n\n  <path id=\"tag.test.classpath\">\n    <path refid=\"junit-path\"/>\n    <pathelement location=\"${build.dir}/classes/demo\"/>\n    <pathelement location=\"${build.dir}/${tag}/${tag}.jar\"/>\n  </path>\n\n\n\nI get errors like this:\n\n    [javac] Compiling 128 source files to D:\\dev\\lucene\\lucene-trunk\\build\\lucene_2_4_back_compat_tests_20090320\\classes\\test\n    [javac] D:\\dev\\lucene\\lucene-trunk\\tags\\lucene_2_4_back_compat_tests_20090320\\src\\test\\org\\apache\\lucene\\index\\TestIndexReaderReopen.java:323: cannot find symbol\n    [javac] symbol  : method getSequentialSubReaders()\n    [javac] location: class org.apache.lucene.index.MultiSegmentReader\n    [javac]       IndexReader[] subReaders0 = ((MultiSegmentReader) reader0).getSequentialSubReaders();\n    [javac]                                   ^\n    [javac] D:\\dev\\lucene\\lucene-trunk\\tags\\lucene_2_4_back_compat_tests_20090320\\src\\test\\org\\apache\\lucene\\index\\TestIndexReaderReopen.java:335: cannot find symbol\n    [javac] symbol  : method getSequentialSubReaders()\n    [javac] location: class org.apache.lucene.index.MultiSegmentReader\n    [javac]       IndexReader[] subReaders1 = ((MultiSegmentReader) reader1).getSequentialSubReaders();\n    [javac]                                   ^\n\n\n\nThat's because tag.jar's MultiSegmentReader does not have a getSequentialSubReaders method, however TestIndexReaderReopen calls it. Is that ok?\n\nAnyway, can it be that the classes/java in the classpath cause this change to not fail? ",
            "author": "Shai Erera",
            "id": "comment-12698907"
        },
        {
            "date": "2009-04-14T21:07:16+0000",
            "content": "If I change the definition to rely only on tag.jar, demo classes and junit jar:\n\nOoh that's good progress!\n\nHmm, yes we will now see compilation errors because over time we've made \"legal\" fixes to the test source code, corresponding to changes in 2.9.  Eg, since FieldInfo is package private, we're allowed to rename omitTf to OmitTermFreqAndPositions, and if a test (TestOmitTf) is using package-private access to access omitTf, it's OK to fix that test to match the new name.\n\nSo I think the only way to make \"legal\" changes to the back-compat tests is to backport [a subset of, or perhaps compile-time emulation of] the 2.9 changes onto the 2.4 branch src/java/*.  Or, to fix tests not to rely on package private APIs.  I think that's OK (we make such changes rarely)?  I'll go and fix the back-compat branch accordingly... ",
            "author": "Michael McCandless",
            "id": "comment-12698932"
        },
        {
            "date": "2009-04-14T21:19:57+0000",
            "content": "OK I think it's all fixed now.  Thanks Shai! ",
            "author": "Michael McCandless",
            "id": "comment-12698941"
        },
        {
            "date": "2009-04-15T01:16:11+0000",
            "content": "Good catch! Thanks for fixing this, Shai and Mike! ",
            "author": "Michael Busch",
            "id": "comment-12699012"
        },
        {
            "date": "2009-04-15T02:27:44+0000",
            "content": "Mike - you 'almost' fixed it \n\nI \"ant clean test-tag\" and still sees failures. So I checked and common-build.xml still references lucene_2_4_back_compat_tests_20090320. I do see your changes on the lucene_2_4_back_compat_tests branch, but you didn't tag those changes?\n\nWe can either move to checkout this code from the branch (thus preventing such issues in the future), in build.xml target=download-tag, or tag the changes and update common-build.xml. ",
            "author": "Shai Erera",
            "id": "comment-12699030"
        },
        {
            "date": "2009-04-15T12:58:02+0000",
            "content": "Yes, indeed \u2013 should be fixed now (I retagged it).  We can't change it to checkout the branch since people with older checkouts will suddenly see the the back-compat tests failing.  That's why we switched to a tag a while back. ",
            "author": "Michael McCandless",
            "id": "comment-12699177"
        }
    ]
}