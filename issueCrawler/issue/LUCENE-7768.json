{
    "id": "LUCENE-7768",
    "title": "UnifiedHighlighter: Use a different stored field, possibly shared",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Unresolved",
        "affect_versions": "None",
        "status": "Open",
        "type": "Improvement",
        "components": [
            "modules/highlighter"
        ],
        "fix_versions": []
    },
    "description": "UnifiedHighlighter uses stored field content to highlight. It has some disadvantages, because index grows up fast when using multilingual indexing due to several fields has to be stored with same content. \n\nLucene portion of issue SOLR-1105, initially raised on Solr\nSee https://issues.apache.org/jira/browse/SOLR-1105",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15959459",
            "date": "2017-04-06T18:04:27+0000",
            "content": "Thanks for contributing this Julien.  I'm looking at the patch on SOLR-1105:\n\n\tneeds a test; but maybe wait until we like the API...\n\tYou introduced a Function<String,String> to do the mapping but I think UnaryOperator<String> is more correct.  But regardless of that, I think instead of those, it could be done with an over-rideable method accepting the input logical stored field and returning the desired actual stored field.  The highlightFieldsAsObjects method could call it.  It would be nice if loadFieldValues & LimitedStoredFieldVisitor required no modifications... leaving all the work to highlightFieldsAsObjects which can up front decide the unique set of fields to be fetch and keep this once.\n\n ",
            "author": "David Smiley"
        }
    ]
}