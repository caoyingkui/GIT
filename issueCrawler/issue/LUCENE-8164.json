{
    "id": "LUCENE-8164",
    "title": "IndexWriter silently accepts broken payload",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Bug",
        "components": [],
        "fix_versions": [
            "7.5",
            "master (8.0)"
        ]
    },
    "description": "IndexWriter seems to be missing bounds checks for payloads completely.\n\nIf you pass a \"broken\" payload (e.g. BytesRef's offset + length is out of bounds), it will silently index it as if nothing went wrong. What actually happens? Doesn't matter, we should be getting an exception.",
    "attachments": {
        "LUCENE-8164_test.patch": "https://issues.apache.org/jira/secure/attachment/12909701/LUCENE-8164_test.patch",
        "LUCENE-8164.patch": "https://issues.apache.org/jira/secure/attachment/12926894/LUCENE-8164.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16356294",
            "date": "2018-02-08T00:46:12+0000",
            "content": "At least in my case here, I think CannedTokenStream drops the attribute? So thats why IW is still ok. Lemme see what happens if i fix this... ",
            "author": "Robert Muir"
        },
        {
            "id": "comment-16356301",
            "date": "2018-02-08T00:52:12+0000",
            "content": "Actually the test is valid. You can add this:\n\n\nLeafReader reader = getOnlyLeafReader(w.getReader());\nassertTrue(reader.getFieldInfos().hasPayloads());\nreader.close();\n\n\n\nCannedTokenStream is confusing, but its working properly. Somehow this makes it all the way thru IW... ",
            "author": "Robert Muir"
        },
        {
            "id": "comment-16356313",
            "date": "2018-02-08T01:02:03+0000",
            "content": "Basically was looking at this in response to Tony Ma's thread on the user list \"Lucene 4.5.1 payload corruption - ArrayIndexOutOfBoundsException\"\n\nI'm not sure what IW actually does with it, but e.g. if it actually writes less bytes than offset + length, then i can see pointers getting screwed up or something. Maybe the test would need to write enough to produce skipdata or whatever to get an obviously corrupt index. ",
            "author": "Robert Muir"
        },
        {
            "id": "comment-16356334",
            "date": "2018-02-08T01:22:16+0000",
            "content": "I think in this particular test PayloadAttributeImpl.copyTo may hide the bug? So I think it points at bad leniency there, and doesn't yet test IW. ",
            "author": "Robert Muir"
        },
        {
            "id": "comment-16356341",
            "date": "2018-02-08T01:27:15+0000",
            "content": "And the bug in PayloadAttributeImpl.copyTo boils down to the use of the horrible Arrays.copyOfRange method in BytesRef.deepCopyOf:\n\n\nThe final index of the range (to), which must be greater than or equal to from, may be greater than original.length, in which case (byte)0 is placed in all elements of the copy whose index is greater than or equal to original.length - from. \n\n\n\nWe can't use such methods, or we never know we wrote the correct stuff. it needs to be banned with forbidden APIs. ",
            "author": "Robert Muir"
        },
        {
            "id": "comment-16504689",
            "date": "2018-06-07T13:36:48+0000",
            "content": "Robert Muir\u00a0We are good now. The test throws an IndexOutOfBoundsException exception as expected. Thanks for your great initial work. ",
            "author": "Nhat Nguyen"
        },
        {
            "id": "comment-16510770",
            "date": "2018-06-13T08:19:03+0000",
            "content": "Commit 9ea1fa5356ec3e5f619625a82856c7c235c08714 in lucene-solr's branch refs/heads/branch_7x from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9ea1fa5 ]\n\nLUCENE-8164: IndexWriter silently accepts broken payload.\n\nThis has been fixed via LUCENE-8165 since we are now checking\nfor offset+length going out of bounds.\n\nCo-authored-by: Nhat Nguyen <nhat.nguyen@elastic.co>\nCo-authored-by: Robert Muir <rmuir@apache.org> ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16510772",
            "date": "2018-06-13T08:19:07+0000",
            "content": "Commit 7eb74ac50f5e6e05389e834a1a2bf2543dfd64c9 in lucene-solr's branch refs/heads/master from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7eb74ac ]\n\nLUCENE-8164: IndexWriter silently accepts broken payload.\n\nThis has been fixed via LUCENE-8165 since we are now checking\nfor offset+length going out of bounds.\n\nCo-authored-by: Nhat Nguyen <nhat.nguyen@elastic.co>\nCo-authored-by: Robert Muir <rmuir@apache.org> ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16510774",
            "date": "2018-06-13T08:19:40+0000",
            "content": "I pushed this test. This is fixed now. Thanks Nhat Nguyen ",
            "author": "Simon Willnauer"
        },
        {
            "id": "comment-16511011",
            "date": "2018-06-13T12:00:46+0000",
            "content": "Thanks Robert Muir \u00a0and Simon Willnauer ",
            "author": "Nhat Nguyen"
        }
    ]
}