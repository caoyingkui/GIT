{
    "id": "SOLR-9039",
    "title": "Get to the bottom of why clientAuth (SSL certificate) testing on OSX doesn't work",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "When randomized SSL/clientAuth testing was introduced in SOLR-3854 it was quickly determined that something about OSX didn't play nicely with the way we were testing clientAuth certificates...\n\nhttps://issues.apache.org/jira/browse/SOLR-3854?focusedCommentId=13897983#comment-13897983\nhttps://svn.apache.org/r1567643\n\nAt the time no additional investigation into the root problem was attempted.\n\nAs part of SOLR-9028, I spent a little time trying to verify if this was still a problem, and determined it was. I briefly attempted to get to the bottom of it, and compiled a few notes on things to look into \u2013 but ultimately i don't have the time/resources to do any serious test on OSX myself, and i didn't want this to block SOLR-9028 so i'm spinning it out into it's own issue.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-04-27T17:30:08+0000",
            "author": "Hoss Man",
            "content": "Some investigation lead me to this java code using jetty to implement a proxy where the author mentioned having similar problems and was able to work around it with an explict handshake timeout of 0...\n\nhttps://github.com/adamfisk/LittleProxy/blob/7be308b2a9d8692835c3091d49a9f165f038ce41/src/test/java/org/littleshoot/proxy/TestUtils.java#L116\nLIttleProxy code snippet, FYI: '0x' is the username of the person who left the comment\nif (enableHttps) {\n    // Add SSL connector\n    org.eclipse.jetty.util.ssl.SslContextFactory sslContextFactory = new org.eclipse.jetty.util.ssl.SslContextFactory();\n\n    SelfSignedSslEngineSource contextSource = new SelfSignedSslEngineSource();\n    SSLContext sslContext = contextSource.getSslContext();\n\n    sslContextFactory.setSslContext(sslContext);\n    SslSocketConnector connector = new SslSocketConnector(\n            sslContextFactory);\n    connector.setPort(0);\n    /*\n     * <p>Ox: For some reason, on OS X, a non-zero timeout can causes\n     * sporadic issues. <a href=\"http://stackoverflow.com/questions\n     * /16191236/tomcat-startup-fails\n     * -due-to-java-net-socketexception-invalid-argument-on-mac-o\">This\n     * StackOverflow thread</a> has some insights into it, but I don't\n     * quite get it.</p>\n     * \n     * <p>This can cause problems with Jetty's SSL handshaking, so I\n     * have to set the handshake timeout and the maxIdleTime to 0 so\n     * that the SSLSocket has an infinite timeout.</p>\n     */\n    connector.setHandshakeTimeout(0);\n    connector.setMaxIdleTime(0);\n    httpServer.addConnector(connector);\n}\n\n\n\n..unfortunately that method (setHandshakeTimeout) no longer exists with current versions of jetty, and cursory searches of the current jetty API /migration docs didn't suggest any obvious replacement.\n\nReviewing the linked stackoverflow post didn't lead me to any obvious insights, other then that if the same underlying problem was the cause of both the SO problem and our clientAuth testing probem, then it seemed like it should have been fixed already in recent versions of java \u2013 but i may just be missunderstanding how java bug fix versions are used.  Some possibly relevant OpenJDK bug URLs (again: assuming this is really the same problem)...\n\n\n\thttps://bugs.openjdk.java.net/browse/JDK-8021820\n\thttps://bugs.openjdk.java.net/browse/JDK-8022394\n\thttps://bugs.openjdk.java.net/browse/JDK-8022668\n\thttps://bugs.openjdk.java.net/browse/JDK-8035897\n\n ",
            "id": "comment-15260540"
        }
    ]
}