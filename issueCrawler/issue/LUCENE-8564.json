{
    "id": "LUCENE-8564",
    "title": "Make it easier to iterate over graphs in tokenstreams",
    "details": {
        "components": [],
        "status": "Resolved",
        "resolution": "Fixed",
        "fix_versions": [
            "master (8.0)"
        ],
        "affect_versions": "None",
        "labels": "",
        "priority": "Major",
        "type": "Task"
    },
    "description": "We have a number of TokenFilters that read ahead in the token stream (eg synonyms, shingles) and ideally these would understand token graphs as well as linear streams.  FixedShingleFilter already has some mechanisms to deal with graphs; this issue is to extract this logic into a GraphTokenStream class that can then be reused by other token filters",
    "attachments": {
        "LUCENE-8564.patch": "https://issues.apache.org/jira/secure/attachment/12947963/LUCENE-8564.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16684996",
            "author": "Alan Woodward",
            "content": "Here is a patch adding a GraphTokenStream class.  The class wraps an underlying token stream, and then exposes tokens via the following methods:\n\n\tincrementBaseToken() : moves the starting point of the graph forwards\n\tincrementGraphToken() : moves along the currently selected path through the token graph\n\tincrementGraph() : resets back to the base token, and selects the next path to move along.  Returns false if all paths have been exhausted\n\n\n\nThe patch also reimplements FixedShingleFilter using GraphTokenStream, to illustrate how much easier it is to reason about how things work.\n\nTo protect against misuse, there are hard limits on how far ahead in the stream tokens will be read and cached, and the number of paths through the graph that can be followed from a single base token ",
            "date": "2018-11-13T10:34:25+0000"
        },
        {
            "id": "comment-16685716",
            "author": "Michael McCandless",
            "content": "This sounds great \u2013 we need to make it easier to work with graph token streams!\n\nHow does it handle a graph where one of the side paths itself then splits (after a token or two) into its own set of side paths? ",
            "date": "2018-11-13T20:36:04+0000"
        },
        {
            "id": "comment-16685878",
            "author": "Alan Woodward",
            "content": "How does it handle a graph where one of the side paths itself then splits (after a token or two) into its own set of side paths?\n\nWe'd end up with extra routes through the graph available via incrementGraph()\n\nLet's imagine a TokenStream that looks like this: z a/b:4 c d/e:2 f g h\n\nStarting at position z, calling incrementGraphToken() repeatedly will yield the tokenstream z a c d f g h\nThen we call incrementGraph(); now calling incrementGraphToken() gives us z a c e g h, following the split at d/e\nCall incrementGraph() again; we get z b g h\nNow that all routes have been exhausted, calling incrementGraph() will return false.\n\nHow many routes are available depends on how far down the graph you move; if in the example above you only advance as far as 'z a c' on the first branch, then incrementGraph() will move directly to the 'a b g' branch. ",
            "date": "2018-11-13T23:14:03+0000"
        },
        {
            "id": "comment-16691605",
            "author": "Alan Woodward",
            "content": "I reworked this slightly; we now have GraphTokenFilter as an abstract extension of TokenFilter, rather than using a separate standalone object.  This makes reset()/end() easier to handle. ",
            "date": "2018-11-19T11:53:41+0000"
        },
        {
            "id": "comment-16707106",
            "author": "Alan Woodward",
            "content": "Updated patch with improved end() processing, passes all tests so I think it's good to go? ",
            "date": "2018-12-03T12:17:40+0000"
        },
        {
            "id": "comment-16708501",
            "author": "ASF subversion and git services",
            "content": "Commit f5867a1413189675cf69ea88412237e32429786e in lucene-solr's branch refs/heads/master from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f5867a1 ]\n\nLUCENE-8564: Add GraphTokenFilter ",
            "date": "2018-12-04T10:03:03+0000"
        }
    ]
}