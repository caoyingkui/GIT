{
    "id": "LUCENE-5811",
    "title": "TestFieldCacheSort.testStringValReverse reproduce failure: java.lang.RuntimeException: CheckReader failed",
    "details": {
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "6.0"
        ]
    },
    "description": "Found here...\n\nBuild: http://jenkins.thetaphi.de/job/Lucene-Solr-trunk-MacOSX/1702/\nJava: 64bit/jdk1.7.0 -XX:-UseCompressedOops -XX:+UseG1GC\n\nReproduces on my linux machine @ trunk r1609232 \n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestFieldCacheSort -Dtests.method=testStringValReverse -Dtests.seed=E9ADA2F0253960ED -Dtests.slow=true -Dtests.locale=th_TH -Dtests.timezone=Asia/Urumqi -Dtests.file.encoding=UTF-8\n   [junit4] ERROR   0.60s | TestFieldCacheSort.testStringValReverse <<<\n   [junit4]    > Throwable #1: java.lang.RuntimeException: CheckReader failed\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([E9ADA2F0253960ED:2E067D8E7A200475]:0)\n   [junit4]    > \tat org.apache.lucene.util.TestUtil.checkReader(TestUtil.java:240)\n   [junit4]    > \tat org.apache.lucene.util.TestUtil.checkReader(TestUtil.java:218)\n   [junit4]    > \tat org.apache.lucene.util.LuceneTestCase.newSearcher(LuceneTestCase.java:1598)\n   [junit4]    > \tat org.apache.lucene.util.LuceneTestCase.newSearcher(LuceneTestCase.java:1572)\n   [junit4]    > \tat org.apache.lucene.util.LuceneTestCase.newSearcher(LuceneTestCase.java:1564)\n   [junit4]    > \tat org.apache.lucene.uninverting.TestFieldCacheSort.testStringValReverse(TestFieldCacheSort.java:343)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:744)",
    "attachments": {
        "LUCENE-5811.patch": "https://issues.apache.org/jira/secure/attachment/12654984/LUCENE-5811.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14056434",
            "author": "Hoss Man",
            "content": "check index details...\n\n\n   [junit4]   1> CheckReader failed\n   [junit4]   1>     test: field norms.........OK [0 fields]\n   [junit4]   1>     test: terms, freq, prox...OK [2 terms; 2 terms/docs pairs; 0 tokens]\n   [junit4]   1>     test: stored fields.......OK [2 total field count; avg 1 fields per doc]\n   [junit4]   1>     test: term vectors........OK [0 total vector count; avg 0 term/freq vector fields per doc]\n   [junit4]   1>     test: docvalues...........ERROR [Type mismatch: value was indexed as BINARY]\n   [junit4]   1> java.lang.IllegalStateException: Type mismatch: value was indexed as BINARY\n   [junit4]   1> \tat org.apache.lucene.uninverting.UninvertingReader.getNumericDocValues(UninvertingReader.java:238)\n   [junit4]   1> \tat org.apache.lucene.index.FilterAtomicReader.getNumericDocValues(FilterAtomicReader.java:402)\n   [junit4]   1> \tat org.apache.lucene.index.AssertingAtomicReader.getNumericDocValues(AssertingAtomicReader.java:607)\n   [junit4]   1> \tat org.apache.lucene.index.FilterAtomicReader.getNumericDocValues(FilterAtomicReader.java:402)\n   [junit4]   1> \tat org.apache.lucene.index.AssertingAtomicReader.getNumericDocValues(AssertingAtomicReader.java:607)\n   [junit4]   1> \tat org.apache.lucene.index.MultiDocValues.getNumericValues(MultiDocValues.java:112)\n   [junit4]   1> \tat org.apache.lucene.index.SlowCompositeReaderWrapper.getNumericDocValues(SlowCompositeReaderWrapper.java:99)\n   [junit4]   1> \tat org.apache.lucene.index.ParallelAtomicReader.getNumericDocValues(ParallelAtomicReader.java:274)\n   [junit4]   1> \tat org.apache.lucene.index.FilterAtomicReader.getNumericDocValues(FilterAtomicReader.java:402)\n   [junit4]   1> \tat org.apache.lucene.index.AssertingAtomicReader.getNumericDocValues(AssertingAtomicReader.java:607)\n   [junit4]   1> \tat org.apache.lucene.index.FilterAtomicReader.getNumericDocValues(FilterAtomicReader.java:402)\n   [junit4]   1> \tat org.apache.lucene.index.FieldFilterAtomicReader.getNumericDocValues(FieldFilterAtomicReader.java:122)\n   [junit4]   1> \tat org.apache.lucene.index.ParallelAtomicReader.getNumericDocValues(ParallelAtomicReader.java:274)\n   [junit4]   1> \tat org.apache.lucene.index.CheckIndex.checkDocValues(CheckIndex.java:1591)\n   [junit4]   1> \tat org.apache.lucene.index.CheckIndex.testDocValues(CheckIndex.java:1369)\n   [junit4]   1> \tat org.apache.lucene.util.TestUtil.checkReader(TestUtil.java:231)\n   [junit4]   1> \tat org.apache.lucene.util.TestUtil.checkReader(TestUtil.java:218)\n   [junit4]   1> \tat org.apache.lucene.util.LuceneTestCase.newSearcher(LuceneTestCase.java:1598)\n   [junit4]   1> \tat org.apache.lucene.util.LuceneTestCase.newSearcher(LuceneTestCase.java:1572)\n   [junit4]   1> \tat org.apache.lucene.util.LuceneTestCase.newSearcher(LuceneTestCase.java:1564)\n   [junit4]   1> \tat org.apache.lucene.uninverting.TestFieldCacheSort.testStringValReverse(TestFieldCacheSort.java:343)\n\n ",
            "date": "2014-07-09T16:43:39+0000"
        },
        {
            "id": "comment-14057464",
            "author": "Robert Muir",
            "content": "The problem is checkreader doesn't like the exception we throw if the user screws up.\n\nOn the other hand, I sorta like the idea of this reader always passing checkreader: it allows it to be used in IW.addIndexes() as a viable way to \"upgrade\" to docvalues when you dont have them.\n\nSo to fix that, we just have to fix the leniency and exceptions to properly behave: here is a patch. ",
            "date": "2014-07-10T13:36:28+0000"
        },
        {
            "id": "comment-14057466",
            "author": "Michael McCandless",
            "content": "+1\n\nI'm sad to see \"tryToBeInsane\" is departing.  Maybe it can be re-incarnated sometime soon! ",
            "date": "2014-07-10T13:39:40+0000"
        },
        {
            "id": "comment-14077645",
            "author": "ASF subversion and git services",
            "content": "Commit 1614316 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1614316 ]\n\nLUCENE-5811, LUCENE-5788: Fix uninvertingreader to strictly follow dv api contract ",
            "date": "2014-07-29T12:07:01+0000"
        }
    ]
}