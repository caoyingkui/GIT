{
    "id": "SOLR-9404",
    "title": "JSON FacetFieldProcessor subclass rename/moves",
    "details": {
        "components": [
            "Facet Module"
        ],
        "type": "Task",
        "labels": "",
        "fix_versions": [
            "6.2"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "... spinoff of my comment on https://issues.apache.org/jira/browse/SOLR-9142?focusedCommentId=15408535&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15408535 ...\n\n\n\n\ttaste: the fact that some FFP's are declared within FacetField.java and some are top-level is bad IMO; they should all be top-level once any subclasses start becoming so.\n\tFFPFCBase:  This is basically the base class for array based accumulator implementations \u2013 i.e. direct slot/value accumulators.  I suggest rename to FFPArray.  It can handle terms (strings), not numbers directly but those encoded as terms, and multi-valued capable.\n\tFFPDV: Rename to FFPArrayDV: accesses terms from DocValues\n\tFFPUIF: Rename to FFPArrayUIF: accesses terms via UIF, kind of a pseudo-DV\n\tFFPNumeric: Rename to FFPHashDV:  Now currently this thing is expressly for single-valued numeric DocValues.  In SOLR-9142 (not here) I intend to make this generic to handle terms by global ordinal.\n\tFFPStream: Rename to FFPEnumTerms:  This does enumeration (not hash or array accumulation), and it gets data from Terms.  Perhaps Stream could also go in the name but I think Enum is more pertinent.  One day once we have PointValues in Solr, we might add a FFPEnumPoints.  Note that such a thing wouldn't stream, since that API uses a callback API instead of an iterator style.",
    "attachments": {
        "SOLR_9404.patch": "https://issues.apache.org/jira/secure/attachment/12823178/SOLR_9404.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-08-11T06:05:14+0000",
            "author": "David Smiley",
            "content": "Here's the patch.\n\nI added \"By\" as in \"FacetFieldProcessorByArray\" to avoid making it looking like these things are arrays or hash tables.\n\n\n\tReordered some methods to follow sequence of invocation better.\n\tChanged some visibility modifiers either to restrict further or to be more consistent.\n\tMade FacetProcessor abstract.\n\tFacetProcessor.getResponse was implemented as a trivial getter the same way by all subclasses, so I moved it down to a shared definition.\n\tAdded some generics hints\n\tRemoved some explicit auto-boxing\n\tAdded a modicum of class javadocs\n\n ",
            "id": "comment-15416611"
        },
        {
            "date": "2016-08-16T03:36:56+0000",
            "author": "ASF subversion and git services",
            "content": "Commit dd927dba2aa8d5527314c9e0a13ef1e0a2dd2c7f in lucene-solr's branch refs/heads/branch_6x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=dd927db ]\n\nSOLR-9404: Refactor move/renames in JSON FacetProcessor and FacetFieldProcessor.\n(cherry picked from commit 7072458) ",
            "id": "comment-15422113"
        },
        {
            "date": "2016-08-16T03:38:33+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 7072458ea44be181195882fd366ce6a545af55df in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7072458 ]\n\nSOLR-9404: Refactor move/renames in JSON FacetProcessor and FacetFieldProcessor. ",
            "id": "comment-15422114"
        },
        {
            "date": "2016-08-26T14:00:44+0000",
            "author": "Michael McCandless",
            "content": "Bulk close resolved issues after 6.2.0 release. ",
            "id": "comment-15439052"
        }
    ]
}