{
    "id": "SOLR-4047",
    "title": "dataimporter.functions.encodeUrl throughs Unable to encode expression: field.name with value: null",
    "details": {
        "affect_versions": "4.0",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Bug",
        "priority": "Critical",
        "labels": "",
        "resolution": "Not A Problem"
    },
    "description": "For some reason dataimporter.functions.encoude URL stopped work after update to solr 4.0 from 3.5.\nHere is the error\n\nFull Import failed:java.lang.RuntimeException: java.lang.RuntimeException: org.apache.solr.handler.dataimport.DataImportHandlerException: Unable to encode expression: attach.name with value: null Processing Document # 1\n\n\n\nHere is the data import config snippet:\n\n...\n            <entity name=\"account\"\n                    query=\"select name from accounts where account_id = '${attach.account_id}'\">\n\n                    <entity name=\"img_index\" processor=\"TikaEntityProcessor\" \n                            dataSource=\"bin\"\n                            format=\"text\" \n                            url=\"http://example.com/data/${account.name}/attaches/${attach.item_id}/${dataimporter.functions.encodeUrl(attach.name)}\">\n\n                            <field column=\"text\" name=\"body\" />\n                    </entity> \n            </entity>\n...\n\n\nWhen I'm changing it to not use dataimporter.functions.encodeUrl it works but I need to url encode file names as they have special chars in theirs names.",
    "attachments": {
        "schema.xml": "https://issues.apache.org/jira/secure/attachment/12554144/schema.xml",
        "db-data-config.xml": "https://issues.apache.org/jira/secure/attachment/12554143/db-data-config.xml",
        "solrconfig.xml": "https://issues.apache.org/jira/secure/attachment/12554145/solrconfig.xml",
        "db.sql": "https://issues.apache.org/jira/secure/attachment/12554142/db.sql"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "James Dyer",
            "id": "comment-13498880",
            "date": "2012-11-16T16:04:24+0000",
            "content": "SOLR-2141 and SOLR-4047 may be the same problem and possibly can be fixed together.\n\nIgor, Can you write a failing unit test? "
        },
        {
            "author": "Igor Dobritskiy",
            "id": "comment-13500111",
            "date": "2012-11-19T09:31:07+0000",
            "content": "I'm not sure how to create failing unit test.\nI'm attaching my solr config, schema, DIH config and db dump which I've simplified as much as I could. "
        },
        {
            "author": "James Dyer",
            "id": "comment-13502320",
            "date": "2012-11-21T21:19:26+0000",
            "content": "Could you try importing again with the latest revision from Trunk/5.x or branch_4x ?  Based on my limited understanding of this problem, I think it might have been solved with SOLR-4086.\n\nIn either case, we probably should write a good unit test for this so that it doesn't break again. "
        },
        {
            "author": "Igor Dobritskiy",
            "id": "comment-13502684",
            "date": "2012-11-22T09:51:16+0000",
            "content": "Same issue with latest Trunk/5.x and branch_4x \nIs there some documentation saying how to create unit tests for solr? I can at least try to create unit test. "
        },
        {
            "author": "James Dyer",
            "id": "comment-13503227",
            "date": "2012-11-23T15:31:40+0000",
            "content": "Igor,  I'm looking at the data-config.xml snipped you posted and I can't figure out where the \"attach\" namespace comes from.  Is this from a parent entity that you aren't showing, or from solrconfig.properties, or from System properties?  In any case this is a pretty significant detail as your problem seem to be it cannot find \"${attach.name}\", right?\n\nIt would be very helpful fixing this if you can write a failing unit test.  Perhaps the best way is to model your test on something that already exists?  Take a look at \"TestNestedChildren.java\", which was just added this past week:  (http://svn.apache.org/repos/asf/lucene/dev/branches/branch_4x/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestNestedChildren.java)  This test adds 1 document to a Solr index using nested entities, getting each of 3 fields, 1 from each entity.  It then queries the index to see if the document got added and if the inner-most entity's value is part of the document.  Maybe you could copy this one and make minor changes to mimic what you're trying to do?\n\nFor general guidelines on contributing patches, see:  http://wiki.apache.org/solr/HowToContribute "
        },
        {
            "author": "Igor Dobritskiy",
            "id": "comment-13503233",
            "date": "2012-11-23T15:46:33+0000",
            "content": "James, ${attach.name} is from parent entity. I've simplified my case as much as I could and already attached it. You can see in db-data-config.xml that there is no any nested entities but I still getting error.\n\nNext week I'll try to create unit test, I hope I'll be good in it \n\nThanks for your help! "
        },
        {
            "author": "James Dyer",
            "id": "comment-13504762",
            "date": "2012-11-27T17:00:49+0000",
            "content": "Igor,  I just committed a fix for SOLR-2141 & SOLR-3842 that also includes a test that demonstrates this issue also.  However, this test passes and I'm not sure anything is actually broken, at least not on the latest revision in Trunk or Branch_4x.  Note though this test does not use Tika. However, the code for resolving the Tike URL is similar to the code for other Entity processors and it should work the same.\n\nSee TestVariableResolverEndToEnd, which generates a data-config.xml like this:\n\n\n<dataConfig> \n<dataSource name=\"hsqldb\" driver=\"org.hsqldb.jdbcDriver\" url=\"jdbc:hsqldb:mem:.\" /> \n<document name=\"TestEvaluators\"> \n<entity name=\"FIRST\" processor=\"SqlEntityProcessor\" dataSource=\"hsqldb\"  query=\"select  1 as id,  'SELECT' as SELECT_KEYWORD,  CURRENT_TIMESTAMP as FIRST_TS from DUAL \" >\n  <field column=\"SELECT_KEYWORD\" name=\"select_keyword_s\" /> \n  <entity name=\"SECOND\" processor=\"SqlEntityProcessor\" dataSource=\"hsqldb\" transformer=\"TemplateTransformer\"    query=\"${dataimporter.functions.encodeUrl(FIRST.SELECT_KEYWORD)}  1 as SORT,  CURRENT_TIMESTAMP as SECOND_TS,  '${dataimporter.functions.formatDate(FIRST.FIRST_TS, 'yyyy', 'ms_MY')}' as SECOND1_S,   'PORK' AS MEAT,  'GRILL' AS METHOD,  'ROUND' AS CUTS,  'BEEF_CUTS' AS WHATKIND from DUAL WHERE 1=${FIRST.ID} UNION ${dataimporter.functions.encodeUrl(FIRST.SELECT_KEYWORD)}  2 as SORT,  CURRENT_TIMESTAMP as SECOND_TS,  '${dataimporter.functions.formatDate(FIRST.FIRST_TS, 'yyyy', 'ms_MY')}' as SECOND1_S,   'FISH' AS MEAT,  'FRY' AS METHOD,  'SIRLOIN' AS CUTS,  'BEEF_CUTS' AS WHATKIND from DUAL WHERE 1=${FIRST.ID} ORDER BY SORT \">\n   <field column=\"SECOND_S\" name=\"second_s\" /> \n   <field column=\"SECOND1_S\" name=\"second1_s\" /> \n   <field column=\"second2_s\" template=\"${dataimporter.functions.formatDate(SECOND.SECOND_TS, 'yyyy', 'ms_MY')}\" /> \n   <field column=\"second3_s\" template=\"${dih.functions.formatDate(SECOND.SECOND_TS, 'yyyy', 'ms_MY')}\" /> \n   <field column=\"METHOD\" name=\"${SECOND.MEAT}_s\"/>\n   <field column=\"CUTS\" name=\"${SECOND.WHATKIND}_mult_s\"/>\n  </entity>\n</entity>\n</document> \n</dataConfig> \n\n\n\nAs you can see the Sql Query on the child entity, instead of having \"select\", it uses ${dataimporter.functions.encodeUrl(FIRST.SELECT_KEYWORD)}, getting the word \"select\" from the data in the parent entity.\n\nThe response shows it is correctly executing the inner entity:\n\n  \"response\":{\"numFound\":1,\"start\":0,\"docs\":[\n      {\n        \"select_keyword_s\":\"SELECT\",\n        \"id\":\"1\",\n        \"second3_s\":\"2012\",\n        \"second2_s\":\"2012\",\n        \"PORK_s\":\"GRILL\",\n        \"BEEF_CUTS_mult_s\":[\"ROUND\",\n          \"SIRLOIN\"],\n        \"second1_s\":\"2012\",\n        \"FISH_s\":\"FRY\",\n        \"timestamp\":\"2012-11-27T16:55:39.409Z\"}]\n  }\n\n\n\nUnless someone can demonstrate this is an actual problem (once again, a good failing unit test would help a lot), I will close this as \"not a problem\" in the next week or so. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13610496",
            "date": "2013-03-22T16:13:30+0000",
            "content": "[branch_4x commit] James Dyer\nhttp://svn.apache.org/viewvc?view=revision&revision=1414260\n\nSOLR-2141  / SOLR-4047 / SOLR-3842 - remove tabs "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13610499",
            "date": "2013-03-22T16:13:39+0000",
            "content": "[branch_4x commit] James Dyer\nhttp://svn.apache.org/viewvc?view=revision&revision=1414250\n\nSOLR-2141  / SOLR-4047 / SOLR-3842 - fix problems with VariableResolver, better test coverage "
        }
    ]
}