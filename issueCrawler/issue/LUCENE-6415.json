{
    "id": "LUCENE-6415",
    "title": "TermsQuery.extractTerms should not throw an UOE",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "5.1",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.2",
            "6.0"
        ],
        "priority": "Minor",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "TermsQuery inherits the default impl of extractTerms which throws an UnsupportedOperationException.",
    "attachments": {
        "LUCENE-6415.patch": "https://issues.apache.org/jira/secure/attachment/12724564/LUCENE-6415.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14489296",
            "author": "Uwe Schindler",
            "date": "2015-04-10T10:00:44+0000",
            "content": "I think it should be abstract in Query. The UOE was only added in Lucene 1.x or 2.x for backwards compatibility reasons "
        },
        {
            "id": "comment-14489466",
            "author": "Robert Muir",
            "date": "2015-04-10T11:45:31+0000",
            "content": "I actually think it should. I know how people abuse this query and do not think we should implement an unbounded extractTerms. UOE is much better. "
        },
        {
            "id": "comment-14489572",
            "author": "Adrien Grand",
            "date": "2015-04-10T13:08:31+0000",
            "content": "Uwe: I was also wondering that it might make sense to move this method to Weight so that we only have to implement it for core queries and not those that always rewrite to a different query? (extractTerms documentation states it only makes sense on rewritten queries)\n\nRobert: The issue is that it fails term extraction for the whole query even if this query is only used for filtering. Maybe we could make extractTerms a no-op on TermsQuery and then it would behave just like when this query was still only a filter? "
        },
        {
            "id": "comment-14489682",
            "author": "Adrien Grand",
            "date": "2015-04-10T14:06:14+0000",
            "content": "Here is a proposal: it makes TermsQuery.extractTerms a no-op. "
        },
        {
            "id": "comment-14489692",
            "author": "Robert Muir",
            "date": "2015-04-10T14:12:02+0000",
            "content": "We should also fix the javadocs of this class? Now that its a query, its very confusing.\n\nIt should mention that it does not score, maybe with an example like:\n\nThis is equivalent to a ConstantScoreQuery(BooleanQuery(x, y, z), 1F) but potentially more efficient. "
        },
        {
            "id": "comment-14489741",
            "author": "Adrien Grand",
            "date": "2015-04-10T15:01:07+0000",
            "content": "Same patch with improved javadocs, does it look better? "
        },
        {
            "id": "comment-14489745",
            "author": "Robert Muir",
            "date": "2015-04-10T15:05:14+0000",
            "content": "great, thanks! "
        },
        {
            "id": "comment-14491979",
            "author": "ASF subversion and git services",
            "date": "2015-04-13T06:40:40+0000",
            "content": "Commit 1673118 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1673118 ]\n\nLUCENE-6415: Make TermsQuery.extractTerms a no-op instead of throwing an UOE. "
        },
        {
            "id": "comment-14491989",
            "author": "ASF subversion and git services",
            "date": "2015-04-13T06:55:08+0000",
            "content": "Commit 1673119 from Adrien Grand in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1673119 ]\n\nLUCENE-6415: Make TermsQuery.extractTerms a no-op instead of throwing an UOE. "
        },
        {
            "id": "comment-14586851",
            "author": "Anshum Gupta",
            "date": "2015-06-15T21:43:27+0000",
            "content": "Bulk close for 5.2.0. "
        }
    ]
}