{
    "id": "SOLR-9069",
    "title": "Cleanup/rename confusion of shardCount in tests actually being serverCount",
    "details": {
        "components": [
            "Tests"
        ],
        "type": "Test",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Won't Fix",
        "priority": "Major"
    },
    "description": "BaseDistributedSearchTestCase has a shardCount field, which can be set directly or via the @ShardsFixed annotation.  For some (esp. older) tests, this is in fact the number of \"shards\" (disjoint slices of your overall data), but it's also the number of Solr/Jetty servers/nodes.  Subclasses like AbstractFullDistribZkTestBase define sliceCount, adding to the confusion, and define however many shards (slices) they want \u2013 separately from the number of servers (which is configured confusingly, as stated, via ShardsFixed).  This is confusing!  I'm not 100% sure what the solution is, I'll suggest some ideas, but we should discuss.\n\nOf course we got to this situation historically before SolrCloud existed; no excuses needed.  Now we should fix it.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-05-04T18:31:34+0000",
            "author": "Alan Woodward",
            "content": "My suggestion: nuke BaseDistributedSearchTestCase entirely and migrate everything to SolrCloudTestCase.  I'm going to be working on that this week... ",
            "id": "comment-15271153"
        },
        {
            "date": "2016-05-04T18:39:36+0000",
            "author": "David Smiley",
            "content": "Some other confusion is that some fields/methods are only intended for use with the default collection (which can be configured).  Like sliceCount \u2013 doesn't apply to tests that create their own collections using whatever settings they please. ",
            "id": "comment-15271162"
        },
        {
            "date": "2016-05-04T18:43:08+0000",
            "author": "David Smiley",
            "content": "That sounds great actually.  I temporarily forgot about that beauty because I was fixated on one improving one of our existing tests that descend from AbstractFullDistribZkTestBase. ",
            "id": "comment-15271171"
        },
        {
            "date": "2016-05-05T02:49:50+0000",
            "author": "David Smiley",
            "content": "BaseDistributedSearchTestCase actually doesn't bother me, it's the other abstract classes below it for ZK \u2013 AbstractDistribZkTestBase and AbstractFullDistribZkTestBase.  BaseDistributedSearchTestCase is very useful for testing parity between sharded and non-sharded.  Do you have plans to introduce another mechanism to replace this key nature of BaseDistributedSearchTestCase?\n\n...migrate everything to SolrCloudTestCase. I'm going to be working on that this week...\n\nThat sounds like a lot of work!  You might first introduce a test shim, deprecated from the outset, that exists to house many of the utility methods involved.  And then tests below AbstractDistribZkTestBase can subclass this one.  This will make the change less disruptive and more manageable. ",
            "id": "comment-15271818"
        },
        {
            "date": "2016-05-05T04:18:05+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "My suggestion: nuke BaseDistributedSearchTestCase entirely and migrate everything to SolrCloudTestCase.\n\nI am all for cutting over cloud tests to SolrCloudTestCase but BaseDistributedSearchTestCase is for testing non-cloud distributed search e.g. TestDistributedSearch so it shouldn't be nuked entirely. ",
            "id": "comment-15271865"
        }
    ]
}