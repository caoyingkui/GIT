{
    "id": "SOLR-11644",
    "title": "RealTimeGet not working when router.field is not an uniqeKey",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "6.6.2,                                            7.1",
        "resolution": "Information Provided",
        "status": "Resolved"
    },
    "description": "I have a schema with following fields:\n\n\n    <field name=\"candidate_id\" type=\"string\" required=\"true\"/>\n    <field name=\"company_id\" type=\"string\" required=\"true\"/>\n    <field name=\"name\" type=\"string\"/>\n    <uniqueKey>candidate_id</uniqueKey>\n\n\n\nA collection was created with following parameters:\n\n\tnumShards=4\n\treplicationFactor=2\n\trouter.field=company_id\n\n\n\nWhen I try to do a Real Time Get with no routing information:\n\n/get?id=1044101665\n\n\nI get an empty response.\n\nWhen I try to add routing information (search returns document for these values):\n\n/get?id=1044101665&_route_=77493783\n\n\nI get an error:\n\norg.apache.solr.common.SolrException: Can't find shard 'applicants_shard7'\n\tat org.apache.solr.handler.component.RealTimeGetComponent.sliceToShards(RealTimeGetComponent.java:888)\n\tat org.apache.solr.handler.component.RealTimeGetComponent.createSubRequests(RealTimeGetComponent.java:835)\n\tat org.apache.solr.handler.component.RealTimeGetComponent.distributedProcess(RealTimeGetComponent.java:791)\n\tat org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:345)\n\tat org.apache.solr.handler.RealTimeGetHandler.handleRequestBody(RealTimeGetHandler.java:46)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:177)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2484)\n\tat org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:720)\n\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:526)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:382)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:326)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1751)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:582)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1180)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:512)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1112)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:119)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)\n\tat org.eclipse.jetty.rewrite.handler.RewriteHandler.handle(RewriteHandler.java:335)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:534)\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:320)\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:251)\n\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:283)\n\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:108)\n\tat org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93)\n\tat org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.executeProduceConsume(ExecuteProduceConsume.java:303)\n\tat org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceConsume(ExecuteProduceConsume.java:148)\n\tat org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:136)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:671)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:589)\n\tat java.lang.Thread.run(Thread.java:748)\n\n\n\nIn logs I can find the following line:\n\n2017-11-15 13:20:09.369 INFO  (qtp257895351-1305) [c:applicants s:shard9 r:core_node19 x:applicants_shard9_replica_n16] o.a.s.h.c.RealTimeGetComponent LOOKUP_SLICE:shard12=http://solr-applications1-int:8983/solr/applicants_shard12_replica_n22/\n\n\n\nIt seems that RealTimeGet checks the shard number for the \"candidate_id\" field (which is a unique field) and it gets: shard7 (see exception).\nIt should check the shard number for the \"company_id\" field (set by router.field) and then it would get the correct shard12 (one visible in logs).",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-11-15T15:54:03+0000",
            "content": "In code for every id there is a call made (https://github.com/apache/lucene-solr/blob/master/solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent.java#L820):\n\n\nSlice slice = coll.getRouter().getTargetSlice(id, null, null, params, coll);\n\n\n\nit goes to HashBasedRouter in my case (https://github.com/apache/lucene-solr/blob/master/solr/solrj/src/java/org/apache/solr/common/cloud/HashBasedRouter.java#L32):\n\n\n  @Override\n  public Slice getTargetSlice(String id, SolrInputDocument sdoc, String route, SolrParams params, DocCollection collection) {\n    int hash;\n    if (route != null) {\n      hash = sliceHash(route, sdoc, params, collection);\n    } else {\n      if (id == null) id = getId(sdoc, params);\n      hash = sliceHash(id, sdoc, params, collection);\n    }\n    return hashToSlice(hash, collection);\n  }\n\n\n\nSo the slice is calculated using id (what is wrong in my case). \"_route_\" parameter is omitted... ",
            "author": "Jarek Mazgaj",
            "id": "comment-16253680"
        },
        {
            "date": "2018-09-27T17:17:38+0000",
            "content": "Ran across this looking for something else.\n\nYonik Seeley This seems like a misunderstanding of the interplay between\u00a0<uniqueKey>\u00a0and routing in general, WDYT? Should this just be closed as invalid?\n\nRouting on one field (with duplicate values) and having a <uniqueKey> be a different field then expecting RTG to find the document seems \"fraught\". ",
            "author": "Erick Erickson",
            "id": "comment-16630756"
        },
        {
            "date": "2018-09-28T14:13:44+0000",
            "content": "Erick Erickson you are right. Most likely it was caused by my\u00a0misunderstanding. It was not clear for me that I cannot use\u00a0router.field and router.name=compositeId. It seemed like a really useful combination in our use case.\n\nIt is not clearly described here:\nhttps://lucene.apache.org/solr/guide/6_6/collections-api.html\n\nThis could be also validated in code. It would save me a lot of time if CREATE API call just failed in this case. ",
            "author": "Jarek Mazgaj",
            "id": "comment-16631907"
        },
        {
            "date": "2018-09-28T15:03:46+0000",
            "content": "Hmmm, it's perfectly valid to specify a routing field with a compositeId router, so failing the collection creation isn't correct.\n\nLooking again, is this a typo?\n\nget?id=1044101665\n\nGiven your schema, it should be:\n\nget?candidate_id=1044101665\n\nBTW, I know it's been almost a year, but asking questions like this on the user's list first is a better option since it would have had more eyes-on and maybe gotten a response a lot sooner.\n\nAlso from the ref guide:\nPlease note that RealTime Get or retrieval by id would also require the parameter route (or shard.keys) to avoid a distributed search.\n\nI'll go ahead and close this then. ",
            "author": "Erick Erickson",
            "id": "comment-16631975"
        },
        {
            "date": "2018-10-08T19:44:52+0000",
            "content": "\u00a0Please note that RealTime Get or retrieval by id would also require the parameter route (or shard.keys) to avoid a distributed search.\nAnd from Solr 4.5 CHANGES entry\n\n\tThe routing parameter \"shard.keys\" is deprecated as part of SOLR-5017 .The new parameter name is 'route' .\n The old parameter should continue to work for another release (Noble Paul)\n\n\n\u00a0\n\nWe should remove \"shard.keys\" from the ref-guide then?\n\n\u00a0\n\n\u00a0\nGiven your schema, it should be:\n\nget?candidate_id=1044101665\nAre we sure? It would be a strange syntax to support right? Here's an example from the ref-guide ( https://lucene.apache.org/solr/guide/6_6/realtime-get.html )\n\nhttp://localhost:8983/solr/techproducts/get?ids=mydoc,IW-02\n\nWould this be supported? \n\nHere's a snippet from RealTimeGetComponent that makes me think this won't be supported\n\nfinal String id[] = params.getParams(ID);\nfinal String ids[] = params.getParams(\"ids\");\n\n\u00a0\n\n\u00a0\n\n\u00a0\nRouting on one field (with duplicate values) and having a <uniqueKey> be a different field then expecting RTG to find the document seems \"fraught\".\nBut the use-case would be valid right? I want to shard by a field which has company id information and at search time use the _route param so that I can limit the number of shards I go against. If it works for /select queries then shouldn't it also work for /get queries ?\n\n\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16642378"
        },
        {
            "date": "2018-10-08T20:49:21+0000",
            "content": "\n// if shards=... then use that\nif (zkController != null && params.get(ShardParams.SHARDS) == null) {\n  CloudDescriptor cloudDescriptor = rb.req.getCore().getCoreDescriptor().getCloudDescriptor();\n\nWe also support a \"shards\" param that isn't documented in http://lucene.apache.org/solr/guide/7_5/realtime-get.html ",
            "author": "Varun Thacker",
            "id": "comment-16642470"
        }
    ]
}