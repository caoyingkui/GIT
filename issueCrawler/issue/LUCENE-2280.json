{
    "id": "LUCENE-2280",
    "title": "IndexWriter.optimize() throws NullPointerException",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/index"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "2.3.2",
        "resolution": "Unresolved",
        "status": "Reopened"
    },
    "description": "I am using lucene 2.3.2 search APIs for my application, i am indexing 45GB database which creates approax 200MB index file, after finishing the indexing and while running optimize() i can see NullPointerExcception thrown in my log and index file is getting corrupted, log says\n\n------------------------------------------------------------------------\nCaused by: \njava.lang.NullPointerException\n\tat org.apache.lucene.store.BufferedIndexOutput.writeBytes(BufferedIndexOutput.java:49)\n\tat org.apache.lucene.store.IndexOutput.writeBytes(IndexOutput.java:40)\n\tat org.apache.lucene.index.SegmentMerger.mergeNorms(SegmentMerger.java:566)\n\tat org.apache.lucene.index.SegmentMerger.merge(SegmentMerger.java:135)\n\tat org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:3273)\n\tat org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:2968)\n\tat org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread.run(ConcurrentMergeScheduler.java:240)\n------------------------------------------------------------------------\nand this is happening quite frequently, although I am not able to reproduce it on demand, I saw an issue logged which is some what related to mine issue (http://mail-archives.apache.org/mod_mbox/lucene-solr-user/200809.mbox/%3C6E4A40DB-5EFC-42DA-A857-D59F4EC3496B@mikemccandless.com%3E) but the only difference here is I am not using Store.Compress for my fields, i am using Store.NO instead. please note that I am using IBM JRE for my application.\n\nIs this an issue with lucene?, if yes it is fixed in which version?",
    "attachments": {
        "lucene.jar": "https://issues.apache.org/jira/secure/attachment/12436850/lucene.jar",
        "lucene.zip": "https://issues.apache.org/jira/secure/attachment/12439035/lucene.zip",
        "LuceneUtils.zip": "https://issues.apache.org/jira/secure/attachment/12439459/LuceneUtils.zip"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2010-02-23T11:46:50+0000",
            "content": "Are you sure you're using a stock version 2.3.2 of Lucene?\n\nI ask because... the line numbers in SegmentMerger (specifically 566) don't correlate to 2.3.2.  The other line numbers do match.  It's odd.\n\nBut looking at the code I don't see how either of the arrays being passed to System.arraycopy can be null.\n\nCan you turn on IndexWriter's infoStream and capture & post the output?\n\nIt's also strange that this leads to index corruption; it shouldn't (the merge should just fail, and the index should be untouched).  Can you run CheckIndex on the index and post what corruption it uncovers.\n\nDoes this happen in a Sun JRE? ",
            "author": "Michael McCandless",
            "id": "comment-12837204"
        },
        {
            "date": "2010-02-24T11:23:33+0000",
            "content": "Are you sure you're using a stock version 2.3.2 of Lucene?\n\n\tYes, I checked the manifest of the jar.\n\n\n\nI ask because... the line numbers in SegmentMerger (specifically 566) don't correlate to 2.3.2. The other line numbers do match. It's odd.\n\nBut looking at the code I don't see how either of the arrays being passed to System.arraycopy can be null.\n\nCan you turn on IndexWriter's infoStream and capture & post the output?\n\n\tI have turned on the infostream for IndexWriter, it will take some time to get the result. once I get the result I will post that.\n\n\n\nIt's also strange that this leads to index corruption; it shouldn't (the merge should just fail, and the index should be untouched). Can you run CheckIndex on the index and post what corruption it uncovers.\n\n\tHere index corruption I mean that the main index file is getting deleted and search is not returning expected result. Hence there is no index file exists after the NullPointerExcepton, I cannot run CheckIndex.\n\n\n\nDoes this happen in a Sun JRE?\n\n\tI have not yet tested the same scenario on Sun JRE till now.\n\n ",
            "author": "Ritesh Nigam",
            "id": "comment-12837744"
        },
        {
            "date": "2010-02-24T14:24:16+0000",
            "content": "Attaching the lucene.jar which i am using for my application. ",
            "author": "Ritesh Nigam",
            "id": "comment-12837799"
        },
        {
            "date": "2010-02-24T14:25:42+0000",
            "content": "lucene.jar my application is using ",
            "author": "Ritesh Nigam",
            "id": "comment-12837800"
        },
        {
            "date": "2010-02-24T17:23:29+0000",
            "content": "Indeed that JAR is identical to 2.3.2.  Weird.  Not sure why the line number doesn't line up.  Irks me.\n\nHere index corruption I mean that the main index file is getting deleted and search is not returning expected result. Hence there is no index file exists after the NullPointerExcepton, I cannot run CheckIndex.\n\nThat's even stranger \u2013 nothing should get deleted because a merge fails.  Is it possible your app has an exception handler doing this?  Or maybe this is a brand new index, and it doesn't get properly closed (ie, no commit) when this exception is hit?  If not... can you provide more details?  An exception like this should have no impact on the original index.\n\nPlease post the infoStream output when you get it, and report back whether this happens on Sun's JVM.  But I still can't see how either of the arrays could be null here... this is a weird one.\n\nAre you using the latest updates to the IBM 1.6 JRE? ",
            "author": "Michael McCandless",
            "id": "comment-12837892"
        },
        {
            "date": "2010-03-03T13:55:07+0000",
            "content": "Sorry for the delayed response but i was trying to collect some data, I still have to wait for the log created by lucene APIs after turning on infostream, i will post that log file as soon as i get it. To answer your questions, i am running on Windows 2003 server with IBM JRE 1.6 and I am trying to index a database that is about 45 GB in size. On Unix, i am not facing this issue.\n\nWith the lucene logging on, i waited for about 2 days for the NPE to reoccur, but it did not happen. I was tyring with the stock jar file of lucene 2.3.2. However, indexing failed again and the index file was again deleted. Looking into the logs this time, I found the following exceptions:\n\n16:06:48 03/01/2010: Fatal error while indexing CRs.\nStack trace: java.io.FileNotFoundException: index_21f.fdt (The system cannot find the file specified.)\n\tat java.io.RandomAccessFile.open(Native Method)\n\tat java.io.RandomAccessFile.<init>(RandomAccessFile.java:218)\n\tat org.apache.lucene.store.FSDirectory$FSIndexInput$Descriptor.<init>(FSDirectory.java:506)\n\tat org.apache.lucene.store.FSDirectory$FSIndexInput.<init>(FSDirectory.java:536)\n\tat org.apache.lucene.store.FSDirectory.openInput(FSDirectory.java:445)\n\tat org.apache.lucene.store.FSDirectory.openInput(FSDirectory.java:440)\n\tat org.apache.lucene.index.CompoundFileWriter.copyFile(CompoundFileWriter.java:206)\n\tat org.apache.lucene.index.CompoundFileWriter.close(CompoundFileWriter.java:173)\n\tat org.apache.lucene.index.DocumentsWriter.createCompoundFile(DocumentsWriter.java:576)\n\tat org.apache.lucene.index.IndexWriter.doFlush(IndexWriter.java:2708)\n\tat org.apache.lucene.index.IndexWriter.flush(IndexWriter.java:2539)\n\tat org.apache.lucene.index.IndexWriter.closeInternal(IndexWriter.java:1222)\n\tat org.apache.lucene.index.IndexWriter.close(IndexWriter.java:1196)\n\tat org.apache.lucene.index.IndexWriter.close(IndexWriter.java:1164)\n\nI am not sure if deletion of the index file when these exceptions are thrown, is the right behaviour. \n\nI am re-running my test to try and reproduce the NPE issue which i had reported earlier and i intend to pass on the logs to you as soon as i have it. However, are you aware of any issue that a combination of IBM JRE + Windows 2003 server would have with lucene?\n\nAs far as the code is concern I am closing the indexwriter in finally block, when is thrown I am logging it in catch block and then finally closing the indexwriter.\n\n ",
            "author": "Ritesh Nigam",
            "id": "comment-12840660"
        },
        {
            "date": "2010-03-06T10:53:24+0000",
            "content": "However, indexing failed again and the index file was again deleted. \n\nAre you calling .commit() periodically?  It's odd, otherwise, that you have no index on hitting any problem.  (It's not necessary to call commit until the very end, if you don't need readers to see the ongoing changes, don't need the durability, etc.).\n\nI am not sure if deletion of the index file when these exceptions are thrown, is the right behaviour.\nStack trace: java.io.FileNotFoundException: index_21f.fdt (The system cannot find the file specified.)\n\nLucene isn't \"intentionally\" deleting files that are referenced by the commit.  But if you're not committing during the whole IW session, then you'd see no index at the end.\n\nBut, this FNFE is not expected in any event.  Seeing the full infoStream leading to this may help...\n\nThat FNFE is happening as IW tries to build the CFS of the segment flushed during close.\n\nAre you using autoCommit=true or false?\n\nThe fact that this only happens on Windows is telling.... is there a virus checker running on this machine?\n\nIt'd also be good to know if this still happens on newer versions of Lucene. ",
            "author": "Michael McCandless",
            "id": "comment-12842244"
        },
        {
            "date": "2010-03-08T13:51:25+0000",
            "content": "I checked the documentation of IndexWriter in 2.3.2, API commit() is not available with this version (I think it is introduced in 2.4), I am not explicitely setting autoCommit, so it should take default value which I believe is \"true\".\n\nOne more thing I am catching any exception hitting during indexing or optimizing, and then in finally block i am closing the IndexWriter by calling close(), method which sould take care of commit internally? Please suggest me if there is any equivalent method which i can use in place of commit()\n\nI have not upgraded to the newer version of lucene, but probably i will try 3.0.0 version of lucene in future. ",
            "author": "Ritesh Nigam",
            "id": "comment-12842657"
        },
        {
            "date": "2010-03-08T16:06:11+0000",
            "content": "I checked the documentation of IndexWriter in 2.3.2, API commit() is not available with this version (I think it is introduced in 2.4), I am not explicitely setting autoCommit, so it should take default value which I believe is \"true\".\n\nAhh right sorry.  Hard to remember that far back!\n\nOne more thing I am catching any exception hitting during indexing or optimizing, and then in finally block i am closing the IndexWriter by calling close(), method which sould take care of commit internally? Please suggest me if there is any equivalent method which i can use in place of commit()\n\nThat's right, though, Lucene doesn't call \"fsync\" (to the OS) in\n2.3.x... so if the machine/OS crashes it could corrupt your index.  So\nit's not quite doing the same thing as commit() does in newer Lucene\nreleases (ensure durability), but it does save everything to the\nindex.\n\nI have not upgraded to the newer version of lucene, but probably i will try 3.0.0 version of lucene in future.\n\nOK. ",
            "author": "Michael McCandless",
            "id": "comment-12842710"
        },
        {
            "date": "2010-03-17T13:27:28+0000",
            "content": "Yesterday again search indxer crashed for my application and index file got deleted, this time had turned on the infostream on for indexwriter, attaching the infostream log file. ",
            "author": "Ritesh Nigam",
            "id": "comment-12846408"
        },
        {
            "date": "2010-03-17T13:29:22+0000",
            "content": "Lucene infostream log file. ",
            "author": "Ritesh Nigam",
            "id": "comment-12846409"
        },
        {
            "date": "2010-03-18T13:26:10+0000",
            "content": "I installed a test setup with lucene 3.0.0 and tried to reproduce the scenario with NPE, but after the Exception thrown, main index file is not getting deleted but only optimize is failing and i can see some small index file (.cfs) also along with main index file, and one more thing here is i am not using commit yet, but using close(), does close do the same thing as commit does?\n\nBy looking at above behavior, is there a bug in 2.3.2 version where this kind of situaion is not handled properly?\n\nCan you please have a look at the log which i got after turning on the infostream for IndexWriter(for lucene 2.3.2). Attached as lucene.zip. ",
            "author": "Ritesh Nigam",
            "id": "comment-12846892"
        },
        {
            "date": "2010-03-18T16:32:42+0000",
            "content": "From the log I can see that you run fine for a long time, opening IW,\nindexing a few docs, optimizing, then closing.  Then suddenly the\nexceptions start happening on many (but not all) merges, and, merges\ninvolving different segments.  JRE bug seems most likely I guess...\n\nSince you see this only on Windows (not eg on Linux), I think this is\nlikely not a bug in Lucene but rather something particular about your\nWindows env \u2013 virus checker maybe?  Is there anything in the Windows\nevents log that correlate to when the exceptions start?\n\nOr it could be a JRE bug \u2013 you really should try on different (Sun)\nJRE. ",
            "author": "Michael McCandless",
            "id": "comment-12846984"
        },
        {
            "date": "2010-03-18T16:34:28+0000",
            "content": "Yes close() does commit() internally.\n\nAre you saying you see the same exception on 3.0, using the IBM JRE?  Can you try with the Sun JRE? ",
            "author": "Michael McCandless",
            "id": "comment-12846985"
        },
        {
            "date": "2010-03-19T14:00:05+0000",
            "content": "I will further investigate it if it is a JRE bug, There are few points which i need some advise\n1. To fix this issue if i disable the optimize (remove the call to IndexWriter.optimize() from my code) will that create any problem in the long run? if yes what kind of problems it may create?\n2. Just by knowing the scenario, that after a NullPointerException, index file gets deleted, can you provide me a patch where any kind of exception is handled by the Lucene API and my index remains untouched? ",
            "author": "Ritesh Nigam",
            "id": "comment-12847376"
        },
        {
            "date": "2010-03-19T17:51:40+0000",
            "content": "1. To fix this issue if i disable the optimize (remove the call to IndexWriter.optimize() from my code) will that create any problem in the long run? if yes what kind of problems it may create?\n\nMost apps never need to optimize.\n\nYou should only optimize if your search performance is not good enough, and really, before using optimize you should explore other ideas (see ImproveSearchingSpeed on the wiki).\n\n2. Just by knowing the scenario, that after a NullPointerException, index file gets deleted, can you provide me a patch where any kind of exception is handled by the Lucene API and my index remains untouched?\n\nCan't make a patch here until we understand what's actually happening...\n\nIt looks like your index got truncated at IW 443.  Hmm actually it looks like IW 442 never successfully closed.  (do a grep for \": at close:\" and you'll see it's missing).\n\nMaybe this is the problem.  Because every merge kept hitting exceptions it looks like IW 442, even on close, was throwing the exceptions, and never closed properly.\n\nCan you try using IW.close(false) in your finally clause?  This aborts all running merges and closes the index and likely will workaround whatever (seeming like a JRE bug) is causing the NPE during merging.\n\nAlso, you could try using autoCommit=false. ",
            "author": "Michael McCandless",
            "id": "comment-12847471"
        },
        {
            "date": "2010-03-22T14:06:04+0000",
            "content": "Thanks michael, the fix you provided seems to be working fine for me, after using close(false) index file is not getting deleted and search is also working fine though optimization is not happening but still its fine as far as search is working. I have attached a sample application which replicates the actual application, please have a look at that and let me know if anything else can be fine tuned.  ",
            "author": "Ritesh Nigam",
            "id": "comment-12848135"
        },
        {
            "date": "2010-03-22T14:07:52+0000",
            "content": "Sample application which replicates the actual application. ",
            "author": "Ritesh Nigam",
            "id": "comment-12848137"
        },
        {
            "date": "2013-11-30T13:15:15+0000",
            "content": "2013 Old JIRA cleanup ",
            "author": "Erick Erickson",
            "id": "comment-13835686"
        }
    ]
}