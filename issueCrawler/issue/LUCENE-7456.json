{
    "id": "LUCENE-7456",
    "title": "PerField(DocValues|Postings)Format do not call the per-field merge methods",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "6.2.1",
        "components": [
            "core/codecs"
        ],
        "labels": "",
        "fix_versions": [
            "6.3",
            "7.0"
        ],
        "priority": "Major",
        "status": "Resolved",
        "type": "Bug"
    },
    "description": "While porting some old codec code from Lucene 4.3.1, I couldn't get the per-field formats to call upon the per-field merge methods; the default merge method was always being called.\n\nI think this is a side-effect of LUCENE-5894.\n\nAttached is a patch with a test that reproduces the error and an associated fix that pass the unit tests.",
    "attachments": {
        "LUCENE-7456.patch": "https://issues.apache.org/jira/secure/attachment/12829596/LUCENE-7456.patch",
        "LUCENE-7456-v2.patch": "https://issues.apache.org/jira/secure/attachment/12830512/LUCENE-7456-v2.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15510740",
            "author": "Michael McCandless",
            "date": "2016-09-21T18:18:57+0000",
            "content": "Wow, nice catch!  Thank you.\n\nOur default codec postings & doc values format doesn't override the merge method, so I guess the impact here on a default Lucene usage is minor.  But if you customize your codec then it could matter if you have a better merge impl than the naive default.\n\nI'll review the patch. "
        },
        {
            "id": "comment-15517448",
            "author": "Michael McCandless",
            "date": "2016-09-23T20:13:39+0000",
            "content": "It's a little spooky how sneaky this patch needs to be, temporarily\noverwriting MergeState members, adding a FilterFieldsProducer,\nFilterFieldsInfos.\n\nCan we improve those latter two classes to e.g. reject a field that\nwas not in the restricted set, if you call\nFilterFieldInfos.fieldInfo or FilterFieldsProducer.terms on an\ninvalid field name?\n\nThe FilterFieldsInfos is also in a precarious state, having to include\nall incoming FieldInfo instances so the numbers are consistent, yet\nonly overriding the iterator.\n\nMethods like FilterFieldInfos.hasProx, etc., are also wrong, which can\nresult in sneaky future bugs for codecs that rely on this.\n\nI don't really like the complexity in this patch: I think this is a little too much\nsneakiness.  Yet, I don't know of a cleaner way to fix the bug.\n\nStepping back a bit, can you describe the use case motivating allowing\nyour custom codec to override the default merging for doc values /\npostings? "
        },
        {
            "id": "comment-15526416",
            "author": "Julien Massenet",
            "date": "2016-09-27T15:08:28+0000",
            "content": "I agree that being this sneaky is not ideal, but the only alternative I see would be change the Postings API.\n\nIn this patch, I tried to keep modifications constrained to the org.apache.lucene.codecs.perfield package, but I can give a shot at trying to a come up with a cleaner implementation that updates the other APIs if you want.\n\nI've uploaded an updated version of the patch which does not remove the sneakiness but makes the PerFieldMergeState more robust:\n\n\tThe FilterFieldInfos class now correctly computes and exposes the hasXXX properties.\n\tCalls to FilterFieldInfos.fieldInfo() and FilterFieldsProducer.terms() now throw IllegalArgumentException if called with fields outside if the current merge context\n\tI've tweaked the unit tests to work with the latest 6.2.1 since the Legacy* field types are not accessible in this module anymore.\n\n\n\nAs for why we're overriding merge() calls in our codec:\n\n\tWe're using a customized codec to emulate nested documents.\n\tIt works with the same idea as BlockJoin, but is less generic (it's tailored to our use case).\n\tThe main difference is that the maxDoc() for segments remain equal to the number of \"parent\" documents, with only the nested fields having larger posting lists.\n\tFor it to work, when merging, we need to rebase correctly the \"docIds\" for the nested documents (using the same idea as the docMap in the general use case).\n\n "
        },
        {
            "id": "comment-15545657",
            "author": "Michael McCandless",
            "date": "2016-10-04T15:27:47+0000",
            "content": "Thanks Julien Massenet, I think this patch is a good step forwards, and we can try to simplify the approach in future issues (progress not perfection!).\n\nI'll fixup the minor failures from ant precommit and push. "
        },
        {
            "id": "comment-15545667",
            "author": "ASF subversion and git services",
            "date": "2016-10-04T15:31:54+0000",
            "content": "Commit a6a8032c7f079ea59daea0c95e48f69b2986d918 in lucene-solr's branch refs/heads/branch_6x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a6a8032 ]\n\nLUCENE-7456: PerFieldPostings/DocValuesFormat was failing to delegate the merge method "
        },
        {
            "id": "comment-15545803",
            "author": "ASF subversion and git services",
            "date": "2016-10-04T15:53:15+0000",
            "content": "Commit 796ed508f39683c626d4870a7ab583a222b2c64c in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=796ed50 ]\n\nLUCENE-7456: PerFieldPostings/DocValuesFormat was failing to delegate the merge method "
        },
        {
            "id": "comment-15545804",
            "author": "Michael McCandless",
            "date": "2016-10-04T15:53:32+0000",
            "content": "Thank you Julien Massenet! "
        }
    ]
}