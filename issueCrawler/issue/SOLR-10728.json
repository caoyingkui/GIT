{
    "id": "SOLR-10728",
    "title": "fix/improve rat-sources and check-forbidden-api in solr-ref-guide",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "documentation"
        ],
        "type": "Sub-task",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "via email from uwe...\n\n\nWe have already a check for licenses by default enabled in all sub directories of the build. It's called \"rat-sources\"\nThe problem with the rat-sources ant target is, that although it runs on the ref-guide subdirectory, it does not catch\nviolations for several reasons:\n\n1. it does not yet look into all file types\n\n2. for some files, e.g. the java code, you are using a non-standard subdirectory of the project folder. To fix this, there are\ntwo options: a) move to src/.../java or tools like in other modules (by that they are also compiled automatically without extra\ncompilation tasks in build.xml) or b) add the additional directories  to some special ANT property _before_ loading\ncommon-build.xml:\n\n  <!-- These patterns can be defined to add additional files for checks, relative to module's home dir -->\n  <property name=\"rat.additional-includes\" value=\"\"/>\n  <property name=\"rat.additional-excludes\" value=\"\"/>\n\nIn the local build, you can configure the license checker by adding those lines fillesd out *before* including\ncommon-build.xml. If you open an issue, I can maybe take care of that this week (I am a bit busy). I'd also like to clean up\nthe build directory, because it has some code duplication automatically handled by common-build.xml. In addition other checks\nare missing, too - because the non-standard folder names (e.g. forbidden-apis).",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-05-22T21:16:55+0000",
            "content": "\nOne note: the primary reason behind the current directory structure under solr/solr-ref-guide was to ensure that the \"tools\" didn't get lumped in with the actually \"src\" of the ref-guide.  but i gather from uwe's comments that having these tools outside of the \"src\" directory is problematic because of other assumptions in the common build files.\n\nso i'm not really clear on what the best pathforward is ... IIUC Uwe's saying we can add \"rat.additional-includes\" to get RAT to find the files in their current paths, but that he wants to move/refactor some of the build stuff (in some way i'm not 100% clear on) anyway because of how forbidden-apis work ... so in the absence of more specific instructions i'm going to leave this alone until Uwe has a chance to look at it. ",
            "author": "Hoss Man",
            "id": "comment-16020222"
        },
        {
            "date": "2017-05-22T21:37:34+0000",
            "content": "I don't think we really need to move the Java Tools files. But for a more Maven like setup it should be sec/tools/java. This allows the build tools to better do checks, as it's somewhere where common's glob patterns match.\n\nHere is example about how to use the rat-sources special properties, also using the recommended tools dir layout: https://github.com/apache/lucene-solr/blob/master/lucene/analysis/common/build.xml\n\nThis should make some automatism work. We may need to add some stuff to solr top level build file to delegate the precommit checks down. ",
            "author": "Uwe Schindler",
            "id": "comment-16020239"
        },
        {
            "date": "2017-05-22T22:13:31+0000",
            "content": "I don't think we really need to move the Java Tools files. But for a more Maven like setup it should be sec/tools/java. This allows the build tools to better do checks, as it's somewhere where common's glob patterns match.\n\nOk, now I'm more confused...\n\nFirst you said \"In addition other checks are missing, too - because the non-standard folder names (e.g. forbidden-apis).\"  Since the only java code in solr/solr-ref-guide is the \"tools\" that seemed like a pretty clear indication that you felt the tools needed to move.  but now you're saying we don't need to move them unless we want to be \"more maven like\".\n\nThe crux of my confusion is this...\n\n\n\tAssuming we do want to be more maven like, and we want to do things \"the right way\" as far as the existing common build assumptions work, to ensure things like forbidden-apis work w/as few customizations as possible in solr/solr-ref-guide then how exactly you do you suggest we organize the various types of files in solr/solr-ref-guide ?\n\tfor #1, please remember that the true \"Source\" of the solr-ref-guide is the asciidoc files \u2013 not any code \u2013 and that we want to ensure these (java) \"Tools\" don't pollute the \"Source\" ... so if we move solr/solr-ref-guide/tools to solr/solr-ref-guide/src/tools(/java?) then where exactly do you feel that the asciidoc files currently in solr/solr-ref-guide/src should live?\n\n\n\n(if we still also need custom RAT includes because the *.adoc files are atypical then so be it, but i'd prefer to make sure i understand how exactly you feel like the directory structure should be organized before getting too deep in the weeds with build.xml customizations that in some cases may not be needed if the directories are \"fixed\") ",
            "author": "Hoss Man",
            "id": "comment-16020283"
        },
        {
            "date": "2017-05-23T07:22:16+0000",
            "content": "Hi Hoss,\n\nSorry I was a bit unclear yesterday. It was late!\n\nIn general, if you look at other modules in Lucene/Solr, you will see that they have a layout, that formed like Maven builds (not completely, because we do not have src/main/ up to now). You have a sub directory below src, \"main (or java, we need to change this to main/java at some point), test, tools\". I suggest to use the same layout for the ref guide: src/docs (or src/main) and src/tools/java. When you have main, test and tools you have 3 types of source files.\n\nAs example see the analysis/common package. It actually has a main java folder, the tests and then a tools folder below src. The test folder is additionally split between java and groovy, because we have both types of tools.\n\nI can look into this!\n\nIndeed, we can keep the current layout, because the properties explained above can be customized! So see this as a suggestion to make it more consistent, especially with Maven/Gradle world. If we change at some point away from Ant, we would make life easier. ",
            "author": "Uwe Schindler",
            "id": "comment-16020752"
        },
        {
            "date": "2017-05-23T17:16:41+0000",
            "content": "I suggest to use the same layout for the ref guide: src/docs (or src/main) and src/tools/java. When you have main, test and tools you have 3 types of source files.\n\nOk ... gotcha ... src/docs is the part i wasn't clear on before ... you mentioned setting it up to match other modules, and having a src/.../java but the ref-guide is different then every other module becuase there is no \"main source java\" \u2013 just the tools.  so i was trying to figure out where you wanted to shoehorn the *.adoc files into the src/(java|test|tools) convention we use everywhere else ... adding \"src/docs\" clears that up\n\nFWIW: I experimented locally with this (moving everything in src to src/docs and tools to src/tools) and making the minor tweaks needed to the build.xml to get the html & pdf builds to work, but that still didn't make ant check-forbidden-apis happy because there's still no src/java ... which is the same error as before i tried re-orging files (hence my confusion and vague concern that maybe you ment we should put the *.adoc files in src/java to \"fix\" this) ... so i abandoned that.\n\nI can look into this!\n\nThat would be awesome, because i just keep confusing myself as i try to unravel the build targets ... if/when you get a chance to take a look at it, feel free to ping me if you have any questions/concerns about where/how/why any of the solr-ref-guide specific build targets/tools work. ",
            "author": "Hoss Man",
            "id": "comment-16021499"
        }
    ]
}