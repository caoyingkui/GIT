{
    "id": "SOLR-8184",
    "title": "Negative tests for JDBC Connection String",
    "details": {
        "components": [],
        "type": "Test",
        "labels": "",
        "fix_versions": [
            "6.1",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Implemented",
        "priority": "Minor"
    },
    "description": "Ticket to track negative tests for JDBC connection string SOLR-7986",
    "attachments": {
        "SOLR-8184.patch": "https://issues.apache.org/jira/secure/attachment/12767942/SOLR-8184.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-10-22T02:08:32+0000",
            "author": "Susheel Kumar",
            "content": "Negative tests for JDBC Connection String ",
            "id": "comment-14968375"
        },
        {
            "date": "2015-10-22T02:11:09+0000",
            "author": "Susheel Kumar",
            "content": "Some observations:\n\nThe test \"testConnectionStringWithMissingZKHost\" throws SolrException / TimeOutException than SQLException and similarly the test \"testConnectionStringWithWrongCollection\" goes thru various retries before it fails. Is that right behavior? ",
            "id": "comment-14968377"
        },
        {
            "date": "2015-11-30T17:09:26+0000",
            "author": "Kevin Risden",
            "content": "Susheel Kumar Are the tests that were added here included in SOLR-8179?\n\nThe way the tests that were added w/ your patch would mean that a whole new Solr cluster would be stood up for each test. In SOLR-8179 I added a new class specifically for testing the driver that doesn't require a Solr cluster to be up and running. ",
            "id": "comment-15032092"
        },
        {
            "date": "2016-01-07T02:24:36+0000",
            "author": "Jason Gerlowski",
            "content": "I've updated this patch to work on the latest trunk.\n\nI had to make a few changes to allow the tests to pass:\n    1.) testConnectionStringWithWrongCollection expected SolrException in the original patch, however it turns out that on the latest trunk, it's SQLException that's actually thrown.  I changed the exception-catching to reflect this.\n    2.) testConnectionStringWithWrongCollection's use of ExpectedException prevented it from closing the db connection.  I had to tweak this so that it could be closed.\n\nStill looking into whether the tests would run more efficiently under a different base-class.  Though I did baseline the performance of the tests in JdbcTest.  Without the additions in this patch, JdbcTest takes about 2min 15sec to run on my machine.  With this patch, it takes about 3 mins to run.  The ~45sec delta makes me suspect that the cases are being run inefficiently, but I haven't verified that yet. ",
            "id": "comment-15086682"
        },
        {
            "date": "2016-01-07T04:11:26+0000",
            "author": "Jason Gerlowski",
            "content": "To follow up on my prior comment, it turns out that the test file Kevin referred to above (JdbcDriverTest) does involve much less overhead (it runs in ~1sec on my machine.).  Since the overheard on these tests is much lower, I second Kevin's recommendation that we move everything we can into JdbcDriverTest .\n\nThere are really 3 tests in question here: testConnectionStringWithMissingZkHost, testConnectionStringJumbled, and testConnectionStringWithWrongCollection.  The first of these is already covered by JdbcDriverTest.testNullZkConnectionString.  The second doesn't have a JdbcDriverTest analog, but could easily be moved over to JdbcDriverTest.  The third test case would be more difficult to move, as it involves checking an error arises after connecting, creating a statement, etc.  There doesn't look like there's an easy way to port this over.\n\nMy suggestion/vote would be:\n    1.) Totally drop the first test (since it already has coverage in JdbcDriverTest),\n    2.) Move the second test to JdbcDriverTest,\n    3.) Keep the third test in JdbcTest, but move it into the doTest() method.  This allows it to avoid incurring the unnecessary overheard, as Kevin mentioned above.\n\nAnyone have thoughts/suggestions/counterarguments? I'm happy to make these modifications myself if others find them reasonable, but I don't want to step on any toes.  Susheel Kumar  pushed the first revision of this up, so I'll hold off for a few days to see if he has any thoughts.\n\nOtherwise (assuming people are ok with my proposed plan), I'll go ahead with this. ",
            "id": "comment-15086777"
        },
        {
            "date": "2016-01-07T15:03:56+0000",
            "author": "Kevin Risden",
            "content": "\n1.) Totally drop the first test (since it already has coverage in JdbcDriverTest),\n2.) Move the second test to JdbcDriverTest,\n3.) Keep the third test in JdbcTest, but move it into the doTest() method. This allows it to avoid incurring the unnecessary overheard, as Kevin mentioned above.\n\nsounds reasonable to me.  ",
            "id": "comment-15087540"
        },
        {
            "date": "2016-01-08T15:11:25+0000",
            "author": "Jason Gerlowski",
            "content": "Updated patch takes the approach mentioned in the comments above (drop duplicate test, move tests into JdbcDriverTest where possible, fold remaining test into same test case of JdbcTest).\n\nShould be ready to go as far as I know, unless anyone knows of error cases they'd like covered by this story? ",
            "id": "comment-15089318"
        },
        {
            "date": "2016-01-08T15:15:02+0000",
            "author": "Kevin Risden",
            "content": "What is this testing for exactly? It looks like the connection string will be valid? A SQLException will be thrown because it can't connect to the cluster though.\n\n+  @Test(expected = SQLException.class)\n+  public void testConnectionStringJumbled() throws Exception {\n+    final String sampleZkHost=\"zoo1:9983/foo\";\n+    DriverManager.getConnection(\"solr:jdbc://\" + sampleZkHost + \"?collection=collection1\", new Properties());\n+  }\n\n ",
            "id": "comment-15089323"
        },
        {
            "date": "2016-01-08T15:24:08+0000",
            "author": "Kevin Risden",
            "content": "nvm I see that jdbc and solr are switched now. ",
            "id": "comment-15089329"
        },
        {
            "date": "2016-01-08T15:24:49+0000",
            "author": "Jason Gerlowski",
            "content": "My understanding is that a legit connection string starts with: jdbc://solr.  This test has the position of \"solr\" and \"jdbc\" swapped (i.e. solr:jdbc://).  So this connection string will cause an exception, even before the ZK host is parsed out and a connection is attempted.\n\nIf you think this isn't clear enough, I'm happy to rename the method name (I kept the name from the initial patch).  Or maybe assert on the exception message to make it clear that this isn't zk-related. ",
            "id": "comment-15089330"
        },
        {
            "date": "2016-01-08T15:33:51+0000",
            "author": "Kevin Risden",
            "content": "Yea whats really happening is that the DriverManager can't actually find a driver that supports that url string. The method that is getting tested is Driver#acceptsURL.\n\n\njava.sql.SQLException: No suitable driver found for solr:jdbc://zoo1:9983/foo?collection=collection1\n\n ",
            "id": "comment-15089348"
        },
        {
            "date": "2016-05-06T13:40:46+0000",
            "author": "Kevin Risden",
            "content": "Attaching patch updated to master. Running precommit now. ",
            "id": "comment-15274032"
        },
        {
            "date": "2016-05-06T13:57:43+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 732e7e80c6fcb3d8ec2ecee3908dde88009f82d8 in lucene-solr's branch refs/heads/master from Kevin Risden\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=732e7e8 ]\n\nSOLR-8184: Negative tests for JDBC Connection String ",
            "id": "comment-15274064"
        },
        {
            "date": "2016-05-06T13:58:34+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 219ddbb998cf0e011c087e7a0629908f40dd0d5d in lucene-solr's branch refs/heads/branch_6x from Kevin Risden\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=219ddbb ]\n\nSOLR-8184: Negative tests for JDBC Connection String ",
            "id": "comment-15274065"
        },
        {
            "date": "2016-05-06T13:59:35+0000",
            "author": "Kevin Risden",
            "content": "Thanks Susheel Kumar and Jason Gerlowski. Sorry took so long to get back to this. ",
            "id": "comment-15274067"
        },
        {
            "date": "2016-05-09T21:55:55+0000",
            "author": "Hoss Man",
            "content": "\nManually correcting fixVersion per Step #S5 of LUCENE-7271 ",
            "id": "comment-15277129"
        }
    ]
}