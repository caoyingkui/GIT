{
    "id": "LUCENE-5417",
    "title": "Solr function query supports reading multiple values from a field.",
    "details": {
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved",
        "components": [
            "core/query/scoring"
        ],
        "affect_versions": "4.6",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ]
    },
    "description": "Solr function query is a powerful tool to customize search criterion and ranking function (http://wiki.apache.org/solr/FunctionQuery). However, it cannot effectively benefit from field values from multi-valued field, namely, the field(...) function can only read one value and discard the others.\n\nThis limitation has been associated with FieldCacheSource, and the fact that FieldCache cannot fetch multiple values from a field, but such constraint has been largely lifted by LUCENE-3354, which allows multiple values to be extracted from one field. Those values in turn can be used as parameters of other functions to yield a single score.\n\nI personally find this limitation very unhandy when building a learning-to-rank system that uses many cues and string features. Therefore I would like to post this feature request and (hopefully) work on it myself.",
    "attachments": {
        "MultiFieldCacheValueSources.patch": "https://issues.apache.org/jira/secure/attachment/12629166/MultiFieldCacheValueSources.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13881570",
            "author": "Peng Cheng",
            "content": "I didn't check the issue history and am not sure if this problem has been solved, please revoke this one if its a duplicate. ",
            "date": "2014-01-25T00:53:34+0000"
        },
        {
            "id": "comment-13894303",
            "author": "Peng Cheng",
            "content": "Hi, May I ask for some help on test case implementation? I have finished writing extensions of MultiValueSources that has the described functionality: they can read multiple ByteRef from the FieldCache by using getDocTermOrds(), and then cast them into different data types (String, float etc.) through parsers.  While I got not problem making them running in a new project, I don't know how to test it in solr test framework. (Apparently it uses JUnit but override many default settings) Namely, I got sporadic 'fix your classpath to have tests-framework.jar before lucene-core.jar' exception, and when I don't get that exception, I got 'Insane FieldCache usage(s)', I have googled them but all resolutions points to 3.x version (btw using '@SuppressCodecs(\"Lucene3x\")' only reduces the frequency of the first problem). May I ask an expert to have a look at my test cases?\n\nOne more thing: the added ValueSource(s) needs a dimensionality parameter to construct, this is because the current FunctionValues interface does not support reading of variable-length array from a field. To make the solution easier to use, we may need a more powerful FunctionValues that can return dimensionality when ***Val(int doc) method is called. ",
            "date": "2014-02-07T08:30:34+0000"
        },
        {
            "id": "comment-13902170",
            "author": "Peng Cheng",
            "content": "I'm uploading a patch of lucene-query including both ValueSource implementations (org.apache.lucene.queries.function.valuesource.Multi*FieldSource) and test cases (org.apache.lucene.queries.function.TestMultiFieldCacheFunctions)\n\nAble to retrieve multiple values from a field as a vector, the sequence of its elements is the same as where they are inserted into the documents.\n\nOnly numerical Field types are tested, the String Field type is already implemented (and being used internally in my project). But its test case has several dependencies on some Solr-core component (namely the string distance function), and I'm still figuring out how to run test cases in Solr package.\n\nDue to the same reason all ValueSources are not registered with Solr's QParser yet. I'll add this part later, in the mean time you are welcomed to test it as a Lucene component. Any help and suggestion is appreciated. ",
            "date": "2014-02-15T00:07:42+0000"
        },
        {
            "id": "comment-13970929",
            "author": "Uwe Schindler",
            "content": "Move issue to Lucene 4.9. ",
            "date": "2014-04-16T12:54:56+0000"
        }
    ]
}