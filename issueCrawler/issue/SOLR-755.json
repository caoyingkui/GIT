{
    "id": "SOLR-755",
    "title": "facet.limit=-1 does not work in distributed search",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.3"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "If you specify facet.limit=-1 in distributed mode, no facet results are returned.",
    "attachments": {
        "SOLR-755.patch": "https://issues.apache.org/jira/secure/attachment/12389583/SOLR-755.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Wojtek Piaseczny",
            "id": "comment-12628670",
            "date": "2008-09-05T16:38:45+0000",
            "content": "Hi Yonik,\n\nI submitted a patch for SOLR 748 (https://issues.apache.org/jira/browse/SOLR-748) a few days ago. I'm guessing that whatever changes you make for this bug will break my patch. Could you review my patch while you're making these changes?\n\n\nThanks,\n\n\nWojtek\n\n\nQuoted from: \nhttp://www.nabble.com/-jira--Created%3A-%28SOLR-755%29-facet.limit%3D-1-does-not-work-in-distributed-search-tp19334831p19334879.html\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12628704",
            "date": "2008-09-05T19:10:21+0000",
            "content": "I also just found and fixed a bug in TestDistributedSearch that failed to find some differences in responses... so now a test of facet.limit=-1&facet.sort=true now fails as it does in a manual test.\n\nNote that one must add facet.sorted=true in conjunction with facet.limit=-1 since it defaults to unsorted (or sorted-by-term), and this is currently unsupported by distributed search. "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12628712",
            "date": "2008-09-05T19:55:27+0000",
            "content": "I could swear that this was working for me a while back before I abandoned it because it was too slow. Ah well.\n\nThe culprit is the facet paginating code. The end is determined with\n\nint end = Math.min(dff.offset + dff.limit, counts.length);\n\n\nwhich is going to be -1 if the limit is set to -1, i.e. no facet counts will be returned.\n\nThe attached patch adds a check for a negative value for end and sets it to Integer.MAX_VALUE. This fixes the behaviour when sorting is turned on.\n\nIs there any reason why sorting is only turned on for limits > 0? I think it would make sense to turn it on for -1 as well, or probably even for everything as it's not going to make a difference when no facet counts are requested. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12628714",
            "date": "2008-09-05T19:59:46+0000",
            "content": "patch attached "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12628716",
            "date": "2008-09-05T20:04:52+0000",
            "content": "Whoops, you snuck in first... thanks Lars.\nAlthough, I think your fix would cause an out-of-bounds exception?\n "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12628719",
            "date": "2008-09-05T20:12:49+0000",
            "content": "Ah, good point. I was testing with facet.mincount=1. Just disregard my patch. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12628720",
            "date": "2008-09-05T20:13:10+0000",
            "content": "Is there any reason why sorting is only turned on for limits > 0?\n\nBack compatibility.  At one point there was no facet.sort... before I added it, facet.limit read as follows:\n\n == facet.limit ==\nThis param indicates the maximum number of constraint counts that should be returned for the facet fields.  If a non-negative value is specified, the constraints (ie: Terms) will be sorted by the facet count (descending) and only the top N terms will be returned with their counts.  A negative value will result in every constraint being returned, in no partiular order. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12628722",
            "date": "2008-09-05T20:17:52+0000",
            "content": "So... the only question left is if this should go in 1.3 or not.\nA client workaround is easy (specify a big number rather than -1), but it's probably not too much work to make another release candidate either. "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12628725",
            "date": "2008-09-05T20:21:18+0000",
            "content": "Back compatibility.\n\nRight. What's going to break if this is changed? As far as I can see it's just code that relies on facet counts being returned in a particular order \u2013 which, in this case, is no particular order  "
        },
        {
            "author": "Lars Kotthoff",
            "id": "comment-12628728",
            "date": "2008-09-05T20:26:47+0000",
            "content": "So... the only question left is if this should go in 1.3 or not.\n\nSince it's clearly a bug, +1 for getting it into 1.3. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12628748",
            "date": "2008-09-05T21:04:17+0000",
            "content": "ASL for this patch granted, and patch committed to trunk and 1.3 branch. "
        }
    ]
}