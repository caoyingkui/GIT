{
    "id": "LUCENE-7853",
    "title": "Request to change visibility of classes in geo3d",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Improvement",
        "components": [
            "modules/spatial3d"
        ],
        "fix_versions": [
            "6.7",
            "7.0"
        ]
    },
    "description": "I  am creating my own spatial context by wrapping the objects in lucene geo3d library and implement my own query which mixes the recursive and the serialized strategy to add precision to searches. \n\nI had the following issue specially with polygons:  The factory for creating polygons is slow and when serializing shapes, I already know if I am dealing with convex or concave polygons (in my case they are always concave). So when de-serializing a polygon I do not want to go through the factory to decide the type of polygon to create.\n\nWouldn't make sense to add the possibility to create a type of polygon directly? you cannot create the polygons directly as they are protected in the package. My suggestion request would be either to add methods in the polygon factory to create a type of polygons with no checking (e.g. makeConcavePolygon(\u2026)) or change the visibility of the classes so that they can be instantiated directly.",
    "attachments": {
        "LUCENE-7853.patch": "https://issues.apache.org/jira/secure/attachment/12870555/LUCENE-7853.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16026134",
            "date": "2017-05-26T10:41:54+0000",
            "content": "Hi Ignacio Vera, I'd be happy to help with this.  I'd prefer the approach of just creating additional factory methods, if possible.  Would you be willing to submit a patch along those lines?  Thanks! ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16026179",
            "date": "2017-05-26T11:41:28+0000",
            "content": "Hi Karl Wright,\n\nI agree with your apporach and yes I can submit the patch. On the other hand I am a bit new on this, How do I submit the patch?\n ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16026264",
            "date": "2017-05-26T13:07:58+0000",
            "content": "Do you see any isuue with the following proposal:\n\nI would like to add the following four methods to the GeoPolygonFactory which should only be used when we know the type of polygon we are delaing with, e.g. polygon has been serialized:\n\n public static GeoConcavePolygon makeGeoConcavePolygon(final PlanetModel planetModel,\n                                                        final List<GeoPoint> pointList) \n{\n    return new GeoConcavePolygon(planetModel, pointList);\n  }\n\n  public static GeoConcavePolygon makeGeoConcavePolygon(final PlanetModel planetModel,\n                                                        final List<GeoPoint> pointList,\n                                                        final List<GeoPolygon> holes) \n{\n    return new GeoConcavePolygon(planetModel,pointList, holes);\n  }\n\n  public static GeoConvexPolygon makeGeoConvexPolygon(final PlanetModel planetModel,\n                                                      final List<GeoPoint> pointList) \n{\n    return new GeoConvexPolygon(planetModel, pointList);\n  }\n\n  public static GeoConvexPolygon makeGeoConvexPolygon(final PlanetModel planetModel,\n                                                      final List<GeoPoint> pointList,\n                                                      final List<GeoPolygon> holes) \n{\n    return new GeoConvexPolygon(planetModel,pointList, holes);\n  } ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16028824",
            "date": "2017-05-30T08:00:01+0000",
            "content": "Attached is that patch.\n\nOne thing I noticed is that when I call the method makeGeopolygon from the polygon factory I always get back a GeoCompositePolygon even when building a simple four points polygon. Is that behavior expected? ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16029271",
            "date": "2017-05-30T11:10:57+0000",
            "content": "Ignacio Vera, the patch seems to not be generated against master; it's generated against something that already has a method that builds a concave polygon.  So I need the rest of it or I cannot apply it.\n\nTo answer your question: the makeGeoPolygon() method is supposed to return a GeoPolygon, and that's what it does.  There's no requirement in the contract that it be simplified to the minimal description of that polygon.\n\nThanks... ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16029353",
            "date": "2017-05-30T12:28:03+0000",
            "content": "New patch attached, this time looks what you expect I hope. \n\nThanks for he answer. In my case I would have to simplify the polygon to its minimal description because of performance. I can do that at indexing time.\n\nCheers,\n\nI.\n ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16029468",
            "date": "2017-05-30T14:21:15+0000",
            "content": "Ignacio Vera: A composite polygon isn't appreciably slower than a root-level concave or convex polygon.  It's basically a wrapper when there's only one child.  So I am not sure what you mean about performance?\n\nThe new patch is fine except that I don't believe the comments are correct.  The order of points does not matter for the new methods because concavity or convexity is assumed.  If you can clarify that in the comments it would allow me to commit your patch unmodified; if not, it will need to wait until I have a moment to look in more detail. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16029535",
            "date": "2017-05-30T15:15:01+0000",
            "content": "Karl Wright: You are totally right, the order of the points (counter-clockwise or clockwise) does not matter as it always generates the convex polygon. I will try to re-phrase it an add a new patch.\n\nComposite polygons are not appreciably slower but my strategy is to serialize the objects to read them at query time for the boundaries of a spatial search (inspired from SerializedDVStrategy). Having to serialize the composite polygon and the polygon inside it and then read it during a query can have a performance penalty when dealing with hundreds or even thousand of them.\n\nAnother more philosofical doubt I have is that composite polygons can be confused with multipolygons. One thing I have learnt the hard way is that multipolygons cannot be composed of polygons that intersect to each other. I guess this is not the case for Geo3d composite polygons. ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16030952",
            "date": "2017-05-31T10:21:35+0000",
            "content": "Attached a new patch with updated documentation. I hope this is closer to what is expected. It was a good exercise for me as now I have a better understanding how it works for complex polygons. \n\nThanks,\n\nI. ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16031037",
            "date": "2017-05-31T11:48:34+0000",
            "content": "Ignacio Vera: looks good to me.  I will commit. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16031044",
            "date": "2017-05-31T11:56:32+0000",
            "content": "Commit 71411df0cfec385fbd0fcd0f0291c6a06c05a428 in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=71411df ]\n\nLUCENE-7853: Add methods for people to use who know their polygon's characteristics ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16031047",
            "date": "2017-05-31T11:58:14+0000",
            "content": "Commit 8cf8546134fb54a2c5058e50e1fabfe52f977454 in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8cf8546 ]\n\nLUCENE-7853: Add methods for people to use who know their polygon's characteristics ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16031621",
            "date": "2017-05-31T18:17:03+0000",
            "content": "precommit failures from documentation-lint...\n\n\n     [echo] checking for broken html...\n    [jtidy] Checking for broken html (such as invalid tags)...\n   [delete] Deleting directory /home/hossman/lucene/dev/lucene/build/jtidy_tmp\n     [echo] Checking for broken links...\n     [exec] \n     [exec] Crawl/parse...\n     [exec] \n     [exec] Verify...\n     [exec] \n     [exec] file:///build/docs/spatial3d/org/apache/lucene/spatial3d/geom/GeoPolygonFactory.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoConcavePolygon.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoConcavePolygon.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoConvexPolygon.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoConvexPolygon.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoConcavePolygon.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoConvexPolygon.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoConcavePolygon.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoConvexPolygon.html\n     [exec] \n     [exec] file:///build/docs/spatial3d/org/apache/lucene/spatial3d/geom/class-use/GeoPoint.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoConcavePolygon.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoConcavePolygon.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoConvexPolygon.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoConvexPolygon.html\n     [exec] \n     [exec] file:///build/docs/spatial3d/org/apache/lucene/spatial3d/geom/class-use/GeoPolygon.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoConcavePolygon.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoConvexPolygon.html\n     [exec] \n     [exec] file:///build/docs/spatial3d/org/apache/lucene/spatial3d/geom/class-use/PlanetModel.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoConcavePolygon.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoConcavePolygon.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoConvexPolygon.html\n     [exec]   BROKEN LINK: file:///build/docs/core/org/apache/lucene/spatial3d.geom.GeoConvexPolygon.html\n     [exec] \n     [exec] Broken javadocs links were found!\n\n ",
            "author": "Hoss Man"
        },
        {
            "id": "comment-16031648",
            "date": "2017-05-31T18:31:04+0000",
            "content": "Hoss Man: This is odd because it's complaining about stuff that hasn't changed in a year. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16031666",
            "date": "2017-05-31T18:39:53+0000",
            "content": "Huh? \n\nYou just changed GeoPolygonFactory a few hours ago, and added new public methods that refer to classes like GeoConcavePolygon and GeoConvexPolygon in the new method sigs \u2013 but those classes are not public, so the links in the generated javadocs are broken.\n\nI suggest rolling this change back until there's clarity on what exactly should be public ... public methods method declaring that they return package hidden classes makes no sense. ",
            "author": "Hoss Man"
        },
        {
            "id": "comment-16031719",
            "date": "2017-05-31T18:58:35+0000",
            "content": "Hoss Man: If that's the problem it is unclear from precommit's output.  Precommit is complaining about references from GeoPoint etc. which were not updated in any way in a very long time, and GeoPoint does not return package-private classes either.\n ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16031746",
            "date": "2017-05-31T19:04:54+0000",
            "content": "Commit 08ea9a787e624db4440c57b882afcfecddecc86b in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=08ea9a7 ]\n\nLUCENE-7853: Return the public interface, not the private implementation ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16031751",
            "date": "2017-05-31T19:06:07+0000",
            "content": "Commit 01c7bf1fc3b3f13943193af66749c0f733d102e2 in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=01c7bf1 ]\n\nLUCENE-7853: Return the public interface, not the private implementation ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16031768",
            "date": "2017-05-31T19:14:20+0000",
            "content": "Precommit is complaining about references from GeoPoint etc. \n\ndocumentation-lint is very explicit when it complains \u2013 it doesn't complain about classes it complains about documentation \u2013 specifically broken links in the documentation.  If the link is manually created that's one problem.  if the link is generated automatically by javadoc then that's an indirect indication of other problems (like referring to package protected classes in public method sigs) but you have to actually look at the details of the errors.\n\nIn this specfic case, all of the errors stem from the root problem i specifically drew your attention to.  the other broken links are all in \"class-use\" pages, where all methods that refer to a class are listed.  Whether the GeoPoint class has been modified in a very long time is irrelevant to the question of why links on it's \"class-use\" page might be broken \u2013 what matters is if any methods that refer to GeoPoint have been added/removed/modified and result in broken links.\n\nBottom line: we shouldn't just ignore documentation-lint errors because it looks like it's refering to classes that haven't changed \"in a very long time\"  If you actually look at check the exact errors & html files it directs you to, the root cause is usually very clear. ",
            "author": "Hoss Man"
        },
        {
            "id": "comment-16031796",
            "date": "2017-05-31T19:27:06+0000",
            "content": "LUCENE-7858 to refine the 'broken links' message provided by ant documentation-lint which is part of ant precommit logic. What do you think? ",
            "author": "Christine Poerschke"
        },
        {
            "id": "comment-16031839",
            "date": "2017-05-31T19:56:15+0000",
            "content": "Anything that helps is great! ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16089435",
            "date": "2017-07-17T07:38:18+0000",
            "content": "Change applied.\n\nThanks! ",
            "author": "Ignacio Vera"
        }
    ]
}