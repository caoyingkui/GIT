{
    "id": "LUCENE-7533",
    "title": "Classic query parser: autoGeneratePhraseQueries=true doesn't work when splitOnWhitespace=false",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "6.2,                                            6.2.1,                                            6.3",
        "components": [],
        "labels": "",
        "fix_versions": [
            "6.4",
            "7.0"
        ],
        "priority": "Major",
        "status": "Resolved",
        "type": "Bug"
    },
    "description": "LUCENE-2605 introduced the classic query parser option to not split on whitespace prior to performing analysis.\n\nFrom the javadocs for QueryParser.setAutoGeneratePhraseQueries(): \nphrase queries will be automatically generated when the analyzer returns more than one term from whitespace delimited text.\n\nWhen splitOnWhitespace=false, the output from analysis can now come from multiple whitespace-separated tokens, which breaks code assumptions when autoGeneratePhraseQueries=true: for this combination of options, it's not appropriate to auto-quote multiple non-overlapping tokens produced by analysis.  E.g. simple whitespace tokenization over the query \"some words\" will produce the token sequence (\"some\", \"words\"), and even when autoGeneratePhraseQueries=true, we should not be creating a phrase query here.",
    "attachments": {
        "LUCENE-7533.patch": "https://issues.apache.org/jira/secure/attachment/12836475/LUCENE-7533.patch",
        "LUCENE-7533-disallow-option-combo.patch": "https://issues.apache.org/jira/secure/attachment/12839472/LUCENE-7533-disallow-option-combo.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15627140",
            "author": "Steve Rowe",
            "date": "2016-11-02T00:08:14+0000",
            "content": "Patch that addresses some of this issue, with some failing tests and nocommits.\n\nThe existing autoGeneratePhraseQueries=true approach generates queries exactly as if the query had contained quotation marks, but as I mentioned above, this is inappropriate when splitOnWhitespace=false and the query text contains spaces.\n\nThe approach in the patch is to add a new QueryBuilder method to handle the autoGeneratePhraseQueries=true case.  The query text is split on whitespace and these tokens' offsets are compared to those produced by the configured analyzer.  When multiple non-overlapping tokens have offsets within the bounds of a single whitespace-separated token, a phrase query is created.  If the original token is present as a token overlapping with the first split token, then a disjunction query is created with the original token and the phrase query of the split tokens.\n\nI've added a couple of tests that show posincr/poslength/offset output from SynonymFilter and WordDelimiterFilter (likely the two most frequently used analysis components that can create split tokens), and both create corrupt token graphs of various kinds (e.g. LUCENE-6582, LUCENE-5051), so solving this problem in a complete way just isn't possible right now.\n\nSo I'm not happy with the approach in the patch.  It only covers a subset of possible token graphs (e.g. more than one overlapping multi-term synonym doesn't work).  And it's a lot of new code solving a problem that AFAIK no user has reported (does anybody even use autoGeneratePhraseQueries=true with classic QP?),\n\nI'd be much happier if we could somehow get TermAutomatonQuery hooked into the query parsers, and then rewrite to simpler queries if possible: LUCENE-6824.  First thing though is unbreaking SynonymFilter and friends to produce non-broken token graphs though.  Attempts to do this for SynonymFilter have stalled though: LUCENE-6664.  (I have a germ of an idea that might break the logjam - I'll post over there.)\n\nFor this issue, maybe instead of my patch, for now, we just disallow autoGeneratePhraseQueries=true when splitOnWhitespace=false.\n\nThoughts? "
        },
        {
            "id": "comment-15627142",
            "author": "Steve Rowe",
            "date": "2016-11-02T00:09:08+0000",
            "content": "FYI autoGeneratePhraseQueries was never added to the flexible query parser. "
        },
        {
            "id": "comment-15636409",
            "author": "Michael McCandless",
            "date": "2016-11-04T13:59:34+0000",
            "content": "+1 to move towards having proper graphs come out of analysis, and letting query parsers produce TAQ.  I agree there is a lot of work there though \n\nThank you for pointing to LUCENE-6824!  I think that issue can be committed ... it had fallen past the event horizon of my TODO list.  I'll revive it ... "
        },
        {
            "id": "comment-15675248",
            "author": "Steve Rowe",
            "date": "2016-11-18T00:16:15+0000",
            "content": "Patch that disallows autoGeneratePhraseQueries=true when splitOnWhitespace=false.\n\nThis is ready to go.  I'm going to commit shortly. "
        },
        {
            "id": "comment-15675254",
            "author": "ASF subversion and git services",
            "date": "2016-11-18T00:18:10+0000",
            "content": "Commit 6d1962a902bffbf6bea4b81b09524104140d9f73 in lucene-solr's branch refs/heads/branch_6x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6d1962a ]\n\nLUCENE-7533: Classic query parser: disallow autoGeneratePhraseQueries=true when splitOnWhitespace=false (and vice-versa). "
        },
        {
            "id": "comment-15675263",
            "author": "Steve Rowe",
            "date": "2016-11-18T00:24:14+0000",
            "content": "I committed the patch to disallow this combination of options.  Hopefully once we unbreak graph token streams, this can be revisited. "
        }
    ]
}