{
    "id": "SOLR-5397",
    "title": "Replication can fail silently in some cases.",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "4.6",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Critical",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Error Message:\nshard3 is not consistent.  Got 137 from http://127.0.0.1:49317/collection1lastClient and got 125 from http://127.0.0.1:39794/collection1",
    "attachments": {
        "SOLR-5397.patch": "https://issues.apache.org/jira/secure/attachment/12614309/SOLR-5397.patch",
        "monkeyrun.log": "https://issues.apache.org/jira/secure/attachment/12611824/monkeyrun.log"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-13807160",
            "date": "2013-10-28T19:53:25+0000",
            "content": "Seems to happen on runs when we don't even kill any servers or cause any connection disruption, etc. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13807176",
            "date": "2013-10-28T20:11:17+0000",
            "content": "Commit 1536499 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1536499 ]\n\nSOLR-5397: Move the call to obtain a ConcucrrentSolrServer into try catch block "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13807178",
            "date": "2013-10-28T20:12:24+0000",
            "content": "Commit 1536500 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1536500 ]\n\nSOLR-5397: Move the call to obtain a ConcucrrentSolrServer into try catch block "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13807196",
            "date": "2013-10-28T20:43:46+0000",
            "content": "Commit 1536511 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1536511 ]\n\nSOLR-5397: If a retry fails, always finish the rest of the retries "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13807198",
            "date": "2013-10-28T20:45:42+0000",
            "content": "Commit 1536513 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1536513 ]\n\nSOLR-5397: If a retry fails, always finish the rest of the retries "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13812399",
            "date": "2013-11-03T15:38:59+0000",
            "content": "This is a relatively shorter run with the fail. No disruption is occurring in this run due to SOLR-5417. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13824723",
            "date": "2013-11-17T03:56:35+0000",
            "content": "I think I might be making some headway on this...will know more tomorrow. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13824829",
            "date": "2013-11-17T13:22:10+0000",
            "content": "So I don't yet know 100% what this is, but I have some indications and my current guess is this is actually existing, just wast easily caught in a test until we moved from batching to streaming updates. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13824903",
            "date": "2013-11-17T17:20:00+0000",
            "content": "Getting fairly confident this is due to replication - it's not replicating when it should - I think there might be a recent bug there. I seem to be able to work around it by going back to the old style of forcing a replication no matter what. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13824920",
            "date": "2013-11-17T18:19:32+0000",
            "content": "Well, I'd like to get this in for 4.6, but I'm taking a break and it digging into replication issues is a bunch more slog work.\n\nA tradeoff would be to change 4.6 back to replicating all the time - some cases painful, but always correct. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13824929",
            "date": "2013-11-17T18:43:24+0000",
            "content": "Oh good...this might not be such a deep dive needed... "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13824954",
            "date": "2013-11-17T21:00:21+0000",
            "content": "Strange note: all of the cases that the replication does not happen correctly seems to involve only replicating .del files as new files. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13824966",
            "date": "2013-11-17T21:41:30+0000",
            "content": "Starting to look very similar to SOLR-4926 "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13824976",
            "date": "2013-11-17T22:24:17+0000",
            "content": "Have things fairly isolated now. Pretty odd - we skip downloading all these index files to what should be a new tmp dir, but the claim is they already exist - that doesn't seem to hold up because when we try and open on the resulting index (of which we only copied del files and a new segments_n file into) we don't find one of the skipped index files and so it fails back to the previous gen, which is empty. Weird, but should be able to get to the bottom of it.\n\n\norg.apache.lucene.store.MMapDirectory@/ext3space/jenkins/workspace/ChaosMonkeySafeLeader/solr/build/solr-core/test/J0/org.apache.solr.cloud.ChaosMonkeySafeLeaderTest-1384726566279/jetty10/index.80120827121941846 lockFactory=org.apache.lucene.store.SingleInstanceLockFactory@73c8693 fullCopy=false\n   [junit4]   2> 76387 T210 C18 P57580 oash.SnapPuller.downloadIndexFiles Skipping download for _2.si because it already exists\n   [junit4]   2> 76387 T210 C18 P57580 oash.SnapPuller.downloadIndexFiles Skipping download for _0.cfe because it already exists\n   [junit4]   2> 76403 T210 C18 P57580 oash.SnapPuller.downloadIndexFiles Skipping download for _2.cfs because it already exists\n   [junit4]   2> 76404 T210 C18 P57580 oash.SnapPuller.downloadIndexFiles Skipping download for _1.cfe because it already exists\n   [junit4]   2> 76406 T210 C18 P57580 oash.SnapPuller.downloadIndexFiles Skipping download for _0.cfs because it already exists\n   [junit4]   2> 76407 T210 C18 P57580 oash.SnapPuller.downloadIndexFiles Skipping download for _1.si because it already exists\n   [junit4]   2> 76411 T210 C18 P57580 oash.SnapPuller.downloadIndexFiles Skipping download for _0.si because it already exists\n   [junit4]   2> 76412 T210 C18 P57580 oash.SnapPuller.downloadIndexFiles Skipping download for _1.cfs because it already exists\n   [junit4]   2> 76419 T210 C18 P57580 oash.SnapPuller.downloadIndexFiles Skipping download for _2_1.del because it already exists\n   [junit4]   2> 76420 T210 C18 P57580 oash.SnapPuller.downloadIndexFiles Skipping download for _2.cfe because it already exists\n   [junit4]   2> 76420 T210 C18 P57580 oash.SnapPuller.fetchLatestIndex Total time taken for download : 0 secs\n   [junit4]   2> 76756 T210 C18 P57580 oash.SnapPuller.moveAFile DEBUG Moving file: _1_1.del\n   [junit4]   2> 76757 T210 C18 P57580 oash.SnapPuller.moveAFile DEBUG Moving file: _0_2.del\n   [junit4]   2> 76758 T210 C18 P57580 oash.SnapPuller.moveAFile DEBUG Moving file: segments_2\n   [junit4]   2> java.io.FileNotFoundException: /ext3space/jenkins/workspace/ChaosMonkeySafeLeader/solr/build/solr-core/test/J0/org.apache.solr.cloud.ChaosMonkeySafeLeaderTest-1384726566279/jetty10/index/_0.si (No such file or directory)\n   [junit4]   2> \tat java.io.RandomAccessFile.open(Native Method)\n   [junit4]   2> \tat java.io.RandomAccessFile.<init>(RandomAccessFile.java:233)\n   [junit4]   2> \tat org.apache.lucene.store.MMapDirectory.openInput(MMapDirectory.java:193)\n   [junit4]   2> \tat org.apache.lucene.codecs.lucene40.Lucene40SegmentInfoReader.read(Lucene40SegmentInfoReader.java:51)\n   [junit4]   2> \tat org.apache.lucene.index.SegmentInfos.read(SegmentInfos.java:340)\n   [junit4]   2> \tat org.apache.lucene.index.SegmentInfos$1.doBody(SegmentInfos.java:404)\n   [junit4]   2> \tat org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:843)\n   [junit4]   2> \tat org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:694)\n   [junit4]   2> \tat org.apache.lucene.index.SegmentInfos.read(SegmentInfos.java:400)\n   [junit4]   2> \tat org.apache.lucene.index.IndexWriter.<init>(IndexWriter.java:741)\n   [junit4]   2> \tat org.apache.solr.update.SolrIndexWriter.<init>(SolrIndexWriter.java:77)\n   [junit4]   2> \tat org.apache.solr.update.SolrIndexWriter.create(SolrIndexWriter.java:64)\n   [junit4]   2> \tat org.apache.solr.update.DefaultSolrCoreState.createMainIndexWriter(DefaultSolrCoreState.java:267)\n   [junit4]   2> \tat org.apache.solr.update.DefaultSolrCoreState.openIndexWriter(DefaultSolrCoreState.java:250)\n   [junit4]   2> \tat org.apache.solr.handler.SnapPuller.fetchLatestIndex(SnapPuller.java:458)\n   [junit4]   2> \tat org.apache.solr.handler.ReplicationHandler.doFetch(ReplicationHandler.java:322)\n   [junit4]   2> \tat org.apache.solr.cloud.RecoveryStrategy.replicate(RecoveryStrategy.java:155)\n   [junit4]   2> \tat org.apache.solr.cloud.RecoveryStrategy.doRecovery(RecoveryStrategy.java:435)\n   [junit4]   2> \tat org.apache.solr.cloud.RecoveryStrategy.run(RecoveryStrategy.java:246)\n   [junit4]   2> java.io.FileNotFoundException: /ext3space/jenkins/workspace/ChaosMonkeySafeLeader/solr/build/solr-core/test/J0/org.apache.solr.cloud.ChaosMonkeySafeLeaderTest-1384726566279/jetty10/index/_0.si (No such file or directory)\n   [junit4]   2> \tat java.io.RandomAccessFile.open(Native Method)\n\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13824991",
            "date": "2013-11-17T23:15:50+0000",
            "content": "I think I've got it - just have to test it out. We actually roll back the writer on the main index before we copy the files from the tmp index into - but that rollback can actually end up removing files - so we might have skipped some files thinking they were already in the std index (because they were), but then the rollback can remove them. This causes a corrupt index and opening a reader on it rolls back to the first empty commit.\n\nThis has been around for some time, but I think recent changes allowed it to be exposed in tests. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13824995",
            "date": "2013-11-17T23:43:31+0000",
            "content": "Here is a patch for an idea I'm trying out. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13825004",
            "date": "2013-11-18T00:11:48+0000",
            "content": "This is testing very nicely - I'll let it run while I'm gone and commit it when I get home. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13825090",
            "date": "2013-11-18T04:01:26+0000",
            "content": "Commit 1542884 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1542884 ]\n\nSOLR-5397: Replication can fail silently in some cases. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13825091",
            "date": "2013-11-18T04:02:33+0000",
            "content": "Commit 1542885 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1542885 ]\n\nSOLR-5397: Replication can fail silently in some cases. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13825100",
            "date": "2013-11-18T04:26:19+0000",
            "content": "Commit 1542890 from Mark Miller in branch 'dev/branches/lucene_solr_4_6'\n[ https://svn.apache.org/r1542890 ]\n\nSOLR-5397: Replication can fail silently in some cases. "
        }
    ]
}