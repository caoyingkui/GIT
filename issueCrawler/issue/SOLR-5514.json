{
    "id": "SOLR-5514",
    "title": "atomic update throws exception if the schema contains uuid fields: Invalid UUID String: 'java.util.UUID:e26c4d56-e98d-41de-9b7f-f63192089670'",
    "details": {
        "affect_versions": "4.5.1",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "update"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "I am updating an exiting document with the statement \n<add><doc><field name='name' update='set'>newvalue</field>....\nAll fields are stored and I have several UUID fields. About 10-20% of the update commands will fail with the message: (example)\nInvalid UUID String: 'java.util.UUID:532c9353-d391-4a04-8618-dc2fa1ef8b35'\nthe point is that java.util.UUID seems to be prepended to the original uuid stored in the field and when the value is written this error occours.\nI tried to check if this specific uuid field was the problem and\nadded the uuid field in the update xml with(<field name='id1' update='set'>...). But the error simply moved to an other uuid field.\n\n\n\nhere is the original exception:\n<lst name=\"responseHeader\"><int name=\"status\">500</int><int name=\"QTime\">34</int></lst><lst name=\"error\"><str name=\"msg\">Error while creating field 'MyUUIDField\n{type=uuid,properties=indexed,stored,omitTermFreqAndPositions,required, required=true}' from value 'java.util.UUID:e26c4d56-e98d-41de-9b7f-f63192089670'</str><str name=\"trace\">org.apache.solr.common.SolrException: Error while creating field 'MyUUIDField{type=uuid,properties=indexed,stored,omitTermFreqAndPositions,required, required=true}\n' from value 'java.util.UUID:e26c4d56-e98d-41de-9b7f-f63192089670'\n\tat org.apache.solr.schema.FieldType.createField(FieldType.java:259)\n\tat org.apache.solr.schema.StrField.createFields(StrField.java:56)\n\tat org.apache.solr.update.DocumentBuilder.addField(DocumentBuilder.java:47)\n\tat org.apache.solr.update.DocumentBuilder.toDocument(DocumentBuilder.java:118)\n\tat org.apache.solr.update.AddUpdateCommand.getLuceneDocument(AddUpdateCommand.java:77)\n\tat org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:215)\n\tat org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:69)\n\tat org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:51)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalAdd(DistributedUpdateProcessor.java:556)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:692)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:435)\n\tat org.apache.solr.update.processor.LogUpdateProcessor.processAdd(LogUpdateProcessorFactory.java:100)\n\tat org.apache.solr.handler.loader.XMLLoader.processUpdate(XMLLoader.java:247)\n\tat org.apache.solr.handler.loader.XMLLoader.load(XMLLoader.java:174)\n\tat org.apache.solr.handler.UpdateRequestHandler$1.load(UpdateRequestHandler.java:92)\n\tat org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:74)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1859)\n\tat org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:703)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:406)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:195)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)\n\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852)\n\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)\n\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)\n\tat java.lang.Thread.run(Thread.java:781)\nCaused by: org.apache.solr.common.SolrException: Invalid UUID String: 'java.util.UUID:e26c4d56-e98d-41de-9b7f-f63192089670'\n\tat org.apache.solr.schema.UUIDField.toInternal(UUIDField.java:89)\n\tat org.apache.solr.schema.FieldType.createField(FieldType.java:257)",
    "attachments": {
        "SOLR-5514.patch": "https://issues.apache.org/jira/secure/attachment/12641473/SOLR-5514.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Arun Kumar",
            "id": "comment-13879794",
            "date": "2014-01-23T09:37:46+0000",
            "content": "Hi Dirk, Is this still an issue? I am not able to reproduce. Can you please confirm? "
        },
        {
            "author": "Arun Kumar",
            "id": "comment-13886482",
            "date": "2014-01-30T10:49:46+0000",
            "content": "I can reproduce this by only providing the wrong value in the xml while updating, like this\n\n<add><doc>\n  <field name=\"id1\" update='set'>b95639d6-b579-41dc-b9f0-d17634937528</field>\n  <field name=\"MyUUIDField\" update='set'>java.util.UUID:b95639d6-b579-41dc-b9f0-d17634937529</field>\n\nCan you confirm the value used while updating index is not corrupted as mentioned above? if not, can you share the doc xml and the schema xml? that would help to reproduce and fix this issue. "
        },
        {
            "author": "Dongqiuye Pu",
            "id": "comment-13899869",
            "date": "2014-02-13T01:05:08+0000",
            "content": "I am also unable to reproduce this issue, even using the exact same UUID value that Dirk was using. And just as Arun said above, this exception only occurred to me when I was using an invalid UUID value (e.g., java.util.UUID: 532c9353-d391-4a04-8618-dc2fa1ef8b35). \n\nSo I think in order to confirm this issue still exists, it's best to publish the schema as well as the exact document value that you are using when causing this issue. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13900466",
            "date": "2014-02-13T16:20:13+0000",
            "content": "Arun, did you use a distributed setup when you attempted to reproduce?\n\nThere is a similar exception reported (and fixed) for distributed grouping in SOLR-3073. "
        },
        {
            "author": "Dirk Reuss",
            "id": "comment-13901445",
            "date": "2014-02-14T13:38:02+0000",
            "content": "Hi Arun,Dongquive, Steve\nthank you for taking the issue.\nThe problem is not  providing the wrong uuid, all uuids I put in the update statement are wellformed.\nThe problem is not that solr stored the wrong uuid, because if I retrieve the document the uuid fields contain wellformed values.\nThe problem is, if I do not include all uuid fields in the update statement, solr throws this exception. IMO this happens because solr internally loads the document, updates the field as given in the update statement/request and then stores the document again. I think  loading the uuid field is buggy sometimes. Because the error does not happen always it may depend one caches, multithreading, updatelog or other environment changes.\nHere was a similar problem with uuids: \n\n\tSOLR-3073: Fixed 'Invalid UUID string' error when having an UUID field as the unique key and executing a distributed grouping request. (Devon Krisman, Martijn van Groningen) see: https://issues.apache.org/jira/browse/SOLR-3073\n\n\n\nMaybe the original problem for 3073 causes this exception?\nThe workaround for me is: put all uuids field in the update statement. \nAt the moment I do not have the time to build a demo core for reproducing the error.\n\nHere is an other issue with uuid:\nhttps://issues.apache.org/jira/browse/SOLR-807\nMay be the binary serializer using the field a field type prefix? What if  the update log for atomic update would use binary serializer to build a changelog for documents?\nMaybe somewhere a unmarshall is missing? "
        },
        {
            "author": "Dirk Reuss",
            "id": "comment-13902720",
            "date": "2014-02-16T14:26:57+0000",
            "content": "Here is an other hint which might cause the error. Just seen it in our log files.\nThis time the error occurs when a document is read from the RealTimeGet-component. I'm pretty sure we do only store well formed uuid values.\nthe error happens when i send the follow command:\n<add overwrite=\"true\"><doc><field name=...</doc>...<doc>...</doc></add>\nthe add command contains about 100 docs each with about 33 fields.\nI have to examine this problem later, may be it is a new error. \n\n<lst name=\"responseHeader\"><int name=\"status\">500</int><int name=\"QTime\">2</int></lst><lst name=\"error\"><str name=\"msg\">For input string: \"000#0;#0;#0;#0;#0;#0;#0;#0;#0;\"</str><str name=\"trace\">java.lang.NumberFormatException: For input string: \"000#0;#0;#0;#0;#0;#0;#0;#0;#0;\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:76)\n\tat java.lang.Long.parseLong(Long.java:452)\n\tat java.lang.Long.valueOf(Long.java:524)\n\tat java.lang.Long.decode(Long.java:676)\n\tat java.util.UUID.fromString(UUID.java:217)\n\tat org.apache.solr.schema.UUIDField.toObject(UUIDField.java:103)\n\tat org.apache.solr.schema.UUIDField.toObject(UUIDField.java:49)\n\tat org.apache.solr.handler.component.RealTimeGetComponent.toSolrInputDocument(RealTimeGetComponent.java:263)\n\tat org.apache.solr.handler.component.RealTimeGetComponent.getInputDocument(RealTimeGetComponent.java:244)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.getUpdatedDocument(DistributedUpdateProcessor.java:726)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:635)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:435)\n\tat org.apache.solr.handler.loader.XMLLoader.processUpdate(XMLLoader.java:247)\n\tat org.apache.solr.handler.loader.XMLLoader.load(XMLLoader.java:174)\n\tat org.apache.solr.handler.UpdateRequestHandler$1.load(UpdateRequestHandler.java:92)\n\tat org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:74)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:1859)\n\tat org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:703)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:406)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:195)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)\n\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852)\n\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)\n\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447) "
        },
        {
            "author": "Elran Dvir",
            "id": "comment-13978197",
            "date": "2014-04-23T13:44:03+0000",
            "content": "I have encountered the exact same problem as Dirk.\nI managed to fix it.\nThe value of the uuid field is combination of class name, colon and (uuid) actual value.\nI searched in the code where this form of string is created.\nThe only place I found it is in the method writeVal(Object val) in JavaBinCodec class.\nSo I added a special handling for uuid values.\nplease see patch attached. The patch is based on Solr 4.4, but takes into considerations changes made in 4.7.\nI will be happy to get feedback from you guys.\n\nThanks. "
        },
        {
            "author": "Elran Dvir",
            "id": "comment-13986445",
            "date": "2014-05-01T08:30:14+0000",
            "content": "Hi, \n\nDid anyone have a chance to examine my patch?\n\nThanks. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13986463",
            "date": "2014-05-01T09:19:51+0000",
            "content": "Elran, can you create a test case which demonstrates the problem? Or at least provide the steps to reproduce the problem? I have not been able to reproduce the problem the last time I tried but I admit that I did not spend too much time on it.\n\nYour patch adds UUID as a known type which means that we'd need to bump the javabin version which brings us to the same discussion that happened in SOLR-807. "
        },
        {
            "author": "Elran Dvir",
            "id": "comment-13986465",
            "date": "2014-05-01T09:35:22+0000",
            "content": "It happens in my real time environment all the time. After the fix, it seems it stopped happening.\nI tried to create a test case, but I couldn't reproduce the problem.\nI think it happens when there is some time between updates, so the older version of the document is fetched by a searcher and by Update Log.\nI think the update shouldn't contain the uuid field. The uuid field comes from the original document and is merged.  "
        },
        {
            "author": "Miriam C",
            "id": "comment-14275178",
            "date": "2015-01-13T13:25:50+0000",
            "content": "Hi,\nI started using atomic updates on my docs. (I was deleting and inserting them till now.)\nIt looks like it works, I don't get any errors in the update and I see the new values.\n\nAs soon as I restart solr I get this error:\norg.apache.solr.common.SolrException: Error while creating field 'fieldName\n{type=uuid,properties=indexed,stored,omitTermFreqAndPositions}\n' from value 'java.util.UUID:41e821a0-3720-11e3-aa6e-0800200c9fde'\n\tat org.apache.solr.schema.FieldType.createField(FieldType.java:261)\n\tat org.apache.solr.schema.StrField.createFields(StrField.java:56)\n\tat org.apache.solr.update.DocumentBuilder.addField(DocumentBuilder.java:47)\n\tat org.apache.solr.update.DocumentBuilder.toDocument(DocumentBuilder.java:118)\n\tat org.apache.solr.update.AddUpdateCommand.getLuceneDocument(AddUpdateCommand.java:77)\n\tat org.apache.solr.update.DirectUpdateHandler2.addAndDelete(DirectUpdateHandler2.java:431)\n\tat org.apache.solr.update.DirectUpdateHandler2.addDoc0(DirectUpdateHandler2.java:216)\n\tat org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:160)\n\tat org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:69)\n\tat org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:51)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalAdd(DistributedUpdateProcessor.java:704)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:858)\n\tat org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:557)\n\tat org.apache.solr.update.UpdateLog$LogReplayer.doReplay(UpdateLog.java:1326)\n\tat org.apache.solr.update.UpdateLog$LogReplayer.run(UpdateLog.java:1215)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\nCaused by: org.apache.solr.common.SolrException: Invalid UUID String: 'java.util.UUID:41e821a0-3720-11e3-aa6e-0800200c9fde'\n\tat org.apache.solr.schema.UUIDField.toInternal(UUIDField.java:89)\n\tat org.apache.solr.schema.FieldType.createField(FieldType.java:259)\n\t... 21 more\n\n\nI was wondering how a patch in solrJ can help if this uuid was already is solr and only the restart of solr caused problems.\nIf anyone can explain this to me I would be very thankful. "
        },
        {
            "author": "Matthew Cline",
            "id": "comment-14335721",
            "date": "2015-02-25T00:27:30+0000",
            "content": "Hey all, I have been able to reproduce this issue on Solr 4.10.3. Can send an example schema and JSON update document if it'll help. "
        }
    ]
}