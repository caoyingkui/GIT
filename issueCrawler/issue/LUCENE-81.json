{
    "id": "LUCENE-81",
    "title": "Escape bug",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/queryparser"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "1.2",
        "resolution": "Incomplete",
        "status": "Closed"
    },
    "description": "package cz.finesoft.socd;\n\nimport junit.framework.*;\nimport org.apache.lucene.index.*;\nimport org.apache.lucene.analysis.*;\nimport org.apache.lucene.analysis.standard.*;\nimport org.apache.lucene.store.*;\nimport org.apache.lucene.document.*;\nimport org.apache.lucene.search.*;\nimport org.apache.lucene.queryParser.*;\n\n/**\n\n\tEscape bug. Please report solutions on lzap@root.cz, thanks.\n\tHere is the description:\n *\n\tWhen searching for (1) everything is ok. But let`s search for: (?)\n\tYES! Nothing found! It`s same with \\\" and maybe other escaped characters.\n *\n\tUser: Lukas Zapletal\n\tDate: Feb 1, 2003\n *\n\tJUnit test case follows:\n */\npublic class juEscapeBug extends TestCase {\n    Directory dir = new RAMDirectory();\n    String testText = \"This is a test. (abc) Is there a bug OR not? \\\"Question\\\"!\";\n\n\n\n    public juEscapeBug(String tn) \n{\n        super(tn);\n    }\n\n    protected void setUp() throws Exception \n{\n        IndexWriter writer = new IndexWriter(dir, new SimpleAnalyzer(), true);\n        Document doc = new Document();\n        doc.add(Field.Text(\"contents\", testText));\n        writer.addDocument(doc);\n        writer.optimize();\n        writer.close();\n    }\n\n    private boolean doQuery(String queryString) throws Exception \n{\n        Searcher searcher = new IndexSearcher(dir);\n        Analyzer analyzer = new StandardAnalyzer();\n        Query query = QueryParser.parse(queryString, \"contents\", analyzer);\n        Hits hits = searcher.search(query);\n        searcher.close();\n        return (hits.length() == 1);\n    }\n\n    public void testBugOk1() throws Exception \n{\n        assertTrue(doQuery(\"Test\"));\n    }\n    public void testBugOk2() throws Exception \n{\n        assertFalse(doQuery(\"This is not there\"));\n    }\n    public void testBugOk3() throws Exception \n{\n        assertTrue(doQuery(\"abc\"));\n    }\n    public void testBugOk4() throws Exception \n{\n        assertTrue(doQuery(\"\\\\(abc\\\\)\"));\n    }\n    public void testBugHere1() throws Exception \n{\n        assertTrue(doQuery(\"\\\\(a?c\\\\)\")); // BUG HERE !!!\n    }\n    public void testBugHere2() throws Exception \n{\n        assertTrue(doQuery(\"\\\\(a*\\\\)\")); // BUG HERE !!!\n    }\n    public void testBugHere3() throws Exception \n{\n        assertTrue(doQuery(\"\\\\\\\"qu*on\\\\\\\"\")); // BUG HERE !!!\n    }\n}",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2003-02-03T02:54:21+0000",
            "content": "This is not a bug.  The provided unit test class uses 2 different Analyzers for\nindexing and searching. ",
            "author": "Otis Gospodnetic",
            "id": "comment-12321185"
        }
    ]
}