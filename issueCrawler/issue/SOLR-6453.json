{
    "id": "SOLR-6453",
    "title": "Stop throwing an error message from Overseer on Solr exit",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "SOLR-5859 adds a leadership check every time Overseer exits loop. This however gets triggered even when Solr really is exiting, causing a spurious error. Here's a one-liner to stop that from happening.",
    "attachments": {
        "SOLR-6453.patch": "https://issues.apache.org/jira/secure/attachment/12670928/SOLR-6453.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "ASF GitHub Bot",
            "id": "comment-14115678",
            "date": "2014-08-29T19:04:06+0000",
            "content": "GitHub user andyetitmoves opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/89\n\n    Stop attempting to check Overseer leadership on exit\n\n    Patch for SOLR-6453\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/bloomberg/lucene-solr stop-exception-exit\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/89.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #89\n\n\ncommit bb3e78b402e0d316cee6ec09494e28db02e2743c\nAuthor: Ramkumar Aiyengar <raiyengar@bloomberg.net>\nDate:   2014-08-29T18:59:25Z\n\n    Stop attempting to check Overseer leadership on exit\n\n "
        },
        {
            "author": "Noble Paul",
            "id": "comment-14146033",
            "date": "2014-09-24T07:57:29+0000",
            "content": "I guess this is the right fix "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-14146085",
            "date": "2014-09-24T08:53:10+0000",
            "content": "Thanks for picking this up, Noble! Just so that I understand, could you explain the difference?\n\nI see that the controller closes the Overseer and then the client, but aren't we coupling the two implementations tightly by assuming that? In hindsight, it doesn't make sense to use the zkClient when it is closed, so I should have probably used if (zkClient.isClosed()) instead of just isClosed. Checking just zkController does make sense for the final operation of rejoining election (which is what we are checking in the finally block anyway), but checking just that assumes that the state reader passed to us is from the same controller. May be we should check both, i.e. the controller is active (if not, we can't rejoin anyway), and the client is active.. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-14146101",
            "date": "2014-09-24T09:07:33+0000",
            "content": "The objective of that method is to handle the overseer \"QUIT\" command. So , when a QUIT command is received, the node is still running, (corecontainer.isShutdown() returns false and isClosed() returns true) and the current overseer should do the cleanup and exit gracefully "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-14146112",
            "date": "2014-09-24T09:17:20+0000",
            "content": "Ah, okay, makes sense.. Could you add the zkClient.isClosed() check though as per my comment above?\n\nAlso, OverseerTest passed for me with this change, probably shouldn't have? "
        },
        {
            "author": "Noble Paul",
            "id": "comment-14146125",
            "date": "2014-09-24T09:33:32+0000",
            "content": "\nAlso, OverseerTest passed for me with this change, probably shouldn't have?\n\nThe cleanup is usually not required . So, the tests should normally have no impact . Under load it might behave differently "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14146408",
            "date": "2014-09-24T15:14:17+0000",
            "content": "Commit 1627343 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1627343 ]\n\nSOLR-6453 "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14146412",
            "date": "2014-09-24T15:17:32+0000",
            "content": "Commit 1627344 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1627344 ]\n\nSOLR-6453 "
        },
        {
            "author": "ASF GitHub Bot",
            "id": "comment-14262146",
            "date": "2014-12-31T12:31:29+0000",
            "content": "Github user andyetitmoves closed the pull request at:\n\n    https://github.com/apache/lucene-solr/pull/89 "
        },
        {
            "author": "Anshum Gupta",
            "id": "comment-14332969",
            "date": "2015-02-23T05:02:51+0000",
            "content": "Bulk close after 5.0 release. "
        }
    ]
}