{
    "id": "LUCENE-8517",
    "title": "TestRandomChains.testRandomChainsWithLargeStrings failure",
    "details": {
        "components": [
            "modules/analysis"
        ],
        "status": "Open",
        "resolution": "Unresolved",
        "fix_versions": [],
        "affect_versions": "None",
        "labels": "",
        "priority": "Major",
        "type": "Bug"
    },
    "description": "From https://jenkins.thetaphi.de/job/Lucene-Solr-7.x-Linux/2828/consoleText, reproduces for me on Java8:\n\n\nChecking out Revision 216f10026b86627750e133fe24ce6a750c470695 (refs/remotes/origin/branch_7x)\n[...]\n[java-info] java version \"10.0.1\"\n[java-info] OpenJDK Runtime Environment (10.0.1+10, Oracle Corporation)\n[java-info] OpenJDK 64-Bit Server VM (10.0.1+10, Oracle Corporation)\n[java-info] Test args: [-XX:-UseCompressedOops -XX:+UseConcMarkSweepGC]\n[...]\n   [junit4] Suite: org.apache.lucene.analysis.core.TestRandomChains\n   [junit4]   2> Exception from random analyzer: \n   [junit4]   2> charfilters=\n   [junit4]   2>   org.apache.lucene.analysis.charfilter.MappingCharFilter(org.apache.lucene.analysis.charfilter.NormalizeCharMap@3ef95503, java.io.StringReader@70dde633)\n   [junit4]   2>   org.apache.lucene.analysis.fa.PersianCharFilter(org.apache.lucene.analysis.charfilter.MappingCharFilter@12423b20)\n   [junit4]   2> tokenizer=\n   [junit4]   2>   org.apache.lucene.analysis.th.ThaiTokenizer()\n   [junit4]   2> filters=\n   [junit4]   2>   org.apache.lucene.analysis.compound.HyphenationCompoundWordTokenFilter(ValidatingTokenFilter@7914bba7 term=,bytes=[],startOffset=0,endOffset=0,positionIncrement=1,positionLength=1,type=word,termFrequency=1, org.apache.lucene.analysis.compound.hyphenation.HyphenationTree@abd7bca)\n   [junit4]   2>   Conditional:org.apache.lucene.analysis.MockGraphTokenFilter(java.util.Random@56348091, OneTimeWrapper@aa1c073 term=,bytes=[],startOffset=0,endOffset=0,positionIncrement=1,positionLength=1,type=word,termFrequency=1)\n   [junit4]   2>   Conditional:org.apache.lucene.analysis.shingle.FixedShingleFilter(OneTimeWrapper@4cf58fce term=,bytes=[],startOffset=0,endOffset=0,positionIncrement=1,positionLength=1,type=word,termFrequency=1, 4, <NUM>, <SOUTHEAST_ASIAN>)\n   [junit4]   2>   org.apache.lucene.analysis.pt.PortugueseLightStemFilter(ValidatingTokenFilter@3a915324 term=,bytes=[],startOffset=0,endOffset=0,positionIncrement=1,positionLength=1,type=word,termFrequency=1,keyword=false)\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestRandomChains -Dtests.method=testRandomChainsWithLargeStrings -Dtests.seed=92344C536D4E00F4 -Dtests.multiplier=3 -Dtests.slow=true -Dtests.locale=en-ZW -Dtests.timezone=Atlantic/Faroe -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n   [junit4] ERROR   0.46s J2 | TestRandomChains.testRandomChainsWithLargeStrings <<<\n   [junit4]    > Throwable #1: java.lang.IllegalStateException: stage 3: inconsistent startOffset at pos=0: 0 vs 5; token=effort\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([92344C536D4E00F4:F86FF34234002007]:0)\n   [junit4]    > \tat org.apache.lucene.analysis.ValidatingTokenFilter.incrementToken(ValidatingTokenFilter.java:109)\n   [junit4]    > \tat org.apache.lucene.analysis.pt.PortugueseLightStemFilter.incrementToken(PortugueseLightStemFilter.java:48)\n   [junit4]    > \tat org.apache.lucene.analysis.ValidatingTokenFilter.incrementToken(ValidatingTokenFilter.java:68)\n   [junit4]    > \tat org.apache.lucene.analysis.BaseTokenStreamTestCase.checkResetException(BaseTokenStreamTestCase.java:441)\n   [junit4]    > \tat org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:546)\n   [junit4]    > \tat org.apache.lucene.analysis.core.TestRandomChains.testRandomChainsWithLargeStrings(TestRandomChains.java:897)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n   [junit4]    > \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n   [junit4]    > \tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n   [junit4]    > \tat java.base/java.lang.Thread.run(Thread.java:844)\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene70): {dummy=TestBloomFilteredLucenePostings(BloomFilteringPostingsFormat(Lucene50(blocksize=128)))}, docValues:{}, maxPointsInLeafNode=214, maxMBSortInHeap=5.729405811878087, sim=RandomSimilarity(queryNorm=true): {}, locale=en-ZW, timezone=Atlantic/Faroe\n   [junit4]   2> NOTE: Linux 4.15.0-32-generic amd64/Oracle Corporation 10.0.1 (64-bit)/cpus=8,threads=1,free=266844648,total=518979584\n   [junit4]   2> NOTE: All tests run in this JVM: [TestOptionalCondition, TestSerbianNormalizationRegularFilter, TestCommonGramsFilterFactory, TestDoubleEscape, TestDictionaryCompoundWordTokenFilterFactory, TestNorwegianMinimalStemFilter, TestCzechStemmer, TestTurkishLowerCaseFilterFactory, TestAnalyzers, TestScandinavianFoldingFilterFactory, TestReversePathHierarchyTokenizer, TestSimplePatternTokenizer, TestGalicianMinimalStemFilter, MinHashFilterTest, TestPortugueseStemFilterFactory, TestPersianCharFilter, TestPerFieldAnalyzerWrapper, TestRandomChains]\n   [junit4] Completed [73/291 (1!)] on J2 in 3.12s, 2 tests, 1 error <<< FAILURES!",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16689599",
            "author": "Mike Sokolov",
            "content": "Steve Rowe I can take a look at this one ",
            "date": "2018-11-16T16:07:38+0000"
        },
        {
            "id": "comment-16689602",
            "author": "Steve Rowe",
            "content": "Thanks Mike Sokolov, have at it! ",
            "date": "2018-11-16T16:09:26+0000"
        },
        {
            "id": "comment-16689623",
            "author": "Steve Rowe",
            "content": "Another reproducing seed, though it only fails for me if I run the whole suite, i.e. remove -Dtests.method=testRandomChainsWithLargeStrings from the cmdline - maybe this test method is affected by other methods somehow? From https://builds.apache.org/job/Lucene-Solr-NightlyTests-7.x/377:\n\n\n   [junit4] Suite: org.apache.lucene.analysis.core.TestRandomChains\n   [junit4]   2> Exception from random analyzer: \n   [junit4]   2> charfilters=\n   [junit4]   2> tokenizer=\n   [junit4]   2>   org.apache.lucene.analysis.MockTokenizer(org.apache.lucene.util.AttributeFactory$1@9c912349, initial state: 0\n   [junit4]   2> state 0 [reject]:\n   [junit4]   2>  a -> 1\n   [junit4]   2>  b -> 2\n   [junit4]   2>  f -> 3\n   [junit4]   2>  i -> 4\n   [junit4]   2>  n -> 5\n   [junit4]   2>  o -> 6\n   [junit4]   2>  s -> 7\n   [junit4]   2>  t -> 8\n   [junit4]   2>  w -> 9\n   [junit4]   2> state 1 [accept]:\n   [junit4]   2>  n -> 10\n   [junit4]   2>  r -> 11\n   [junit4]   2>  s -> 12\n   [junit4]   2>  t -> 13\n   [junit4]   2> state 2 [reject]:\n   [junit4]   2>  e -> 14\n   [junit4]   2>  u -> 15\n   [junit4]   2>  y -> 16\n   [junit4]   2> state 3 [reject]:\n   [junit4]   2>  o -> 17\n   [junit4]   2> state 4 [reject]:\n   [junit4]   2>  f -> 18\n   [junit4]   2>  n -> 19\n   [junit4]   2>  s -> 20\n   [junit4]   2>  t -> 21\n   [junit4]   2> state 5 [reject]:\n   [junit4]   2>  o -> 22\n   [junit4]   2> state 6 [reject]:\n   [junit4]   2>  f -> 23\n   [junit4]   2>  n -> 24\n   [junit4]   2>  r -> 25\n   [junit4]   2> state 7 [reject]:\n   [junit4]   2>  u -> 26\n   [junit4]   2> state 8 [reject]:\n   [junit4]   2>  h -> 27\n   [junit4]   2>  o -> 28\n   [junit4]   2> state 9 [reject]:\n   [junit4]   2>  a -> 29\n   [junit4]   2>  i -> 30\n   [junit4]   2> state 10 [accept]:\n   [junit4]   2>  d -> 31\n   [junit4]   2> state 11 [reject]:\n   [junit4]   2>  e -> 32\n   [junit4]   2> state 12 [accept]:\n   [junit4]   2> state 13 [accept]:\n   [junit4]   2> state 14 [accept]:\n   [junit4]   2> state 15 [reject]:\n   [junit4]   2>  t -> 33\n   [junit4]   2> state 16 [accept]:\n   [junit4]   2> state 17 [reject]:\n   [junit4]   2>  r -> 34\n   [junit4]   2> state 18 [accept]:\n   [junit4]   2> state 19 [accept]:\n   [junit4]   2>  t -> 35\n   [junit4]   2> state 20 [accept]:\n   [junit4]   2> state 21 [accept]:\n   [junit4]   2> state 22 [accept]:\n   [junit4]   2>  t -> 36\n   [junit4]   2> state 23 [accept]:\n   [junit4]   2> state 24 [accept]:\n   [junit4]   2> state 25 [accept]:\n   [junit4]   2> state 26 [reject]:\n   [junit4]   2>  c -> 37\n   [junit4]   2> state 27 [reject]:\n   [junit4]   2>  a -> 38\n   [junit4]   2>  e -> 39\n   [junit4]   2>  i -> 40\n   [junit4]   2> state 28 [accept]:\n   [junit4]   2> state 29 [reject]:\n   [junit4]   2>  s -> 41\n   [junit4]   2> state 30 [reject]:\n   [junit4]   2>  l -> 42\n   [junit4]   2>  t -> 43\n   [junit4]   2> state 31 [accept]:\n   [junit4]   2> state 32 [accept]:\n   [junit4]   2> state 33 [accept]:\n   [junit4]   2> state 34 [accept]:\n   [junit4]   2> state 35 [reject]:\n   [junit4]   2>  o -> 44\n   [junit4]   2> state 36 [accept]:\n   [junit4]   2> state 37 [reject]:\n   [junit4]   2>  h -> 45\n   [junit4]   2> state 38 [reject]:\n   [junit4]   2>  t -> 46\n   [junit4]   2> state 39 [accept]:\n   [junit4]   2>  i -> 47\n   [junit4]   2>  n -> 48\n   [junit4]   2>  r -> 49\n   [junit4]   2>  s -> 50\n   [junit4]   2>  y -> 51\n   [junit4]   2> state 40 [reject]:\n   [junit4]   2>  s -> 52\n   [junit4]   2> state 41 [accept]:\n   [junit4]   2> state 42 [reject]:\n   [junit4]   2>  l -> 53\n   [junit4]   2> state 43 [reject]:\n   [junit4]   2>  h -> 54\n   [junit4]   2> state 44 [accept]:\n   [junit4]   2> state 45 [accept]:\n   [junit4]   2> state 46 [accept]:\n   [junit4]   2> state 47 [reject]:\n   [junit4]   2>  r -> 55\n   [junit4]   2> state 48 [accept]:\n   [junit4]   2> state 49 [reject]:\n   [junit4]   2>  e -> 56\n   [junit4]   2> state 50 [reject]:\n   [junit4]   2>  e -> 57\n   [junit4]   2> state 51 [accept]:\n   [junit4]   2> state 52 [accept]:\n   [junit4]   2> state 53 [accept]:\n   [junit4]   2> state 54 [accept]:\n   [junit4]   2> state 55 [accept]:\n   [junit4]   2> state 56 [accept]:\n   [junit4]   2> state 57 [accept]:\n   [junit4]   2> , true)\n   [junit4]   2> filters=\n   [junit4]   2>   org.apache.lucene.analysis.shingle.ShingleFilter(ValidatingTokenFilter@13de14e term=,bytes=[],startOffset=0,endOffset=0,positionIncrement=1,positionLength=1,type=word,termFrequency=1)\n   [junit4]   2>   Conditional:org.apache.lucene.analysis.shingle.FixedShingleFilter(OneTimeWrapper@2c0047b9 term=,bytes=[],startOffset=0,endOffset=0,positionIncrement=1,positionLength=1,type=word,termFrequency=1, 2)\n   [junit4]   2>   org.apache.lucene.analysis.miscellaneous.DateRecognizerFilter(ValidatingTokenFilter@7846ee89 term=,bytes=[],startOffset=0,endOffset=0,positionIncrement=1,positionLength=1,type=word,termFrequency=1)\n   [junit4]   2> NOTE: download the large Jenkins line-docs file by running 'ant get-jenkins-line-docs' in the lucene directory.\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestRandomChains -Dtests.method=testRandomChainsWithLargeStrings -Dtests.seed=8021DE70475B4140 -Dtests.multiplier=2 -Dtests.nightly=true -Dtests.slow=true -Dtests.linedocsfile=/home/jenkins/jenkins-slave/workspace/Lucene-Solr-NightlyTests-7.x/test-data/enwiki.random.lines.txt -Dtests.locale=en-PH -Dtests.timezone=America/Belize -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] ERROR   14.4s J1 | TestRandomChains.testRandomChainsWithLargeStrings <<<\n   [junit4]    > Throwable #1: java.lang.IllegalStateException: stage 2: inconsistent endOffset at pos=1: 2 vs 3; token=be s s\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([8021DE70475B4140:EA7A61611E1561B3]:0)\n   [junit4]    > \tat org.apache.lucene.analysis.ValidatingTokenFilter.incrementToken(ValidatingTokenFilter.java:125)\n   [junit4]    > \tat org.apache.lucene.analysis.FilteringTokenFilter.incrementToken(FilteringTokenFilter.java:49)\n   [junit4]    > \tat org.apache.lucene.analysis.ValidatingTokenFilter.incrementToken(ValidatingTokenFilter.java:68)\n   [junit4]    > \tat org.apache.lucene.analysis.BaseTokenStreamTestCase.checkResetException(BaseTokenStreamTestCase.java:441)\n   [junit4]    > \tat org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:546)\n   [junit4]    > \tat org.apache.lucene.analysis.core.TestRandomChains.testRandomChainsWithLargeStrings(TestRandomChains.java:897)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:748)\n   [junit4]   2> NOTE: leaving temporary files on disk at: /x1/jenkins/jenkins-slave/workspace/Lucene-Solr-NightlyTests-7.x/checkout/lucene/build/analysis/common/test/J1/temp/lucene.analysis.core.TestRandomChains_8021DE70475B4140-001\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene70): {dummy=PostingsFormat(name=LuceneVarGapDocFreqInterval)}, docValues:{}, maxPointsInLeafNode=1764, maxMBSortInHeap=6.560614608283627, sim=RandomSimilarity(queryNorm=true): {dummy=DFR GLZ(0.3)}, locale=en-PH, timezone=America/Belize\n   [junit4]   2> NOTE: Linux 4.4.0-137-generic amd64/Oracle Corporation 1.8.0_191 (64-bit)/cpus=4,threads=1,free=210477784,total=288358400\n\n ",
            "date": "2018-11-16T16:21:41+0000"
        },
        {
            "id": "comment-16690125",
            "author": "Mike Sokolov",
            "content": "Well I can at least add a bit more color. I added some debugging support to ValidatingTokenFilter to capture the tokens seen so they can be dumped out after. This is the complete history at the moment the exception was thrown, showing for each stage, which tokens it emitted so far. The numbers in square brackets are offsets, and the number following \"+\" is position increment. The issue here is in stage 3 (the conditional ShingleFilter), the overlapping tokens have different offsets. The ShingleFilter has shingle size=4 in this case.\n\nstage 0: best<[0-4] +1> effort<[5-11] +1>\n stage 1: best<[0-4] +1> effort<[5-11] +1> ef<[5-11] +0> effort<[5-11] +0>\n stage 2: best<[0-4] +1> effort<[5-11] +1> ef<[5-11] +0> effort<[5-11] +0>\n stage 3: best<[0-4] +1> effort<[5-11] +0>\n\nAnyway, the problem seems to arise in a conditional FixedShingleFilter that follows a conditional MockGraphTokenFilter. I see a comment in TestRandomChains to the effect that we don't test conditionals with ShingleFilter due to it not handling input graphs properly (LUCENE-4170). I wonder if the same logic ought to be applied to FIxedShingleFilter.\n\nAlso, I could post a patch with the debug output if it seems useful. It was at least somewhat helpful in getting a picture of this for me. ",
            "date": "2018-11-16T23:20:22+0000"
        },
        {
            "id": "comment-16690145",
            "author": "Mike Sokolov",
            "content": "Another reproducing seed, though it only fails for me if I run the whole suite, i.e. remove -Dtests.method=testRandomChainsWithLargeStrings from the cmdline\nfailed for me a few times with OutOfMemoryError when I run from the command line, including -Dtests.method=....\u00a0 But once I did see it fail with the exception above, again running only that single method ",
            "date": "2018-11-16T23:54:32+0000"
        },
        {
            "id": "comment-16690562",
            "author": "Mike Sokolov",
            "content": "With a bigger heap, I was able to get that one to run consistently. It looks like the same root cause - conditional FixedShingleFilter, and the token dump has a similar flavor too (some tokens removed, causing a token overlap with different offsets). I opened a PR https://github.com/apache/lucene-solr/pull/500 that adds FixedShingleFilter to the list of filters not to conditionalize, and stores generated tokens in ValidatingTokenFilter, dumping them when there is a validation failure. I don't have all the background on how that was forked from ShingleFilter - is there any reason to think that it handles token-graphs in some reasonable way?\n\n\u00a0 ",
            "date": "2018-11-17T13:55:21+0000"
        },
        {
            "id": "comment-16691426",
            "author": "Alan Woodward",
            "content": "Thanks for looking into this Mike Sokolov!  FixedShingleFilter does indeed not deal properly with input graphs - yet.  Can you try applying the patch on LUCENE-8564 to see if that fixes this seed?\n\nThe extra debugging tools on ValidatingTokenFilter are separately useful in any case.  I left a couple of comments on the github PR. ",
            "date": "2018-11-19T09:02:24+0000"
        },
        {
            "id": "comment-16691682",
            "author": "Mike Sokolov",
            "content": "Hmm sadly it does still repro for me even with LUCENE-8564 applied. I haven't had a chance to look closely this morning. In the meantime I'll post an update to the PR addressing your comments, and for now I'll leave in the exclusion for FIxedShingleFilter, although I hope we'll get to the bottom of it. ",
            "date": "2018-11-19T13:12:29+0000"
        },
        {
            "id": "comment-16700231",
            "author": "ASF subversion and git services",
            "content": "Commit 54907903e8d1a5da0c65328f24a1018c5e393afc in lucene-solr's branch refs/heads/master from Michael Sokolov\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5490790 ]\n\nLUCENE-8517: do not wrap FixedShingleFilter with conditional in TestRandomChains ",
            "date": "2018-11-27T11:00:47+0000"
        },
        {
            "id": "comment-16700260",
            "author": "ASF subversion and git services",
            "content": "Commit e5ab0d41effbad5d65bc3e5e0a5133459317fa14 in lucene-solr's branch refs/heads/branch_7x from Michael Sokolov\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e5ab0d4 ]\n\nLUCENE-8517: do not wrap FixedShingleFilter with conditional in TestRandomChains ",
            "date": "2018-11-27T11:14:40+0000"
        },
        {
            "id": "comment-16702264",
            "author": "ASF subversion and git services",
            "content": "Commit 54907903e8d1a5da0c65328f24a1018c5e393afc in lucene-solr's branch refs/heads/jira/http2 from Michael Sokolov\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5490790 ]\n\nLUCENE-8517: do not wrap FixedShingleFilter with conditional in TestRandomChains ",
            "date": "2018-11-28T18:48:39+0000"
        }
    ]
}