{
    "id": "SOLR-10472",
    "title": "Fix uninversioning of (single valued) PointFields & clean up some related code",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "6.6",
            "7.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "In getting caught up with the new PointsField work in SOLR-8396 & SOLR-9987 I realized:\n\n\n\tThere's some inconsistencies/contridictions in how the new field types implement FieldType.getUninversionType vs some of the error handling added to methods like SchemaField.checkSortability.\n\tas part of SOLR-9987, SORTED_foo constants were added to UninvertingReader and used in the getUninversionType methods for PointFields \u2013 even though those constants are useless (because UninvertingReader doesn't support uninverting multivalued points: SOLR-9202)\n\tthe changes made to methods like SchemaField.checkSortability to explicitly check isPointsField should have never been needed if those methods were paying attention to getUninversionType \u2013 but those types of checks weren't added when getUninversionType was introduced (the existing checks pre-date the DocValues API, back where any single-valued indexed field was implicitily \"uninvertable\")\n\tIf all of the above is corrected, the only thing preventing UninvertedReader from working properly with Solr's new PointField types (in the single valued case) is a trivial bug in IndexSchema (being presumptutious about what is uninvertable)\n\n\n\nI'm opening this issue to track fixing all of this, such that the end result will be:\n\n\n\tsingle valued PointFields will be uninvertable (ie: sortable even if they don't have docvalues)\n\terror handling code will be simplified\n\tunused/unsupported/misleading constants in UninvertingReader will be removed.",
    "attachments": {
        "SOLR-10472.patch": "https://issues.apache.org/jira/secure/attachment/12862550/SOLR-10472.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-04-08T00:56:50+0000",
            "content": "\nHere's my starting point of a patch, showing:\n\n\tthe logic fixes for all IndexSchema & all FooPointField classes\n\tcorrected check* methods in SchemaField  (and simplifying the logic so it's more future proof for other similar classes down the road)\n\tremoval of usless/missleading constants from UninvertingReader\n\tTestPointFields changes demonstrating this new logic for sorting IntPointField\n\t\n\t\tmost of the remaining work needed is here, changing the tests for other types, fixing the FunctionQuery tests, and beefing up the test coverage\n\t\n\t\n\n\n\n\n\nNote: i'll be offline for (at least) a week (vacation, then possible jury duty) so if there are comments/questions about this i won't be around to answer them for a while ... i'll plan on picking this back up when i return unless someone else beats me to it. ",
            "author": "Hoss Man",
            "id": "comment-15961612"
        },
        {
            "date": "2017-04-17T18:30:53+0000",
            "content": "patch updated to master.\n\nLukeRequestHandlerTest.testLuke is currently failing (reliably) in a weird way for reason i haven't wrapped by head around yet \u2013 not sure if that's a new consequence of other changes on master, or something i overlooked before.\n\nsince i haven't seen any objections/concerns to the overall idea of this jira, i'll plan on moving forward with fixing up the remaining nocommits and beefing up the tests \u2013 starting with a dive into what's going wrong in testLuke ",
            "author": "Hoss Man",
            "id": "comment-15971455"
        },
        {
            "date": "2017-04-18T01:22:29+0000",
            "content": "\n\n\tthe root cause of the testLuke failure was (evidently) because the IndexSchema changes i had made for got to check if a field was indexed=true before including it in the uninversion map - that seemed to trigger some unexpected code path in the LukeRequestHandler which caused no response for non-indexed (non-docvalue) fields.\n\tI resolved all the nocommits & beefed up the Points Sorting & ValueSource testing\n\t\n\t\ti also fleshed out some more TODO items relating to sort missing first/last (see SOLR-10501: there were already TODO items about this, improving the test coverage in this way shouldn't block the uninverting improvements)\n\t\n\t\n\tChanging SchemaField.checkFieldCacheSource() to check getUninversionType led me to discover bugs in CurrencyField \u2013 it's getValueSource(field) method was calling field.checkFieldCacheSource() even though there is no reason why the field itself needs to be indexed/docvalues \u2013 that's the job of the underlying poly-fields, which were NOT being checked, so i fixed that as well.\n\t\n\t\tsee also: SOLR-10502 & SOLR-10503, both other CurrencyField improvements for the future i noticed while working looking into this.\n\t\n\t\n\n ",
            "author": "Hoss Man",
            "id": "comment-15971952"
        },
        {
            "date": "2017-04-18T18:58:44+0000",
            "content": "Commit 10772121eee97023aed415751e49a06d116b26ad in lucene-solr's branch refs/heads/master from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1077212 ]\n\nSOLR-10472: Fixed uninversion (aka: FieldCache) bugs with the numeric PointField classes, and CurrencyField ",
            "author": "ASF subversion and git services",
            "id": "comment-15973287"
        },
        {
            "date": "2017-04-18T18:59:28+0000",
            "content": "on master, planning to backport to 6x this afternoon/tomorrow. ",
            "author": "Hoss Man",
            "id": "comment-15973290"
        },
        {
            "date": "2017-04-18T22:02:55+0000",
            "content": "Commit dedb0255947ed936e001b244ff1859075398dc40 in lucene-solr's branch refs/heads/branch_6x from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=dedb025 ]\n\nSOLR-10472: Fixed uninversion (aka: FieldCache) bugs with the numeric PointField classes, and CurrencyField\n\n(cherry picked from commit 10772121eee97023aed415751e49a06d116b26ad)\n\nConflicts in test due to slightly diff internal DocValues APIs on master vs 6x\n\tsolr/core/src/test/org/apache/solr/schema/TestPointFields.java ",
            "author": "ASF subversion and git services",
            "id": "comment-15973597"
        }
    ]
}