{
    "id": "SOLR-8940",
    "title": "group.sort broken, can through AIOOBE if clause length differs from sort param, or cast exception if datatypes are incompatible with sort clause types",
    "details": {
        "components": [
            "search"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.5.2",
            "5.6",
            "6.0.2",
            "6.1",
            "7.0"
        ],
        "affect_versions": "5.5,                                            5.5.1,                                            6.0,                                            6.0.1",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Blocker"
    },
    "description": "We get an ArrayIndexOutOfBoundsException when searching after upgrading to solr 5.5.\n\nHere's the query:\n\n\n\"params\":{\n      \"q\":\"*:*\",\n      \"group.sort\":\"priceAmount asc,rnd desc\",\n      \"indent\":\"on\",\n      \"fl\":\"priceAmount,flightTripId,brand,slob,cabinType,tripDuration\",\n      \"group.limit\":\"100\",\n      \"fq\":[\"searchId:e31a0c58-9056-4297-8d70-049017ba4906\",\n        \"doctype:offer\",\n        \"flightTripIdn        \"maximumLegDuration:[* TO 180]\",\n        \"departureAirportLeg1:(OSL)\",\n        \"(arrivalAirportLeg2:(OSL) OR (* NOT arrivalAirportLeg2:*))\",\n        \"arrivalAirportLeg1:(BGO)\",\n        \"(departureAirportLeg2:(BGO) OR (* NOT departureAirportLeg2:*))\"],\n      \"group.ngroups\":\"true\",\n      \"wt\":\"json\",\n      \"group.field\":\"flightTripId\",\n      \"group\":\"true\"}}\n\n\n\nAnd here's the exception:\n\n\nERROR [20160404T104846,333] qtp315138752-3037 org.apache.solr.servlet.HttpSolrCall - null:java.lang.ArrayIndexOutOfBoundsException: 1\n        at org.apache.solr.search.grouping.distributed.shardresultserializer.TopGroupsResultTransformer.transformToNativeShardDoc(TopGroupsResultTransformer.java:175)\n        at org.apache.solr.search.grouping.distributed.shardresultserializer.TopGroupsResultTransformer.transformToNative(TopGroupsResultTransformer.java:137)\n        at org.apache.solr.search.grouping.distributed.responseprocessor.TopGroupsShardResponseProcessor.process(TopGroupsShardResponseProcessor.java:129)\n        at org.apache.solr.handler.component.QueryComponent.handleGroupedResponses(QueryComponent.java:750)\n        at org.apache.solr.handler.component.QueryComponent.handleResponses(QueryComponent.java:733)\n        at org.apache.solr.handler.component.SearchHandler.handleRequestBody(SearchHandler.java:405)\n        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:155)\n        at org.apache.solr.core.SolrCore.execute(SolrCore.java:2082)\n\n\n\nThe exception is thrown at the last line here (TopGroupsResultTransformer.java line 175):\n\n\n  protected ScoreDoc[] transformToNativeShardDoc(List<NamedList<Object>> documents, Sort groupSort, String shard,\n                                                 IndexSchema schema) {\n    [...]\n    for (NamedList<Object> document : documents) {\n      [...]\n      Object sortValuesVal = document.get(\"sortValues\");\n      if (sortValuesVal != null) {\n        sortValues = ((List) sortValuesVal).toArray();\n        for (int k = 0; k < sortValues.length; k++) {\n          SchemaField field = groupSort.getSort()[k].getField() != null\n              ? schema.getFieldOrNull(groupSort.getSort()[k].getField()) : null;\n\n\n\nIt's not obvious to me that sortValues.length == groupSort.getSort().length, but I guess there's some logic behind it \n\nI have attached the schema and json result.\n\nThe problem disappears when rolling back to 5.4.0.",
    "attachments": {
        "solrconfig.xml": "https://issues.apache.org/jira/secure/attachment/12796814/solrconfig.xml",
        "schema-types.xml": "https://issues.apache.org/jira/secure/attachment/12796812/schema-types.xml",
        "schema.xml": "https://issues.apache.org/jira/secure/attachment/12796813/schema.xml",
        "solr-query-exception.txt": "https://issues.apache.org/jira/secure/attachment/12796811/solr-query-exception.txt",
        "0001-SOLR-8940-Avoid-ArrayIndexOutOfBoundsException-in-To.patch": "https://issues.apache.org/jira/secure/attachment/12804889/0001-SOLR-8940-Avoid-ArrayIndexOutOfBoundsException-in-To.patch",
        "SOLR-8940.patch": "https://issues.apache.org/jira/secure/attachment/12807281/SOLR-8940.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-05-11T07:47:21+0000",
            "author": "Stephan Lagraulet",
            "content": "Can you remove this issue from version 5.5.1 as this version is packaged without a fix for this issue? ",
            "id": "comment-15279728"
        },
        {
            "date": "2016-05-19T07:24:13+0000",
            "author": "Henrik",
            "content": "Still a problem in 5.5.1  ",
            "id": "comment-15290615"
        },
        {
            "date": "2016-05-19T07:41:35+0000",
            "author": "Henrik",
            "content": "Here's a patch.  I don't know if it just hides the original issue, but at least it doesn't make assumptions regarding sortValues.length == groupSort.getSort().length\n\nRef. https://issues.apache.org/jira/secure/attachment/12804889/0001-SOLR-8940-Avoid-ArrayIndexOutOfBoundsException-in-To.patch ",
            "id": "comment-15290633"
        },
        {
            "date": "2016-05-31T18:47:04+0000",
            "author": "Hoss Man",
            "content": "\nHenrik: your patch would definitely just mask the underlying problem.\n\nThe crux of the issue seems to be that the code is convoluting variables/properties of \"sorting within groups\" and \"sorting the groups\" \u2013 the AIOOBE happens anytime the (effective) value of group.sort (how docs in a group are sorted) has more clauses then the (effective) value of the sort param (how the groups are sorted).\n\nHenrik: wih your suggested patch, the AIOOBE may goe away, in your sample query but i think that's only because it's ignroning any group.sort clauses after the first one (since hte default effective value of the \"sort\" param is one clause: \"score desc\").\n\nBut even when sort & group.sort have the exact same number of clauses, there are still bugs.  For example using the techproducs sample data (in a 2 shard cloud collection) this query throws an error about not being able to fast a Float to a String because of how the sort metadata is getting confused between the sort=id vs the group.sort=price...\n\nhttp://localhost:8983/solr/techproducts/select?wt=json&indent=true&fl=id,name,price&q=solr+memory&group=true&sort=id+asc&group.field=manu_exact&group.limit=2&group.sort=price+desc\n\n...in a single node collection (bin/solr -e techproducts) that query works just fine.\n\nI suspect this bug was introduced by a mistake in some of the refactoring in LUCENE-6900, but it doesn't immediately jump out at me when skimming the diff ... i'll review more throughly a bit later today.\n ",
            "id": "comment-15308333"
        },
        {
            "date": "2016-05-31T20:36:36+0000",
            "author": "Henrik",
            "content": "Thanks for diving into this Hoss Man  ",
            "id": "comment-15308571"
        },
        {
            "date": "2016-05-31T23:06:27+0000",
            "author": "Hoss Man",
            "content": "I suspect this bug was introduced by a mistake in some of the refactoring in LUCENE-6900, ...\n\nconfirmed.  some near identical code was refactored into the (new in 5.5) transformToNativeShardDoc method, but the two places where the code was refactored were updated to include identical calls to this method with identical arguments including groupSort \u2013 in one of those cases sortWithinGroup should have been used as the method arg instead.\n\n\n\nAttaching a patch with fix and some new non trivial group.sort tests that demonstrate the bug w/o the fix applied ",
            "id": "comment-15308820"
        },
        {
            "date": "2016-05-31T23:53:10+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 22faa09882f818ce5f91d0230d84f7dc8cc1c084 in lucene-solr's branch refs/heads/branch_6x from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=22faa09 ]\n\nSOLR-8940: Fix group.sort option\n\n(cherry picked from commit 18256fc2873f198e8e577c6eb0f337df1d1cda24) ",
            "id": "comment-15308895"
        },
        {
            "date": "2016-05-31T23:53:11+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 18256fc2873f198e8e577c6eb0f337df1d1cda24 in lucene-solr's branch refs/heads/master from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=18256fc ]\n\nSOLR-8940: Fix group.sort option ",
            "id": "comment-15308896"
        },
        {
            "date": "2016-05-31T23:57:38+0000",
            "author": "Hoss Man",
            "content": "thanks for reporting this Henrik! ",
            "id": "comment-15308908"
        },
        {
            "date": "2016-06-14T21:24:04+0000",
            "author": "Steve Rowe",
            "content": "Reopening to backport for 6.0.2/5.6/5.5.2 ",
            "id": "comment-15330642"
        },
        {
            "date": "2016-06-14T22:51:12+0000",
            "author": "ASF subversion and git services",
            "content": "Commit bdab648a4063bbdeda7877353fa25eb49871dbe9 in lucene-solr's branch refs/heads/branch_5_5 from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=bdab648 ]\n\nSOLR-8940: Fix group.sort option\n\n(cherry picked from commit 18256fc2873f198e8e577c6eb0f337df1d1cda24) ",
            "id": "comment-15330806"
        },
        {
            "date": "2016-06-14T22:51:14+0000",
            "author": "ASF subversion and git services",
            "content": "Commit d3a9d03c261907e27c5559affbc4a6d2138add65 in lucene-solr's branch refs/heads/branch_5x from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d3a9d03 ]\n\nSOLR-8940: Fix group.sort option\n\n(cherry picked from commit 18256fc2873f198e8e577c6eb0f337df1d1cda24) ",
            "id": "comment-15330807"
        },
        {
            "date": "2016-06-14T22:51:15+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 240140da0fc833a80eab2130ea117ae4f21e77aa in lucene-solr's branch refs/heads/branch_6_0 from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=240140d ]\n\nSOLR-8940: Fix group.sort option\n\n(cherry picked from commit 18256fc2873f198e8e577c6eb0f337df1d1cda24) ",
            "id": "comment-15330808"
        }
    ]
}