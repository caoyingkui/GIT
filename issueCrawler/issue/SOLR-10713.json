{
    "id": "SOLR-10713",
    "title": "git should ignore common output files (*.pid, *.out)",
    "details": {
        "labels": "",
        "priority": "Trivial",
        "components": [
            "Build"
        ],
        "type": "Improvement",
        "fix_versions": [
            "7.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "During the course of experimenting/testing Solr, it's common to accumulate a number of output files in the source checkout.  Many of these are already ignored via the .gitignore.  (For example, .jar and .log files are untracked currently)\n\nSome common output files aren't explicitly ignored by git though.  I know this is true of .pid and .out files (such as those produced by running a standalone ZK).\n\nIt'd be nice if we could update the .gitignore to explicitly ignore these filetypes by default.",
    "attachments": {
        "SOLR-10713.patch": "https://issues.apache.org/jira/secure/attachment/12868869/SOLR-10713.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-05-19T03:00:30+0000",
            "content": "Patch updates .gitignore to not track the filetypes mentioned above.\n\nCan anyone else think of other filetypes that occasionally pollute local checkouts?\n\n(I considered adding *.patch to the list of filetypes above, as I often see these in my checkout.  Might just be a wart of my specific workflow though, so I left it out of the patch.) ",
            "author": "Jason Gerlowski",
            "id": "comment-16016829"
        },
        {
            "date": "2017-05-19T05:13:07+0000",
            "content": "I would also ignore .err files ",
            "author": "Mike Drob",
            "id": "comment-16016908"
        },
        {
            "date": "2017-05-19T15:58:44+0000",
            "content": "Good call; updated patch to cover *.err files. ",
            "author": "Jason Gerlowski",
            "id": "comment-16017587"
        },
        {
            "date": "2017-05-19T17:36:09+0000",
            "content": "Not sure what the right answer here is, but would it make more sense to exclude those files from a specific directory instead of from the root? I'm not sure where you were seeing them, but the later lines for /solr/examples/ are what triggered this thought. ",
            "author": "Mike Drob",
            "id": "comment-16017723"
        },
        {
            "date": "2017-05-19T18:01:27+0000",
            "content": "You're right that some of the file formats I take issue against do tend to be found in particular directories.  (*.pid files, for example, are always found in the same directory as a result of the current bin/solr implementation.).\n\nI considered taking a more conservative description of these paths in .gitignore, but opted against it-  .out, .err, and .pid files are all output files of one type of another and shouldn't be committed whether they're in a path we anticipated or not.\n\n(Technically this is just convention- someone could store their source code or config in a .out file, but I'd argue the convention is strong/universal enough to go along with.)\n\nIf you (or others) feel I've overreached here though, I'm happy to update the .gitignore with more conservative wildcarding.  Consider the above an explanation of my approach, and not necessarily a defense. ",
            "author": "Jason Gerlowski",
            "id": "comment-16017765"
        },
        {
            "date": "2017-05-19T18:06:28+0000",
            "content": "The biggest issue I can think of is if we wanted to have some sample.out file as a test resource to use as an input and this could trip somebody up. I agree that it's unlikely, but the impact seems like it would be relatively nightmarish for somebody trying to debug and not understand why their files keep disappearing. ",
            "author": "Mike Drob",
            "id": "comment-16017772"
        },
        {
            "date": "2017-05-19T18:41:26+0000",
            "content": "I'd contend the \"nightmarish\" description you gave above- a search for \"git files not tracked\" or \"git status missing files\", or the command git status -h is enough to get on the right track in this rare case.\n\nAdmittedly, someone with less git experience might choose different search terms.  So point taken; it can be unintuitive, and that's a bad thing.\n\nI can/will narrow down the pid file path due to that concern.  What would you propose I do with the other file extensions (which aren't pin-able to a specific directory the was pid files are)?  Should I give up on having git hide them by default? ",
            "author": "Jason Gerlowski",
            "id": "comment-16017819"
        },
        {
            "date": "2017-05-19T20:07:39+0000",
            "content": "I feel bad for quibbling like this over what should be a straightforward patch.\n\nLet's narrow the pid files to where they actually show up. Let me think on the .out files over the weekend, I'll come back to this on Monday. ",
            "author": "Mike Drob",
            "id": "comment-16017954"
        },
        {
            "date": "2017-05-20T03:48:58+0000",
            "content": "Nah, you brought up good points.  I'm just familiar enough with git that I'm starting to become blind to some of its eccentricities/warts/traps :-p\n\nUpdates patch to only ignore pid files in solr/bin/ directory. ",
            "author": "Jason Gerlowski",
            "id": "comment-16018297"
        },
        {
            "date": "2017-05-20T13:42:02+0000",
            "content": "While you are at it, can you please separate out a Solr .gitignore from the top level? ",
            "author": "David Smiley",
            "id": "comment-16018454"
        },
        {
            "date": "2017-05-20T15:30:56+0000",
            "content": "Sure thing.  Updated patch attached. ",
            "author": "Jason Gerlowski",
            "id": "comment-16018505"
        },
        {
            "date": "2017-05-21T22:15:40+0000",
            "content": "Another case to consider is the collection directories created when Solr runs using the bin/solr scripts with default settings.\n\nGit Status output\n[~/c/l/solr] $ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\n\tserver/solr/collection_name2_shard1_replica1/\n\tserver/solr/collection_name_shard1_replica1/\n\tzookeeper.out\n\n\n\nThese are a bit trickier to exclude, since the path includes the collection name, but I'm 99% sure that server/solr/*_shard*replica*/ would do the trick if added to the .gitignore in the solr/ directory.  I'll hold off adding this to the patch until confirmation/approval. ",
            "author": "Jason Gerlowski",
            "id": "comment-16019000"
        },
        {
            "date": "2017-06-02T21:41:04+0000",
            "content": "Another possible addition to the .gitignore would be .patch files.  These aren't as common to accumulate, but they can pop up when people are juggling multiple JIRAs simultaneously.\n\nI don't feel strongly either way; just mentioning it here in case anyone else really likes the idea.  Any thoughts Mike Drob? ",
            "author": "Jason Gerlowski",
            "id": "comment-16035470"
        },
        {
            "date": "2017-06-02T21:56:05+0000",
            "content": "Let's get the easy parts committed and not worry about the hard parts for now (i.e. collection directories) - we can always come back to them later if somebody decides they're enough of a problem to solve rather than a hypothetical problem to try and handle. What's the phrase... striving to better, oft we mar what's well?\n\nI'm not sure it makes a difference, but when moving entries from the top-level to the solr specific ignore list, some retained the leading slash and some lost it. I went looking at man gitignore, and discovered these two entries:\n\n\n\tA leading slash matches the beginning of the pathname. For example,\n           \"/*.c\" matches \"cat-file.c\" but not \"mozilla-sha1/sha1.c\".\n\tA leading \"**\" followed by a slash means match in all directories.\n           For example, \"**/foo\" matches file or directory \"foo\" anywhere, the\n           same as pattern \"foo\"\n\n\n\nSo let's drop leading **, and also get consistent about our use of leading slash.\n\nI have no preference on .patch files. Maybe leave them out so that they still get shown by git status and the user can be reminded that they exist. I think the risk of accidentally committing one is low and the remedy is simple since conflicts and dependancies on SOLR-XXX.patch should be unlikely. ",
            "author": "Mike Drob",
            "id": "comment-16035491"
        },
        {
            "date": "2017-06-03T12:55:24+0000",
            "content": "Fair enough, and nice quote haha.\n\nTo clarify, are you looking to have **'s removed everywhere in the gitignore, or just on the lines I've added here (err, out)?  For many of the gitignore entries, I think \"match in all directories\" is the intended/correct behavior.  For example, the root .gitignore has an entry for **/lib, which matches a ton of directories (all of which hold binaries, and should be ignored)\n\n\n[~/c/lucene-solr] $ find . -name \"lib\" -type d | wc -l\n51\n\n\n\n\n\nWill update the patch as soon as I hear what you intended. ",
            "author": "Jason Gerlowski",
            "id": "comment-16035962"
        },
        {
            "date": "2017-06-03T14:13:23+0000",
            "content": "According to my reading to the .gitignore man page, **/lib and lib both match all lib directories. /lib on the other hand, only matches a top level lib directory. I'll admit that I haven't tested this yet to confirm, though. ",
            "author": "Mike Drob",
            "id": "comment-16035974"
        },
        {
            "date": "2017-06-03T17:15:04+0000",
            "content": "For example, \"**/foo\" matches file or directory \"foo\" anywhere, the same as pattern \"foo\".\n\n(from the man page you referenced)\n\nHuh, you learn something new everyday.  Well, I've updated the patch to address your comments.\n\nI did some light testing by dropping files/sub-dir trees matching the various ignored patterns around my checkout, and didn't find any surprises git-tracking-wise.  So this should be looking good, pending your approval.  Thanks for the feedback, and for reviewing. ",
            "author": "Jason Gerlowski",
            "id": "comment-16036016"
        },
        {
            "date": "2017-06-04T19:02:33+0000",
            "content": "Did we want to move .out and .err into the solr/.gitignore? ",
            "author": "Mike Drob",
            "id": "comment-16036366"
        },
        {
            "date": "2017-06-04T21:03:55+0000",
            "content": "Updated patch with scope-narrowing suggested above. ",
            "author": "Jason Gerlowski",
            "id": "comment-16036391"
        },
        {
            "date": "2017-06-05T17:40:20+0000",
            "content": "LGTM, will commit later today. ",
            "author": "Mike Drob",
            "id": "comment-16037263"
        },
        {
            "date": "2017-06-05T17:50:47+0000",
            "content": "Commit 99093caec5932b00decbc2ee5948610bfd9202ca in lucene-solr's branch refs/heads/master from Jason Gerlowski\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=99093ca ]\n\nSOLR-10713: Add common output files to .gitignore\n\nSigned-off-by: Mike Drob <mdrob@apache.org> ",
            "author": "ASF subversion and git services",
            "id": "comment-16037277"
        },
        {
            "date": "2017-06-05T19:12:30+0000",
            "content": "Thanks, Jason Gerlowski! ",
            "author": "Mike Drob",
            "id": "comment-16037422"
        }
    ]
}