{
    "id": "LUCENE-2562",
    "title": "Make Luke a Lucene/Solr Module",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Task",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "see\n\"RE: Luke - in need of maintainer\": http://markmail.org/message/m4gsto7giltvrpuf\n\"Web-based Luke\": http://markmail.org/message/4xwps7p7ifltme5q\n\nI think it would be great if there was a version of Luke that always worked with trunk - and it would also be great if it was easier to match Luke jars with Lucene versions.\n\nWhile I'd like to get GWT Luke into the mix as well, I think the easiest starting point is to straight port Luke to another UI toolkit before abstracting out DTO objects that both GWT Luke and Pivot Luke could share.\n\nI've started slowly converting Luke's use of thinlet to Apache Pivot. I haven't/don't have a lot of time for this at the moment, but I've plugged away here and there over the past work or two. There is still a lot to do.",
    "attachments": {
        "Luke-ALE-5.png": "https://issues.apache.org/jira/secure/attachment/12592198/Luke-ALE-5.png",
        "luke-javafx3.png": "https://issues.apache.org/jira/secure/attachment/12923641/luke-javafx3.png",
        "lukeALE-documents.png": "https://issues.apache.org/jira/secure/attachment/12698764/lukeALE-documents.png",
        "LUCENE-2562.patch": "https://issues.apache.org/jira/secure/attachment/12599981/LUCENE-2562.patch",
        "luke-javafx2.png": "https://issues.apache.org/jira/secure/attachment/12923640/luke-javafx2.png",
        "luke2.jpg": "https://issues.apache.org/jira/secure/attachment/12450421/luke2.jpg",
        "luke1.jpg": "https://issues.apache.org/jira/secure/attachment/12450420/luke1.jpg",
        "LUCENE-2562-ivy.patch": "https://issues.apache.org/jira/secure/attachment/12692907/LUCENE-2562-ivy.patch",
        "luke3.jpg": "https://issues.apache.org/jira/secure/attachment/12450422/luke3.jpg",
        "LUCENE-2562-Ivy.patch": "https://issues.apache.org/jira/secure/attachment/12694813/LUCENE-2562-Ivy.patch",
        "Luke-ALE-3.png": "https://issues.apache.org/jira/secure/attachment/12592200/Luke-ALE-3.png",
        "luke-javafx1.png": "https://issues.apache.org/jira/secure/attachment/12923639/luke-javafx1.png",
        "\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2018-11-05 9.19.47.png": "https://issues.apache.org/jira/secure/attachment/12946845/%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88%202018-11-05%209.19.47.png",
        "Luke-ALE-4.png": "https://issues.apache.org/jira/secure/attachment/12592199/Luke-ALE-4.png",
        "Luke-ALE-1.png": "https://issues.apache.org/jira/secure/attachment/12592202/Luke-ALE-1.png",
        "Luke-ALE-2.png": "https://issues.apache.org/jira/secure/attachment/12592201/Luke-ALE-2.png"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2010-07-25T19:47:48+0000",
            "content": "Re: Apache Pivot \n\nSo far its been a nice experience - the main draw back to it from my perspective is that it heavily favors fixed sized layouts. I really don't like this - I like fluid, resizing layouts. So far I haven't been able to make that happen, but its early yet - though it may be more difficult than worth it short term. For now I am just targeting a decent fixed size while the bulk of the grunt work is being done. ",
            "author": "Mark Miller",
            "id": "comment-12892139"
        },
        {
            "date": "2010-09-16T00:51:36+0000",
            "content": "I haven't had any time to really work on this in a while, but I did bite the bullet and join the pivot mailing list and figured out my issues with making a fluid resizing layout - which is sweet and will hopefully motivate me to make some progress here soon. ",
            "author": "Mark Miller",
            "id": "comment-12909980"
        },
        {
            "date": "2010-09-25T19:32:25+0000",
            "content": "So, there is really a lot to do here - but I have gotten a fair amount done.\n\nI'm near the point that I would like to share something - mostly so that I can perhaps get some help doing more.\n\nI think we can start the module well before this version of Luke can do everything the current version of Luke can - but I'd like a spot to share something that's not even really ready for a module spot. I'm looking for a shared scratch pad to use to get to a rough module point.\n\nAnyone mind if I make a spot in svn? lucene/luke, lucene/sandbox/luke or something?\n\nI'll pull any of the thinlet stuff out first. We may need to consider other issues like code grants, but I think we can at least have a contained starting point in svn before we get those details resolved? Thoughts? Otherwise I'll need to share on an svn outside apache, which may cause the need for further code grants issues, etc (developing outside of apache) that I'd rather just avoid. But either way.\n\nAlso, if anyone is into translating, I'm working on localization from the ground up, as well as modularizing and cleaning up a lot of the code. Luke in German anyone? ",
            "author": "Mark Miller",
            "id": "comment-12914864"
        },
        {
            "date": "2010-09-25T19:39:36+0000",
            "content": "Anyone mind if I make a spot in svn? lucene/luke, lucene/sandbox/luke or something?\n\n+1 for lucene/sandbox/luke \n\nWe can always move it later ",
            "author": "Ryan McKinley",
            "id": "comment-12914866"
        },
        {
            "date": "2010-09-25T20:07:42+0000",
            "content": "Anyone mind if I make a spot in svn? lucene/luke, lucene/sandbox/luke or something?\nI just wonder why you don't branch and put it already in the right location. I think we should use branches more often though.\n\nAlso, if anyone is into translating, I'm working on localization from the ground up, as well as modularizing and cleaning up a lot of the code. Luke in German anyone?\n\nHeh, sure I will do the German translation. - robert what about Thai  ",
            "author": "Simon Willnauer",
            "id": "comment-12914872"
        },
        {
            "date": "2010-09-25T20:08:21+0000",
            "content": "+1. I'm happy to do a code grant if people think it's necessary - after all, the non-thinlet parts are already licensed under ASL. ",
            "author": "Andrzej Bialecki",
            "id": "comment-12914873"
        },
        {
            "date": "2010-09-25T20:13:08+0000",
            "content": "I just wonder why you don't branch and put it already in the right location. I think we should use branches more often though\n\nBecause I really have no use/want for a branch of lucene/solr - luke is currently completely external to that, so what's the point really? When it's in module form, perhaps that would make more sense, but then I'm prob inclined to just put it in trunk and iterate.\n\nI'm happy to do a code grant if people think it's necessary - after all, the non-thinlet parts are already licensed under ASL.\n\nI think the rule is that if it was developed outside of Apache, they want the grant, regardless of the license - especially for a codebase so large. I've heard different things when the dev is a committer - but they tend to err on the side of caution. We will see what Grant says. ",
            "author": "Mark Miller",
            "id": "comment-12914874"
        },
        {
            "date": "2010-09-25T21:09:30+0000",
            "content": "I've checked in the current state at: https://svn.apache.org/repos/asf/lucene/sandbox/luke\n\nThe main class is currently: org.apache.lucene.luke.ui.LukeApplication ",
            "author": "Mark Miller",
            "id": "comment-12914879"
        },
        {
            "date": "2010-09-26T23:11:07+0000",
            "content": "If you just want to check out the current state of things, you can launch a jnlp version at http://www.lucene-solr.com/luke.jnlp ",
            "author": "Mark Miller",
            "id": "comment-12915070"
        },
        {
            "date": "2010-09-29T23:45:45+0000",
            "content": "I've taken Mark Harwood's cool Analyzers Tool plugin and ported it over as a first class citizen with it's own tab.\n\nGreat tool for checking out analysis - I'd hadn't really paid much attention to it till Robert pointed it out.\n\nCheck it out - I've got it in the latest jnlp at http://www.lucene-solr.com/luke.jnlp ",
            "author": "Mark Miller",
            "id": "comment-12916308"
        },
        {
            "date": "2010-09-29T23:47:56+0000",
            "content": "Would like to get going on pushing this in as a module - anyone want to comment on the legal aspect? Do we need a code grant or not? The original authors (AB and a couple plugin authors?) are committers, but the code was original developed outside Apache...\n\nAnyone want to weigh in so we can move forward on module integration? Robert says he might lend a hand there. ",
            "author": "Mark Miller",
            "id": "comment-12916311"
        },
        {
            "date": "2010-09-29T23:49:33+0000",
            "content": "(P.S. Not to say this is that close to being done - would just like to get the legal stuff out of the way before spreading around too much in svn) ",
            "author": "Mark Miller",
            "id": "comment-12916312"
        },
        {
            "date": "2010-09-30T06:25:09+0000",
            "content": "\nWould like to get going on pushing this in as a module - anyone want to comment on the legal aspect? Do we need a code grant or not? The original authors (AB and a couple plugin authors?) are committers, but the code was original developed outside Apache...\n\nI am not a legal expert but shooting an email to legal-discuss would bring clarification and we are on the safe side. Even if we would need one since all are around that should not be a big deal.\n\nsimon ",
            "author": "Simon Willnauer",
            "id": "comment-12916389"
        },
        {
            "date": "2010-09-30T12:14:09+0000",
            "content": "How many contributors have there been to Luke outside of the ASF?  I know Andrzej and Mark.  I know I have put up a patch, I think.  Was explicit permission given to use?  I guess it comes down to ownership.  I suppose you could split out where those patches were applied to, as well.  Given that we are dropping the Thinlet stuff, anything that was changed there doesn't matter. ",
            "author": "Grant Ingersoll",
            "id": "comment-12916450"
        },
        {
            "date": "2010-09-30T12:24:29+0000",
            "content": "For the record, I'm obviously happy to grant any of my Luke contributions to Apache.\n\nBTW - If anyone is  looking at a revision of the GWT front end then this recent Google acquisition looks like it might be interesting: http://code.google.com/webtoolkit/tools/gwtdesigner/index.html ",
            "author": "Mark Harwood",
            "id": "comment-12916452"
        },
        {
            "date": "2010-09-30T12:50:14+0000",
            "content": "shooting an email to legal-discuss\n\nI'll go to legal discuss if I have to - but we have dealt with this type of thing before - so if the right people respond, I'd rather just go that route. ",
            "author": "Mark Miller",
            "id": "comment-12916457"
        },
        {
            "date": "2010-10-19T02:12:25+0000",
            "content": "I'll go to legal discuss if I have to - but we have dealt with this type of thing before - so if the right people respond, I'd rather just go that route.\n\nWhat's happening with this one? It would be great to get it tied into the build in trunk. ",
            "author": "Robert Muir",
            "id": "comment-12922406"
        },
        {
            "date": "2010-10-19T02:20:53+0000",
            "content": "Still going - just kind of a weekend, nights project, of which I've been short of recently. Last weekend, 3 day hiking camping trip, previous 2 weekends before that (and all days in between) in Boston. Looking a little wavy going forward too, but I'm still heavily invested.\n\nIf Grant is not worried about getting a code grant, than neither am I. IMO, since the contributors are committers with CLA's, there is not much to worry about. Since unless someone says differently, I'm inclined to just move this (it's already in svn, so moving it under trunk is not much different).\n\nIf someone has a concern, we can hit legal-discuss though. ",
            "author": "Mark Miller",
            "id": "comment-12922407"
        },
        {
            "date": "2010-10-19T02:58:38+0000",
            "content": "\nStill going - just kind of a weekend, nights project, of which I've been short of recently. Last weekend, 3 day hiking camping trip, previous 2 weekends before that (and all days in between) in Boston. Looking a little wavy going forward too, but I'm still heavily invested.\n\nRight, i meant really any legal issue/moving to trunk. Though maybe it doesnt have the complete feature set yet, \nin trunk it would stay current and what you have so far is useful.\n\nSince unless someone says differently, I'm inclined to just move this (it's already in svn, so moving it under trunk is not much different).\n\n+1 ",
            "author": "Robert Muir",
            "id": "comment-12922414"
        },
        {
            "date": "2011-03-10T06:45:44+0000",
            "content": "mark, I marked this as gsoc2011 so if somebody is interested in working on this during GSoC can apply for it. Hope that is ok for you though. ",
            "author": "Simon Willnauer",
            "id": "comment-13004980"
        },
        {
            "date": "2011-03-10T14:06:34+0000",
            "content": "Yeah, that would be great!\n\nEither way, I have def not abandoned this - just don't know when it will get more love... ",
            "author": "Mark Miller",
            "id": "comment-13005069"
        },
        {
            "date": "2011-06-03T20:25:53+0000",
            "content": "Any update on where this is?\n\nI saw something working reasonably well before:\nhttp://www.lucene-solr.com/luke.jnlp\n\nWhat about putting the almost working code in /trunk/modules/luke?  And adding proper warnings for it being in progress\n\nWe can iterate from there, but it would be awesome to have a version of luke that works with trunk!\n\n\n\n ",
            "author": "Ryan McKinley",
            "id": "comment-13044019"
        },
        {
            "date": "2011-06-03T20:33:54+0000",
            "content": "http://www.lucene-solr.com/luke.jnlp\n\nwhoops - was not paying attention, and looks like I let that domain expire. 100 bucks to redeem it - I think I'll let her go for now \n\nThis version is in svn somewhere under sandbox or something. Robert has threatened to move it to a module while we where at revolution  ",
            "author": "Mark Miller",
            "id": "comment-13044023"
        },
        {
            "date": "2011-06-03T20:54:43+0000",
            "content": "This version is in svn somewhere under sandbox or something. Robert has threatened to move it to a module while we where at revolution \n+1 ",
            "author": "Simon Willnauer",
            "id": "comment-13044040"
        },
        {
            "date": "2013-03-14T20:48:04+0000",
            "content": "Where does this issue stand? I noticed a thread on the user list today, where people were practically begging for a Luke version that works with recent releases. Is there consensus to have Luke as a Lucene module? If so, is it just a legal thing, or a \"forgotten issue\"? ",
            "author": "Shai Erera",
            "id": "comment-13602705"
        },
        {
            "date": "2013-03-14T20:50:26+0000",
            "content": "If people don't have time to work on this, perhaps still someone should put up a patch that doesn't compile of all Luke's code? I will be happy to take a look, and I'm sure others will too. ",
            "author": "Shai Erera",
            "id": "comment-13602707"
        },
        {
            "date": "2013-03-14T20:55:54+0000",
            "content": "I did all the initial work on it. I haven't had even an ounce of time I could put towards it for a long time now. I had a fair amount of functionality working nicely. It was a fun little project, there are no legal things, and hopefully some day it's completed by someone \n ",
            "author": "Mark Miller",
            "id": "comment-13602718"
        },
        {
            "date": "2013-03-14T20:57:53+0000",
            "content": "I think Mark's latest state is committed to a branch at https://svn.apache.org/repos/asf/lucene/sandbox/luke/ ?\n\nWould love to see this revived as an actual module of lucene. ",
            "author": "Robert Muir",
            "id": "comment-13602725"
        },
        {
            "date": "2013-03-14T20:59:17+0000",
            "content": "Ah I missed that comment! indeed there's a version under sandbox/luke. ",
            "author": "Shai Erera",
            "id": "comment-13602728"
        },
        {
            "date": "2013-03-15T22:21:19+0000",
            "content": "The work was really not that difficult. More just marching through each piece and updating to some more recent apis. I've got so many other things on my plate, even though I enjoyed this work, it's just super low priority. But I could probably help point someone in the right direction if they wanted to get started - perhaps some day I'd even help out with some more work on it when I don't feel so buried. ",
            "author": "Mark Miller",
            "id": "comment-13603926"
        },
        {
            "date": "2013-07-14T15:55:35+0000",
            "content": "Commit 1502987 from Mark Miller\n[ https://svn.apache.org/r1502987 ]\n\nLUCENE-2562: hack and slash update to Lucene/Solr 4.3.1 ",
            "author": "ASF subversion and git services",
            "id": "comment-13708058"
        },
        {
            "date": "2013-07-14T15:58:07+0000",
            "content": "I've done a quick hack and slash update to Lucene/Solr 4.3 and uploaded some screen shots of the latest state of this.\n\nTo run it, simply check out https://svn.apache.org/repos/asf/lucene/sandbox/luke and run the main class org.apache.lucene.luke.ui.LukeApplication\n\nCurrently, it's a full eclipse project so there is no build step or ant script or anything. ",
            "author": "Mark Miller",
            "id": "comment-13708059"
        },
        {
            "date": "2013-07-14T16:05:04+0000",
            "content": "It's been a long time, but the last time I talked to Robert Muir about this, I think we came to the conclusion that the best way forward would be to tie up these basic features and perhaps stop worrying about porting over anything else from GetOpt Luke - like the plugins for instance. This already has the majority of Luke functionality implemented - it might make sense to simply polish it off and button it up, get it in as a module and then lets new features and development happen organically. ",
            "author": "Mark Miller",
            "id": "comment-13708060"
        },
        {
            "date": "2013-07-14T16:25:29+0000",
            "content": "Commit 1502989 from Mark Miller\n[ https://svn.apache.org/r1502989 ]\n\nLUCENE-2562: Update build file ",
            "author": "ASF subversion and git services",
            "id": "comment-13708064"
        },
        {
            "date": "2013-07-14T17:16:28+0000",
            "content": "Commit 1503004 from Mark Miller\n[ https://svn.apache.org/r1503004 ]\n\nLUCENE-2562: Update to Apache Pivot 2.0.2 ",
            "author": "ASF subversion and git services",
            "id": "comment-13708080"
        },
        {
            "date": "2013-08-21T01:51:08+0000",
            "content": "Commit 1516057 from Mark Miller\n[ https://svn.apache.org/r1516057 ]\n\nLUCENE-2562: update to Lucene/Solr 4.4 and Pivot 2.0.2 ",
            "author": "ASF subversion and git services",
            "id": "comment-13745708"
        },
        {
            "date": "2013-08-21T01:53:23+0000",
            "content": "At Ajay Bhat's request, I have updated to Lucene/Solr 4.4 and Pivot 2.0.2.\n\nAjay Bhat, feel free to comment on this JIRA issue regarding your current progress.\n\nAlso, it would be great to commit what you have so far when you are ready. ",
            "author": "Mark Miller",
            "id": "comment-13745710"
        },
        {
            "date": "2013-08-26T17:29:37+0000",
            "content": "Re:Mark Miller and everyone else,\n\nI've done a very small patch, but I'm still facing some problems.\n\nI've checked the Analyzers in the tool manually, and these Analyzers give the java.lang.InstantiationException when used.\n\norg.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer\norg.apache.lucene.analysis.miscellaneous.PatternAnalyzer\norg.apache.lucene.analysis.query.QueryAutoStopWordAnalyzer\norg.apache.lucene.analysis.snowball.SnowballAnalyzer\norg.apache.lucene.collation.CollationKeyAnalyzer\norg.apache.lucene.solr.analysis.TokenizerChain\n\nI'm a bit confused because as of Lucene 4.0alpha, the PatternAnalyzer is deprecated from misc package, but it's still present here in miscellaneous package in Lucene 4.4 release. ",
            "author": "Ajay Bhat",
            "id": "comment-13750277"
        },
        {
            "date": "2013-08-26T19:07:17+0000",
            "content": "bq: I'm a bit confused because as of Lucene 4.0alpha, the PatternAnalyzer is deprecated from misc package, but it's still present here in miscellaneous package in Lucene 4.4 release.\n\nDeprecated code is maintained through one major version. So it'll stay marked as deprecate through all of 4.x and be eligible to be removed in 5.0. That way people have time to adjust...\n ",
            "author": "Erick Erickson",
            "id": "comment-13750420"
        },
        {
            "date": "2013-08-27T14:20:15+0000",
            "content": "Ajay Bhat, can you explain the patch? It seems to only add a tokenstream reset call? Is that the only change so far?\n\nI'll take a look at the analyzer init issue as soon as I get a chance. ",
            "author": "Mark Miller",
            "id": "comment-13751292"
        },
        {
            "date": "2013-09-06T07:35:30+0000",
            "content": "The TokenStream reset call was needed to display the tokens generated by the Analyzer. I think that's the only change that was required. The main problem for me is the analyzers above are not giving the result, which I've been looking into. \nI had figured that since PatternAnalyzer was deprecated it would not give the result and so it might be a good idea to remove it from the list of analyzers. But there are also some analyzers that aren't deprecated, like the Snowball Analyzer and QueryAutoStopWordAnalyzer.\n\nAlso, as per the schedule of my proposal I've done some work on the themes of the Application. I'll contribute another patch for that soon. ",
            "author": "Ajay Bhat",
            "id": "comment-13760019"
        },
        {
            "date": "2013-09-13T16:32:28+0000",
            "content": "LUCENE-2562.patch\nDate : 13th Sept, 2013\nAdded: \nSupport for 5 themes, through a recursive style change function\nExit option in File menu\nStatus bar\nAnalyzer tokenstream reset call\nDocumentation for above features\n\nPending Work to be done:\nStatus Bar implementation not complete\nThemes cannot be applied to one tab ",
            "author": "Ajay Bhat",
            "id": "comment-13766604"
        },
        {
            "date": "2013-09-13T16:44:06+0000",
            "content": "Nice, thanks Ajay!\n\nUnfortunately, I am having trouble with the patch - it won't cleanly apply to AnalyzersTab.java. I left that file as is and checked out the color scheming though - looks good! ",
            "author": "Mark Miller",
            "id": "comment-13766616"
        },
        {
            "date": "2013-09-13T16:47:30+0000",
            "content": "One comment - I think I like the gray theme for the default best.\n\nOnce I can apply a clean patch, I'll commit your current progress. ",
            "author": "Mark Miller",
            "id": "comment-13766622"
        },
        {
            "date": "2013-09-13T17:09:26+0000",
            "content": "Thanks for the comments, Mark Miller. The only change for AnalyzersTab.java is the tokenstream reset call.\n\nI used the default theme as per the one used in original Thinlet Luke. If you'd like, I'll do a slight modification so Gray is the default theme. ",
            "author": "Ajay Bhat",
            "id": "comment-13766649"
        },
        {
            "date": "2013-09-13T17:18:18+0000",
            "content": "Commit 1523019 from Mark Miller\n[ https://svn.apache.org/r1523019 ]\n\nLUCENE-2562: Ajay Bhat\n\nSupport for 5 themes, through a recursive style change function\nExit option in File menu\nStatus bar\nAnalyzer tokenstream reset call\nDocumentation for above features ",
            "author": "ASF subversion and git services",
            "id": "comment-13766663"
        },
        {
            "date": "2013-09-13T17:19:50+0000",
            "content": "FYI, I see a lot of the following type thing in the console:\n\n\"borderColor\" is not a valid style for org.apache.pivot.wtk.TextArea\n\"activeBackgroundColor\" is not a valid style for org.apache.pivot.wtk.TextArea\n\nDuplicate listener org.apache.lucene.luke.ui.LukeWindow$2@4a9a1ac added to org.apache.pivot.wtk.Component$ComponentMouseListenerList [org.apache.pivot.wtk.skin.terra.TerraPushButtonSkin@451dfada, org.apache.lucene.luke.ui.LukeWindow$2@4a9a1ac]\n\nPerhaps that is currently expected, but FYI. ",
            "author": "Mark Miller",
            "id": "comment-13766665"
        },
        {
            "date": "2013-09-13T17:24:23+0000",
            "content": "Re: [\"borderColor\" is not a valid style for org.apache.pivot.wtk.TextArea\n\"activeBackgroundColor\" is not a valid style for org.apache.pivot.wtk.TextArea]\n\nDuly noted. I'll make sure to look into it and take care of it in the next patch. ",
            "author": "Ajay Bhat",
            "id": "comment-13766678"
        },
        {
            "date": "2015-01-17T10:09:07+0000",
            "content": "Hi, is this issue still active?\n\nI've attached a patch (LUCENE-2562-ivy.patch) to follow latest Lucene updates. This patche does\n\n\n\tadd ant task \"ivy-resolve\" and \"ivy-clean\" to resolve dependencies using Ivy\n\"ivy-resolve\" task creates lib-ivy directory and download necessary libraries from maven repository.\n\tmodify \"compile\", \"dist\", and other related tasks use libraries downloaded by \"ivy-resolve\"\n\tmake small source code changes to go with Lucene 4.10.3\n\n\n\nlib/*.jar, lib/solr/*.jar, lib/hadopp/*.jar are no longer used for compile and distribute, so they can be removed from the repository later, except for lib/js.jar (I could not identify this.)\nNote: Eclipse's .classpath file is not changed.\n\nCompiled o.a.l.luke.ui.LukeApplication can browse indices generated by Lucene 4.10.3.\n\nIf you're interested, I hope to take more time for the project. ",
            "author": "Tomoko Uchida",
            "id": "comment-14281269"
        },
        {
            "date": "2015-01-25T19:38:11+0000",
            "content": "Hey Tomoko Uchida - I still think this is an important issue, I just don't have the time to drive it currently.\n\nIf you have the desire to do some work on it, I'm sure I can ramp up enough to apply some patches for you.\n\nI'll try and take a look at the attached patch before long. ",
            "author": "Mark Miller",
            "id": "comment-14291239"
        },
        {
            "date": "2015-01-26T06:34:45+0000",
            "content": "Hi Mark,\nThank you for the response!\n\nMy patch needs ivy jar in lib/tools directory. (I've forgot to note that.)\nThat does not introduce additional Java codes, but brings dependency resolution. \n\nI've slowly started to catch up and play with (and modify) the codes... so I would like to create another patches to make progress. ",
            "author": "Tomoko Uchida",
            "id": "comment-14291506"
        },
        {
            "date": "2015-01-26T14:21:26+0000",
            "content": "Just a thought here - would it make sense to expose the luke functionality via the admin UI - use the Admin UI as the front end for luke and have it available to everyone right away?\n\nPerhaps the reworked UI in AngularJS that I am working on might make this easier (see SOLR-5507). ",
            "author": "Upayavira",
            "id": "comment-14291870"
        },
        {
            "date": "2015-01-26T14:27:00+0000",
            "content": "Just my 2 cents - i would like to see this as a Lucene module, not a SOLR one. Not everyone uses SOLR to use Lucene, so porting it to a SOLR only module would be no benefit in using lucene. Would be nice to still have a clean small solution to access lucene like luke does it now, not to be forced to use solr. ",
            "author": "Torsten Krah",
            "id": "comment-14291874"
        },
        {
            "date": "2015-01-26T16:08:32+0000",
            "content": "Agreed. This about making Luke a Lucene module, not about rewriting Luke as something else. ",
            "author": "Mark Miller",
            "id": "comment-14292000"
        },
        {
            "date": "2015-01-26T16:13:30+0000",
            "content": "My patch needs ivy jar in lib/tools directory. (I've forgot to note that.)\n\nTomoko Uchida: We already use IVY in Lucene/Solr. Please use the framework that is already there through common-build.xml / module-build.xml. It is enough to place ivy.xml in the module directory and make the module include the module-build.xml file. ",
            "author": "Uwe Schindler",
            "id": "comment-14292007"
        },
        {
            "date": "2015-01-26T18:22:43+0000",
            "content": "Absolutely, fair enough. Exposing it through Solr UI makes sense, restricting it does not. ",
            "author": "Upayavira",
            "id": "comment-14292177"
        },
        {
            "date": "2015-01-27T00:36:19+0000",
            "content": "Thanks everyone for all comments,\n\nI recognize that the goal of this project is \"making Luke a Lucene module\".\nI think it will be nice if there is a REST API server for Admin UIs, and have some kind of pluggable architecture for external modules (like custom analyzers provided by Solr, Elsticsearch, etc.)\nBut at first, I'd like to make it cover standalone Luke application features under Apache license.\n\nDear Uwe and all,\n\n> We already use IVY in Lucene/Solr. Please use the framework that is already there through common-build.xml / module-build.xml. It is enough to place ivy.xml in the module directory and make the module include the module-build.xml file.\n\nI wanted to use the Lucene's framework, but currently, this module is placed under\nhttp://svn.apache.org/repos/asf/lucene/sandbox/ , \nnot \nhttp://svn.apache.org/repos/asf/lucene/dev/trunk\n\nivy.xml and ant tasks in my patch should be only temporary (for convenience in development,) until this module will be merged to trunk.\nSo what can I do to smoothly integrate this module into Lucene trunk in the future. If there are better ways, please let me know...\n\nThanks ",
            "author": "Tomoko Uchida",
            "id": "comment-14292730"
        },
        {
            "date": "2015-01-27T18:31:15+0000",
            "content": "Patch updated. I've modified Overview tab only.\n\nProgress and Status :\n\n\tMissing values in upper panel (index info) were all filled.\n\tFields table are now sortable by field name and term counts.\n\n\n\nPending tasks to be done:\n\n\tDecoders (last pending task for Overview tab)\n\n\n\nI'm trying for decoders. It might need some sort of pluggable design (I believe Solr's decoders should be plugged, not built-in feature.) Suggestions / ideas  welcome.\n ",
            "author": "Tomoko Uchida",
            "id": "comment-14293926"
        },
        {
            "date": "2015-01-27T18:46:50+0000",
            "content": "Commit 1655103 from Mark Miller\n[ https://svn.apache.org/r1655103 ]\n\nLUCENE-2562: Add some Ivy support, support Lucene, Solr 4.10.3, Missing values in upper panel (index info) were all filled, Fields table are now sortable by field name and term counts. Tomoko Uchida. ",
            "author": "ASF subversion and git services",
            "id": "comment-14293946"
        },
        {
            "date": "2015-02-01T11:41:20+0000",
            "content": "Patch updated. I've modified Overview and Documents tab.\n\nProgress and Status:\n\n\t(Overview tab) Decoders support in fields table. They are now selectable.\n\t(Overview tab) 'more options' support in top ranking terms table except for 'Show all term docs' (That will be supported after Search tab is completed.)\n\t(Documents tab) Layouts arrange. (I hope that's OK.)\n\t(Documents tab) 'Browse by term' (upper center pane) fixed.\n\t(Documents tab) Documents viewer (lower pane) fixed and support DocValues info (original Luke does not support this because docvalues are new, of course).\n\tDecoders are now pluggable. DecoderLoader interface added.\n\tSome fixes, refactoring\n\n\n\nPending tasks to be done:\n\n\t(Documents tab) 'Browse documents with this term' (upper right pane) is not yet fixed. It works but be buggy.\n\n\n\nI've added DecoderLoader interface and implemented SolrDecoderLoader class to make Luke work with or without Solr jars. I think we will be able to completely separate SolrDecoderLoader class from Luke's package later (or integrate this in Luke again if that is proper way.)\n\nWith this patch, if you want to use Luke with Solr's Decoder (wrapper for schema.FieldType,) you need to add a JVM option \"luke.ext.decoder.loader\" as below when start Luke.\n\n\n$ java -cp \"build\" -Dluke.ext.decoder.loader=org.apache.lucene.luke.ext.SolrDecoderLoader org.apache.lucene.luke.ui.LukeApplication \n\n\n\nMy approach is not good, please let me know.\n\nFor SolrDecoder, need to modify ivy.xml as follows. (I could not include this modification in my patch, because 'svn diff' complains 'Cannot display: file marked as a binary type.') \n\n\n<!-- apache solr -->\n    <dependency org=\"org.apache.solr\" name=\"solr-core\" rev=\"4.10.3\"\n                transitive=\"false\"   // remove this line\n                conf=\"solr->*,!sources,!javadoc\"/>\n\n\n\n\nI add some resources to 'LukeApplication_en.json', but I'm not a fluent English speaker, so please check and correct if there's any mistakes... ",
            "author": "Tomoko Uchida",
            "id": "comment-14300183"
        },
        {
            "date": "2015-02-01T16:34:25+0000",
            "content": "Awesome. I'll take a look soon. ",
            "author": "Mark Miller",
            "id": "comment-14300254"
        },
        {
            "date": "2015-02-13T17:29:39+0000",
            "content": "Patch updated. Ive modified Documents tab. (A screen shot, \"lukeALE-documents.png\" is attached.)\n\nStatus and progress:\n\n\tsupport 'Browse documents with this term' and 'Show positions and Offsets'\n\tsupport right click options for document's fields (Show term vector, Full text, Set norm, Save field data)\n\n\n\nPending tasks to be done (I'm going to implement them):\n\n\t'Add','Edit','Delete' operations for documents\n\t'Show all docs','More like this' (will be supported when Search tab completed)\n\n\n\nI understand this is not a rush job, many tasks still remain... I'd like to keep going and log updates here. \nBecause components are well separated, I think anyone can join.  ",
            "author": "Tomoko Uchida",
            "id": "comment-14320413"
        },
        {
            "date": "2015-02-13T19:45:48+0000",
            "content": "Great - been fairly busy lately, but I'll keep committing your work. Ping me with a reminder if I slack off too much. ",
            "author": "Mark Miller",
            "id": "comment-14320648"
        },
        {
            "date": "2015-02-13T19:47:04+0000",
            "content": "I know it's homage to the original Luke default color, but we should really change the default background color  ",
            "author": "Mark Miller",
            "id": "comment-14320650"
        },
        {
            "date": "2015-03-03T01:50:10+0000",
            "content": "Progress and status:\n\nHonestly there are no progress in development, I'd like to suggest about merge of this Jira issue and the Luke project now on Github.\nThe (one of) Luke project's goal, \"To port the thinlet UI to an ASL compliant license framework so that it can be contributed back to Apache Lucene.\", is perfectly match the goal of this issue, I hope it would be desirable way.\nhttps://github.com/DmitryKey/luke/tree/master\n\nAfter a short discussion at solr mailing list, Dmitry Kan, the maintainer of Luke, has created \"pivot-luke\" branch in luke repository. \nAnd I have merged all the latest pivot's version  codes plugged in SVN to the branch.\n\nThe discussion is here: http://mail-archives.apache.org/mod_mbox/lucene-solr-user/201502.mbox/%3CCAHpHuj%3DZArPSbSLp2_d1X7OD_2V0NeBsDSRVizgTDTnBiAZPMQ%40mail.gmail.com%3E\nThe branch for pivot's version is here: https://github.com/DmitryKey/luke/tree/pivot-luke\n\nIt now can be built by maven, you can check out and test it.\nWe'll contribute back to Lucene it, I hope this is in not so distant future. Of course, developers are welcome. \n\n\n\n> I know it's homage to the original Luke default color, but we should really change the default background color\n\nI promise that, gray theme is also my favorite one! \n\nI'll keep watching this ticket, any comments and suggestions are welcome.\nThanks. ",
            "author": "Tomoko Uchida",
            "id": "comment-14344292"
        },
        {
            "date": "2018-05-16T09:50:58+0000",
            "content": "It's been a while... but I have ported Luke UI from Thinlet to JavaFX (I feel JavaFX is now better choice than other 3rd party Frameworks, what do you think?)\n\nJavaFX version can be downloaded here:\u00a0\n\nhttps://github.com/DmitryKey/luke/releases/tag/luke-7.3.1\n\n\tLicensed under ALv2\n\tPorted major luke functionalities (browsing index, searching docs, optimizing/checking index, etc)\n\tSupports recent Lucene features (DocValues, PointValues, CustomAnalyzers, etc.)\n\tAlmost full\u00a0scratched to utilize modern Java syntax/features and unit tested with\u00a0Lucene Test Framework\n\n\n\nThe GitHub repository earns close to 900 stargagers! It's good time to contribute back to Lucene project but I am not sure what is the proper way. Let me know where should I start.\n\nAnyway, please check it out and I\u00a0want to hear your feedback! ",
            "author": "Tomoko Uchida",
            "id": "comment-16477185"
        },
        {
            "date": "2018-05-16T09:54:56+0000",
            "content": "I'll attach some screen shots to share what\u00a0new UI looks like.\n\n\n\n\n\n ",
            "author": "Tomoko Uchida",
            "id": "comment-16477189"
        },
        {
            "date": "2018-05-16T16:03:49+0000",
            "content": "Awesome, that looks great! ",
            "author": "Mark Miller",
            "id": "comment-16477628"
        },
        {
            "date": "2018-05-18T10:26:05+0000",
            "content": "Thank you Mark Miller for response.\n\nFirst I need some research for Lucene build system and try to fit the Github repository (built by maven) to it... any advise is welcome. ",
            "author": "Tomoko Uchida",
            "id": "comment-16480467"
        },
        {
            "date": "2018-07-15T05:15:49+0000",
            "content": "Created a pull request on GitHub. Could you check it or is it better if I add a patch to the issue?\n\nhttps://github.com/apache/lucene-solr/pull/420 ",
            "author": "Tomoko Uchida",
            "id": "comment-16544401"
        },
        {
            "date": "2018-07-17T21:33:08+0000",
            "content": "Tomoko Uchida: thanks for the pull request.  I pulled it into a branch named jira/lucene-2562, along with a few fixes and additions, mostly to get ant precommit to succeed, which it does not yet do.  I haven't tried to run the code yet .\n\nA few things I noticed:\n\n\n\tvalidate-source-patterns complains about non-static-final loggers:\n\nvalidate-source-patterns:\n[source-patterns] invalid logging pattern [not private static final, uses static class name]: lucene/luke/src/java/org/apache/lucene/luke/models/commits/CommitsImpl.java\n[source-patterns] invalid logging pattern [not private static final, uses static class name]: lucene/luke/src/java/org/apache/lucene/luke/models/documents/DocumentsImpl.java\n[source-patterns] invalid logging pattern [not private static final, uses static class name]: lucene/luke/src/java/org/apache/lucene/luke/models/search/SearchImpl.java\n\n\nI fixed a few others like these, but ^^ have ctors that take a logger, apparently just to be able to turn logging off under testing.  Is this really necessary?  Right now I have a nocommit that allows ant precommit to ignore these, but it needs to be resolved.\n\tIt should be possible to run Luke from a source checkout, but it's not now.\n\tI think Luke should be packaged with all other artifacts in Lucene's binary packages, but currently ant package-tgz and -zip don't include everything (e.g. scripts under bin/); instead, the build creates a .zip file that contains a copy of all the dependencies and the bin/ scripts.  I think we can get rid of this Luke-only distribution, in favor of the Lucene distribution?  I don't like the idea of including the Luke-with-all-dependencies .zip in the Lucene distribution, since it will include two copies of many modules' jars.\n\tforbidden-apis is very unhappy about classes in javafx.* packages, e.g.:\n\n[forbidden-apis] Scanning classes for violations...\n[forbidden-apis] Forbidden class/interface use: javafx.beans.property.BooleanProperty [non-portable or internal runtime class]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.dto.search.SelectedField (SelectedField.java, field declaration of 'selected')\n[forbidden-apis] Forbidden class/interface use: javafx.beans.property.SimpleBooleanProperty [non-portable or internal runtime class]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.dto.search.SelectedField (SelectedField.java:29)\n[forbidden-apis] Forbidden class/interface use: javafx.beans.property.SimpleBooleanProperty [non-portable or internal runtime class]\n[...]\n\n\nUwe Schindler: do you understand what ^^ is about?\n\n ",
            "author": "Steve Rowe",
            "id": "comment-16547130"
        },
        {
            "date": "2018-07-17T22:57:48+0000",
            "content": "Hi,\nthe forbiddenapis problems are caused by the way how javafx was exposed in previous versions of the JDK. With JDK8 it was shipped inside rt.jar, but on other versions it is not included at all and in Java 10 it's now part of module system.\nThe portable runtime stuff only allows classes from the well known java packages, which does not yet include javafx.**: https://github.com/policeman-tools/forbidden-apis/blob/master/src/main/java/de/thetaphi/forbiddenapis/AsmUtils.java#L39-L40\n\nThe problem JavaFX is still not an official part of the Java SE platform, it's still optional! In addition this needs to be some special exceptional check, as javafx is only valid as runtime class in Java 8, in Java 7 it's not indluded.\n\nIf You run forbiddenapis with Java 10, it should pass. The reason is: Although it's shipped with the JDK and the class name is not in the above pattern, but because it's an external module - it works as expected (I have not verified this, maybe you can do it). The reason is the module name, it's external. With Java 8 we have no module names, so the check can only use the above whitelist of package names.\n\nIn short: That's a limitation of forbiddenapis and my ignorance for JavaFX. I'd suggest to redefine the forbiddenapis target in the luke module to not use the \"jdk-non-portable\" signature and instead the more static \"jdk-internal\" signature (maybe thorugh an ANT property). Nevertheless, as described above, JavaFX is a \"non-portable\" part of the JDK as it's not part of the spec. Not sure what the best way to solve this. I'd go for the workaround now and use \"jdk-internal\" instead of \"jdk-non-portable\" for the luke module (not for others, please). ",
            "author": "Uwe Schindler",
            "id": "comment-16547191"
        },
        {
            "date": "2018-07-17T23:01:16+0000",
            "content": "On top of that: Starting with Java 11, JavaFX is no longer shipped with the JDK, so forbiddenapis is correct: it's not portable.\n\nSee https://www.infoworld.com/article/3261066/java/javafx-will-be-removed-from-the-java-jdk.html ",
            "author": "Uwe Schindler",
            "id": "comment-16547192"
        },
        {
            "date": "2018-07-17T23:30:05+0000",
            "content": "Thanks Uwe Schindler, I put in an Ant property to control it.\n\nThat reveals a lot forbidden-api violations left to tackle now:\n\n\n-check-forbidden-all:\n[forbidden-apis] Reading bundled API signatures: jdk-unsafe-1.8\n[forbidden-apis] Reading bundled API signatures: jdk-deprecated-1.8\n[forbidden-apis] Reading bundled API signatures: jdk-internal-1.8\n[forbidden-apis] Reading bundled API signatures: jdk-reflection\n[forbidden-apis] Reading API signatures: /Users/sarowe/git/lucene-solr/lucene/tools/forbiddenApis/base.txt\n[forbidden-apis] Reading API signatures: /Users/sarowe/git/lucene-solr/lucene/tools/forbiddenApis/lucene.txt\n[forbidden-apis] Loading classes to check...\n[forbidden-apis] Scanning classes for violations...\n[forbidden-apis] Forbidden method invocation: java.util.Locale#toString() [use Locale#toLanguageTag() for a standardized BCP47 locale name]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.fragments.search.QueryParserController (QueryParserController.java:159)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.overview.OverviewImpl (OverviewImpl.java:159)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.overview.OverviewImpl (OverviewImpl.java:164)\n[forbidden-apis] Forbidden method invocation: java.lang.String#getBytes() [Uses default charset]\n[forbidden-apis]   in org.apache.lucene.luke.models.analysis.TestAnalysisImpl (TestAnalysisImpl.java:93)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.dto.overview.TermCount (TermCount.java:29)\n[forbidden-apis] Forbidden method invocation: java.io.PrintStream#<init>(java.io.OutputStream,boolean) [Uses default charset]\n[forbidden-apis]   in org.apache.lucene.luke.app.util.TextAreaPrintStream (TextAreaPrintStream.java:38)\n[forbidden-apis] Forbidden method invocation: java.lang.String#getBytes() [Uses default charset]\n[forbidden-apis]   in org.apache.lucene.luke.app.util.TextAreaPrintStream (TextAreaPrintStream.java:49)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.QueryParserConfig (QueryParserConfig.java:235)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.QueryParserConfig (QueryParserConfig.java:236)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.QueryParserConfig (QueryParserConfig.java:237)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.QueryParserConfig (QueryParserConfig.java:238)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.QueryParserConfig (QueryParserConfig.java:239)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.QueryParserConfig (QueryParserConfig.java:240)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.QueryParserConfig (QueryParserConfig.java:241)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.QueryParserConfig (QueryParserConfig.java:242)\n[forbidden-apis] Forbidden method invocation: java.util.Locale#toString() [use Locale#toLanguageTag() for a standardized BCP47 locale name]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.QueryParserConfig (QueryParserConfig.java:243)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.QueryParserConfig (QueryParserConfig.java:243)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.QueryParserConfig (QueryParserConfig.java:244)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.QueryParserConfig (QueryParserConfig.java:245)\n[forbidden-apis] Forbidden method invocation: java.lang.String#toLowerCase() [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.LukeController$ColorTheme (LukeController.java:302)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.LukeController$ColorTheme (LukeController.java:302)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.OverviewController (OverviewController.java:210)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.OverviewController (OverviewController.java:212)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.DocumentsController (DocumentsController.java:225)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.DocumentsController (DocumentsController.java:302)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.DocumentsController (DocumentsController.java:325)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.DocumentsController (DocumentsController.java:349)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.commits.CommitsImpl (CommitsImpl.java:110)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.commits.CommitsImpl (CommitsImpl.java:123)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.commits.CommitsImpl (CommitsImpl.java:134)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.commits.CommitsImpl (CommitsImpl.java:151)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.commits.CommitsImpl (CommitsImpl.java:169)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.commits.CommitsImpl (CommitsImpl.java:187)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.commits.CommitsImpl (CommitsImpl.java:204)\n[forbidden-apis] Forbidden method invocation: java.util.concurrent.Executors#newSingleThreadExecutor() [Spawns threads with vague names; use a custom thread factory (Lucene's NamedThreadFactory, Solr's DefaultSolrThreadFactory) and name threads so that you can tell (by its name) which executor it is associated with]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.dialog.menubar.CheckIndexController (CheckIndexController.java:120)\n[forbidden-apis] Forbidden method invocation: java.util.concurrent.Executors#newSingleThreadExecutor() [Spawns threads with vague names; use a custom thread factory (Lucene's NamedThreadFactory, Solr's DefaultSolrThreadFactory) and name threads so that you can tell (by its name) which executor it is associated with]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.dialog.menubar.CheckIndexController (CheckIndexController.java:184)\n[forbidden-apis] Forbidden method invocation: java.text.MessageFormat#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.app.util.MessageUtils (MessageUtils.java:41)\n[forbidden-apis] Forbidden method invocation: java.lang.String#<init>(byte[]) [Uses default charset]\n[forbidden-apis]   in org.apache.lucene.luke.app.util.TextAreaAppender (TextAreaAppender.java:57)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.dto.documents.TermPosting (TermPosting.java:32)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.documents.DocumentsImpl (DocumentsImpl.java:111)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.documents.DocumentsImpl (DocumentsImpl.java:149)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.documents.DocumentsImpl (DocumentsImpl.java:176)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.documents.DocumentsImpl (DocumentsImpl.java:205)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.documents.DocumentsImpl (DocumentsImpl.java:233)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.documents.DocumentsImpl (DocumentsImpl.java:256)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.documents.DocumentsImpl (DocumentsImpl.java:284)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.documents.DocumentsImpl (DocumentsImpl.java:302)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.documents.DocumentsImpl (DocumentsImpl.java:311)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.documents.DocumentsImpl (DocumentsImpl.java:320)\n[forbidden-apis] Forbidden class/interface use: java.io.File [Use NIO.2 instead]\n[forbidden-apis]   in org.apache.lucene.luke.models.commits.File (File.java:30)\n[forbidden-apis] Forbidden class/interface use: java.io.File [Use NIO.2 instead]\n[forbidden-apis]   in org.apache.lucene.luke.models.commits.File (File.java:31)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.dialog.search.ExplanationController (ExplanationController.java:74)\n[forbidden-apis] Forbidden class/interface use: java.io.File [Use NIO.2 instead]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.AnalysisController (AnalysisController.java:159)\n[forbidden-apis] Forbidden class/interface use: java.io.File [Use NIO.2 instead]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.AnalysisController (AnalysisController.java:164)\n[forbidden-apis] Forbidden class/interface use: java.io.File [Use NIO.2 instead]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.AnalysisController (AnalysisController.java:165)\n[forbidden-apis] Forbidden class/interface use: java.io.File [Use NIO.2 instead]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.AnalysisController (AnalysisController.java:165)\n[forbidden-apis] Forbidden class/interface use: java.io.File [Use NIO.2 instead]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.AnalysisController (AnalysisController.java:172)\n[forbidden-apis] Forbidden class/interface use: java.io.File [Use NIO.2 instead]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.AnalysisController (AnalysisController.java:178)\n[forbidden-apis] Forbidden class/interface use: java.io.File [Use NIO.2 instead]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.AnalysisController (AnalysisController.java:178)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.AnalysisController (AnalysisController.java:190)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.dto.documents.TermVector (TermVector.java:41)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.SearchImpl (SearchImpl.java:150)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.SearchImpl (SearchImpl.java:185)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.SearchImpl (SearchImpl.java:224)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.SearchImpl (SearchImpl.java:236)\n[forbidden-apis] Forbidden method invocation: java.util.Arrays#copyOfRange(java.lang.Object[],int,int) [Prefer using ArrayUtil as Arrays#copyOfRange fills zeros for bad bounds]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.SearchImpl (SearchImpl.java:326)\n[forbidden-apis] Forbidden method invocation: java.util.Arrays#copyOfRange(java.lang.Object[],int,int) [Prefer using ArrayUtil as Arrays#copyOfRange fills zeros for bad bounds]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.SearchImpl (SearchImpl.java:356)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.SearchImpl (SearchImpl.java:424)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.SearchImpl (SearchImpl.java:452)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.analysis.AnalysisImpl (AnalysisImpl.java:85)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.analysis.AnalysisImpl (AnalysisImpl.java:189)\n[forbidden-apis] Forbidden method invocation: java.util.concurrent.Executors#newSingleThreadExecutor() [Spawns threads with vague names; use a custom thread factory (Lucene's NamedThreadFactory, Solr's DefaultSolrThreadFactory) and name threads so that you can tell (by its name) which executor it is associated with]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.dialog.menubar.OptimizeController (OptimizeController.java:119)\n[forbidden-apis] Forbidden class/interface use: java.io.File [Use NIO.2 instead]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.dialog.menubar.OpenIndexController (OpenIndexController.java:155)\n[forbidden-apis] Forbidden class/interface use: java.io.File [Use NIO.2 instead]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.dialog.menubar.OpenIndexController (OpenIndexController.java:160)\n[forbidden-apis] Forbidden class/interface use: java.io.File [Use NIO.2 instead]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.dialog.menubar.OpenIndexController (OpenIndexController.java:161)\n[forbidden-apis] Forbidden class/interface use: java.io.File [Use NIO.2 instead]\n[forbidden-apis]   in org.apache.lucene.luke.app.desktop.PreferencesImpl (PreferencesImpl.java:51)\n[forbidden-apis] Forbidden class/interface use: java.io.File [Use NIO.2 instead]\n[forbidden-apis]   in org.apache.lucene.luke.app.desktop.PreferencesImpl (PreferencesImpl.java, method declaration of 'iniFile()')\n[forbidden-apis] Forbidden class/interface use: java.io.File [Use NIO.2 instead]\n[forbidden-apis]   in org.apache.lucene.luke.app.desktop.PreferencesImpl (PreferencesImpl.java:140)\n[forbidden-apis] Forbidden class/interface use: java.io.File [Use NIO.2 instead]\n[forbidden-apis]   in org.apache.lucene.luke.app.desktop.PreferencesImpl (PreferencesImpl.java:34)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.SearchController (SearchController.java:291)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.SearchController (SearchController.java:435)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.SimilarityConfig (SimilarityConfig.java:93)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.SimilarityConfig (SimilarityConfig.java:94)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.SimilarityConfig (SimilarityConfig.java:95)\n[forbidden-apis] Forbidden method invocation: java.lang.String#format(java.lang.String,java.lang.Object[]) [Uses default locale]\n[forbidden-apis]   in org.apache.lucene.luke.models.search.SimilarityConfig (SimilarityConfig.java:96)\n[forbidden-apis] Forbidden class/interface use: java.io.File [Use NIO.2 instead]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.LogsController (LogsController.java:29)\n[forbidden-apis] Forbidden class/interface use: java.io.File [Use NIO.2 instead]\n[forbidden-apis]   in org.apache.lucene.luke.app.controllers.LogsController (LogsController.java:29)\n[forbidden-apis] Scanned 161 class file(s) for forbidden API invocations (in 0.44s), 87 error(s).\n\n ",
            "author": "Steve Rowe",
            "id": "comment-16547219"
        },
        {
            "date": "2018-07-17T23:53:37+0000",
            "content": "Thanks, looks good in your commit.\n\nI am still unhappy that Luke will stop working with Java 11 (e.g., which will be the default after September's Update of Ubuntu 18.04). ",
            "author": "Uwe Schindler",
            "id": "comment-16547232"
        },
        {
            "date": "2018-07-18T07:41:57+0000",
            "content": "Thank you for the comments and detailed explanation.\n\n>\u00a0On top of that: Starting with Java 11, JavaFX is no longer shipped with the JDK, so forbiddenapis is correct: it's not portable.\n\nI have not caught up with it. I cannot find out better solutions yet, but I'll try to look for\u00a0alternative UI framework that can go with future JDK updates. Replacing UIs should be possible because core luke\u00a0functionalities and UI components are well separated (I hope that,) though some extra work is needed.\n\nIf you have any suggestions, please let me know.  ",
            "author": "Tomoko Uchida",
            "id": "comment-16547494"
        },
        {
            "date": "2018-07-18T12:10:25+0000",
            "content": "I also found this issue related to the java 11 changes:\n\nhttps://github.com/javafxports/openjdk-jfx/issues/52\n\nOf course there are licensing aspects to think of too? ",
            "author": "Robert Muir",
            "id": "comment-16547733"
        },
        {
            "date": "2018-07-18T13:27:52+0000",
            "content": "We cannot link to GPL so this is a bummer. I don't think JavaFX, unless shipped with the JDK is a viable option for Apache projects.\n\nI think we should ask ASF legal how to proceed? ",
            "author": "Uwe Schindler",
            "id": "comment-16547839"
        },
        {
            "date": "2018-07-20T04:53:29+0000",
            "content": "As you know, in the ASF legal page, GNU GPL including GNU Classpath exceptions is listed in the Category X list (honestly, I read this terms yesterday and not prepared to handle such legal matters.)\n https://www.apache.org/legal/resolved.html#category-x\n\nTo not to complicate matters I'd like to withdraw the merge request for now. (Thanks for all your comments so far!) \n While contributing back Luke to Apache Lucene project is the our long-term goal, we can continually deliver Luke via current GitHub project. For keeping Luke source codes compatible with ALv2, Self-contained application package is the one of feasible options for users they do not (or cannot) install JavaFX, in my first impression.\n https://docs.oracle.com/javase/8/docs/technotes/guides/deploy/self-contained-packaging.html\n\nOf course discussions and suggestions are appreciated! ",
            "author": "Tomoko Uchida",
            "id": "comment-16550243"
        },
        {
            "date": "2018-07-20T10:40:02+0000",
            "content": "Let me add one more thing,\nI'm afraid that I cannot ask to and negotiate with ASF on my own about complicated matters with my limited knowledge about licensing and English vocabulary.\n\nBut if you think there are chances to proceed, please guide me  ",
            "author": "Tomoko Uchida",
            "id": "comment-16550630"
        },
        {
            "date": "2018-07-20T15:29:02+0000",
            "content": "We cannot link to GPL so this is a bummer. I don't think JavaFX, unless shipped with the JDK is a viable option for Apache projects. I think we should ask ASF legal how to proceed?\n\nAs you know, in the ASF legal page, GNU GPL including GNU Classpath exceptions is listed in the Category X list (honestly, I read this terms yesterday and not prepared to handle such legal matters.) https://www.apache.org/legal/resolved.html#category-x\n\nI'm afraid that I cannot ask to and negotiate with ASF on my own about complicated matters with my limited knowledge about licensing and English vocabulary.\n\nI will make an INFRA JIRA and ask if an exception can be made for OpenJFX as a dependency (vs. bundled with the JRE, which is allowed). ",
            "author": "Steve Rowe",
            "id": "comment-16550885"
        },
        {
            "date": "2018-07-20T15:43:30+0000",
            "content": "Steve Rowe Thank you! Hope there will be good news. ",
            "author": "Tomoko Uchida",
            "id": "comment-16550895"
        },
        {
            "date": "2018-07-20T18:15:36+0000",
            "content": "I created https://issues.apache.org/jira/browse/LEGAL-396 to ask for an exception to allow Lucene to depend on OpenJFX. ",
            "author": "Steve Rowe",
            "id": "comment-16551087"
        },
        {
            "date": "2018-07-21T13:28:03+0000",
            "content": "Hi Steve Rowe thanks for your support with filing the ticket. Looking to solve this one way or another.\n\nThanks Tomoko Uchida for your contribution and research so far! ",
            "author": "Dmitry Kan",
            "id": "comment-16551676"
        },
        {
            "date": "2018-07-25T10:09:36+0000",
            "content": "Hi,\n\nI found a similar issue in ASF LEGAL.\n\n\"Should GPL+CPE move to Cat B?\"\n https://issues.apache.org/jira/projects/LEGAL/issues/LEGAL-336\n\nSeems the answer is definitely NO.\n\nWhen sticking to JavaFX we probably cannot donate Luke to Apache products, though I like sophisticated JavaFX API and beautiful components.\n I'm now planning to port the UI layer from JavaFX to Swing.\n\nLuke is getting more and more popular in GitHub users (dear committers, how many of you use Luke now?) I'm not sure why a desktop application gains popularity in the web browser era. But if many users need Luke, I think it should become an official member of Lucene in any form... ",
            "author": "Tomoko Uchida",
            "id": "comment-16555479"
        },
        {
            "date": "2018-07-25T13:37:07+0000",
            "content": "Random, out of left field question here, please feel free to ignore, but have you considered porting to an HTTP/HTML gui? It could still be a standalone app using a little embedded HTTP service like [this one](https://docs.oracle.com/javase/7/docs/jre/api/net/httpserver/spec/com/sun/net/httpserver/HttpServer.html). I for one have wanted to run Luke on a remote \"cloud\" server, but using X Windows to bring up the GUI locally is a pretty big barrier (especially if your local machine is not UNIX!). ",
            "author": "Mike Sokolov",
            "id": "comment-16555673"
        },
        {
            "date": "2018-07-25T14:58:03+0000",
            "content": "Mike Sokolov Thanks comments, sure, a tiny http server is\u00a0always on my mind. (I am a just another web engineer, I know there are plenty of nice & light webapp frameworks...)\n\nHowever,\u00a0 I'm not sure that adding web assets (html, css, js) to Lucene, pure Java library, is acceptable. May be server side rendering (JavaScript free) is ok? I have no idea.\n\nBut web GUI\u00a0perhaps get the point, when\u00a0we are in a little bit dark period for client applications now.\n\nApache Pivot, first Mark Miller introduced here, has not been updated for one year. So I've switched to JavaFX as a promising framework, this is decoupled from JDK and blocked for Apache projects (at least for now.)\n\n\u00a0 ",
            "author": "Tomoko Uchida",
            "id": "comment-16555798"
        },
        {
            "date": "2018-07-25T16:00:00+0000",
            "content": "Sorry for unfocused comment, I have no idea about what's the best.\n\nSo Swing based UI (plus web one, if someone can work for this) could be the starting point because it is not likely to obsoleted or removed from JDK in a while  ",
            "author": "Tomoko Uchida",
            "id": "comment-16555881"
        },
        {
            "date": "2018-07-25T16:06:28+0000",
            "content": "Couple of points to consider:\n\n\tJDK 11 is a disruption moment anyway, as Oracle will no longer provide the official JDK to non-paying customers. Instead, there will be (Redhat-like) policy of OpenJDK vs Official JDK: http://www.oracle.com/technetwork/java/javase/eol-135779.html\u00a0So, we would have to have some real thinking/testing around what that means.\n\tIf Luke is supposed to be part of Solr distribution, we already have HTML/CSS assets for Admin UI, etc. Luke could potentially be a plugin of sorts (which has its own issues too)\n\tIf Luke is supposed to be part of Lucene-only distribution, I guess the discussion is a bit more complicated\n\n ",
            "author": "Alexandre Rafalovitch",
            "id": "comment-16555887"
        },
        {
            "date": "2018-07-25T17:00:43+0000",
            "content": "Please don't make it a part of solr. The benefit of Luke is to have it standalone so you can use it just with plain Lucene. I am not using solr, but Lucene, so I would like to see it only with Lucene distribution and not be dependent on solr. My 2 cents about this. ",
            "author": "Torsten Krah",
            "id": "comment-16555982"
        },
        {
            "date": "2018-07-25T17:20:56+0000",
            "content": "Sure, this is LUCENE's issue\u00a0  ",
            "author": "Tomoko Uchida",
            "id": "comment-16556000"
        },
        {
            "date": "2018-08-01T17:45:24+0000",
            "content": "Alexandre Rafalovitch thanks for your input! Can you please\u00a0elaborate on 'If Luke is supposed to be part of Lucene-only distribution, I guess the discussion is a bit more complicated' ? ",
            "author": "Dmitry Kan",
            "id": "comment-16565703"
        },
        {
            "date": "2018-08-01T17:53:42+0000",
            "content": "I just meant that Lucene does not have a server+HTML+CSS, so any UI addition will be a non-trivial discussion. I did not have any deeper insight than that. ",
            "author": "Alexandre Rafalovitch",
            "id": "comment-16565717"
        },
        {
            "date": "2018-08-02T08:07:53+0000",
            "content": "Well..., I am now working for completing a java desktop Luke, in any case.\n\nIf someone is strongly interested in a http server & web app version, feel free to fork the github repository (\u00a0https://github.com/DmitryKey/luke )\u00a0and develop it. I am the one long for a web version Luke that can access indexes in remote server, and will glad to cooperate. ",
            "author": "Tomoko Uchida",
            "id": "comment-16566477"
        },
        {
            "date": "2018-08-16T14:41:41+0000",
            "content": "Mike Sokolov\u00a0hi, I found a web based Luke project, with a rest api server and modern js technologies. This might be what you are wanting?\u00a0\n\nhttp://www.flax.co.uk/blog/2017/02/24/release-1-0-marple-lucene-index-detective/\n\nI've not tried this yet, for your information. ",
            "author": "Tomoko Uchida",
            "id": "comment-16582610"
        },
        {
            "date": "2018-10-22T13:50:10+0000",
            "content": "Hi,\n\nas we announced in the Lucene/Solr mailing lists, Luke was re-implemented on top of Swing.\nhttps://github.com/DmitryKey/luke\n\nThe code is licensed under ALv2 and Swing is the part of JDK, so I think there is no obstacle to make it a Lucene submodule.\n\nI would like to create another patch and restart this issue, after just fixing styles and colors.\nThe draft patch will be ready for review in the next few weeks or so but I am not sure about when I should cut the feature branch for it. (Seems like Lucene 8.0 release workflow will be kicked off soon.) Don't I have to care about the major version release procedure?\nCan you please give me some advice?\n\nThanks. ",
            "author": "Tomoko Uchida",
            "id": "comment-16659008"
        },
        {
            "date": "2018-10-22T14:45:05+0000",
            "content": "\u00a0as we announced in the Lucene/Solr mailing lists, Luke was re-implemented on top of Swing.\n\nWow, that was fast, congratulations!\n\nThe code is licensed under ALv2 and Swing is the part of JDK, so I think there is no obstacle to make it a Lucene submodule.\n\n+1\n\nThe draft patch will be ready for review in the next few weeks or so but I am not sure about when I should cut the feature branch for it. (Seems like Lucene 8.0 release workflow will be kicked off soon.) Don't I have to care about the major version release procedure?\n\nOnce you put up a patch here I can commit it to the branch I already cut for this issue: jira/lucene-2562 (mentioned in a previous comment of mine on this issue).  Depending on when everything's wrapped up, it may or may not make the 8.0 release; if not, then it will be part of whichever release is upcoming.  So no, I don't think you need to worry about release procedures for this issue.  Is there something specific you're concerned about? ",
            "author": "Steve Rowe",
            "id": "comment-16659047"
        },
        {
            "date": "2018-10-22T14:57:33+0000",
            "content": "Hi Steve,\n thank you for the quick response.\nIs there something specific you're concerned about?\nNo, I am just wondering that there is something I have to consider.\n I will create a pull request for review after the next release, Luke 7.6.0. (or 8.0.0?)  ",
            "author": "Tomoko Uchida",
            "id": "comment-16659056"
        },
        {
            "date": "2018-10-22T14:59:33+0000",
            "content": "I will create a pull request for review after the next release, Luke 7.6.0. (or 8.0.0?) \n\nPlease don't wait for a release; Lucene/Solr development happens independently from release cycles. ",
            "author": "Steve Rowe",
            "id": "comment-16659057"
        },
        {
            "date": "2018-10-22T15:03:10+0000",
            "content": "Please don't wait for a release; Lucene/Solr development happens independently from release cycles.\n\nI understand, thanks! ",
            "author": "Tomoko Uchida",
            "id": "comment-16659061"
        },
        {
            "date": "2018-11-04T06:29:42+0000",
            "content": "I created another pull request for review, could you take a look this.\n https://github.com/apache/lucene-solr/pull/490\nhttps://github.com/apache/lucene-solr/pull/512\n\nI fixed the code to pass ant validation tasks, following your comments.\n (This time, Luke module passes most of the validations, validate-source-patterns, forbiddenapis, check-lib-versions and so on. Also unit tests seem to be more stable than before.)\n1. validate-source-patterns complains about non-static-final loggers:\nThe code of the PR has passed validate-source-patterns on my PC (MacBook / Java 1.8.0_181).\n2. It should be possible to run Luke from a source checkout, but it's not now.\n3. I think Luke should be packaged with all other artifacts in Lucene's binary packages, but currently ant package-tgz and -zip don't include everything\nluke/build.xml in this PR creates a simple directory structure as follows in the tgz/zip packeges.\n\n$ cd lucene-8.0.0-SNAPSHOT\n$ tree -L 1 luke/\n luke/\n \u251c\u2500\u2500 lib\n \u251c\u2500\u2500 lucene-luke-8.0.0-SNAPSHOT.jar\n \u251c\u2500\u2500 luke.bat // this does not exist yet (TBD).\n \u2514\u2500\u2500 luke.sh\n \n\nluke.sh can be launched from anywhere. The script knows classpaths (relative paths to jars it depends on) to run. I am not sure that this launch script is the best design choice... if there are better ways to package Luke with Lucene, please let me know.\n\n # if you are in `lucene-8.0.0` directory:\n $ ./luke/luke.sh\n\n\n4. forbidden-apis is very unhappy about classes in javafx.* packages\nBesides javafx, a bunch of fixes were needed to pass the check but now it has passed forbiddedapis check.\n\nI have some issues to ask or consult with you.\n\n1. Luke is a GUI tool so I think Javadoc should not be published with the tar/zip. I have tried to disable javadoc and documentation-lint task, but adding this lines is not working. Am I missing something? documentation-lint is failed so it does not pass ant precommit. :/\n\n <target name=\"javadocs\"/>\n <target name=\"documentation-lint\"/>\n \n\n2. I have noticed that Guice (cglib) has a compatibility issue with JDK9+. \n Please see https://github.com/DmitryKey/luke/issues/125\n\nWith the latest version of Guice (4.2.2), JDK 11 still emits the warnings. \n We will be able to remove the dependency on Guice, but if possible I'd like to use the DI framework to keep UI components and model classes loosely coupled. (This greatly helped me when switching JavaFX to Swing, though I didn't expect that situation.) ",
            "author": "Tomoko Uchida",
            "id": "comment-16674312"
        },
        {
            "date": "2018-11-05T00:37:31+0000",
            "content": "2. It should be possible to run Luke from a source checkout, but it's not now.\nOh, maybe I missed your intent, after compiling Luke still cannot be quickly started\u00a0 from the terminal. I will deal with this (I think some ant target that launches Luke will be needed for it.)\n JFYI: For now, Luke can be launched from IDE's Run/Debug feature. I use it when developing Luke.\n\n ",
            "author": "Tomoko Uchida",
            "id": "comment-16674565"
        },
        {
            "date": "2018-11-08T12:08:56+0000",
            "content": "I have noticed that Guice (cglib) has a compatibility issue with JDK9+.\nAnswering to myself: I looked through my code again and found that (after dozens of refactoring,) current code of Luke does not so heavily depend on Guice.\n It's not too difficult to completely remove the dependency on Guice, so let me know if you don't like it for the project.  ",
            "author": "Tomoko Uchida",
            "id": "comment-16679662"
        },
        {
            "date": "2018-11-19T01:16:37+0000",
            "content": "A small update:\n\n> 2. It should be possible to run Luke from a source checkout, but it's not now.\n\nI added an ant tartget, launch, to the build file. This command launches luke after a source checkout.\n\n\nant -f lucene/luke/build.xml launch\n\n   ",
            "author": "Tomoko Uchida",
            "id": "comment-16691146"
        },
        {
            "date": "2018-11-24T05:43:51+0000",
            "content": "Some improvements in the pull request:\n\n1. The luke module passed ant precommit.\n\nI examined the Javadoc linter scripts and found that excluding a specific module when executing documentation-lint is not allowed for now. I added missing javadocs to pass linter's check so that ant precommit is successfully built.\n\n2. JVM warnings when running on JDK9+ was resolved.\n\nThe warnings (\"An illegal reflective access operation\") was not a compatibility issue of Guice. Guice works fine with JDK9+. I added --add-opens JVM option in the start script to allow deep reflection. By doing so, dependency injection works within the module system and the warnings disappears.\n\n3. A start script for windows was added.\n\nluke.bat was added for windows os.\n\nIs there anything else I can do\u00a0for this issue?\u00a0;D ",
            "author": "Tomoko Uchida",
            "id": "comment-16697658"
        }
    ]
}