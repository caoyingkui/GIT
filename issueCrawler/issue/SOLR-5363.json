{
    "id": "SOLR-5363",
    "title": "NoClassDefFoundError when using Apache Log4J2",
    "details": {
        "affect_versions": "4.5",
        "status": "Resolved",
        "fix_versions": [
            "4.6",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Hey guys,\n\nI'm using Log4J2 + SLF4J in my project. Unfortunately my embedded solr server throws this error when starting:\n\n\nCaused by: org.springframework.beans.factory.BeanDefinitionStoreException: Factory method [public org.springframework.da\nta.solr.core.SolrOperations com.xxxxx.platform.core.config.SolrsearchConfig.defaultSolrTemplate() throws javax.xml.par\nsers.ParserConfigurationException,java.io.IOException,org.xml.sax.SAXException] threw exception; nested exception is org\n.springframework.beans.factory.BeanCreationException: Error creating bean with name 'defaultSolrServer' defined in class\n path resource [com/xxxxx/platform/core/config/SolrsearchConfig.class]: Instantiation of bean failed; nested exception\n is org.springframework.beans.factory.BeanDefinitionStoreException: Factory method [public org.apache.solr.client.solrj.\nSolrServer com.xxxxxx.platform.core.config.SolrsearchConfig.defaultSolrServer() throws javax.xml.parsers.ParserConfigur\nationException,java.io.IOException,org.xml.sax.SAXException] threw exception; nested exception is java.lang.NoClassDefFo\nundError: org/apache/log4j/Priority\n        at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy\n.java:181)\n        at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolv\ner.java:570)\n        ... 105 more\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'defaultSolrServer' de\nfined in class path resource [com/xxxxxx/platform/core/config/SolrsearchConfig.class]: Instantiation of bean failed; ne\nsted exception is org.springframework.beans.factory.BeanDefinitionStoreException: Factory method [public org.apache.solr\n.client.solrj.SolrServer com.xxxxxxx.platform.core.config.SolrsearchConfig.defaultSolrServer() throws javax.xml.parsers.\nParserConfigurationException,java.io.IOException,org.xml.sax.SAXException] threw exception; nested exception is java.lan\ng.NoClassDefFoundError: org/apache/log4j/Priority\n        at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolv\ner.java:581)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(Ab\nstractAutowireCapableBeanFactory.java:1025)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutow\nireCapableBeanFactory.java:921)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCap\nableBeanFactory.java:487)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapab\nleBeanFactory.java:458)\n        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:295)\n        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegis\ntry.java:223)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:292)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)\n        at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(Configurati\nonClassEnhancer.java:298)\n        at com.xxxxxx.platform.core.config.SolrsearchConfig$$EnhancerByCGLIB$$c571c5a6.defaultSolrServer(<generated>)\n        at com.xxxxx.platform.core.config.SolrsearchConfig.defaultSolrTemplate(SolrsearchConfig.java:37)\n        at com.xxxxxx.platform.core.config.SolrsearchConfig$$EnhancerByCGLIB$$c571c5a6.CGLIB$defaultSolrTemplate$2(<gen\nerated>)\n        at com.xxxxx.platform.core.config.SolrsearchConfig$$EnhancerByCGLIB$$c571c5a6$$FastClassByCGLIB$$f67069c2.invo\nke(<generated>)\n        at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)\n        at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(Configurati\nonClassEnhancer.java:286)\n        at com.xxxxxx.platform.core.config.SolrsearchConfig$$EnhancerByCGLIB$$c571c5a6.defaultSolrTemplate(<generated>)\n\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:606)\n        at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy\n.java:160)\n        ... 106 more\nCaused by: org.springframework.beans.factory.BeanDefinitionStoreException: Factory method [public org.apache.solr.client\n.solrj.SolrServer com.xxxxxxx.platform.core.config.SolrsearchConfig.defaultSolrServer() throws javax.xml.parsers.ParserC\nonfigurationException,java.io.IOException,org.xml.sax.SAXException] threw exception; nested exception is java.lang.NoCla\nssDefFoundError: org/apache/log4j/Priority\n        at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy\n.java:181)\n        at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolv\ner.java:570)\n        ... 127 more\nCaused by: java.lang.NoClassDefFoundError: org/apache/log4j/Priority\n        at org.apache.solr.core.CoreContainer.load(CoreContainer.java:433)\n        at org.apache.solr.core.CoreContainer.load(CoreContainer.java:358)\n        at org.apache.solr.core.CoreContainer.<init>(CoreContainer.java:160)\n        at org.springframework.data.solr.server.support.EmbeddedSolrServerFactory.createPathConfiguredSolrServer(Embedde\ndSolrServerFactory.java:101)\n        at org.springframework.data.solr.server.support.EmbeddedSolrServerFactory.initSolrServer(EmbeddedSolrServerFacto\nry.java:77)\n        at org.springframework.data.solr.server.support.EmbeddedSolrServerFactory.getSolrServer(EmbeddedSolrServerFactor\ny.java:70)\n        at com.xxxxxxx.platform.core.config.SolrsearchConfig.defaultSolrServer(SolrsearchConfig.java:32)\n        at com.xxxxxx.platform.core.config.SolrsearchConfig$$EnhancerByCGLIB$$c571c5a6.CGLIB$defaultSolrServer$1(<gener\nated>)\n        at com.xxxxxx.platform.core.config.SolrsearchConfig$$EnhancerByCGLIB$$c571c5a6$$FastClassByCGLIB$$f67069c2.invo\nke(<generated>)\n        at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)\n        at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(Configurati\nonClassEnhancer.java:286)\n        at com.xxxxxx.platform.core.config.SolrsearchConfig$$EnhancerByCGLIB$$c571c5a6.defaultSolrServer(<generated>)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:606)\n        at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy\n.java:160)\n        ... 128 more\nCaused by: java.lang.ClassNotFoundException: org.apache.log4j.Priority\n        at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:50)\n        at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:244)\n        at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:230)\n        at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:430)\n        at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:383)\n        ... 145 more\n\n\n\nSeems like Solr relies on Log4J version 1.x.",
    "attachments": {
        "SOLR-5363.patch": "https://issues.apache.org/jira/secure/attachment/12609865/SOLR-5363.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Petar Tahchiev",
            "id": "comment-13802912",
            "date": "2013-10-23T14:53:21+0000",
            "content": "Hi guys,\n\nso It seems that the CoreContainer checks if the slf4j implementation name contains log4j and if so instantiates the Log4j watcher. The problem is that using the Log4J2 the slf4j implementation is: \n\norg.slf4j.helpers.Log4jLoggerFactory\n\n\n\nso you see it does contain \"Log4J\", and thus SOLR will try to instantiate the Log4JWatcher, which was written for Log4J1. The Log4J1 slf4j implementation is called: \n\norg.slf4j.impl.Log4jLoggerFactory\n\n\n\nso what I have done is to change the if to include the full class name. If you apply this patch i guess the issue can be closed, but further on it might be a good idea to implement a Log4J2Watcher.  "
        },
        {
            "author": "Shikhar Bhushan",
            "id": "comment-13802926",
            "date": "2013-10-23T15:03:24+0000",
            "content": "Confirming the issue & Petar's assessment, ran into this as well "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13802939",
            "date": "2013-10-23T15:20:02+0000",
            "content": "Hi Petar, thanks for this.  It looks as though your patch is against a slightly older version of Solr (the relevant code has moved out of CoreContainer and into LogWatcher now), but it's simple to apply it. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13802965",
            "date": "2013-10-23T15:47:01+0000",
            "content": "Commit 1535065 from Alan Woodward in branch 'dev/trunk'\n[ https://svn.apache.org/r1535065 ]\n\nSOLR-5363: Solr doesn't start up properly with Log4J2 "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13802966",
            "date": "2013-10-23T15:48:05+0000",
            "content": "Commit 1535066 from Alan Woodward in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1535066 ]\n\nSOLR-5363: Solr doesn't start up properly with Log4J2 "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13802967",
            "date": "2013-10-23T15:48:35+0000",
            "content": "Thanks Petar! "
        },
        {
            "author": "Petar Tahchiev",
            "id": "comment-13808354",
            "date": "2013-10-29T19:28:55+0000",
            "content": "Hi Alan,\n\nI just used Solr 4.5.1 from m2 official repo and it seems like it is still not fixed:\n\n        if (slf4jImpl.indexOf(\"Log4j\") > 0) {\n          fname = \"Log4j\";\n        } else if (slf4jImpl.indexOf(\"JDK\") > 0) {\n          fname = \"JUL\";\n        }\n\n\n\nThis is inside the jar. Should I reopen the issue? "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13808356",
            "date": "2013-10-29T19:31:40+0000",
            "content": "Hi Petar, this missed the 4.5.1 cutoff, I'm afraid.  It will be in 4.6. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13808362",
            "date": "2013-10-29T19:38:03+0000",
            "content": "Hi Petar, this missed the 4.5.1 cutoff, I'm afraid. It will be in 4.6.\n\nAlan, can you set the fix version to 4.6 and 5.0?  I do this when I resolve issues. "
        }
    ]
}