{
    "id": "SOLR-10653",
    "title": "After Upgrade from 5.3.1 to 6.4.2, Solr is storing certain fields like UUID, BigDecimal, Enums as <object type >:<value>",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "clients - java",
            "SolrJ"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "6.4.2",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Originally being in 5.3.1 when supplying object types such as java.util.UUID, Enum, BigDecimal supplied to SolrInputDocument the conversion to corresponding data types defined in the Solr schema happened just fine in this case string, string, float respectively. After the upgrade to 6.4.2 version, I see that when such values are supplied to SolrInputDocument, while saving it gets stored as \"java.util.UUID:0997e78e-6e3d-4824-8c52-8cc15533e541\" with UUID for example and fully qualified name of the class for Enums etc. Hence while deserializing we are getting errors such as \n\nInvalid UUID String: 'java.util.UUID:0997e78e-6e3d-4824-8c52-8cc15533e541'\n\nAlthough converting these fields to String before supplying to SolrInputDocument or converting to varchar for delta import queries seem to fix the problem. I wonder what changed between the 2 versions to have me do this String or varchar conversion that was not required before.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2018-02-06T21:12:21+0000",
            "content": "I just ran into the same issue when upgrading from Solr 4.10 to Solr 7.1. Do I have to change all my enum fields to String values to fix this or is there some kind of configuration for SolrJ? ",
            "author": "Thomas Heigl",
            "id": "comment-16354537"
        }
    ]
}