{
    "id": "LUCENE-5356",
    "title": "Morfologik filter can accept custom dictionary resources",
    "details": {
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed",
        "components": [
            "modules/analysis"
        ],
        "affect_versions": "4.6",
        "status": "Closed",
        "fix_versions": [
            "4.8",
            "6.0"
        ]
    },
    "description": "I have little proposal for morfologik lucene module. Current module is tightly coupled with polish DICTIONARY enumeration.\nBut other people (like me) can build own dictionaries to FSA and use it with lucene. \nYou can find proposal in attachment and also example usage in analyzer (SlovakLemmaAnalyzer).\nIt uses dictionary property as String resource from classpath, not enumeration.\nOne change is, that dictionary variable must be set in MofologikFilterFactory (no default value).",
    "attachments": {
        "LUCENE-5356.patch": "https://issues.apache.org/jira/secure/attachment/12623642/%20LUCENE-5356.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13838022",
            "author": "Dawid Weiss",
            "content": "A quick look at the patch:\n\n   /** Schema attribute. */\n-  @Deprecated\n   public static final String DICTIONARY_SCHEMA_ATTRIBUTE = \"dictionary\";\n\n\n\nWe should not un-deprecate this property, especially that its new meaning is different to what it was before. The custom dictionary should be a separate property, with a new semantics.\n\nAll the logic in MorfologikLemmatizer seems awkward to me:\n\n+    @Override\n+    public Iterator<WordData> iterator() {\n+        if (delegate.size() == 1) {\n+            return delegate.get(0).iterator();\n+        } else {\n+            throw new RuntimeException(\"No iteration over compound stemmer forms: \"\n+                    + Arrays.toString(delegate.toArray()));\n+        }\n+    }\n\n\n\nHow can this ever be != 1 if the only place you add a delegate in is in the constructor? ",
            "date": "2013-12-03T18:46:16+0000"
        },
        {
            "id": "comment-13838733",
            "author": "Michal Hlavac",
            "content": "It's similar code to:\nhttps://github.com/morfologik/morfologik-stemming/blob/master/morfologik-polish/src/main/java/morfologik/stemming/PolishStemmer.java ",
            "date": "2013-12-04T08:37:53+0000"
        },
        {
            "id": "comment-13838734",
            "author": "Michal Hlavac",
            "content": "Another point is that lucene-morfologic doesn't need dependency to morfologic-polish library anymore. It's not included in patch. ",
            "date": "2013-12-04T08:39:30+0000"
        },
        {
            "id": "comment-13838745",
            "author": "Dawid Weiss",
            "content": "I know it's similar but in PolishStemmer the reason for having multiple delegates was that there actually were multiple delegates \u2013 the code now doesn't make much sense and should be fixed there too. ",
            "date": "2013-12-04T08:55:13+0000"
        },
        {
            "id": "comment-13852097",
            "author": "Michal Hlavac",
            "content": "used only one delegate in MorfologicLemmatizer ",
            "date": "2013-12-18T20:02:58+0000"
        },
        {
            "id": "comment-13852779",
            "author": "Dawid Weiss",
            "content": "I looked at the patch and wanted to apply it but there are still some showstoppers to me.\n\n\tproperty deprecation was not handled the way I mentioned in my previous comment\n\tthe default mode should be backwards compatible (no custom dictionary => Polish dictionary), so the test should pass without passing 'pl' as the dictionary too. a custom-dictionary test should be added.\n\tjavadocs and comments need to be updated to reflect this change\n\tMorfologikLemmatizer is not needed at all, an IStemmer is enough (this class is a dummy delegate now)\n\tthis is not the same:\n\n-      me.setContextClassLoader(PolishStemmer.class.getClassLoader());\n-      this.stemmer = new PolishStemmer();\n+      me.setContextClassLoader(MorfologikLemmatizer.class.getClassLoader());\n+      this.stemmer = new MorfologikLemmatizer(dict);\n\n\nthe context class loader should be left as it was (pointing to PolishStemmer); if the custom dictionary is within that classloader's scope (it should be) it'll be loaded.\n\n ",
            "date": "2013-12-19T10:09:17+0000"
        },
        {
            "id": "comment-13852852",
            "author": "Michal Hlavac",
            "content": "Ok, I'll try to change what you say. \nOne of base motivation was to remove morfologik-polish from dependecies. It's not backwards compatible but it's more generic. I don't need polish dictionary when I am using e.g. english dictionary. ",
            "date": "2013-12-19T12:25:28+0000"
        },
        {
            "id": "comment-13852857",
            "author": "Dawid Weiss",
            "content": "You don't need it but it has to be backwards compatible because others may rely on it. So we can't just change how it currently works. Alternatively, you can provide an entirely different filter factory class. ",
            "date": "2013-12-19T12:30:19+0000"
        },
        {
            "id": "comment-13852860",
            "author": "Michal Hlavac",
            "content": "Can't we change it even in major version release? ",
            "date": "2013-12-19T12:38:19+0000"
        },
        {
            "id": "comment-13852864",
            "author": "Dawid Weiss",
            "content": "We could, but it seems like something that could be implemented and backported to the branch as well. I would do it myself, but I don't want to steal your thunder  ",
            "date": "2013-12-19T12:42:22+0000"
        },
        {
            "id": "comment-13874789",
            "author": "Michal Hlavac",
            "content": "This patch contains proposals from previous issue comments. ",
            "date": "2014-01-17T13:35:51+0000"
        },
        {
            "id": "comment-13943049",
            "author": "Michal Hlavac",
            "content": "Dawin, is it possible to move on with this issue? thanks ",
            "date": "2014-03-21T13:26:21+0000"
        },
        {
            "id": "comment-13943362",
            "author": "Dawid Weiss",
            "content": "Hi Michal. Sorry, it slipped my mind somehow. I'll look at it over the weekend. Thanks for reminding me. ",
            "date": "2014-03-21T18:37:39+0000"
        },
        {
            "id": "comment-13944156",
            "author": "Ahmet Arslan",
            "content": "Hi Michal Hlavac , is it possible to use morfologik to convert https://github.com/coltekin/TRmorph to java and create a stem  filter? ",
            "date": "2014-03-22T17:37:36+0000"
        },
        {
            "id": "comment-13944886",
            "author": "Michal Hlavac",
            "content": "Hi Ahmet,\nI think this is not right way how to ask quetions like this. Please use lucene's user mailing list. Thanks ",
            "date": "2014-03-24T10:17:21+0000"
        },
        {
            "id": "comment-13945100",
            "author": "Dawid Weiss",
            "content": "Polished a few minor things wrt the documentation, added CHANGES entry. ",
            "date": "2014-03-24T13:46:51+0000"
        },
        {
            "id": "comment-13945101",
            "author": "ASF subversion and git services",
            "content": "Commit 1580853 from Dawid Weiss in branch 'dev/trunk'\n[ https://svn.apache.org/r1580853 ]\n\nLUCENE-5356: Morfologik filter can accept custom dictionary resources. ",
            "date": "2014-03-24T13:47:30+0000"
        },
        {
            "id": "comment-13945117",
            "author": "ASF subversion and git services",
            "content": "Commit 1580858 from Dawid Weiss in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1580858 ]\n\nLUCENE-5356: Morfologik filter can accept custom dictionary resources. ",
            "date": "2014-03-24T14:00:04+0000"
        },
        {
            "id": "comment-13945122",
            "author": "Dawid Weiss",
            "content": "Thanks Michal. ",
            "date": "2014-03-24T14:02:47+0000"
        },
        {
            "id": "comment-13945174",
            "author": "Michal Hlavac",
            "content": "One thing I forget. Is it possible to change scope of morfologik-polish dependency to test? ",
            "date": "2014-03-24T14:44:49+0000"
        },
        {
            "id": "comment-13945735",
            "author": "Dawid Weiss",
            "content": "This plugin basically provides Polish stemming as its primary goal (and it's the only dictionary available in morfologik-stemming out of the box) so excluding Polish dictionaries would be odd and counterintuitive. If you have your own dictionaries and you're using maven, exclude unnecessary dependencies in your POM. ",
            "date": "2014-03-24T21:40:46+0000"
        },
        {
            "id": "comment-13982566",
            "author": "Uwe Schindler",
            "content": "Close issue after release of 4.8.0 ",
            "date": "2014-04-27T23:25:45+0000"
        }
    ]
}