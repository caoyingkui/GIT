{
    "id": "SOLR-11831",
    "title": "Skip second grouping step if group.limit is 1 (aka Las Vegas patch)",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "In cases where we do grouping and ask for  group.limit=1 only it is possible to skip the second grouping step. In our test datasets it improved speed by around 40%.\n\nEssentially, in the first grouping step each shard returns the top K groups based on the highest scoring document in each group. The top K groups from each shard are merged in the federator and in the second step we ask all the shards to return the top documents from each of the top ranking groups.\n\nIf we only want to return the highest scoring document per group we can return the top document id in the first step, merge results in the federator to retain the top K groups and then skip the second grouping step entirely. This is possible provided that:\n\na) We do not need to know the total number of matching documents per group\nb) Within group sort and between group sort is the same. \nc) We are not doing reranking (this is because this is done in the second grouping step. It is also possible to get this to work with reranking but more work and some additional assumptions are required)\n\nThis patch applies the grouping optimisation in cases where a)-c) apply and we are only sorting by relevance. It is also possible to extend this work to handle multiple sorting criteria and also reranking. \n\nP.S. Diego and I called this patch \"las vegas\" because we started to write it on the flight to Las Vegas for Lucene/Solr revolution.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2018-01-08T17:05:27+0000",
            "content": "Malvina Josephidou I think you forgot to attach the patch  ",
            "author": "Anshum Gupta",
            "id": "comment-16316593"
        },
        {
            "date": "2018-01-08T17:11:55+0000",
            "content": "patch is coming, give us a few minutes  ",
            "author": "Diego Ceccarelli",
            "id": "comment-16316605"
        },
        {
            "date": "2018-01-08T17:30:08+0000",
            "content": "GitHub user mjosephidou opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/300\n\n    SOLR-11831: Skip second grouping step if group.limit is 1 (aka Las Vegas Patch)\n\n    Summary:\n    In cases where we do grouping and ask for  group.limit=1 only it is possible to skip the second grouping step. In our test datasets it improved speed by around 40%.\n\n    Essentially, in the first grouping step each shard returns the top K groups based on the highest scoring document in each group. The top K groups from each shard are merged in the federator and in the second step we ask all the shards to return the top documents from each of the top ranking groups.\n\n    If we only want to return the highest scoring document per group we can return the top document id in the first step, merge results in the federator to retain the top K groups and then skip the second grouping step entirely.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/bloomberg/lucene-solr SOLR-11831\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/300.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #300\n\n\ncommit 6b918c86cd0f37320c32eb669eca722a9e74f768\nAuthor: Malvina Josephidou <mjosephidou@...>\nDate:   2018-01-04T15:00:35Z\n\n    SOLR-11831: Skip second grouping step if group.limit is 1 (aka Las Vegas patch)\n\n    Summary:\n    In cases where we do grouping and ask for  group.limit=1 only it is possible to skip the second grouping step. In our test datasets it improved speed by around 40%.\n\n    Essentially, in the first grouping step each shard returns the top K groups based on the highest scoring document in each group. The top K groups from each shard are merged in the federator and in the second step we ask all the shards to return the top documents from each of the top ranking groups.\n\n    If we only want to return the highest scoring document per group we can return the top document id in the first step, merge results in the federator to retain the top K groups and then skip the second grouping step entirely.\n\n ",
            "author": "ASF GitHub Bot",
            "id": "comment-16316636"
        },
        {
            "date": "2018-05-10T15:58:54+0000",
            "content": "Does this apply to both distributed and non distributed solr setups? ",
            "author": "Ilayaraja",
            "id": "comment-16470603"
        },
        {
            "date": "2018-05-10T16:01:31+0000",
            "content": "It applies only to distributed, I was discussing with Alan Woodward about the possibility to do the same inside lucene for the non distributed case.\u00a0 ",
            "author": "Diego Ceccarelli",
            "id": "comment-16470605"
        }
    ]
}