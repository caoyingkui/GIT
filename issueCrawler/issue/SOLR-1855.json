{
    "id": "SOLR-1855",
    "title": "Script to monitor Solr health including replication status",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "replication (java)"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "It would be useful to have a simple monitor script that checks the health of all cores on a solr server.\n\n\tCall the \"ping\" command and verify success.\n\tCheck for replication failures, for replication slaves.\n\n\n\nThe script should return a non-zero exit code if any serious errors are discovered.  This should make it easy to plug the script into a monitoring framework (Nagios, etc.)",
    "attachments": {
        "checksolr": "https://issues.apache.org/jira/secure/attachment/12440251/checksolr",
        "checksolr-2.sh": "https://issues.apache.org/jira/secure/attachment/12584308/checksolr-2.sh"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Shawn Smith",
            "id": "comment-12851462",
            "date": "2010-03-30T16:48:19+0000",
            "content": "I've attached a first pass implementation of this script: 'checksolr' attachment.  It's basically the script we're using in our production environment to monitor Solr health.  As such, it's not completely generic, but it should be a decent start:\n\n\tbash script tested only on Linux\n\tdependencies on curl, xmllint, xmlstarlet (curl, libxml2, xmlstarlet packages)\n\tassumes url structure corresponding to the default multi-core Solr configuration (http://<host>:<port>/solr/admin/cores, .../solr/<core>/admin/ping, .../solr/<core>/replication?command=details)\n\tchecks slave replication health assuming Solr 1.4 Java replication\n\tdynamically determines the set of Solr cores, so it's useful in a multi-core deployment where the set of cores may change relatively often\n\n\n\nExample usage:\n\n$ ./checksolr -?\nUsage:\n    checksolr [OPTIONS]\n\nOptions:\n    --help | -h\n        Print the brief help message and exit.\n\n    --man\n        Print the manual page and exit.\n\n    --host | -H HOST\n        Check this host instead of localhost.\n\n    --port | -P Port\n        Use this port instead of the default(8983) to connect.\n\n    --diff | -D Time difference between now and when solr last replicated\n        Use this option to set the maximum difference in seconds between the\n        time when the solr slave replicated and now.\n\n    --slave\n        Perform slave checks on the host instead of ping tests.\n\n$ ./checksolr --host solrmaster1\nCore \"core0\" returned \"OK\".\nCore \"core1\" returned \"OK\".\nCore \"core2\" returned \"OK\".\n$ echo $?\n0\n\n$ ./checksolr --slave --host solrslave1\nCore \"core0\" is up to date.\nCore \"core1\" is up to date.\nCore \"core2\" is having trouble replicating.\n$ echo $?\n1\n\n "
        },
        {
            "author": "Rama Roberts",
            "id": "comment-13012548",
            "date": "2011-03-29T16:35:18+0000",
            "content": "Thanks- this is helpful. \nYou should add to the assumptions list that this script expects the cores to have names that are prefixed with \"core_\".  "
        },
        {
            "author": "Leonardo Fedalto",
            "id": "comment-13664143",
            "date": "2013-05-22T14:30:35+0000",
            "content": "Really useful. Great work.\n\nI changed the script a little bit to meet my needs and I'm uploading my changes back here.\n\nThe checksolr-2.sh have some changes worth pointing out:\n\n\tIt doesn't have the assumption that the core name should start with core_. It should work regardless of the name. I didn't test with special characters thought.\n\tIt checks if a Solr Core could not be initialized.\n\tChecks if the slave could not get the master index version (maybe because master is down or network issues).\n\tIt checks if each core is a master or a slave, so it does not have the --slave option\n\tTested on Linux and OS X\n\tTested using Solr 4.1 API\n\n "
        },
        {
            "author": "Devraj Jaiman",
            "id": "comment-13851635",
            "date": "2013-12-18T12:22:28+0000",
            "content": "This works great. But I need some different approach bcoz sometime internet speed is not good b/w master and slave. So replication lags more than 3 hours sometime. So I want to check that in each 1 hour minimum 5 files are indexing. Please suggest some idea.    "
        },
        {
            "author": "Leonardo Fedalto",
            "id": "comment-13851693",
            "date": "2013-12-18T13:21:49+0000",
            "content": "Devraj,\n\nYou can change the variable REPLICATION_TIME_TOLERANCE in the script.\nIt is set to 7200 seconds (2h), which means if the index version of the master and slave differs and the last time a slave could replicate was more than 2h ago, the script will fail.\nBut it will not fail if the slave is replicating at the time the script runs.\n\nI hope this help. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16067405",
            "date": "2017-06-28T22:53:18+0000",
            "content": "Closing ancient issue which has since been solved in other and better ways. "
        }
    ]
}