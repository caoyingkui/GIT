{
    "id": "LUCENE-5024",
    "title": "Can we reliably detect an incomplete first commit vs index corruption?",
    "details": {
        "components": [
            "core/index"
        ],
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Normally, if something bad happens (OS, JVM, hardware crashes) while\nIndexWriter is committing, we will just fallback to the prior commit\nand no intervention necessary from the app.\n\nBut if that commit is the first commit, then on restart IndexWriter\nwill now throw CorruptIndexException, as of LUCENE-4738.\n\nPrior to LUCENE-4738, in LUCENE-2812, we used to try to detect the\ncorrupt first commit, but that logic was dangerous and could result in\nfalsely believing no index is present when one is, e.g. when transient\nIOExceptions are thrown due to file descriptor exhaustion.\n\nBut now two users have hit this change ... see \"CorruptIndexException\nwhen opening Index during first commit\" and \"Calling\nIndexWriter.commit() immediately after creating the writer\", both on\njava-user.\n\nIt would be nice to get back to not marking an incomplete first commit\nas corruption ... but we have to proceed carefully.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2013-05-30T15:31:02+0000",
            "content": "even if we can, i'm not sure we should.\n\nreal users hit corruption issues too. sorry to the two java-users for the inconvenience, but corruption/dataloss is WAY worse. ",
            "author": "Robert Muir",
            "id": "comment-13670410"
        },
        {
            "date": "2013-05-30T15:35:04+0000",
            "content": "The best solution here i think, is removal of create-or-append.\n\nreally index creation can be a one time thing you must do separately before you can use the directory. this is typically how its done: lucene is wierd and has this broken mechanism today instead. ",
            "author": "Robert Muir",
            "id": "comment-13670416"
        },
        {
            "date": "2013-05-30T19:03:04+0000",
            "content": "Hi.  I'm one of the users who reported/asked about this.  \n\nSpecifically, i was wondering if it's possible to deal with this by being explicit about the segments_n file being in the pre-committed state?  That is, add one byte to segments_n file representing a boolean \"isCommitted\".  Then you could treat an index that only has a segments_1 file set to \"isCommitted\"=false as a non-existant index.   ",
            "author": "Geoff Cooney",
            "id": "comment-13670604"
        },
        {
            "date": "2013-07-23T18:44:54+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 ",
            "author": "Steve Rowe",
            "id": "comment-13717096"
        },
        {
            "date": "2014-04-16T12:54:45+0000",
            "content": "Move issue to Lucene 4.9. ",
            "author": "Uwe Schindler",
            "id": "comment-13970867"
        }
    ]
}