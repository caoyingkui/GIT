{
    "id": "SOLR-9127",
    "title": "XLSX response writer - do we want it?",
    "details": {
        "components": [
            "Response Writers"
        ],
        "type": "New Feature",
        "labels": "",
        "fix_versions": [
            "6.3"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "I recently open sourced an XLSX response writer based on solr 4.6 and apache poi.\n\nhttps://github.com/desultir/SolrXLSXResponseWriter\n\nIs this something the community would be interested in bringing into the solr codebase? I'm willing to put the work into porting it to solr5 and solr6 if the community is interested, happy to leave it as a plugin otherwise.",
    "attachments": {
        "SOLR-9127.patch": "https://issues.apache.org/jira/secure/attachment/12824334/SOLR-9127.patch",
        "9127-xlsxresponsewriter.patch": "https://issues.apache.org/jira/secure/attachment/12827123/9127-xlsxresponsewriter.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-05-18T10:02:44+0000",
            "author": "Noble Paul",
            "content": "How can we comment unless we know what it brings to the table. How about an example? ",
            "id": "comment-15288714"
        },
        {
            "date": "2016-05-18T11:44:07+0000",
            "author": "Christine Poerschke",
            "content": "Hello Tony Moriarty - thanks for proposing an additional response writer.\n\nI see that Apache POI is described as \"the Java API for Microsoft Documents\". Would be good to have a small example here in this ticket, perhaps similar to the https://cwiki.apache.org/confluence/display/solr/Response+Writers docs?\n\nIn terms of code, the README says\n\n... Edit the map in NiceMetadataNames.java to provide the XLSXResponseWriter a lookup for translating your ugly metadatanames into user friendly text strings. ...\n\nWondering what that might look like as a non-plugin e.g.\n\n\twould the mappings be configured for the response writer (similar to how XSLTResponseWriter configures a xsltCacheLifetimeSeconds setting)?\n\twould the mappings be parameters to the response writer (similar to how CSVResponseWriter takes csv.separator and other parameters)?\n\tsomething else?\n\n ",
            "id": "comment-15288835"
        },
        {
            "date": "2016-05-19T00:12:01+0000",
            "author": "Tony Moriarty",
            "content": "Sorry - I definitely should have provided more information. The functionality in many ways mirrors CSVResponseWriter so i've based my example on that.\n\nThe XLSX response writer returns a list of documents in XLSX format. Other information that would normally be included in a response, such as facet information, is excluded.\nThe XSLX response writer supports multi-valued fields, as well as pseudo-fields and prints a header row with \"nice\" names for each field.\n\nColumn Width and mapping of metadata field names to nice names is configured for the responsewriter; this can be done in the solrconfig (I will implement this).\n\n<queryResponseWriter name=\"xlsx\"\n                     class=\"org.apache.solr.request.XLSXResponseWriter\">\n  <lst name=\"columnWidths\">\n      <int name=\"id\">8</int>\n      <int name=\"name\">128</int>\n      ...\n  </lst>\n  <lst name=\"columnNames\">\n     <str name=\"id\">Product ID</str>\n     <str name=\"name\">Product Name</str>\n     ...\n  </lst>\n</queryResponseWriter>\n\nThe list of fields to be output is a parameter to the response writer, passed through by the requesthandler ie\nhttp://localhost:8983/solr/techproducts/select?q=ipod&fl=id,cat,name,popularity,price,score&wt=xlsx returns an XLSX file; screenshot here:\nhttp://i.imgur.com/PA6ihPy.png\n\nFormatting is currently fixed but POI provides many options - a future extension could be to expose this in responsewriter config.\n\nThis will create a dependency on newest stable POI (3.14)\nhttps://poi.apache.org/ ",
            "id": "comment-15290131"
        },
        {
            "date": "2016-05-19T09:49:58+0000",
            "author": "Christine Poerschke",
            "content": "... create a dependency on newest stable POI (3.14)\n\nLooks like lucene/ivy-versions.properties currently has a dependency on 3.11 org.apache.poi version.\n\n\norg.apache.poi.version = 3.11\n/org.apache.poi/poi = ${org.apache.poi.version}\n/org.apache.poi/poi-ooxml = ${org.apache.poi.version}\n/org.apache.poi/poi-ooxml-schemas = ${org.apache.poi.version}\n/org.apache.poi/poi-scratchpad = ${org.apache.poi.version}\n\n ",
            "id": "comment-15290819"
        },
        {
            "date": "2016-05-19T10:22:11+0000",
            "author": "Noble Paul",
            "content": "If this does not need any extra dependencies it is not a problem.  ",
            "id": "comment-15290853"
        },
        {
            "date": "2016-05-20T05:59:17+0000",
            "author": "Tony Moriarty",
            "content": "fantastic; i've forked from master on github and i'll get to work ",
            "id": "comment-15292768"
        },
        {
            "date": "2016-05-20T09:17:20+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I don't really see why this needs to be part of Solr, but rather belongs as part of the client application? I mean - end-users wearing suits (read: Excel-folks) should not need to query the Solr API directly anyway, should they? \n\nExcel can perfectly well open CSV files too, so if we provide a parameter to let the CSV writer add headers Content-type: text/csv and Content-Disposition: attachment; filename=\"solr-results.csv\" Excel users could have the CSV file open directly in Excel, and provide other column names using the already existing feature fl=Product_ID:id,Product_Name:name....\n\nI imagine that if we start adding spreadsheet formatting options to such a component, there will be no end to the flow of wishes people have wrt colors, fonts, formatting etc. And what about OpenOffice users, not to mention Apple Numbers? They too need their own WT, don't they? Not to mention those who prefer a nice Word table....\nBecause of this, for me it is -0 to include in Solr and +1 to leave it as a 3rd party plugin. Other committers may see it differently...\n\nAside from that, wrt config, would it make sense to allow overriding settings per request, something like f.id.xlsx.colname=Product ID&f.name.xlsx.colname=Product Name&f.id.xlsx.colwidth=8&f.name.xlsx.colwidth=128? ",
            "id": "comment-15293055"
        },
        {
            "date": "2016-05-20T09:21:12+0000",
            "author": "Noble Paul",
            "content": "If the component is 100 lines of code, it is not going to add too much to the binaries that we ship. So, it's no big deal.  ",
            "id": "comment-15293061"
        },
        {
            "date": "2016-05-20T09:29:57+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "I'm not worried about bytes, but about bloat and maintenance burden. I can see the utility for the component for development purposes, where you could manually export a result set to Excel for pretty browsing (you could achieve a similar goal with a Velocity or XSLT template or CSV wt btw), but I don't see how excel fits in production on the REST API end \u2013 machines talk to Solr, not end users... ",
            "id": "comment-15293071"
        },
        {
            "date": "2016-05-20T09:39:21+0000",
            "author": "Noble Paul",
            "content": "I can see the utility for the component for development purposes, where you could manually export a result set to Excel for pretty browsing \n\nWe can't ask users to jump through hoops to achieve mundane tasks. Most of the Excel users would not be inclined to write code  \n\nmachines talk to Solr, not end users.\n\nI'm not sure about that. A lot of users use Solr for data analysis. Excel is a great tool for that.\n\nI'm not worried about bytes, but about bloat and maintenance burden.\n\nThe response writers are very small components. Even if there is a bug in the component it is not going to impact the rest of the system\n\n\nI may not use this , but I can totally see how it could be very useful to users.  ",
            "id": "comment-15293082"
        },
        {
            "date": "2016-05-20T09:42:39+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Ok, don't let me stand in the way of progress  ",
            "id": "comment-15293085"
        },
        {
            "date": "2016-08-01T04:57:09+0000",
            "author": "Tony Moriarty",
            "content": "Apologies for going silent on this; life got in the way. In my fork of github master i've implemented XLSXResponseWriter, and TestXLSXResponseWriter. All unit tests are passing and output looks good, i'll generate a pull request in a day or two ",
            "id": "comment-15401526"
        },
        {
            "date": "2016-08-01T05:27:25+0000",
            "author": "ASF GitHub Bot",
            "content": "GitHub user desultir opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/59\n\n    SOLR-9127: XLSXResponseWriter\n\n    https://issues.apache.org/jira/browse/SOLR-9127\n\n    New response writer and test case (TextXLSXResponseWriter)\n\n    passes ant precommit \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/desultir/lucene-solr master\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/59.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #59\n\n\ncommit 0cb68f3e81a9e9871fa3de216baa06910965e3d5\nAuthor: desultir <desultir@users.noreply.github.com>\nDate:   2016-06-28T06:41:28Z\n\n    Merge pull request #1 from apache/master\n\n    Pull updates from SOLR head\n\ncommit 30baf43a6916cf86d3f41e154a5bcd941ad627b8\nAuthor: Tony Moriarty <tdm@qti.qualcomm.com>\nDate:   2016-06-28T06:41:59Z\n\n    initial changes to support XLSX - POI dependency and initial commit of responsewriter\n\ncommit 9df823bca7d454037a4b46dcb9aa56bbdeda84e1\nAuthor: Tony Moriarty <tdm@qti.qualcomm.com>\nDate:   2016-06-28T06:42:33Z\n\n    Merge branch 'master' of github.com:desultir/lucene-solr\n\ncommit 86d922854f9b14ec79fb8d5d7fd8c6bbb4c96b60\nAuthor: Tony Moriarty <tdm@qti.qualcomm.com>\nDate:   2016-06-29T06:19:01Z\n\n    further patching for SOLR against 6.0 master\n\ncommit 57c60e9f3e654c94dd60a823d02de36fbd07cc7d\nAuthor: desultir <desultir@users.noreply.github.com>\nDate:   2016-06-29T06:29:31Z\n\n    Merge pull request #2 from apache/master\n\n    pull more changes from solr head\n\ncommit 4db64aeddb5458689fab1475248c29118b064f95\nAuthor: Tony Moriarty <tdm@qti.qualcomm.com>\nDate:   2016-07-14T05:11:21Z\n\n    add missing dependency on xml-beans (already in lucene) and initial running version of test\n\ncommit 4ed97f03e6a52aaac12c7ecbb5ce770d96f53ec7\nAuthor: Tony Moriarty <tdm@qti.qualcomm.com>\nDate:   2016-08-01T04:36:22Z\n\n    take column widths/metanames from solrconfig; pull in relevant tests from TestCSVResponseWriter\n\ncommit ce035ce77f8beb71cb059e9e097f8798c9eccbc5\nAuthor: desultir <desultir@users.noreply.github.com>\nDate:   2016-08-01T04:41:26Z\n\n    Merge pull request #3 from apache/master\n\n    pull from upstream finally\n\ncommit 4fed3ab1591fd69073e80c4b576b996f44698b33\nAuthor: Tony Moriarty <tdm@qti.qualcomm.com>\nDate:   2016-08-01T04:48:52Z\n\n    remove unused write-to-disk of xlsx output\n\ncommit 30c93acfb5f1d22c6f0fcf7640946385957d270d\nAuthor: Tony Moriarty <tdm@qti.qualcomm.com>\nDate:   2016-08-01T05:00:17Z\n\n    AL header on new file\n\ncommit 8edcb84b482e3f9c5fa80cc8984d8a6271d6ceda\nAuthor: Tony Moriarty <tdm@qti.qualcomm.com>\nDate:   2016-08-01T05:15:24Z\n\n    remove unused imports\n\n ",
            "id": "comment-15401541"
        },
        {
            "date": "2016-08-01T05:28:42+0000",
            "author": "Tony Moriarty",
            "content": "Quicker than expected: here's pull request 59\nhttps://github.com/apache/lucene-solr/pull/59\n\nAdded a dependency from SOLR onto org.apache.poi and org.apache.xmlbeans - both of which Lucene already depended upon ",
            "id": "comment-15401542"
        },
        {
            "date": "2016-08-01T14:24:33+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "This patch adds POI to solr core, inside the solr-webapp, while the existing poi dependency was only in contrib/extraction. I'm not happy about this code in Solr at all, but at least make it be a new contrib instead of in core!\n\nThe wt adds 694 lines of Java code and 597 lines of test config (that is quite much more than the 100-lines you were talking about Noble Paul)\nTony Moriarty, you can easily shrink solrconfig-xlsxresponsewriter.xml to just the few lines needed to setup the wt, delete the rest and use defaults.\n\nThinking about the configuration where you currently allow \"columnWidths\" and \"columnNames\". Instead of going down that route, adding new config such as color, height, font, borders etc in the future, why not simply take a file argument to a template.xlsx file, and let the first row be column headers, the second row be solr field names, and just clone the sheet and keep all other formatting? ",
            "id": "comment-15402108"
        },
        {
            "date": "2016-08-01T14:43:31+0000",
            "author": "David Smiley",
            "content": "This patch adds POI to solr core, inside the solr-webapp, while the existing poi dependency was only in contrib/extraction.\n\nAdding a dependency on POI to solr-core is going too far, IMO.  I was with Jan's \"-0\" vote on this but that was before seeing POI.  Do we really need POI?  Is there some XML we can emit for this feature instead?  https://en.wikipedia.org/wiki/Office_Open_XML\n\nAlternatively, add this POI based WT to the extraction contrib, and maybe add some hook or another to get the WT registered automatically if it's on the classpath. ",
            "id": "comment-15402145"
        },
        {
            "date": "2016-08-01T14:56:40+0000",
            "author": "Noble Paul",
            "content": "This patch adds POI to solr core, inside the solr-webapp, while the existing poi dependency was only in contrib/extraction.\n\nAdding POI dependency to solr core is not advisable. It should be OK to add this to contrib/extraction  ",
            "id": "comment-15402181"
        },
        {
            "date": "2016-08-01T15:13:48+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Putting it in extraction just because they share one jar is bad practice, it breaks the cohesion of that contrib. It should be a separate contrib, if any.\n\nI would (again) propose for this to be published as a jar plugin plugin in its own GitHub repo or elsewhere outside the ASF. Then, if it gets very popular and people for some reason want it into the core product, then we could have another discussion. This is the same adoption pattern that e.g. Solr Cell once took. ",
            "id": "comment-15402222"
        },
        {
            "date": "2016-08-01T16:01:49+0000",
            "author": "Noble Paul",
            "content": "this to be published as a jar plugin plugin in its own GitHub repo or elsewhere outside the ASF\n\nThat's useless for users. It won't be a part of the distro. There won't be any documentation in our ref guide. There will be no tickets opened in this JIRA.  ",
            "id": "comment-15402296"
        },
        {
            "date": "2016-08-01T23:52:42+0000",
            "author": "Tony Moriarty",
            "content": "Thanks for reviewing the PR everyone. So from your feedback what i propose as next steps are:\n\n\n\tremove from core; add to the extraction contrib\n\tshrink solrconfig-xlsxresponsewriter.xml to just the few lines needed to setup the wt, delete the rest and use defaults, trim some bloat from the two java files\n\tadd a hook to get the WT registered automatically if jar on the classpath\n\n\n\nAs to the self-hosted JAR plugin option, that's been available (SOLR4.6 version but with an offer to update if there was interest) on my github for over a year now. A single person found it and that was after I started this thread.\n\nHappy to go with the consensus though; if it's decided that's the way forward i can repackage this SOLR6 compliant version. ",
            "id": "comment-15403055"
        },
        {
            "date": "2016-08-18T06:58:43+0000",
            "author": "Tony Moriarty",
            "content": "Hi everyone, \n\nI'm coming along with my solr contrib (within solrcell) version of XLSXResponseWriter. One issue i'm having is with David Smiley's suggestion to \"add some hook or another to get the WT registered automatically if it's on the classpath\"\n\nThe two ways i know of registering a QueryResponseWriter are as part of DEFAULT_RESPONSE_WRITERS in core/../solr/core/SolrCore.java or an entry in solrconfig.xml.\n\nIs there code which is executed automatically which is perhaps SolrCoreAware when a contrib is on the classpath or is it all reliant on the contrib being imported in solrconfig.xml? If the latter then i may have to let this point go. ",
            "id": "comment-15425992"
        },
        {
            "date": "2016-08-18T07:01:45+0000",
            "author": "Noble Paul",
            "content": "We can hardcode these things in the solrcore code ",
            "id": "comment-15425997"
        },
        {
            "date": "2016-08-18T11:08:22+0000",
            "author": "Tony Moriarty",
            "content": "OK, in that case my PR is ready for perusal again. Changes:\n\n\tremoved from core; add to the extraction contrib\n\tremoved solrconfig-xlsxresponsewriter.xml; added just the few lines needed to setup the wt to the extraction solrconfig.xml as a non-default writer\n\tTrimmed some surplus tests from the test file\n\n\n\nIt stands at 702 lines added now of which 419 are the writer itself. ",
            "id": "comment-15426273"
        },
        {
            "date": "2016-08-18T11:28:49+0000",
            "author": "Noble Paul",
            "content": "added the logic of automatically loading xlsx writer automatically if available in classpath\n\nI think it should be possible to pass the columnNames and {{columnWidths}}as request parameters. Then, the user never needs to configure anything\n\nexample: columnWidth.id=3&columnName.id=ID ",
            "id": "comment-15426291"
        },
        {
            "date": "2016-08-19T00:50:10+0000",
            "author": "Tony Moriarty",
            "content": "Thanks for the patch Noble Paul, I'll integrate it and also add columnNames and columnWidths as request parameters by field ",
            "id": "comment-15427419"
        },
        {
            "date": "2016-08-23T01:00:26+0000",
            "author": "Tony Moriarty",
            "content": "OK integrated. PR ready for review again. Update to the documentation (changed the solrconfig attribute names too):\n\nColumn Width and mapping of metadata field names to nice names is configured for the responsewriter; this can be done in the solrconfig or through request params colname.foo and colwidth.foo.\n\n<queryResponseWriter name=\"xlsx\"\nclass=\"org.apache.solr.request.XLSXResponseWriter\">\n<lst name=\"colwidths\">\n<int name=\"id\">8</int>\n<int name=\"name\">128</int>\n...\n</lst>\n<lst name=\"colnames\">\n<str name=\"id\">Product ID</str>\n<str name=\"name\">Product Name</str>\n...\n</lst>\n</queryResponseWriter>\n\n\nBut on review i've noticed Jan's older suggestion of using field request parameters ie \"f.id.xlsx.colname=Product ID\" to do the renaming. Should I update it to use field params?  ",
            "id": "comment-15431899"
        },
        {
            "date": "2016-08-25T07:12:10+0000",
            "author": "Noble Paul",
            "content": "let's get rid of the init params altogether. The rest looks fine. I don't think  any ResponseWriter uses init params ",
            "id": "comment-15436394"
        },
        {
            "date": "2016-09-05T07:38:33+0000",
            "author": "Tony Moriarty",
            "content": "OK, i stripped out support for solrconfig init params and updated the tests accordingly. The PR is ready for review again\n\nAn additional note for the documentation that came up during testing:\nThe maximum value for a colwidth, as per poi limitations, is 255 ",
            "id": "comment-15464352"
        },
        {
            "date": "2016-09-05T17:22:27+0000",
            "author": "Noble Paul",
            "content": "where is the pull request? if possible attach a patch ",
            "id": "comment-15465446"
        },
        {
            "date": "2016-09-06T04:09:09+0000",
            "author": "Tony Moriarty",
            "content": "Apologies for not being clear: it's the same PR as originally linked in the thread at:\nhttps://github.com/apache/lucene-solr/pull/59\n\nThe patch is noisy as it involves commits which were later undone insofar as i added things to solr core and then removed:\nhttps://patch-diff.githubusercontent.com/raw/apache/lucene-solr/pull/59.patch\n\nWill this noisy patch be an issue? ",
            "id": "comment-15466339"
        },
        {
            "date": "2016-09-06T04:59:20+0000",
            "author": "Noble Paul",
            "content": "yes. it's noisy and I don't know what is relevant and what is not. attach a real patch file to this ticket.  ",
            "id": "comment-15466416"
        },
        {
            "date": "2016-09-06T05:36:36+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user desultir closed the pull request at:\n\n    https://github.com/apache/lucene-solr/pull/59 ",
            "id": "comment-15466481"
        },
        {
            "date": "2016-09-06T05:36:36+0000",
            "author": "ASF GitHub Bot",
            "content": "Github user desultir commented on the issue:\n\n    https://github.com/apache/lucene-solr/pull/59\n\n    closing to issue cleaner PR ",
            "id": "comment-15466482"
        },
        {
            "date": "2016-09-06T05:40:54+0000",
            "author": "ASF GitHub Bot",
            "content": "GitHub user desultir opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/77\n\n    SOLR-9127 XlsxResponseWriter\n\n    https://issues.apache.org/jira/browse/SOLR-9127\n\n    New response writer and test case (TextXLSXResponseWriter)\n\n    passes ant precommit\n    all work squashed into one commit for easy perusal\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/desultir/lucene-solr xlsx\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/77.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #77\n\n\ncommit 05363c347bb39efb24919eeb474280ca0edff753\nAuthor: Tony Moriarty <tdm@qti.qualcomm.com>\nDate:   2016-09-06T05:34:46Z\n\n    full squashed patch\n\n ",
            "id": "comment-15466488"
        },
        {
            "date": "2016-09-06T05:43:42+0000",
            "author": "Tony Moriarty",
            "content": "added https://issues.apache.org/jira/secure/attachment/12827123/9127-xlsxresponsewriter.patch\nfull patch as per PR \nhttps://github.com/apache/lucene-solr/pull/77\n\nreplaces first patch (SOLR-9127.patch)\n\nall commits squashed into one for easy review ",
            "id": "comment-15466493"
        },
        {
            "date": "2016-09-06T07:52:44+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1a61fb68588d489dfab966dc3e3a894cae7d5b5f in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1a61fb6 ]\n\nSOLR-9127: Excel workbook (.xlsx) response writer. use 'wt=xlsx' ",
            "id": "comment-15466740"
        },
        {
            "date": "2016-09-06T07:54:01+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 932c436d07dd3fd2cef0f1cb8319d5953433687e in lucene-solr's branch refs/heads/branch_6x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=932c436 ]\n\nSOLR-9127: Excel workbook (.xlsx) response writer. use 'wt=xlsx' ",
            "id": "comment-15466743"
        },
        {
            "date": "2016-09-07T09:57:04+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1a61fb68588d489dfab966dc3e3a894cae7d5b5f in lucene-solr's branch refs/heads/apiv2 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1a61fb6 ]\n\nSOLR-9127: Excel workbook (.xlsx) response writer. use 'wt=xlsx' ",
            "id": "comment-15470192"
        },
        {
            "date": "2016-11-04T18:48:18+0000",
            "author": "Cassandra Targett",
            "content": "I'm trying to add documentation for this to the Solr Ref Guide, but am not able to get it to work (I don't think). When I add 'wt=xlsx' to a request, the response looks exactly like the default xml. Maybe that's fine - I know XLSX is XML - but it would seem it should be different. I tried to add the example snippet above to solrconfig.xml, but got errors when I reloaded the core. I played out with the classname and still didn't work.\n\nSo, what config does someone need to use this? If it's supposed to work without any config, what is the response supposed to look like? ",
            "id": "comment-15637306"
        },
        {
            "date": "2016-11-04T20:04:29+0000",
            "author": "David Smiley",
            "content": "Quick comment: you need Tika on the classpath, well POI specifically.  That's the main limitation/gotcha. ",
            "id": "comment-15637519"
        },
        {
            "date": "2016-11-07T14:43:36+0000",
            "author": "Noble Paul",
            "content": "It requires all of extraction/lib/*.jar and  dist/solr-cell-6.3.0.jar in the server classpath. it's not enough to have it in the core classpath. ",
            "id": "comment-15644363"
        },
        {
            "date": "2016-11-09T08:36:56+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Closing after 6.3.0 release. ",
            "id": "comment-15650199"
        }
    ]
}