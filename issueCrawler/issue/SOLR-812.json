{
    "id": "SOLR-812",
    "title": "JDBC optimizations: setReadOnly, setMaxRows",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "I'm looking at the DataImport code as of Solr v1.3 and using it with Postgres and very large data sets and there some improvement suggestions I have.\n\n1. call setReadOnly(true) on the connection.  DIH doesn't change the data so this is obvious.\n\n2. call setAutoCommit(false) on the connection.   (this is needed by Postgres to ensure that the fetchSize hint actually works)\n\n3. call setMaxRows(X) on the statement which is to be used when the dataimport.jsp debugger is only grabbing X rows.  fetchSize is just a hint and alone it isn't sufficient.",
    "attachments": {
        "SOLR-812.patch": "https://issues.apache.org/jira/secure/attachment/12395831/SOLR-812.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Noble Paul",
            "id": "comment-12640463",
            "date": "2008-10-17T08:05:20+0000",
            "content": "1. call setReadOnly(true) on the connection. DIH doesn't change the data so this is obvious.\n2. call setAutoCommit(false) on the connection. (this is needed by Postgres to ensure that the fetchSize hint actually works)\n\nActually JdbcDataSource does allow user to pass any query (even update or delete). So if we set it by default . Maybe we should add  attributes readOnly and autoCommit to JdbcDataSource . It is possible to make it on by default . I am just wondering if users are already using it to write also "
        },
        {
            "author": "Glen Newton",
            "id": "comment-12648673",
            "date": "2008-11-18T17:51:34+0000",
            "content": "You might also think about setting \n setTransactionIsolation(Connection.TRANSACTION_READ_UNCOMMITTED) \n   (see:  http://media.datadirect.com/download/docs/ddxquery/allddxq/reference/wwhelp/wwhimpl/common/html/wwhelp.htm?context=Reference&file=grammarwrite7.html)\n\nOnly DB2 appears to support TRANSACTION_NONE\n\n\u2013\n\nWhile from the previous comment JdbcDataSource it appears not to exclusively be a \"source\", you should still consider also setting:\n setHoldability(ResultSet.CLOSE_CURSORS_AT_COMMIT)\n\nIt may reduce the driver resource usage.\n\nCertainly exposing these and the above in JdbcDataSource via properties would be more flexible to users. But sensible defaults should be set for read-only. "
        },
        {
            "author": "Glen Newton",
            "id": "comment-12648685",
            "date": "2008-11-18T18:13:37+0000",
            "content": "This is a related issue, but since I just got involved with Solr yesterday and got a jira account today, I am reluctant to make a career-limiting error!  \n\nIf it is indeed valid, perhaps someone else can make it a full-fledged separate issue!  \n\nPerusing: JdbcDataSource  @version $Id: JdbcDataSource.java 696539 2008-09-18 02:16:26Z ryan\nIssue: MySQL fetchSize driver bug\n\nBoth my experience and according to:  http://benjchristensen.wordpress.com/2008/05/27/mysql-jdbc-memory-usage-on-large-resultset/\n\nMySQL does not handle properly any fetchSize > Integer.MIN_VALUE, and the entire ResultSet is transfered and loaded into memory, which for large ResultSets can result in an out of memory.\n\nIn JdbcDataSource.java:\n 175:  stmt.setFetchSize(batchSize);\n\nwhere \n 57:  private int batchSize = FETCH_SIZE;\n\nand \n 326:    private static final int FETCH_SIZE = 500;\n\nIs is, this code will invoke this bug for MySQL for large ResultSets. \nEven for smaller ResultSets that do not cause an out of memory error, having all the ResultSet in memory will unnecessarily use up memory.\n\nThe work around for this MySQL issue is:\n  stmt.setFetchSize(Integer.MIN_VALUE);\n\nFrom the blog entry, see also:\n\n\thttp://javaquirks.blogspot.com/2007/12/mysql-streaming-result-set.html\n\thttp://dev.mysql.com/doc/refman/5.0/en/connector-j-reference-implementation-notes.html\n\n\n "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12648724",
            "date": "2008-11-18T19:49:25+0000",
            "content": "Thanks for going through this Glen. This bug and a workaround is documented in the FAQ page.\n\nhttp://wiki.apache.org/solr/DataImportHandlerFaq "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12655615",
            "date": "2008-12-11T11:58:51+0000",
            "content": "Certainly exposing these and the above in JdbcDataSource via properties would be more flexible to users. But sensible defaults should be set for read-only.\n\nAny extra attributes that you specify to the <dataSource> element are passed on to the DriverManager in a Properties object. So if your driver supports url parameters for these optimizations, you can use them right now. However, each driver has a different way of specifying this configuration, so we should support a way of making them configurable.\n\nI'm not very comfortable with making changes to the default configuration for the sake of backwards-compatibility. But we should make these possible and document their usage. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12655626",
            "date": "2008-12-11T12:35:36+0000",
            "content": "Changes\n\n\tSupports the following through configuration (extra attributes in <dataSource> element or solrconfig.xml):\n\t\n\t\treadOnly\n\t\tautoCommit\n\t\ttransactionIsolation\n\t\tholdability\n\t\tmaxRows\n\t\n\t\n\tIf readOnly is specified the following are added by default (but they will be overridden if specified explicitly):\n\nsetAutoCommit(true);\nsetTransactionIsolation(Connection.TRANSACTION_READ_UNCOMMITTED);\nsetHoldability(ResultSet.CLOSE_CURSORS_AT_COMMIT);\n\n\n\tIf 'start' and 'rows' are specified as request parameters, then we call setMaxRows(start + rows) automatically overriding value specified in configuration\n\tNo changes are made unless configuration is specified, so it is backwards compatible.\n\n\n\nI'd like to commit this in a day or two. We also need to add this documentation to the wiki page.\n "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12656309",
            "date": "2008-12-13T17:27:27+0000",
            "content": "Fixing a bug with the way maxRows is calculated. It was not being set if 'rows' is specified but 'start' is not. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12656313",
            "date": "2008-12-13T17:39:34+0000",
            "content": "Committed revision 726241.\n\nJust to re-iterate, there are no changes in default configuration except that maxRows is set automatically if user specifies 'start' and 'rows' parameter. Read-only mode has to be enabled explictly and then sane defaults for auto-commit, isolation and holdability are added. We can add readOnly flag to our example configurations on the wiki.\n\nThanks David and Glen! "
        },
        {
            "author": "Martin Davidsson",
            "id": "comment-12675145",
            "date": "2009-02-19T21:50:56+0000",
            "content": "I'm running postgres as well and I finally got rid of my memory issues with this data source configuration:\n\n<dataSource type=\"JdbcDataSource\" driver=\"org.postgresql.Driver\" url=\"jdbc:postgresql://host/db\" user=\"user\" password=\"password\" readOnly=\"true\" autoCommit=\"false\"  transactionIsolation=\"TRANSACTION_READ_COMMITTED\"  holdability=\"CLOSE_CURSORS_AT_COMMIT\"/>\n\nI'm using v8.3 of postgres server and JDBC driver. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12675227",
            "date": "2009-02-20T03:47:26+0000",
            "content": "I'm running postgres as well and I finally got rid of my memory issues with this data source configuration: \n\nThanks for the information Martin. Can you please add this to the DataImportHandlerFaq wiki page?\n\nhttp://wiki.apache.org/solr/DataImportHandlerFaq "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775553",
            "date": "2009-11-10T15:51:49+0000",
            "content": "Bulk close for Solr 1.4 "
        }
    ]
}