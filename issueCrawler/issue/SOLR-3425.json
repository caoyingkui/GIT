{
    "id": "SOLR-3425",
    "title": "CloudSolrServer can't create cores when using the zkHost based constructor",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.1"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "When programmatically creating cores with a running SolrCloud instance the CloudSolrServer uses the slices nodes information to feed the underlying LBHttpSolrServer so it fails to create cores as there aren't any slices for any new collection (as it's still to be created).\nThis happens when using the CloudSolrServer constructor which takes the ZK host as only parameter while it can be avoided by using the constructor which also takes the list of Solr URLs and the underlying LBHttpSolrServer is actually used for making the core creation request.\nHowever it'd be good to use the ZK host live nodes information to automatically issue a core creation command on one of the underlying Solr hosts without having to specify the full list of URLs beforehand.\n\nThe scenario is when one wants to create a collection with N shards so the client sends N core creation requests for the same collection thus the SolrCloud stuff should just take care of choosing the host where to issue the core creation request and update the cluster state.",
    "attachments": {
        "SOLR-3425-test.patch": "https://issues.apache.org/jira/secure/attachment/12525167/SOLR-3425-test.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Tommaso Teofili",
            "id": "comment-13265797",
            "date": "2012-05-01T13:32:05+0000",
            "content": "test case: setup a 2 nodes cluster as example A in SolrCloud wiki page (http://wiki.apache.org/solr/SolrCloud) and run the attached test.\nThe testLBServerCoreCreation() test should pass while the testZKHostCoreCreation() should fail "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13265805",
            "date": "2012-05-01T13:48:45+0000",
            "content": "I'd like to improve collection creation outside of Solrj as well - but I think it also makes sense to improve this here as well. Do you have a proposal yet? Perhaps we should just add new collection management api? Trying to wrap this stuff in a SolrCore's world gets kind of ugly. "
        },
        {
            "author": "Tommaso Teofili",
            "id": "comment-13265841",
            "date": "2012-05-01T14:44:04+0000",
            "content": "Perhaps we should just add new collection management api?\n\nI think so, that would also help SolrCloud users understand the mind shift from cores to collections.\n\nFor this particular thing the dummy fix (not tested widely but still all the tests pass) could be to add the following lines for filling the urlList variable:\n\n    // enable automatic distributed core creation\n    if (request instanceof CoreAdminRequest.Create) {\n      for (String liveNodeHost : zkStateReader.getCloudState().getLiveNodes()) {\n        urlList.add(new StringBuilder(\"http://\").append(liveNodeHost.replaceAll(\"_solr\", \"/solr/\")).toString());\n      }\n    }\n    else {\n      for (Slice slice : slices.values()) {\n    ...\n\n\n\nhowever i don't like it very much. I think adding proper APIs would be just better. "
        },
        {
            "author": "Tommaso Teofili",
            "id": "comment-13281055",
            "date": "2012-05-22T15:53:11+0000",
            "content": "Mark, I'd commit this quick fix for now so that we solve the bug and maybe we can start discussing about a new collection management API on a different issue. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13412196",
            "date": "2012-07-11T22:26:18+0000",
            "content": "bulk fixing the version info for 4.0-ALPHA and 4.0 all affected issues have \"hoss20120711-bulk-40-change\" in comment "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13429795",
            "date": "2012-08-07T03:43:07+0000",
            "content": "rmuir20120906-bulk-40-change "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13457905",
            "date": "2012-09-18T16:11:15+0000",
            "content": "Mark/Tommaso, can you guys look at this issue? I notice it hasn't been touched in months. is it going to make 4.0? "
        },
        {
            "author": "Tommaso Teofili",
            "id": "comment-13458534",
            "date": "2012-09-19T09:56:38+0000",
            "content": "I had a simple patch for making this work, however I'm not too sure what we need to do here (it made sense before but with the new Collections API it may be not that urgent).\nMaybe we can defer this and get advantage of SOLR-3488 as soon as that's finished. "
        },
        {
            "author": "Per Steffensen",
            "id": "comment-13509769",
            "date": "2012-12-04T14:42:36+0000",
            "content": "You talk about using CloudSolrServer and/or LBHttpSolrServer for access to Core Admin API. This a little strange because:\n\n\tA Core Admin API request should be sent to a specific Solr node in order for you to control where the shard is created (or removed from)\n\tCloudSolrServer and LBHttpSolrServer are all about sending requests that can end up going to a (randmon) node among several nodes\nWith the quick-fix code above (Tommaso Teofili 01/May/12) you will end up having your shard created on a random node among all live nodes - it is very rarely want you want.\n\n\n\nSo as long as we are talking about accessing Core Admin API you probably always want to use HttpSolrServer, which is aimed a sending the request to a specific node.\n\nBut when talking about creating an entire collection consisting of many shards, it is certainly meaningful to use CloudSolrServer. To create entire collections (without having to create each shard yourself using the Core Admin API) we now have the Collection API in 4.0.0. The Collection API can be used through CloudSolrServer, except...\n\n\tYou cant create your first collection through CloudSolrServer\n\tYou cant create a collection through a CloudSolrServer, where default-collection is the collection you want to create\n\tetc\n\n\n\n...basically because CloudSolrServer wants an existing collection (pointed to by its default-collection or a collection-name provided in the actual request) before it can do anything.\nThis will be fixed with SOLR-4140, but is not in 4.0.0.\n\nOther things not in Collection API of 4.0.0\n\n\tYou cant have more than one shard per collection on a single node - fixed in SOLR-4114\n\tYou cant specify which Solr nodes the shards for a new collection is allowed to be spread across - they are just spread across all live Solr nodes - fixed in SOLR-4120\n\n\n\nPlease state if you still believe something is missing or unclear. Or else you might want to state that your \"problems\" are solved with the 4.0.0 Collection API (maybe plus one or more of SOLR-4140, SOLR-4114 and SOLR-4120 which will hopefully be in \"the next release\") by closing this issue SOLR-3425 "
        },
        {
            "author": "Tommaso Teofili",
            "id": "comment-13509793",
            "date": "2012-12-04T15:26:10+0000",
            "content": "this issue was opened before the Collections API was designed, so basically things have changed along time but apart from that as long as there's SOLR-4140 the use case I opened this for is safe, therefore I'll close it.\nThanks Per Steffensen for helping out. "
        }
    ]
}