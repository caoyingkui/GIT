{
    "id": "LUCENE-1117",
    "title": "Intermittent thread safety issue with EnwikiDocMaker",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "modules/benchmark"
        ],
        "type": "Bug",
        "fix_versions": [
            "2.3"
        ],
        "affect_versions": "2.2,                                            2.3",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Intermittent thread safety issue with EnwikiDocMaker\n\nWhen I run the conf/wikipediaOneRound.alg, sometimes it gets started\nOK, other times (about 1/3rd the time) I see this:\n\n     Exception in thread \"Thread-0\" java.lang.RuntimeException: java.io.IOException: Bad file descriptor\n     \tat org.apache.lucene.benchmark.byTask.feeds.EnwikiDocMaker$Parser.run(EnwikiDocMaker.java:76)\n     \tat java.lang.Thread.run(Thread.java:595)\n     Caused by: java.io.IOException: Bad file descriptor\n     \tat java.io.FileInputStream.readBytes(Native Method)\n     \tat java.io.FileInputStream.read(FileInputStream.java:194)\n     \tat org.apache.xerces.impl.XMLEntityManager$RewindableInputStream.read(Unknown Source)\n     \tat org.apache.xerces.impl.io.UTF8Reader.read(Unknown Source)\n     \tat org.apache.xerces.impl.XMLEntityScanner.load(Unknown Source)\n     \tat org.apache.xerces.impl.XMLEntityScanner.scanQName(Unknown Source)\n     \tat org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanStartElement(Unknown Source)\n     \tat org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)\n     \tat org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)\n     \tat org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n     \tat org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n     \tat org.apache.xerces.parsers.XMLParser.parse(Unknown Source)\n     \tat org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)\n     \tat org.apache.lucene.benchmark.byTask.feeds.EnwikiDocMaker$Parser.run(EnwikiDocMaker.java:60)\n     \t... 1 more\n\nThe problem is that the thread that pulls the XML docs is started as\nsoon as EnwikiDocMaker class is instantiated.  When it's started, it\nuses the fileIS (FileInputStream) to feed the XML Parser.  But,\nopenFile is actually called twice on starting the alg, if you use any\ntask deriving from ResetInputsTask, which closes the original fileIS\nthat the XML parser may be using.\n\nI changed the thread to instead start on-demand the first time next()\nis called.  I also removed a redundant resetInputs() call (which was\nopening the file more frequently than needed).  Finally, I added logic\nin the thread to detect that the input stream was closed (because\nLineDocMaker.resetInputs() was called, eg, if we are not running the\ndoc maker to exhaustion).",
    "attachments": {
        "excHang.patch": "https://issues.apache.org/jira/secure/attachment/12372722/excHang.patch",
        "LUCENE-1117.patch": "https://issues.apache.org/jira/secure/attachment/12372454/LUCENE-1117.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2008-01-03T14:35:16+0000",
            "content": "Attached patch.  All tests pass.  I plan to commit in a day or two. ",
            "author": "Michael McCandless",
            "id": "comment-12555581"
        },
        {
            "date": "2008-01-07T15:38:58+0000",
            "content": "I am now getting:\nException in thread \"Thread-1\" java.lang.RuntimeException: java.net.MalformedURLException\n\tat org.apache.lucene.benchmark.byTask.feeds.EnwikiDocMaker$Parser.run(EnwikiDocMaker.java:88)\n\tat java.lang.Thread.run(Thread.java:613)\nCaused by: java.net.MalformedURLException\n\tat java.net.URL.<init>(URL.java:601)\n\tat java.net.URL.<init>(URL.java:464)\n\tat java.net.URL.<init>(URL.java:413)\n\tat org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)\n\tat org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)\n\tat org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n\tat org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n\tat org.apache.xerces.parsers.XMLParser.parse(Unknown Source)\n\tat org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)\n\tat org.apache.lucene.benchmark.byTask.feeds.EnwikiDocMaker$Parser.run(EnwikiDocMaker.java:62)\n\t... 1 more\n\nIs there something new that I need to call before calling nextDocument?  I am using this outside of the benchmark framework.  It seems fileIS is not getting called for me. ",
            "author": "Grant Ingersoll",
            "id": "comment-12556591"
        },
        {
            "date": "2008-01-07T15:39:55+0000",
            "content": "This is what I am doing:\nEnwikiDocMaker docMaker = new EnwikiDocMaker();\n      Properties properties = new Properties();\n      //fileName = config.get(\"docs.file\", null);\n      String filePath = wikipediaXML.getAbsolutePath();\n      properties.setProperty(\"docs.file\", filePath);\n      properties.setProperty(\"doc.maker.forever\", \"false\");\n      docMaker.setConfig(new Config(properties)); ",
            "author": "Grant Ingersoll",
            "id": "comment-12556594"
        },
        {
            "date": "2008-01-07T15:45:08+0000",
            "content": "I think you just need to call docMaker.resetInputs()?\n\nThe contrib/benchmark framework calls that, on creating a docMaker.  That method opens the line file. ",
            "author": "Michael McCandless",
            "id": "comment-12556598"
        },
        {
            "date": "2008-01-07T15:52:00+0000",
            "content": "OK, that works!  Thanks, Mike ",
            "author": "Grant Ingersoll",
            "id": "comment-12556602"
        },
        {
            "date": "2008-01-08T13:55:20+0000",
            "content": "I've also noticed with this that the process doesn't die if there is an exception thrown (as in the one above) b/c I think the thread doesn't stop.   ",
            "author": "Grant Ingersoll",
            "id": "comment-12556899"
        },
        {
            "date": "2008-01-08T16:44:19+0000",
            "content": "Yeah, I've seen this too; it's a pre-existing issue (the exception in\nthe o.p. of this issue also would just hang).\n\nOK I worked out a patch to fix this: attached excHang.patch.  I'll\nin a day or two! ",
            "author": "Michael McCandless",
            "id": "comment-12556938"
        },
        {
            "date": "2008-01-10T10:12:51+0000",
            "content": "OK I just committed the fix to NOT hang when the XML parsing thread hits an exception. ",
            "author": "Michael McCandless",
            "id": "comment-12557586"
        }
    ]
}