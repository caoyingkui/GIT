{
    "id": "SOLR-2259",
    "title": "Improve analyzer/version handling in Solr",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "3.1",
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Task",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "We added Version for backwards compatibility support in Lucene.\nWe use this to fire deprecated code to emulate old version to ensure index backwards compat.\nRelated: we deprecate old analysis components and eventually remove them.\n\nTo hook into Solr, at first it defaulted to Version 2.4 emulation everywhere, with the example having the latest.\nif you don't specify a version in your solrconfig, it defaults to 2.4 though.\n\nHowever, as of LUCENE-2781 2.4 is removed: but users with old configs that don't specify a version should not be silently \"upgraded\" to the Version 3.0 emulation... this is bad.\n\nAdditionally, when users are using deprecated emulation or using deprecated factories they might not know it, and it might come as a surprise if they upgrade, especially if they arent looking at java apis or java code.\n\nI propose:\n\n\tin trunk: we make the solrconfig luceneMatchVersion mandatory.\nThis is simple: Uwe already has a method that will error out if its not present, we just use that. \n\tin 3.x: we warn if you don't specify luceneMatchVersion in solrconfig: telling you that its going to be required in 4.0 and that you are defaulting to 2.4 emulation.\nFor example: Warning: luceneMatchVersion is not specified in solrconfig.xml. Defaulting to 2.4 emulation. You should at some point declare and reindex to at least 3.0, because 2.4 emulation is deprecated in 3.x and will be removed in 4.0. This parameter will be mandatory in 4.0.\n\tin 3.x,trunk: we warn if you are using a deprecated matchVersion constant somewhere in general, even for a specific tokenizer, telling you that you need to at some point reindex with a current version before you can move to the next release.\nFor example: Warning: you are using 2.4 emulation, at some point you need to bump and reindex to at least 3.0, because 2.4 emulation is deprecated in 3.x and will be removed in 4.0\n\tin 3.x,trunk: we warn if you are using a deprecated TokenStreamFactory so that you know its going to be removed.\nFor example: Warning: the ISOLatin1FilterFactory is deprecated and will be removed in the next release. You should migrate to ASCIIFoldingFilterFactory.",
    "attachments": {
        "SOLR-2259.patch": "https://issues.apache.org/jira/secure/attachment/12464960/SOLR-2259.patch",
        "SOLR-2259part4.patch": "https://issues.apache.org/jira/secure/attachment/12468550/SOLR-2259part4.patch",
        "SOLR-2259part2.patch": "https://issues.apache.org/jira/secure/attachment/12466385/SOLR-2259part2.patch",
        "SOLR-2259_part3.patch": "https://issues.apache.org/jira/secure/attachment/12466970/SOLR-2259_part3.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Robert Muir",
            "id": "comment-12965225",
            "date": "2010-11-30T13:54:55+0000",
            "content": "here is a patch for part 1. This patch is intended for trunk only.\n\nit adds the required matchVersion, where missing, to any test/example configs, and makes it mandatory. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-12965227",
            "date": "2010-11-30T14:19:14+0000",
            "content": "+1, thanks for the work!\n\nYour ideas sound great, we should add a general framework for these warnings in 3.x, not sure what would be the best idea to even generate good messages. Ideally the code could print @deprecated warnings, but those are not available to runtime  "
        },
        {
            "author": "Robert Muir",
            "id": "comment-12965232",
            "date": "2010-11-30T14:28:56+0000",
            "content": "we should add a general framework for these warnings in 3.x\n\nfor #2, i think we might have to add a arg to the config method \"warnIfDefaulting\" or something... \nregardless of whether its missing, or actually specified as 2.9.x, we should warn that its using old emulation as a default too, so i think we should do an onOrAfter check.\n\ni think instance #3 can be addressed easiest with an onOrAfter check in the BaseTokenStreamFactory.assureMatchVersion, that prints the classname etc, since its the superclass\nfor all tokenstreams.\n\nfor #4, there are really not that many deprecated TokenStreamFactories, just a few, so i think\nit might be easiest to just add the log call to each for now... "
        },
        {
            "author": "Robert Muir",
            "id": "comment-12965247",
            "date": "2010-11-30T14:56:59+0000",
            "content": "here's the updated patch, that uses the ant property $tests.luceneMatchVersion\nin all of the configs. \n\nif this sysprop isnt set (e.g. IDE) then it will use LUCENE_CURRENT,\nwhich will emit a warning, but probably good for casual running of tests from an IDE. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-12965675",
            "date": "2010-12-01T12:55:44+0000",
            "content": "I committed the patch for part 1 to trunk in revision 1040982: the luceneMatchVersion parameter is mandatory,\nand all tests files have it (its driven by the existing ant sysprop $tests.luceneMatchVersion).\n\nI backported just the versioning of the tests files to branch-3x in rev 1040986: this is just for consistency to make\nmerging of any changes to these files easier, etc. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-12972080",
            "date": "2010-12-16T13:54:27+0000",
            "content": "here is a patch for branch_3x for part 2.\n\nit warns if you are missing the luceneMatchVersion param in your config,\ninforming you that its emulating Lucene 2.4 and that this emulation is deprecated,\nand that this parameter will be mandatory in 4.0 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-12972150",
            "date": "2010-12-16T17:25:27+0000",
            "content": "I committed part 2 in revision 1050064. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-12975127",
            "date": "2010-12-26T16:24:01+0000",
            "content": "here's a patch for part3. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-12982620",
            "date": "2011-01-17T12:46:13+0000",
            "content": "Here is the patch for the last part, part 4.\n\nI added a warnDeprecated() helper method to the base class,\nand added messages for all deprecated classes in trunk. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13013141",
            "date": "2011-03-30T15:45:41+0000",
            "content": "Bulk close for 3.1.0 release "
        }
    ]
}