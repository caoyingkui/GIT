{
    "id": "SOLR-11498",
    "title": "eclipse error \"the type xxx is already define\"",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "Facet Module"
        ],
        "type": "Improvement",
        "fix_versions": [
            "master (8.0)"
        ],
        "affect_versions": "master (8.0)",
        "resolution": "Unresolved",
        "status": "Reopened"
    },
    "description": "i am trying to run solr in eclipse. but got the error \"The type FacetDoubleMerger is already defined\". accroding communicate with Uwe Schindler , that this is due to the code specification caused by the eclipse compiler error, so I would like to mention a patch to fix this problem",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-17T15:37:15+0000",
            "content": "Please raise this question on the user's list at solr-user@lucene.apache.org, see: (http://lucene.apache.org/solr/community.html#mailing-lists-irc) there are a lot more people watching that list who may be able to help. \n\nIf it's determined that this really is a code issue in Solr and not a configuration/usage problem, we can raise a new JIRA or reopen this one.\n\nIn this case, this question has already been answered: \n\nHi,\n\nthis has nothing to do with the Java version. I generally ignore this Eclipse-failure as I only develop in Eclipse, but run from command line. The reason for this behaviour is a problem with Eclipse's resource management/compiler with the way how some classes in Solr (especially facet component) are setup.\n\nIn general, it is nowadays a no-go to have so called \"non-inner\" pkg-private classes. These are classes which share the same source code file, but are not nested in the main class. Instead they appear next to each other in the source file. This is a relic from Java 1.0 and should really no longer used!\n\nUnfortunately some Solr developers still create such non-nested classes. Whenever I see them I change them to be static inner classes. The problem with the bug caused by this is that Eclipse randomly fails (it depends on the order how it compiles). The problem is that Eclipse (but also other tools) cannot relate the non-inner class file to a source file and therefore cannot figure out when it needs to be recompiled.\n\nBTW. The same problem applies to other build system like javac and Ant when it needs to compile. When you change such an inner non-nested inner class, it fails to compile in most cases unless you do \"ant clean\". The problem is again, that the compiler cannot relate the class files to source code files!\n\nWe should really fix those classes to be static and inner - or place them in separate source files. I am looking to find a solution to detect this with forbiddenapis or our Source Code Regexes, if anybody has an idea: tell me!\n\nUwe ",
            "author": "Erick Erickson",
            "id": "comment-16207791"
        },
        {
            "date": "2017-11-01T01:19:13+0000",
            "content": "hi Erick Erickson and Uwe Schindler \ni found if we improt the project and facet it to web project in eclipse.it will have these problem.if we just run on inner jetty (not facet to web project) it will be ok. ",
            "author": "jin jing",
            "id": "comment-16233548"
        },
        {
            "date": "2017-11-01T07:30:00+0000",
            "content": "I agree this is an issue and should really be solved. We should also figure out how to use the current Eclipse compiler / forbidden / sourcecode regexes to prevent such types of sibling classes!\n\nThis is not high priority, but it should really be fixed. I removed most of that already, mainly the new facet module has many of those classes. Its just a bit of copy-paste work. ",
            "author": "Uwe Schindler",
            "id": "comment-16233740"
        },
        {
            "date": "2017-11-01T07:30:20+0000",
            "content": "I will take care. ",
            "author": "Uwe Schindler",
            "id": "comment-16233741"
        },
        {
            "date": "2017-11-01T07:40:52+0000",
            "content": "thank you Uwe Schindler ",
            "author": "jin jing",
            "id": "comment-16233749"
        }
    ]
}