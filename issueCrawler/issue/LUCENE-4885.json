{
    "id": "LUCENE-4885",
    "title": "FacetsAccumulator set incorrect value for FacetResult.numValidDescendants",
    "details": {
        "components": [
            "modules/facet"
        ],
        "fix_versions": [
            "4.3",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "This is cheap to compute, since the TopKFRH already must visit all non-zero-count ords under the FacetRequest.categoryPath.\n\nThis can be useful to a front end, eg to know whether to present a \"More...\" under that dimension or not, whether to use a suggester like LinkedIn's facet UI, etc.",
    "attachments": {
        "LUCENE-4885.patch": "https://issues.apache.org/jira/secure/attachment/12577387/LUCENE-4885.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-04-06T20:30:42+0000",
            "content": "Initial patch. ",
            "author": "Michael McCandless",
            "id": "comment-13624486"
        },
        {
            "date": "2013-04-07T06:00:55+0000",
            "content": "I think that this statistic needs to be on FacetResultNode, and not FacetResult, because if someone asks for \"topK in each node (depth > 1)\", we should compute this statistic on each node at each level. That today is supported only by StandardFA, but still. Initially, when I thought about this issue, I thought that FacetResult.numValidDescendants is the data you needed, but then realized it's not (it's the sum of topK at all levels).\n\nOn FRN, it should be like the other fields, public and not set in the ctor. ",
            "author": "Shai Erera",
            "id": "comment-13624737"
        },
        {
            "date": "2013-04-07T12:23:14+0000",
            "content": "OK I'll move it to FRN instead ... that's a good idea. ",
            "author": "Michael McCandless",
            "id": "comment-13624892"
        },
        {
            "date": "2013-04-07T12:44:58+0000",
            "content": "New patch, moving the count to FacetResultNode.\n\nI'm sure it's possible to get this count for the TopKInEach case but I don't understand the code well enough so it's -1 for now.\n\nAlso ... I'm not sure this count really belongs in the FRN: it seems quite wasteful in the common case of single root and lots of children to have this unused int on each child node.  Or I guess the issue is that we don't have a separate class for the \"leaf\" vs for intermediate nodes.  I guess the wasted int doesn't usually matter, since you usually don't request too many children, and these classes are transient ... ",
            "author": "Michael McCandless",
            "id": "comment-13624897"
        },
        {
            "date": "2013-04-07T14:40:52+0000",
            "content": "I hear you. That's why I first, too, thought it should be on FacetResult, and that we can just use numValidDescendants. I'm torn here too, not sure what to do about TopKInEachNode. I guess that we could resolve this by separating FRN and TreeFRN, while FRN recording ordinal, value and label and TreeFRN recording subResults and uniqueChildrenCount? The problem is how to iterate on the results...\n\nHmm, maybe the cut needs to be higher up at FacetResult level, with FacetResult (flat) and HierarchicalFacetResult. FacetResult will give you an Iterator<FRN> and if it's Hierarchical or TreeFacetResult), you get in practice an Iterator<TreeFRN> ... also, FR will record uniqueChildrenCount. For TreeFR this can mean the total unique count, or just at the root level...\n\nToday, for the common case, we spend a List pointer at each FRN, which is null. Perhaps, as you say, it's usually a non issue since you ask for a low K ...\n\nOne other solution would be to hide the uniqueChildrenCount and subResults behind methods, so that FRN returns -1 and null, while TreeFRN implements them accordingly?\n\nIn general, I feel that FacetResult and FRN are too verbose. I think that the root node's statistics could be available from the FacetResult level, and that it could give you an iterator directly, rather than giving you a node which you always must call root.subResults... but it's for a separate issue.\n\nRegarding TopKInEachNode, I wonder if we should eliminate that completely from FacetRequest, and create an appropriate FacetResultHander which you configure with the levels that you want, including (potentially, in the future) different K values for different levels? ",
            "author": "Shai Erera",
            "id": "comment-13624928"
        },
        {
            "date": "2013-04-07T19:54:02+0000",
            "content": "In general, I feel that FacetResult and FRN are too verbose. I think that the root node's statistics could be available from the FacetResult level, and that it could give you an iterator directly, rather than giving you a node which you always must call root.subResults... but it's for a separate issue.\n\nI agree!\n\nAlso, sometimes you do need to pull a large number of facet results (the \"See all...\" case) ... and I wonder if we should just do parallel arrays, ie String[] labels and int[]/double[] values, for flat results, or only expose an iterator.\n\nRegarding TopKInEachNode, I wonder if we should eliminate that completely from FacetRequest, and create an appropriate FacetResultHander which you configure with the levels that you want, including (potentially, in the future) different K values for different levels?\n\n+1 ",
            "author": "Michael McCandless",
            "id": "comment-13625008"
        },
        {
            "date": "2013-04-10T15:20:47+0000",
            "content": "Let's worry about the rest in separate issues. For now, I'm fine with adding numValidChildren to FRN. Is the latest patch up to date, or you have updates? I'll try to add that stat to the StandardFA code once you upload the latest patch. ",
            "author": "Shai Erera",
            "id": "comment-13627898"
        },
        {
            "date": "2013-04-10T15:35:19+0000",
            "content": "Latest patch is up-to-date.  Thanks Shai. ",
            "author": "Michael McCandless",
            "id": "comment-13627912"
        },
        {
            "date": "2013-04-10T19:01:29+0000",
            "content": "While looking at the top-k-in-each-node code, I realized that FacetResult.numValidDescendants is what we needed to use all along, and that new FacetsAccumulator code just incorrectly set it to K, rather than total num children considered. I added a test to TestFacetsCollector and fixed the code. So actually this issue turned from a new feature to a bug .\n\nMike, thanks for doing the work to add it to FRN, it made the fix very easy - I just pulled it to FacetResult instead. All the tests that you added helped validate the fix.\n\nI think it's ready. ",
            "author": "Shai Erera",
            "id": "comment-13628118"
        },
        {
            "date": "2013-04-10T19:05:19+0000",
            "content": "+1, thanks Shai! ",
            "author": "Michael McCandless",
            "id": "comment-13628128"
        },
        {
            "date": "2013-04-10T19:15:00+0000",
            "content": "Committed to trunk and 4x. Thanks Mike! ",
            "author": "Shai Erera",
            "id": "comment-13628138"
        },
        {
            "date": "2013-05-10T10:33:09+0000",
            "content": "Closed after release. ",
            "author": "Uwe Schindler",
            "id": "comment-13653844"
        }
    ]
}