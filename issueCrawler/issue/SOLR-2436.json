{
    "id": "SOLR-2436",
    "title": "move uimaConfig to under the uima's update processor in solrconfig.xml",
    "details": {
        "affect_versions": "3.1",
        "status": "Closed",
        "fix_versions": [
            "3.2",
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Solr contrib UIMA has its config just beneath <config>. I think it should move to uima's update processor tag.",
    "attachments": {
        "SOLR-2436.patch": "https://issues.apache.org/jira/secure/attachment/12474059/SOLR-2436.patch",
        "SOLR-2436-multi-map.patch": "https://issues.apache.org/jira/secure/attachment/12478487/SOLR-2436-multi-map.patch",
        "SOLR-2436_2.patch": "https://issues.apache.org/jira/secure/attachment/12474390/SOLR-2436_2.patch",
        "SOLR-2436-3.patch": "https://issues.apache.org/jira/secure/attachment/12476248/SOLR-2436-3.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Koji Sekiguchi",
            "id": "comment-13008732",
            "date": "2011-03-19T06:15:15+0000",
            "content": "A draft patch attached. It reuses SolrUIMAConfigurationReader w/ simple modification. Due to it uses XPath (via SolrConfig.getNode()) like \"/config/updateRequestProcessorChain/processor/uimaConfig/...\", if there are multiple uima update processors in solrconfig.xml, they share one uimaConfig... This is bad. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-13008735",
            "date": "2011-03-19T06:41:50+0000",
            "content": "And if I want to use a form of \"/config/updateRequestProcessorChain[@name='uima']/processor/uimaConfig/...\", UpdateRequestProcessorFactory need to get the name of the processor chain. This needs API change. "
        },
        {
            "author": "Tommaso Teofili",
            "id": "comment-13008793",
            "date": "2011-03-19T16:45:22+0000",
            "content": "Thanks Koji, this was on my TODO list just after 3.1 (together with tests' enhance).\nI'll have a look at your patch and share my comments here. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-13008871",
            "date": "2011-03-20T02:56:49+0000",
            "content": "A new patch attached. This time, uimaConfig is read from out of solrconfig.xml:\n\n\n<updateRequestProcessorChain name=\"uima\">\n  <processor class=\"org.apache.solr.uima.processor.UIMAUpdateRequestProcessorFactory\">\n    <str name=\"uimaConfig\">uima-config.xml</str>\n  </processor>\n  <processor class=\"solr.LogUpdateProcessorFactory\" />\n  <processor class=\"solr.RunUpdateProcessorFactory\" />\n</updateRequestProcessorChain>\n\n "
        },
        {
            "author": "Tommaso Teofili",
            "id": "comment-13010112",
            "date": "2011-03-23T13:25:30+0000",
            "content": "Hello Koji,\nI've tested your patch, I needed to align it to latest patch applied (see SOLR-2387) to make tests work (see attached patch). \n\nIn my opinion the solution you're proposing is better than the current one as it reflects the Solr way of specifying parameters in Handlers.\n\nHowever I think it should be good if it was possible to alternatively get rid of the uimaConfig file defining each parameter inside the Processor with Solr elements (str/lst/int etc.) as well.\n "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-13012042",
            "date": "2011-03-28T13:11:10+0000",
            "content": "Hi Tommaso,\n\nHowever I think it should be good if it was possible to alternatively get rid of the uimaConfig file defining each parameter inside the Processor with Solr elements (str/lst/int etc.) as well.\n\nI've done this in the attached patch. Please review it. I'm not confident about the part:\n\n\n<lst name=\"fieldMappings\">\n  <lst name=\"mapping\">\n    <str name=\"type\">org.apache.uima.SentenceAnnotation</str>\n    <str name=\"feature\">coveredText</str>\n    <str name=\"field\">sentence</str>\n  </lst>\n</lst>\n\n\n\nthe structure is appropriate or not. "
        },
        {
            "author": "Tommaso Teofili",
            "id": "comment-13019377",
            "date": "2011-04-13T15:20:53+0000",
            "content": "Hello Koji,\nyour patch seems fine to me from the functional point of view.\n\nJust, I don't think the SolrUIMAConfigurationReader should be emptied, I wouldn't remove it preferring to assign to it the simple responsibility of reading args without the previous explicit Node traversing but, as you did, using the \"Solr way\".\nI also made some fixes to remove warning while getting objects from the NamedList. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13019465",
            "date": "2011-04-13T18:05:32+0000",
            "content": "I just looked at the patch, is the SOLR-2436_2.patch still active or replaced by Kojis?\n\nI ask because:\n\n+    try{\n+      final InputSource is = new InputSource(loader.openConfig(uimaConfigFile));\n+      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n+      // only enable xinclude, if SystemId is present (makes no sense otherwise)\n+      if (is.getSystemId() != null) {\n+        try {\n+          dbf.setXIncludeAware(true);\n+          dbf.setNamespaceAware(true);\n+        } catch( UnsupportedOperationException e ) {\n+          LOG.warn( \"XML parser doesn't support XInclude option\" );\n+        }\n+      }\n\n\n\nThis XInclude Handling is broken (the if-clause never gets executed). We have a new framework that makes XML-Loading from ResourceLoaders working correct, even with relative pathes! Just look at the example committed during the cleanup issue (look at other places in solr where DocumentBuilders or XMLStreamReaders are instantiated. The new Solr way to load such files is a special URI scheme that is internally used to resolve ResourceLoader resources correctly (see SOLR-1656).\n\nThe latest patch looks fine, it embeds the config directly, which seems much more consistent. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13019470",
            "date": "2011-04-13T18:12:14+0000",
            "content": "Here is the new way to load XML from ResourceLoaders in Solr (taken from Config). This code also intercepts errors and warnings and logs them correctly (parsers tend to write them to System.err):\n\n\npublic static final Logger log = LoggerFactory.getLogger(Config.class);\nprivate static final XMLErrorLogger xmllog = new XMLErrorLogger(log);\n\n...\n\nfinal InputSource is = new InputSource(loader.openConfig(name));\nis.setSystemId(SystemIdResolver.createSystemIdFromResourceName(name));\n\nfinal DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n// only enable xinclude, if a SystemId is available\nif (is.getSystemId() != null) {\n\ttry {\n\t\tdbf.setXIncludeAware(true);\n\t\tdbf.setNamespaceAware(true);\n\t} catch(UnsupportedOperationException e) {\n\t\tlog.warn(name + \" XML parser doesn't support XInclude option\");\n\t}\n}\n\nfinal DocumentBuilder db = dbf.newDocumentBuilder();\ndb.setEntityResolver(new SystemIdResolver(loader));\ndb.setErrorHandler(xmllog);\ntry {\n\tdoc = db.parse(is);\n} finally {\n\t// some XML parsers are broken and don't close the byte stream (but they should according to spec)\n\tIOUtils.closeQuietly(is.getByteStream());\n}\n\n "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13019473",
            "date": "2011-04-13T18:22:33+0000",
            "content": "Maybe we should add my last comment into the Wiki: \"Howto load XML from Solr's config resources\", to prevent broken code again from appearing (if this no issue here anymore this is fine, I was just alarmed). I had a hard time to fix all XML handling in Solr (DIH is still broken with charsets), but XInclude now works as expected everywhere. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13019474",
            "date": "2011-04-13T18:28:56+0000",
            "content": "Maybe we should add my last comment into the Wiki: \n\n+1 "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13019476",
            "date": "2011-04-13T18:30:06+0000",
            "content": "Or perhaps we need a utility method and pointer to that? "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13019492",
            "date": "2011-04-13T19:01:15+0000",
            "content": "Or perhaps we need a utility method and pointer to that?\n\nThat's a little bit out of scope. I was thinking about that, too, but there are too many different ways to parse XML (Stax, DocumentBuilder), so I did not do this. The new Resolver and Logging classes already handle those interface implementations for all types of parsing, just initializing the parsers should be in the caller's responsibility. Also XSL is different, so all of them use ResourceLoader, but their code is different.\n\nIt is just important that you just not use the standard copy-paste from XML howtos. A similar code example like above can be shown for Stax and Transformers/Templates. I see no need to make helper classes.\n\nI will add to wiki later. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-13019649",
            "date": "2011-04-14T01:01:31+0000",
            "content": "Hi Uwe,\n\nThe problematic snippet regarding XInclude handling has been first introduced in my patch that I borrowed from DIH. When I did it, I missed something. Thank you for the alarm.\n\nNow we are trying to embed the config in update processor instead of loading it from out of solrconfig.xml, the problematic snippet are gone. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-13019652",
            "date": "2011-04-14T01:09:49+0000",
            "content": "The patch looks good, Tommaso!\n\nIf it is going to commit, it breaks back-compat. I think we need a note for users in CHANGES.txt. "
        },
        {
            "author": "Tommaso Teofili",
            "id": "comment-13019713",
            "date": "2011-04-14T07:34:19+0000",
            "content": "Thanks Uwe for the useful clarification regarding XML resources loading. I agree having such information on the wiki would be good.\n\nIf it is going to commit, it breaks back-compat. I think we need a note for users in CHANGES.txt.\n\nYes, and we need to align the README and wiki too. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13019715",
            "date": "2011-04-14T07:46:15+0000",
            "content": "When I did it, I missed something. Thank you for the alarm.\n\nThe code in DataImporter.java and DataImportHandler.java is a very bad example because it also supports loading from StringReaders and such stuff solely for testing puposes. Because of this the code is very complicated and parts of it are in both files. The examples in Solr core are much better. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-13023478",
            "date": "2011-04-23T01:14:21+0000",
            "content": "And now I realized there are files (aggregate-uima-config.xml and uima-fields.xml) under src/main/resources/solr/conf. Those seems to be sample config for alchemy api. Patch should include aggregate-uima-config.xml modified if we keep them. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-13023628",
            "date": "2011-04-24T01:53:03+0000",
            "content": "A new patch that includes updated CHANGES.txt and README.txt. I'll commit tonight. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-13024617",
            "date": "2011-04-24T11:57:22+0000",
            "content": "trunk: Committed revision 1096315.\n3x: Committed revision 1096316.\n\nThanks, Tommaso! "
        },
        {
            "author": "Tommaso Teofili",
            "id": "comment-13024668",
            "date": "2011-04-24T19:19:24+0000",
            "content": "Thanks Koji  "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-13030256",
            "date": "2011-05-07T02:15:41+0000",
            "content": "While I was reviewing my requirement:\n\nhttp://www.lucidimagination.com/search/document/983a059d6d370ce/uima_fieldmappings_and_solr_dynamicfield\n\nI found a bug that's been introduced in this ticket. I'd mentioned it at above in this thread, but not corrected at the time.\n\nBecause a type can have multiple features, the mapping definition:\n\n\n<lst name=\"fieldMappings\">\n  <lst name=\"mapping\">\n    <str name=\"type\">org.apache.uima.SentenceAnnotation</str>\n    <str name=\"feature\">coveredText</str>\n    <str name=\"field\">sentence</str>\n  </lst>\n</lst>\n\n\n\nshould be:\n\n\n<lst name=\"fieldMappings\">\n  <lst name=\"type\">\n    <str name=\"name\">org.apache.uima.SentenceAnnotation</str>\n    <lst name=\"mapping\">\n      <str name=\"feature\">coveredText</str>\n      <str name=\"field\">sentence</str>\n    </lst>\n  </lst>\n</lst>\n\n\n "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-13030266",
            "date": "2011-05-07T03:13:52+0000",
            "content": "updated patch that includes a test case for multiple mapping.\nI'll commit shortly. "
        },
        {
            "author": "Koji Sekiguchi",
            "id": "comment-13030267",
            "date": "2011-05-07T03:29:43+0000",
            "content": "trunk: Committed revision 1100435.\n3x: Committed revision 1100436. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043597",
            "date": "2011-06-03T16:44:56+0000",
            "content": "Bulk close for 3.2 "
        }
    ]
}