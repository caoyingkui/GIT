{
    "id": "SOLR-9499",
    "title": "Streaming Expression Cannot sort on aliased field",
    "details": {
        "components": [
            "search"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "6.2",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "an expression such as:\n\n\nsearch(test, rows=999999, q=table:article_p, fl=\"yi_pw,id,article:article_id\", sort=\"article asc\") \n\nor\n\nsearch(test, rows=999999, q=table:article_p, fl=\"yi_pw,id,article:article_id\", sort=\"article_id asc\") \n\n\n\nresults in: \n\n{\"result-set\":{\"docs\":[\n{\"EXCEPTION\":\"Fields in the sort spec must be included in the field list:article\",\"EOF\":true}]}}\n\nor\n\n{\"result-set\":{\"docs\":[\n{\"EXCEPTION\":\"Fields in the sort spec must be included in the field list:article_id\",\"EOF\":true}]}}\n\n\n\nand \n\n{\"result-set\":{\"docs\":[\n{\"EXCEPTION\":\"Fields in the sort spec must be included in the field list:article:article_id\",\"EOF\":true}]}}\n\n\n\nyeilds \n\n\n{\"result-set\":{\"docs\":[\n{\"EXCEPTION\":\"java.util.concurrent.ExecutionException: java.io.IOException: --> http://10.1.3.9:8983/solr/test_shard1_replica1/:sort param could not be parsed as a query, and is not a field that exists in the index: article:article_id\",\"EOF\":true,\"RESPONSE_TIME\":5}]}}\n\n\n\nIf I sort by id instead, it all works fine.",
    "attachments": {
        "SOLR-9499.patch": "https://issues.apache.org/jira/secure/attachment/12829930/SOLR-9499.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-09-11T18:19:57+0000",
            "author": "Gus Heck",
            "content": "I'm wondering if the code for this should be using SortSpecParsing (at least when using /select)... right now it simply splits on ',' which also fails on functions that contain commas (which work just fine in fl again, but not in sort). Of course the difficulty with that is that SortSpecParsing wants either an IndexSchema or a Request... \n\nThis may also be pushing beyond intentions for streaming, but the docs seem to suggest that qt=/export is subject to /export restrictions and qt=/select is not restricted... \n\nThe /export handler is not used by default because it has stricter requirements then the /select handler so it's not as easy to get started working with. To read more about the /export handler requirements review the section Exporting Result Sets. ",
            "id": "comment-15482187"
        },
        {
            "date": "2016-09-22T20:36:38+0000",
            "author": "Gus Heck",
            "content": "Patch to solve the problem described initially. Allows for sorting on the original (non-aliased) name of the field, similar to normal select. Broader issue that sort spec parsing is inconsistent with what's normally available for select (i.e. functions, etc) left for another time. ",
            "id": "comment-15514416"
        }
    ]
}