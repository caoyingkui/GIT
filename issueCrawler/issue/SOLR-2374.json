{
    "id": "SOLR-2374",
    "title": "Create UpdateFileRequestHandler",
    "details": {
        "affect_versions": "1.4.1",
        "status": "Closed",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "update"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Implemented"
    },
    "description": "It would be nice to be able to update files like synonyms.txt and stopwords.txt with a seperrat request handler. Since i am very new to solr development i've prepared a patch with a new UpdateFileRequest handler. Maybe it would be good to refactor the existing fileRequestHandler.\n\nCurrently it is implemented that you need to whitelist all files which should be editable. I think this is better for security reasons.",
    "attachments": {
        "patchV2.diff": "https://issues.apache.org/jira/secure/attachment/12471534/patchV2.diff",
        "UpdateFileRequestHandler.patch": "https://issues.apache.org/jira/secure/attachment/12471380/UpdateFileRequestHandler.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Timo Hund",
            "id": "comment-12996296",
            "date": "2011-02-18T09:02:51+0000",
            "content": "Patch against the current trunk "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-12996378",
            "date": "2011-02-18T12:42:23+0000",
            "content": "Hi Timo\n\nThanks for getting involved in Solr. Welcome on board.\nYou should be aware that we're slowly moving away from local file based configuration spread around all the Solr nodes in your search cluster, over to a centralized config model with http://wiki.apache.org/solr/SolrCloud\n\nIn that regard, I think there will be the need for a whole set of tools to manipulate the ZooKeeper config, both from GUI and command line. Perhaps your patch could be reworked to push the file to ZK instead of to local file? "
        },
        {
            "author": "Timo Hund",
            "id": "comment-12996474",
            "date": "2011-02-18T15:58:15+0000",
            "content": "Hey Jan,\n\nthanks, for your answer. I've allready heard about zookeeper, but currently we do not use it. I'll have a deeper look into that.\n\nFrom my user perspective it would be nice to have in interface in solr to push new configuration and i thing that this should be independent from the fact if i use zookeeper or not. I'll have a look on that but maybe there is some one in the solr community with a deeper knowledge that can help me on that.\n\nThanks\n\nTimo "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12996483",
            "date": "2011-02-18T16:14:17+0000",
            "content": "If we're gonna go this route of having files updated in this manner, we should perhaps consider putting a WebDAV front-end to the conf/ directory.  This would allow the full range of GET/PUT/POST/DELETE operations in a natural file system manner.  I'm not sure what's the best way to do that... there used to be Apache Slide, and maybe Tomcat has some WebDAV pieces?  I've lost track with the state of the art of Java WebDAV technologies, but anyway, an avenue to consider. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-12996494",
            "date": "2011-02-18T16:22:24+0000",
            "content": "I think it makes sense to make some proxy interface to updating config through POST, which updates on file if you do not use ZK and which posts to ZK if that is in use.\n\nThe same goes for the built-in admin GUI which currently is not ZK aware when it comes to the the GUI links calling the FileRequestHandler "
        },
        {
            "author": "Timo Hund",
            "id": "comment-12996509",
            "date": "2011-02-18T16:46:49+0000",
            "content": "Best case in my opinion would be to have the fileRequestHandler as reader and writer and it's transperent to ZooKeeper.  "
        },
        {
            "author": "Timo Hund",
            "id": "comment-12997224",
            "date": "2011-02-20T21:27:34+0000",
            "content": "Hello together, today i had a look at the code and currently i have one proposal:\n\nCurrently there is SolrResourceLoader and ZKSolrResourceLoader, which handle the resource loading for normal solr and zookeeper solr (openResource). What do you thing of refactoring the resourceLoader to a resourceManager, with the possibility to open resources for reading and writing. But afaik openResource is also used to open jar files and i think it should not be possible to write these files for security reasons.\n\nWhat do you think? "
        },
        {
            "author": "Timo Hund",
            "id": "comment-12997239",
            "date": "2011-02-20T23:34:41+0000",
            "content": "New patch attached, just to show the idea. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-12997409",
            "date": "2011-02-21T13:52:08+0000",
            "content": "Nice - I've been meaning to do something like this since writing ZKSolrResourceLoader - for the timing being, I'd chosen to work around it in code outside of Solr. I will def take a closer look at this patch soon. "
        },
        {
            "author": "Timo Hund",
            "id": "comment-12997414",
            "date": "2011-02-21T14:15:54+0000",
            "content": "Ok cool, this is only a first proposal, in my opinion it would be good to refactor the resourceLoader to have a resourceManager with the methods hasResource(), readResource() and writeResource(), which is implemented diffrent for zooKeeper and local files. As soon as i have some time, i'll try to refactor that. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12998079",
            "date": "2011-02-22T22:52:32+0000",
            "content": "FWIW: There have been historical disscusions about adding features to solr to let people upload/manage config files and i've always been violently opposed to that being a core part of Solr \u2013 in general, it would make more more sense to have Solr releases include/suggest some other tool (ideally a generic webdav.war that could be used in paralele so we didn't take on the maintence cost of something that is only peripherally associated with olr \u2013 lots of other projects develope code for acting as a file server, solr should focus on being a search server.\n\nthat said: i really don't know much of anything about how config files are/should-be manipulated in zookeeper using Solr Cloud.  If we're using ZK in a way that is even remotely common, i have to imagine that there is probably already a project out there for doing CRUD operations on files in ZK that we could either recommend, or link into the solr.war.  If not, then by all means we should provide ome means for people to update config files in a \"Solr Cloud\" "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-12998281",
            "date": "2011-02-23T10:04:35+0000",
            "content": "I raised the question about \"correct\" Zk usage in this thread http://search-lucene.com/m/ZwBtm1PbXXY bullet c). The ZK docs says we should only store lightweight config objects in ZK, thus the 1Mb node size limit. So I'm not sure the entire /solr/conf/ folder should just be dumped into ZK. Dictionaries and other large files could live in something like Voldemort, with only a reference stored in ZK. That scales, but demands a tool for up/downloading files to Voldemort \n\nI don't have much ZK experience, but perhaps more in the spirit of ZK would be to model the configs found in solr.xml and solrconfig.xml as a more fine-grained ZK node structure. Imagine being able to change the mergeFactor by changing the ZK node /solr/collections/collection1/indexDefaults/mergeFactor to a new value...  instead of having to download the latest solrconfig.xml, modify it and re-uploading. Such a strategy again requires tools to import a solrconfig.xml to ZK and exporting an existing ZK config as XML.\n "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043788",
            "date": "2011-06-03T16:47:03+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106292",
            "date": "2011-09-16T14:50:25+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13234678",
            "date": "2012-03-21T18:08:51+0000",
            "content": "Bulk of fixVersion=3.6 -> fixVersion=4.0 for issues that have no assignee and have not been updated recently.\n\nemail notification suppressed to prevent mass-spam\npsuedo-unique token identifying these issues: hoss20120321nofix36 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717387",
            "date": "2013-07-23T18:48:04+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971263",
            "date": "2014-04-16T12:57:36+0000",
            "content": "Move issue to Solr 4.9. "
        },
        {
            "author": "Alexandre Rafalovitch",
            "id": "comment-15539517",
            "date": "2016-10-02T01:58:26+0000",
            "content": "This has been implemented in an alternative way for ManagedStopFilterFactory and ManagedSynonymFilterFactory in SOLR-5653 and related issues. "
        }
    ]
}