{
    "id": "SOLR-1105",
    "title": "Use a different stored field for highlighting",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "highlighter"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "DefaultSolrHighlighter uses stored field content to highlight. It has some disadvantages, because index grows up fast when using multilingual indexing due to several fields has to be stored with same content. This patch allows DefaultSolrHighlighter to use \"contentField\" attribute to loockup content in external field.\n\nExcerpt from old schema:\n\n<field name=\"title\" type=\"text\" stored=\"true\" indexed=\"true\" />\n<field name=\"title_ru\" type=\"text_ru\" stored=\"true\" indexed=\"true\" />\n<field name=\"title_en\" type=\"text_en\" stored=\"true\" indexed=\"true\" />\n<field name=\"title_de\" type=\"text_de\" stored=\"true\" indexed=\"true\" />\n\n\n\nThe same after patching, highlighter will now get content stored in \"title\" field\n\n<field name=\"title\" type=\"text\" stored=\"true\" indexed=\"true\" />\n<field name=\"title_ru\" type=\"text_ru\" stored=\"false\" indexed=\"true\" contentField=\"title\"/>\n<field name=\"title_en\" type=\"text_en\" stored=\"false\" indexed=\"true\" contentField=\"title\"/>\n<field name=\"title_de\" type=\"text_de\" stored=\"false\" indexed=\"true\" contentField=\"title\"/>",
    "attachments": {
        "SOLR-1105_shared_content_field_1.3.0.patch": "https://issues.apache.org/jira/secure/attachment/12404918/SOLR-1105_shared_content_field_1.3.0.patch",
        "SOLR-1105-1_4_1.patch": "https://issues.apache.org/jira/secure/attachment/12451758/SOLR-1105-1_4_1.patch",
        "SOLR-1105.patch": "https://issues.apache.org/jira/secure/attachment/12860519/SOLR-1105.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12698672",
            "date": "2009-04-14T07:07:06+0000",
            "content": "Instead of baking this into the schema, should this be turned on/off through a request parameter? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872433",
            "date": "2010-05-27T22:05:10+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Evgeniy Serykh",
            "id": "comment-12897171",
            "date": "2010-08-11T07:57:38+0000",
            "content": "fixed for solr 1.4.1\n\nuse in solrconfig.xml:\n\n<str name=\"f.content_ru.hl.contentField\">content</str>\n<str name=\"f.content_en.hl.contentField\">content</str>\n\n<str name=\"f.title_ru.hl.contentField\">title</str>\n<str name=\"f.title_en.hl.contentField\">title</str>\n\n "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043756",
            "date": "2011-06-03T16:46:54+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106321",
            "date": "2011-09-16T14:50:34+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13234756",
            "date": "2012-03-21T18:09:12+0000",
            "content": "Bulk of fixVersion=3.6 -> fixVersion=4.0 for issues that have no assignee and have not been updated recently.\n\nemail notification suppressed to prevent mass-spam\npsuedo-unique token identifying these issues: hoss20120321nofix36 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717388",
            "date": "2013-07-23T18:48:05+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971316",
            "date": "2014-04-16T12:57:45+0000",
            "content": "Move issue to Solr 4.9. "
        },
        {
            "author": "David Smiley",
            "id": "comment-15903248",
            "date": "2017-03-09T15:52:27+0000",
            "content": "This would be very useful indeed. "
        },
        {
            "author": "Matthew Caruana Galizia",
            "id": "comment-15903258",
            "date": "2017-03-09T15:57:36+0000",
            "content": "It also doesn't seem too difficult to implement on the UnifiedHighlighter, at least for someone who's familiar with the code. "
        },
        {
            "author": "Julien Martin",
            "id": "comment-15936120",
            "date": "2017-03-22T11:04:48+0000",
            "content": "Here is a patch proposal (SOLR-1105.patch). "
        },
        {
            "author": "David Smiley",
            "id": "comment-15938457",
            "date": "2017-03-23T14:36:44+0000",
            "content": "Thanks for contributing a patch Julien!  I didn't thoroughly review it but one thing caught my attention \u2013 you added new parameters to the existing highlight methods on UnifiedHighlighter.  I think this atypical use-case doesn't warrant that.  Instead, notice much of the UH's configurability is from override-able methods on the UH.  \n\nAs an aside, I'm starting to wonder if there should be a \"HighlightCommand\" (or HighlightOptions) class that holds all the options (via subclassing) so that the UH needn't be subclassed to do 99% of use-cases.... I dunno.  That's out of scope here of course.  Assuming it's a separate source file, it would also help keep the sprawling UH source file in check.  CC Timothy M. Rodriguez\n\nAnother issue I see is that (a) with this feature we want the ability highlight multiple fields yet potentially use the same stored field, and (b) in that case, we only want to load it once.  It's not clear this patch takes that into consideration?  Again; I didn't thoroughly look over the patch yet. "
        },
        {
            "author": "Julien Martin",
            "id": "comment-15940671",
            "date": "2017-03-24T16:33:18+0000",
            "content": "Thank you for looking at it David! We really need the feature over here \n\nAs for unique field loading, my understanding is that the stored fields visitor pattern applied to the index searcher object ensures that no field is loaded twice per document. \n\nBut this was a good point anyway because I had other issues with multiple fields highlighting which I solved in a new version of the patch you can find attached here.\n\nSincerely,\nJulien "
        },
        {
            "author": "David Smiley",
            "id": "comment-15957704",
            "date": "2017-04-05T21:16:11+0000",
            "content": "I propose separating this issue into a Lucene portion and Solr portion.  I have some thoughts on the Lucene side but I'll save it for later when you post that.\n\nI like the \"hl.contentField\" param name.  You declared it in HighlightParams in a spot that I think should be down in the \"misc\" category (pretty minor).\n\nWhy did you add a boolean flag for this to FieldProperties with the related modification to SchemaField accordingly? "
        },
        {
            "author": "David Smiley",
            "id": "comment-15957712",
            "date": "2017-04-05T21:19:53+0000",
            "content": "Why did you add a boolean flag for this to FieldProperties with the related modification to SchemaField accordingly?\n\nAnswering my own question... I could imagine that it's useful metadata for a non-stored field to declare that some other field is the source of it's indexed/analyzed text.  But the schema already internally tracks copyField source/destination data.  Maybe what we could do is have highlighting automatically work on a non-stored field when we see that the field to be highlighted is a copyField target?  Then, in practice, most users wouldn't even need to specify hl.contentField (though as an explicit option, it's still nice). "
        },
        {
            "author": "Julien Martin",
            "id": "comment-15958671",
            "date": "2017-04-06T09:49:41+0000",
            "content": "Thanks for your comments David.\n\nAutomatic highlighting on copyField targets would be nice indeed.\n\nI just created the Lucene portion issue at https://issues.apache.org/jira/browse/LUCENE-7768 "
        }
    ]
}