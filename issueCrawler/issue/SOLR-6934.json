{
    "id": "SOLR-6934",
    "title": "bin/solr -e cloud has poor failure behavior when solr has (certain types of) startup errors",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Earlier today, sarowe backported a jetty config change that broke 5x because it refered to a jetty feature that only existed in jetty9 (5x still using jetty8).\n\nAss a result, jetty started up and was listenting on the specified port - but the solr webapp code never loaded.\n\nthis caused an interesting failure behavior in bin/solr...\n\n\nhossman@frisbee:~/lucene/5x_dev/solr$ bin/solr -e cloud -noprompt\n\nWelcome to the SolrCloud example!\n\n\nStarting up 2 Solr nodes for your example SolrCloud cluster.\nCreating Solr home directory /home/hossman/lucene/5x_dev/solr/example/cloud/node1/solr\nCloning Solr home directory /home/hossman/lucene/5x_dev/solr/example/cloud/node1 into /home/hossman/lucene/5x_dev/solr/example/cloud/node2\n\nStarting up SolrCloud node1 on port 8983 using command:\n\nsolr start -cloud -s /home/hossman/lucene/5x_dev/solr/example/cloud/node1/solr -p 8983   \n\n\nWaiting to see Solr listening on port 8983 [/]  \nStarted Solr server on port 8983 (pid=29954). Happy searching!\n\n    \n\nStarting node2 on port 7574 using command:\n\nsolr start -cloud -s /home/hossman/lucene/5x_dev/solr/example/cloud/node2/solr -p 7574 -z localhost:9983   \n\n\nWaiting to see Solr listening on port 7574 [/]  \nStarted Solr server on port 7574 (pid=30099). Happy searching!\n\nException in thread \"main\" org.noggit.JSONParser$ParseException: JSON Parse Error: char=<,position=0 BEFORE='<' AFTER='html> <head> <meta http-equiv=\"Content-'\n\tat org.noggit.JSONParser.err(JSONParser.java:356)\n\tat org.noggit.JSONParser.handleNonDoubleQuoteString(JSONParser.java:712)\n\tat org.noggit.JSONParser.next(JSONParser.java:886)\n\tat org.noggit.JSONParser.nextEvent(JSONParser.java:930)\n\tat org.noggit.ObjectBuilder.<init>(ObjectBuilder.java:44)\n\tat org.noggit.ObjectBuilder.getVal(ObjectBuilder.java:37)\n\tat org.apache.solr.util.SolrCLI$SolrResponseHandler.handleResponse(SolrCLI.java:447)\n\tat org.apache.solr.util.SolrCLI$SolrResponseHandler.handleResponse(SolrCLI.java:443)\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:218)\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:160)\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:136)\n\tat org.apache.solr.util.SolrCLI.getJson(SolrCLI.java:469)\n\tat org.apache.solr.util.SolrCLI.getJson(SolrCLI.java:422)\n\tat org.apache.solr.util.SolrCLI$CreateCollectionTool.runTool(SolrCLI.java:1081)\n\tat org.apache.solr.util.SolrCLI.main(SolrCLI.java:195)\n\n\nSolrCloud example running, please visit http://localhost:8983/solr \n\n\n\n\nwe should make bin/solr a little smarter in failure cases like this \u2013 perhaps the \"Waiting to see Solr listening on port 7574\" check should be more aggressive, and actually verify that something like /admin/cores returns 200 and a parsable JSON response?",
    "attachments": {},
    "issue_links": {},
    "comments": []
}