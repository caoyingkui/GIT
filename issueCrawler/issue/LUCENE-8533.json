{
    "id": "LUCENE-8533",
    "title": "DataInput#readVInt() supports negative numbers although not documented",
    "details": {
        "components": [],
        "status": "Resolved",
        "resolution": "Fixed",
        "fix_versions": [
            "7.6",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "labels": "",
        "priority": "Major",
        "type": "Improvement"
    },
    "description": "readVInt() has to return positive numbers (and zero), throw some exception in case of negative numbers.\n\nWhile for the sequence of bytes [-1, -1, -1, -1, 15] it returns -1.\n\nsimplifying readVInt up to last readByte (exclusive):\n\n\nint i = ((byte)-1) & 0x7F;\ni |= (((byte)-1) & 0x7F) << 7;\ni |= (((byte)-1) & 0x7F) << 14;\ni |= (((byte)-1) & 0x7F) << 21;\n\n\n\nHere i = 268435455 or in binary format is 00001111_11111111_11111111_11111111\n\nKeeping in mind that int is a signed type we have only 3 more bits before overflow happens or in another words (Integer.MAX_VALUE - i) >> 28 == 7 - that's max value could be stored in 5th byte to avoid overflow.\n\nInstead of \n\n\ni |= (b & 0x0F) << 28;\nif ((b & 0xF0) == 0) return i;\n\n\n\nhas to be\n\n\ni |= (b & 0x07) << 28;\nif ((b & 0xF8) == 0) return i;",
    "attachments": {
        "readVInt.patch": "https://issues.apache.org/jira/secure/attachment/12944103/readVInt.patch",
        "LUCENE-8533_fix_readVInt_javadoc.patch": "https://issues.apache.org/jira/secure/attachment/12944515/LUCENE-8533_fix_readVInt_javadoc.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16653507",
            "author": "Uwe Schindler",
            "content": "In contrast to readVLong, this is explicitely implemented like this for backwards compatibility with older indexes. Also it allows negative numbers (and they were used quite often). The explanation is here: LUCENE-3738 (this is also why the Exception looks different for readVLong and readVInt).\n\nSee also the inverse, writeVInt: https://lucene.apache.org/core/7_4_0/core/org/apache/lucene/store/DataOutput.html#writeVInt-int-\n\nWrites an int in a variable-length format. Writes between one and five bytes. Smaller values take fewer bytes. Negative numbers are supported, but should be avoided.\n\nI think the documentation in readVInt is just wrong (was copypasted).\n\nBut as we no longer support old indexes, we may be able to improve this, so your patch can be investigated. In that case also writeVInt needs to be changed to disallow negative numbers.\n\nIn addition, If we change this, the exception needs to be consistent with readVLong! Please change that, too. ",
            "date": "2018-10-17T13:05:07+0000"
        },
        {
            "id": "comment-16654909",
            "author": "Vladimir Dolzhenko",
            "content": "Thank Uwe for the details and comments.\n\nThere is at least one place where writeVInt(-1) is used explicitly :\n\nDirectDocValuesConsumer:149\n\nit has to be addressed before dropping negative support for vInt ",
            "date": "2018-10-18T09:16:53+0000"
        },
        {
            "id": "comment-16654913",
            "author": "Uwe Schindler",
            "content": "I think we should at least fix the documentation in javadocs to be in sync with writeVInt. Can you provide a patch?\n\nUwe ",
            "date": "2018-10-18T09:22:34+0000"
        },
        {
            "id": "comment-16654982",
            "author": "Vladimir Dolzhenko",
            "content": "Patch LUCENE-8533_fix_readVInt_javadoc.patch to fix javadoc is attached. ",
            "date": "2018-10-18T10:00:44+0000"
        },
        {
            "id": "comment-16655029",
            "author": "ASF subversion and git services",
            "content": "Commit 167c65afadc164beb870337a1076ef146387b55d in lucene-solr's branch refs/heads/master from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=167c65a ]\n\nLUCENE-8533: Fix Javadocs of DataInput#readVInt(): Negative numbers are supported, but should be avoided. ",
            "date": "2018-10-18T10:36:35+0000"
        },
        {
            "id": "comment-16655030",
            "author": "ASF subversion and git services",
            "content": "Commit 22d91a0acc78559d80cbaab69bb7ec5042ec8fb7 in lucene-solr's branch refs/heads/branch_7x from Uwe Schindler\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=22d91a0 ]\n\nLUCENE-8533: Fix Javadocs of DataInput#readVInt(): Negative numbers are supported, but should be avoided. ",
            "date": "2018-10-18T10:37:43+0000"
        },
        {
            "id": "comment-16655031",
            "author": "Uwe Schindler",
            "content": "OK, I committed this change. IMHO, changing this is a larger task (it's not only the -1 you mentioned). So I am closing this issue. If we want to change this, we should open a new issue and plan the change. ",
            "date": "2018-10-18T10:40:18+0000"
        }
    ]
}