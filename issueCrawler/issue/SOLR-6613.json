{
    "id": "SOLR-6613",
    "title": "TextField.analyzeMultiTerm should not throw exception when analyzer returns no term",
    "details": {
        "components": [
            "Schema and Analysis"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "4.3.1,                                            4.10.2,                                            6.0",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "In TextField.analyzeMultiTerm()\nat line\ntry {\n  if (!source.incrementToken())\n    throw new SolrException();\n\nThe method should not throw an exception if there is no token because having no token is legitimate because all tokens may be filtered out (e.g. with a blocking Filter such as StopFilter).\n\nIn this case it should simply return null (as it already returns null in some cases, see first line of method). However, SolrQueryParserBase needs also to be fixed to correctly handle null returned by TextField.analyzeMultiTerm().\n\nSee attached TestTextField for the corresponding new test class.",
    "attachments": {
        "TestTextField.java": "https://issues.apache.org/jira/secure/attachment/12673888/TestTextField.java"
    },
    "issue_links": {},
    "comments": []
}