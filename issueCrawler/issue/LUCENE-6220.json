{
    "id": "LUCENE-6220",
    "title": "Move needsScores from Weight.scorer to Query.createWeight",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "priority": "Minor",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "Whether scores are needed is currently a Scorer-level property while it should actually be a Weight thing I think?",
    "attachments": {
        "LUCENE-6220.patch": "https://issues.apache.org/jira/secure/attachment/12696834/LUCENE-6220.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14307830",
            "author": "Michael McCandless",
            "date": "2015-02-05T19:31:22+0000",
            "content": "+1 "
        },
        {
            "id": "comment-14307840",
            "author": "Adrien Grand",
            "date": "2015-02-05T19:34:42+0000",
            "content": "Here is a work-in-progress patch: IndexSearcher currently needs to guess in advance whether the collector will need scores. I'll have a second look at it tomorrow to see if I can somehow refactor it so that we always have a collector ready before creating the weight. "
        },
        {
            "id": "comment-14307936",
            "author": "Robert Muir",
            "date": "2015-02-05T20:33:25+0000",
            "content": "+1 if we can do this somehow. When i looked into it, it seemed it might require major refactoring of IndexSearcher. But I think it would end up better if we can do it! "
        },
        {
            "id": "comment-14309156",
            "author": "Adrien Grand",
            "date": "2015-02-06T14:00:24+0000",
            "content": "New patch.\n\nIndexSearcher no more tries to guess whether scores are needed or not by always creating the collector before the weight. I kept the signatures of the public methods compatible but had to remove some protected methods that did not make sense anymore (because the Weight was an argument while the collector was not constructed yet).\n\nI also tried to add more type safety to TopDoc.merge to avoid unchecked casts on the IndexSearcher side. "
        },
        {
            "id": "comment-14309234",
            "author": "Adrien Grand",
            "date": "2015-02-06T14:42:36+0000",
            "content": "New iteration:\n\n\tremoved some useless needsScores constructor arguments\n\tremoved the doScores parameter of ToChildBlockJoinQuery in favor of needsScores in createWeight\n\n\n\nI think it's ready. "
        },
        {
            "id": "comment-14309245",
            "author": "Robert Muir",
            "date": "2015-02-06T14:58:55+0000",
            "content": "+1, this is a great cleanup. "
        },
        {
            "id": "comment-14309321",
            "author": "Alan Woodward",
            "date": "2015-02-06T15:29:18+0000",
            "content": "+1, nice "
        },
        {
            "id": "comment-14309348",
            "author": "ASF subversion and git services",
            "date": "2015-02-06T15:54:55+0000",
            "content": "Commit 1657874 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1657874 ]\n\nLUCENE-6220: Move needsScores to Query.createWeight. "
        },
        {
            "id": "comment-14309359",
            "author": "ASF subversion and git services",
            "date": "2015-02-06T16:03:01+0000",
            "content": "Commit 1657876 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1657876 ]\n\nLUCENE-6220: Remove needsScores from FilterStrategy. "
        },
        {
            "id": "comment-14309362",
            "author": "ASF subversion and git services",
            "date": "2015-02-06T16:05:13+0000",
            "content": "Commit 1657878 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1657878 ]\n\nLUCENE-6220: Remove unnecessary cast. "
        },
        {
            "id": "comment-14309380",
            "author": "ASF subversion and git services",
            "date": "2015-02-06T16:20:40+0000",
            "content": "Commit 1657883 from Adrien Grand in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1657883 ]\n\nLUCENE-6220: Move needsScores to Query.createWeight. "
        },
        {
            "id": "comment-14309463",
            "author": "Mark Miller",
            "date": "2015-02-06T17:20:14+0000",
            "content": "I see problems locally with the change to TopGroupsShardResponseProcessor. It complains with an arraystoreexception at runtime it looks. I'll try to take a look at it. "
        },
        {
            "id": "comment-14309471",
            "author": "Adrien Grand",
            "date": "2015-02-06T17:22:49+0000",
            "content": "Woops, sorry that I missed that. It's probably because I made sure that you pass a TopFieldDocs[] to TopDocs.merge when there is a sort. I'll look. "
        },
        {
            "id": "comment-14309488",
            "author": "Mark Miller",
            "date": "2015-02-06T17:32:24+0000",
            "content": "I put in this hack, and that led to a test fail mid way through - unfortunetly I've never seen this grouping code before.\n\n\nIndex: solr/core/src/java/org/apache/solr/search/grouping/distributed/responseprocessor/TopGroupsShardResponseProcessor.java\n===================================================================\n--- solr/core/src/java/org/apache/solr/search/grouping/distributed/responseprocessor/TopGroupsShardResponseProcessor.java\t(revision 1657874)\n+++ solr/core/src/java/org/apache/solr/search/grouping/distributed/responseprocessor/TopGroupsShardResponseProcessor.java\t(working copy)\n@@ -173,7 +173,13 @@\n \n         int topN = rb.getGroupingSpec().getOffset() + rb.getGroupingSpec().getLimit();\n         final TopDocs mergedTopDocs;\n-        if (sortWithinGroup == null) {\n+        \n+        boolean sort = false;\n+        if (topDocs.size() > 0) {\n+          sort = topDocs.get(0) instanceof TopFieldDocs;\n+        }\n+        \n+        if (sortWithinGroup == null || !sort) {\n           mergedTopDocs = TopDocs.merge(topN, topDocs.toArray(new TopDocs[topDocs.size()]));\n         } else {\n           mergedTopDocs = TopDocs.merge(sortWithinGroup, topN, topDocs.toArray(new TopFieldDocs[topDocs.size()]));\n\n "
        },
        {
            "id": "comment-14309528",
            "author": "Adrien Grand",
            "date": "2015-02-06T18:03:00+0000",
            "content": "OK I think I found the root cause of this. As part of this change I tried to add more type safety to TopDocs.merge, and in particular this method now expects instances of TopFieldDocs when the sort is not null. But TopGroupsResultTransformer deserializes a NamedList into a TopDocs instance and while the individual ScoreDoc are instances of FieldDoc, it returns a new TopDocs instead of a new TopFieldDocs. I'm not sure how to fix it as it would require to also get the original Sort object (is it available somewhere?) but in the meantime I can try to make TopDocs.merge more permissive again to fix the problem. "
        },
        {
            "id": "comment-14309624",
            "author": "ASF subversion and git services",
            "date": "2015-02-06T18:50:14+0000",
            "content": "Commit 1657919 from Adrien Grand in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1657919 ]\n\nLUCENE-6220: Fix ArrayStoreException in grouping tests. "
        },
        {
            "id": "comment-14309629",
            "author": "ASF subversion and git services",
            "date": "2015-02-06T18:52:22+0000",
            "content": "Commit 1657921 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1657921 ]\n\nLUCENE-6220: Fix ArrayStoreException in grouping tests. "
        },
        {
            "id": "comment-14311307",
            "author": "Adrien Grand",
            "date": "2015-02-08T13:02:43+0000",
            "content": "The fix was actually easier than I initially thought, and it looks like it fixed the ArrayStoreException errors. Thanks Mark and sorry for the noise. "
        },
        {
            "id": "comment-14495393",
            "author": "Timothy Potter",
            "date": "2015-04-15T00:30:56+0000",
            "content": "Bulk close after 5.1 release "
        }
    ]
}