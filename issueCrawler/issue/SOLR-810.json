{
    "id": "SOLR-810",
    "title": "changes for javabin format",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "For storage purposes javabin can be quite inefficient assuming that we write one document at a time. The field names may be written for each document which makes it inefficient. \n\njavabin can be as efficient as a format like say thrift/protocol buffers if we do not pay the price of a string per name. We can easily achieve it using a new type  KNOWN_STRING. \n\nKNOWN_STRING can be like an EXTERN_STRING but it is just that these are preconfigured string names which is a map of index -> string . The known string list can probably have a version . The client must be using a newer version known string list than the server . \n\nan example looks like\n\n1:responseHeader\n2:QTime\n3:status\n\n\n\nA newer version of the string list can add a new string at a new index but it must never change the index of an existing string. This is similar to an IDL file of thrift/protocol buffers but w/o any of those complexities\n\nSo when an EXTERN_STRING is written it first looks up in the KNOWN_STRING map. If it is present , it is written as a KNOWN_STRING instead of an EXTERN_STRING . The value will be the index\n\nAnother addition could be a zip string type. This is useful when javabin is used for storing data . In storage, the performance cost of serialization/deserialization may not be as important as the space itself.  This may also have a minimum size to compress . Only large strings (say > 2KB?) may need to be serialized",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Erick Erickson",
            "id": "comment-13604355",
            "date": "2013-03-16T18:45:06+0000",
            "content": "SPRING_CLEANING_2013 we can reopen if necessary.  "
        }
    ]
}