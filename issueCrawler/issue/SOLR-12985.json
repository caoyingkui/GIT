{
    "id": "SOLR-12985",
    "title": "ClassNotFound indexing crypted documents",
    "details": {
        "type": "Bug",
        "status": "Reopened",
        "labels": "",
        "fix_versions": [],
        "components": [
            "contrib - DataImportHandler"
        ],
        "priority": "Critical",
        "resolution": "Unresolved",
        "affect_versions": "7.3.1"
    },
    "description": "When indexing a BLOB containing an encrypted Office Document (xls or xlsx but I think all types) it fail with a very bad exception, if the document is not encrypted works fine.\n\nI'm using the DataImportHandler.\n\nThe exception seems also avoid the onError=skip or continue, making the import fail.\n\nI tried to move the libraries from contrib/extraction/lib/ to server/lib and the unfounded class changes, so it's a class loading issue.\n\nThis is the base exception:\n\nException while processing: document_index document : SolrInputDocument(fields: [site=187, index_type=document, resource_id=3, title_full=Dati cliente.docx, id=d-XXX-3, publish_date=2018-09-28 00:00:00.0, abstract= Azioni di recupero intraprese sulle Fatture telefoniche, insert_date=2019-09-28 00:00:00.0, type=Documenti, url=http://]):org.apache.solr.handler.dataimport.DataImportHandlerException: Unable to read content Processing Document # 1\n\u00a0\u00a0 \u00a0at org.apache.solr.handler.dataimport.DataImportHandlerException.wrapAndThrow(DataImportHandlerException.java:69)\n\u00a0\u00a0 \u00a0at org.apache.solr.handler.dataimport.TikaEntityProcessor.nextRow(TikaEntityProcessor.java:171)\n\u00a0\u00a0 \u00a0at org.apache.solr.handler.dataimport.EntityProcessorWrapper.nextRow(EntityProcessorWrapper.java:267)\n\u00a0\u00a0 \u00a0at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:476)\n\u00a0\u00a0 \u00a0at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:517)\n\u00a0\u00a0 \u00a0at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:415)\n\u00a0\u00a0 \u00a0at org.apache.solr.handler.dataimport.DocBuilder.doDelta(DocBuilder.java:364)\n\u00a0\u00a0 \u00a0at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:225)\n\u00a0\u00a0 \u00a0at org.apache.solr.handler.dataimport.DataImporter.doDeltaImport(DataImporter.java:452)\n\u00a0\u00a0 \u00a0at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:485)\n\u00a0\u00a0 \u00a0at org.apache.solr.handler.dataimport.DataImporter.lambda$runAsync$0(DataImporter.java:466)\n\u00a0\u00a0 \u00a0at java.lang.Thread.run(Thread.java:748)\nCaused by: org.apache.tika.exception.TikaException: TIKA-198: Illegal IOException from org.apache.tika.parser.microsoft.OfficeParser@500efcf1\n\u00a0\u00a0 \u00a0at org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:286)\n\u00a0\u00a0 \u00a0at org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:280)\n\u00a0\u00a0 \u00a0at org.apache.tika.parser.AutoDetectParser.parse(AutoDetectParser.java:143)\n\u00a0\u00a0 \u00a0at org.apache.solr.handler.dataimport.TikaEntityProcessor.nextRow(TikaEntityProcessor.java:165)\n\u00a0\u00a0 \u00a0... 10 more\nCaused by: java.io.IOException: java.lang.ClassNotFoundException: org.apache.poi.poifs.crypt.agile.AgileEncryptionInfoBuilder\n\u00a0\u00a0 \u00a0at org.apache.poi.poifs.crypt.EncryptionInfo.<init>(EncryptionInfo.java:150)\n\u00a0\u00a0 \u00a0at org.apache.poi.poifs.crypt.EncryptionInfo.<init>(EncryptionInfo.java:102)\n\u00a0\u00a0 \u00a0at org.apache.tika.parser.microsoft.OfficeParser.parse(OfficeParser.java:203)\n\u00a0\u00a0 \u00a0at org.apache.tika.parser.microsoft.OfficeParser.parse(OfficeParser.java:132)\n\u00a0\u00a0 \u00a0at org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:280)\n\u00a0\u00a0 \u00a0... 13 more\nCaused by: java.lang.ClassNotFoundException: org.apache.poi.poifs.crypt.agile.AgileEncryptionInfoBuilder\n\u00a0\u00a0 \u00a0at java.net.URLClassLoader.findClass(URLClassLoader.java:381)\n\u00a0\u00a0 \u00a0at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\n\u00a0\u00a0 \u00a0at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n\u00a0\u00a0 \u00a0at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:565)\n\u00a0\u00a0 \u00a0at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n\u00a0\u00a0 \u00a0at org.apache.poi.poifs.crypt.EncryptionInfo.getBuilder(EncryptionInfo.java:222)\n\u00a0\u00a0 \u00a0at org.apache.poi.poifs.crypt.EncryptionInfo.<init>(EncryptionInfo.java:148)\n\u00a0\u00a0 \u00a0... 17 more",
    "attachments": {
        "crypted.xlsx": "https://issues.apache.org/jira/secure/attachment/12948197/crypted.xlsx",
        "schema.zip": "https://issues.apache.org/jira/secure/attachment/12948196/schema.zip",
        "notcrypted.docx": "https://issues.apache.org/jira/secure/attachment/12948198/notcrypted.docx",
        "logs.zip": "https://issues.apache.org/jira/secure/attachment/12948195/logs.zip",
        "db.sql": "https://issues.apache.org/jira/secure/attachment/12948194/db.sql"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16685506",
            "content": "The Solr project does not use Jira as a support portal.\n\nProblems should be discussed via normal support channels, to determine whether an issue in Jira is appropriate.  This information is displayed prominently in a red font anytime somebody begins to open an issue in the SOLR project.\n\nThis is likely a problem specific to your install, not a bug in Solr.\n\nThe class in question is contained in this jar, at this path location in the most recent Solr release:\ncontrib/extraction/lib/poi-ooxml-3.17.jar\n\nIf you do not know how to make sure this jar is loaded, please ask for help via either the solr-user mailing list or the IRC channel.\n\nhttp://lucene.apache.org/solr/community.html#mailing-lists-irc\n\nIf it is determined that there actually is a bug in Solr, then we can re-open this issue, or open a new one. ",
            "author": "Shawn Heisey",
            "date": "2018-11-13T17:30:48+0000"
        },
        {
            "id": "comment-16685569",
            "content": "No, it's not an install issue or a support questione, please read all my post.\n\nThe issue has been tested on 3 different Solr Clouds with the same Solr version installed using the installation script.\n\nI know where the class is, I opened it, it's jetty or solr that does not \n\nIn fact, as I wrote, if i move the jars from the original path (contrib etc) to the server/lib the class was found, but other classes was missing. This behavior shows that is a class loading issue, I don't know jetty but I think it's a problem related to the class loading or maybe the class loading isolation.\n\nThe jar containig the missing class has been declared on solrconfig.xml and it's the same jar containig the poi classes that my configuration correctly uses indexing the non-encrypted xlsx or xls ",
            "author": "Luca",
            "date": "2018-11-13T18:15:41+0000"
        },
        {
            "id": "comment-16685573",
            "content": "Sorry If I skipped the support IRC, but I'm 100% sure and the issue is critical ",
            "author": "Luca",
            "date": "2018-11-13T18:17:26+0000"
        },
        {
            "id": "comment-16685601",
            "content": "We will need all the config files from your core, and a description of any modifications you have made to the file/directory structure of the Solr install. ",
            "author": "Shawn Heisey",
            "date": "2018-11-13T18:53:14+0000"
        },
        {
            "id": "comment-16685747",
            "content": "And the entire solr.log file generated when you start Solr with the core added and initiate the action that generates the error. ",
            "author": "Shawn Heisey",
            "date": "2018-11-13T21:16:15+0000"
        },
        {
            "id": "comment-16686133",
            "content": "Perhaps Tim Allison has some insight? The class that's not being found is:\n\norg.apache.poi.poifs.crypt.agile.AgileEncryptionInfoBuilder\n\nand I have no idea where that would be.\n\nFrankly this still looks like a jar file is missing, not that Solr can't find it. A simple Google search yields this, don't know if it's related or not:\nhttps://stackoverflow.com/questions/27183699/java-lang-classnotfoundexception-org-apache-poi-poifs-crypt-agile-agileencrypti ",
            "author": "Erick Erickson",
            "date": "2018-11-14T06:35:05+0000"
        },
        {
            "id": "comment-16686164",
            "content": "Erick, the class is in the jar that contains poi, and that is used to parse successfully when the document is not crypted.\n\nI'll try to reproduce the issue in a clean environment to send you a sharable and clean configuration and logs ",
            "author": "Luca",
            "date": "2018-11-14T07:36:00+0000"
        },
        {
            "id": "comment-16686959",
            "content": "I made a clean installation and configuration to isolate the issue.\n\nSolr Version: 7.3.1\n\nThe directory structure is the default structure, made by the installation script over Ubuntu with openJDK 1.8.0_171.\n\nI have 3 node on the same machine, with NOT shared binaries, in /opt/solr1,2 and 3\n\nI added only the mysql connector jar in the server/lib\n\nI attached the following:\n\n\tLog folder of the first node, from the start through the exception to the stop server\n\tConfiguration files\n\tDB script (one table with id and blob\n\tA crypted excel that made the exception happen\n\tAn uncrypted word that has no problem\n\n\n\nLet me know if I forgot something ",
            "author": "Luca",
            "date": "2018-11-14T18:28:42+0000"
        },
        {
            "id": "comment-16687159",
            "content": "Have you tried\n\n\tTo load the jars using\u00a0<lib> tags in solconfig?\n\tPlace all extraction/lib jars in $SOLR_HOME/lib ?\n\tPlace those jars in server/solr-webapp/WEB-INF/lib/ ?\n\n\n\nWhere jars are located (by which class loader) can affect their visibility and some plugins actually need to be in WEB-INF/lib to work. I guess that SOLR_HOME/lib would work in your case. ",
            "author": "Jan H\u00f8ydahl",
            "date": "2018-11-14T21:36:58+0000"
        },
        {
            "id": "comment-16687623",
            "content": "The libraries are already imported using the lib tag by the default configuration.\n\nI only tried to move the jars in the server/lib, this make the class to be found but after it can't find another class.\n\nYour suggestions are all probably valid, but I am not expert in jetty and in the solr software architecture, so I don't want to do this, I'll wait the complete analisys ",
            "author": "Luca",
            "date": "2018-11-15T08:05:34+0000"
        },
        {
            "id": "comment-16687782",
            "content": "I managed to reproduce in 7.5.0 with these steps:\n\nwget https://issues.apache.org/jira/secure/attachment/12948197/crypted.xlsx\ndocker run --rm --name solr -d -p 8983:8983 solr:7.5.0\ndocker logs solr\ndocker exec solr solr create -c repro\ncurl 'http://localhost:8983/solr/repro/update/extract?literal.id=doc1&commit=true' -F \"myfile=@crypted.xlsx\"\ndocker logs solr\ndocker stop solr\n\n\nNext one can try to move jars around... ",
            "author": "Jan H\u00f8ydahl",
            "date": "2018-11-15T10:35:37+0000"
        },
        {
            "id": "comment-16687878",
            "content": "See the JavaDoc comment in POI: https://github.com/apache/poi/blob/20447793519a29a99662866451bb9512c4fea565/src/java/org/apache/poi/poifs/crypt/EncryptionInfo.java#L189-L196\n\u00a0* This method loads the builder class with reflection, which may generate\n\n\ta {@code ClassNotFoundException} if the class is not on the classpath.\n\tFor example, {@link org.apache.poi.poifs.crypt.agile.AgileEncryptionInfoBuilder}\n\tis contained in the {@code poi-ooxml} package since the class makes use of some OOXML\n\tclasses rather than using the {@code poi} package and plain XML DOM calls.\n\tAs such, you may need to include {@code poi-ooxml} and {@code poi-ooxml-schemas} to load\n\tsome encryption mode builders. See bug #60021 for more information.\n *https://bz.apache.org/bugzilla/show_bug.cgi?id=60021\n\n\nSo it may be the load by reflection that is the issue here ",
            "author": "Jan H\u00f8ydahl",
            "date": "2018-11-15T11:30:34+0000"
        },
        {
            "id": "comment-16687898",
            "content": "Success. Moving all extraction/lib jars\u00a0inside of WEB-INF/lib\u00a0makes it work. This is probably because reflection uses another class loader which does not see the classes loaded from <lib> inclusions.\n\nWith Docker, follow these instructions:\n\nwget https://issues.apache.org/jira/secure/attachment/12948197/crypted.xlsx\ndocker run --rm -ti --name solr -p 8983:8983 -v \"$(pwd):/local\" solr:7.5.0 bash\n\n# Inside docker prompt;\nmv contrib/extraction/lib/* server/solr-webapp/webapp/WEB-INF/lib/\nsolr start\nsolr create -c repro\ncurl 'http://localhost:8983/solr/repro/update/extract?literal.id=doc1&commit=true' -F \"myfile=@/local/crypted.xlsx\"\n# ERROR \"msg\":\"org.apache.tika.exception.EncryptedDocumentException: Unable to process: document is encrypted\",\nsolr stop\nexit\n\nI have seen this with other plugins using reflection as well. Hope we can fix this in a future Solr version. ",
            "author": "Jan H\u00f8ydahl",
            "date": "2018-11-15T11:41:36+0000"
        },
        {
            "id": "comment-16687908",
            "content": "I also tried moving the jars to $SOLR_HOME/lib but that did not do the trick either ",
            "author": "Jan H\u00f8ydahl",
            "date": "2018-11-15T11:46:40+0000"
        },
        {
            "id": "comment-16687924",
            "content": "I propose that we document this limitation in a general section of Ref Guide (if not already there, have not checked) and perhaps in particular in the Extraction Handler documentation.\n\nPerhaps we should also open a new Jira with the aim of fixing Solr's class loading. I think Jetty gives our code control over class loading so we perhaps could make sure we use the same class loader for loading everything, including plugin jars?\n\nI'm a bit puzzled that POI's own class was not able to load this by reflection since both JARs are loaded by the same loader.\u00a0You see from the trace that is looks up using WebAppClassLoader:\n\nCaused by: java.lang.ClassNotFoundException: org.apache.poi.poifs.crypt.agile.AgileEncryptionInfoBuilder\nat java.net.URLClassLoader.findClass(URLClassLoader.java:381)\nat java.lang.ClassLoader.loadClass(ClassLoader.java:424)\nat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\nat org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:565)\nat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\nat org.apache.poi.poifs.crypt.EncryptionInfo.getBuilder(EncryptionInfo.java:222)\n\nFortunately this was fixed in POI 4.0.0 which is used in latest Tika which will be included in Solr 8 (master) and will also be released with Solr 7.6.0 scheduled for next week \u00a0See https://github.com/apache/poi/commit/d3b5a0141ed28c19b1afe57a0c4dc7b08937b704\u00a0for the related change in class loader in POI, hopefully this does the trick. ",
            "author": "Jan H\u00f8ydahl",
            "date": "2018-11-15T12:03:14+0000"
        },
        {
            "id": "comment-16687959",
            "content": "Using onError=\"skip\" and setting the ignoreTikaException to true seems to do the work, skipping the document.\n\nIt's a workaround for me not a solution, also because the readable but modifiable documents must work ",
            "author": "Luca",
            "date": "2018-11-15T12:33:06+0000"
        }
    ]
}