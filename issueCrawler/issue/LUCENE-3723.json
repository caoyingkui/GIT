{
    "id": "LUCENE-3723",
    "title": "Remove FieldMaskingSpanQuery (or fix its scoring)",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "4.0-ALPHA",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "In Lucene 4.0 we added new scoring mechanisms, but FieldMaskingSpanQuery is a serious problem:\n\nBecause it lies about the fields of its terms, this sometimes results in totally bogus\nstatistics, cases where a single terms totalTermFreq exceeds sumTotalTermFreq for the entire field (since its lying about it).\n\nSuch lying could result in NaN/Inf/Negative scores, exceptions, divide by zero, and other problems,\nbecause the statistics are impossibly bogus.",
    "attachments": {
        "LUCENE-3723.patch": "https://issues.apache.org/jira/secure/attachment/12511838/LUCENE-3723.patch",
        "LUCENE-3723_test.patch": "https://issues.apache.org/jira/secure/attachment/12511836/LUCENE-3723_test.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-01-25T13:33:56+0000",
            "content": "I'd really like to commit these asserts, but this query is in the way.\n\nAs a temporary measure we can @Ignore its tests. ",
            "author": "Robert Muir",
            "id": "comment-13193028"
        },
        {
            "date": "2012-01-25T13:54:51+0000",
            "content": "Patch enabling the assertions, and disabling FieldMaskingSpanQuery's query tests unless the sim for the masked field is TFIDFSimilarity.\n\nI also changed the javadoc:\n\n  * <p>Note: as {@link #getField()} returns the masked field, scoring will be \n- * done using the norms of the field name supplied. This may lead to unexpected\n- * scoring behaviour.</p>\n+ * done using the Similarity and collection statistics of the field name supplied,\n+ * but with the term statistics of the real field. This may lead to exceptions,\n+ * poor performance, and unexpected scoring behaviour.</p>\n  */\n\n\n\nI think because this query doesn't really work except with certain scoring models, we should at least move it to contrib if we aren't going to fix its scoring or remove it. ",
            "author": "Robert Muir",
            "id": "comment-13193047"
        }
    ]
}