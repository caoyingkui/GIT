{
    "id": "SOLR-7672",
    "title": "introduce implicit _parent_:true",
    "details": {
        "components": [
            "query parsers",
            "update"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "affect_versions": "5.2",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Solr provides block join support in non-invasive manner. It turns out, it gives a chance to shoot a leg. As it was advised by Uwe Schindler at SOLR-7606, let AddUpdateCommand add parent:true field to the document (not to children). Do it always no matter whether it has children or not.    \nAlso, introduce default values for for block join qparsers {!parent which=_parent_:true} {!child of=_parent_:true} (sometimes, I rather want to hide them from the user, because they are misunderstood quite often).  \nPlease share your concerns and vote.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-08-26T13:14:24+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Bulk move to 5.4 after 5.3 release. ",
            "id": "comment-14713377"
        },
        {
            "date": "2015-11-25T18:20:12+0000",
            "author": "Yonik Seeley",
            "content": "Hmmm, _parent_:true wouldn't seem to work that well for multi-level hierarchies (remember, we're not limited to a single parent-child level).\n\nSeems like something more general is desirable.  It feels like indexing _path_ would be both general and very useful.  The top-level parents would have a zero length path:\"\"   Unfortunately, \"/\" is used by regex in the lucene query parser, so we could use \".\" as a path separator instead.\n\nThis fits in well with (future) auto-mapping from JSON structure to nested documents.\n\nExample:\n\n{\n  id:x,\n  work_address: {\n    state:NY,\n    street:\"my work street\"\n  },\n  home_address:{\n    state:NJ,\n    street:\"my_home street\"\n  },\n  cars:[\n    {\n      make: Toyota,\n      model: Highlander\n    },\n    {\n      make: Honda,\n      model: Accord\n    }\n  ]  \n}\n\n\n\npath would be \"\" for the root, then \"home_address\", \"street_address\", and \"cars\" for the other nested documents.\n\nNote: I'm not asking that all this be done in this issue, just that we think about the end-game for nested documents (where we want to go), and make whatever we do fit in with that scheme.  For this specific JIRA issue, all that would need to be done is use a more generic _path_:\"\" \n\nHmmm, perhaps _type_ would be a better name, since we aren't including id values or anything, we're just deriving a type name from the path. ",
            "id": "comment-15027313"
        },
        {
            "date": "2015-12-03T17:48:24+0000",
            "author": "Mikhail Khludnev",
            "content": "just an idea for further consideration, when q={!parent}foo&fl=*, it may imply fl=[child],* just to show children by default. ",
            "id": "comment-15038194"
        },
        {
            "date": "2015-12-03T18:03:19+0000",
            "author": "Mikhail Khludnev",
            "content": "Yonik Seeley\nmy turn: _type_:root and spin off a jira about  _type_:_root_.home_address or  _type_:home_address \nDo you like it? ",
            "id": "comment-15038213"
        },
        {
            "date": "2015-12-04T01:21:19+0000",
            "author": "Yonik Seeley",
            "content": "Yeah, that probably works.\nWe can always just use some syntactic sugar if we don't want a literal _root_ mandated in whatever future query syntax we come up with.\n\nNote to new readers: when you see italicized text, we normally don't mean it that way... it's JIRA markup.  Normally what we really mean is a literal leading and trailing underscore on whatever is being proposed.\n\n_type_:_root_ is what is being proposed here.\n\nAnd if you see backslashes in front of the underscores, you're probably reading the post in raw form (i.e. from an email) and it means that the author is just trying to get JIRA to display literal underscores (but not backslashes). ",
            "id": "comment-15039542"
        },
        {
            "date": "2016-11-03T14:14:12+0000",
            "author": "Romain Rigaux",
            "content": "+1 \nHaving the \"paths/types\" and name of the \"type\" fields would provide out of a the box a \"schema\" of the data that would greatly improve the user experience with nested objects. ",
            "id": "comment-15632831"
        },
        {
            "date": "2016-12-07T17:09:47+0000",
            "author": "Romain Rigaux",
            "content": "e.g. if we take the book/review example of http://yonik.com/solr-nested-objects/\n\nThis would (field name, then hierarchy of values) let us query to introspect and build the \"schema\" easily:\n\n_type_:\"type_s:book\"\n_type_:\"type_s:book.review\"\n\n\n ",
            "id": "comment-15729289"
        }
    ]
}