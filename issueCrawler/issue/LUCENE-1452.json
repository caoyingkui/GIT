{
    "id": "LUCENE-1452",
    "title": "Binary field content lost during optimize",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/index"
        ],
        "type": "Bug",
        "fix_versions": [
            "2.4.1",
            "2.9"
        ],
        "affect_versions": "2.4,                                            2.9",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Scenario:\n\n\n\tcreate an index with arbitrary content, and close it\n\topen IndexWriter again, and add a document with binary field (stored but not compressed)\n\tclose IndexWriter without optimizing, so that the new document is in a separate segment.\n\topen IndexReader. You can read the last document and its binary field just fine.\n\topen IndexWriter, optimize the index, close IndexWriter\n\topen IndexReader. Now the field is still present (not null) and is marked as binary, but the data is not there - Field.getBinaryLength() returns 0.",
    "attachments": {
        "binaryField-junit.patch": "https://issues.apache.org/jira/secure/attachment/12393901/binaryField-junit.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2008-11-13T22:35:46+0000",
            "content": "Test case to illustrate the problem. This happens both in 2.4.0 and trunk, although the patch is from trunk.\n\nUnfortunately, I don't know the reason for this behavior, so I can't provide a fix. ",
            "author": "Andrzej Bialecki",
            "id": "comment-12647438"
        },
        {
            "date": "2008-11-14T09:51:14+0000",
            "content": "I found the issue.  It was caused by LUCENE-1219 (first released in\n2.4.0), which added a reuse API to Fieldable for binary fields.  When\nloading a field for merging we were failing to set the binaryLength.\nA similar case affected lazy field merging (I extended the test case\nto show it).\n\nThis is a silent data loss bug.  It only affects non-compressed binary\nfields.  Whenever segments are merged such that the segment's fields\nare non-congruent (ie, the same field name was assigned different\nfield numbers across the segments being merged), then binary fields in\nthose segments are all set to 0 length.\n\nI will commit shortly. ",
            "author": "Michael McCandless",
            "id": "comment-12647556"
        },
        {
            "date": "2008-11-14T10:03:32+0000",
            "content": "Committed revision 713962 to trunk.\n\nI think we should back-port this for a future 2.4.1. ",
            "author": "Michael McCandless",
            "id": "comment-12647559"
        },
        {
            "date": "2008-11-14T10:31:42+0000",
            "content": "Committed revision 713970 on 2.4 branch.\n\nThanks for reporting this Andrzej! ",
            "author": "Michael McCandless",
            "id": "comment-12647569"
        },
        {
            "date": "2010-10-10T13:54:27+0000",
            "content": "flights\nbaby names ",
            "author": "raz71abb6",
            "id": "comment-12919604"
        }
    ]
}