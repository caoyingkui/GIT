{
    "id": "LUCENE-8270",
    "title": "Remove MatchesIterator.term()",
    "details": {
        "components": [],
        "status": "Closed",
        "resolution": "Fixed",
        "fix_versions": [
            "7.4",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "labels": "",
        "priority": "Major",
        "type": "Improvement"
    },
    "description": "As discussed on LUCENE-8268, we don't have a clear use-case for this yet, and it's complicating adding Matches to phrase queries, so let's just remove it for now.",
    "attachments": {
        "LUCENE-8270.patch": "https://issues.apache.org/jira/secure/attachment/12920292/LUCENE-8270.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16448219",
            "author": "Adrien Grand",
            "content": "+1 ",
            "date": "2018-04-23T14:30:29+0000"
        },
        {
            "id": "comment-16448340",
            "author": "ASF subversion and git services",
            "content": "Commit 9a3a43771ee7122d291a96c7543e099c010005cf in lucene-solr's branch refs/heads/branch_7x from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9a3a437 ]\n\nLUCENE-8270: Remove MatchesIterator.term() ",
            "date": "2018-04-23T15:51:31+0000"
        },
        {
            "id": "comment-16448341",
            "author": "ASF subversion and git services",
            "content": "Commit e167e9124757b3f3597db8149c49b7f388c48627 in lucene-solr's branch refs/heads/master from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e167e91 ]\n\nLUCENE-8270: Remove MatchesIterator.term() ",
            "date": "2018-04-23T15:51:33+0000"
        },
        {
            "id": "comment-16461915",
            "author": "David Smiley",
            "content": "I believe the semantics of term() should\u00a0simply be the term at the particular match position. \u00a0That ought to be one term unless the indexed data had more than one term at this position and furthermore the query matched more than one\u00a0of the\u00a0terms at this position. \u00a0In this very edge case, I don't care much which term is returned \u00a0\n\nI think the confusion here is what the underlying semantics are for a MatchesIterator when we have something like a phrase. \u00a0If we think of MatchesIterator as very similar to OffsetsEnum in the UnifiedHighlighter, then we iterate to each word/term. \u00a0Then term() is straight-forward, and so is a hypothetical getPayload(). \u00a0Lets just do this? \u00a0Adding a freq() too would make my day \u00a0\u00a0In this scenario there is no notion of a position span; it's a position-by-position view. \u00a0We could add a getPosition but wouldn't need a start/end.\n\nIf the matches() caller wanted to detect the \"span\" of say a phrase, (maybe to highlight it nicer as one markup tag\u00a0enclosing pair?) then maybe handle that with some new method like spanOccurrence():int which could return which span/occurrence the MatchesIterator is currently at?\n\n\u00a0 ",
            "date": "2018-05-03T04:20:03+0000"
        },
        {
            "id": "comment-16462485",
            "author": "David Smiley",
            "content": "That ought to be one term unless the indexed data had more than one term at this position and furthermore the query matched more than one\u00a0of the\u00a0terms at this position.\nActually that's easy too \u2013 just iterate to these terms at this same position as well. \u00a0This will happen automatically if the MatchesIterator is\u00a01-1 with a\u00a0PostingsEnum. ",
            "date": "2018-05-03T14:03:16+0000"
        },
        {
            "id": "comment-16529548",
            "author": "Alan Woodward",
            "content": "This went in to 7.4, and should have been resolved a while back. ",
            "date": "2018-07-02T08:48:13+0000"
        }
    ]
}