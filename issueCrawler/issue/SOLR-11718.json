{
    "id": "SOLR-11718",
    "title": "Deprecate CDCR Buffer APIs and set Buffer to \"false\"",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "CDCR"
        ],
        "type": "Improvement",
        "fix_versions": [
            "7.6",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Patch Available"
    },
    "description": "Kindly see the discussion on SOLR-11652.\n\nToday, if we see the current CDCR documentation page, buffering is \"disabled\" by default in both source and target. We don't see any purpose served by Cdcr buffering and it is quite an overhead considering it can take a lot heap space (tlogs ptr) and forever retention of tlogs on the disk when enabled. Also today, even if we disable buffer from API on source , considering it was enabled at startup, tlogs are never purged on leader node of shards of source, refer jira: SOLR-11652",
    "attachments": {
        "SOLR-11718.patch": "https://issues.apache.org/jira/secure/attachment/12918913/SOLR-11718.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-12-04T07:58:50+0000",
            "content": "Please mind on the patch, I have commented out the relevant code from the module. I can remove them completely if that is how deprecation of APIs are done. ",
            "author": "Amrit Sarkar",
            "id": "comment-16276415"
        },
        {
            "date": "2017-12-08T06:25:58+0000",
            "content": "We should do the following here :\n\n\n\tremove the buffer from sample solrconfig from both source and target . Add a deprecation warning in the ref guide for the enable buffer and disable buffer API\n\tchange default from enabled to disabled in the code\n\tleave a comment in CdcrRequestHandler handleEnableBufferAction/handleDisableBufferAction to remove it in the next 8.0 . We could perhaps remove it earlier as well (not sure) but we don't need to tackle that in this Jira\n\n ",
            "author": "Varun Thacker",
            "id": "comment-16283114"
        },
        {
            "date": "2018-01-05T10:52:31+0000",
            "content": "Patch attached with documentation changes but CdcrReplicationHandlerTest is failing due to changed behavior of disabling Buffer permanently.\n\n7 tests failed.\nFAILED:  org.apache.solr.cloud.cdcr.CdcrReplicationHandlerTest.testReplicationWithBufferedUpdates\nFAILED:  junit.framework.TestSuite.org.apache.solr.cloud.cdcr.CdcrReplicationHandlerTest\nFAILED:  junit.framework.TestSuite.org.apache.solr.cloud.cdcr.CdcrReplicationHandlerTest\nFAILED:  org.apache.solr.cloud.cdcr.CdcrReplicationHandlerTest.testPartialReplication\nFAILED:  org.apache.solr.cloud.cdcr.CdcrReplicationHandlerTest.testFullReplication\nFAILED:  org.apache.solr.cloud.cdcr.CdcrReplicationHandlerTest.testPartialReplicationAfterPeerSync\nFAILED:  org.apache.solr.cloud.cdcr.CdcrReplicationHandlerTest.testPartialReplicationWithTruncatedTlog\n\nLooking into studying and implement what should be intended behavior now. ",
            "author": "Amrit Sarkar",
            "id": "comment-16312936"
        },
        {
            "date": "2018-01-08T12:27:14+0000",
            "content": "PFA updated SOLR-11718.patch which takes care for above: CdcrReplicationHandlerTest failures by simply removing them.\n\nThe tests written for CdcrReplicationHandlerTest are specific for \"source\" cluster and verifies if the tlogs are getting copied over to follower nodes from leader when followers fail in b/w indexing, commits and etc. Since the CdcrReplicationHandlerTest was failing, suggesting typical Index Replication will take place when followers are numRecordsToKeep count behind.\n\n\"target\" cluster has nothing to do with it and is never referenced.\n\nVarun Thacker this ready to ship with appropriate comments and documentation intact. ",
            "author": "Amrit Sarkar",
            "id": "comment-16316209"
        },
        {
            "date": "2018-01-10T22:40:36+0000",
            "content": "Hi Amrit,\n\nThanks for picking up this Jira\n\nFew questions while looking at the patch\n\n1. In CdcrRequestHandlerTest#testCheckpointActions why have the asserts been commented out?\n2. \"Since the CdcrReplicationHandlerTest was failing, suggesting typical Index Replication will take place when followers are numRecordsToKeep count behind.\" - Maybe we should modify the test to assert document count instead of just commenting it out?\n3. I don't quite understand the doc changes - \"ENABLEBUFFER API has been deprecated in favor of when buffering is enabled, the Update Logs will grow without limit; they will never be purged.\" ",
            "author": "Varun Thacker",
            "id": "comment-16321269"
        },
        {
            "date": "2018-01-11T11:59:32+0000",
            "content": "Varun Thacker\n\nThank you for the feedback.\n\n1. In CdcrRequestHandlerTest#testCheckpointActions why have the asserts been commented out?\n\nCDCR has a typical behavior when Buffering is enabled, LastProcessedVersion emits out -1 which is picked as minimum for checkpoint, resulting -1 for all shards' Checkpoints. The assertion is checkpoint to -1, which won't be the case NOW as buffering is disabled by default and will emit rightful tlog_version.\n\n2. \"Since the CdcrReplicationHandlerTest was failing, suggesting typical Index Replication will take place when followers are numRecordsToKeep count behind.\" - Maybe we should modify the test to assert document count instead of just commenting it out?\n\nConsidering this is the default behavior of follower nodes when they fall back by numRecordsToKeep w.r.t leader, I didn't write them up. I will add those tests too in the same CdcrReplicationHandlerTest.\n\n3. I don't quite understand the doc changes - \"ENABLEBUFFER API has been deprecated in favor of when buffering is enabled, the Update Logs will grow without limit; they will never be purged.\"\n\nYeah, english. \"ENABLEBUFFER API has been deprecated in favor of buffering is disabled by default. And when buffering is enabled, the Update Logs will grow without limit; they will never be purged\". Is this better? makes sense? ",
            "author": "Amrit Sarkar",
            "id": "comment-16322103"
        },
        {
            "date": "2018-01-12T03:40:04+0000",
            "content": "Modified patch with Varun's recommendation: SOLR-11718-v3.patch. Improved documentation and tests.\n\nThere is one test method in CdcrReplicationHandlerTest::testReplicationWithBufferedUpdates which is failing at the moment as:\n\n\n  [beaster] [00:04:50.322] FAILURE  353s | CdcrReplicationHandlerTest.testReplicationWithBufferedUpdates <<<\n  [beaster]    > Throwable #1: java.lang.AssertionError: There are still nodes recoverying - waited for 330 seconds\n  [beaster]    > \tat __randomizedtesting.SeedInfo.seed([25F2AEF0CD93CBA3:F6FBFEEE88005734]:0)\n  [beaster]    > \tat org.junit.Assert.fail(Assert.java:93)\n  [beaster]    > \tat org.apache.solr.cloud.AbstractDistribZkTestBase.waitForRecoveriesToFinish(AbstractDistribZkTestBase.java:185)\n  [beaster]    > \tat org.apache.solr.cloud.AbstractDistribZkTestBase.waitForRecoveriesToFinish(AbstractDistribZkTestBase.java:140)\n  [beaster]    > \tat org.apache.solr.cloud.AbstractDistribZkTestBase.waitForRecoveriesToFinish(AbstractDistribZkTestBase.java:135)\n  [beaster]    > \tat org.apache.solr.cloud.cdcr.BaseCdcrDistributedZkTest.waitForRecoveriesToFinish(BaseCdcrDistributedZkTest.java:522)\n  [beaster]    > \tat org.apache.solr.cloud.cdcr.BaseCdcrDistributedZkTest.restartServer(BaseCdcrDistributedZkTest.java:563)\n  [beaster]    > \tat org.apache.solr.cloud.cdcr.CdcrReplicationHandlerTest.testReplicationWithBufferedUpdates(CdcrReplicationHandlerTest.java:228)\n\n\n\nWe test in this method that when leader is still receiving updates, follower if restarted will buffer the updates and then replay while recovering. In this scenario with buffering being disabled, the follower node is always on recovery and never becomes active as indexing never stops and follower is always behind X no of documents from leader. This is a typical situation where we wait for indexing to complete and then restart follower to fetch index from leader and become active.\n\nI am still writing smart test for this according to current design, but seems like this scenario is no longer valid. Looking forward to thoughts and recommendation. ",
            "author": "Amrit Sarkar",
            "id": "comment-16323498"
        },
        {
            "date": "2018-01-15T23:29:11+0000",
            "content": "Hi Amrit,\n\nI'm looking at the v3 version of your patch and still have a few questions\n\n\u00a0\n\n\tWe should remove the checkpoint asserts that are currently commented out in\u00a0CdcrRequestHandlerTest right?\n\tHow about this in the deprecation message in the docs \"ENABLEBUFFER API has been deprecated. Solr now uses replication to catch up with the source if the target is down for an extended period of time.\"\u00a0 and the same message for DISABLEBUFFER as well\n\tWe should add a test which explicitly enabled buffering and does a few sanity tests. This feature still needs to be tested till it's removed\n\n ",
            "author": "Varun Thacker",
            "id": "comment-16326630"
        },
        {
            "date": "2018-01-16T00:00:41+0000",
            "content": "Varun Thacker,\n\nWe should remove the checkpoint asserts that are currently commented out in CdcrRequestHandlerTest right?\nRight. We decided to remove the commneted lines at the time of commit patch.\nHow about this in the deprecation message in the docs \"ENABLEBUFFER API has been deprecated. Solr now uses replication to catch up with the source if the target is down for an extended period of time.\"  and the same message for DISABLEBUFFER as well\nCertainly more human. But warning for enabling Buffer should be posted too right? maybe a common note and not in both DISABLE and ENABLE buffer apis.\nWe should add a test which explicitly enabled buffering and does a few sanity tests. This feature still needs to be tested till it's removed\nSure. We can have old test cases in place (few of them) for buffer enabled.\n\nI will write the updated patch for above three if agreed upon. ",
            "author": "Amrit Sarkar",
            "id": "comment-16326644"
        },
        {
            "date": "2018-01-16T12:53:22+0000",
            "content": "Patch attached considering all the above points. Hope these tests are enough. ",
            "author": "Amrit Sarkar",
            "id": "comment-16327087"
        },
        {
            "date": "2018-01-24T16:40:44+0000",
            "content": "Patch uploaded with minor corrections. ",
            "author": "Amrit Sarkar",
            "id": "comment-16337871"
        },
        {
            "date": "2018-04-13T08:59:00+0000",
            "content": "Patch uploaded to the master. ",
            "author": "Amrit Sarkar",
            "id": "comment-16437032"
        },
        {
            "date": "2018-04-18T22:45:22+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 2 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   1m 38s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   1m 36s \n  the patch passed  \n\n\n +1 \n  javac  \n   1m 36s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   1m 41s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   1m 36s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   1m 36s \n  the patch passed  \n\n\n +1 \n  Validate ref guide  \n   1m 36s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n  55m 21s \n  core in the patch failed.  \n\n\n  \n   \n  62m 14s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.cloud.autoscaling.AutoScalingHandlerTest \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-11718 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12919567/SOLR-11718.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  validaterefguide  \n\n\n uname \n Linux lucene1-us-west 3.13.0-88-generic #135-Ubuntu SMP Wed Jun 8 21:10:42 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 29cbd03 \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on April 8 2014 \n\n\n Default Java \n 1.8.0_152 \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/61/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/61/testReport/ \n\n\n modules \n C: solr/core solr/solr-ref-guide U: solr \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/61/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16443297"
        },
        {
            "date": "2018-06-28T03:32:40+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 2 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   2m 25s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   2m 17s \n  the patch passed  \n\n\n +1 \n  javac  \n   2m 17s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   2m 24s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   2m 17s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   2m 17s \n  the patch passed  \n\n\n +1 \n  Validate ref guide  \n   2m 17s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n 182m 40s \n  core in the patch failed.  \n\n\n  \n   \n 192m 33s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.cloud.autoscaling.IndexSizeTriggerTest \n\n\n\u00a0\n solr.cloud.api.collections.ShardSplitTest \n\n\n\u00a0\n solr.cloud.autoscaling.sim.TestGenericDistributedQueue \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-11718 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12919567/SOLR-11718.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  validaterefguide  \n\n\n uname \n Linux lucene1-us-west 3.13.0-88-generic #135-Ubuntu SMP Wed Jun 8 21:10:42 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / e8d1057 \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on April 8 2014 \n\n\n Default Java \n 1.8.0_172 \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/134/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/134/testReport/ \n\n\n modules \n C: solr/core solr/solr-ref-guide U: solr \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/134/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16525868"
        },
        {
            "date": "2018-06-29T07:34:52+0000",
            "content": "Was looking into the patch and why Buffer is in place and I think we have stated this before;\n\nThe non-leaders at Source have their buffer enabled for the lifetime and the pointer moves; the older tlogs are purged only when CdcrUpdateLogSynchronizer informs the non-leader node that the pointer has moved beyond. Hence we cannot remove buffer entirely, but the default state can still be \"disabled\" so that new users don't have to disable it themselves. ",
            "author": "Amrit Sarkar",
            "id": "comment-16527286"
        },
        {
            "date": "2018-09-25T06:59:37+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 2 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   1m 48s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   1m 29s \n  the patch passed  \n\n\n +1 \n  javac  \n   1m 29s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   1m 35s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   1m 29s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   1m 29s \n  the patch passed  \n\n\n +1 \n  Validate ref guide  \n   1m 29s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n  47m 27s \n  core in the patch failed.  \n\n\n  \n   \n  53m 49s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.cloud.cdcr.CdcrWithNodesRestartsTest \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-11718 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12919567/SOLR-11718.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  validaterefguide  \n\n\n uname \n Linux lucene1-us-west 4.4.0-130-generic #156~14.04.1-Ubuntu SMP Thu Jun 14 13:51:47 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 9bc4b8d \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on July 24 2018 \n\n\n Default Java \n 1.8.0_172 \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/186/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/186/testReport/ \n\n\n modules \n C: solr/core solr/solr-ref-guide U: solr \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/186/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16626881"
        },
        {
            "date": "2018-10-03T20:07:54+0000",
            "content": "Thanks Amrit!\u00a0 I've gone and made some more changes to remove the concept of buffering from our docs. precommit is also happy.\n\nI'd like you to review the final patch and then I'll go ahead and commit it. ",
            "author": "Varun Thacker",
            "id": "comment-16637469"
        },
        {
            "date": "2018-10-04T03:45:01+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 2 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   1m 21s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   1m 14s \n  the patch passed  \n\n\n +1 \n  javac  \n   1m 14s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   1m 19s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   1m 14s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   1m 14s \n  the patch passed  \n\n\n -1 \n  Validate ref guide  \n   1m 14s \n  Validate ref guide bare-bones-html-validation failed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n  53m 46s \n  core in the patch failed.  \n\n\n  \n   \n  58m 47s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.cloud.cdcr.CdcrWithNodesRestartsTest \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-11718 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12942319/SOLR-11718.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  validaterefguide  \n\n\n uname \n Linux lucene1-us-west 4.4.0-130-generic #156~14.04.1-Ubuntu SMP Thu Jun 14 13:51:47 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 554ac64 \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on July 24 2018 \n\n\n Default Java \n 1.8.0_172 \n\n\n Validate ref guide \n https://builds.apache.org/job/PreCommit-SOLR-Build/196/artifact/out/patch-bare-bones-html-validation-solr_solr-ref-guide.txt \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/196/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/196/testReport/ \n\n\n modules \n C: solr/core solr/solr-ref-guide U: solr \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/196/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16637776"
        },
        {
            "date": "2018-10-08T20:47:11+0000",
            "content": "Thanks Varun for reviewing. The patch is good, appropriate doc changes are in place. +1 from my side. ",
            "author": "Amrit Sarkar",
            "id": "comment-16642466"
        }
    ]
}