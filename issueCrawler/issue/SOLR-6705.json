{
    "id": "SOLR-6705",
    "title": "SOLR Start script generates warnings on java 8 due ot experimental options",
    "details": {
        "components": [
            "scripts and tools"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "4.10.3",
            "5.0"
        ],
        "affect_versions": "4.10.2",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Trivial"
    },
    "description": "When using the start script in bin: ./solr start in java 8...\n\n\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=256m; support was removed in 8.0\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option PermSize=256m; support was removed in 8.0\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option CMSTriggerPermRatio=80; support was removed in 8.0\nJava HotSpot(TM) 64-Bit Server VM warning: CMSFullGCsBeforeCompaction is deprecated and will likely be removed in a future release.\n\n\n\n...we should reconsider having these options hardcoded into the start script \u2013 either auto-detect if/when they make sense, or remove them",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2014-11-05T13:52:14+0000",
            "author": "Shawn Heisey",
            "content": "Those messages are there because you're running Java 8.  The first three parameters mentioned don't do anything when running Java 8, the last one currently does change behavior, but won't in a future version.\n\nThese parameters DO have meaning to Java 7, which is a supported platform for the currently available Solr releases, and will continue to be supported by the 5.0 release.  Increasing PermSize (the first two parameters mentioned) is a perfectly valid thing to do on Java 7.  The third and fourth messages refer to garbage collection tuning parameters that are supported by Java 7.  They were intentionally included to speed up garbage collection.\n\nAlthough it might be possible to include changes that would get rid of these warnings on Java 8, it would make the start script significantly more complicated.  That complexity means bugs would be more likely to escape notice and affect users.  I would much rather see warnings than bugs.\n\nI'll leave the issue open right now, in case a committer with more experience has a different take on your concern. ",
            "id": "comment-14198378"
        },
        {
            "date": "2014-11-05T14:48:29+0000",
            "author": "Erick Erickson",
            "content": "In the future, please raise issues like this on the user's list first so we can keep the JIRAs focused on code problems/improvements. ",
            "id": "comment-14198451"
        },
        {
            "date": "2014-11-05T17:22:50+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Actually I encouraged Carsten to file an issue for this, as the start script perfectly well can check Java version and optimize the set of options accordingly. It is a very bad OOTB experience for new users to get WARNINGs thrown on a normal legal startup. The argument that they are \"supposed to be there\" is not a good one, and I'd like us to polish the user experience to be best possible. I'll probably re-open this issue and start looking into it. ",
            "id": "comment-14198684"
        },
        {
            "date": "2014-11-05T18:57:53+0000",
            "author": "Hoss Man",
            "content": "the issue certainly seemed like it was phrased as a question that should have started on the user list - but yeah, let's re-open and re-summarize and evaluate ",
            "id": "comment-14198862"
        },
        {
            "date": "2014-11-05T19:02:32+0000",
            "author": "Hoss Man",
            "content": "some related comments from Uwe & jan on the dev list:\n\nuwe...\n\n\nHi,\n\nI just reviewed the solr.sh.in and solr.cmd.in scripts in solr/bin folder. The following was committed but never discussed:\n\n\n# These GC settings have shown to work well for a number of common Solr workloads\nGC_TUNE=\"-XX:-UseSuperWord \\\n-XX:NewRatio=3 \\\n-XX:SurvivorRatio=4 \\\n-XX:TargetSurvivorRatio=90 \\\n-XX:MaxTenuringThreshold=8 \\\n-XX:+UseConcMarkSweepGC \\\n-XX:+UseParNewGC \\\n-XX:ConcGCThreads=4 -XX:ParallelGCThreads=4 \\\n-XX:+CMSScavengeBeforeRemark \\\n-XX:PretenureSizeThreshold=64m \\\n-XX:CMSFullGCsBeforeCompaction=1 \\\n-XX:+UseCMSInitiatingOccupancyOnly \\\n-XX:CMSInitiatingOccupancyFraction=50 \\\n-XX:CMSTriggerPermRatio=80 \\\n-XX:CMSMaxAbortablePrecleanTime=6000 \\\n-XX:+CMSParallelRemarkEnabled \\\n-XX:+ParallelRefProcEnabled \\\n-XX:+AggressiveOpts\"\n\n\n\nThis is horrible, because of our experience with Hotspot bugs:\n\n-XX:+AggressiveOpts\nThis option is veeeery risky and speed improvements are marginal. PLEASE DON'T DO THIS. If people want the new features they should wait for later Java releases and the new features are tested. See several tasks about the Java 7 disaster! In fact we had reports at Java 6 times when people had enabled this and were affected by the Java 7 GA bugs already in Java 6 and corrupted their indexes!!!\n\n-XX:-UseSuperWord\nIf you have a Haswell CPU, all other improvements in these command line settings are eaten up by this flag! If you have 7u55 at minimum, you should never disable this. Things like BooleanFilter and other bitset operations are up to 2 times faster with Java 7u55 on Haswell CPUs and later!!! This setting only makes sense if you have one of those buggy JDKs (7u40 to 7u51). In all other cases this slows down enormous! In addition, enabling this option may break JDKs before 7u40 (this option was added in 7u40), so breaks:\n> Unrecognized VM option 'UseSuperWord'\n\nIt would be good, if we could fix the startup scripts not not have options, which may also break with JDK 8 or later!\n\n\njan...\n\n\nCan we in a smart way build these best practices into the script, by testing JVM version and (un)setting some of these automatically based on version? The solr.in.* config could have a new option GC_TUNE_AUTO=\"true\" and GC_TUNE commented out. Then if auto is enabled, the bin/solr scripts will decide what flags to set. Experts can override.\nAlso related is SOLR-6705, some options should be set automatically only for some JVM versions.\n ",
            "id": "comment-14198871"
        },
        {
            "date": "2014-11-05T19:52:14+0000",
            "author": "Erick Erickson",
            "content": "fair enough, sorry for jumping the gun here. No harm, no foul.  ",
            "id": "comment-14198959"
        },
        {
            "date": "2014-11-10T20:51:51+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Timothy Potter, see also the patch @ SOLR-6693 where I added detection of Solr version and 32/64 bit as part of that issue. Could be used for further decision making. One approach I thought of is to split GC into three variables in solr.in.sh: GC_TUNE, GC_TUNE_JAVA7 and GC_TUNE_JAVA8, and move version-specific options over to the respective vars. Just an idea. ",
            "id": "comment-14205315"
        },
        {
            "date": "2014-11-10T23:27:29+0000",
            "author": "Timothy Potter",
            "content": "Thanks Jan H\u00f8ydahl for helping out with the 32-bit windows script issues!\n\nFor this, here's what I'm thinking of adding to the *nix script\n\n\nJAVA_VERSION=`echo \"$(java -version 2>&1)\" | grep \"java version\" | awk '{ print substr($3, 2, length($3)-2); }'`\nif [ \"${JAVA_VERSION:0:3}\" == \"1.7\" ]; then\n  # Specific Java version hacking\n  GC_TUNE=\"$GC_TUNE -XX:CMSFullGCsBeforeCompaction=1 -XX:CMSTriggerPermRatio=80\"\n  JAVA_MINOR_VERSION=${JAVA_VERSION:(-2)}\n  if [[ $JAVA_MINOR_VERSION -ge 40 && $JAVA_MINOR_VERSION -le 51 ]]; then\n    GC_TUNE=\"$GC_TUNE -XX:-UseSuperWord\"\n    echo -e \"\\nWARNING: Java version $JAVA_VERSION has known bugs with Lucene and requires the -XX:-UseSuperWord flag. Please consider upgrading your JVM.\\n\"\n  fi\nfi\n\n\n\nObviously the problematic flags will be removed from the default GC_TUNE settings in solr.in.sh and then just enabled for specific versions. ",
            "id": "comment-14205547"
        },
        {
            "date": "2014-11-11T04:21:48+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1638022 from Timothy Potter in branch 'dev/trunk'\n[ https://svn.apache.org/r1638022 ]\n\nSOLR-6705: better handling of JVM version specific options ",
            "id": "comment-14205921"
        },
        {
            "date": "2014-11-11T04:27:30+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1638023 from Timothy Potter in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1638023 ]\n\nSOLR-6705: better handling of JVM version specific options ",
            "id": "comment-14205931"
        },
        {
            "date": "2014-11-11T04:27:43+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1638024 from Timothy Potter in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1638024 ]\n\nSOLR-6705: better handling of JVM version specific options ",
            "id": "comment-14205932"
        },
        {
            "date": "2014-11-11T21:28:18+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1638429 from Timothy Potter in branch 'dev/trunk'\n[ https://svn.apache.org/r1638429 ]\n\nSOLR-6705: Add specific JVM version checking to Windows start scripts ",
            "id": "comment-14207105"
        },
        {
            "date": "2014-11-11T22:22:15+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1638477 from Timothy Potter in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1638477 ]\n\nSOLR-6705: Add specific JVM version checking to Windows start scripts ",
            "id": "comment-14207193"
        },
        {
            "date": "2014-11-11T22:30:32+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1638484 from Timothy Potter in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1638484 ]\n\nSOLR-6705: Add specific JVM version checking to Windows start scripts ",
            "id": "comment-14207206"
        },
        {
            "date": "2014-11-11T22:34:04+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1638485 from Timothy Potter in branch 'dev/trunk'\n[ https://svn.apache.org/r1638485 ]\n\nSOLR-6705: mention fix in changes ",
            "id": "comment-14207215"
        },
        {
            "date": "2015-02-23T05:02:34+0000",
            "author": "Anshum Gupta",
            "content": "Bulk close after 5.0 release. ",
            "id": "comment-14332910"
        }
    ]
}