{
    "id": "LUCENE-6473",
    "title": "Make Spans an interface",
    "details": {
        "resolution": "Won't Fix",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Resolved",
        "type": "Improvement"
    },
    "description": "Spans is currently an abstract class, extending DocIdSetIterator.  This restricts what we can do with implementations of Spans.  For example, in LUCENE-6371, it would be useful to have PayloadSpan classes that extend existing Spans implementations, but that also implement a PayloadSpans interface that extends Spans.  This isn't possible if Spans is not an interface itself.",
    "attachments": {
        "LUCENE-6473.patch": "https://issues.apache.org/jira/secure/attachment/12731751/LUCENE-6473.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14536901",
            "author": "Alan Woodward",
            "date": "2015-05-09T21:21:59+0000",
            "content": "Patch.  This makes Spans an interface, incorporating the DocIdSetIterator methods that are used in the various implementations.  It also adds a Spans.Iterator wrapper class that represents a Spans as a DocIdSetIterator for those places that need it.\n\nAnother way to do this would be perhaps to make DocIdSetIterator itself an interface.  It currently only has a single concrete method on it, slowAdvance(), which we could replace in trunk with a default interface method and in 5.x with a separate utility method.  I'd guess that a lot more people extend DISI in their own code, however, which would make that change more invasive. "
        },
        {
            "id": "comment-14586114",
            "author": "Alan Woodward",
            "date": "2015-06-15T14:32:40+0000",
            "content": "This isn't necessary due to LUCENE-6371 "
        }
    ]
}