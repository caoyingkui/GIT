{
    "id": "LUCENE-6084",
    "title": "Add reasonable IndexOutput.toString",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "priority": "Minor",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "In LUCENE-3539 we fixed IndexInput.toString to always include the resourceDescription.\n\nI think we should do the same for IndexOutput?\n\nI don't think Lucene currently uses/relies on IndexOutput.toString, but e.g. at least Elasticsearch does, and likely others, so I think it can only help if you can see which path is open by this IndexOutput.",
    "attachments": {
        "LUCENE-6084.patch": "https://issues.apache.org/jira/secure/attachment/12684388/LUCENE-6084.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14229657",
            "author": "Michael McCandless",
            "date": "2014-12-01T11:00:41+0000",
            "content": "Simple patch.\n\nI left RAMOutputStream as allowing \"noname\" since we use it in many places for temporary in-memory writing ... but I fixed RAMDirectory to pass it the name. "
        },
        {
            "id": "comment-14229840",
            "author": "Robert Muir",
            "date": "2014-12-01T14:31:03+0000",
            "content": "+1\n\nCan we look at Lucene50PostingsWriter flushing and corruptindexexception? I know for example, this one (possibly other codecs) try to do some minimal checks against their input (like docid >= 0), but then have a hard time throwing corruptindexexception. this can be a followup issue "
        },
        {
            "id": "comment-14230032",
            "author": "Michael McCandless",
            "date": "2014-12-01T16:52:26+0000",
            "content": "New patch, just accepting DataOutput also in CorruptIndexException, and fixing Lucene50PostingsWriter to pass that directly (instead of doing the .toString()) itself ... I couldn't find any other callers that \"wanted\" to pass a DataOutput. "
        },
        {
            "id": "comment-14230432",
            "author": "Robert Muir",
            "date": "2014-12-01T20:50:28+0000",
            "content": "+1, thank you! "
        },
        {
            "id": "comment-14230485",
            "author": "ASF subversion and git services",
            "date": "2014-12-01T21:21:47+0000",
            "content": "Commit 1642761 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1642761 ]\n\nLUCENE-6084: add reasonable IndexOutput.toString "
        },
        {
            "id": "comment-14230490",
            "author": "ASF subversion and git services",
            "date": "2014-12-01T21:24:30+0000",
            "content": "Commit 1642762 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1642762 ]\n\nLUCENE-6084: add reasonable IndexOutput.toString "
        },
        {
            "id": "comment-14230616",
            "author": "Hoss Man",
            "date": "2014-12-01T22:50:20+0000",
            "content": "i think this broke compilation in backward-codecs on 5x? "
        },
        {
            "id": "comment-14230624",
            "author": "Michael McCandless",
            "date": "2014-12-01T22:53:03+0000",
            "content": "Argh, you're right!  Sorry   I'll fix. "
        },
        {
            "id": "comment-14230633",
            "author": "Hoss Man",
            "date": "2014-12-01T22:57:06+0000",
            "content": "I was about to commit this (didn't see you on IRC) but i'll defer to you as the expert...\n\n\nIndex: lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40CompoundWriter.java\n===================================================================\n--- lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40CompoundWriter.java\t(revision 1642776)\n+++ lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40CompoundWriter.java\t(working copy)\n@@ -306,7 +306,7 @@\n \n     DirectCFSIndexOutput(IndexOutput delegate, FileEntry entry,\n         boolean isSeparate) {\n-      super();\n+      super(\"DirectCFSIndexOutput(\"+delegate.toString()+\",entry=\\\"\"+entry.toString()+\"\\\",isSeparate=\\\"\"+isSeparate+\")\");\n       this.delegate = delegate;\n       this.entry = entry;\n       entry.offset = offset = delegate.getFilePointer();\n\n "
        },
        {
            "id": "comment-14230638",
            "author": "ASF subversion and git services",
            "date": "2014-12-01T22:59:10+0000",
            "content": "Commit 1642783 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1642783 ]\n\nLUCENE-6084: add reasonable IndexOutput.toString "
        },
        {
            "id": "comment-14230642",
            "author": "ASF subversion and git services",
            "date": "2014-12-01T23:01:50+0000",
            "content": "Commit 1642785 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1642785 ]\n\nLUCENE-6084: what Hoss said "
        },
        {
            "id": "comment-14230643",
            "author": "Michael McCandless",
            "date": "2014-12-01T23:02:08+0000",
            "content": "Thanks Hoss, I committed your version! "
        },
        {
            "id": "comment-14332844",
            "author": "Anshum Gupta",
            "date": "2015-02-23T05:02:13+0000",
            "content": "Bulk close after 5.0 release. "
        }
    ]
}