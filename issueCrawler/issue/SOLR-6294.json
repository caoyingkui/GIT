{
    "id": "SOLR-6294",
    "title": "The JsonLoader should accept a single doc without wrapping in an array",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "update"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "This is the multi document input command\n\ncurl http://localhost:8983/solr/update/json -H 'Content-type:application/json' -d '\n[\n {\"id\" : \"TestDoc1\", \"title\" : \"test1\"},\n]'\n\n\nThe following also should be a valid update command for a single doc\n\ncurl http://localhost:8983/solr/update/json -H 'Content-type:application/json' -d '\n {\"id\" : \"TestDoc1\", \"title\" : \"test1\"},\n'",
    "attachments": {
        "SOLR-6294-6304.patch": "https://issues.apache.org/jira/secure/attachment/12658903/SOLR-6294-6304.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-14077837",
            "date": "2014-07-29T15:38:14+0000",
            "content": "that would make a sending a single json object ambiguous: does it represent a solr document to add, or does it represent a set of update commands?\n\nis this a single document containing 1 boolean field, or is this a command to do a commit?\n\n\n{ \"commit\":true }\n\n "
        },
        {
            "author": "Noble Paul",
            "id": "comment-14077851",
            "date": "2014-07-29T15:45:34+0000",
            "content": "There are 2 options here\n\npass an extra request param like single=true (or something else)\nor\njust read the first key and check if they are one of \"add\", \"commit\", \"delete\", \"optimize\" . If not it is a single doc\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14077864",
            "date": "2014-07-29T15:51:33+0000",
            "content": "pass an extra request param like single=true (or something else)\n\n+0\n\njust read the first key and check if they are one of \"add\", \"commit\", \"delete\", \"optimize\" . If not it is a single doc\n\n-1 ... that's a time bomb waiting to go off for any user who might someday have a doc with \"add\" as a fieldname, or for any use who might have any field name in their doc that we might later introduce as a new command name. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-14078086",
            "date": "2014-07-29T18:05:54+0000",
            "content": "For more history see SOLR-2496\n\npass an extra request param like single=true (or something else)\n\nIs that really easier than putting the doc in an array? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14078093",
            "date": "2014-07-29T18:08:30+0000",
            "content": "Is that really easier than putting the doc in an array?\n\nI guess it would at least be something you could configure as a handler default, for when you want to setup a handler that can take either a single document or a list of documents, but not arbitrary commands. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-14078097",
            "date": "2014-07-29T18:12:12+0000",
            "content": "It's not a big deal if you control how the json is created. Imagine someone piping the output of another program to solr .in that case user will have to do some coding to put those square brackets at the beginning and end "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14078137",
            "date": "2014-07-29T18:32:08+0000",
            "content": "Maybe we just leave it as-is (require the wrapping [ ]) and improve the error message as right now, this is what you get back from Solr when you add a single JSON document:\n\ncurl http://localhost:8983/solr/gettingstarted/update?commit=true -X POST -H 'Content-Type: application/json' \\\n -d '{\n\"id\":\"foo\",\n\"POST_ID\":\"354-20160\",\n...\n}'\n\n{\"responseHeader\":\n{\"status\":400,\"QTime\":0}\n,\"error\":{\"msg\":\"Unknown command: id [6]\",\"code\":400}}\n\nSo at the very least, we need to give the user an idea of how to move forward w/o having to post to the mailing list or search the docs. "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-14078154",
            "date": "2014-07-29T18:43:31+0000",
            "content": "Is that really easier than putting the doc in an array?\n\nIf you're data already is written out in JSON and you just want to get started by throwing it into Solr in your first few minutes of trying it out, it could be.  Just one more thing to have to deal with, I guess, but obviously not a show stopper by any stretch. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-14078157",
            "date": "2014-07-29T18:49:05+0000",
            "content": "\"add\", \"commit\" and \"optimize\" expect as their value an array of objects or an object.\n\n\"delete\" can take a scalar id, or an array of id scalars, or an object with a query or \"id\"+id scalar and optional params (whew).\n\n\"rollback\" takes no value (I think this may be a parsing bug - does JSON accept a value-less key?)\n\nBy contrast, a document (with the exception of nested docs) will always have flat \"key\":scalar or \"key\":array-of-scalar structure. \n\nSo with the exception of \"delete\", I think it should possible to detect commands versus fields based exclusively on value types.  Maybe just have a documented exception that \"delete\" field names are disallowed in single document mode? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-14078168",
            "date": "2014-07-29T18:59:22+0000",
            "content": "\"add\", \"commit\" and \"optimize\" expect as their value an array of objects or an object. [...] By contrast, a document (with the exception of nested docs) will always have flat \"key\":scalar or \"key\":array-of-scalar structure.\n\nNot a doc with partial/atomic updates.\n\n\"rollback\" takes no value (I think this may be a parsing bug - does JSON accept a value-less key?)\n\nNo, it's not valid JSON.  Are you sure it's currently accepted? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14078170",
            "date": "2014-07-29T19:00:03+0000",
            "content": "By contrast, a document (with the exception of nested docs) will always have flat ...\n\n...the exception that complicates the rule.\n\nHueristics would just lead us down a rabbit hole of complexity with no good way out.  \n\nthe idea of a \"json.command\" (or something like that) request param seems like it solves all of the suggested usecases.  \n\nwe can always add an \"/update/json/single\" or something to the sample configs if people find even that burdensome ... we can also change the default value of the new request param (and thus, the default behavior) in 5.0 so that by default we assume everything is a doc, and you have to send \"json.command=true\" if you want your top level braces to be interpreted as starting a set of commands. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-14078190",
            "date": "2014-07-29T19:11:10+0000",
            "content": "we can always add an \"/update/json/single\"\n\nor /update/json/doc Yes, I was about to suggest this .This is a better idea. And I should be able to keep pumping docs after docs in a single stream\n\nThe point is,  I rarely find json embedded in square brackets in the wild . And it is burdensome for users to edit large json to add square brackets in the beginning and end "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-14078206",
            "date": "2014-07-29T19:19:04+0000",
            "content": "\n\"rollback\" takes no value (I think this may be a parsing bug - does JSON accept a value-less key?)\n\nNo, it's not valid JSON. Are you sure it's currently accepted?\n\nI'm wrong, I misread the source - actually \"rollback\" requires its value to be an empty object (JsonLoader.parseRollback()). "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-14078207",
            "date": "2014-07-29T19:20:12+0000",
            "content": "The point is, I rarely find json embedded in square brackets in the wild \n\nI don't think anyone is disagreeing about that (in the absence of other concerns).  The question is what to do about it.\n\nMaybe we should think about adding a new REST endpoint via restlet? "
        },
        {
            "author": "Noble Paul",
            "id": "comment-14078217",
            "date": "2014-07-29T19:23:57+0000",
            "content": "Another suggestion is to use  http PUT for adding docs and POST for commands "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-14078220",
            "date": "2014-07-29T19:25:06+0000",
            "content": "or /update/json/doc\n\nand/or just /update/doc, with content-type routing like current /update "
        },
        {
            "author": "Noble Paul",
            "id": "comment-14078231",
            "date": "2014-07-29T19:35:06+0000",
            "content": "and/or just /update/doc, with content-type routing like current /update \n\nI feel having that extra type info in the uri helps rather than as an http header  i. Isn't it nice to have /update/json than  /update -H 'Content-type:application/json' "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-14078241",
            "date": "2014-07-29T19:42:28+0000",
            "content": "\nand/or just /update/doc, with content-type routing like current /update\n\nI feel having that extra type info in the uri helps rather than as an http header i. Isn't it nice to have /update/json than /update -H 'Content-type:application/json'\n\nI agree, /update/json/doc is quicker to type in on the command line. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-14078290",
            "date": "2014-07-29T20:16:32+0000",
            "content": "Isn't it nice to have /update/json than /update -H 'Content-type:application/json'\n\nI agree.  Of course making it simpler on the command line (i.e. avoid having to set the content type header) requires ignoring the content-type sent by curl.  I'm for that... but not sure what others may think.  Some people get aggravated when I've ignored standards in favor of usability in the past. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-14078914",
            "date": "2014-07-30T05:24:14+0000",
            "content": "OK , So I'm going with the update/json/doc option where you can just put one or more docs  "
        },
        {
            "author": "Varun Thacker",
            "id": "comment-14078985",
            "date": "2014-07-30T06:36:05+0000",
            "content": "Currently this is the behaviour -\n\nRequest:\n\ncurl http://localhost:8983/solr/update/json?commit=true -d '\n[\n {\"id\" : \"1\", \"title\" : \"test\"}\n]'\n\n\n\nResponse:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<response>\n<lst name=\"responseHeader\"><int name=\"status\">0</int><int name=\"QTime\">1</int></lst>\n</response>\n\n\n\nNo document gets added. Confused as to why the response gave a status=0 and did not add the document.\n\n\nBut adding the content header type leads to document add - \n\n\ncurl http://localhost:8983/solr/update/json?commit=true -H 'Content-type:application/json' -d '\n[\n {\"id\" : \"1\", \"title\" : \"test\"}\n]'\n\n\n\n\nSo the content type header gets respected currently. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-14079239",
            "date": "2014-07-30T12:32:49+0000",
            "content": "No document gets added.\n\nLovely. (sarcasm) \nIt's treating the body as key/value query parameters (i.e. respecting the content-type that curl puts in there by default).\nYou can see this in the log where the whole body is treated as a key without a value:\n\n19602 [qtp316753575-14] INFO  org.apache.solr.update.processor.LogUpdateProcessor  \u2013 [collection1] webapp=/solr path=/update/json params={commit=true&\n[\n {\"id\" : \"1\", \"title\" : \"test\"}\n]=} {commit=} 0 6\n\n "
        },
        {
            "author": "Noble Paul",
            "id": "comment-14079376",
            "date": "2014-07-30T15:25:12+0000",
            "content": "Varun Thacker  Please open annother bug and we should fix it "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-14079792",
            "date": "2014-07-30T19:10:58+0000",
            "content": "I really don't like having separate APIs for one doc vs. multiple docs.  How about deprecating the existing approach in favor a new one that properly captures commands, single docs, and multiple docs and is clean for users?  \n\nThe whole point of stuff like this is to make it easier for people first coming to Solr to not have to think about all the gotchas and just get their data in.  Ease of use has to be all about the user's data and their questions for it, not about idiosyncrasies in API design to workaround previous approaches. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-14079975",
            "date": "2014-07-30T21:04:50+0000",
            "content": "I really don't like having separate APIs for one doc vs. multiple docs...\n\nI don't think anyone suggested that?\n\nwhat was suggested was a new request param (i suggested json.command=true|false), that would indicate when a top level JSON object should be interpreted as a set of commands, or as a single document.\n\nif this request param exists, then a new sample configuration could be supplied (noble suggested /update/json/doc - i would suggest /update/json/docs (plural) might be better) which could have a <lst name=\"defaults\"/> block setting json.command=true ... which would mean you could send either one doc or multiple docs to that endpoint, and they would just plain work. if you use /update or /update/json then for backcompat reasons, a top level JSON object would be interpreted as a list of commands \u2013 but you could override that with json.command=true in the request.\n\nHow about deprecating the existing approach in favor a new one that properly captures commands, single docs, and multiple docs and is clean for users? \n\nI'm not sure i understand what you are proposing? .. there are only 3 \"top level\" constructs we could have in a valid JSON document: arrays, objects, and literals \u2013 if you want both top level objects / top level arrays to be interpreted as a doc / list of docs that doesn't leave much to put commands (only the most trivial command could be specified by a top level string/number primitive.\n\nIf folks feel like sending single documents should be the \"default\" and commands should be considered abnormal (a sentiment i generally agree with, particularly since most basic commands can already be sent as request params) then i already made a suggestion to how to move forward with that goal:\n\nwe can also change the default value of the new request param (and thus, the default behavior) in 5.0 so that by default we assume everything is a doc, and you have to send \"json.command=true\" if you want your top level braces to be interpreted as starting a set of commands.\n\n\n\nEase of use has to be all about the user's data and their questions for it, not about idiosyncrasies in API design to workaround previous approaches.\n\nNothing in the suggestion Noble and i coalesced towards has anything to do with \"working around\" the existing API \u2013 it's about ensuring that as the API evolves to be more freindly towards new users, we don't alienate existing users by breaking their shit if we don't have to, and giving them an easy way to edit their config to make their shit keep working if we change the default behavior. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-14080481",
            "date": "2014-07-31T04:37:48+0000",
            "content": "Hoss more or less summed up what I was proposing\n\n key points\n\n\n\tThe current json object format should not be broken.\n\tThe /update/json/docs or /update/json/doc  (Plural is better because it accepts many) is a shorthand for /update/json?json.command=false . Actually users are free to create clean http endpoints by adding a <requestHandler> entry in solrconfig.xml with the params added to defaults . In this case we are adding this ourselves. This is why I created SOLR-6302 also . We should not make our solrconfig.xml ugly by adding stuff which everyone needs and no one should modify (other than experts)\n\n\n\nwe can also change the default value of the new request param (and thus, the default behavior) in 5.0\nI don't think we will ever be able to change that default without screwing a lot of users .   "
        },
        {
            "author": "Noble Paul",
            "id": "comment-14080732",
            "date": "2014-07-31T10:48:26+0000",
            "content": "Fix for both the tickets \n\nIt is OK if we want to split them "
        },
        {
            "author": "Noble Paul",
            "id": "comment-14080742",
            "date": "2014-07-31T10:53:59+0000",
            "content": "I shall go ahead and commit it soon, if there are no objections "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14083659",
            "date": "2014-08-02T18:41:14+0000",
            "content": "Commit 1615345 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1615345 ]\n\nSOLR-6294 ,SOLR-6302 "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14083669",
            "date": "2014-08-02T19:10:19+0000",
            "content": "Commit 1615347 from Noble Paul in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1615347 ]\n\nSOLR-6294 ,SOLR-6302 "
        }
    ]
}