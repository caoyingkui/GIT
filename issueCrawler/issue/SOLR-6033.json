{
    "id": "SOLR-6033",
    "title": "LeftOuter Join capabilty in SOLR and dynamic field merge in response",
    "details": {
        "affect_versions": "4.2.1,                                            4.3,                                            4.5.1,                                            4.6.1",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "documentation",
            "search"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "I'm having different kind of entity in the index.\nEntitity-1: id, doc_name, type, pinprojectid, documentid, content\n\nEntity-2: id, proj_name,projtype,type,pinprojectid\n\nwhere type is unique for every different entity e.g. Entity-1(type=Documents) & Entity-2(type=Projects).pinprojectid is common between two Entity.\nNow im trying to search on type:Document AND content:\"hello\",\nbut the result do left outer join with Entity-2 based on join field say ( pinprojectid) and fetches few information like(projtype,proj_name) and display in the Entity-1 response.\n\nSay Entity-1 search gives 12 result,but left-outer join field fetch matches with 10 result.\nSo the final output should be 12 with 10 doc containing extra merge fields through leftouter join.\nThis is very common in SQL.\n\nOne way to do this to process from client side with two separate call to SOLR server.But this functaility or enhancement or added feature needs to there in solr release in a generalized way.\n\nLet me know if there is any other way to achieve the above scenario from server side of Solr in one call??",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Mikhail Khludnev",
            "id": "comment-13984342",
            "date": "2014-04-29T14:27:16+0000",
            "content": "it's a question to the mailing list, please close the issue.\nyou can \"add\" docs into result by specifying should clause\n\neg if you have \n\nq={!join from=p_id to=id}content:foo\n\nyou can do \"left outer\" like join by adding optional clause \n\nq=type:entity1 {!join from=p_id to=id}content:foo\n\n "
        }
    ]
}