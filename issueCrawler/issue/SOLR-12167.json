{
    "id": "SOLR-12167",
    "title": "Child documents are ignored if unknown atomic operation specified in parent doc",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "update"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Patch Available"
    },
    "description": "On trying to add this nested document,\n\n{uniqueId : book6, type_s:book, title_t : \"The Way of Kings\", author_s : \"Brandon Sanderson\",\n  cat_s:fantasy, pubyear_i:2010, publisher_s:Tor, parent_unbxd:true,\n  _childDocuments_ : [\n    { uniqueId: book6_c1, type_s:review, review_dt:\"2015-01-03T14:30:00Z\",parentId : book6,\n      stars_i:5, author_s:rahul,\n      comment_t:\"A great start to what looks like an epic series!\"\n    }\n    ,\n    { uniqueId: book6_c2, type_s:review, review_dt:\"2014-03-15T12:00:00Z\",parentId : book6,\n      stars_i:3, author_s:arpan,\n      comment_t:\"This book was too long.\"\n    }\n  ],labelinfo:{label_image:\"\",hotdeal_type:\"\",apply_hotdeal:\"\"}\n }\n\n\nOnly parent document is getting indexed(without labelinfo field) and child documents are being ingored.\n\nOn checking the code,\nhttps://github.com/apache/lucene-solr/blob/master/solr/core/src/java/org/apache/solr/update/processor/AtomicUpdateDocumentMerger.java#L94 \nI realized that since labelinfo is a Map, Solr is trying for atomic updates and since label_image, hotdeal_type, apply_hotdeal are invalid operation field is ignored. Unfortunately, child documents are also not getting indexed.\n\nProblem with current behavior:\n\n\tfield is silently ignored when its value is a map instead of failing document update(when present in parent)\n\tIn the above case, child document is also getting ignored\n\tIf any field value is Map in child document but not in parent then nested document is indexed properly\n\n{uniqueId : book6, type_s:book, title_t : \"The Way of Kings\", author_s : \"Brandon Sanderson\",\n  cat_s:fantasy, pubyear_i:2010, publisher_s:Tor, parent_unbxd:true,\n  _childDocuments_ : [\n    { uniqueId: book6_c1, type_s:review, review_dt:\"2015-01-03T14:30:00Z\",parentId : book6,\n      stars_i:5, author_s:rahul,\n      comment_t:\"A great start to what looks like an epic series!\"\n,labelinfo:{label_image:\"\",\"hotdeal_type\":\"\",\"apply_hotdeal\":\"\"}\n    }\n    ,\n    { uniqueId: book6_c2, type_s:review, review_dt:\"2014-03-15T12:00:00Z\",parentId : book6,\n      stars_i:3, author_s:arpan,\n      comment_t:\"This book was too long.\"\n    }\n  ]\n }\n\n\nHere, nested document is indexed and labelinfo field value indexed in book6_c1 as string(using Map.toString())\n\n\n\nProbable solution\n\n\tIf an unknown operation is specified in update document then instead of ignoring the field and field value, fail the document update(fail fast approach). So, that user would know something is wrong with the document. Also, this would solve the case where the parent doc is getting indexed and child documents are getting ignored\n\tCurrently, when child document's field value is a Map even then it gets indexed, instead update should fail",
    "attachments": {
        "SOLR-12167.patch": "https://issues.apache.org/jira/secure/attachment/12917198/SOLR-12167.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-04-02T15:33:04+0000",
            "content": " SOLR-12167.patch \nWhenever an unknown operation is specified, instead of ignoring the update silently, fail the update request. ",
            "author": "Munendra S N",
            "id": "comment-16422625"
        },
        {
            "date": "2018-04-03T05:46:48+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 1 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   0m 51s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   0m 51s \n  the patch passed  \n\n\n +1 \n  javac  \n   0m 51s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 51s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   0m 51s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   0m 51s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n  51m 22s \n  core in the patch failed.  \n\n\n  \n   \n  54m 49s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.cloud.TestLeaderElectionZkExpiry \n\n\n\u00a0\n solr.cloud.cdcr.CdcrBidirectionalTest \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-12167 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12917198/SOLR-12167.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene1-us-west 3.13.0-88-generic #135-Ubuntu SMP Wed Jun 8 21:10:42 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 2c1f110 \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on April 8 2014 \n\n\n Default Java \n 1.8.0_152 \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/34/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/34/testReport/ \n\n\n modules \n C: solr/core U: solr/core \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/34/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16423506"
        }
    ]
}