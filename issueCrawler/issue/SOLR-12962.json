{
    "id": "SOLR-12962",
    "title": "add an 'uninvertible' field(type) option (that defaults to \"true\" for backcompat)",
    "details": {
        "type": "Sub-task",
        "status": "Resolved",
        "labels": "",
        "fix_versions": [
            "7.6",
            "master (8.0)"
        ],
        "components": [],
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None"
    },
    "description": "field & fieldtype declarations should support an uninvertible option (which defaults to \"true\") for backcompat that dictates wether or not Uninversion can be performed on fields.\n\nSee parent issue for more background/discussion.",
    "attachments": {
        "SOLR-12962.patch": "https://issues.apache.org/jira/secure/attachment/12946992/SOLR-12962.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16675937",
            "content": "\nThe attached patch implements the basic functionality along with some simple test updates.\n\nTODO list...\n\n\n\tref guide updates\n\t\n\t\tadd uninvertible to list of fieldtype (and field override) properties\n\t\t\n\t\t\tmention that it defaults to true for backcompat, but recommended to set this to false to ensure no-unexpected memory usage\n\t\t\texplicitly encourage use of docValues=true instead\n\t\t\n\t\t\n\t\n\t\n\tupdate luke request handler & schema UI screen to know/display uninvertible\n\tfaceting (simple & json)\n\t\n\t\tneed some new tests to ensure docValues=false indexed=true uninvertible=false behaves the same as docValues=false indexed=false\n\t\t\n\t\t\tie: returns no buckets\n\t\t\n\t\t\n\t\tstill need to review EVERYTHING about \"UIF\" (json faceting)\n\t\t\n\t\t\tthis isn't UninvertingReader/FieldCache, but if someone specifies uninvertible=false we shouldn't be doing any uninversion in any form in the Solr code base\n\t\t\tSimpleFacets delegates to json facets, but probably shouldn't even try if we know uninvertible=false ?\n\t\t\n\t\t\n\t\n\t\n\tdo an audit of other things in the code based that calls SchemaField's indexed() or hasDocValues()\n\t\n\t\tsome of may now need to also/instead look at isUninvertible() ?\n\t\tperhaps more code should be looking at SchemaField.checkFieldCacheSource ?\n\t\n\t\n\n ",
            "author": "Hoss Man",
            "date": "2018-11-06T00:46:27+0000"
        },
        {
            "id": "comment-16677371",
            "content": "i did the audit i wanted to do (looking for code that checked the index/hasDocValue status of a field) and didn't spot any other things that seemed like they needed to be updated to look at uninvertible except for LukeRequestHandler and the known questions about \"UIF\" faceting.\n\nThe updated patch has no real functional changes, just...\n\n\tresolve a small conflict introduced on master\n\tconvert an old nocommit i had in IndexSchema into a comment for the future\n\tmove all the \"TODO\" items still outstanding into \"nocommit\" comments so i don't forget them\n\n ",
            "author": "Hoss Man",
            "date": "2018-11-06T22:36:29+0000"
        },
        {
            "id": "comment-16679273",
            "content": "Updated patch resolves all nocommit's except ref-guide updates ... i'll work on that tommorow while i continue to hammer on tests.\n\nSince this is an \"opt in\" feature thta shouldn't affect existing users w/o schema changes, I'd like to commit and backport to 7x ASAP for inclusion in 7.6 \u2013 that way we can hopefully get some feedback from users sooner rather then later to inform discussions about changing the default in SOLR-12963. ",
            "author": "Hoss Man",
            "date": "2018-11-08T03:43:02+0000"
        },
        {
            "id": "comment-16679789",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 9 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   2m 47s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   3m 28s \n  the patch passed  \n\n\n +1 \n  javac  \n   3m 29s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   3m 31s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   3m  6s \n  the patch passed  \n\n\n -1 \n  Validate source patterns  \n   3m  6s \n  Validate source patterns validate-source-patterns failed  \n\n\n -1 \n  Validate ref guide  \n   3m  6s \n  Validate source patterns validate-source-patterns failed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n  80m  9s \n  core in the patch passed.  \n\n\n +1 \n  unit  \n   8m 29s \n  solrj in the patch passed.  \n\n\n  \n   \n 100m 11s \n   \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-12962 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12947338/SOLR-12962.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  validaterefguide  \n\n\n uname \n Linux lucene2-us-west.apache.org 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 1b084db \n\n\n ant \n version: Apache Ant(TM) version 1.9.6 compiled on July 20 2018 \n\n\n Default Java \n 1.8.0_191 \n\n\n Validate source patterns \n https://builds.apache.org/job/PreCommit-SOLR-Build/219/artifact/out/patch-validate-source-patterns-root.txt \n\n\n Validate ref guide \n https://builds.apache.org/job/PreCommit-SOLR-Build/219/artifact/out/patch-validate-source-patterns-root.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/219/testReport/ \n\n\n modules \n C: solr/core solr/solrj solr/solr-ref-guide solr/webapp U: solr \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/219/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "date": "2018-11-08T13:54:27+0000"
        },
        {
            "id": "comment-16680196",
            "content": "patch updated with docs (resolving last nocommits) and fixing some unused imports so precommit now passes. ",
            "author": "Hoss Man",
            "date": "2018-11-08T19:03:45+0000"
        },
        {
            "id": "comment-16680426",
            "content": "The patch looks good Hoss; nice work!\n\n\tFieldType.getUninversionMap: why do you propose that it would be nice to throw an error here?\u00a0 I think returning null is quite correct \u2013 it's how we communicate the field should not be uninverted.\n\n\n\nI know it's too late but I wonder what it would look like to conceive of this setting as a special docValuesFormat instead \u2013 an uninverting docValuesFormat.  I think long ago when docValues first appeared that could have been more viable since it would have been how we communicate to uninvert a field.  But with today's legacy concerns, that would just create back-compat pain since you'd have to go set docValues=true docValuesFormat=UNINVERT on all fields you want to uninvert when migrating a schema to such a setting. ",
            "author": "David Smiley",
            "date": "2018-11-08T21:31:04+0000"
        },
        {
            "id": "comment-16680584",
            "content": "why do you propose that it would be nice to throw an error here? I think returning null is quite correct \u2013 it's how we communicate the field should not be uninverted.\nI agree, the way the mapper function is used my UninvertingReader,\u00a0 null is the appropriate value for IndexSchema.getUninversionMap() to use to signal to the UninvertingReader that uninversion should not be allowed. My point in that comment was more to explain why the code is doing that and not trying to throw a helpful \"user level\" error message \u2013 which is what i originally had in mind: that it would be a nice central place to throw a SolrException that said \"What you are trying to do with $field requires that you either use docValues=\"true\" or uninvertible=\"true\" ... but it is not feasible to do so for the reasons mentioned in my comment, and I was hoping the comment would help explain that to anyone else that had the same thought down the road.\n\n(ie: the comment is less for folks reviewing hte patch today then it is for folks curious about the code in a year)\n\n\u00a0\n\nJoel mentioned to me offline that CollapseQParser has a code path that actually builds it's own UninvertingReader\u00a0\u2013 something it didn't occur to me to look for\u00a0\u2013 so in this updated patch I made sure a check for SchemaField.isUninvertible() is done here as well and added a tests for equivalence with fields that are indexed=\"false\". This new test did however uncover some oddness in the way that code does error handling / sanity checking of it's input \u2013 although not ideal, the way i added the SchemaField.isUninvertible() currently behaves consistently, but better error handling for the entire situation (independent of hte addition of\u00a0uninvertible should probably be revisited in SOLR-12979.\n\nStill testing & re-reviewing the patch myself. ",
            "author": "Hoss Man",
            "date": "2018-11-08T23:31:49+0000"
        },
        {
            "id": "comment-16680659",
            "content": "\n\n\n  +1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 9 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   3m 56s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   3m  7s \n  the patch passed  \n\n\n +1 \n  javac  \n   3m  7s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   2m 30s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   2m  5s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   2m  5s \n  the patch passed  \n\n\n +1 \n  Validate ref guide  \n   2m  5s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n  77m 21s \n  core in the patch passed.  \n\n\n +1 \n  unit  \n   8m 29s \n  solrj in the patch passed.  \n\n\n  \n   \n  99m 39s \n   \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-12962 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12947462/SOLR-12962.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  validaterefguide  \n\n\n uname \n Linux lucene2-us-west.apache.org 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 73005d4 \n\n\n ant \n version: Apache Ant(TM) version 1.9.6 compiled on July 20 2018 \n\n\n Default Java \n 1.8.0_191 \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/220/testReport/ \n\n\n modules \n C: solr/core solr/solrj solr/solr-ref-guide solr/webapp U: solr \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/220/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "date": "2018-11-09T00:30:07+0000"
        },
        {
            "id": "comment-16680964",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 10 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   2m 18s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   1m 55s \n  the patch passed  \n\n\n +1 \n  javac  \n   1m 55s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   1m 47s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   1m 35s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   1m 35s \n  the patch passed  \n\n\n +1 \n  Validate ref guide  \n   1m 35s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n  46m 36s \n  core in the patch failed.  \n\n\n -1 \n  unit  \n   3m 39s \n  solrj in the patch failed.  \n\n\n  \n   \n  58m 16s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.cloud.DeleteReplicaTest \n\n\n\u00a0\n solr.client.solrj.impl.CloudSolrClientTest \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-12962 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12947492/SOLR-12962.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  validaterefguide  \n\n\n uname \n Linux lucene1-us-west 4.4.0-137-generic #163~14.04.1-Ubuntu SMP Mon Sep 24 17:14:57 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / fbb9872 \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on July 24 2018 \n\n\n Default Java \n 1.8.0_191 \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/221/artifact/out/patch-unit-solr_core.txt \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/221/artifact/out/patch-unit-solr_solrj.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/221/testReport/ \n\n\n modules \n C: solr/core solr/solrj solr/solr-ref-guide solr/webapp U: solr \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/221/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "date": "2018-11-09T07:01:15+0000"
        },
        {
            "id": "comment-16681594",
            "content": "Commit 77a4bfaa90637cd3d9a8a2ef4889e163dab143aa in lucene-solr's branch refs/heads/master from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=77a4bfa ]\n\nSOLR-12962: Added a new 'uninvertible' option for fields and fieldtypes. This defaults to 'true' for backcompat allowing a FieldCache to be built for indexed fields as needed, but users are encouraged to set this to false (using docValues as needed) to reduce the risk of large fluxuations in heap size due to unexpected attempts to sort/facet/function on non-docValue fields. ",
            "author": "ASF subversion and git services",
            "date": "2018-11-09T15:30:27+0000"
        },
        {
            "id": "comment-16681678",
            "content": "Commit 36ca27c36e90e33abbae8b6ce5359c7655c898c5 in lucene-solr's branch refs/heads/branch_7x from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=36ca27c ]\n\nSOLR-12962: Added a new 'uninvertible' option for fields and fieldtypes. This defaults to 'true' for backcompat allowing a FieldCache to be built for indexed fields as needed, but users are encouraged to set this to false (using docValues as needed) to reduce the risk of large fluxuations in heap size due to unexpected attempts to sort/facet/function on non-docValue fields.\n\n(cherry picked from commit 77a4bfaa90637cd3d9a8a2ef4889e163dab143aa)\n\nConflicts:\n\tsolr/core/src/test/org/apache/solr/BasicFunctionalityTest.java ",
            "author": "ASF subversion and git services",
            "date": "2018-11-09T16:38:09+0000"
        }
    ]
}