{
    "id": "SOLR-8992",
    "title": "Restore Schema API GET method functionality removed by SOLR-8736",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.0.1",
            "6.1",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "The following schema API GET functionality was removed under SOLR-8736; some of this functionality should be restored:\n\n\n\tschema/copyfields:\n\t\n\t\tThe following information is no longer output:\n\t\t\n\t\t\tdestDynamicBase: the matching dynamic field pattern for the destination\n\t\t\tsourceDynamicBase: the matching dynamic field pattern for the source\n\t\t\n\t\t\n\t\tThe following request parameters are no longer supported:\n\t\t\n\t\t\tdest.fl: include only copyFields that have one of these as a destination\n\t\t\tsource.fl: include only copyFields that have one of these as a source\n\t\t\n\t\t\n\t\n\t\n\tschema/dynamicfields:\n\t\n\t\tThe following request parameters are no longer supported:\n\t\t\n\t\t\tfl: a comma and/or space separated list of dynamic field patterns to include\n\t\t\n\t\t\n\t\n\t\n\tschema/fields and schema/fields/fieldname:\n\t\n\t\tThe following information is no longer output:\n\t\t\n\t\t\tdynamicBase: the matching dynamic field pattern, if the includeDynamic param is given (see below)\n\t\t\n\t\t\n\t\tThe following request parameters are no longer supported:\n\t\t\n\t\t\tfl: (only supported without /fieldname): a comma and/or space separated list of fields to include\n\t\t\tincludeDynamic: output the matching dynamic field pattern as dynamicBase, if fieldname, or field(s) listed in fl param, are not explicitly declared in the schema\n\t\t\n\t\t\n\t\n\t\n\tschema/fieldtypes and schema/fieldtypes/typename:\n\t\n\t\tThe following information is no longer output:\n\t\t\n\t\t\tfields: the fields with the given field type\n\t\t\tdynamicFields: the dynamic fields with the given field type",
    "attachments": {
        "SOLR-8992-branch_6_0-missing-TestFieldCollectionResource-tests.patch": "https://issues.apache.org/jira/secure/attachment/12805263/SOLR-8992-branch_6_0-missing-TestFieldCollectionResource-tests.patch",
        "SOLR-8992.patch": "https://issues.apache.org/jira/secure/attachment/12799951/SOLR-8992.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-04-15T04:11:53+0000",
            "author": "Steve Rowe",
            "content": "Also, TestCloudManagedSchemaConcurrent was @Ignored under SOLR-8736, but no test was substituted.  I haven't looked into whether the bulk schema API has concurrent cloud tests. ",
            "id": "comment-15242397"
        },
        {
            "date": "2016-04-15T13:08:08+0000",
            "author": "Noble Paul",
            "content": "TestBulkSchemaConcurrent is a what you are looking for ",
            "id": "comment-15242931"
        },
        {
            "date": "2016-04-15T13:08:50+0000",
            "author": "Noble Paul",
            "content": "which of these are essential and must be restored ?  ",
            "id": "comment-15242935"
        },
        {
            "date": "2016-04-15T13:12:58+0000",
            "author": "Steve Rowe",
            "content": "I think asking which of these is \"essential\" is the wrong question.\n\nI think it's bad that we advertized these query parameters - and still do in the ref guide to become 6.0's! - and then just dropped them.  I vote for putting them all back.\n\nI'm ambivalent about the removed output information (identified with \"The following information is no longer output\" above).  +0 to not restore it. ",
            "id": "comment-15242938"
        },
        {
            "date": "2016-04-21T15:08:53+0000",
            "author": "ASF subversion and git services",
            "content": "Commit e8cc19eb885c46d25b56fdd681825712516050c9 in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e8cc19e ]\n\nSOLR-8992: Restore Schema API GET method functionality removed in 6.0 ",
            "id": "comment-15252027"
        },
        {
            "date": "2016-04-21T15:23:42+0000",
            "author": "Steve Rowe",
            "content": "Thanks for the patch Noble.\n\nA few things I noticed:\n\n\n\tTwo SchemaProps.Handler enum values (SOLR_QUERY_PARSER and SIMILARITY) can have null lambdas (when they are not explicitly configured in the schema), but you don't guard against that in SchemaProps.toMap(), so NPEs are waiting to happen.  There are no tests for these cases but there should be.\n\tIn the previous IndexSchema.getNamedPropertyValues(), fields were output before dynamicFields, but the way you iterate your new SchemaProps.Handler enum in SchemaProps.toMap(), DYNAMIC_FIELDS will be called before FIELDS; as a result, the way whole schema output is ordered will change.  I think that's bad.\n\tIn the SchemaProps ctor there is repeated field list extraction code (for source.fl, dest.fl and fl params) that could be pulled out into a method and called from each of those places, e.g. here's the fl version:\n\nString[] fields = flParam.trim().split(\"[,\\\\s]+\");\nif (fields.length > 0)\n  requestedFields = new LinkedHashSet<>(Stream.of(fields)\n    .filter(it -> !it.trim().isEmpty())\n    .collect(Collectors.toList()));\n\n\n\tThere are a couple new unused imports in IndexSchema.java: com.google.common.base.Functions and org.apache.solr.common.util.Pair.\n\n ",
            "id": "comment-15252049"
        },
        {
            "date": "2016-04-21T15:27:27+0000",
            "author": "Noble Paul",
            "content": "In the previous IndexSchema.getNamedPropertyValues(), fields were output before dynamicFields,\n\ndid we ever guarantee the order? ",
            "id": "comment-15252052"
        },
        {
            "date": "2016-04-21T15:29:18+0000",
            "author": "Steve Rowe",
            "content": "did we ever guarantee the order?\n\nNo.  But it will cost you nearly nothing to leave things the way they were. ",
            "id": "comment-15252053"
        },
        {
            "date": "2016-04-21T15:33:14+0000",
            "author": "Noble Paul",
            "content": "but you don't guard against that in SchemaProps.toMap(), so NPEs are waiting to happen. \n\nI think I have copied the code verbatim and it is guarded against NPEs\n\n\nObject val = it.fun.apply(this);\n  if (val != null) topLevel.put(it.name, val);\n\n ",
            "id": "comment-15252061"
        },
        {
            "date": "2016-04-21T15:38:03+0000",
            "author": "Steve Rowe",
            "content": "\nbut you don't guard against that in SchemaProps.toMap(), so NPEs are waiting to happen.\nI think I have copied the code verbatim and it is guarded against NPEs\n\nObject val = it.fun.apply(this);\n  if (val != null) topLevel.put(it.name, val);\n\n\n\nWhich code are you talking about copying verbatim?  The code below looks completely new to me?  And it.fun is never checked for null. \n\n\n    @Override\n    public Map<String, Object> toMap() {\n      Map<String, Object> topLevel = new LinkedHashMap<>();\n      Stream.of(Handler.values())\n          .filter(it -> name == null || it.name.equals(name))\n          .forEach(it -> {\n            Object val = it.fun.apply(this);\n            if (val != null) topLevel.put(it.name, val);\n          });\n      return topLevel;\n    }\n  }\n\n ",
            "id": "comment-15252072"
        },
        {
            "date": "2016-04-21T15:40:19+0000",
            "author": "Steve Rowe",
            "content": "Crap, my misunderstanding about it.fun needing a null check - those lambdas will never be null, but they may return null.  Sorry for the noise. ",
            "id": "comment-15252074"
        },
        {
            "date": "2016-04-21T17:03:00+0000",
            "author": "Steve Rowe",
            "content": "Noble,\n\nLooks like you didn't put back the ability to use schema/fields/fieldname&includeDynamic=true?  When I put back this test you removed under SOLR-8736, it fails with error No such path /schema/fields/some_crazy_name_i:\n\nTestFieldResource.java\n  public void testGetFieldIncludeDynamic() throws Exception {\n    assertQ(\"/schema/fields/some_crazy_name_i?indent=on&wt=xml&includeDynamic=true\",\n        \"/response/lst[@name='field']/str[@name='name'] = 'some_crazy_name_i'\",\n        \"/response/lst[@name='field']/str[@name='dynamicBase'] = '*_i'\");\n  }\n\n ",
            "id": "comment-15252206"
        },
        {
            "date": "2016-04-21T21:28:43+0000",
            "author": "Noble Paul",
            "content": "added the missing testcase ",
            "id": "comment-15252782"
        },
        {
            "date": "2016-04-21T22:54:52+0000",
            "author": "Hoss Man",
            "content": "every jenkins build that makes it far enough to run the solrj tests is failin on this test...\n\nant test  -Dtestcase=SchemaTest -Dtests.method=testSchemaRequestAccuracy -Dtests.seed=B07EE1D8472F7C65 -Dtests.slow=true -Dtests.locale=es-VE -Dtests.timezone=Europe/Nicosia -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n\n...taht seed (along with every other seed i tried) is failing reliably for me...\n\n\njava.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to org.apache.solr.common.util.NamedList\n        at __randomizedtesting.SeedInfo.seed([B07EE1D8472F7C65:3782EE7649D781E2]:0)\n        at org.apache.solr.client.solrj.response.schema.SchemaResponse.setResponse(SchemaResponse.java:252)\n        at org.apache.solr.client.solrj.SolrRequest.process(SolrRequest.java:149)\n        at org.apache.solr.client.solrj.SolrRequest.process(SolrRequest.java:166)\n        at org.apache.solr.client.solrj.request.SchemaTest.testSchemaRequestAccuracy(SchemaTest.java:123)\n\n\n\nthe problem seems to be e8cc19eb885c46d25b56fdd681825712516050c9, revert to the previous SHA (2ee8426) and it passes ",
            "id": "comment-15252954"
        },
        {
            "date": "2016-04-22T04:03:07+0000",
            "author": "Steve Rowe",
            "content": "+1 to the latest patch.  It did take me a while to grok the default case in SchemaHandler.handleGET() though - the local variable names (realName, fieldName, name, parts) are confusing.  I suggest rethinking them so it's clearer what's going on.\n\nNoble, if you can't fix the SchemaTest failures right away, we should revert your e8cc19e commit until a fix is in place. ",
            "id": "comment-15253302"
        },
        {
            "date": "2016-04-22T07:04:16+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 827c670d189f9da56259b541db9b94113d3ca9a0 in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=827c670 ]\n\nSOLR-8992: Restore Schema API GET method functionality removed in 6.0 added back another test and fixed test errors ",
            "id": "comment-15253469"
        },
        {
            "date": "2016-04-22T11:06:53+0000",
            "author": "Noble Paul",
            "content": "Yeah, I need to clean it up ",
            "id": "comment-15253747"
        },
        {
            "date": "2016-04-28T11:36:51+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 7fefc35dcfb84c74fec2ea1a8abd6dea1289bd18 in lucene-solr's branch refs/heads/branch_6x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7fefc35 ]\n\nSOLR-8992: Restore Schema API GET method functionality removed in 6.0 ",
            "id": "comment-15262007"
        },
        {
            "date": "2016-04-28T11:36:53+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 6b7e965b85873ffa11d9b1c443748257c8767659 in lucene-solr's branch refs/heads/branch_6x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6b7e965 ]\n\nSOLR-8992: Restore Schema API GET method functionality removed in 6.0 ",
            "id": "comment-15262008"
        },
        {
            "date": "2016-04-28T11:36:54+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 6c459779c58a49b685fe84fede737a40769d2d88 in lucene-solr's branch refs/heads/branch_6x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6c45977 ]\n\nSOLR-8992: Restore Schema API GET method functionality removed in 6.0 added back another test and fixed test errors ",
            "id": "comment-15262009"
        },
        {
            "date": "2016-05-01T16:25:01+0000",
            "author": "Yonik Seeley",
            "content": "Has this issue been completed? ",
            "id": "comment-15265812"
        },
        {
            "date": "2016-05-02T13:14:38+0000",
            "author": "Steve Rowe",
            "content": "I think this should be backported to branch_6_0 for a 6.0.1 release. ",
            "id": "comment-15266582"
        },
        {
            "date": "2016-05-02T13:25:11+0000",
            "author": "Noble Paul",
            "content": "will do that ",
            "id": "comment-15266596"
        },
        {
            "date": "2016-05-03T11:20:16+0000",
            "author": "ASF subversion and git services",
            "content": "Commit f837216b3bd06c6e914206562b3c8c4cfdf8c1bd in lucene-solr's branch refs/heads/branch_6_0 from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f837216 ]\n\nSOLR-8992: Restore Schema API GET method functionality removed in 6.0 ",
            "id": "comment-15268538"
        },
        {
            "date": "2016-05-09T22:08:02+0000",
            "author": "Hoss Man",
            "content": "\nManually correcting fixVersion per Step #S5 of LUCENE-7271 ",
            "id": "comment-15277158"
        },
        {
            "date": "2016-05-20T18:16:11+0000",
            "author": "Steve Rowe",
            "content": "In backporting SOLR-8985 to branch_6_0, I looked at its interaction with this issue (already backported by Noble Paul), and noticed that some of the tests in TestFieldCollectionResource on branch_6x and master didn't make it branch_6_0.\n\nReopening to get these tests in; I'll post a patch. ",
            "id": "comment-15293897"
        },
        {
            "date": "2016-05-20T18:17:44+0000",
            "author": "Steve Rowe",
            "content": "Patch with missing tests.\n\nCommitting shortly. ",
            "id": "comment-15293903"
        },
        {
            "date": "2016-05-20T18:18:55+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 2c6f0282b4a29c69c5a5182d8babc52298d0f807 in lucene-solr's branch refs/heads/branch_6_0 from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2c6f028 ]\n\nSOLR-8992: branch_6_0: restore missing TestFieldCollectionResource tests ",
            "id": "comment-15293905"
        },
        {
            "date": "2016-05-20T18:21:00+0000",
            "author": "Steve Rowe",
            "content": "Committed the missing tests.  I checked the diffs between branch_6_0 and master, and between branch_6_0 and branch_6x, of all other files touched by this issue and SOLR-8985, and nothing else is missing. ",
            "id": "comment-15293911"
        },
        {
            "date": "2016-05-28T13:38:28+0000",
            "author": "Steve Rowe",
            "content": "Bulk close issues included in the 6.0.1 release. ",
            "id": "comment-15305377"
        }
    ]
}