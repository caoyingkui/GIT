{
    "id": "LUCENE-7990",
    "title": "Geo3dRptTest failure, GeoExactCircle and GeoComplexPolygon",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "7.1",
        "status": "Closed",
        "type": "Bug",
        "components": [
            "modules/spatial3d"
        ],
        "fix_versions": [
            "6.7",
            "7.2",
            "master (8.0)"
        ]
    },
    "description": "To reproduce:\nant test  -Dtestcase=Geo3dRptTest -Dtests.method=testOperations -Dtests.seed=35F19948C8D0B296 -Dtests.multiplier=3 -Dtests.slow=true\n\n\n\n  [junit4] FAILURE 1.60s | Geo3dRptTest.testOperations {seed=[35F19948C8D0B296:4C8BC51BAD80E140]} <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: [Intersects] qIdx:46 Shouldn't match I#1:Geo3D:GeoExactCircle: {planetmodel=PlanetModel.WGS84, center=[lat=-0.9559804772783842, lon=2.3746400238746745([X=-0.41485128662362136, Y=0.3998224895518887, Z=-0.8159609316679225])], radius=0.2927546208674785(16.773604208659055), accuracy=1.9835991319951308E-4} Q:Geo3D:GeoComplexPolygon: {planetmodel=PlanetModel.WGS84, number of shapes=1, address=48a56db9, testPoint=[lat=-0.6911309532123969, lon=-1.825801910033474([X=-0.19431732451263006, Y=-0.7454226529152223, Z=-0.6372503253316519])], testPointInSet=true, shapes={ {[lat=-1.387818122744865, lon=-2.7792398669224005([X=-0.16978152317325065, Y=-0.06436270935780461, Z=-0.9812145381630729])], [lat=0.3097381417459196, lon=-1.2840888403614732([X=0.2695553433310933, Y=-0.9142719953894461, Z=0.30505479536297536])], [lat=-0.0480217407750678, lon=-1.8503085663094863([X=-0.2758749814522231, Y=-0.9611487663811242, Z=-0.04805662135798377])], [lat=-0.562588503679275, lon=0.1031827231215822([X=0.841513436598657, Y=0.08713911491133425, Z=-0.533463142870229])], [lat=-1.2344672208544873, lon=-0.4462630141292253([X=0.29714578386731183, Y=-0.14217069789173978, Z=-0.9422037262649413])], [lat=0.3278373341365327, lon=-1.4874282088599309([X=0.07889725918747778, Y=-0.9441785582346046, Z=0.3222439993016786])], [lat=1.084105292601162, lon=2.757011421605791([X=-0.4328875155449605, Y=0.17520454460023893, Z=0.8825538642625743])], [lat=0.9435002493553667, lon=2.474535178256974([X=-0.4606403525400187, Y=0.3627431535977759, Z=0.8087390201902855])], [lat=-0.6491383005683652, lon=-0.6236527284532923([X=0.6465724515973865, Y=-0.46516869386856063, Z=-0.6044327179281425])], [lat=-0.615469772740116, lon=2.908550337184802([X=-0.7944279172337232, Y=0.1885612520247134, Z=-0.5773400032472633])], [lat=-0.26863911348502323, lon=1.2430264151885233([X=0.31065925040467024, Y=0.9136095339661758, Z=-0.2656535169115309])], [lat=1.340203739358425, lon=0.8281168704009712([X=0.15424430350138682, Y=0.16801937134287298, Z=0.9715225323505815])], [lat=1.129241312019259, lon=2.627460773729766([X=-0.3714930761512795, Y=0.20981779772740047, Z=0.9026170614434411])]}}\n   [junit4]    >        at __randomizedtesting.SeedInfo.seed([35F19948C8D0B296:4C8BC51BAD80E140]:0)\n   [junit4]    >        at org.apache.lucene.spatial.prefix.RandomSpatialOpStrategyTestCase.fail(RandomSpatialOpStrategyTestCase.java:126)\n   [junit4]    >        at org.apache.lucene.spatial.prefix.RandomSpatialOpStrategyTestCase.testOperation(RandomSpatialOpStrategyTestCase.java:115)\n   [junit4]    >        at org.apache.lucene.spatial.prefix.RandomSpatialOpStrategyTestCase.testOperationRandomShapes(RandomSpatialOpStrategyTestCase.java:55)\n   [junit4]    >        at org.apache.lucene.spatial.spatial4j.Geo3dRptTest.testOperations(Geo3dRptTest.java:117)\n   [junit4]    >        at java.lang.Thread.run(Thread.java:745)\n\n\n\nCC Karl Wright Ignacio Vera",
    "attachments": {
        "LUCENE-7990.patch": "https://issues.apache.org/jira/secure/attachment/12893468/LUCENE-7990.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16198579",
            "date": "2017-10-10T12:17:36+0000",
            "content": "David Smiley, I'll look at this a bit later this week.  First I'll have to figure out how the test works, and what it's trying to test here.  I agree that it is likely a precision issue but I could be wrong. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16198593",
            "date": "2017-10-10T12:36:25+0000",
            "content": "Ignacio Vera, I have the two shapes, but what I still need to know is this: (a) what operation is it doing, and (b) why is it expecting the result that it is?\n\nThe process for evaluating something like this involves creating a unit test specifically for the failure case, and then analyzing the failure.  Right now I cannot create the failure case because I don't understand what's being done.\n ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16209154",
            "date": "2017-10-18T11:05:45+0000",
            "content": "Ignacio Vera, just checking if you are back from break yet... ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16214303",
            "date": "2017-10-22T12:30:51+0000",
            "content": "Hi Karl Wright,\n\nThis week I might be able to do some work on this. I am in a conference so I won't have all time I would like to. I am able to reproduce he issue and I think I understand what is going on. I hope to be able to deliver a test the coming week reproducing the problem. ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16214442",
            "date": "2017-10-22T20:45:57+0000",
            "content": "Hi Karl Wright,\n\nI have been able to create a test with the issue. It goes as follows:\n\nWe have three shapes, a circle, a polygon and a bbox. The relationship between the circle and the polygons is DISJOINT. The relationship between the polygon and the bbox is that the bbox is WITHIN the polygon. Therefore the relationship between the circle and the bbox must be DISJOINT. Here is what it fails, the relationship is OVERLAPS.\n\nI had a look and it is not clear to me why this is happening. \n ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16214967",
            "date": "2017-10-23T11:06:23+0000",
            "content": "Ignacio Vera, thanks!!\n\nThis is a great starting point.  I will spend some time looking into this, as soon as I can get some.  First order of business is to determine which relationship operation is, in fact, in error. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16214975",
            "date": "2017-10-23T11:18:55+0000",
            "content": "Ignacio Vera, if you get to it before I do \u2013 the first thing I'd want to make sure of is that the polygon doesn't cross itself.  There's no check for this in the code, because it's O(n^2) to do it, but you can try the following: (1) make a standard polygon instead of a \"large\" polygon and see what happens; (2) if a standard polygon fails in the same way, then do a pair-wise \"Plane.intersects\" call for the constructed polygon's edges to look for intersections.  If no intersections are found we can presume that the polygon is safe.  OR, if you know that the polygon cannot intersect with itself, that's good enough for me. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16214985",
            "date": "2017-10-23T11:38:22+0000",
            "content": "Creating a standard polygon produces an error:\n\njava.lang.IllegalArgumentException: Illegal polygon; polygon edges intersect each other\n\nIt seems your first suspicion is correct. The polygon cross itself!  ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16215135",
            "date": "2017-10-23T13:26:10+0000",
            "content": "Ignacio Vera, it's good we tried this because otherwise I'd have gone nuts trying to find the issue. \n\nSo now the problem simply becomes how to not generate polygons like this.  I've had some luck with an approach I call \"walk around the center\", where you first pick a center point and start with a specific random bearing and random distance-from-center.  Then, proceed to add a random angle to the bearing and pick a new random distance-from-center each time.\n\nThe alternative is to make the ComplexPolygon construction code become O(n^2) which I think is a bad idea, unless it's only enabled for testing. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16215245",
            "date": "2017-10-23T14:50:46+0000",
            "content": "Yes, I think complex polygons should not change and we should change the random generator to get ordered points. I will work on that as I have an idea for a better ordering algorithm. \n\n\n\n ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16217447",
            "date": "2017-10-24T18:51:09+0000",
            "content": "Hi [~karl wright],\n\nI managed to update the random generator and use a better algorithm to order points so they not cross. I calculate the center of mass and the angle between the center of mass and the points. Then you can order them to avoid crossing edges.\n\nIt fixed the failing test and beasting the tests did not throw any errors. ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16217551",
            "date": "2017-10-24T19:44:24+0000",
            "content": "Commit feda2ad006c3e8618a17be14106ed71f43e3d0c7 in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=feda2ad ]\n\nLUCENE-7990: Fix polygon generator to not generate crossing polygons.  Committed on behalf of Ignacio Vera. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16217553",
            "date": "2017-10-24T19:45:30+0000",
            "content": "Commit 088b63b2cb9c426bde44383a2ad040c223698d91 in lucene-solr's branch refs/heads/branch_7x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=088b63b ]\n\nLUCENE-7990: Fix polygon generator to not generate crossing polygons.  Committed on behalf of Ignacio Vera. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16217555",
            "date": "2017-10-24T19:46:39+0000",
            "content": "Commit 3a95ccf32ee732d904dd544634567ee169465bac in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3a95ccf ]\n\nLUCENE-7990: Fix polygon generator to not generate crossing polygons.  Committed on behalf of Ignacio Vera. ",
            "author": "ASF subversion and git services"
        }
    ]
}