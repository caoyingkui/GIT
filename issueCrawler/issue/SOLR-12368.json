{
    "id": "SOLR-12368",
    "title": "in-place DV updates should no longer have to jump through hoops if field does not yet exist",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "When SOLR-5944 first added \"in-place\" DocValue updates to Solr, one of the edge cases thta had to be dealt with was the limitation imposed by IndexWriter that docValues could only be updated if they already existed - if a shard did not yet have a document w/a value in the field where the update was attempted, we would get an error.\n\nLUCENE-8316 seems to have removed this error, which i believe means we can simplify & speed up some of the checks in Solr, and support this situation as well, rather then falling back on full \"read stored fields & reindex\" atomic update",
    "attachments": {
        "SOLR-12368.patch": "https://issues.apache.org/jira/secure/attachment/12923912/SOLR-12368.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-05-16T22:55:02+0000",
            "content": "some starting points for folks who want to look into this...\n\nFrom SOLR-5944...\nAddressed an issue due to which in-place updating of non-existing DVs was throwing exceptions. For this, it was needed to know which fields have already been added to the index, so that if an update is needed to non-existent DV, then we can resort to a traditional full document atomic update. This check could've been easy if access to IW.globalFieldNumberMap was possible publicly. Instead resorted to checking with the RT searcher's list of DVs, and if field not found there then getting the document from tlog (RTG) and checking if the field exists in that document.\nAnd this bit of code added in 5375410807aecf3cc67f82ca1e9ee591f39d0ac7...\n\n+    // third pass: requiring checks against the actual IndexWriter due to internal DV update limitations\n+    SolrCore core = cmd.getReq().getCore();\n+    RefCounted<IndexWriter> holder = core.getSolrCoreState().getIndexWriter(core);\n+    Set<String> fieldNamesFromIndexWriter = null;\n+    Set<String> segmentSortingFields = null;\n+    try {\n+      IndexWriter iw = holder.get();\n+      fieldNamesFromIndexWriter = iw.getFieldNames();\n+      segmentSortingFields = iw.getConfig().getIndexSortFields();\n+    } finally {\n+      holder.decref();\n+    }\n+    for (String fieldName: candidateFields) {\n+      if (! fieldNamesFromIndexWriter.contains(fieldName) ) {\n+        return Collections.emptySet(); // if this field doesn't exist, DV update can't work\n+      }\n+      if (segmentSortingFields.contains(fieldName) ) {\n+        return Collections.emptySet(); // if this is used for segment sorting, DV updates can't work\n+      }\n\n\n...and this very explicit test of this situation: https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;a=blob;f=solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesStandalone.java;h=9a5031fbae7d11a1fffee66216031c8f1b8bff1d;hb=5375410#l405 ",
            "author": "Hoss Man",
            "id": "comment-16478222"
        },
        {
            "date": "2018-05-17T11:12:22+0000",
            "content": "Would be nice to be able to remove IndexWriter.getFieldNames as well, which was added in LUCENE-7659 only for this workaround. ",
            "author": "Adrien Grand",
            "id": "comment-16478911"
        },
        {
            "date": "2018-05-17T11:13:41+0000",
            "content": "I tried to do this but I can't get the solr tests to pass. I spent an entire day on it but the overhead is too big for me here sorry. I would have loved to get this out here too. sorry folks ",
            "author": "Simon Willnauer",
            "id": "comment-16478912"
        },
        {
            "date": "2018-05-17T11:22:47+0000",
            "content": "I attached my changes if anybody want's to pick it up ",
            "author": "Simon Willnauer",
            "id": "comment-16478919"
        }
    ]
}