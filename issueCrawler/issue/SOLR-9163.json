{
    "id": "SOLR-9163",
    "title": "Confusing solrconfig.xml in the downloaded solr*.zip",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.2"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Here are the solrconfig.xml when I download and unzip solr:\n\n\nfind . -name solrconfig.xml\n./solr-5.5.1/example/example-DIH/solr/db/conf/solrconfig.xml\n./solr-5.5.1/example/example-DIH/solr/mail/conf/solrconfig.xml\n./solr-5.5.1/example/example-DIH/solr/rss/conf/solrconfig.xml\n./solr-5.5.1/example/example-DIH/solr/solr/conf/solrconfig.xml\n./solr-5.5.1/example/example-DIH/solr/tika/conf/solrconfig.xml\n./solr-5.5.1/example/files/conf/solrconfig.xml\n./solr-5.5.1/server/solr/configsets/basic_configs/conf/solrconfig.xml\n./solr-5.5.1/server/solr/configsets/data_driven_schema_configs/conf/solrconfig.xml\n./solr-5.5.1/server/solr/configsets/sample_techproducts_configs/conf/solrconfig.xml\n\n\n\nMost likely, the ones I want to use are in server/solr/configsets, I assume.\nBut then which ones among those three?\nSearching online does not provide much detailed information.\nAnd diff-ing among them yields even more confusing results.\nExample: When I diff basic_configs/conf/solrconfig.xml with data_driven_schema_configs/conf/solrconfig.xml, I am not sure why the latter has these extra constrcuts?\n\n\n\tsolr.LimitTokenCountFilterFactory and all the comments around it.\n\tdeletionPolicy class=\"solr.SolrDeletionPolicy\"\n\tCommented out infoStream file=\"INFOSTREAM.txt\"\n\tExtra comments for \"Update Related Event Listeners\"\n\tindexReaderFactory\n\tAnd so for lots of other constructs and comments.\n\n\n\nThe point is that it is difficult to find out exactly what extra features in the latter are making it data-driven. Hence it is difficult to know what features I am losing by not taking the data-driven-schema.\n\nIt would be good to sync the above 3 files together (each file should have same comments and differ only in the configuration which makes them different). Also, some good documentation should be put online about them otherwise it is very confusing for non-committers and vanilla-users.",
    "attachments": {
        "SOLR-9163.patch": "https://issues.apache.org/jira/secure/attachment/12816213/SOLR-9163.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-05-26T05:10:54+0000",
            "author": "Varun Thacker",
            "content": "Indeed!\n\nI think the main problem here is that we have too many example configs. So over time when new features get added, there is no \"rule\" as to which configsets should be updated with an example of the feature/setting.\n\nLet's take the \"techproducts\" VS \"data_driven\" config set. I think they should only be different from each other in 3 things\n\n\t\"techproducts\" should come with pre-defined fields which are part of the sample document set.\n\t\"techproducts\" comes with a pre-defined \"/browse\" request handler\n\t\"data_driven\" comes with a custom \"add-unknown-fields-to-the-schema\" update processor which makes the example configset schemaless.\n\n\n\nBut like you said its pretty different currently and confusing.\n\nI feel we should just copy over the techproducts solrconfig to data_driven , remove \"/browse\" and add \"add-unknown-fields-to-the-schema\" . \n\nUsing the start scripts to make use of APIs to add the extra configurations seems trappy as well ( in case we want one base config ). The config would then be tied to start scripts. \n\nOur tests uses inclusion - {{  <xi:include href=\"solrconfig.snippet.randomindexconfig.xml\" xmlns:xi=\"http://www.w3.org/2001/XInclude\"/>}} . So maybe we could do something like this here to be able to share them better? ",
            "id": "comment-15301541"
        },
        {
            "date": "2016-05-26T05:15:21+0000",
            "author": "Varun Thacker",
            "content": "Another way they are different - the \"text\" field in techproducts is used in request handlers. There would be no \"text\" field in data_driven though so we'll need to think of something for that as well ",
            "id": "comment-15301545"
        },
        {
            "date": "2016-05-26T05:26:05+0000",
            "author": "Alexandre Rafalovitch",
            "content": "I wrote about where all the different examples hide as well: http://blog.outerthoughts.com/2015/11/oh-solr-home-where-art-thou/ . It could be quite confusing.\n\nI guess the main issue is that nobody remembers which particular set of features are demonstrated in which example. So, the distinction is not super clean and grows fuzzier with each addition.\n\nAnd, then, of course, is the question of which configuration is to go into production with. Including issues like *enableRemoteStreaming* being true in all the configurations provided. ",
            "id": "comment-15301553"
        },
        {
            "date": "2016-06-30T20:32:42+0000",
            "author": "Yonik Seeley",
            "content": "I just ran into some of this craziness myself...\nI would have expected the differences between basic_configs and data_driven_schema_configs to only be what is necessary for \"schemaless\".\n\nIt seems like to the degree possible, those configs should be identical.\n\n\tthe only difference in the schema should perhaps be the \"copyField *\" that's in the schemaless one?  I don't like that copyField myself, but at least it's limited to the schemaless config.\n\tthe only difference in the solrconfig should be if add-unknown-fields-to-the-schema update processor is enabled or not (i.e. it should be defined in both).\n\n\n\nEverything else should be the same?\nIs there a way to use params.json or anything else to further confine the differences?\nOnce we have sync'd these configsets they should be kept in sync. ",
            "id": "comment-15357801"
        },
        {
            "date": "2016-07-02T19:38:49+0000",
            "author": "David Smiley",
            "content": "Is there a way to use params.json or anything else to further confine the differences?\nOnce we have sync'd these configsets they should be kept in sync.\n\n+1 if there is; I was just thinking params.json (config overlay).  Then we could have a precommit check to ensure the files are the same? ",
            "id": "comment-15360309"
        },
        {
            "date": "2016-07-05T16:41:57+0000",
            "author": "Yonik Seeley",
            "content": "Draft patch attached.\n\nHere is the schema/solrconfig differences between the two configsets after:\n\n-<schema name=\"example-basic\" version=\"1.6\">\n+<schema name=\"example-data-driven-schema\" version=\"1.6\">\n     <!-- attribute \"name\" is the name of this schema and is only used for display purposes.\n        version=\"x.y\" is Solr's version number for the schema syntax and \n        semantics.  It should not normally be changed by applications.\n@@ -124,7 +124,7 @@\n \n     <!-- Only enabled in the \"schemaless\" data-driven example (assuming the client\n          does not know what fields may be searched) because it's very expensive to index everything twice. -->\n-    <!-- <copyField source=\"*\" dest=\"_text_\"/> -->\n+    <copyField source=\"*\" dest=\"_text_\"/>\n\n\n\n\n \n-  <!-- This enabled schemaless mode \n   <initParams path=\"/update/**\">\n     <lst name=\"defaults\">\n       <str name=\"update.chain\">add-unknown-fields-to-the-schema</str>\n     </lst>\n   </initParams>\n-  -->\n\n ",
            "id": "comment-15362741"
        },
        {
            "date": "2016-07-07T05:09:41+0000",
            "author": "Yonik Seeley",
            "content": "OK, full patch attached, essentially syncing the two configsets.\nI'll commit tomorrow as there haven't been any concerns/objections over this issue before. ",
            "id": "comment-15365619"
        },
        {
            "date": "2016-07-07T14:15:24+0000",
            "author": "David Smiley",
            "content": "Yonik is this just the first step in addition to some mechanism for us to ensure they stay in sync?  Without some mechanism, they will fall out of sync again. ",
            "id": "comment-15366171"
        },
        {
            "date": "2016-07-07T14:29:09+0000",
            "author": "Yonik Seeley",
            "content": "Yonik is this just the first step in addition to some mechanism for us to ensure they stay in sync? \n\nMaybe..., I don't know what the next step is, and I think manual syncing is the first step regardless.\nHopefully at least committers will see that they are 99% the same and help keep them that way.\nI was just looking into params.json but they didn't quite work the way I thought.  I had to specify params.json in the request to get it to work. ",
            "id": "comment-15366201"
        },
        {
            "date": "2016-07-07T14:55:53+0000",
            "author": "David Smiley",
            "content": "Noble Paul would the \"config overlay\" thing work here?  I mistakenly suggested params.json I think. ",
            "id": "comment-15366232"
        },
        {
            "date": "2016-07-07T15:13:37+0000",
            "author": "Yonik Seeley",
            "content": "Is everyone OK with committing this as a first (possibly only) step?\nI don't have further time to work on this right now. ",
            "id": "comment-15366258"
        },
        {
            "date": "2016-07-08T19:43:59+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 67b638880d81fbb11abfbfc1ec93a5f3d86c3d3b in lucene-solr's branch refs/heads/master from Yonik Seeley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=67b6388 ]\n\nSOLR-9163: sync basic_configs w/ data_driven_schema_configs ",
            "id": "comment-15368286"
        },
        {
            "date": "2016-07-08T19:45:59+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1a53346c0e33956d0b568a78e8a3753bc58789c5 in lucene-solr's branch refs/heads/branch_6x from Yonik Seeley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1a53346 ]\n\nSOLR-9163: sync basic_configs w/ data_driven_schema_configs ",
            "id": "comment-15368291"
        },
        {
            "date": "2016-07-08T19:54:10+0000",
            "author": "Yonik Seeley",
            "content": "Committed.\n\nThe duplication is a shame though...\nLonger term it feels like we should further collapse the two config-sets into one and have some sort of simple runtime switch for \"schemaless\" ",
            "id": "comment-15368319"
        },
        {
            "date": "2016-07-08T22:25:51+0000",
            "author": "Hoss Man",
            "content": "I didn't notice this Jira until after yonik's commits.\n\nFWIW i think making \"basic_configs\" bigger \u2013 particularly with so much commented out example stuff, most of which refers to fields that don't even exist in the basic_configs schema  \u2013 is a bad idea.\n\nThe intent behind basic_configs was to be just that: a very basic set of configs. now instead of 2 large, kitchen-sink-esque, configsets (sample_techproducts and data_driven) we have 3 ... that doesn't feel like progress. ",
            "id": "comment-15368599"
        },
        {
            "date": "2016-07-08T22:38:28+0000",
            "author": "Yonik Seeley",
            "content": "commented out example stuff, most of which refers to fields that don't even exist in the basic_configs schema \n\nThe schemas should be exactly the same now (except for the copyField).\n\nFWIW i think making \"basic_configs\" bigger [...]  is a bad idea.\n\nI sort of had the same thought when syncing these up... but I modeled the basic after the schemaless (instead of vice-versa) because schemaless is what you get by default when you create a core, and I didn't want to go breaking examples in documentation.\n\nThe intent behind basic_configs was to be just that: a very basic set of configs.\n\nShouldn't schemaless just be about enabling that one feature?\n ",
            "id": "comment-15368611"
        },
        {
            "date": "2016-07-08T22:53:28+0000",
            "author": "Yonik Seeley",
            "content": "FWIW, I'd be +1 on removing a lot of the cruft from both of the configs (and like I said, ideally just merging them and having a simple switch to turn on/off schemaless). ",
            "id": "comment-15368633"
        },
        {
            "date": "2016-07-08T23:20:55+0000",
            "author": "Hoss Man",
            "content": "The schemas should be exactly the same now (except for the copyField).\n\nExcept that one of them (data_driven_schema) supports adding field automaticaly, while the other (basic) does not \u2013 so a bunch of commented out hunks of solrconfig.xml that give examples of how to do something with a \"price\" field is viable in a data_driven_schema config set, but nonsensical in the basic configs set.\n\nShouldn't schemaless just be about enabling that one feature?\n\nyes, but:\n\n\tthere is a lot of configuration involved in supporting a data_driven_schema collection (the various updated processors and what not) that are now cluttering up the \"basic\" configs\n\tthat sounds like a reason to delete commented out sample cruft from data_driven, not add it to basic_configs...\n\n\n\nFWIW, I'd be +1 on removing a lot of the cruft from both of the configs ...\n\n+1 ",
            "id": "comment-15368672"
        },
        {
            "date": "2016-08-26T13:58:39+0000",
            "author": "Michael McCandless",
            "content": "Bulk close resolved issues after 6.2.0 release. ",
            "id": "comment-15438948"
        }
    ]
}