{
    "id": "SOLR-2116",
    "title": "TikaEntityProcessor does not find parser by default",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "3.1",
            "4.0-ALPHA"
        ],
        "components": [
            "contrib - DataImportHandler",
            "(1)",
            "contrib - Solr Cell (Tika extraction)"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "The TikaEntityProcessor does not find the correct document parser by default.\nThis is in a two-level DIH config file. I have attached pdflist-data-config.xml and pdflist.xml, the XML file list supplying. To test this, you will need the current 3.x branch or 4.0 trunk.\n\n\tSet up a Tika-enabled Solr\n\tcopy any PDF file to /tmp/testfile.pdf\n\tcopy the pdflist-data-config.xml to your solr/conf\n\tand add this snippet to your solrconfig.xml\n\n<requestHandler name=\"/pdflist\"\n      class=\"org.apache.solr.handler.dataimport.DataImportHandler\">\n  <lst name=\"defaults\">\n              <str name=\"config\">pdflist-data-config.xml</str>\n      </lst>\n</requestHandler>\n\n\n\n\n\nhttp://localhost:8983/solr/pdflist?command=full-import will make one document with the id and text fields populated. If you remove this line:\n\n parser=\"org.apache.tika.parser.pdf.PDFParser\"\n\n\nfrom the TikaEntityProcessor entity, the parser will not be found and you will get a document with the \"id\" field and nothing else.",
    "attachments": {
        "pdflist-data-config.xml": "https://issues.apache.org/jira/secure/attachment/12454173/pdflist-data-config.xml",
        "pdflist.xml": "https://issues.apache.org/jira/secure/attachment/12454172/pdflist.xml",
        "SOLR-2116.patch": "https://issues.apache.org/jira/secure/attachment/12467372/SOLR-2116.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Lance Norskog",
            "id": "comment-12909030",
            "date": "2010-09-13T22:33:30+0000",
            "content": "It does not work if the parser= attribute is set to \n\n\nparser=\"org.apache.tika.parser.AutoDetectParser\n\n\n\nSo, the AutoDetectParser does not work.\n\nLance "
        },
        {
            "author": "Martijn van Groningen",
            "id": "comment-12976986",
            "date": "2011-01-03T22:21:35+0000",
            "content": "I've encountered the same issue in my Solr setup. After some digging I found the problem, it is simply not loading classes from the lib directory.\n\nWhen no tika config is specified in the data-config.xml, the TikaEntityProcessor tries to load the TikaConfig in the manner specified below:\n\n....\nString tikaConfigFile = context.getResolvedEntityAttribute(\"tikaConfig\");\nif (tikaConfigFile == null) {\n  tikaConfig = TikaConfig.getDefaultConfig();\n} else {\n....\n\n\n\nThe problem with this way of loading the TIkaConfig is, that it doesn't use the classloader from the SolrResourceLoader and therefore not loading any jars from the solr lib directory. The attached patch resolves the issue that no content is parsed by Tika. I simply use the constructor that requires a ClassLoader as argument. I retrieve the classloader from the SolrCore.\n\n...\nString tikaConfigFile = context.getResolvedEntityAttribute(\"tikaConfig\");\nif (tikaConfigFile == null) {\n   ClassLoader classLoader = context.getSolrCore().getResourceLoader().getClassLoader();\n   tikaConfig = new TikaConfig(classLoader);\n} else {\n...\n\n\n\nI haven't added a test that demonstrates this bug, since it only occurs when Tika libs (and its dependencies) are in the Solr lib directory and I don't know how to replicate this situation in the solr build. The TestTikaEntityProcessor class doesn't have this problem since all classes are on the normal classpath when the build is running. "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12977067",
            "date": "2011-01-04T01:52:57+0000",
            "content": "Great! I'll try it out on 3.x and trunk.\n\nSpeaking of Tika, have you ever seen a tikaconfig file? I can't find on anywhere on the web or the Tika source. "
        },
        {
            "author": "Chris A. Mattmann",
            "id": "comment-12977072",
            "date": "2011-01-04T02:03:07+0000",
            "content": "Hey Lance,\n\nSpeaking of Tika, have you ever seen a tikaconfig file? I can't find on anywhere on the web or the Tika source\n\nIn the later versions of Tika (I think since 0.7) we've went to an all Service Provider Interface (SPI) mechanism for Parser config and resource loading, obviating the need to have a tika config.xml file:\n\nhttps://issues.apache.org/jira/browse/TIKA-317\n\nHowever, you still have the option of specifying and using one. See:\n\nhttp://svn.apache.org/repos/asf/tika/tags/0.8/tika-core/src/main/java/org/apache/tika/config/TikaConfig.java\n\nYou can find an example of the XML-based Tika config here:\n\nhttp://svn.apache.org/repos/asf/tika/tags/0.6/tika-core/src/main/resources/org/apache/tika/\n\nPart of this is also due to the ParseContext which was introduced also as a configuration mechanism. See:\n\nhttps://issues.apache.org/jira/browse/TIKA-275\n\nCheers,\nChris\n\n "
        },
        {
            "author": "David Smiley",
            "id": "comment-12994165",
            "date": "2011-02-13T23:19:55+0000",
            "content": "I encountered this bug and fixed it independently just now, just as the patch file here does. This is how Solr Cell configures Tika too.  I encountered this on 3x by using the example-DIH that comes which Solr that includes a core named \"tika\".\n\nFurthermore, I found a configuration bug in that core in solrconfig.xml in which the <dataDir> is specified as opposed to it just defaulting to the correct place. The result is that this core will erroneously use the sample example/solr/data directory which is bad.\n\nCan a committer please commit the patch and remove the dataDir in that tika core on branch 3x?  This is a bug after all. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12996667",
            "date": "2011-02-19T00:12:56+0000",
            "content": "I don't fully understand this yet, and it doens't have a test, but i see a patch and recent comments from david that the bug is really and the patch fixes the bug, so i'm going to look into it. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12996684",
            "date": "2011-02-19T01:57:55+0000",
            "content": "Martijn: thank you very much for the patch.\n\nyou are correct, the way the tests are all currently run, simulating class loader problems like this is pretty much impossible \u2013 even using the hooks we have to spin up a JettyServer wouldn't really help since it still runs in the same JVM and all the libs are already loaded.\n "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13013122",
            "date": "2011-03-30T15:45:38+0000",
            "content": "Bulk close for 3.1.0 release "
        }
    ]
}