{
    "id": "LUCENE-6446",
    "title": "Simplify Explanation API",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.2",
            "6.0"
        ],
        "priority": "Minor",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "We should make this API easier to consume, for instance:\n\n\tenforce important components to be non-null (eg. description)\n\tdecouple entirely the score computation from whether there is a match or not (Explanation assumes there is a match if the score is > 0, you need to use ComplexExplanation to override this behaviour)\n\treturn an empty array instead of null when there are no \"details\"",
    "attachments": {
        "LUCENE-6446.patch": "https://issues.apache.org/jira/secure/attachment/12726689/LUCENE-6446.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14503785",
            "author": "Adrien Grand",
            "date": "2015-04-20T22:05:49+0000",
            "content": "Here is a patch which removes ComplexExplanation and makes Explanation immutable. "
        },
        {
            "id": "comment-14504018",
            "author": "Ryan Ernst",
            "date": "2015-04-21T00:24:07+0000",
            "content": "+1, this is much cleaner! "
        },
        {
            "id": "comment-14504900",
            "author": "ASF subversion and git services",
            "date": "2015-04-21T12:55:43+0000",
            "content": "Commit 1675109 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1675109 ]\n\nLUCENE-6446: Simplified Explanation API. "
        },
        {
            "id": "comment-14504933",
            "author": "ASF subversion and git services",
            "date": "2015-04-21T13:23:04+0000",
            "content": "Commit 1675114 from Adrien Grand in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1675114 ]\n\nLUCENE-6446: Simplified Explanation API. "
        },
        {
            "id": "comment-14504960",
            "author": "Adrien Grand",
            "date": "2015-04-21T13:39:19+0000",
            "content": "Thanks Ryan! "
        },
        {
            "id": "comment-14505094",
            "author": "ASF subversion and git services",
            "date": "2015-04-21T15:14:21+0000",
            "content": "Commit 1675132 from Adrien Grand in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1675132 ]\n\nLUCENE-6446: Fix explanations of BM25Similarity. "
        },
        {
            "id": "comment-14505095",
            "author": "ASF subversion and git services",
            "date": "2015-04-21T15:15:10+0000",
            "content": "Commit 1675133 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1675133 ]\n\nLUCENE-6446: Fix explanations of BM25Similarity. "
        },
        {
            "id": "comment-14505226",
            "author": "ASF subversion and git services",
            "date": "2015-04-21T16:37:23+0000",
            "content": "Commit 1675152 from Adrien Grand in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1675152 ]\n\nLUCENE-6446: Protected against null sub explanations. "
        },
        {
            "id": "comment-14505229",
            "author": "ASF subversion and git services",
            "date": "2015-04-21T16:39:03+0000",
            "content": "Commit 1675153 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1675153 ]\n\nLUCENE-6446: Protected against null sub explanations. "
        },
        {
            "id": "comment-14507038",
            "author": "Terry Smith",
            "date": "2015-04-22T13:20:28+0000",
            "content": "The refactored Explanation looks great, however I see a couple of small issues worth raising.\n\n1. The constructor is private and there is a protected toString(int depth) method, it doesn't look like anyone else is calling it and no-one can subclass it. Should this method be private?\n\n2. The toString() output is different! ComplexExplanation had a slightly different getSummary() method:\n\n\n    return getValue() + \" = \"\n      + (isMatch() ? \"(MATCH) \" : \"(NON-MATCH) \")\n      + getDescription();\n\n\n\nversus\n\n\n    return getValue() + \" = \" + getDescription();\n\n\n\nI find this extra context invaluable, especially with the decoupling of score and match, we can't assume that a score of 0 is a NON-MATCH yet the output no longer tells is if an explanation is a MATCH or not.\n\nI understand that I can roll my own string building code with the current API. It'd be great if the default output was as useful as possible. "
        },
        {
            "id": "comment-14507098",
            "author": "Adrien Grand",
            "date": "2015-04-22T13:42:24+0000",
            "content": "Should this method be private?\n\nGood point, I'll fix.\n\nI find this extra context invaluable, especially with the decoupling of score and match, we can't assume that a score of 0 is a NON-MATCH yet the output no longer tells is if an explanation is a MATCH or not.\n\nI removed it because it was not always in the summary (only when using ComplexExplanation) as well as redundant with the description which is explicit when there is no match, for instance TermWeight's \"no matching term\" or BooleanWeight \"no match on required clause\"? "
        },
        {
            "id": "comment-14507111",
            "author": "Terry Smith",
            "date": "2015-04-22T13:54:47+0000",
            "content": "I removed it because it was not always in the summary (only when using ComplexExplanation) as well as redundant with the description which is explicit when there is no match, for instance TermWeight's \"no matching term\" or BooleanWeight \"no match on required clause\"?\n\nThat makes sense. Removing the redundant information is definitely the way to go.\n\n\nI also noticed that the new Explanation.noMatch() methods look a little trappy. They both take the child details and drop them on the floor.\n\n\n  public static Explanation noMatch(String description, Collection<Explanation> details) {\n    return new Explanation(false, 0f, description, Collections.emptyList());\n  }\n\n\n\nI think the noMatch() methods should either add the details to the created explanation or not accept them as parameters. Having a non-matching explanation contain child details can be really useful for complex queries. What do you think?\n "
        },
        {
            "id": "comment-14507114",
            "author": "Adrien Grand",
            "date": "2015-04-22T13:56:58+0000",
            "content": "Oh yes, that's a bad bug! Thanks for catching this! "
        },
        {
            "id": "comment-14507115",
            "author": "ASF subversion and git services",
            "date": "2015-04-22T13:57:21+0000",
            "content": "Commit 1675363 from Adrien Grand in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1675363 ]\n\nLUCENE-6446: Fix method visibility and trappy factory method. "
        },
        {
            "id": "comment-14507125",
            "author": "ASF subversion and git services",
            "date": "2015-04-22T14:03:00+0000",
            "content": "Commit 1675365 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1675365 ]\n\nLUCENE-6446: Fix method visibility and trappy factory method. "
        },
        {
            "id": "comment-14586917",
            "author": "Anshum Gupta",
            "date": "2015-06-15T21:44:32+0000",
            "content": "Bulk close for 5.2.0. "
        }
    ]
}