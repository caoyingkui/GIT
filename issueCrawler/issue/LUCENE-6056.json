{
    "id": "LUCENE-6056",
    "title": "JavaDocs of Directory.renameFile are misleading",
    "details": {
        "resolution": "Not A Problem",
        "affect_versions": "None",
        "components": [
            "general/javadocs"
        ],
        "labels": "",
        "fix_versions": [],
        "priority": "Minor",
        "status": "Resolved",
        "type": "Bug"
    },
    "description": "The java docs of org.apache.lucene.store.Directory#renameFile read:\n\n\n\tRenames \n{@code source}\n to \n{@code dest} as an atomic operation,\n   * where {@code dest}\n does not yet exist in the directory.\n\n\n\nHowever in FSDirectory we do:\n\n Files.move(directory.resolve(source), directory.resolve(dest), StandardCopyOption.ATOMIC_MOVE);\n\nThat one does not give us the documented behavior. From the javadocs of Files.move, with StandardCopyOption.ATOMIC_MOVE:\nThe move is performed as an atomic file system operation and all other options are ignored. If the target file exists then it is implementation specific if the existing file is replaced or this method fails by throwing an IOException.\n\nI think the  use of atomic moves is good here but it means  the java docs of the Directory.renameFiles should be changed and relax the guarantee.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14204612",
            "author": "Robert Muir",
            "date": "2014-11-10T10:27:50+0000",
            "content": "The doc that 'where dest does not exist' is exactly the relaxation here. "
        }
    ]
}