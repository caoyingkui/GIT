{
    "id": "SOLR-12374",
    "title": "Add SolrCore.withSearcher(lambda accepting SolrIndexSearcher)",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "7.4"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "I propose adding the following to SolrCore:\n\n  /**\n   * Executes the lambda with the {@link SolrIndexSearcher}.  This is more convenience than using\n   * {@link #getSearcher()} since there is no ref-counting business to worry about.\n   * Example:\n   * <pre class=\"prettyprint\">\n   *   IndexReader reader = h.getCore().withSearcher(SolrIndexSearcher::getIndexReader);\n   * </pre>\n   */\n  @SuppressWarnings(\"unchecked\")\n  public <R> R withSearcher(Function<SolrIndexSearcher,R> lambda) {\n    final RefCounted<SolrIndexSearcher> refCounted = getSearcher();\n    try {\n      return lambda.apply(refCounted.get());\n    } finally {\n      refCounted.decref();\n    }\n  }\n\n\nThis is a nice tight convenience method, avoiding the clumsy RefCounted API which is easy to accidentally incorrectly use \u2013 see https://issues.apache.org/jira/browse/SOLR-11616?focusedCommentId=16477719&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-16477719\n\nI guess my only (small) concern is if hypothetically you might\u00a0make the lambda short because it's easy to do that (see the one-liner example above) but the object you return that you're interested in \u00a0(say IndexReader) could potentially become invalid if the SolrIndexSearcher closes.\u00a0 But I think/hope that's\u00a0impossible normally based on when this getSearcher() used? \u00a0I could at least add a warning to the docs.",
    "attachments": {
        "SOLR-12374.patch": "https://issues.apache.org/jira/secure/attachment/12924607/SOLR-12374.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-05-22T19:47:30+0000",
            "content": "Here's a patch.  I converted as many callers of getSearcher() that I could easily do so but some definitely should remain.  I added a new utility IOFunction functional interface that's like the JDK Function but declares to throw an IOException.  This could show promise in Lucene in IOUtils which has an IOConsumer already based on this pattern.  \n\nThe patch also fixes a bug \u2013 SnapShooter.getIndexCommit that had forgotten to decref.  I reported here: https://issues.apache.org/jira/browse/SOLR-11616?focusedCommentId=16477719&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16477719  But it seems like an edge-case; I'm not sure in practice how this line of code would be reached.  CC Varun Thacker ",
            "author": "David Smiley",
            "id": "comment-16484467"
        },
        {
            "date": "2018-05-23T19:08:49+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 19 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   3m  6s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   2m 58s \n  the patch passed  \n\n\n +1 \n  javac  \n   2m 58s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   1m 52s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   1m 47s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   1m 47s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n   1m  9s \n  clustering in the patch passed.  \n\n\n -1 \n  unit  \n  74m 49s \n  core in the patch failed.  \n\n\n  \n   \n  85m 42s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.cloud.autoscaling.sim.TestTriggerIntegration \n\n\n\u00a0\n solr.cloud.autoscaling.IndexSizeTriggerTest \n\n\n\u00a0\n solr.cloud.autoscaling.SearchRateTriggerTest \n\n\n\u00a0\n solr.cloud.autoscaling.sim.TestLargeCluster \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-12374 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12924607/SOLR-12374.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene1-us-west 3.13.0-88-generic #135-Ubuntu SMP Wed Jun 8 21:10:42 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / d32ce81 \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on April 8 2014 \n\n\n Default Java \n 1.8.0_172 \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/103/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/103/testReport/ \n\n\n modules \n C: solr/contrib/clustering solr/core U: solr \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/103/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16487870"
        },
        {
            "date": "2018-05-29T20:27:22+0000",
            "content": "Commit 6e0da7e2f83ca3291f1f167cfad00ad2e4d3abd7 in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6e0da7e ]\n\nSOLR-12374 Add SolrCore.withSearcher(lambda accepting SolrIndexSearcher) ",
            "author": "ASF subversion and git services",
            "id": "comment-16494200"
        },
        {
            "date": "2018-05-29T21:17:44+0000",
            "content": "Commit d38f375fb971970f2b05829b82cef1f77372cf36 in lucene-solr's branch refs/heads/branch_7x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d38f375 ]\n\nSOLR-12374: Added SolrCore.withSearcher(lambda) convenience.\n\n\tand fixed SnapShooter.getIndexCommit bug forgetting to decref (rare?)\n\n\n\n(cherry picked from commit e5f6adc) ",
            "author": "ASF subversion and git services",
            "id": "comment-16494287"
        },
        {
            "date": "2018-05-30T14:26:14+0000",
            "content": "The CHANGES for 7.4 has:\n\n\tSOLR-12374: SnapShooter.getIndexCommit can forget to decref the searcher; though it's not clear in practice when.\n (David Smiley)\n\n\n\nBut it's missing on the master branch... ",
            "author": "Yonik Seeley",
            "id": "comment-16495231"
        },
        {
            "date": "2018-05-30T15:02:06+0000",
            "content": "Commit 9aa16b64c741294bb8e48d0a19fd5ae4b072b359 in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9aa16b6 ]\n\nSOLR-12374: Added SolrCore.withSearcher(lambda) convenience.\n\n\tand fixed SnapShooter.getIndexCommit bug forgetting to decref (rare?)\n\n ",
            "author": "ASF subversion and git services",
            "id": "comment-16495279"
        },
        {
            "date": "2018-05-30T15:02:39+0000",
            "content": "woops; thanks! ",
            "author": "David Smiley",
            "id": "comment-16495280"
        }
    ]
}