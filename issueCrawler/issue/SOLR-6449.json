{
    "id": "SOLR-6449",
    "title": "Add first class support for Real Time Get in Solrj",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "components": [
            "clients - java"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Any request handler can be queried by Solrj using a custom param map and the \"qt\" parameter but I think /get should get first-class support in the java client.",
    "attachments": {
        "SOLR-6449.patch": "https://issues.apache.org/jira/secure/attachment/12677161/SOLR-6449.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Anurag Sharma",
            "id": "comment-14173990",
            "date": "2014-10-16T17:23:14+0000",
            "content": "Not able to get the meaning of first class support here. An example would be very helpful to clarify.\n "
        },
        {
            "author": "Steve Davids",
            "id": "comment-14175587",
            "date": "2014-10-17T21:42:27+0000",
            "content": "The current way of accessing the Real Time Get in SolrJ you need to do something along the lines of:\n\n\nSolrDocument doc = solrServer.query(params(\"qt\", \"/get\", \"id\", id)).getResponse().get(\"doc\");\n\n\n\nIt would be convenient to provide a native method of (or similar variant):\n\nSolrDocument doc = solrServer.get(id);\n\n "
        },
        {
            "author": "Anurag Sharma",
            "id": "comment-14175891",
            "date": "2014-10-18T06:45:57+0000",
            "content": "Just wondering should we also support POST and PUT as well like solrServer.post(id,object) "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14175904",
            "date": "2014-10-18T07:49:00+0000",
            "content": "Just wondering should we also support POST and PUT as well like solrServer.post(id,object)\n\nThat's already supported by setting the method on the SolrRequest object. For example:\n\nUpdateRequest updateRequest = new UpdateRequest();\nupdateRequest.setMethod(SolrRequest.METHOD.POST);\n\n "
        },
        {
            "author": "Steve Davids",
            "id": "comment-14176051",
            "date": "2014-10-18T16:19:18+0000",
            "content": "This issue is really providing yet another convenience method to perform CRUD operations.\n\nCreate & Update Operations:\n\nUpdateResponse resp = solrServer.add(SolrInputDocument);\nUpdateResponse resp = solrServer.add(Collection<SolrInputDocument>);\n//+ a couple variants\n\n\n\nThese methods don't necessarily need to align to the various REST HTTP method semantics. The \"add\" action will perform a create or update clobbering the document already in place with the ability to perform an atomic update operation which will perform a merge with the document already in the index.\n\nDelete Operations:\n\nUpdateResponse resp = solrServer.deleteById(String id);\nUpdateResponse resp = solrServer.deleteById(Collection<String> id);\nUpdateResponse resp = solrServer.deleteByQuery(String query);\n//+ a couple variants\n\n\n\nRead Operations:\n\nQueryResponse resp = solrServer.query(SolrParams);\n//+ a couple variants\n\n\n\nAs you can see the delete operation allows you to delete given a specific id or delete by a query, whereas the retrieval only gives you query access. To be consistent this ticket should provide the ability to retrieve by id as a convenience to developers using the SolrJ API (not to mention the additional benefits they will get from the RealTimeGetHandler). "
        },
        {
            "author": "Anurag Sharma",
            "id": "comment-14184434",
            "date": "2014-10-26T08:55:05+0000",
            "content": "Implemented direct call to get the doc(s) by ID(s). Provided two apis\n\n1. Takes 1 or more Ids using java variable number of args\n\n \nGetByIdResponse getById(String... ids)\n\n\n\n2. Takes input as set collection\n\nGetByIdResponse getById(Set<String> ids)\n\n\n\nUnit tests added for single(using #1) and multiple(using #1 & #2) ID(s) request(s). "
        },
        {
            "author": "Steve Davids",
            "id": "comment-14272741",
            "date": "2015-01-11T00:29:43+0000",
            "content": "Provided a simpler patch that doesn't create new GetByIdResponse & GetByIdRequest classes. Also, added the ability to specify your own custom SolrParams (useful for specifying fields & cores in SolrCloud):\n\nSolrDocument getById(String id)\nSolrDocument getById(String id, SolrParams params)\nSolrDocumentList getById(Collection<String> ids)\nSolrDocumentList getById(Collection<String> ids, SolrParams params) "
        },
        {
            "author": "Anurag Sharma",
            "id": "comment-14272803",
            "date": "2015-01-11T04:12:10+0000",
            "content": "Great job! "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14290125",
            "date": "2015-01-23T22:25:37+0000",
            "content": "Commit 1654420 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1654420 ]\n\nSOLR-6449: Add first class support for Real Time Get in Solrj "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14290127",
            "date": "2015-01-23T22:27:35+0000",
            "content": "Commit 1654422 from shalin@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1654422 ]\n\nSOLR-6449: Add first class support for Real Time Get in Solrj "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14290128",
            "date": "2015-01-23T22:29:23+0000",
            "content": "Thanks Anurag and Steve.\n\nSteve, I changed your patch to not rely on common-collections because solrj does not depend on common-collections. "
        },
        {
            "author": "Steve Davids",
            "id": "comment-14290404",
            "date": "2015-01-24T03:13:38+0000",
            "content": "Cool, thanks Shalin. Just a side note, we could optimize retrievals a little for the Cloud client since it would have knowledge of which shard to route the traffic to (similar to how doc updates are handled) - perhaps a new follow-up ticket is in order just to let people know we thought about it . "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-14495362",
            "date": "2015-04-15T00:30:47+0000",
            "content": "Bulk close after 5.1 release "
        }
    ]
}