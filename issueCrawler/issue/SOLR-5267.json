{
    "id": "SOLR-5267",
    "title": "Solr.xml (persistent=true) - slows down when core increases beyond 3 - 5K",
    "details": {
        "affect_versions": "4.3.1",
        "status": "Closed",
        "fix_versions": [],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "The response time of deploying new core increases to 40+ seconds, when persistent=true is enabled in solr.xml.\n\nThe issue seem to be due to iterations over the loop to add all existing cores and then generated solr.xml\n\norg.apache.solr.core.CoreContainer.addPersistOneCore - calls to this function need to be optimized.\n\nIdeas\n\n\n\tHaving only entries for loadOnStartup cores in solr.xml should be sufficient.\n\tEach core directory can have its properties.\n\tTransient core lookup can be performed through this file.\n\tThere need a better way to track the all registered core (than XML).",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13776183",
            "date": "2013-09-24T10:40:47+0000",
            "content": "Note that this is already solved in 4.4 by using a completely different way of discovering cores, without modifying solr.xml. See https://cwiki.apache.org/confluence/display/solr/Solr+Cores+and+solr.xml for more info. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13776186",
            "date": "2013-09-24T10:41:46+0000",
            "content": "We'll most likely not spend any effort speeding up old-style loading of cores since this will go away with 5.x. Closing "
        }
    ]
}