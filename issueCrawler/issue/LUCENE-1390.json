{
    "id": "LUCENE-1390",
    "title": "add ASCIIFoldingFilter and deprecate ISOLatin1AccentFilter",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "modules/analysis"
        ],
        "type": "Improvement",
        "fix_versions": [
            "2.9"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "The ISOLatin1AccentFilter is removing accents from accented characters in the ISO Latin 1 character set.\nIt does what it does and there is no bug with it.\n\nIt would be nicer, though, if there was a more comprehensive version of this code that included not just ISO-Latin-1 (ISO-8859-1) but the entire Latin 1 and Latin Extended A unicode blocks.\nSee: http://en.wikipedia.org/wiki/Latin-1_Supplement_unicode_block\nSee: http://en.wikipedia.org/wiki/Latin_Extended-A_unicode_block\n\nThat way, all languages using roman characters are covered.\nA new class, ISOLatinAccentFilter is attached. It is intended to supercede ISOLatin1AccentFilter which should get deprecated.",
    "attachments": {
        "ASCIIFoldingFilter.patch": "https://issues.apache.org/jira/secure/attachment/12391177/ASCIIFoldingFilter.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2008-09-17T19:41:03+0000",
            "content": "The new ISOLatinAccentFilter class, superceding ISOLatin1AccentFilter. ",
            "author": "Andi Vajda",
            "id": "comment-12631898"
        },
        {
            "date": "2008-09-17T20:32:38+0000",
            "content": "I think that at a minimum, the Latin Extended Additional block [U+1E00-U+1EFF] should be added, since it is included in Unicode v3.0 (the version of Unicode that Java 1.4.2 is conformant with), and it consists mainly of characters which have exact diacritic-stripped ASCII versions.  Wikipedia doesn't seem to have a page for this block, and I can't find a code chart PDF for Unicode v3.0 on unicode.org, so here's the PDF for Unicode v5.1 (the latest version):\n\nhttp://www.unicode.org/charts/PDF/U1E00.pdf\n\nProbably should check against the Unicode 3.0 data file to make sure there haven't been any changes to this block between v3.0 and v5.1.0 - i.e., to make sure that the above-linked PDF is accurate for Unicode v3.0.\n\nThere is one more Latin block listed in the Unicode 3.0 blocks data file: Latin Extended-B.  Since many of the characters in this block don't have exact diacritic-stripped ASCII versions, maybe it could be argued that they shouldn't be included in this filter.  A fair proportion of them (maybe 40%), however, do. ",
            "author": "Steve Rowe",
            "id": "comment-12631931"
        },
        {
            "date": "2008-09-17T20:57:45+0000",
            "content": "\nMakes sense.\n\n\nI did look at that block and it looked much more remote from the purpose of \nthis class. But you're right, many of these could be handled as well.\n\nAnd I agree that they should be handled to be able to claim to be doing a \ncomplete job.\n\nSo far, I've claimed that this class handles Latin 1 and Latin Extended A \nwhich should cover most, if not all, european/turkish languages using latin \nscript and thus goes much farther than the ISOLatin1AccentFilter in that \nrespect. ",
            "author": "Andi Vajda",
            "id": "comment-12631946"
        },
        {
            "date": "2008-09-18T18:36:08+0000",
            "content": "ISOLatinAccentFilter.java again, now with Unicode Latin Extended B as well. ",
            "author": "Andi Vajda",
            "id": "comment-12632332"
        },
        {
            "date": "2008-09-18T18:58:53+0000",
            "content": "Andi,\n\nWhat do you think of the idea of remaking this into a filter that folds all Unicode characters to their ASCII equivalents?  This would be (I think) a superset of what you've done, but would also include things like fullwidth Latin characters, smaller variants of some ASCII symbols, fancy quotation marks, etc.  Maybe non-Arabic decimal numeric characters could be converted to their Arabic versions. ",
            "author": "Steve Rowe",
            "id": "comment-12632339"
        },
        {
            "date": "2008-09-18T23:53:45+0000",
            "content": "\n\nI think that would be a whole lot of typing \nNot a bad idea, still.\nI'm in the process of entering the 1E00 - 1EFF range.\nThe Extended-C and D blocks also have relevant things to include but I'm \nhoping to stop at the Extended Additional block currently in progress. ",
            "author": "Andi Vajda",
            "id": "comment-12632458"
        },
        {
            "date": "2008-09-19T01:20:57+0000",
            "content": " Now with the u1e00 - u1eff range. ",
            "author": "Andi Vajda",
            "id": "comment-12632480"
        },
        {
            "date": "2008-09-19T14:51:01+0000",
            "content": "The Extended-C and D blocks also have relevant things to include\n\nThese two blocks were not included in Unicode 3.0, the version supported by Java 1.4.2, which is the Java version that Lucene 2.X supports.\n\nNevertheless, the ranges these two blocks occupy in Unicode 5.1 are non-characters in Unicode 3.0, so I don't think it would be a problem to add them.\n\nI'll take a look at adding more stuff this weekend.\n\nI also will add the Unicode character descriptions to the comments for each character (e.g. \"LATIN CAPITAL LETTER A WITH MACRON\"). ",
            "author": "Steve Rowe",
            "id": "comment-12632706"
        },
        {
            "date": "2008-09-22T04:08:43+0000",
            "content": "It would be good to clarify how the goals of this issue differ from LUCENE-1343 ... as an outside observer they seem to be the same thing ",
            "author": "Hoss Man",
            "id": "comment-12633135"
        },
        {
            "date": "2008-09-29T23:37:43+0000",
            "content": "It would be good to clarify how the goals of this issue differ from LUCENE-1343 ... as an outside observer they seem to be the same thing\n\nLUCENE-1343 depends on either Java 6 or an ICU jar.  Java 5 support (much less Java 6 support) is still a ways off, and core Lucene can't have external dependencies.  IMO, this issue intends to provide core Lucene support for folding a wider set of accented characters to ASCII.\n\nIn a moment I'll attach a patch that, in addition to the larger set of accented characters to be folded that Andi has provided, folds all Unicode characters I could find to their ASCII equivalents. ",
            "author": "Steve Rowe",
            "id": "comment-12635594"
        },
        {
            "date": "2008-09-29T23:53:37+0000",
            "content": "Changes from Andi's version:\n\n\n\tChanged the name of the class to ASCIIFoldingFilter\n\tAdded the Unicode chracter descriptions to comments on each character\n\tAdded a test class\n\tAdded several other Unicode blocks from which characters are converted to their ASCII equivalents.  Added characters include digits and punctuation.\n\n\n\nI did not provide mappings for characters from the Math block - flattening circled plus, for example, didn't seem appropriate.\n\nI did provide mappings for IPA and two other phonetic character blocks, and I'm not sure whether this is appropriate.  I was following what seemed to me to be the logic of Andi's mappings, and those provided by Latin1AccentFilter: convert characters to those that look like them in ASCII.  As a result, e.g., the character described as \"LATIN SMALL LETTER TURNED M\" (U+0270) from the IPA block is mapped to \"m\", regardless of its actual phonetic value.\n\nThere are lots of mappings in there now.  I generated the mappings by Perl scripting over the contents of the Unicode 5.1 version of UnicodeData.txt from Unicode.org, after grep'ing e.g. for \"LATIN\" and \"LETTER\" or \"DIGRAPH\", etc., and then moved things around to the appropriate places by hand.  I guess this is one weakness of this patch: it's large enough that manual verification is tough.  It's my hope that adding the Unicode character descriptions will allow for at least improved verifiability. ",
            "author": "Steve Rowe",
            "id": "comment-12635607"
        },
        {
            "date": "2008-09-30T00:23:09+0000",
            "content": "Forgot to mention three additional change in ASCIIFoldingFilter.patch:\n\n\n\tSome of the added character mappings produce 3 or 4 characters - e.g. the character \"\u247e \" \u2013 described as \"PARENTHESIZED NUMBER ELEVEN\" \u2013 is mapped to '(' + '1' + '1' +')'.\n\tAs a result of the increased maximum length of each mapping, the output buffer length is set to 4 times the length of the input token.\n\tArrayUtils.getNextSize() is used to resize the output buffer when it needs to grow.\n\n ",
            "author": "Steve Rowe",
            "id": "comment-12635620"
        },
        {
            "date": "2008-10-07T17:51:49+0000",
            "content": "Minor adjustment to previous version: this version fixes a couple of character mappings that were out of order in the mapped-to-capital-\"B\" section. ",
            "author": "Steve Rowe",
            "id": "comment-12637565"
        },
        {
            "date": "2008-10-28T06:23:45+0000",
            "content": "Wow, Steve, I'm impressed. This is quite an improvement over my earlier patches and even more of an improvement over ISOLatin1AccentFilter. Thank you for doing this !\nWhat's next ? Does any Lucene committer watching this bug have objections in checking this in ?\nOne (minor) missing piece to the patch is the deprecation of ISOLatin1AccentFilter itself. ",
            "author": "Andi Vajda",
            "id": "comment-12643152"
        },
        {
            "date": "2008-10-28T14:07:47+0000",
            "content": "Some of the new mappings, e.g. the character representing parenthesized 10 mapped to the 4 character sequence \"(10)\", might better be handled before tokenization, very much like SOLR-822 - I thought about doing something like that but decided that it was too much work .  However, maybe it would be possible to write a reader adapter that takes in a token filter (like this one) and then passes the entire contents of the reader through the filter. ",
            "author": "Steve Rowe",
            "id": "comment-12643215"
        },
        {
            "date": "2008-12-03T05:42:24+0000",
            "content": "I am using this patch and its working well.\n\nNitpick... wonder if you could change the mapping of \u018f and \u0259 to from E to A... This character is only used in Azeri and not too long ago (<20 years) it was written as A with umlaut, so there is some precedence.\n\nThanks,\nRobert ",
            "author": "Robert Muir",
            "id": "comment-12652691"
        },
        {
            "date": "2008-12-03T06:20:46+0000",
            "content": "Could you please attach a patch for the change you requested, I'm not sure \nit's displaying correctly here. You seem to asking about a change for the \nmapping of AE and E+acute which is unexpected. Thanks !\n ",
            "author": "Andi Vajda",
            "id": "comment-12652694"
        },
        {
            "date": "2008-12-03T14:34:42+0000",
            "content": "From my brief reading, it seems that \"ae\" would be the best transliteration for the schwa character.  \"Some people write '\u00e6' instead if the schwa is not available. \"\n\nhttp://www.omniglot.com/writing/azeri.htm ",
            "author": "Sean Timm",
            "id": "comment-12652808"
        },
        {
            "date": "2008-12-03T15:27:49+0000",
            "content": "sean... from your link: On 16th May 1992 the Latin alphabet for Azerbaijani was slightly revised - the letter \u00e4 was replaced with \u0259 and the order of letters was changed as well. \n\ni've never seen 'ae' used in its place, certainly not in the Azeri text that I am indexing.\n\nandi... im referring to the schwa character in azeri: U+018F (uppercase) and U+0259 (lowercase) ",
            "author": "Robert Muir",
            "id": "comment-12652831"
        },
        {
            "date": "2008-12-03T15:35:15+0000",
            "content": "with regards to transliteration the bgn/pcgn standard states: \n\nThe special letter \u018f, \u0259 known as schwa, should be reproduced in that form whenever encountered.\nUse \u04d8 (U+04D8) and \u04d9 (U+04D9) for schwa when writing in the Cyrillic script, but use \u018f (U+018F) and \u0259 (U+0259) for schwa when writing in the Roman alphabet.\n\nIn those instances when it cannot be reproduced, however, the letter \u00c4 \u00e4 may be substituted for it.\n\nhttp://earth-info.nga.mil/gns/html/Romanization/Romanization_Azerbaijani.pdf ",
            "author": "Robert Muir",
            "id": "comment-12652834"
        },
        {
            "date": "2008-12-03T18:04:45+0000",
            "content": "\nAh, I see now what you're asking for. Sorry about the misunderstanding.\nI believe I had picked 'e' for schwa because it looks closest to that \nletter. I have no objections to switching to using 'a' instead if that's \nmore \"correct\".\nThis Wikipedia seems to agree: http://en.wikipedia.org/wiki/Schwa_(Cyrillic)\nThis other Wikipedia http://en.wikipedia.org/wiki/Schwa is less clear about \nthis, but it seems that using 'a' instead of 'e' doesn't contradict it.\n\nSteven, I can amend the patch but you said you had more changes coming. If \nthat's the case, could you please add this change as well. If that's not the \ncase, is it ok for me to add this change and call for this bug to be \ncommitted to trunk and closed ? ",
            "author": "Andi Vajda",
            "id": "comment-12652875"
        },
        {
            "date": "2008-12-03T18:57:39+0000",
            "content": "Steven, I can amend the patch but you said you had more changes coming. If that's the case, could you please add this change as well. If that's not the case, is it ok for me to add this change and call for this bug to be committed to trunk and closed ?\n\nAndi, I don't think I said I had more changes coming.  If you are referring to this comment about pre-tokenization filtering, I meant that as an idea that could be pursued separately from this issue.\n\nAt any rate, please feel free to add Robert's suggested change yourself. ",
            "author": "Steve Rowe",
            "id": "comment-12652898"
        },
        {
            "date": "2008-12-03T19:24:45+0000",
            "content": "Great, I'll include Robert's change and try to convince a committer to \nfinalize it. ",
            "author": "Andi Vajda",
            "id": "comment-12652911"
        },
        {
            "date": "2008-12-03T22:33:12+0000",
            "content": "thanks guys, just as a comment to whoever is listining I think this is very useful functionality.\n\nI am indexing a lot of docs and doing it with ICU works well, but that method (unicode decomposition etc) is very expensive and still doesnt handle many common cases. In profiling, it was slowing down entire indexing process.\n\nThe existing ISO filter doesn't handle many cases that are actually in use in my text, but this filter works well and appears to have coverage for most of the common cases such as full width forms, at the same time it is fast.\n\nThanks,\nRobert ",
            "author": "Robert Muir",
            "id": "comment-12653010"
        },
        {
            "date": "2008-12-03T22:39:27+0000",
            "content": "Hey guys, not sure how soon I can bring some time to bear on this, but I'd be happy to help get this committed.  ",
            "author": "Mark Miller",
            "id": "comment-12653016"
        },
        {
            "date": "2008-12-03T23:00:01+0000",
            "content": "In regards to deprecating ISOLatin1AccentFilter: what are the back compatibility issues? What is the likelyhood that a forced upgrade to this class would lose words in an older index without a reindex?\n\nIf its a real concern, we could keep the deprecated class until 3.0, but that still wouldn't help anyone that wanted to move to 2 from 3 without a reindex (if thats something we will maintain on 3).\n\nSo I'm just exploring for comments, but maybe we leave both classes? ",
            "author": "Mark Miller",
            "id": "comment-12653031"
        },
        {
            "date": "2008-12-03T23:24:45+0000",
            "content": "\n\nThis class includes all of ISOLatin1AccentFilter.\n\nStill, a difference in behaviour could be seen when using the new \nfilter with characters getting converted now that didn't before.\n\nIf that sort of lack of backwards compatibility is something we don't want \nto impose on the 3.0 release then the ISOLatin1AccentFilter class needs to \nbe preserved.\n\nThanks for volunteering to finalize this bug ! ",
            "author": "Andi Vajda",
            "id": "comment-12653045"
        },
        {
            "date": "2008-12-03T23:29:25+0000",
            "content": "What is the likelyhood that a forced upgrade to this class would lose words in an older index without a reindex? \n\nThe problem would be words that contain characters that were not folded by ISOLatin1AccentFilter, but are folded by ASCIIFoldingFilter, and that are used in documents and in queries.  Individual implementors would have to make that determination, but it's not outside the realm of possibility.\n\nIf ISOLatin1AccentFilter were deprecated for 2.9, and advertised as targeted for removal in 3.0, assuming there will be a significant gap in time between the 2.9 and 3.0 releases, that would give users time to complain about its pending demise, and the plan to remove it could be revisited based on that feedback. ",
            "author": "Steve Rowe",
            "id": "comment-12653049"
        },
        {
            "date": "2008-12-03T23:48:50+0000",
            "content": "Everything looks pretty good to me. If you can work up one last patch, I'll put it through its paces. I'd like to hear another committers opinion on deprecating ISOLatin1AccentFilter as well, but I guess we will see if we are able to draw the attention.\n\nI think we have a lot of latitude with the 3.0 move, but I don't know what the consensus is on the limits of that latitude...\n\n\n\tMark\n\n ",
            "author": "Mark Miller",
            "id": "comment-12653061"
        },
        {
            "date": "2008-12-03T23:54:51+0000",
            "content": "does ISOLatin1AccentFilter really need to be deprecated? I don't think its misleading, could just reiterate it only covers Latin 1 and ref this one in the docs?\n\njust as this one documents what blocks it covers and i don't expect it to normalize U+338E to 'mg' ",
            "author": "Robert Muir",
            "id": "comment-12653064"
        },
        {
            "date": "2008-12-04T01:08:57+0000",
            "content": "does ISOLatin1AccentFilter really need to be deprecated? I don't think its misleading, could just reiterate it only covers Latin 1 and ref this one in the docs? \n\nThats the leaning of my thinking at the moment as well. ",
            "author": "Mark Miller",
            "id": "comment-12653099"
        },
        {
            "date": "2008-12-04T01:53:33+0000",
            "content": "This latest version supercedes the previous one and moves all schwa characters to the 'A' or 'a' depending on their case. 0259, lowercase schwa, was missing and thus added. ",
            "author": "Andi Vajda",
            "id": "comment-12653122"
        },
        {
            "date": "2008-12-04T01:56:51+0000",
            "content": "Mark, I attached a new version of the patch with Robert's change.\n\nAs for the deprecation of ISOLatin1AccentFilter.java, I don't have a definite opinion on this.\nIt's pretty much redundant with what this new class does. If the maintenance overhead is not too bad then keeping the duplication around may be worth the effort to preserve some backwards compat.\n\nThanks for taking this from here !\nAndi.. ",
            "author": "Andi Vajda",
            "id": "comment-12653123"
        },
        {
            "date": "2008-12-04T02:15:18+0000",
            "content": "Not to be wishy washy, but deprecating is looking better to me. If there is a large outcry, it can always be revisited before its fully removed. The odds that you will be affected legitimately, appear pretty low. We can call it out in 3.0 changes, and those that really need it (which is looking like it would be a weird situation to need it) could maintain their own copy. Seem reasonable? ",
            "author": "Mark Miller",
            "id": "comment-12653132"
        },
        {
            "date": "2008-12-04T02:52:46+0000",
            "content": "\n\n\nYep, I'm leaning that way too. ",
            "author": "Andi Vajda",
            "id": "comment-12653139"
        },
        {
            "date": "2008-12-04T12:12:00+0000",
            "content": "So my final thought on this is performance...is handling more much slower? Could that be a reason to keep the Latin1 filter as well? ",
            "author": "Mark Miller",
            "id": "comment-12653272"
        },
        {
            "date": "2008-12-04T21:41:24+0000",
            "content": "its a bit slower, but the difference is minor. i just ran some tests with some cpu-bound (these filters are right at the top of hprof.txt) indexes that i build\n\ni ran em a couple times and it looks like this... not very scientific but it gives an idea.\n\nASCII Folding filter index time (ms): 143365\nISOLatin1Accent filter (ms): 134649 ",
            "author": "Robert Muir",
            "id": "comment-12653500"
        },
        {
            "date": "2008-12-04T22:29:14+0000",
            "content": "sorry, that wasn't a fair test case. a good chunk of those docs contain accents outside of latin1, so asciifoldingfilter was doing more work\n\ni reran on some heavily accented (but only latin1) data and the difference was negligible, 1% or so \n\nappears asciifoldingfilter only slows you down versus isolatin1accentfilter in the case where it probably should be! (you have accents outside of latin1 but are using latin1accentfilter) ",
            "author": "Robert Muir",
            "id": "comment-12653520"
        },
        {
            "date": "2008-12-04T23:05:50+0000",
            "content": "Thanks Robert. I plan to commit this in a few days with the deprecation of the latin1 filter for removal in 3.0. ",
            "author": "Mark Miller",
            "id": "comment-12653539"
        },
        {
            "date": "2008-12-06T23:28:21+0000",
            "content": "Committed, thanks a lot guys! ",
            "author": "Mark Miller",
            "id": "comment-12654159"
        },
        {
            "date": "2008-12-06T23:40:45+0000",
            "content": "Thanks Mark ! ",
            "author": "Andi Vajda",
            "id": "comment-12654160"
        }
    ]
}