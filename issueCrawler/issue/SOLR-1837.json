{
    "id": "SOLR-1837",
    "title": "Reconstruct a Document (stored fields, indexed fields, payloads)",
    "details": {
        "affect_versions": "1.5",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "Admin UI",
            "Schema and Analysis"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "One Solr feature I've been sorely in need of is the ability to inspect an index for any particular document.  While the analysis page is good when you have specific content and a specific field/type your want to test the analysis process for, once a document is indexed it is not currently possible to easily see what is actually sitting in the index.\n\nOne can use the Lucene Index Browser (Luke), but this has several limitations (gui only, doesn't understand solr schema, doesn't display many non-text fields in human readable format, doesn't show payloads, some bugs lead to missing terms, exposes features dangerous to use in a production Solr environment, slow or difficult to check from a remote location, etc.).  The document reconstruction feature of Luke provides the base for what can become a much more powerful tool when coupled with Solr's understanding of a schema, however.",
    "attachments": {
        "SOLR-1837_WithHandler.patch": "https://issues.apache.org/jira/secure/attachment/12591291/SOLR-1837_WithHandler.patch",
        "SOLR-1837.patch": "https://issues.apache.org/jira/secure/attachment/12439419/SOLR-1837.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Trey Grainger",
            "id": "comment-12847866",
            "date": "2010-03-21T02:25:19+0000",
            "content": "I've been working on implementing the document reconstruction feature over the past week and have created an additional admin page which exposes it.  The functionality is essentially a reworking of the lucene document reconstruction functionality in Luke, but with improvements to handle the problems listed in the jira issue description above.\n\nI'll be pushing up a patch soon and will look forward to any additional recommendations after others have had a chance to try it out. "
        },
        {
            "author": "Andrzej Bialecki",
            "id": "comment-12847923",
            "date": "2010-03-21T13:50:59+0000",
            "content": "Re: bugs in Luke that result in missing terms - I recently fixed one such bug, and indeed it was located in the DocReconstructor - if you are aware of others then please report them using the Luke issue tracker.\n\nDocument reconstruction is a very IO-intensive operation, so I would advise against using it on a production system, and also it produces inexact results (because analysis is usually a lossy operation). "
        },
        {
            "author": "Trey Grainger",
            "id": "comment-12847936",
            "date": "2010-03-21T15:32:21+0000",
            "content": "Re: bugs in Luke that result in missing terms - I recently fixed one such bug, and indeed it was located in the DocReconstructor - if you are aware of others then please report them using the Luke issue tracker.\n\nI just pulled down the most recent Luke code, and it does looks like that recent fix was made to cover the bug I saw.  Unfortunately, the fix results in a null ref for me on my index.  I'll open an issue, as it looks like all that's needed is an extra null check.\n\nRe: Document reconstruction is a very IO-intensive operation, so I would advise against using it on a production system, and also it produces inexact results (because analysis is usually a lossy operation).\n\nI hear you about it being IO-intensive.  There's also other admin tools in Solr which do similarly intensive operations (the schema browser, for example, which generates a list of all fields and a distribution of terms within those fields).  The intent of the tool is for one-off debugging, not for any kind of automated querying, but I'll try do some tests to see to what degree this tool is affecting our current production systems (I have not see any noticeable effect thus far).\n\nAlso, regarding the process being lossy.  In this case, that is kind of the point of the tool (in my use) - to see what has actually been put into the index vs what was in the document sent to the engine.  For example, if I index a field with the text \"Wi-fi hotspots are a life-saver\" with payloads on parts of speech, as well as stemming I want to be able to see something like:\n\"wi [1] / fi [1] | wifi [1] / hotspot [1] / are [2] / a [3] / life [1] / saver [1] | lifesaver [1]\"\n\nWith no payloads, this would simply be\n\"wi / fi | wifi / hotspots | hotspot / are / a / life / saver | lifesaver\"\n\nSo I had initially named to tool the Solr Document Reconstructor, after the name you gave to the tool in Luke.  Based on your comments, I think it might be less confusing for me to call it something like \"Document Inspector\", since it is not truly reconstructing the original document.\n\nI'll try to get what I have pushed up today so you can check it out if you want.  Thanks for your great work on that tool! "
        },
        {
            "author": "Trey Grainger",
            "id": "comment-12847965",
            "date": "2010-03-21T19:20:55+0000",
            "content": "Here's what I have thusfar.  Only bug I currently know about is that Solr multi-valued fields (i.e. <field name=\"x\">value1</field><field name=\"x\">value2</field>) currently display as concatenated together instead of as an array of separate fields in the \"stored fields\" view.\n\nI've referred to the tool in the admin interface as the \"Document Inspector\" instead of \"Document Reconstructor\" to prevent confusion over lost/changed/added terms due to index-time analysis.\n\nAny feedback appreciated. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872407",
            "date": "2010-05-27T22:04:41+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12873803",
            "date": "2010-05-31T22:03:13+0000",
            "content": "1) Solr is moving away from having any JSPs at all \u2013 we've been focusing on having RequestHandlers return all of the data in a structured machine parsable form (with UIs being made possible using XSLT or AJAX)\n\n2) it seems like instead of adding a new requesthandler (or JSP) for this, it would make more sense to add this as optional info that could be requested when using LukeRequestHandler's \"id\" (or docId) functionality...\n\nhttp://wiki.apache.org/solr/LukeRequestHandler#id "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043696",
            "date": "2011-06-03T16:46:34+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106375",
            "date": "2011-09-16T14:50:48+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13234765",
            "date": "2012-03-21T18:09:14+0000",
            "content": "Bulk of fixVersion=3.6 -> fixVersion=4.0 for issues that have no assignee and have not been updated recently.\n\nemail notification suppressed to prevent mass-spam\npsuedo-unique token identifying these issues: hoss20120321nofix36 "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13578240",
            "date": "2013-02-14T08:44:17+0000",
            "content": "Trey Grainger, is this something you still want to pursue for Solr4/5, perhaps as an extension to LukeReqHandler? "
        },
        {
            "author": "John Wooden",
            "id": "comment-13702496",
            "date": "2013-07-08T21:54:17+0000",
            "content": "I've updated this patch to use a handler rather than JSP. Patch is also confirmed working with 4.2.1.\n\nPerformance is still quite slow. The SolrDocReconstructor class hasn't changed much since the prior version.\n\n\u2013 How to use \u2013\n\n1. Add the handler to your config:\n\n<requestHandler name=\"/admin/docinspector\" class=\"solr.DocumentReconstructorHandler\" />\n\n2. Sample call:\n\n/solr/coreX/admin/docinspector?documentid=12345\n\n3. Wait. Time required varies by size of document and index. A large document in a large index may allow enough time for a doughnut & coffee run.\n\n4. Sample output:\n\n<response>\n   <lst name=\"responseHeader\">\n      <int name=\"status\">0</int>\n      <int name=\"QTime\">x</int>\n   </lst>\n   <str name=\"DocumentID\">12345</str>\n   <lst name=\"Fields\">\n      <lst name=\"Stored\">\n         <str name=\"documentid\">12345</str>\n         <str name=\"isstarter.b_s\">true</str>\n         <str name=\"jerseynumber.i_is\">16</str>\n         <str name=\"schema\">test</str>\n         <str name=\"solrdt\">2013-07-03T19:06:42.069Z</str>\n      </lst>\n      <lst name=\"Indexed\">\n         <str name=\"documentid\">12345</str>\n         <str name=\"dodges.i_i\">28 | 0 | 0 | 0</str>\n         <str name=\"hits.i_i\">17 | 0 | 0 | 0</str>\n         <str name=\"jerseynumber.i_is\">16 | 0 | 0 | 0</str>\n         <str name=\"schema\">test</str>\n         <str name=\"solrdt\">2013-07-03T19:06:42.069Z | 2013-07-03T19:06:42.048Z | 2013-07-03T19:05:40.096Z | 2013-07-03T14:46:48.064Z | 2013-06-01T13:49:27.424Z | 2004-11-03T19:53:47.776Z | 1970-01-01T00:00:00Z | 1970-01-01T00:00:00Z</str>\n      </lst>\n   </lst>\n</response> "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717289",
            "date": "2013-07-23T18:47:45+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13971213",
            "date": "2014-04-16T12:57:28+0000",
            "content": "Move issue to Solr 4.9. "
        },
        {
            "author": "John Wooden",
            "id": "comment-14494706",
            "date": "2015-04-14T19:24:09+0000",
            "content": "Added a simple UX for the document reconstructor. When a core is selected within the management console, a new \"DocInspector\" link appears. Provide a Document ID and the handler will be triggered.\n\nApplies to Solr 4.10.4 "
        }
    ]
}