{
    "id": "SOLR-12278",
    "title": "Add IgnoreLargeDocumentProcessFactory",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "7.4"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Solr should be able to ignore very large document, so it won't affect the index as well as the tlog.",
    "attachments": {
        "SOLR-12278.patch": "https://issues.apache.org/jira/secure/attachment/12920775/SOLR-12278.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-04-26T14:21:23+0000",
            "content": "\n\tyour initArgs could be simply: maxDocumentSize  = args.toSolrParams().required().getLong(LIMIT_SIZE_PARAM)\n\tI don't think the estimated size should be eagerly calculated; most apps don't need to bother with this?\n\tmaybe keep the existing SolrInputDocument constructor but mark deprecated?\n\tHave you seen Lucene's RamUsageEstimator, particularly shallowSizeOf?\n\n ",
            "author": "David Smiley",
            "id": "comment-16454282"
        },
        {
            "date": "2018-04-26T14:45:18+0000",
            "content": "This can be done easily in an update request processor script. Get the field, check the size, if it is over the limit return false. ",
            "author": "Walter Underwood",
            "id": "comment-16454329"
        },
        {
            "date": "2018-04-27T00:13:11+0000",
            "content": "Thank\u00a0David Smiley\u00a0for reviewing the patch, this is a quick\u00a0patch help me demonstrate the idea of the solution\u00a0so many things will be tuned before it can get committed.\n\nDavid Smiley\u00a0Walter Underwood\u00a0I think that estimated size of an Object may be time-consuming to find out (so\u00a0it will affect indexing). Because of using reflection (in RamUsageEstimator) or if the SolrInputDocument has million of fields. My plan for this new processor is to make it fast enough to be in default processor chain. ",
            "author": "Cao Manh Dat",
            "id": "comment-16455579"
        },
        {
            "date": "2018-04-30T09:33:16+0000",
            "content": "After discuss privately with Shalin Shekhar Mangar, this case seems quite rare and it should be an optional processor.\n\nI uploaded a new patch that match the new solution. ",
            "author": "Cao Manh Dat",
            "id": "comment-16458426"
        },
        {
            "date": "2018-04-30T14:16:37+0000",
            "content": "+1 overall. \u00a0\n\n\tprobably won't pass precommit; I see <ul dangling in the javadocs of\u00a0ObjectSizeEstimator\n\tit'd be nice if the exception thrown included the units \"KB\" with the size of the document\n\tfastEstimate ought to iterate a Map using the entryset with for-each style to avoid double-lookup when the value is needed\n\n ",
            "author": "David Smiley",
            "id": "comment-16458617"
        },
        {
            "date": "2018-04-30T14:43:43+0000",
            "content": "Finding the size should be much quicker than the time already spent receiving the update request, parsing it, and creating the Solr input document. This is optimizing the wrong thing.\n\nIf you want to reject large requests, configure Jetty to reject large requests. ",
            "author": "Walter Underwood",
            "id": "comment-16458631"
        },
        {
            "date": "2018-04-30T15:23:57+0000",
            "content": "If you want to reject large requests, configure Jetty to reject large requests.\nIf it's streaming (Content-Length header is -1) then Jetty won't know. And even for gigabytes of streaming data through it's not necessarily a problem at all \u2013 it could be lots of reasonably sized documents.\n\nA few hours ago I wondered if we could solve this in a lower level more efficient way.  It's a shame to measure this stuff after it's been deserialized when Solr is in fact reading the bytes and knows how many bytes were read when the SolrInputDocument finishes.  To this end, imagine if FastInputStream had methods to track the overall bytes written and then JavaBinCodec could use that information.  Granted an on-the-wire bytes != Java heap bytes... and of course what if someone sends the data in CSV or XML or JSON... but nonetheless it could be a bonus feature of JavaBin that would be exceptionally cheap to calculate and very little LOC. ",
            "author": "David Smiley",
            "id": "comment-16458656"
        },
        {
            "date": "2018-04-30T15:48:05+0000",
            "content": "Me:\nimagine if FastInputStream had methods to track the overall bytes written \n\nit already does \u2013 position().  position() might need to move to DataInputInputStream or probably better \u2013 JavaBinCodec could cast (but not complain if it's not of type FastInputStream).\n\nThis approach would also provide a way to bail out earlier \u2013 before we read stuff beyond the limit into heap.  That would take more LOC though. ",
            "author": "David Smiley",
            "id": "comment-16458678"
        },
        {
            "date": "2018-05-01T03:06:40+0000",
            "content": "David Smiley\u00a0some problem of that approach\n\n\twe have to modify all other parsers,\n\teach parser has its own set of parameters, which make the size of a SolrInputDocument quite different with the number of bytes\u00a0from the input (ie: SOLR-6304)\n\twhat happens if the users have some processor in the middle which significantly enriches the SolrInputDocument\n\n\n\nIn short vision, IgnoreLargeDocumentProcessor might handy for users who need to filter large documents and work accurately in all cases. ",
            "author": "Cao Manh Dat",
            "id": "comment-16459412"
        },
        {
            "date": "2018-05-01T03:21:28+0000",
            "content": "Sure, the URP is still useful. ",
            "author": "David Smiley",
            "id": "comment-16459417"
        },
        {
            "date": "2018-05-01T03:59:13+0000",
            "content": "Patch for this ticket passed the precommit. Thank\u00a0David Smiley for your review. ",
            "author": "Cao Manh Dat",
            "id": "comment-16459430"
        },
        {
            "date": "2018-05-02T10:43:40+0000",
            "content": "Commit 555b7ef27049633eb91b7c0cf1ec08b24b2f8e41 in lucene-solr's branch refs/heads/master from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=555b7ef ]\n\nSOLR-12278: Add IgnoreLargeDocumentProcessFactory ",
            "author": "ASF subversion and git services",
            "id": "comment-16460857"
        },
        {
            "date": "2018-05-02T10:44:10+0000",
            "content": "Commit 01cf869e55559104522ad9924a61707275e1b442 in lucene-solr's branch refs/heads/branch_7x from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=01cf869 ]\n\nSOLR-12278: Add IgnoreLargeDocumentProcessFactory ",
            "author": "ASF subversion and git services",
            "id": "comment-16460858"
        },
        {
            "date": "2018-05-03T03:35:18+0000",
            "content": "Commit 596d0dc9a6ef8633a078bf74ea377d727de4183e in lucene-solr's branch refs/heads/master from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=596d0dc ]\n\nSOLR-12278: Adding ref-guide doc for IgnoreLargeDocumentProcessorFactory ",
            "author": "ASF subversion and git services",
            "id": "comment-16461889"
        },
        {
            "date": "2018-05-03T03:40:32+0000",
            "content": "Commit ed948efabfe54a703587fc01caeed94ce2401946 in lucene-solr's branch refs/heads/master from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ed948ef ]\n\nSOLR-12278: Fix typo errors in ref-guide ",
            "author": "ASF subversion and git services",
            "id": "comment-16461894"
        },
        {
            "date": "2018-05-03T03:41:05+0000",
            "content": "Commit b489020da50184e9815931148ac3b2ebf138ad87 in lucene-solr's branch refs/heads/branch_7x from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b489020 ]\n\nSOLR-12278: Adding ref-guide doc for IgnoreLargeDocumentProcessorFactory ",
            "author": "ASF subversion and git services",
            "id": "comment-16461895"
        },
        {
            "date": "2018-05-03T03:41:06+0000",
            "content": "Commit 83c6c70179465017e1fbd3f99debb907c6eb1e28 in lucene-solr's branch refs/heads/branch_7x from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=83c6c70 ]\n\nSOLR-12278: Fix typo errors in ref-guide ",
            "author": "ASF subversion and git services",
            "id": "comment-16461896"
        },
        {
            "date": "2018-06-28T01:55:49+0000",
            "content": "Commit d2ac32368ee5547a995da83ccd82b96960902adf in lucene-solr's branch refs/heads/master from Alexandre Rafalovitch\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d2ac323 ]\n\nSOLR-12278: Fixed JIRA number in CHANGES file\nOne digit off ",
            "author": "ASF subversion and git services",
            "id": "comment-16525816"
        }
    ]
}