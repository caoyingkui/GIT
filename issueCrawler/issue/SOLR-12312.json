{
    "id": "SOLR-12312",
    "title": "Replication's IndexFetcher buf size can be initialized smarter to not waste RAM/GC",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "replication (java)"
        ],
        "type": "Improvement",
        "fix_versions": [
            "7.4"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "IndexFetcher's constructor knows the size of the file it's going to transfer. \u00a0As-such, it ought to initialize the \"buf\" field to no larger than this size. \u00a0This has been shown to waste Java heap/GC in \u00a0an environment with lots of cores of small indexes and thus small files.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2018-05-04T20:43:36+0000",
            "content": "Latest patch looks good Jeff Miller; I like how you identified the re-use of an existing constant for this that the writer is using. \u00a0I'll probably reword a comment since I can be obsessive about trivialities. \u00a0I'll commit \"soon\". ",
            "author": "David Smiley",
            "id": "comment-16464372"
        },
        {
            "date": "2018-05-04T21:04:56+0000",
            "content": "While I look at this a bit more in my IDE, I wonder if we even need this buf at all. \u00a0Notice that fetchPackets\u00a0accepts FastInputStream fis and that's what we read from.  FIS contains an accessible byte[] internally; it's partially why FIS exists in the first place (vs some generic InputStream).  fetchPackets could be recoded to have a loop within the packet reading to use FIS's buffer directly.  That would not be an abuse; we're just sending data along to other places (to a file and some checksum calculator thingy). The net effect is one less buffer to allocate and copy data to.\n\nThat said, I so easily become guilty of scope creep and this is extra work with more intricacies than the fairly simple change we have on sizing the buf correctly. ",
            "author": "David Smiley",
            "id": "comment-16464394"
        },
        {
            "date": "2018-05-07T18:54:18+0000",
            "content": "Commit 81f611209c9b71b7538a46d047631ea164dc2a2c in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=81f6112 ]\n\nSOLR-12312: Replication's IndexFetcher buf size should be initialized\nto an amount no greater than the size of the file being transferred. ",
            "author": "ASF subversion and git services",
            "id": "comment-16466321"
        },
        {
            "date": "2018-05-07T18:57:17+0000",
            "content": "Commit 93f9cc71b127b84c432bf40e115fd4afe689bd8a in lucene-solr's branch refs/heads/branch_7x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=93f9cc7 ]\n\nSOLR-12312: Replication's IndexFetcher buf size should be initialized\nto an amount no greater than the size of the file being transferred.\n\n(cherry picked from commit 81f6112) ",
            "author": "ASF subversion and git services",
            "id": "comment-16466326"
        }
    ]
}