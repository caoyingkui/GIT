{
    "id": "LUCENE-8447",
    "title": "Add DISJOINT and WITHIN support to LatLonShape queries",
    "details": {
        "components": [],
        "status": "Resolved",
        "resolution": "Implemented",
        "fix_versions": [],
        "affect_versions": "None",
        "labels": "",
        "priority": "Major",
        "type": "New Feature"
    },
    "description": "This feature will add support to LatLonShapeBoundingBoxQuery and LatLonShapePolygonQuery for searching all indexed LatLonShape types that are  WITHIN, or DISJOINT to, the target query shape. INTERSECTS remains unchanged.",
    "attachments": {
        "LUCENE-8447.patch": "https://issues.apache.org/jira/secure/attachment/12934554/LUCENE-8447.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16570848",
            "author": "Nicholas Knize",
            "content": "Attached patch includes the following improvements/changes:\n\n\n\tRefactors common query functionality from LatLonShapeBoundingBoxQuery and LatLonShapePolygonQuery into a new LatLonShapeQuery base class\n\tAdds new QueryRelation enum to LatLonShape that includes INTERSECTS, DISJOINT, and WITHIN relation types\n\tAdds DISJOINT logic as an andNot between two {{FixedBitSet}}s (intersect, and disjoint, respectively)\n\tAdds WITHIN logic to visit() and visit(range) methods of IntersectVisitor\n\tUpdates random testing to randomly test all relation types\n\n\n\ntodo\n\n\tupdate javadocs\n\n ",
            "date": "2018-08-06T22:10:23+0000"
        },
        {
            "id": "comment-16571600",
            "author": "Adrien Grand",
            "content": "Thanks Nick, it looks great. It looks like INTERSECTS now always creates dense bitsets as opposed to filling a sparse DocIdSetBuilder (the one created in LatLonShapeQuery is unused). I see how it's helping with code reuse but maybe we should try to improve it in follow-ups. Regarding your comment about whether the inverse optimization makes sense with DISJOINT and WITHIN, I think it has limited benefits indeed. I wonder whether we should drop this optimization entirely, as well as maybe the other one that checks whether all documents match, in order to make shapes easier to maintain since I don't think these optimizations would often kick in in practice. I suspect it will at least help to remove them temporarily while we are iterating, even if we eventually decide to add them back once the code stabilizes. ",
            "date": "2018-08-07T12:45:52+0000"
        },
        {
            "id": "comment-16572392",
            "author": "Nicholas Knize",
            "content": "Thanks Adrien Grand  I didn't like the fact that INTERSECT was changed to use a dense bitset so I fixed up the patch to only use dense bitsets for WITHIN and DISJOINT queries. I did keep the inverse optimization for INTERSECT queries since I think it adds value for the point case? And I left the matchAllDocs optimization because it does help optimize queries over large spatial areas. I also cleaned up the javadocs a bit. Let me know your thoughts and I can commit for further benchmarking and iterating. ",
            "date": "2018-08-07T21:51:58+0000"
        },
        {
            "id": "comment-16572997",
            "author": "Lucene/Solr QA",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 5 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   0m 28s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   0m 25s \n  the patch passed  \n\n\n +1 \n  javac  \n   0m 25s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 23s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   0m 19s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   0m 19s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n  10m 35s \n  core in the patch passed.  \n\n\n -1 \n  unit  \n   1m 58s \n  sandbox in the patch failed.  \n\n\n  \n   \n  15m 12s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n lucene.document.TestLatLonLineShapeQueries \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n LUCENE-8447 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12934724/LUCENE-8447.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene1-us-west 4.4.0-130-generic #156~14.04.1-Ubuntu SMP Thu Jun 14 13:51:47 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-LUCENE-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 38bf976 \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on July 24 2018 \n\n\n Default Java \n 1.8.0_172 \n\n\n unit \n https://builds.apache.org/job/PreCommit-LUCENE-Build/65/artifact/out/patch-unit-lucene_sandbox.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-LUCENE-Build/65/testReport/ \n\n\n modules \n C: lucene lucene/core lucene/sandbox U: lucene \n\n\n Console output \n https://builds.apache.org/job/PreCommit-LUCENE-Build/65/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "date": "2018-08-08T10:33:03+0000"
        },
        {
            "id": "comment-16573286",
            "author": "Nicholas Knize",
            "content": "Fixed up the patch. WITHIN validation was missing from the bounding box test in LineValidator. ",
            "date": "2018-08-08T14:26:24+0000"
        },
        {
            "id": "comment-16573516",
            "author": "Adrien Grand",
            "content": "+1 I'd just keep the transpose() method as an impl detail rather than add it to the points API. ",
            "date": "2018-08-08T17:03:25+0000"
        },
        {
            "id": "comment-16573547",
            "author": "Lucene/Solr QA",
            "content": "\n\n\n  +1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 5 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   0m 26s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   1m 34s \n  the patch passed  \n\n\n +1 \n  javac  \n   1m 34s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   1m 13s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   1m  2s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   1m  2s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n  33m  7s \n  core in the patch passed.  \n\n\n +1 \n  unit  \n   3m 54s \n  sandbox in the patch passed.  \n\n\n  \n   \n  42m 50s \n   \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n LUCENE-8447 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12934824/LUCENE-8447.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene2-us-west.apache.org 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-LUCENE-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 9b418a4 \n\n\n ant \n version: Apache Ant(TM) version 1.9.6 compiled on July 20 2018 \n\n\n Default Java \n 1.8.0_172 \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-LUCENE-Build/68/testReport/ \n\n\n modules \n C: lucene lucene/core lucene/sandbox U: lucene \n\n\n Console output \n https://builds.apache.org/job/PreCommit-LUCENE-Build/68/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "date": "2018-08-08T17:28:17+0000"
        },
        {
            "id": "comment-16573583",
            "author": "ASF subversion and git services",
            "content": "Commit cbaedb470c8ddc7b21e8ff0b2729c6cf97fbd3d0 in lucene-solr's branch refs/heads/master from Nicholas Knize\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cbaedb4 ]\n\nLUCENE-8447: Add DISJOINT and WITHIN support to LatLonShape queries ",
            "date": "2018-08-08T17:50:15+0000"
        },
        {
            "id": "comment-16573798",
            "author": "ASF subversion and git services",
            "content": "Commit 3102c21e004d7384beff245f61bf8cb79639ebae in lucene-solr's branch refs/heads/branch_7x from Nicholas Knize\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3102c21 ]\n\nLUCENE-8447: Add DISJOINT and WITHIN support to LatLonShape queries ",
            "date": "2018-08-08T20:15:02+0000"
        },
        {
            "id": "comment-16573811",
            "author": "Nicholas Knize",
            "content": "All feedback incorporated. Thank you for all of your help @jpountz.  ",
            "date": "2018-08-08T20:22:06+0000"
        }
    ]
}