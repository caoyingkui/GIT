{
    "id": "LUCENE-3524",
    "title": "Add \"direct\" PackedInts.Reader impl, that reads directly from disk on each get",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Spinoff from LUCENE-3518.\n\nIf we had a direct PackedInts.Reader impl we could use that instead of\nthe RandomAccessReaderIterator.",
    "attachments": {
        "LUCENE-3524.patch": "https://issues.apache.org/jira/secure/attachment/12502687/LUCENE-3524.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-10-20T22:37:11+0000",
            "content": "+1\n\nRandomAccessReaderIterator can go away then I guess.... yet why does this block LUCENE-3515 did you mean to link LUCENE-3518 instead? ",
            "author": "Simon Willnauer",
            "id": "comment-13132134"
        },
        {
            "date": "2011-10-21T15:01:11+0000",
            "content": "yet why does this block LUCENE-3515 did you mean to link LUCENE-3518 instead?\n\nDuh, wrong issue \u2013 I fixed it! ",
            "author": "Michael McCandless",
            "id": "comment-13132728"
        },
        {
            "date": "2011-11-06T20:01:57+0000",
            "content": "Patch, removing the RandomAccessReaderIterator and switching\nPackedInts.getDirectReader to returning a PackedInts.Reader.\n\nAt first I added \"throws IOException\" to PackedInts.Reader.get, but\nthis very quickly got out of hand \u2013 many methods up the stack needing\nto throw IOE.  So, instead, I wrap the IOE in an unchecked\nIllegalStateException (like the DocValues impls were doing). ",
            "author": "Michael McCandless",
            "id": "comment-13145090"
        },
        {
            "date": "2011-11-07T00:07:28+0000",
            "content": "new patch removing PackedIntValues#DirectPackedIntsSource since we now have the same interface for direct & in-mem access. Patch looks good mike, I think we should backport and add a changes entry too no? ",
            "author": "Simon Willnauer",
            "id": "comment-13145163"
        },
        {
            "date": "2011-11-07T18:32:49+0000",
            "content": "new patch removing PackedIntValues#DirectPackedIntsSource \n\nAhh good catch; patch looks good!  Thanks.\n\nI think we should backport and add a changes entry too no?\n\nActually 3.x doesn't have the ReaderIterator (I didn't backport yet since we don't need it there), so I think we can wait on backporting. ",
            "author": "Michael McCandless",
            "id": "comment-13145681"
        }
    ]
}