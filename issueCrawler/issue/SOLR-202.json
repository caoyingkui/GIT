{
    "id": "SOLR-202",
    "title": "parseQueryString should use UTF-8",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.2"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "update handler should explicitly use UTF-8 decoding  for parameters in the query string:\n\n   URLDecoder.decode( kv, \"UTF-8\" );",
    "attachments": {
        "SOLR-202-ParseQueryStringUTF8.patch": "https://issues.apache.org/jira/secure/attachment/12354651/SOLR-202-ParseQueryStringUTF8.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Ryan McKinley",
            "id": "comment-12485682",
            "date": "2007-03-31T00:13:16+0000",
            "content": "simple patch to set \"UTF-8\" for parametrers in the query string.  \nadds a test to make sure  "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12485736",
            "date": "2007-03-31T17:50:19+0000",
            "content": "Didn't have time to look into why, but \"ant clean test\" fails after applying this patch.\n\n   [junit] Tests run: 3, Failures: 1, Errors: 0, Time elapsed: 4.656 sec\n   [junit] Test org.apache.solr.servlet.SolrRequestParserTest FAILED "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12485754",
            "date": "2007-03-31T22:58:34+0000",
            "content": "Interesting, the test runs fine when i run from eclipse, but fails from command line.  I think this is because I am testing:\n  { \"\u00e9\u00a2\u00a9\u00ff\", \"%C3%A9%C2%A2%C2%A9%C3%BF\" }\ndirectly in the java code.  \n\nAny pointers on the best way to put non-standard characters into the code without causing encoding problems?  \n\nWe could decode \"%C3\" then re-encode it...  a bit of a straw-man "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12485757",
            "date": "2007-04-01T00:07:50+0000",
            "content": "> Any pointers on the best way to put non-standard characters into the code without causing encoding problems? \n\nLet Java do it... replace chars above 127 with unicode escapes (\\uxxxx) "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12485759",
            "date": "2007-04-01T00:36:00+0000",
            "content": "this one avoids utf8 chars directly in the .java\n\nIt tests:\n\n  \n{ \"this is simple\", \"this%20is%20simple\" }\n,\n  \n{ \"this is simple\", \"this+is+simple\" }\n,\n  \n{ \"\\u00FC\", \"%C3%BC\" }\n,   // lower-case \"u\" with diaeresis/umlaut\n  \n{ \"\\u0026\", \"%26\" }\n,      // &\n  \n{ \"\\u20AC\", \"%E2%82%AC\" }\n // euro\n "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12485767",
            "date": "2007-04-01T04:21:47+0000",
            "content": "looks good, I just committed. "
        }
    ]
}