{
    "id": "SOLR-2355",
    "title": "simple distrib update processor",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [
            "SolrCloud",
            "update"
        ],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Duplicate"
    },
    "description": "Here's a simple update processor for distributed indexing that I implemented years ago.\nIt implements a simple hash(id) MOD nservers and just fails if any servers are down.\nGiven the recent activity in distributed indexing, I thought this might be at least a good source for ideas.",
    "attachments": {
        "DistributedUpdateProcessorFactory.java": "https://issues.apache.org/jira/secure/attachment/12470726/DistributedUpdateProcessorFactory.java",
        "TestDistributedUpdate.java": "https://issues.apache.org/jira/secure/attachment/12470727/TestDistributedUpdate.java"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-12992708",
            "date": "2011-02-09T20:47:44+0000",
            "content": "Here's the processor class and the test class (not in patch form, I just pulled these files straight from our commercial product). "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12992711",
            "date": "2011-02-09T20:53:17+0000",
            "content": "Some sample configuration:\n\n\n  <updateRequestProcessorChain name=\"distrib\">\n    <processor class=\"com.lucid.update.DistributedUpdateProcessorFactory\">\n      <!-- example configuration...\n       \"shards should be in the *same* order for every server\n        in a cluster.  Only \"self\" should change to represent\n        what server *this* is.\n\n      <str name=\"self\">localhost:8983/solr</str>\n      <arr name=\"shards\">\n        <str>localhost:8983/solr</str>\n        <str>localhost:7574/solr</str>\n      </arr>\n      -->\n    </processor>\n    <processor class=\"solr.LogUpdateProcessorFactory\">\n      <int name=\"maxNumToLog\">10</int>\n    </processor>\n    <processor class=\"solr.RunUpdateProcessorFactory\"/>\n  </updateRequestProcessorChain>\n\n\n\nNow on any update command, you can set update.processor=distrib and have distrib indexing controlled by the \"shards\" and \"self\" params, either configured in solrconfig, or passed in w/ the update command.\n\nOr if you don't want to have to specify update.processor=distrib, you can set it as the default update processor for any update request handlers:\n\n  <!-- CSV update handler, loaded on demand -->\n  <requestHandler class=\"solr.CSVRequestHandler\" name=\"/update/csv\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <str name=\"update.processor\">distrib</str>\n    </lst>\n  </requestHandler>\n\n\n\n\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13017558",
            "date": "2011-04-08T17:26:47+0000",
            "content": "One thing we should probably address is the brittle cmd cloning. I don't like clone methods in general - but if we are going to do it in core code, better to put the clone in the cmd and be a bit less brittle. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043615",
            "date": "2011-06-03T16:46:07+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13102123",
            "date": "2011-09-10T19:46:36+0000",
            "content": "This class does not currently properly propagate commithWithin and overwrite settings from AddUpdateCommands. I've got some code to address this that we should probably incorporate before committing. The standard UpdateRequest class that is used does not allow for fine grained commitWithin (only per request, not per document like you can do with an AddUpdateCommand), or any overwrite. Also, these settings are not cloned when cloning the command. By adding those properties to the clone, and using a new UpdateRequest that has an add(SolrDoc, commitWithin, overwrite), this can be addressed. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106395",
            "date": "2011-09-16T14:50:53+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Patrick Sauts",
            "id": "comment-13121590",
            "date": "2011-10-05T23:26:14+0000",
            "content": "Seems not to work with Solr 3.4\nbecause of \nnew AddUpdateCommand(req); line 181\nnew DeleteUpdateCommand(req); line 199 "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-13161870",
            "date": "2011-12-02T21:40:19+0000",
            "content": "Yonik - this code has Copyright Lucid 2008 notice in it...\n\nAre the attached classes from February the latest code one should work from? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13234751",
            "date": "2012-03-21T18:09:11+0000",
            "content": "Bulk of fixVersion=3.6 -> fixVersion=4.0 for issues that have no assignee and have not been updated recently.\n\nemail notification suppressed to prevent mass-spam\npsuedo-unique token identifying these issues: hoss20120321nofix36 "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13717463",
            "date": "2013-07-23T18:48:19+0000",
            "content": "Bulk move 4.4 issues to 4.5 and 5.0 "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13893239",
            "date": "2014-02-06T10:16:39+0000",
            "content": "This was fixed as part of SOLR-2358 in the initial release of SolrCloud. "
        }
    ]
}