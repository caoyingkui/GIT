{
    "id": "LUCENE-8275",
    "title": "Push up #checkPendingDeletes to Directory",
    "details": {
        "components": [],
        "status": "Closed",
        "resolution": "Fixed",
        "fix_versions": [
            "7.4",
            "master (8.0)"
        ],
        "affect_versions": "7.4,                                            master (8.0)",
        "labels": "",
        "priority": "Major",
        "type": "Bug"
    },
    "description": "IndexWriter checks in it's ctor if the incoming directory is an\n    FSDirectory. If that is the case it ensures that the directory retries\n    deleting it's pending deletes and if there are pending deletes it will\n    fail creating the writer. Yet, this check didn't unwrap filter directories\n    or subclasses like FileSwitchDirectory such that in the case of MDW we\n    never checked for pending deletes.\n\n    There are also two places in FSDirectory that first removed the file\n    that was supposed to be created / renamed to from the pending deletes set\n    and then tried to clean up pending deletes which excluded the file. These\n    places now remove the file from the set after the pending deletes are checked.\n\n\u00a0\n\nThis caused some test failures lately unfortunately very timing dependent:\n\n\u00a0\n\nFAILED:  junit.framework.TestSuite.org.apache.lucene.search.TestSearcherManager\n\nError Message:\nCaptured an uncaught exception in thread: Thread[id=1567, name=Thread-1363, state=RUNNABLE, group=TGRP-TestSearcherManager]\n\nStack Trace:\ncom.carrotsearch.randomizedtesting.UncaughtExceptionError: Captured an uncaught exception in thread: Thread[id=1567, name=Thread-1363, state=RUNNABLE, group=TGRP-TestSearcherManager]\nCaused by: java.lang.RuntimeException: java.nio.file.FileAlreadyExistsException: /home/jenkins/workspace/Lucene-Solr-master-Linux/lucene/build/core/test/J1/temp/lucene.search.TestSearcherManager_BA998C838D219DA9-001/tempDir-001/_0.fdt\n        at __randomizedtesting.SeedInfo.seed([BA998C838D219DA9]:0)\n        at org.apache.lucene.search.TestSearcherManager$8.run(TestSearcherManager.java:590)\nCaused by: java.nio.file.FileAlreadyExistsException: /home/jenkins/workspace/Lucene-Solr-master-Linux/lucene/build/core/test/J1/temp/lucene.search.TestSearcherManager_BA998C838D219DA9-001/tempDir-001/_0.fdt\n        at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:94)\n        at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)\n        at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:116)\n        at java.base/sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:215)\n        at java.base/java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:434)\n        at org.apache.lucene.mockfile.FilterFileSystemProvider.newOutputStream(FilterFileSystemProvider.java:197)\n        at org.apache.lucene.mockfile.FilterFileSystemProvider.newOutputStream(FilterFileSystemProvider.java:197)\n        at org.apache.lucene.mockfile.HandleTrackingFS.newOutputStream(HandleTrackingFS.java:129)\n        at org.apache.lucene.mockfile.HandleTrackingFS.newOutputStream(HandleTrackingFS.java:129)\n        at org.apache.lucene.mockfile.HandleTrackingFS.newOutputStream(HandleTrackingFS.java:129)\n        at org.apache.lucene.mockfile.FilterFileSystemProvider.newOutputStream(FilterFileSystemProvider.java:197)\n        at java.base/java.nio.file.Files.newOutputStream(Files.java:218)\n        at org.apache.lucene.store.FSDirectory$FSIndexOutput.<init>(FSDirectory.java:413)\n        at org.apache.lucene.store.FSDirectory$FSIndexOutput.<init>(FSDirectory.java:409)\n        at org.apache.lucene.store.FSDirectory.createOutput(FSDirectory.java:253)\n        at org.apache.lucene.store.MockDirectoryWrapper.createOutput(MockDirectoryWrapper.java:665)\n        at org.apache.lucene.store.LockValidatingDirectoryWrapper.createOutput(LockValidatingDirectoryWrapper.java:44)\n        at org.apache.lucene.store.TrackingDirectoryWrapper.createOutput(TrackingDirectoryWrapper.java:43)\n        at org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter.<init>(CompressingStoredFieldsWriter.java:116)\n        at org.apache.lucene.codecs.compressing.CompressingStoredFieldsFormat.fieldsWriter(CompressingStoredFieldsFormat.java:128)\n        at org.apache.lucene.codecs.lucene50.Lucene50StoredFieldsFormat.fieldsWriter(Lucene50StoredFieldsFormat.java:183)\n        at org.apache.lucene.codecs.asserting.AssertingStoredFieldsFormat.fieldsWriter(AssertingStoredFieldsFormat.java:48)\n        at org.apache.lucene.index.StoredFieldsConsumer.initStoredFieldsWriter(StoredFieldsConsumer.java:39)\n        at org.apache.lucene.index.StoredFieldsConsumer.startDocument(StoredFieldsConsumer.java:46)\n        at org.apache.lucene.index.DefaultIndexingChain.startStoredFields(DefaultIndexingChain.java:363)\n        at org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:399)\n        at org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:251)\n        at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:490)\n        at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1518)\n        at org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:1210)\n        at org.apache.lucene.search.TestSearcherManager$8.run(TestSearcherManager.java:574)\n\n\nFAILED:  org.apache.lucene.search.TestSearcherManager.testConcurrentIndexCloseSearchAndRefresh",
    "attachments": {
        "LUCENE-8275.patch": "https://issues.apache.org/jira/secure/attachment/12920602/LUCENE-8275.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16452106",
            "author": "Robert Muir",
            "content": "maybe as a followup we should consider pushing pending deletes methods up to Directory.java? It is good that we were able to push a lot of this logic out of indexwriter and \"closer to the source\", but maybe the balance isn't quite right. the fix relies on the fact the user uses FilterDirectory: there is technically nothing forcing them to use that (e.g. mmap/nio/simple are ordinary non-final classes). ",
            "date": "2018-04-25T11:51:45+0000"
        },
        {
            "id": "comment-16452114",
            "author": "Robert Muir",
            "content": "maybe FileSwitchDirectory that puts some stuff onto fast storage (SSD) and other stuff onto slow storage (CFS mount) would be a more realistic example of where the unwrap() may not work because the deletion stuff is only in FSDirectory and not Directory. ",
            "date": "2018-04-25T11:57:37+0000"
        },
        {
            "id": "comment-16452130",
            "author": "Robert Muir",
            "content": "Or even any use of FileSwitchDirectory on windows at all would have this issue too, I think? probably other scenarios we can come up with. ",
            "date": "2018-04-25T12:09:15+0000"
        },
        {
            "id": "comment-16452249",
            "author": "Simon Willnauer",
            "content": "Robert Muir good point about FSD. I attached a new patch with a minimal solution. ",
            "date": "2018-04-25T13:30:50+0000"
        },
        {
            "id": "comment-16452315",
            "author": "Robert Muir",
            "content": "+1 glad it could be only one method. ",
            "date": "2018-04-25T14:08:50+0000"
        },
        {
            "id": "comment-16452402",
            "author": "ASF subversion and git services",
            "content": "Commit 9f4e6c5da8d2af48f5947e15ccb2723e6d3cb4d5 in lucene-solr's branch refs/heads/branch_7x from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9f4e6c5 ]\n\nLUCENE-8275: Push up #checkPendingDeletes to Directory\n\nIndexWriter checks in it's ctor if the incoming directory is an\nFSDirectory. If that is the case it ensures that the directory retries\ndeleting it's pending deletes and if there are pending deletes it will\nfail creating the writer. Yet, this check didn't unwrap filter directories\nor subclasses like FileSwitchDirectory such that in the case of MDW we\nnever checked for pending deletes.\n\nThere are also two places in FSDirectory that first removed the file\nthat was supposed to be created / renamed to from the pending deletes set\nand then tried to clean up pending deletes which excluded the file. These\nplaces now remove the file from the set after the pending deletes are checked. ",
            "date": "2018-04-25T14:58:41+0000"
        },
        {
            "id": "comment-16452403",
            "author": "ASF subversion and git services",
            "content": "Commit aa341476fdb6836bfc62b096219e268e52006103 in lucene-solr's branch refs/heads/master from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=aa34147 ]\n\nLUCENE-8275: Push up #checkPendingDeletes to Directory\n\nIndexWriter checks in it's ctor if the incoming directory is an\nFSDirectory. If that is the case it ensures that the directory retries\ndeleting it's pending deletes and if there are pending deletes it will\nfail creating the writer. Yet, this check didn't unwrap filter directories\nor subclasses like FileSwitchDirectory such that in the case of MDW we\nnever checked for pending deletes.\n\nThere are also two places in FSDirectory that first removed the file\nthat was supposed to be created / renamed to from the pending deletes set\nand then tried to clean up pending deletes which excluded the file. These\nplaces now remove the file from the set after the pending deletes are checked. ",
            "date": "2018-04-25T14:58:42+0000"
        },
        {
            "id": "comment-16452434",
            "author": "David Smiley",
            "content": "Curious, what distinction is there between Directory.checkPendingDeletes returning true vs it throwing an IOException? \u00a0Maybe it should be just one or the other \u2013 i.e. return boolean but never throw an exception, or return void but possibly throw an IOException? ",
            "date": "2018-04-25T15:09:25+0000"
        },
        {
            "id": "comment-16452974",
            "author": "Simon Willnauer",
            "content": "\nCurious, what distinction is there between Directory.checkPendingDeletes returning true vs it throwing an IOException?  Maybe it should be just one or the other \u2013 i.e. return boolean but never throw an exception, or return void but possibly throw an IOException?\n\nThe return type of a method doesn't have anything to do with the exception it can throw. We do, as a side-effect of this method retry deleteing pending deletes, this can throw an IOException. Unless there are some underlying FS issues it just signals if there are any pending deletions. I think the signature makes sense as it is?  ",
            "date": "2018-04-25T19:54:46+0000"
        },
        {
            "id": "comment-16453786",
            "author": "ASF subversion and git services",
            "content": "Commit 933d8a6995c03320aa5f3207a107791cc7e9e735 in lucene-solr's branch refs/heads/master from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=933d8a6 ]\n\nLUCENE-8275: Fix BaseLockFactoryTestCase to step out on Windowns if pending files are found\n\nThe particular test here is #testStressLocks that has several protectesion against\nWindowsFS and special logic in the catch clause that steps out on fatal exceptions with\npending deletes. Since we now check this consistently in the IW ctor we need to also\nskip this entire test if we are on windows and have pending deletes. ",
            "date": "2018-04-26T10:10:51+0000"
        },
        {
            "id": "comment-16453829",
            "author": "ASF subversion and git services",
            "content": "Commit 6ff100731b93fdde22905fc0a4517438677b981a in lucene-solr's branch refs/heads/branch_7x from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6ff1007 ]\n\nLUCENE-8275: Fix BaseLockFactoryTestCase to step out on Windowns if pending files are found\n\nThe particular test here is #testStressLocks that has several protectesion against\nWindowsFS and special logic in the catch clause that steps out on fatal exceptions with\npending deletes. Since we now check this consistently in the IW ctor we need to also\nskip this entire test if we are on windows and have pending deletes. ",
            "date": "2018-04-26T10:47:42+0000"
        },
        {
            "id": "comment-16453947",
            "author": "David Smiley",
            "content": "The return type of a method doesn't have anything to do with the exception it can throw. We do, as a side-effect of this method retry deleteing pending deletes, this can throw an IOException. Unless there are some underlying FS issues it just signals if there are any pending deletions. I think the signature makes sense as it is?\n\nOh ok.  I misunderstood a return of \"true\" to be an erroneous/bad situation, and that's what led to my question. ",
            "date": "2018-04-26T12:24:50+0000"
        },
        {
            "id": "comment-16458441",
            "author": "ASF subversion and git services",
            "content": "Commit 1cd6f1b6e7f3e24906f552d9460b7878aef82268 in lucene-solr's branch refs/heads/branch_7x from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1cd6f1b ]\n\nLUCENE-8275: Fix TestDirectoryTaxonomyWriter.testRecreateAndRefresh ",
            "date": "2018-04-30T10:07:16+0000"
        },
        {
            "id": "comment-16458442",
            "author": "ASF subversion and git services",
            "content": "Commit fe018e37f3a8bc4af52ca98e0e49c1317b159c80 in lucene-solr's branch refs/heads/master from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=fe018e3 ]\n\nLUCENE-8275: Fix TestDirectoryTaxonomyWriter.testRecreateAndRefresh ",
            "date": "2018-04-30T10:08:26+0000"
        },
        {
            "id": "comment-16465708",
            "author": "ASF subversion and git services",
            "content": "Commit f9942b525be042982e12b202fda5f4bd29e6c5d1 in lucene-solr's branch refs/heads/master from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f9942b5 ]\n\nLUCENE-8275: Suppress WindowsFS TestDirectoryTaxonomyWriter\n\nTestDirectoryTaxonomyWriter#testRecreateAndRefresh can't deal with pending\nfiles since it creates multiple IW instances on the same directory. ",
            "date": "2018-05-07T10:03:04+0000"
        },
        {
            "id": "comment-16465711",
            "author": "ASF subversion and git services",
            "content": "Commit 5d6e47eaed05d4c305560c88f2e3393a45d1dbd8 in lucene-solr's branch refs/heads/branch_7x from Simon Willnauer\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5d6e47e ]\n\nLUCENE-8275: Suppress WindowsFS TestDirectoryTaxonomyWriter\n\nTestDirectoryTaxonomyWriter#testRecreateAndRefresh can't deal with pending\nfiles since it creates multiple IW instances on the same directory. ",
            "date": "2018-05-07T10:03:49+0000"
        }
    ]
}