{
    "id": "SOLR-11427",
    "title": "DELETEREPLICA with onlyIfDown specified should succeed if the host node is not present in the live_nodes Znode",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Won't Fix",
        "status": "Resolved"
    },
    "description": "The title says it pretty much, so opening up for discussion:\n\nHere's the problem. Let's say a node is killed via kill -9. The state.json file still says it's \"active\", but the node is gone from live_nodes. If the node in question never comes back, the replica's state doesn't necessarily get switched to \"down\", so specifying onlyIfDown fails with \"node is active\" message. This is all documented more thoroughly in SOLR-9361.\n\nThe question is whether it's sufficient and/or safe to succeed in deleting the replica from state.json if the state is \"active\" and the node is NOT present in live_nodes.\n\nI'm assigning to myself, but others should feel free to take it.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-02T20:45:45+0000",
            "content": "Hi Erick,\n\nDo you know the original motivation of \"onlyIdDown\"  ? \n\nWhile deleting a replica we need to specify collection,shard and replica . So shouldn't the user know that he is deleting an active replica?\n\nThe scenario that you described totally happens . So to address that if we didn't have \"onlyIfDown\" in the first place then the command would try to delete the index , which would fail ( core is not present ) but atleast we would cleanup the state - which is what the user wants at this point ? ",
            "author": "Varun Thacker",
            "id": "comment-16188793"
        },
        {
            "date": "2017-10-02T22:22:04+0000",
            "content": "bq: So shouldn't the user know that he is deleting an active replica?\n\nMaybe, maybe not. The parent JIRA outlines all the things that are screwed up with how state is reported. The graph view of the cluster state shows the node as down. The state.json znode shows replicas on a missing node as \"active\" if the node was killed via, say, \"kill -9\". CLUSTERSTATUS reports it as \"down\". Then there's \"gone\"...\n\nIIRC, at one point DELETEREPLICA failed if it couldn't connect to the Solr node that had the replica that was missing. So if you forcibly killed a Solr instance (or pulled the plug) about the only way to clean up ZK was to hand-edit clusterstate.json (yes, a long time ago)..\n\nonlyIfDown was put in as a safety valve when users wanted to be cautious (perhaps when scripting) and did not want to delete active replicas (through perhaps a typo, bad scripting, whatever) but did want a way to clean up ZK. \n\nThen there was the whole bit about how to delete a replica if it it was on a node that had been shut down and when the DELETEREPLICA command was issued and came back up (legacyCloud mode where the replica would recreate itself).\n ",
            "author": "Erick Erickson",
            "id": "comment-16188961"
        },
        {
            "date": "2017-10-02T23:45:22+0000",
            "content": "so the script would want to delete replicas from decommissioned nodes or from a node which has replicas in down state for some reason and they don't want it? \nI'm not convinced that we need a flag for such use cases ( how many users will discover and use this in practice ) but that's probably another discussion / Jira . \n\n\nThe question is whether it's sufficient and/or safe to succeed in deleting the replica from state.json if the state is \"active\" and the node is NOT present in live_nodes.\n\nI think that's the right thing to do. We do a cross check like this in other places today as well\n\nIIRC, at one point DELETEREPLICA failed if it couldn't connect to the Solr node that had the replica that was missing. \n\nI think it fails, but still cleans up the state. I'll have to confirm that it actually cleans up the state.  maybe it should not throw and error and delete the state ?\n ",
            "author": "Varun Thacker",
            "id": "comment-16189070"
        },
        {
            "date": "2017-10-02T23:59:00+0000",
            "content": "Well, the behavior has changed over time. \"In the old days\" with legacyCloud, the replica could reconstruct itself after it had been deleted. Scenario\n> shut down Solr\n> delete replica on the down node\n> bring that Solr back up\n\nThe replica could recreate itself. I think there was work at one point to not let that happen if a DELETEREPLICA had been issued. Much of that behavior is behind us now so we may be dealing with some remnants of how it used to be dealt with.\n\nbq: so the script would want to delete replicas from decommissioned nodes or from a node which has replicas in down state for some reason and they don't want it? \n\nNot quite. Imagine a small typo:\n\nif (replica.state.equals(\"ative\") == false) {\n delete the replica\n}\n\nYeah, yeah, yeah, we can't protect users from programming errors. And that's not a great example anyway. But you get the idea. The onlyIfDown bits are an extra safeguard there. Won't delete recovering nodes or active nodes etc.\n ",
            "author": "Erick Erickson",
            "id": "comment-16189081"
        },
        {
            "date": "2017-10-03T00:05:41+0000",
            "content": "In my head scripts would only delete replicas which are active ( to move replicas around ) ..\n\nOnly maintenance scripts or cleanup scripts could benefit for this protection . But given someone would run this script manually to cleanup old cruft the chances of the user knowing about this flag and a bug in a cleanup script didn't feel right. \n\nBut that's just me . Maybe it's more useful than I think ",
            "author": "Varun Thacker",
            "id": "comment-16189098"
        },
        {
            "date": "2017-12-25T22:15:24+0000",
            "content": "Thinking about this after letting it sit for a while, this is a really bad idea.\n\nNodes delete just fine if you don't specify onlyIfDown=true. The idea of saying \"DELETEREPLICA will respect the onlyIfDown flag even if the node is marked as active if the host happens be absent\" is:\n\n1> confusing. Hey, I said onlyIfDown!\n\n2> dangerous. Small programming or scripting errors and onlyIfDown isn't the safety valve it was intended to be\n\n3> unnecessary. In the scenario outlined where the node died horribly and even if it's never coming back, leave off the onlyIfDown bit and the node will go away.\n\nIn short, I see no utility here, and opportunities to have unpleasant things happen so not worth the work. ",
            "author": "Erick Erickson",
            "id": "comment-16303406"
        }
    ]
}