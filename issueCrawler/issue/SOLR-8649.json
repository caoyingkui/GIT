{
    "id": "SOLR-8649",
    "title": "Fail fast on wrong ZK chroot",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "A typical scenario is when a user sets up ZK with a chroot /solr, runs Solr and then restarts Solr without specifying the chroot. In the default legacyCloud mode, Solr will happily start and create all ZK nodes as well as collections found on the local cores.\n\nI've been bit many times by this and so have more than a few Solr users. In a private discussion, Hoss gave the following idea:\n\n\tWe add a command to bin/solr to \"prepare\" ZooKeeper that accepts the zk host string\n\tThe command creates the chroot if it does not exist\n\tTouches /my-chroot/solr.key file\n\tWrites the complete zk host in the solr.in.sh or solr.in.cmd file\n\n\n\nOnce we do this, Solr will complain and fail fast if the solr.key file is not found in the given chroot. We could also write a fixed string in the /my-chroot instead of creating a /my-chroot/solr.key file.\n\nWe can do these things automatically when using embedded ZooKeeper.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-02-09T19:15:53+0000",
            "author": "Steve Molloy",
            "content": "Another issue about launching Solr without a chroot to inexisting zNode. Attached patch adds a parameter to automatically create the zNode if required. ",
            "id": "comment-15139447"
        }
    ]
}