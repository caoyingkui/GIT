{
    "id": "LUCENE-2721",
    "title": "Random Failure TestSizeBoundedOptimize#testFirstSegmentTooLarge",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/index"
        ],
        "type": "Test",
        "fix_versions": [
            "3.1",
            "4.0-ALPHA"
        ],
        "affect_versions": "4.0-ALPHA,                                            CSF branch",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "I am seeing this on trunk  \n\n\n[junit] Testsuite: org.apache.lucene.index.TestSizeBoundedOptimize\n    [junit] Testcase: testFirstSegmentTooLarge(org.apache.lucene.index.TestSizeBoundedOptimize):\tFAILED\n    [junit] expected:<2> but was:<1>\n    [junit] junit.framework.AssertionFailedError: expected:<2> but was:<1>\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:882)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:848)\n    [junit] \tat org.apache.lucene.index.TestSizeBoundedOptimize.testFirstSegmentTooLarge(TestSizeBoundedOptimize.java:160)\n    [junit] \n    [junit] \n    [junit] Tests run: 1, Failures: 1, Errors: 0, Time elapsed: 0.658 sec\n    [junit] \n    [junit] ------------- Standard Output ---------------\n    [junit] NOTE: reproduce with: ant test -Dtestcase=TestSizeBoundedOptimize -Dtestmethod=testFirstSegmentTooLarge -Dtests.seed=7354441978302993522:-457602792543755447 -Dtests.multiplier=3\n    [junit] NOTE: test params are: codec=Standard, locale=sv_SE, timezone=Mexico/BajaNorte\n    [junit] ------------- ---------------- ---------------\n    [junit] ------------- Standard Error -----------------\n    [junit] NOTE: all tests run in this JVM:\n    [junit] [TestSizeBoundedOptimize]\n    [junit] ------------- ---------------- ---------------\n    [junit] Test org.apache.lucene.index.TestSizeBoundedOptimize FAILED\n\n\n\nwhen running with this seed\nant test -Dtestcase=TestSizeBoundedOptimize -Dtestmethod=testFirstSegmentTooLarge -Dtests.seed=7354441978302993522:-457602792543755447 -Dtests.multiplier=3",
    "attachments": {
        "LUCENE-2721.patch": "https://issues.apache.org/jira/secure/attachment/12457899/LUCENE-2721.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2010-10-23T12:27:47+0000",
            "content": "I'm checking it ",
            "author": "Shai Erera",
            "id": "comment-12924184"
        },
        {
            "date": "2010-10-23T12:33:32+0000",
            "content": "here is a patch ",
            "author": "Simon Willnauer",
            "id": "comment-12924185"
        },
        {
            "date": "2010-10-23T12:36:10+0000",
            "content": "Found it - the randomness set maxBufferedDocs too small, so smaller segments were created than the test anticipated. I'll post an update soon. ",
            "author": "Shai Erera",
            "id": "comment-12924186"
        },
        {
            "date": "2010-10-23T12:48:05+0000",
            "content": "Simon, looks like we were working on it in parallel .\n\nThe patch you added only takes care of that particular test case. This patch ensures all test cases won't be hit by this randomness problem, by ensuring IWC is not configured to flush by num docs or small RAM buffer size.\n\nPatch is against 3x, I'll port to trunk after I commit. ",
            "author": "Shai Erera",
            "id": "comment-12924187"
        },
        {
            "date": "2010-10-23T13:10:15+0000",
            "content": "LGTM  thx ",
            "author": "Simon Willnauer",
            "id": "comment-12924194"
        },
        {
            "date": "2010-10-23T13:12:09+0000",
            "content": "I don't like wiring this stuff for all tests.\n\nmost tests don't care ",
            "author": "Robert Muir",
            "id": "comment-12924195"
        },
        {
            "date": "2010-10-23T13:20:50+0000",
            "content": "What do you mean? If maxBufDocs is set low enough (as in this case), the tests that rely on the segments size as committed by them would fail. In fact, all tests care - if I rely on a segment size to be 3, and set maxMergeDocs to 2, but because of randomness there were 2 segments of size 2 + 1, then the test would fail. ",
            "author": "Shai Erera",
            "id": "comment-12924196"
        },
        {
            "date": "2010-10-23T13:21:59+0000",
            "content": "Committed revision 1026614 (3x).\nCommitted revision 1026615 (trunk). ",
            "author": "Shai Erera",
            "id": "comment-12924197"
        },
        {
            "date": "2010-10-23T16:49:28+0000",
            "content": "I don't think my comment was ambiguous.\n\nmost tests don't care about this stuff ",
            "author": "Robert Muir",
            "id": "comment-12924213"
        },
        {
            "date": "2010-10-23T16:55:12+0000",
            "content": "What do you mean by 'most test'? Most test classes in Lucene, or most test cases in TestSizeBoundedOptimize? The test cases in the latter (where this 'wiring' was done) do care. ",
            "author": "Shai Erera",
            "id": "comment-12924214"
        },
        {
            "date": "2011-03-30T15:50:28+0000",
            "content": "Bulk close for 3.1 ",
            "author": "Grant Ingersoll",
            "id": "comment-13013492"
        }
    ]
}