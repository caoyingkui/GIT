{
    "id": "LUCENE-6353",
    "title": "Strengthen checks on allowed segment file names",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.2",
            "6.0"
        ],
        "priority": "Major",
        "status": "Open",
        "type": "Bug"
    },
    "description": "Replication layers that need to move Lucene indices around frequently need to (or should) be able to decode an given index file into its segment name, segment suffix (generation and/or per-field \"suffix\"), file name extension.\n\nThis is useful for robustness, e.g. copying all of a segment's files if any checksums/ids across those files disagrees between source and replica.\n\nBut we don't do very strong checking of the \"syntax\" of an index file name today, or at least we should do the TODO in SegmentWriteState (upgrade the assert on the segment suffix to a real check).\n\nI think we could also make MDW.close insist every file it finds in a closed index either matches the required syntax, or is an \"extra\" added by ExtraFS?",
    "attachments": {},
    "issue_links": {},
    "comments": []
}