{
    "id": "SOLR-1763",
    "title": "Integrate Solr Cell/Tika as an UpdateRequestProcessor",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "update"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "From Chris Hostetter's original post in solr-dev:\n\nAs someone with very little knowledge of Solr Cell and/or Tika, I find myself wondering if ExtractingRequestHandler would make more sense as an extractingUpdateProcessor \u2013 where it could be configured to take take either binary fields (or string fields containing URLs) out of the Documents, parse them with tika, and add the various XPath matching hunks of text back into the document as new fields.\n\nThen ExtractingRequestHandler just becomes a handler that slurps up it's ContentStreams and adds them as binary data fields and adds the other literal params as fields.\n\nWouldn't that make things like SOLR-1358, and using Tika with URLs/filepaths in XML and CSV based updates fairly trivial?\n\n-Hoss\n\nI couldn't agree more, so I decided to add it as an issue.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-12831108",
            "date": "2010-02-08T20:42:18+0000",
            "content": "Re-posting my comment from solr-dev in this ticket:\nGood match. UpdateProcessors is the way to go for functionality which modifiy documents prior to indexing.\nWith this, we can mix and match any type of content source with other processing needs.\n\nI think it can be neneficial to have the choice to do extration on the SolrJ side. But you don't always have that choice, if your source is a crawler without built-in Tika, some base64 encoded field in an XML or some other random source, you want to do the extraction at an arbitrary place in the chain.\n\nExamples:\n Crawler (httpheaders, binarybody) -> TikaUpdateProcessor (+title, +text, +meta...) -> index\n XML (title, pdfurl) -> GetUrlProcessor (+pdfbin) -> TikaUpdateProcessor (+text, +meta) -> index\n DIH (city, street, lat, lon) -> LatLon2GeoHashProcessor (+geohash) -> index\n\nI propose to model the document processor chain more after FAST ESP's flexible processing chain, which must be seen as an industry best practice. I'm thinking of starting a Wiki page to model what direction we should go.\n\n\u2013\nJan H\u00f8ydahl  - search architect\nCominvent AS - www.cominvent.com "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-12843217",
            "date": "2010-03-09T18:22:33+0000",
            "content": "I may have a need for this functionality in an upcoming project. Anyone knowing the code who can estimate the effort? "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-12899548",
            "date": "2010-08-17T19:52:07+0000",
            "content": "Starting to look into this one. Will it make most sense to make the patch against contrib/extraction since it depends on the Tika jars? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12903125",
            "date": "2010-08-26T22:48:50+0000",
            "content": "Will it make most sense to make the patch against contrib/extraction since it depends on the Tika jars? \n\nThat would be my suggestion ... an ExtractionUpdateProcessor sitting right next to the ExtractionRequestHandler. "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12903792",
            "date": "2010-08-28T06:48:40+0000",
            "content": "Can the ExtractionRequestHandler go away? "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-12904979",
            "date": "2010-09-01T09:19:46+0000",
            "content": "Ideally the UpdateProcessor will do everything that the RequestHandler does and more.\nWe might still need a RequestHandler which is capable of accepting a binary file as input, as well as conveying certain request parameters to the UpdateProcessor.\nBut that should probably be a new thinner \"RawUpdateRequestHandler\".\n\nWhen this more generic architecture has proven itself superior, then we can start deprecating old stuff. DIH should then also start looking to the UpdateProcessor for its Tika needs. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-12974173",
            "date": "2010-12-22T12:44:00+0000",
            "content": "I believe these are related in that they attempt to introduce TIKA extraction of some input content and output the extracted text to various fields. They should share code base if possible. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13402149",
            "date": "2012-06-27T11:39:56+0000",
            "content": "I won't have time to look at this before october-ish, so anyone feel free to give it a shot  "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13566509",
            "date": "2013-01-30T14:28:35+0000",
            "content": "Anyone interested in this feature? "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13578819",
            "date": "2013-02-14T23:50:36+0000",
            "content": "Testing bulk "
        },
        {
            "author": "Simon Endele",
            "id": "comment-14163485",
            "date": "2014-10-08T13:41:01+0000",
            "content": "I'd appreciate this feature, because it would also be possible to post-process the output of Tika. "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-15305642",
            "date": "2016-05-28T21:38:03+0000",
            "content": "Resolving as won't fix due to lack of interest both from my self and others. And besides I don't think it is a great idea anymore  "
        }
    ]
}