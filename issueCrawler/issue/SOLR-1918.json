{
    "id": "SOLR-1918",
    "title": "Bit-wise scoring field type",
    "details": {
        "affect_versions": "3.1",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "Schema and Analysis"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "This field type supports bit-wise matching with scoring over fields containing 32-bit integer values.\n\nInternally during indexing the field value is interpreted as a 32-bit integer and converted to a set of bitmask terms. During search the query term is also converted into a BooleanQuery of corresponding bitmask terms, added as Occur.SHOULD clauses. The scoring of such query over such field produces the desired effect, where bit patterns closest to the query get highest scores.\n\nNOTE: currently only single value per field, a future extension will support multiple values.\n\nThe difference between this issue and SOLR-1913 is that SOLR-1913 offers filtering only (no scoring), while this implementation performs scoring, which allows finding the best matching inexact bit patterns. This has applications in e.g. near-duplicate detection.",
    "attachments": {
        "bitwise.patch": "https://issues.apache.org/jira/secure/attachment/12444805/bitwise.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Andrzej Bialecki",
            "id": "comment-12868693",
            "date": "2010-05-18T15:53:49+0000",
            "content": "BitwiseField implementation and a unit test. "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12868962",
            "date": "2010-05-19T02:23:43+0000",
            "content": "I can't quite follow the patch. Does this do scoring from the Hamming distance? "
        },
        {
            "author": "Andrzej Bialecki",
            "id": "comment-12869314",
            "date": "2010-05-19T20:20:51+0000",
            "content": "Maybe you expected something more complex ... no, it's not the Hamming distance. The score comes from the number of differing bits between the query and the field value (actually, a list of bitmask terms created from the value). It's really a simple BooleanQuery in disguise - please see the unit test. "
        }
    ]
}