{
    "id": "LUCENE-2414",
    "title": "add icu-based tokenizer for unicode text segmentation",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "modules/other"
        ],
        "type": "New Feature",
        "fix_versions": [
            "3.1",
            "4.0-ALPHA"
        ],
        "affect_versions": "3.1",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "I pulled out the last part of LUCENE-1488, the tokenizer itself and cleaned it up some.\n\nThe idea is simple:\n\n\tFirst step is to divide text into writing system boundaries (scripts)\n\tYou supply an ICUTokenizerConfig (or just use the default) which lets you tailor segmentation on a per-writing system basis.\n\tThis tailoring can be any BreakIterator, so rule-based or dictionary-based or your own.\n\n\n\nThe default implementation (if you do not customize) is just to do UAX#29, but with tailorings for stuff with no clear word division:\n\n\tThai (uses dictionary-based word breaking)\n\tKhmer, Myanmar, Lao (uses custom rules for syllabification)\n\n\n\nAdditionally as more of an example i have a tailoring for hebrew that treats the punctuation special. (People have asked before\nfor ways to make standardanalyzer treat dashes differently, etc)",
    "attachments": {
        "LUCENE-2414.patch": "https://issues.apache.org/jira/secure/attachment/12442621/LUCENE-2414.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2010-04-22T20:54:40+0000",
            "content": "attached is a patch.\n\nafter applying it run 'ant genrbbi', which compiles the rule tailorings to binary DFAs for faster loading.\nyou dont have to do this, e.g. if you want you can always create these from String, but this is much faster. ",
            "author": "Robert Muir",
            "id": "comment-12860009"
        },
        {
            "date": "2010-04-22T21:51:51+0000",
            "content": "attached is a patch with some suggestions from Uwe:\n\n\tuse reflection for the compiler instead of a regex-like tunnel\n\tremove a unused variable in the tokenizer\n\n ",
            "author": "Robert Muir",
            "id": "comment-12860036"
        },
        {
            "date": "2010-04-23T06:52:46+0000",
            "content": "Hi Robert,\n\nI attached a patch with almost everything unchanged, only two problems in build.xml and the rule compiler. This one did not work on my computer:\n\n\tIf the src dir is not found, File.listFiles() returns null, I added an IOException here\n\tThe above line NPE/IOExceptioned, because of spaces in file path. In general you should never use <arg line=\"...\"/> in ant execs, instead list parameters separately (this is also suggested by ANT docs). This will enable proper parameter escaping. We do this everywhere else in Lucene, but not in ICU.\n\n\n\nAll other files keep unchanged, tests pass after compiling the rule files. ",
            "author": "Uwe Schindler",
            "id": "comment-12860144"
        },
        {
            "date": "2010-04-23T06:56:01+0000",
            "content": "Previous patch missed file additions. ",
            "author": "Uwe Schindler",
            "id": "comment-12860146"
        },
        {
            "date": "2010-04-23T09:45:04+0000",
            "content": "One more comment:\nThe abstract ICUTokenizerConfig is public, but only has package protected methods. So nobody can ever implement an own one. Abstract classes are different than interfaces, whose methods are always public (that the nature of interfaces).\nI would make the methods public, else the whole configuration makes no sense.\n\nI would also change the method name of getTokenizer() to getBreakIterator(). ",
            "author": "Uwe Schindler",
            "id": "comment-12860199"
        },
        {
            "date": "2010-04-23T10:57:16+0000",
            "content": "ah thanks for finding these bugs Uwe. I'll upload a new patch. ",
            "author": "Robert Muir",
            "id": "comment-12860215"
        },
        {
            "date": "2010-04-24T14:42:02+0000",
            "content": "updated patch with Uwe's comments addressed. ",
            "author": "Robert Muir",
            "id": "comment-12860528"
        },
        {
            "date": "2010-04-24T16:18:14+0000",
            "content": "Looks good! Will test again later! ",
            "author": "Uwe Schindler",
            "id": "comment-12860538"
        },
        {
            "date": "2010-04-25T15:40:52+0000",
            "content": "Hi Robert,\n\nAll fine. No more problems found! ",
            "author": "Uwe Schindler",
            "id": "comment-12860698"
        },
        {
            "date": "2010-05-01T12:10:16+0000",
            "content": "I added tests for offsets and type, added some docs to overview.html, \ncleared up javadocs warnings, and marked everything experimental (for now).\n\nI will commit in a few days unless there are any objections. ",
            "author": "Robert Muir",
            "id": "comment-12863012"
        },
        {
            "date": "2010-05-03T13:21:27+0000",
            "content": "Committed revision 940447. ",
            "author": "Robert Muir",
            "id": "comment-12863340"
        },
        {
            "date": "2010-05-06T12:55:40+0000",
            "content": "backported to 3x, revision 941706 ",
            "author": "Robert Muir",
            "id": "comment-12864755"
        },
        {
            "date": "2011-03-30T15:50:23+0000",
            "content": "Bulk close for 3.1 ",
            "author": "Grant Ingersoll",
            "id": "comment-13013462"
        }
    ]
}