{
    "id": "SOLR-3693",
    "title": "SimpleFacets leak threads",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "faceting"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "static final Executor facetExecutor = new ThreadPoolExecutor(\n          0,\n          Integer.MAX_VALUE,\n          10, TimeUnit.SECONDS, // terminate idle threads after 10 sec\n          new SynchronousQueue<Runnable>()  // directly hand off tasks\n          , new DefaultSolrThreadFactory(\"facetExectutor\")\n  );\n\n\n\nThis is created once and never shut down. \n\nI start wondering if it makes sense to add a filter to ignore things like this (which seems to be legitimate). We can either add longer lingering (10 seconds is awfully long though) or we can ignore such cases by thread name (there is a typo in 'facetExecutor' btw).\n\nLet me know what you think.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}