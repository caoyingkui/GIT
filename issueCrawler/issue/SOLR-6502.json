{
    "id": "SOLR-6502",
    "title": "Custom search component to reduce recall of 'edismax' query.",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "Custom search component to improve query performance by reducing the normal recall of the 'edismax' query. This component will set the 'mm' (minimum match) parameter to 100%, requiring all keywords to match. If there are no matches, 'mm' is set to 1 and the query is retried. This component is registered in solrconfig.xml as '/LowRecallsearch'.",
    "attachments": {
        "LowRecallSearchComponent.zip": "https://issues.apache.org/jira/secure/attachment/12667774/LowRecallSearchComponent.zip"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Peter Keegan",
            "id": "comment-14128699",
            "date": "2014-09-10T16:42:48+0000",
            "content": "Attaching code "
        },
        {
            "author": "Walter Underwood",
            "id": "comment-14128848",
            "date": "2014-09-10T18:15:13+0000",
            "content": "I always thought of this as variable precision rather than variable recall.\n\nI've thought about calling it \"adaptive precision\", but that is probably too big a claim. It might apply if there were multiple steps for mm, like 100%, 50%, and 1. "
        },
        {
            "author": "Peter Keegan",
            "id": "comment-14128872",
            "date": "2014-09-10T18:25:03+0000",
            "content": "The original class name was somewhat specific to our application, so I changed the name, but I agree it could be more descriptive. "
        },
        {
            "author": "Peter Keegan",
            "id": "comment-14129292",
            "date": "2014-09-10T22:51:13+0000",
            "content": "Btw, I  do like your 'adaptive precision' approach and should be easy to extend the single retry. "
        }
    ]
}