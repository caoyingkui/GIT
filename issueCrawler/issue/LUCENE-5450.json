{
    "id": "LUCENE-5450",
    "title": "NPE and Illegal Argument Exception in wrapped SpanMultiTerms with no matches",
    "details": {
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [
            "core/search"
        ],
        "affect_versions": "6.0",
        "status": "Closed",
        "fix_versions": [
            "4.7.1",
            "4.8",
            "6.0"
        ]
    },
    "description": "There are problems with the handling of wrapped span multiterms that don't have any matches.  \n\n1) In the test framework, when AssertingIndexSearcher does a rewrite and then checks for equality, there's an NPE for SpanNear and SpanOr:\n\njava.lang.NullPointerException\n\tat __randomizedtesting.SeedInfo.seed([8E96A398C89A703B:338EB53A2EDBE8CC]:0)\n\tat org.apache.lucene.search.spans.SpanOrQuery.addClause(SpanOrQuery.java:57)\n\tat org.apache.lucene.search.spans.SpanOrQuery.<init>(SpanOrQuery.java:49)\n\tat org.apache.lucene.search.spans.SpanOrQuery.clone(SpanOrQuery.java:86)\n\tat org.apache.lucene.search.spans.SpanOrQuery.clone(SpanOrQuery.java:39)\n\tat org.apache.lucene.search.QueryUtils.checkHashEquals(QueryUtils.java:57)\n\tat org.apache.lucene.search.QueryUtils.check(QueryUtils.java:52)\n\tat org.apache.lucene.search.AssertingIndexSearcher.rewrite(AssertingIndexSearcher.java:80)\n\tat org.apache.lucene.search.IndexSearcher.createNormalizedWeight(IndexSearcher.java:675)\n\tat org.apache.lucene.search.AssertingIndexSearcher.createNormalizedWeight(AssertingIndexSearcher.java:59)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:273)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:261)\n\tat org.apache.lucene.search.spans.TestSpanMultiTermQueryWrapper.testNoSuchMultiTermsInOr(TestSpanMultiTermQueryWrapper.java:177)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1559)\n...\n\n\n\n\n2) The same issue is causing a \"Clauses must have same field\" illegal argument exception in a SpanNotQuery.\n\njava.lang.IllegalArgumentException: Clauses must have same field.\n\tat __randomizedtesting.SeedInfo.seed([779E5DD7E7523C72:4C2ECAAB938038F9]:0)\n\tat org.apache.lucene.search.spans.SpanNotQuery.<init>(SpanNotQuery.java:66)\n\tat org.apache.lucene.search.spans.SpanNotQuery.clone(SpanNotQuery.java:99)\n\tat org.apache.lucene.search.spans.SpanNotQuery.clone(SpanNotQuery.java:36)\n\tat org.apache.lucene.search.QueryUtils.checkHashEquals(QueryUtils.java:57)\n\tat org.apache.lucene.search.QueryUtils.check(QueryUtils.java:52)\n\tat org.apache.lucene.search.AssertingIndexSearcher.rewrite(AssertingIndexSearcher.java:80)\n\tat org.apache.lucene.search.IndexSearcher.createNormalizedWeight(IndexSearcher.java:675)\n\tat org.apache.lucene.search.AssertingIndexSearcher.createNormalizedWeight(AssertingIndexSearcher.java:59)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:273)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:261)\n\tat org.apache.lucene.search.spans.TestSpanMultiTermQueryWrapper.testNoSuchMultiTermsInNotNear(TestSpanMultiTermQueryWrapper.java:144)\n...\n\n\n\nThe basic problem is that an empty SpanQuery (SpanOrQuery with zero clauses) does not have a field, and much of our code assumes that the field is not null.\n\nTest case and patch on way.",
    "attachments": {
        "LUCENE-5450.patch": "https://issues.apache.org/jira/secure/attachment/12629587/LUCENE-5450.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13904370",
            "author": "Tim Allison",
            "content": "Test case and v1 of patch attached. ",
            "date": "2014-02-18T18:28:23+0000"
        },
        {
            "id": "comment-13904405",
            "author": "Robert Muir",
            "content": "Hi Tim, thanks for reporting the bug.\n\nPersonally, i don't like the use of the static isEmpty method with instanceofs, because it makes it harder for people to implement their own queries.\nAn alternative solution (that is no change in behavior and no api change today, since getField() is currently null in those cases) is to just add the proper null checks? ",
            "date": "2014-02-18T18:56:31+0000"
        },
        {
            "id": "comment-13904406",
            "author": "Robert Muir",
            "content": "Here's what i was thinking (your tests and existing tests seem to pass). Let me know what you think. ",
            "date": "2014-02-18T18:57:26+0000"
        },
        {
            "id": "comment-13904424",
            "author": "Tim Allison",
            "content": "Looks great.  Much simpler. Thank you! ",
            "date": "2014-02-18T19:11:40+0000"
        },
        {
            "id": "comment-13904456",
            "author": "Michael McCandless",
            "content": "+1 ",
            "date": "2014-02-18T19:32:44+0000"
        },
        {
            "id": "comment-13904469",
            "author": "ASF subversion and git services",
            "content": "Commit 1569503 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1569503 ]\n\nLUCENE-5450: fix getField() NPE issues with span queries that have empty clauses ",
            "date": "2014-02-18T19:41:08+0000"
        },
        {
            "id": "comment-13904506",
            "author": "ASF subversion and git services",
            "content": "Commit 1569513 from Robert Muir in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1569513 ]\n\nLUCENE-5450: fix getField() NPE issues with span queries that have empty clauses ",
            "date": "2014-02-18T20:06:15+0000"
        },
        {
            "id": "comment-13904507",
            "author": "Robert Muir",
            "content": "Thanks Tim! ",
            "date": "2014-02-18T20:06:47+0000"
        },
        {
            "id": "comment-13938198",
            "author": "Robert Muir",
            "content": "Reopening for 4.7.1 backport ",
            "date": "2014-03-17T18:52:56+0000"
        },
        {
            "id": "comment-13938202",
            "author": "ASF subversion and git services",
            "content": "Commit 1578513 from Robert Muir in branch 'dev/branches/lucene_solr_4_7'\n[ https://svn.apache.org/r1578513 ]\n\nLUCENE-5450: NPE and Illegal Argument Exception in wrapped SpanMultiTerms with no matches ",
            "date": "2014-03-17T18:57:26+0000"
        },
        {
            "id": "comment-13957753",
            "author": "Steve Rowe",
            "content": "Bulk close 4.7.1 issues ",
            "date": "2014-04-02T15:04:51+0000"
        }
    ]
}