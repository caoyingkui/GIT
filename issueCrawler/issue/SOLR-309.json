{
    "id": "SOLR-309",
    "title": "A solr.StrField that has analyzers configured should emit warning to log",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "3.1",
            "4.0-ALPHA"
        ],
        "components": [
            "search"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "A solr.StrField that has analyzers configured in schema.xml should emit a warning/error to the log. As I understand StrFields never get tokenized.",
    "attachments": {
        "SOLR-309.patch": "https://issues.apache.org/jira/secure/attachment/12472381/SOLR-309.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-12514882",
            "date": "2007-07-24T07:01:58+0000",
            "content": "personally, i'd vote for changing the FieldType loading code to allow analyzers for any field type (instead of the special logic that currently only looks for them in the case of TextField) ... even if i have an instance of SortableIntFieldType i should be able to put an analyzer in front of it that will massage the input data into something thta parses cleanly as an integer. "
        },
        {
            "author": "Andy Blower",
            "id": "comment-12564042",
            "date": "2008-01-30T15:12:38+0000",
            "content": "Has this been changed in the latest version of SOLR? I'm using v1.2.0 and it was unclear from the documentation whether it is valid to specify analyzers for non-text fields. I tried it when I wanted a simple tokenized string field, and it appears to work. Here's my field definition:\n\n\t\t<!-- Fieldtype for simple tokenized strings. (Don't use for sorting, do use for space separated codes) -->\n\t\t<fieldType name=\"stringText\" class=\"solr.TextField\" positionIncrementGap=\"0\" omitNorms=\"true\">\n\t\t\t<analyzer>\n\t\t\t\t<tokenizer class=\"solr.WhitespaceTokenizerFactory\"/>\n\t\t\t</analyzer>\n\t\t</fieldType>\n\nI use it for fields that have whitespace separated codes e.g. \"101 104 15a 075\". Just using a string field meant I could only find the exact full string rather than individual codes. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12564055",
            "date": "2008-01-30T15:38:44+0000",
            "content": "> I tried it when I wanted a simple tokenized string field\n\nThe analyzer you show is a text field (which is what you want when doing analysis).\nWhy would you want an \"analyzed\" string field when that is exactly what a text field is? "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13000475",
            "date": "2011-02-28T19:20:14+0000",
            "content": "This came up in IRC today, after a lot of back and forth there was a proposal to change FieldType.setAnalyzer (and setQueryAnalyzer) so that by default fieldtypes throw an exception if use try to set ana analyzer on them\n\nthis should fail quickly if people mistakenly put an analyzer on a FieldType (in schema.xml) that doesn't support it.\n\nonly TextField will allow setting an analyzer (since TextField is currently the only class that uses it) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13000476",
            "date": "2011-02-28T19:20:43+0000",
            "content": "going to try and get a fix for this into 3.1 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13001251",
            "date": "2011-03-02T02:06:38+0000",
            "content": "path that modifies FieldType.setAnalyzer to fail by default, so that only TextField allows the specification of an analyzer.\n\nthis leaves the door open for other future FieldTypes to also allow analyzers, but solve the problem of Solr silently allowing analyzers to be set on field types that don't actually use them \n\n(and since the bogus analyzer can no longer be set on other field types, analysis.jsp won't use that bogus analyzer) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13001734",
            "date": "2011-03-02T22:45:49+0000",
            "content": "Committed revision 1076432. - trunk\nCommitted revision 1076444. - 3x "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-13013126",
            "date": "2011-03-30T15:45:39+0000",
            "content": "Bulk close for 3.1.0 release "
        }
    ]
}