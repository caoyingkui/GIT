{
    "id": "SOLR-11445",
    "title": "Overseer should not hang when process bad message",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "7.2",
            "master (8.0)"
        ],
        "affect_versions": "6.6.1,                                            7.0,                                            master (8.0)",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "So we had the following stack trace with a customer:\n\n2017-10-04 11:25:30.339 ERROR (xxxx) [ ] o.a.s.c.Overseer Exception in Overseer main queue loop\norg.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /collections/xxxx/state.json\n    at org.apache.zookeeper.KeeperException.create(KeeperException.java:111)\n    at org.apache.zookeeper.KeeperException.create(KeeperException.java:51)\n    at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:783)\n    at org.apache.solr.common.cloud.SolrZkClient$9.execute(SolrZkClient.java:391)\n    at org.apache.solr.common.cloud.SolrZkClient$9.execute(SolrZkClient.java:388)\n    at org.apache.solr.common.cloud.ZkCmdExecutor.retryOperation(ZkCmdExecutor.java:60)\n    at org.apache.solr.common.cloud.SolrZkClient.create(SolrZkClient.java:388)\n    at org.apache.solr.cloud.overseer.ZkStateWriter.writePendingUpdates(ZkStateWriter.java:235)\n    at org.apache.solr.cloud.overseer.ZkStateWriter.enqueueUpdate(ZkStateWriter.java:152)\n    at org.apache.solr.cloud.Overseer$ClusterStateUpdater.processQueueItem(Overseer.java:271)\n    at org.apache.solr.cloud.Overseer$ClusterStateUpdater.run(Overseer.java:199)\n    at java.lang.Thread.run(Thread.java:748)\n\nI want to highlight: \n  at org.apache.solr.cloud.overseer.ZkStateWriter.enqueueUpdate(ZkStateWriter.java:152)\n    at org.apache.solr.cloud.Overseer$ClusterStateUpdater.processQueueItem(Overseer.java:271)\n\nThis ends up coming from Overseer:\nwhile (data != null)  {\n                final ZkNodeProps message = ZkNodeProps.load(data);\n                log.debug(\"processMessage: workQueueSize: {}, message = {}\", workQueue.getStats().getQueueLength(), message);\n                // force flush to ZK after each message because there is no fallback if workQueue items\n                // are removed from workQueue but fail to be written to ZK\n                *clusterState = processQueueItem(message, clusterState, zkStateWriter, false, null);\n                workQueue.poll(); // poll-ing removes the element we got by peek-ing*\n                data = workQueue.peek();\n              }\n\nNote: The processQueueItem comes before the poll, therefore upon a thrown exception the same node/message that won't process becomes stuck. This made a large cluster unable to come up on it's own without deleting the problem node.",
    "attachments": {
        "SOLR-11445.patch": "https://issues.apache.org/jira/secure/attachment/12891448/SOLR-11445.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-11T09:42:05+0000",
            "content": "Here is a patch for this ticket, which will poll out the message from the workQueue when encountering an exception. ",
            "author": "Cao Manh Dat",
            "id": "comment-16200025"
        },
        {
            "date": "2017-10-11T10:12:09+0000",
            "content": "I think it is better that we explicitly check for NoNode or NodeExists exceptions in the isBadMessageOrInvalidState() method. Most other KeeperExceptions shouldn't cause us to poll items off the queue. Also, the same kind of handling should be done for exceptions thrown when processing messages from state update queue. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16200061"
        },
        {
            "date": "2017-10-12T01:47:05+0000",
            "content": "I think it is better that we explicitly check for NoNode or NodeExists exceptions in the isBadMessageOrInvalidState() method.\nYeah, that's a good idea.\n\nAlso, the same kind of handling should be done for exceptions thrown when processing messages from state update queue.\nWe can't do this. We process state update queue in batch, so we don't know which message is the bad message. So we must fall-back on using workqueue + reread cluster state from Zk. ",
            "author": "Cao Manh Dat",
            "id": "comment-16201324"
        },
        {
            "date": "2017-10-12T06:25:07+0000",
            "content": "We process state update queue in batch, so we don't know which message is the bad message. So we must fall-back on using workqueue + reread cluster state from Zk.\n\nOkay, sounds good to me. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16201513"
        },
        {
            "date": "2017-10-12T07:18:27+0000",
            "content": "Updated patch, including test. These are some changes\n\n\tRefactoring logic of how Overseer catching Exception\n\tThe bad message will be polled out from the queue ( message that causes NoNodeException || NodeExistException || Any other exceptions - except InterruptedException and KeeperException )\n\tAfter poll out the bad message, we will continue processing workqueue\n\n\n\nWill commit soon. ",
            "author": "Cao Manh Dat",
            "id": "comment-16201551"
        },
        {
            "date": "2017-10-12T08:09:05+0000",
            "content": "Commit df5fefb0dbfca1783126798df9c7e303d40ace16 in lucene-solr's branch refs/heads/master from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=df5fefb ]\n\nSOLR-11445: Overseer should not hang when process bad message ",
            "author": "ASF subversion and git services",
            "id": "comment-16201602"
        },
        {
            "date": "2017-10-13T01:17:22+0000",
            "content": "Commit 4bc7fd2bd54c6a06f88c9aa2de9d3b94f5a77efb in lucene-solr's branch refs/heads/master from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4bc7fd2 ]\n\nSOLR-11445: Upgrade CHANGES.txt ",
            "author": "ASF subversion and git services",
            "id": "comment-16202912"
        },
        {
            "date": "2017-10-13T01:18:39+0000",
            "content": "Commit fc981dd5acee6962ff1d35e8238af4e47829e4b5 in lucene-solr's branch refs/heads/branch_7x from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=fc981dd ]\n\nSOLR-11445: Overseer should not hang when process bad message ",
            "author": "ASF subversion and git services",
            "id": "comment-16202914"
        },
        {
            "date": "2017-10-13T01:18:42+0000",
            "content": "Commit 2795287b0e56148102ae802259a59d80907e4d1a in lucene-solr's branch refs/heads/branch_7x from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2795287 ]\n\nSOLR-11445: Upgrade CHANGES.txt ",
            "author": "ASF subversion and git services",
            "id": "comment-16202915"
        }
    ]
}