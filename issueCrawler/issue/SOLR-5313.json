{
    "id": "SOLR-5313",
    "title": "json update extract boost from document value",
    "details": {
        "affect_versions": "3.6",
        "status": "Open",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "The current JsonLoader in org.apache.solr.handler provides a way to add a boost to a document as a whole. But if you want to add multiple documents,\neach with its own boost, you have to create something like this:\n\n{\n  \"add\": { \"boost\":2.0, \"doc\": {} },\n  \"add\": { \"boost\":2.0, \"doc\": {} }\n  ..\n}\n\nNo idea which JSON-writer can do this (I use the one from perl,\nthat does not support duplicate keys).\n\nTherefore I tried to alter some of the code in JsonLoader::handleAdds.\nThe code is between \"//test - start\" and \"//test - end\":\n\n      cmd.solrDoc = parseDoc(ev);\n\n      //test - start\n      if(boost_field != null){                    \n          SolrInputField b_field = cmd.solrDoc.getField(boost_field);\n          if(b_field != null)\n{\n              log.info(\"boost_field found in document with value '\"+b_field.getFirstValue()+\"'\");              \n              float boost = Float.parseFloat((String)b_field.getFirstValue());              \n              cmd.solrDoc.setDocumentBoost(boost);\n              cmd.solrDoc.removeField(boost_field);\n          }\n      }\n      //test - end\n\n     processor.processAdd(cmd);\n\nIn this code I try to extract the boost value for the document from the document itself. The default field is configured as \"_boost\", and is deleted\nfrom the document afterwards.\n\nI tried to subclass JsonLoader, but sadly the class is package-protected \n\nCould this be an interesting contribution?",
    "attachments": {},
    "issue_links": {},
    "comments": []
}