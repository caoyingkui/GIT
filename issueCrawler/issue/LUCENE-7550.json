{
    "id": "LUCENE-7550",
    "title": "QueryParser parses query differently depending on the default operator",
    "details": {
        "labels": "",
        "priority": "Minor",
        "resolution": "Won't Fix",
        "affect_versions": "None",
        "status": "Resolved",
        "type": "Bug",
        "components": [],
        "fix_versions": []
    },
    "description": "As explained by Pawe\u0142 R\u00f3g on java-user [1], the output of parsing the queries below is different depending on the default operator. This looks odd and should be investigated.\n\n\nQueryParser parser = new QueryParser(\"test\", new WhitespaceAnalyzer());\n\n    parser.setDefaultOperator(QueryParser.Operator.AND);\n    Query query = parser.parse(\"foo AND bar OR baz \");\n    System.out.println(query.toString());\n\n    parser.setDefaultOperator(QueryParser.Operator.OR);\n    query = parser.parse(\"foo AND bar OR baz \");\n    System.out.println(query.toString());\n\n\n\nResults in :\n\n+test:foo test:bar test:baz\n+test:foo +test:bar test:baz\n\n\n\n[1] http://mail-archives.apache.org/mod_mbox/lucene-java-user/201611.mbox/browser",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15863479",
            "date": "2017-02-13T11:11:15+0000",
            "content": "Sorry to return to this so late. This is a known behavior of how QueryParser works, Pawe\u0142.\n\nQuoting Hoss: \"If the default operator is set to \u201cAnd\u201d then the behavior is just plain weird.\". You can read about the Boolean logic and query parser behavior at [1]. Also, check out PrecedenceQueryParser which should return the result you expect.\n\n[1] https://lucidworks.com/2011/12/28/why-not-and-or-and-not/ ",
            "author": "Dawid Weiss"
        }
    ]
}