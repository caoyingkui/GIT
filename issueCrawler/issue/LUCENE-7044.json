{
    "id": "LUCENE-7044",
    "title": "Range faceting fails on SortedNumericDocValuesField",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Open",
        "type": "Bug"
    },
    "description": "Hi,\n\nContext: https://hibernate.atlassian.net/browse/HSEARCH-1927\n\nBy using SortedNumericDocValuesField, we can index several numeric values for the same field.\n\nBut we can't execute a range query on it using LongRangeFacetCounts.\n\nLucene fails with the following stacktrace:\n\njava.lang.IllegalStateException: unexpected docvalues type SORTED_NUMERIC for field 'ingredients.price' (expected=NUMERIC). Use UninvertingReader or index with docvalues.\n\tat org.apache.lucene.index.DocValues.checkField(DocValues.java:208)\n\tat org.apache.lucene.index.DocValues.getNumeric(DocValues.java:227)\n\tat org.apache.lucene.queries.function.valuesource.LongFieldSource.getValues(LongFieldSource.java:67)\n\tat org.apache.lucene.facet.range.LongRangeFacetCounts.count(LongRangeFacetCounts.java:80)\n\tat org.apache.lucene.facet.range.LongRangeFacetCounts.<init>(LongRangeFacetCounts.java:69)\n\n\n\nEither LongRangeFacetCounts needs some tweaking to accept SORTED_NUMERIC or we need another implementation to deal with SortedNumericDocValuesField (and probably an implementation of both for Doubles).\n\n\u2013 \nGuillaume",
    "attachments": {},
    "issue_links": {},
    "comments": []
}