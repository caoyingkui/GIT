{
    "id": "SOLR-6119",
    "title": "TestReplicationHandler attempts to remove open folders",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "TestReplicationHandler has a weird logic around the 'snapDir' variable. It attempts to remove snapshot folders, even though they're not closed yet. My recent patch uncovered the bug but I don't know how to fix it cleanly \u2013 the test itself seems to be very fragile (for example I don't understand the 'namedBackup' variable which is always set to true, yet there are conditionals around it).",
    "attachments": {
        "SOLR-6119.patch": "https://issues.apache.org/jira/secure/attachment/12647331/SOLR-6119.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "ASF subversion and git services",
            "id": "comment-14012094",
            "date": "2014-05-29T05:43:10+0000",
            "content": "Commit 1598205 from Dawid Weiss in branch 'dev/trunk'\n[ https://svn.apache.org/r1598205 ]\n\nSOLR-6119: a quick workaround for the problem of removing files that are still open during the test. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14012096",
            "date": "2014-05-29T05:44:00+0000",
            "content": "Commit 1598206 from Dawid Weiss in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1598206 ]\n\nSOLR-6119: a quick workaround for the problem of removing files that are still open during the test. "
        },
        {
            "author": "Varun Thacker",
            "id": "comment-14012208",
            "date": "2014-05-29T09:04:43+0000",
            "content": "Patch which fixes the test.\n\n\n\tRenamed snapDir to snapDirs to make it more evident that this test creates 2 backups in each run.\n\tFixed\n\nboolean namedBackup = true;\n\n to \n\nboolean namedBackup = random().nextBoolean();\n\n\tFixed 2 logical mistakes in the test\n\tRevision 1598013 changed the logic in the finally block by trying to delete snapDir instead of each of the directories. Fixed this.\nI ran \n\n ant test  -Dtestcase=TestReplicationHandler -Dtests.method=doTestBackup -Dtests.seed=55ADF081A0AD0544 -Dtests.multiplier=3 -Dtests.slow=true -Dtests.locale=fr_FR -Dtests.timezone=America/Lower_Princes -Dtests.file.encoding=US-ASCII\n\n which was reported by the Jenkins failures and it passed for me after the patch\n\n "
        },
        {
            "author": "Dawid Weiss",
            "id": "comment-14012210",
            "date": "2014-05-29T09:11:35+0000",
            "content": "> Revision 1598013 changed the logic in the finally block by trying to delete snapDir instead of each of the directories.\n\nThis isn't true? The change I introduced still attempted to remove all of the dirs because snapDir is/was an array. In fact, this is not really correct in the patch:\n\n+      for (File dir : snapDirs) if(dir !=null) {\n+        TestUtil.rm(dir);\n       }\n\n\nbecause the first failure will cause an IOException and cause any remaining folders not to be considered for deletion (that's why I changed it in the first place).\n\n> Fixed 2 logical mistakes in the test\n\nWhat were the logical mistakes in this test? "
        },
        {
            "author": "Varun Thacker",
            "id": "comment-14012214",
            "date": "2014-05-29T09:19:15+0000",
            "content": "The logical mistakes were - \n1. \n\nif (!namedBackup && snapDirs[0].exists()) {\n  fail(\"The first backup should have been cleaned up because \" + backupKeepParamName + \" was set to 1.\");\n}\n\n\nThis check should have been outside the for loop.\n\n2. The test deletion of named backup loop should check if namedBackup is actually true or not.\n\nBoth never cropped up because namedBackup was always set to true. "
        },
        {
            "author": "Varun Thacker",
            "id": "comment-14012216",
            "date": "2014-05-29T09:25:27+0000",
            "content": "Hi Dawid Weiss,\n\nThis isn't true? The change I introduced still attempted to remove all of the dirs because snapDir is/was an array. In fact, this is not really correct in the patch:\n\nI see what you mean. The changed around the finally block introduced in the patch is incorrect then.\n\nLet me see whats the actual problem there then. "
        },
        {
            "author": "Varun Thacker",
            "id": "comment-14012307",
            "date": "2014-05-29T12:12:13+0000",
            "content": "New patch\n\n\tDoesn't change the finally block in doTestBackup. We still need to figure out whats wrong here.\n\tHas all the fixes to doTestBackup from my previous patch.\n\tFixes a possible NPE in SnapShooter\n\n "
        },
        {
            "author": "Dawid Weiss",
            "id": "comment-14013335",
            "date": "2014-05-30T06:05:26+0000",
            "content": "Varun, your patch is fine but it doesn't address the original problem. I've added a try/finally block around rm because the backup folder cannot be removed (it's still open on Windows). I attach an updated patch that removes this block \u2013 if you run it now, you should be seeing the same issue (you may need a Windows machine for this, though).\n\n\n[08:00:08.376] ERROR   3.78s | TestReplicationHandler.doTestBackup <<<\n   > Throwable #1: java.io.IOException: Could not remove the following files (in the order of attempts):\n   >    C:\\Work\\lucene-solr-svn\\trunk\\solr\\build\\solr-core\\test\\J0\\.\\temp\\solr.handler.TestReplicationHandler-B751491BC59B33CA-001\\solr-instance-001\\collection1\\data\\snapshot.eyxtuk\n   > \n   > \tat __randomizedtesting.SeedInfo.seed([B751491BC59B33CA:F6DA697EE225C085]:0)\n   > \tat org.apache.lucene.util.TestUtil.rm(TestUtil.java:118)\n   > \tat org.apache.solr.handler.TestReplicationHandler.doTestBackup(TestReplicationHandler.java:1559)\n...\n\n "
        },
        {
            "author": "Dawid Weiss",
            "id": "comment-14013348",
            "date": "2014-05-30T06:25:19+0000",
            "content": "The problem is in the test, here:\n\n          BackupThread deleteBackupThread = new BackupThread(backupNames[i], ReplicationHandler.CMD_DELETE_BACKUP);\n          deleteBackupThread.start();\n          int waitCnt = 0;\n          CheckDeleteBackupStatus checkDeleteBackupStatus = new CheckDeleteBackupStatus();\n          while (true) {\n            checkDeleteBackupStatus.fetchStatus();\n\n\n\nyou run the backup threads but never wait for the backup to finish, checking the \"delete status\". There is a race condition in there \u2013 either the check for backup status should really return true after backup files are removed or the wait for the backup itself should be done in an alternative way.\n\nIf you add a log to backup (before/ after) and to the finally block in the test, the wrong interleaving is:\n\n4752 T60 oash.SnapShooter.deleteNamedSnapshot Deleting snapshot: eyxtuk\n4752 T12 oash.TestReplicationHandler.doTestBackup #### --> DELETING (finally block in the test)\n4754 T60 oash.SnapPuller.delTree WARN Unable to delete file : C:\\Users\\dweiss\\AppData\\Local\\Temp\\solr.handler.TestReplicationHandler-B751491BC59B33CA-005\\solr-instance-001\\collection1\\data\\snapshot.eyxtuk\\_0.cfs\n4754 T60 oash.SnapShooter.deleteNamedSnapshot WARN Unable to delete snapshot: eyxtuk\n4754 T60 oash.SnapShooter.deleteNamedSnapshot Deleting snapshot: eyxtuk (DONE)\n\n\n\nSo the test never waits for the snapshooter.deleteNamedSnapshot to finish. "
        },
        {
            "author": "Varun Thacker",
            "id": "comment-14013384",
            "date": "2014-05-30T07:34:35+0000",
            "content": "Hi Dawid,\n\nThanks for tracking that down. Yes that does seem to be the problem.\n\nLooks like we should not be deleting the directories in the finally block if it is a named snapshot. We delete in as part of the test. Attached a patch which changes that.\n\nAll of this is looking very fragile and looking at SOLR-6117 it does look like ReplicationHandler needs a overhaul. "
        },
        {
            "author": "Dawid Weiss",
            "id": "comment-14015231",
            "date": "2014-06-02T07:34:27+0000",
            "content": "There seem to be other problems with this test too, do you know how to fix these, Varun? Here's my comment on the dev list for this failure:\nhttp://jenkins.thetaphi.de/job/Lucene-Solr-trunk-Linux/10446/consoleText\n\nOk, I don't know what's going on but I know this sequence at the start\nof the test:\n\n    masterJetty.stop();\n    masterClient.shutdown();\n\ndoesn't do anything to stop existing snappuller; if you breakpoint\nafter the above you still get periodic calls to:\n\n> org.apache.solr.handler.SnapPuller.fetchLatestIndex(SnapPuller.java:311)\n> org.apache.solr.handler.ReplicationHandler.doFetch(ReplicationHandler.java:337)\n> org.apache.solr.handler.SnapPuller$1.run(SnapPuller.java:226)\n> java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n> java.util.concurrent.FutureTask.runAndReset(FutureTask.java:304)\n> java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:178)\n> java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n> java.lang.Thread.run(Thread.java:724) "
        },
        {
            "author": "Varun Thacker",
            "id": "comment-14015532",
            "date": "2014-06-02T16:42:50+0000",
            "content": "\n[junit4] FAILURE 3.05s J1 | TestReplicationHandler.doTestBackup <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: expected:<1> but was:<2>\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([227BE1FA9CDC834F:63F0C19FBB627000]:0)\n   [junit4]    > \tat org.apache.solr.handler.TestReplicationHandler.doTestBackup(TestReplicationHandler.java:1513)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n\n\n\nThe file names created are - q and qjxiogjoksvtiijnlhhm and the test conditon \n\n  if (name.startsWith(\"snapshot.\" + backupName)) { \n\n should have been equals.\n\nPatch which fixes this.\n\nUpdating the patch against branch_4x. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14016261",
            "date": "2014-06-03T06:21:15+0000",
            "content": "Commit 1599422 from Dawid Weiss in branch 'dev/trunk'\n[ https://svn.apache.org/r1599422 ]\n\nSOLR-6119: TestReplicationHandler attempts to remove open folders (and other fixes). "
        },
        {
            "author": "Dawid Weiss",
            "id": "comment-14016263",
            "date": "2014-06-03T06:22:22+0000",
            "content": "I've committed your latest patch, Varun, thanks. I still don't think SnapPuller should be working after \n\nmasterJetty.stop();\nmasterClient.shutdown();\n\n\nbut it may be my misunderstanding of Solr's infrastructure (I don't work with Solr much).\n\nThanks for help! "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14016264",
            "date": "2014-06-03T06:23:09+0000",
            "content": "Commit 1599423 from Dawid Weiss in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1599423 ]\n\nSOLR-6119: TestReplicationHandler attempts to remove open folders (and other fixes). "
        },
        {
            "author": "Varun Thacker",
            "id": "comment-14016279",
            "date": "2014-06-03T06:56:33+0000",
            "content": "Dawid, Thanks for committing the fixes. \n\nRegarding the SnapPuller issue, I put a breakpoint on on L149 and ran the test in debug mode from my ide. When I take a thread dump after the execution pauses I don't see any SnapPuller threads. Could you tell me how to reproduce it? "
        },
        {
            "author": "Dawid Weiss",
            "id": "comment-14016285",
            "date": "2014-06-03T07:11:47+0000",
            "content": "You don't see a stack trace because snap puller is invoked from a thread pool (executor service) so there's nothing in between calls. But if you put a sleep here:\n\nIndex: solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java\n===================================================================\n--- solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java      (revision 1599422)\n+++ solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java      (working copy)\n@@ -1329,6 +1329,9 @@\n     masterClient.shutdown();\n     masterClient = createNewSolrServer(masterJetty.getLocalPort());\n\n+    System.out.println(\"-- Sleeping...\");\n+    Thread.sleep(30000);\n+\n     nDocs--;\n     masterClient.deleteByQuery(\"*:*\");\n     for (int i = 0; i < nDocs; i++)\n\n\n\nThen you will see that it's working, even though it perhaps shouldn't?\n\n\n2830 T38 oash.SnapPuller.fetchLatestIndex ERROR Master at: http://127.0.0.1:55584/solr is not available. Index fetch failed. Exception: Server refused connection at: http://127.0.0.1:55584/solr\n3837 T38 oash.SnapPuller.fetchLatestIndex ERROR Master at: http://127.0.0.1:55584/solr is not available. Index fetch failed. Exception: Server refused connection at: http://127.0.0.1:55584/solr\n4840 T38 oash.SnapPuller.fetchLatestIndex ERROR Master at: http://127.0.0.1:55584/solr is not available. Index fetch failed. Exception: Server refused connection at: http://127.0.0.1:55584/solr\n5843 T38 oash.SnapPuller.fetchLatestIndex ERROR Master at: http://127.0.0.1:55584/solr is not available. Index fetch failed. Exception: Server refused connection at: http://127.0.0.1:55584/solr\n6846 T38 oash.SnapPuller.fetchLatestIndex ERROR Master at: http://127.0.0.1:55584/solr is not available. Index fetch failed. Exception: Server refused connection at: http://127.0.0.1:55584/solr\n\n\n\nThe executor service should be terminated (and is in SnapPuller#destroy()), but I don't think this code is invoked. In fact, I don't quite get this snippet of code in doTestBackup:\n\n    masterJetty.stop();\n    master.copyConfigFile(CONF_DIR + configFile,\n                          \"solrconfig.xml\");\n\n    masterJetty = createJetty(master);\n\n\nWhat is all this stopping/starting for? To restart jetty in a different config? If so, it should really be part of a per-test fixture rather than per-suite fixture. Just my two cents. "
        },
        {
            "author": "Varun Thacker",
            "id": "comment-14017024",
            "date": "2014-06-03T19:19:11+0000",
            "content": "Dawid, Thanks for the detailed explanation.\n\nLooks like the main problem is doTestBackup() is not a Replication test. All the other tests in this class use 2 Jettys ( masterJetty and slaveJetty ) and have replication tests. doTestBackup()  is testing index backups and deletes.\n\n\n2830 T38 oash.SnapPuller.fetchLatestIndex ERROR Master at: http://127.0.0.1:55584/solr is not \n\n\n\nThese are calls made from the slaveJetty trying to connect to the masterJetty. But in doTestBackup like many other tests in the suite we restart masterJetty after which slaveJetty is unable to connect to the old master anymore. The other tests stop and start the slaveJetty after the master has been restarted correctly thus the problem is not seen.\n\nSo there are two solutions - \n1. stop/start the slave jetty in doTestBackup() for it to connect to the new master jetty.\n2. break it out into another test class where slave jetty won't be required. "
        },
        {
            "author": "Dawid Weiss",
            "id": "comment-14017043",
            "date": "2014-06-03T19:38:32+0000",
            "content": "Thanks for clarifying, Varun. I think we can leave the test in the same class, but at least shut down the slave jetty and provide a single-line comment of what those shutdowns are for (in the code). I'm sure it'll be of help in the future for somebody browsing through the code! "
        },
        {
            "author": "Varun Thacker",
            "id": "comment-14017080",
            "date": "2014-06-03T20:18:21+0000",
            "content": "Patch against trunk which moves the test to a new class. I feel this is cleaner. \n\nI'll try out option 2 also "
        },
        {
            "author": "Varun Thacker",
            "id": "comment-14017097",
            "date": "2014-06-03T20:25:39+0000",
            "content": "Adding \n\nslaveJetty.stop()\n\n right before \n\nmasterJetty.stop()\n\n seems to work too. TestReplicationHandler passes and I don't see any log message like this anymore - \n\n\n2830 T38 oash.SnapPuller.fetchLatestIndex ERROR Master at: http://127.0.0.1:55584/solr is not available. Index fetch failed. Exception: Server refused connection at: http://127.0.0.1:55584/solr\n "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14017408",
            "date": "2014-06-04T06:07:35+0000",
            "content": "Commit 1599942 from Dawid Weiss in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1599942 ]\n\nSOLR-6119: backporting some replication handler fixes from trunk. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14017412",
            "date": "2014-06-04T06:11:31+0000",
            "content": "Commit 1599943 from Dawid Weiss in branch 'dev/trunk'\n[ https://svn.apache.org/r1599943 ]\n\nSOLR-6119: refactored doTestBackup into a separate class. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14017415",
            "date": "2014-06-04T06:17:24+0000",
            "content": "Commit 1599944 from Dawid Weiss in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1599944 ]\n\nSOLR-6119: backport of test split from trunk. "
        },
        {
            "author": "Varun Thacker",
            "id": "comment-14018715",
            "date": "2014-06-05T12:04:48+0000",
            "content": "Dawid, can we resolve this issue? "
        },
        {
            "author": "Dawid Weiss",
            "id": "comment-14018725",
            "date": "2014-06-05T12:18:01+0000",
            "content": "I think so, thanks! "
        }
    ]
}