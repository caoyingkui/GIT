{
    "id": "SOLR-579",
    "title": "Extend SimplePost with RecurseDirectories, threads, document encoding , number of docs per commit",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [],
        "components": [],
        "type": "New Feature",
        "priority": "Minor",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "-When specifying a directory, simplepost should read also the contents of a  directory\n\nNew options for the commandline (some only usefull in DATAMODE= files)\n-RECURSEDIRS\n        Recursive read of directories as an option, this is usefull for directories with a lot of files where the commandline expansion fails and xargs is too slow\n-DOCENCODING (default = system encoding or UTF-8) \n        For non utf-8 clients , simplepost should include a way to set the encoding of the documents posted\n-THREADSIZE (default =1 ) \n        For large volume posts, a threading pool makes sense , using JDK 1.5 Threadpool model\n-DOCSPERCOMMIT (default = 1)\n        Number of documents after which a commit is done, instead of only at the end\n\nNote: not to break the existing behaviour of the existing SimplePost tool (post.sh) might be used in scripts",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-12598407",
            "date": "2008-05-20T19:10:09+0000",
            "content": "FWIW: SimplePostTool isn't intended to really have ... \"features\". It exists purely to provided a cross platform way for people to index the data necessary for the tutorial.\n\ni'm -1 on enhancing it in ways that could encourage people to think of it as a general purpose reusable tool. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12598493",
            "date": "2008-05-20T21:47:05+0000",
            "content": "Same here, -1.  That would create the same situation that we sometimes see over in Lucene land where people use the Lucene demo and think that is Lucene, or they take the demo and want it to run as an out-of-the-box application for them. "
        },
        {
            "author": "Patrick Debois",
            "id": "comment-12598586",
            "date": "2008-05-21T08:22:56+0000",
            "content": "I can understand the point of view. It is indeed an example, still most \npeople I know prefer Solr because it provides so much power out of the box.\nLucene is a library, and that is IMHO different.\n\n-The encoding thing and parsing of a valid XML file are in the source \ncode as comment. If it were merely for the demo files, this would not \nmake sense either as they would always be correct.\n-Another use of the threads and commits would be usefull for a kind of \nbenchmarking tool? But the maybe we should name the tool SimpleBenchmark \n\n\n "
        },
        {
            "author": "Andrew Savory",
            "id": "comment-12598589",
            "date": "2008-05-21T08:46:27+0000",
            "content": "If everyone has to write their own \"ComplexPost\" tool in order to populate their instances of Solr, it would be a waste of time and effort. Isn't there a requirement for a general purpose reusable tool, and wouldn't it's natural home be the Solr project? (Anything that helps people in adopting solr is a good thing, after all.)\n\nPerhaps this could extend SimplePost and live as a tool alongside the python, ruby and solrj APIs? "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12598592",
            "date": "2008-05-21T09:00:52+0000",
            "content": "Andrew \u2013 Have you taken a look at DataImportHandler? http://wiki.apache.org/solr/DataImportHandler\n\nIt can consume DB as well as XML files and index them into Solr. "
        },
        {
            "author": "Patrick Debois",
            "id": "comment-12598600",
            "date": "2008-05-21T09:26:56+0000",
            "content": "Interesting work!\n\nAs far as I can see , the XML files can only be consumed over HTTP.\nXML reading from a filesystem does not seem to be included?\n\n\n "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12598605",
            "date": "2008-05-21T09:46:08+0000",
            "content": "Actually it does. The HttpDataSource and FileDataSource can be used interchangeably for XPathEntityProcessor.  "
        },
        {
            "author": "Andrew Savory",
            "id": "comment-12598611",
            "date": "2008-05-21T10:01:09+0000",
            "content": "The DataImportHandler looks useful, but as far as I can tell it seems to be pull-based, ie the solr server does the work (and therefore needs access to the filesystem on which the content resides). The nice thing about the SimplePost utility is that it can be run from anywhere, so long as it can reach solr via http. "
        },
        {
            "author": "Patrick Debois",
            "id": "comment-12598617",
            "date": "2008-05-21T10:46:56+0000",
            "content": " From the code, i see it can do the recursion and the encoding.\n\nThat leaves the threading of reading files and the max documents per commit?\n\n\n "
        },
        {
            "author": "Patrick Debois",
            "id": "comment-12598618",
            "date": "2008-05-21T11:02:56+0000",
            "content": "I agree with this, and I think that the 'complex' post tool, would be \nsomething like a commandline DataImportHandler tool.\n\nBoth could share the same code and instead of reading params from a \nconfig file, they could be provided as commandline arguments.\n\n\n\n "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12598708",
            "date": "2008-05-21T16:40:31+0000",
            "content": "I agree it's handy to have a command-line tool, but we also have to be careful about what we add, where we add it, and how we add it, since in the end we tend to be the ones answering people's questions on the ML and providing free support.  If you guys have a patch, we could at least have a look and see if it makes sense.   "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12598737",
            "date": "2008-05-21T18:09:51+0000",
            "content": "If everyone has to write their own \"ComplexPost\" tool in order to populate their instances of Solr, it would be a waste of time and effort. Isn't there a requirement for a general purpose reusable tool, and wouldn't it's natural home be the Solr project?\n\nunless people just happen to have their data lying arround in XML docs that match the Solr XmlUpdateHandler syntax, then yes, people are going to have to write their own code to import their data \u2013 no matter how robust SimplePostTool may be, they need something to convert that source data into messages to Solr.\n\nIf people want to use java, SolrJ provides a much better way to do this for 99% of the users in the world then SimplePostTool, if people want to use another language, then the client libraries for those languages (some of which already exist, and some of which need to be improved before  they are as useful as SolrJ) are still a better option then saying \"convert your data to this XML format, dump it in a directory, and then use SimplePostTool.\n "
        },
        {
            "author": "Andrew Savory",
            "id": "comment-12598948",
            "date": "2008-05-22T08:56:40+0000",
            "content": "Hoss,\n\nYou're right - people probably won't have XML docs already in solr format, I had forgotten that solr isn't fed the original content. So we probably need more use case explanations before understanding whether or not there's justification in extending the SimplePost tool. "
        },
        {
            "author": "Patrick Debois",
            "id": "comment-12599778",
            "date": "2008-05-26T07:50:56+0000",
            "content": "\nI don't know it this is a use case that will convince you but this is \nhow we are using it.\n\n\n\tWe have a legacy system that we export every day\n\twith a simple perl script this can be converted into solr.\n\tthen we use the simpleposttool to update our solr repository\n\tthe application only has a search interface\n\n\n\n\nWith the simplepost and the XML files in between, our partner did not \nhave learn the solr-API or any java programming or any programming\nOur sysadmin was able to perfectly script this.\nNo additional interface for uploading data was needed.\n\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12603960",
            "date": "2008-06-10T18:22:10+0000",
            "content": "with a simple perl script this can be converted into solr.\n\nshouldn't it be just a easy for that perl script to POST the data to Solr as it is to write it to disk and then use SimplePostTool? "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13581742",
            "date": "2013-02-19T23:22:10+0000",
            "content": "Closing old issue, please re-open if necessary. \nPS: Recursive and encoding already implemented. Discussions ongoing elsewhere whether to add threading or to refactor into a Simple and a ComplexPostTool  "
        }
    ]
}