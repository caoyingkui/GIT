{
    "id": "SOLR-9657",
    "title": "Create a new TemplateUpdateRequestProcessorFactory",
    "details": {
        "components": [],
        "type": "New Feature",
        "labels": "",
        "fix_versions": [
            "6.3",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Unlike other URPs, this will operate on request parameters\n\nexample:\n\nprocessor=Template&Template.field=fname:${somefield}some_string${someotherfield}\n\n\nThe actual name of the class is TemplateUpdateProcessorFactory and it is possible to optionally drop the UpdateProcessorfactory part.  The Template.field specifies a field name as well as a template. The Template.field parameter is multivalued , so , it is possible to add multiple fields or a multivalued field with same name",
    "attachments": {
        "SOLR-9657.patch": "https://issues.apache.org/jira/secure/attachment/12833918/SOLR-9657.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-10-19T03:16:04+0000",
            "author": "David Smiley",
            "content": "This is nice; it'd come in handy for \"lat,lon\".  Can you add at least a one-liner javadoc to the class?  And I like that this can work off of Solr request parameters but why doesn't it also work like all the other ones work \u2013 by predefined configuration in solrconfig.xml?  I wonder if it's feasible for the URP processing subsystem to be refactored such that all URPs could operate in both modes, similarly to how request handlers can be.  It'd be great to not have this inconsistency. ",
            "id": "comment-15587518"
        },
        {
            "date": "2016-10-19T03:20:20+0000",
            "author": "Noble Paul",
            "content": "I wonder if it's feasible for the URP processing subsystem to be refactored such that all URPs could operate in both modes, similarly to how request handlers can be\n\nThat's the plan ",
            "id": "comment-15587525"
        },
        {
            "date": "2016-10-19T04:38:25+0000",
            "author": "Ishan Chattopadhyaya",
            "content": "+1 to this URP (since it takes request parameters for fields). ",
            "id": "comment-15587655"
        },
        {
            "date": "2016-10-19T05:03:50+0000",
            "author": "Noble Paul",
            "content": "The plan is to have automatic request parameter support for all URPs (wherever possible)  ",
            "id": "comment-15587696"
        },
        {
            "date": "2016-10-19T05:34:23+0000",
            "author": "ASF subversion and git services",
            "content": "Commit c2e031add3d5db2c4e89a5a92afd7bb8cc1f481f in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c2e031a ]\n\nSOLR-9657: New TemplateUpdateProcessorFactory added ",
            "id": "comment-15587738"
        },
        {
            "date": "2016-10-19T11:24:22+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 2fc29c1cd5320322a434ca7f820b69d80536aa5a in lucene-solr's branch refs/heads/branch_6x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2fc29c1 ]\n\nSOLR-9657: New TemplateUpdateProcessorFactory added ",
            "id": "comment-15588477"
        },
        {
            "date": "2016-10-19T11:24:34+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 180efba9b59190e6b44b1a2428e40617c52bb74c in lucene-solr's branch refs/heads/branch_6x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=180efba ]\n\nSOLR-9657: New TemplateUpdateProcessorFactory added ",
            "id": "comment-15588479"
        },
        {
            "date": "2016-10-19T11:28:37+0000",
            "author": "Noble Paul",
            "content": "Is there DIH contrib dependency here?   \n\nThe code is moved from DIH to core so that the same code can be used in both places. So, the answer is No.  ",
            "id": "comment-15588486"
        },
        {
            "date": "2016-10-19T11:57:03+0000",
            "author": "David Smiley",
            "content": "Noble Paul did you disagree with my feedback on adding at least a one-liner class javadoc?  It feels rude to me to have simultaneously committed it without it and not responding. ",
            "id": "comment-15588547"
        },
        {
            "date": "2016-10-19T12:16:29+0000",
            "author": "Noble Paul",
            "content": "Sorry about that David Smiley , I should have responded to your comment and I missed it. I'm fine with adding javadocs. Just that it was not clear as to where you wanted it.\n\nIs it to help a user who would use this URP? How many users of Solr are java users  and are likely to use javadocs. Most users rely on the the ref guide to learn how to use a component. Honestly, a one liner is not really useful. You really need a few examples at least to learn to use it.\n\nIs it to help the Solr developer? I agree with you.\n\nThat being said . I'm not yet resolving this. There was a concern raised by Erik hatcher about the variable naming ",
            "id": "comment-15588598"
        },
        {
            "date": "2016-10-19T12:29:09+0000",
            "author": "David Smiley",
            "content": "Fair point RE refguide.  Nevertheless, IMO as a matter of universal good developer practices I think every top-level non-test class ought to have at least one sentence said about it, aimed at any other developer (whoever they may be) stumbling over it \u2013 either via looking at the actual source, or via docs pop-up in their IDE.  IMO it's a shame the Solr codebase has gotten to the point that so little has such a bare minimum.  For this one I'll write it for you; feel free to edit:  \"Adds new fields to documents based on a template pattern specified via template.field request parameters (multi-valued).\"\n\nAlexandre Rafalovitch do you think this is at all useful?  I know you work on adding docs to URPs 'n things. ",
            "id": "comment-15588626"
        },
        {
            "date": "2016-10-19T14:06:16+0000",
            "author": "Alexandre Rafalovitch",
            "content": "I absolutely think we need to have the Javadoc. I am biased of course, as that's what's used for generating http://www.solr-start.com/info/update-request-processors/ . But also, it is a way to keep the documentation with code, when the changes are made.\n\nAnd as to whether the documentation is required at all, I had to look at the patch to see what it actually does, the description of JIRA was not clear enough. Specifically *operate on request parameters\" I read that perhaps something gets put back into parameter map.\n\nAs an aside, once this is finished, we can probably resolve SOLR-9650 too. ",
            "id": "comment-15588868"
        },
        {
            "date": "2016-10-19T14:14:55+0000",
            "author": "Noble Paul",
            "content": "Relying on javadocs for ref guide is not a common practice. The purpose of javadocs is different . It makes little sense when a feature involves multiple source files. Javadocs must be used to communicate to fellow developers  ",
            "id": "comment-15588888"
        },
        {
            "date": "2016-10-19T14:24:52+0000",
            "author": "Alexandre Rafalovitch",
            "content": "Relying on Javadocs and other code-comments for multiple various things is a common practice out there. Including - as a feature request - for our own code (see SOLR-555 by Hoss Man). ",
            "id": "comment-15588917"
        },
        {
            "date": "2016-10-19T14:37:04+0000",
            "author": "Noble Paul",
            "content": "That's going nowhere . In v2 api , we have documentation added to specification files. That's going to be the way forward ",
            "id": "comment-15588945"
        },
        {
            "date": "2016-10-19T14:55:45+0000",
            "author": "Alexandre Rafalovitch",
            "content": "The JIRA has not gone very far because it was hard to do (I just updated my own findings there). solr-start, based on similar principles is up and running, serving user needs and getting good views. And it is finding components that were missed both by Reference Guide AND Release Notes, exactly because it relies on shipped code alone. And, things like cross-reference to usage example, is not something that Reference Guide can maintain by hand with reasonable effort.\n\nThe V2 API might be the magical unicorn when it actually lands, but - as my own comments there indicate - I could not make heads or tails out of it in a meanwhile. So, let's focus on reality, especially the reality for 6.x. \n\nAs open-source Solr developers, we are combining 3 roles that are often separated in commercial organizations: Developers of new - blue-sky - features (master), maintainers and developers of the current features (6.x currently), and tech-support for whatever was already released (6.x.y, 5.x.y). Your suggested approach is about blue-sky which is great, but not sufficient. Let's just take care of these other aspects too, so other people don't have to. ",
            "id": "comment-15588981"
        },
        {
            "date": "2016-10-19T15:34:45+0000",
            "author": "Alan Woodward",
            "content": "I think this is causing test failures?  https://jenkins.thetaphi.de/job/Lucene-Solr-6.x-Linux/1987/ ",
            "id": "comment-15589063"
        },
        {
            "date": "2016-10-19T15:53:17+0000",
            "author": "Noble Paul",
            "content": "Possible. I'll debug it ",
            "id": "comment-15589104"
        },
        {
            "date": "2016-10-19T19:56:43+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 6893595f340b748a9c5e5c3884704e71275deab4 in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6893595 ]\n\nSOLR-9657: Addressing test failures ",
            "id": "comment-15589699"
        },
        {
            "date": "2016-10-19T19:58:40+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 0ab908694ef503ea45b3a59ccd3707b54978fd5f in lucene-solr's branch refs/heads/branch_6x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0ab9086 ]\n\nSOLR-9657: Addressing test failures ",
            "id": "comment-15589703"
        },
        {
            "date": "2016-10-20T14:37:30+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 127bf9f772468cbc94478ad67d54652001b175e0 in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=127bf9f ]\n\nSOLR-9657: Use cache for templates ",
            "id": "comment-15591979"
        },
        {
            "date": "2016-10-20T14:41:13+0000",
            "author": "ASF subversion and git services",
            "content": "Commit b1e2d02ec3e2d87bd406190f1600dccd679901f9 in lucene-solr's branch refs/heads/branch_6x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b1e2d02 ]\n\nSOLR-9657: Use cache for templates ",
            "id": "comment-15591993"
        },
        {
            "date": "2016-10-20T15:04:48+0000",
            "author": "Alexandre Rafalovitch",
            "content": "The Javadoc comment format is not correct for the class and does not build the description into the resulting Javadoc.\n\nBasically, you have to use the correct multi-line comment delimiters, as per the rules. Or see the parent or any other class that have them. ",
            "id": "comment-15592065"
        },
        {
            "date": "2016-10-25T19:44:04+0000",
            "author": "ASF subversion and git services",
            "content": "Commit fdb4dd3b322a517ff7f9df2ef64001120e89854c in lucene-solr's branch refs/heads/branch_6x from Alexandre Rafalovitch\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=fdb4dd3 ]\n\nSOLR-9657: Fixed Javadocs and added example ",
            "id": "comment-15606271"
        },
        {
            "date": "2016-10-25T19:46:50+0000",
            "author": "Alexandre Rafalovitch",
            "content": "This matches commit 9d692cde53c25230d6db2663816f313cf356535b on the master that - for some reasons - did not link up with Jira. ",
            "id": "comment-15606278"
        },
        {
            "date": "2016-11-09T08:38:15+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Closing after 6.3.0 release. ",
            "id": "comment-15650273"
        }
    ]
}