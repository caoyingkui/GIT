{
    "id": "LUCENE-5906",
    "title": "Use Files.delete instead of File.delete + made up exception",
    "details": {
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [],
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "5.0",
            "6.0"
        ]
    },
    "description": "We are on java7, if we cannot delete a file, this one returns a real exception as to why.",
    "attachments": {
        "LUCENE-5906.patch": "https://issues.apache.org/jira/secure/attachment/12664381/LUCENE-5906.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14110664",
            "author": "Robert Muir",
            "content": "start of a patch. i just fixed FSDirectory. We should probably look for more places. ",
            "date": "2014-08-26T12:45:37+0000"
        },
        {
            "id": "comment-14110782",
            "author": "Uwe Schindler",
            "content": "Yeah, we should fix this!\n\nIn the future we can also start to cut over everything to Path, because we can use \"virtual filesystems\" after that (e.g. put an index into a readonly ZIP file and let FSDirectory open it from inside the ZIP file using a Zip Filesystem Path - this may be useful for some - maybe...).\n\nIn my opinion, we should also add the \"old\" methods to forbidden-apis. And much later put whole \"java.io.File\" into forbidden! ",
            "date": "2014-08-26T15:00:02+0000"
        },
        {
            "id": "comment-14120738",
            "author": "Robert Muir",
            "content": "Updated patch, with full cutover to Files.delete() (and File.delete() banned in forbidden apis).\n\nThis forced me to review all code deleting files, and I had to plug some leaks in suggesters, hunspell, offline sorter.\n\nAdditionally to prevent such leaks, i had to add some IOUtils methods like deleteFilesIgnoringExceptions and so on. \n\nI moved TestUtil.rm to IOUtils, and fixed its exception messaging to return the actual exception messages for each file it couldnt delete. This is now used several places in source too (that had their own duplicate \"rm\" methods).\n\nI think we should do this as a step, because deleting files is about the most dangerous thing our code can do. So we really need real exceptions here in case something goes bad.\n\nLater we should investigate what Uwe suggests (Path api). This would be good to look at for lucene 5, but this patch is heavy enough. ",
            "date": "2014-09-04T00:12:39+0000"
        },
        {
            "id": "comment-14121153",
            "author": "Michael McCandless",
            "content": "Wow, this is great: +1 to commit.  Crazy all the places in our sources that we had for deleting files... ",
            "date": "2014-09-04T09:11:45+0000"
        },
        {
            "id": "comment-14121218",
            "author": "Uwe Schindler",
            "content": "Maybe we should refactor the IOUtils a bit and provide varargs variants that simply delegate to Arrays.asList(varargs).\n\nWe should also cleanup other code duplication in IOUtils and solely use asList()! ",
            "date": "2014-09-04T10:28:33+0000"
        },
        {
            "id": "comment-14121225",
            "author": "Robert Muir",
            "content": "Yeah, lemme try to fix that.\n\nAt first, when looking at lucene-core, i didnt think even IOUtils methods for deleting were justified. Then i saw how many places were doing this, but tried to keep the minimal set here. And you are right, i didnt want to duplicate with varargs. But we should just use asList to avoid this (in close, too).\n ",
            "date": "2014-09-04T10:39:02+0000"
        },
        {
            "id": "comment-14121241",
            "author": "Robert Muir",
            "content": "Updated patch removing Arrays.asList/singleton stuff with varargs sugar instead. ",
            "date": "2014-09-04T11:09:41+0000"
        },
        {
            "id": "comment-14121244",
            "author": "Uwe Schindler",
            "content": "+1, thanks! ",
            "date": "2014-09-04T11:15:41+0000"
        },
        {
            "id": "comment-14121344",
            "author": "Uwe Schindler",
            "content": "For me Lucene tests worked in windows.\n\nSolr failed one test:\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestArbitraryIndexDir -Dtests.method=testLoadNewIndexDir -Dtests.seed=269DADB350875937 -Dtests.directory=NIOFSDirectory -Dtests.locale=ro_RO -Dtests.timezone=PST -Dtests.file.encoding=UTF-8\n   [junit4] ERROR   1.55s J1 | TestArbitraryIndexDir.testLoadNewIndexDir <<<\n   [junit4]    > Throwable #1: java.io.IOException: Could not remove the following files (in the order of attempts):\n   [junit4]    >    C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr1\\solr\\build\\solr-core\\test\\J1\\.\\temp\\solr.core.TestArbitraryIndexDir-269DADB350875937-001\\tempDir-001\\index_temp: C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr1\\solr\\build\\solr-core\\test\\J1\\.\\temp\\solr.core.TestArbitraryIndexDir-269DADB350875937-001\\tempDir-001\\index_temp\n   [junit4]    >        at __randomizedtesting.SeedInfo.seed([269DADB350875937:CFC7168BCE1EC99F]:0)\n   [junit4]    >        at org.apache.lucene.util.IOUtils.rm(IOUtils.java:315)\n   [junit4]    >        at org.apache.solr.core.TestArbitraryIndexDir.testLoadNewIndexDir(TestArbitraryIndexDir.java:135)\n   [junit4]    >        at java.lang.Thread.run(Thread.java:745)\n\n ",
            "date": "2014-09-04T13:41:50+0000"
        },
        {
            "id": "comment-14121363",
            "author": "Uwe Schindler",
            "content": "This reproduces, it is not caused by virus scanner!\n\nThe problem here is two:\n\n\tthe Exception message is broken\n\tthe test is broken on windows (should reproduce on jenkins)\n\n ",
            "date": "2014-09-04T13:48:50+0000"
        },
        {
            "id": "comment-14121364",
            "author": "Robert Muir",
            "content": "Previously the test just ignored the return value from delete.\n\nMaybe it doesn't need to delete at all. But i saw this newDir created as:\n\nFile newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n\n\n\nSo I was afraid to remove the delete() (and replaced it with a picky one), because i don't know if this directory is a child of one called from LuceneTestCase (which is guaranteed to be cleaned up correctly) or instead created in some arbitrary way. ",
            "date": "2014-09-04T13:50:29+0000"
        },
        {
            "id": "comment-14121381",
            "author": "Uwe Schindler",
            "content": "The harrness \"h\" should create a new autocleaned directory. I think in this test just one of the file in there keeps open. ",
            "date": "2014-09-04T14:06:17+0000"
        },
        {
            "id": "comment-14121383",
            "author": "Robert Muir",
            "content": "I removed this delete (its unnecessary, if it wants to do it, should be in tearDown anyway, and test cleanup will take care correctly).\n\nI also fixed exception messages for IOUtils.rm, thanks! ",
            "date": "2014-09-04T14:07:58+0000"
        },
        {
            "id": "comment-14121404",
            "author": "Uwe Schindler",
            "content": "New patch fails in datacorrumpterhandler:\n\n\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestNonWritablePersistFile -Dtests.method=testNonWritablePersistFile -Dtests.seed=CA8991891E1876AB -Dtests.locale=mt -Dtests.timezone=Asia/Tokyo -Dtests.file.encoding=UTF-8\n   [junit4] ERROR   0.55s J2 | TestNonWritablePersistFile.testNonWritablePersistFile <<<\n   [junit4]    > Throwable #1: java.nio.file.AccessDeniedException: C:\\Users\\Uwe Schindler\\Projects\\lucene\\trunk-lusolr1\\solr\\build\\contrib\\solr-dataimporthandler\\test\\J2\\.\\temp\\solr.handler.dataimport.TestNonWritablePersistFile-CA8991891E1876AB-001\\tempDir-001\\collection1\\conf\\dataimport.properties\n   [junit4]    >        at __randomizedtesting.SeedInfo.seed([CA8991891E1876AB:7C810C466217C87E]:0)\n   [junit4]    >        at sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:83)\n   [junit4]    >        at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:97)\n   [junit4]    >        at sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:102)\n   [junit4]    >        at sun.nio.fs.WindowsFileSystemProvider.implDelete(WindowsFileSystemProvider.java:269)\n   [junit4]    >        at sun.nio.fs.AbstractFileSystemProvider.delete(AbstractFileSystemProvider.java:103)\n   [junit4]    >        at java.nio.file.Files.delete(Files.java:1079)\n   [junit4]    >        at org.apache.solr.handler.dataimport.TestNonWritablePersistFile.testNonWritablePersistFile(TestNonWritablePersistFile.java:96)\n   [junit4]    >        at java.lang.Thread.run(Thread.java:745)\n\n ",
            "date": "2014-09-04T14:24:15+0000"
        },
        {
            "id": "comment-14121406",
            "author": "Robert Muir",
            "content": "Updated patch, same issue as the other one. Thanks Uwe ",
            "date": "2014-09-04T14:26:33+0000"
        },
        {
            "id": "comment-14121447",
            "author": "Uwe Schindler",
            "content": "Hi the patch did not pass, too. The problem here is simple: the file was made read-only, so cannot be deleted. You need to add f.setWritable(true); at the end of test.\n\nOtherwise it passes on windows, I ran the whole test suite ignoring failures and this was the only one broken. ",
            "date": "2014-09-04T15:09:00+0000"
        },
        {
            "id": "comment-14121456",
            "author": "Robert Muir",
            "content": "Thanks for debugging this Uwe! I'll add setWriteable and commit. ",
            "date": "2014-09-04T15:27:26+0000"
        },
        {
            "id": "comment-14121491",
            "author": "ASF subversion and git services",
            "content": "Commit 1622506 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1622506 ]\n\nLUCENE-5906: Use Files.delete everywhere instead of File.delete ",
            "date": "2014-09-04T15:56:26+0000"
        },
        {
            "id": "comment-14121531",
            "author": "ASF subversion and git services",
            "content": "Commit 1622511 from Robert Muir in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1622511 ]\n\nLUCENE-5906: Use Files.delete everywhere instead of File.delete ",
            "date": "2014-09-04T16:33:39+0000"
        },
        {
            "id": "comment-14121532",
            "author": "Robert Muir",
            "content": "Thanks Uwe for all the testing and debugging on windows! ",
            "date": "2014-09-04T16:34:28+0000"
        },
        {
            "id": "comment-14122084",
            "author": "Hoss Man",
            "content": "Looks like a backport problem...\n\n\n-check-forbidden-all:\n[forbidden-apis] Reading bundled API signatures: jdk-unsafe-1.7\n[forbidden-apis] Reading bundled API signatures: jdk-deprecated-1.7\n[forbidden-apis] Reading API signatures: /home/hossman/lucene/4x_dev/lucene/tools/forbiddenApis/base.txt\n[forbidden-apis] Loading classes to check...\n[forbidden-apis] Scanning for API signatures and dependencies...\n[forbidden-apis] Forbidden method invocation: java.io.File#delete() [use Files.delete for real exception, IOUtils.deleteFilesIgnoringExceptions if you dont care]\n[forbidden-apis]   in org.apache.lucene.benchmark.byTask.utils.FileUtils (FileUtils.java:41)\n[forbidden-apis] Forbidden method invocation: java.io.File#delete() [use Files.delete for real exception, IOUtils.deleteFilesIgnoringExceptions if you dont care]\n[forbidden-apis]   in org.apache.lucene.benchmark.byTask.utils.FileUtils (FileUtils.java:51)\n[forbidden-apis] Scanned 210 (and 445 related) class file(s) for forbidden API invocations (in 0.09s), 2 error(s).\n\n\n\norg.apache.lucene.benchmark.byTask.utils.FileUtils doesn't seem to exist in trunk, so it was probably overlooked in the original patch & backport ",
            "date": "2014-09-04T22:15:39+0000"
        },
        {
            "id": "comment-14122091",
            "author": "Hoss Man",
            "content": "bah ... somehow i have an inconsistent checkout?\n\nsorry for the noise ",
            "date": "2014-09-04T22:19:42+0000"
        },
        {
            "id": "comment-14332524",
            "author": "Anshum Gupta",
            "content": "Bulk close after 5.0 release. ",
            "date": "2015-02-23T05:00:29+0000"
        }
    ]
}