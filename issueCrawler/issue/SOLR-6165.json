{
    "id": "SOLR-6165",
    "title": "DataImportHandler writes BigInteger and BigDecimal as-is which causes errors in SolrCloud replication",
    "details": {
        "affect_versions": "4.8",
        "status": "Resolved",
        "fix_versions": [
            "4.10",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "we are trying to migrate to 4.8 from 4.1, after setting up the new solr cloud when we try to do a dataimport using the DataimportHandler we have issues from replication. following is the error we are getting in the log. The field from the db is numeric field and in solr schema file its been declared as double.\n\n603215 [qtp280884709-15] INFO org.apache.solr.update.processor.LogUpdateProcessor ? [locations] webapp=/solr path=/update params=\n{update.distrib=FROMLEADER&distrib.from=http://servername:8983/solr/locations/&wt=javabin&version=2}\n {} 0 0\n603216 [qtp280884709-15] ERROR org.apache.solr.core.SolrCore ? org.apache.solr.common.SolrException: ERROR: [doc=SALT LAKE CITY-UT-84127] Error adding field 'city_lat'='java.math.BigDecimal:40.7607793000' msg=For input string: \"java.math.BigDecimal:40.7607793000\"\nat org.apache.solr.update.DocumentBuilder.toDocument(DocumentBuilder.java:167)\nat org.apache.solr.update.AddUpdateCommand.getLuceneDocument(AddUpdateCommand.java:77)\nat org.apache.solr.update.DirectUpdateHandler2.addDoc0(DirectUpdateHandler2.java:234)\nat org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:160)\nat org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:69)\nat org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:51)\nat org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalAdd(DistributedUpdateProcessor.java:703)\nat org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:857)\nat org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:556)\nat org.apache.solr.update.processor.LogUpdateProcessor.processAdd(LogUpdateProcessorFactory.java:100)\nat org.apache.solr.handler.loader.JavabinLoader$1.update(JavabinLoader.java:96)\nat org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec$1.readOuterMostDocIterator(JavaBinUpdateRequestCodec.java:166)\nat org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec$1.readIterator(JavaBinUpdateRequestCodec.java:136)\nat org.apache.solr.common.util.JavaBinCodec.readVal(JavaBinCodec.java:225)\nat org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec$1.readNamedList(JavaBinUpdateRequestCodec.java:121)\nat org.apache.solr.common.util.JavaBinCodec.readVal(JavaBinCodec.java:190)\nat org.apache.solr.common.util.JavaBinCodec.unmarshal(JavaBinCodec.java:116)\nat org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec.unmarshal(JavaBinUpdateRequestCodec.java:173)\nat org.apache.solr.handler.loader.JavabinLoader.parseAndLoadDocs(JavabinLoader.java:106)\nat org.apache.solr.handler.loader.JavabinLoader.load(JavabinLoader.java:58)\nat org.apache.solr.handler.UpdateRequestHandler$1.load(UpdateRequestHandler.java:92)\nat org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:74)\nat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\nat org.apache.solr.core.SolrCore.execute(SolrCore.java:1916)\nat org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:780)\nat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:427)\nat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:217)\nat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)\nat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)\nat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\nat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)\nat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\nat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)\nat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)\nat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\nat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)\nat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\nat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)\nat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)\nat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\nat org.eclipse.jetty.server.Server.handle(Server.java:368)\nat org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)\nat org.eclipse.jetty.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:53)\nat org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:953)\nat org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1014)\nat org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:953)\nat org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)\nat org.eclipse.jetty.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:72)\nat org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:264)\nat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\nat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\nat java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.NumberFormatException: For input string: \"java.math.BigDecimal:40.7607793000\"\nat sun.misc.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2043)\nat sun.misc.FloatingDecimal.parseDouble(FloatingDecimal.java:110)\nat java.lang.Double.parseDouble(Double.java:538)\nat org.apache.solr.schema.TrieField.createField(TrieField.java:615)\nat org.apache.solr.schema.TrieField.createFields(TrieField.java:660)\nat org.apache.solr.update.DocumentBuilder.addField(DocumentBuilder.java:47)\nat org.apache.solr.update.DocumentBuilder.toDocument(DocumentBuilder.java:118)\n... 51 more",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "anand sengamalai",
            "id": "comment-14029803",
            "date": "2014-06-12T21:04:07+0000",
            "content": "our setup works fine with solr 4.1, the same query and schema does not work in 4.8, i get the above mentioned exception in the cloud setup.\n\nHow ever i downloaded the source for solr 4.8 and modified the org.apache.solr.handler.dataimport.JdbcDataSource and modified the fuction private Map<String, Object> getARow() ;\nfor BigDecimal and BigInteger i return them as String and its working fine.  Just want o submit this as a workaround for people migrating like us.\n\n\nif (!convertType) {\n// Use underlying database's type information\n//since dataimport does not want to support bigdecimal and biginteger\nif((resultSet.getObject(colName) instanceof java.math.BigDecimal)||\n(resultSet.getObject(colName) instanceof java.math.BigInteger))\n{\nresult.put(colName,resultSet.getObject(colName).toString());\n}\nelse\n{\nresult.put(colName, resultSet.getObject(colName));\n}\ncontinue;\n} "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14040059",
            "date": "2014-06-22T07:48:55+0000",
            "content": "Commit 1604543 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1604543 ]\n\nSOLR-6165: DataImportHandler should write BigInteger and BigDecimal values as strings "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14040060",
            "date": "2014-06-22T07:49:25+0000",
            "content": "Commit 1604544 from shalin@apache.org in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1604544 ]\n\nSOLR-6165: DataImportHandler should write BigInteger and BigDecimal values as strings "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14040061",
            "date": "2014-06-22T07:50:22+0000",
            "content": "Thanks Anand! "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14067743",
            "date": "2014-07-20T01:01:03+0000",
            "content": "Commit 1611985 from Erik Hatcher in branch 'dev/trunk'\n[ https://svn.apache.org/r1611985 ]\n\nSOLR-6165: Add tests for convertType and BigDecimal implicit conversion "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14067748",
            "date": "2014-07-20T01:09:28+0000",
            "content": "Commit 1611987 from Erik Hatcher in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1611987 ]\n\nSOLR-6165: Add tests for convertType and BigDecimal implicit conversion "
        }
    ]
}