{
    "id": "LUCENE-2795",
    "title": "Genericize DirectIOLinuxDir -> UnixDir",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "core/store"
        ],
        "type": "Improvement",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Today DirectIOLinuxDir is tricky/dangerous to use, because you only want to use it for indexWriter and not IndexReader (searching).  It's a trap.\n\nBut, once we do LUCENE-2793, we can make it fully general purpose because then a single native Dir impl can be used.\n\nI'd also like to make it generic to other Unices, if we can, so that it becomes UnixDirectory.",
    "attachments": {
        "LUCENE-2795.patch": "https://issues.apache.org/jira/secure/attachment/12485353/LUCENE-2795.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-01-10T19:58:21+0000",
            "content": "https://issues.apache.org/jira/browse/LUCENE-2500?focusedCommentId=12979588&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12979588 has details on what flags to pass to OS X to bypass its buffer cache... ",
            "author": "Michael McCandless",
            "id": "comment-12979719"
        },
        {
            "date": "2011-04-23T23:25:10+0000",
            "content": "It looks like recent Linux kernels have better behavior with SEQUENTIAL flag: http://blog.mikemccandless.com/2010/06/lucene-and-fadvisemadvise.html?showComment=1303235497682#c2572106601600642254\n\nIf possible we should test on kernels after that patch was merged to see if passing SEQUENTIAL for merging prevents eviction of hot pages being used for searching... ",
            "author": "Michael McCandless",
            "id": "comment-13023614"
        },
        {
            "date": "2011-04-24T07:32:40+0000",
            "content": "This is great for merging . Does IndexReader use the SEQUENTIAL flag for accessing the index ? ",
            "author": "Varun Thacker",
            "id": "comment-13023642"
        },
        {
            "date": "2011-04-24T15:26:35+0000",
            "content": "Today, we don't use any of these flags for searching/merging (that's what this issue and LUCENE-2793 will fix).\n\nUnfortunately, it looks like the best IO flags are going to vary depending on kernel version.  The above patch was applied in kernel 2.6.29, and causes SEQUENTIAL to act like NOREUSE, and so we should use SEQUENTIAL for merging but not for searching, I think?  We should experiment and see...\n\nReally, for searching we want the \"old\" SEQUENTIAL behavior (ie, do aggressive readahead, but use the normal eviction policy since that term may be searched on again).\n\nHopefully NativeUnixDir will take care of all these os/kernel-version dependent flags for you. ",
            "author": "Michael McCandless",
            "id": "comment-13024631"
        },
        {
            "date": "2011-07-06T00:27:08+0000",
            "content": "Initial Patch..\n\nThis will apply to the IOContext branch. This patch also contains some uncommitted code from LUCENE-2793. \n\nIn NativePosixUtil.cpp the open_direct method where I use fcntl() for OS X could not be compiled on my machine because of the OS specific F_NOCACHE flag used. Let me know if the usage is correct.  ",
            "author": "Varun Thacker",
            "id": "comment-13060214"
        },
        {
            "date": "2011-07-06T00:33:25+0000",
            "content": "Hey Varun - saw you asked for someone with a mac to run some code for you in IRC but you popped off before I saw - what do you need? Just apply the patch and run the tests? ",
            "author": "Mark Miller",
            "id": "comment-13060216"
        },
        {
            "date": "2011-07-06T07:16:31+0000",
            "content": "\nHey Varun - saw you asked for someone with a mac to run some code for you in IRC but you popped off before I saw - what do you need? Just apply the patch and run the tests? \n\nThis patch will apply to the LUCENE2793 branch. Othewise in file : lucene/contrib/misc/src/java/org/apache/lucene/store/NativePosixUtil.cpp after line 117 inside the \"if\" add this line - \n\n fcntl(fd, F_NOCACHE, 1); \n\n\nAnd then by running \n\nant build-native-unix\n\n from the /contrib/misc folder to check if it compiles successfully. \n\nThanks. ",
            "author": "Varun Thacker",
            "id": "comment-13060331"
        },
        {
            "date": "2011-07-07T18:35:16+0000",
            "content": "the open_direct, posix_fadvise function in onlylinux.h remains the same. \n\nIn onlybsd.h open_direct, posix_fadvise are the same too except that the O_NOATIME flag is not present. \n\nIn onlyosx the open_direct is implemented in a different way. \n\nAlso I have added a open_normal function to all of the headers which will be used in case the IOContext in not a MERGE. ",
            "author": "Varun Thacker",
            "id": "comment-13061476"
        },
        {
            "date": "2011-07-17T07:29:22+0000",
            "content": "I'm not sure this is the correct/best way to this.  ",
            "author": "Varun Thacker",
            "id": "comment-13066597"
        },
        {
            "date": "2011-07-17T11:51:51+0000",
            "content": "OK, so now we create a FileDescriptor obj in C and return that, by\nsetting the fd field directly?  This is because fadvise/posix_fadvise\non an already opened fd isn't portable enough?  Ie we must open the\nfile w/ the flags, instead, for some OS's?\n\nI don't think you need posix_fadvise.h at all?  Can't you just\n#include the right headers per OS, inside each OS's ifdef?\n\nMissing some { } around single-statement if bodies.  Can you move the\n\"return NULL\" in \"if (class_ioex == NULL) return NULL;\" to the next\nline, with { }? ",
            "author": "Michael McCandless",
            "id": "comment-13066619"
        },
        {
            "date": "2011-07-17T19:08:05+0000",
            "content": "Changed DirectIOLinuxDirectory to NativeUnixDirectory and also made some other changes. ",
            "author": "Varun Thacker",
            "id": "comment-13066713"
        },
        {
            "date": "2011-07-18T15:33:18+0000",
            "content": "here is an updated patch that works on OSX. I had to copy the old DirectIOLinuxDirectory.java to NativeUnixDirectory.java (svn copy) to apply the patch cleanly.\n\nI added an additional path to the JDKs header files and a linker argument otherwise I got a linker error. GCC by default doesn't pass -lstdc++ to the linker ",
            "author": "Simon Willnauer",
            "id": "comment-13067086"
        },
        {
            "date": "2011-07-18T15:48:21+0000",
            "content": "Can you touch up the javadocs?  Ie it's more general now (not just\nlinux), and \"uses direct io\" instead of \"Linux's O_DIRECT flag\", and\nuses direct io for all merge input & output.  Make it clear that this\nis a general purpose dir impl...\n\nNativeUnixndexOutput should be NativeUnixIndexOutput.\n\nThe createOutput function should also switch between normal vs direct,\ndepending on MERGE or READ?\n\nI think we should have a default forced buffer size?  The thing to\nkeep in mind is how many open inputs/outputs we will have during\nmerging, eg I think something like 5 or 8 files per merged segment\nplus another 5 or 8 for the resulting merged segment, so up to 88 file\nhandles open.  Maybe 256 KB default?\n\nWe shouldn't by default use the BII's buffer size: it's way too small\nfor direct IO.  And then we should always use the forced buffer size\nin this dir...\n\nTests pass for me on Fedora 13 linux!  Next I'll try OS X. ",
            "author": "Michael McCandless",
            "id": "comment-13067097"
        },
        {
            "date": "2011-07-18T16:09:43+0000",
            "content": "Also, we should run some more tests here, on modern kernels, since the SEQUENTIAL fadvise flag is better implemented in kernels >= 2.6.29; see this comment:\n\nhttp://blog.mikemccandless.com/2010/06/lucene-and-fadvisemadvise.html?showComment=1303235497682#c2572106601600642254\n\nIt could be, if kernel is new enough, we should not do DIRECT and instead do SEQUENTIAL. ",
            "author": "Michael McCandless",
            "id": "comment-13067105"
        },
        {
            "date": "2011-07-18T17:08:52+0000",
            "content": "OK, passes for me on OS X 10.6.6.  I first had to install the Java\ndeveloper package (jni.h was missing) from http://connect.apple.com ",
            "author": "Michael McCandless",
            "id": "comment-13067146"
        },
        {
            "date": "2011-07-19T18:02:27+0000",
            "content": "Updated jdocs.\n\ncreateOutput switches between direct and normal.\n\nAdded constructors NativeUnixIndexOutput/NativeUnixIndexInput which does not take buffersize and uses 256kb by default.\n\nChanged logic of using forcedbuffersize as suggested - It is only used in MERGE context rest of the times BII.buffersize\n\nI am still trying to figure out how to find out different kernel versions in this case. This is what I found out till now. Use the system(\"uname -r\") call in the c program directly. Use a makefile. Still haven't figured out how to do so using cpptasks though.  ",
            "author": "Varun Thacker",
            "id": "comment-13067867"
        },
        {
            "date": "2011-07-20T21:02:57+0000",
            "content": "I think NativeUnixDir should have a ctor that takes no buffer size, and uses the default?  And merging should always use the forcedBufferSize (let's rename it to mergeBufferSize?), ie, never delegate to BII.bufferSize(context).\n\nThen, NativeUnixIndexInput/Output shouldn't have 2 ctors, only 1 (that takes bufferSize) and NativeUnixDir just passes the buffer size?\n\nSomehow, but this should be a different issue, this Dir impl should only provide the II/IO impls for use during merging; if it's not a merge it should delegate to another Dir impl.  Maybe we pass a delegate to the ctor or something... ",
            "author": "Michael McCandless",
            "id": "comment-13068636"
        },
        {
            "date": "2011-07-24T10:52:11+0000",
            "content": "Sorry for the delay. I have made the changes suggested. ",
            "author": "Varun Thacker",
            "id": "comment-13070145"
        },
        {
            "date": "2011-07-25T18:01:35+0000",
            "content": "Getting closer!\n\nInstead of #define LINUX \"linux\" you can just do #define LINUX.\n\nCan you rename forcedBufferSize -> mergeBufferSize in all places?\n(And also the default constant FORCED_...).\n\nI don't think \"0\" should mean we fallback to BII's default; ie, just\nremove that logic and always use mergeBufferSize, and fix the jdoc.\n\nHow come you're passing true as the readOnly arg to\nopen_direct/_normal in createOutput?  Seems like this will fail?  (Hmm\ndid you run tests w/ these changes?). ",
            "author": "Michael McCandless",
            "id": "comment-13070644"
        },
        {
            "date": "2011-07-29T08:32:24+0000",
            "content": "Updated patch.\n\nhttp://ant.apache.org/manual/Tasks/conditions.html#os\n\nWith this I can get information on the kernel. But the problem is \"Linux\" is not a separate family attribute. Any pointers on how to go about it so that we can\nAlso, we should run some more tests here, on modern kernels, since the SEQUENTIAL fadvise flag is better implemented in kernels >= 2.6.29; see this comment:\n\nhttp://blog.mikemccandless.com/2010/06/lucene-and-fadvisemadvise.html?showComment=0000000000000#c2572106601600642254\n\nIt could be, if kernel is new enough, we should not do DIRECT and instead do SEQUENTIAL. ",
            "author": "Varun Thacker",
            "id": "comment-13072742"
        },
        {
            "date": "2011-09-29T16:26:41+0000",
            "content": "Hi,\n\nI think this patch is almost complete. It will be great if anyone can review it.  ",
            "author": "Varun Thacker",
            "id": "comment-13117404"
        },
        {
            "date": "2012-01-15T12:36:00+0000",
            "content": "I updated the patch so that it applies cleanly with the current trunk revision.\n\n\nant build-native-unix\n\n  Comiles successfully on a 64 bit Ubuntu Linux machine running kernel version 3.0.0-14-generic. \n\n\nant-DDirectory=NativeUnixDirectory test-core\n \nRuns successfully.\n\nIs more testing required before committing it? ",
            "author": "Varun Thacker",
            "id": "comment-13186488"
        },
        {
            "date": "2012-01-15T19:53:45+0000",
            "content": "Hi Varun!\n\nThanks for checking back here...\n\nI ran this directory on Linux and hit a number of test failures, from\ntwo bugs in the directory impl.  First,\nNativeUnixIndexInput.fileLength() failed to include bytes still in the\nbuffer; second, on clone, if the current II was positioned at EOF\nand EOF was on a (512 byte) page boundary then we'd hit\na false IOE.  I fixed those...\n\nI also changed NativeUnixDir to take a delegate Dir which we fall back\nto when we don't want to use direct IO; this enabled removing of\nopen_normal since we just use the \"normal\" java Dir impls for this.\n\nTo run all tests on Linux I do this:\n\nexport CLASSPATH=/lucene/unixdir/lucene/build/contrib/misc/lucene-misc-4.0-SNAPSHOT.jar\nexport LD_LIBRARY_PATH=/lucene/unixdir/lucene/build/native:/usr/local/lib\nant test-core -Dtests.directory=NativeUnixDirectory\n\n\n\n(Change the path to your full path... or maybe use relative path but\nthat could be dangerous since tests may change the CWD... not sure).\n\nIt also requires a temporary ctor in the directory taking only File\nand using FSDirectory.open for the delegate directory.\n\nFinally I added another setting, minBytesDirect: if the file to open\n(in openInput), or expected merge size (in createOutput), is smaller\nthan this, then we don't use direct IO.\n\nTo test this... I temporarily fixed the dir to always use direct IO,\nand tests (eventually: ~75 minutes!) passed, except for some Solr tests which look\nlike timeout problems.  I temporarily dropped the default\nbuffer size to 4 KB (from 256 KB) else the JVM ran out of direct\nbuffer space.\n\nI'll test on OS X as well... ",
            "author": "Michael McCandless",
            "id": "comment-13186575"
        },
        {
            "date": "2012-01-16T17:48:55+0000",
            "content": "OK tests pass (slowly: 46 minutes) on OS X as well.\n\nI think this is ready! ",
            "author": "Michael McCandless",
            "id": "comment-13187045"
        },
        {
            "date": "2012-01-29T16:50:19+0000",
            "content": "Thanks Varun! ",
            "author": "Michael McCandless",
            "id": "comment-13195789"
        },
        {
            "date": "2013-01-08T06:17:41+0000",
            "content": "  /** Default buffer size before writing to disk (256 MB);\n\n\tlarger means less IO load but more RAM and direct\n\tbuffer storage space consumed during merging. */\n\n\n\npublic final static int DEFAULT_MERGE_BUFFER_SIZE = 262144;\n\nin NativeUnixDirectory.java\n\nDoes 256MB mistake ? 262144===256K ",
            "author": "Littlestar",
            "id": "comment-13546645"
        },
        {
            "date": "2013-01-08T11:19:04+0000",
            "content": "Woops, thanks Littlestar: the comment should say 256 KB.  I'll fix. ",
            "author": "Michael McCandless",
            "id": "comment-13546795"
        },
        {
            "date": "2013-01-08T11:30:50+0000",
            "content": "[branch_4x commit] Michael McCandless\nhttp://svn.apache.org/viewvc?view=revision&revision=1430216\n\nLUCENE-2795: fix wrong comment (KB not MB) ",
            "author": "Commit Tag Bot",
            "id": "comment-13546798"
        },
        {
            "date": "2013-01-08T11:30:52+0000",
            "content": "[trunk commit] Michael McCandless\nhttp://svn.apache.org/viewvc?view=revision&revision=1430214\n\nLUCENE-2795: fix wrong comment (KB not MB) ",
            "author": "Commit Tag Bot",
            "id": "comment-13546799"
        }
    ]
}