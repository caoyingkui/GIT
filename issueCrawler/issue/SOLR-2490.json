{
    "id": "SOLR-2490",
    "title": "PropertiesRequestHandler; encode line.separator",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "Admin UI"
        ],
        "type": "Improvement",
        "priority": "Trivial",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "Currently, the XML looks like this:\n\n\n<!-- .. -->\n<str name=\"java.io.tmpdir\">/tmp</str>\n<str name=\"line.separator\">\n</str>\n<str name=\"java.vm.specification.vendor\">Sun Microsystems Inc.</str>\n<!-- .. -->\n\n\nwould be good to have this instead:\n\n\n<!-- .. -->\n<str name=\"java.io.tmpdir\">/tmp</str>\n<str name=\"line.separator\">\\n</str>\n<str name=\"java.vm.specification.vendor\">Sun Microsystems Inc.</str>\n<!-- .. -->\n\n\nafterwords we will be able to display to used line seperator",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13050648",
            "date": "2011-06-16T18:54:11+0000",
            "content": "hmmm...\n\ni don't think we should do this.\n\nthe request handler as written is total agnostic to what the properties are or how they are being written out \u2013 it just builds up the response and lets the writer take care of it.  As noted the XmlResponseWriter does in fact output the newline.\n\nif PropertiesRequestHandler tried to specially encode any (or all) properties with whitespace in them, that would screw up clients that were treating the whitespace as significant when parsing the xml \u2013 and worse it would royally screw up clients using other response writers where whitespace is always significant. "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13050653",
            "date": "2011-06-16T19:02:37+0000",
            "content": "i don't think we should do this.\nokay \u2013 but, then there is no chance to show any difference between \\n, \\r or \\r\\n in the interface, because it's just a linebreak in the xml-source. \n\nif PropertiesRequestHandler tried to specially encode any (or all) properties with whitespace in them ...\nwhat about especially (and only) this one? That's a common problem for displaying linebreaks. "
        },
        {
            "author": "Mike Sokolov",
            "id": "comment-13050698",
            "date": "2011-06-16T20:11:55+0000",
            "content": "I would recommend using entities for this: &#13;&#10; for CRLF, just &#10; for LF?\n\nIf this is processed by an XML parser, that'll already work for free anyway. "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13227634",
            "date": "2012-03-12T16:02:19+0000",
            "content": "Just FYI \u2013 I've created an hacky workaround for the admin-ui - using an regex to extract the line.seperator-value from the raw response (which still contains the \\n): https://github.com/steffkes/solr-admin/commit/c68427da9791b1f758c4185853ca8735dc47ec84#diff-0\n "
        },
        {
            "author": "Stefan Matheis (steffkes)",
            "id": "comment-13537585",
            "date": "2012-12-21T01:00:45+0000",
            "content": "according to the comment of hoss, we don't change that - the ui gets this information from the raw response and is already able to display that to the user "
        }
    ]
}