{
    "id": "SOLR-7835",
    "title": "solr.schema.FieldType#createFields has incorrect check for absent docValues",
    "details": {
        "components": [
            "Schema and Analysis"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "5.2.1",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "lucene.document.FieldType#docValuesType() call always return non-null result which is protected by setter and copy constructor.\n\nThis method is used in solr.schema.FieldType#createFields(...) to enforce valid docValues type for field with docValues=\"true\" in schema.\nCurrent check is incorrect since it compares docValuesType to null which is always false.\n\nIn case of incorrectly implemented Solr FieldType which overrides checkSchemaField(...) to allow docValues and doesn't override createFields(...) it leads to buggy behavior: user thinks that field use docValues (since it's set in schema.xml and solr doesn't indicates any error), but really UninvertingReader with fieldValuesCache is used for faceting, grouping etc.\n\nThis issue is only present when user creates his own solr.schema.FieldType implementation because Solr FieldTypes which don't support docValues do not override checkSchemaField(...) method.\n\nI will push pull request with patch and test case in several minutes.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-07-27T18:34:54+0000",
            "author": "ASF GitHub Bot",
            "content": "GitHub user grossws opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/197\n\n    Incorrect absent docValues check\n\n    `lucene.document.FieldType#docValuesType()` call always return non-null result\n    which is protected by setter and copy constructor.\n\n    This method is used in `solr.schema.FieldType#createFields(...)` to enforce valid docValues type\n    for field with `docValues=\"true\"` in schema.\n    Current check is incorrect since it compares `docValuesType` to `null` which is always false.\n\n    In case of incorrectly implemented Solr FieldType which overrides `checkSchemaField(...)`\n    to allow docValues and doesn't override `createFields(...)` it leads to buggy behavior:\n    user think that field use docValues (since it's set in schema.xml and solr doesn't indicates\n    any error), but really UninvertingReader with fieldValuesCache is used for faceting, grouping etc.\n\n    Test to demonstrate this issue is added to `DocValuesTest` class.\n\n    Fixes SOLR-7835.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/grossws/lucene-solr fix-dv-unsupported\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/197.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #197\n\n\ncommit 0a43d76a83ff00894c5cade02cf01ce7ec43f701\nAuthor: Konstantin Gribov <grossws@gmail.com>\nDate:   2015-07-08T12:54:33Z\n\n    Incorrect absent docValues check\n\n    `lucene.document.FieldType#docValuesType()` call always return non-null result\n    which is protected by setter and copy constructor.\n\n    This method is used in `solr.schema.FieldType#createFields(...)` to enforce valid docValues type\n    for field with `docValues=\"true\"` in schema.\n    Current check is incorrect since it compares `docValuesType` to `null` which is always false.\n\n    In case of incorrectly implemented Solr FieldType which overrides `checkSchemaField(...)`\n    to allow docValues and doesn't override `createFields(...)` it leads to buggy behavior:\n    user think that field use docValues (since it's set in schema.xml and solr doesn't indicates\n    any error), but really UninvertingReader with fieldValuesCache is used for faceting, grouping etc.\n\n    Test to demonstrate this issue is added to `DocValuesTest` class.\n\n    Fixes SOLR-7835.\n\n ",
            "id": "comment-14643181"
        }
    ]
}