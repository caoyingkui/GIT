{
    "id": "SOLR-842",
    "title": "Better error handling for DIH",
    "details": {
        "affect_versions": "1.3",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Currently DIH fails completely on any error. We must have better control on error behavior\n\nmail thread: http://markmail.org/message/xvfbfaskfmlj2pnm\n\nan entity can have an attribute onError the values can be abort, continue,skip\n\nabort is the default . It aborts the import. continue or skip does not fail the import it continues from there. skip skips all rows in an xml (only if stream != true)if there is an error in xml but continues with the next xml.",
    "attachments": {
        "SOLR-842.patch": "https://issues.apache.org/jira/secure/attachment/12393562/SOLR-842.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Noble Paul",
            "id": "comment-12645979",
            "date": "2008-11-08T13:04:54+0000",
            "content": "implemented for XPathEntityProcessor "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12646016",
            "date": "2008-11-08T18:22:21+0000",
            "content": "even parsing failure is taken care of and better logging "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12646217",
            "date": "2008-11-10T09:56:36+0000",
            "content": "Changes\n\n\tChanges to skip behavior in case of non-streaming mode in XPathEntityProcessor\n\n\n\nJust to be clear, I'll define the meaning of the three constants \u2013 abort, skip and continue\n\n\tabort \u2013 abort the import operation\n\tskip \u2013 If an exception is raised, skip the current document and continue with the next one. Note that in case of a parsing error for XPathEntityProcessor, it is not possible to skip and proceed.\n\tcontinue \u2013 Ignore the exception completely and proceed to create the current document as if nothing has happened.\n\n\n\nNeed to add tests for this. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12646827",
            "date": "2008-11-12T08:25:32+0000",
            "content": "Adding a test case. I plan to commit shortly. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12646841",
            "date": "2008-11-12T09:51:25+0000",
            "content": "Committed revision 713335.\n\nThanks Noble! "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12649888",
            "date": "2008-11-22T02:39:45+0000",
            "content": "Wow!\n\nI just found another case for loop control: receiving no documents in a loop.\n\nMy test case is that to fetch subsequent pages of results (first 40, next 40, etc.) from a search API I could not use any value returned in the last request. I had to make an XML file giving the \"start 0, start 40, start 80\" sequence. I drove an RSS feed input with this as an outer loop.\n\nNow, suppose I have 100 requests in the file but this particular search only has 20 results. The second time I do the search I get no documents: now I want to break out of my driving XML file loop. With the current DIH i will send another 98 search requests that will all fail.\n\nSo, two features here:\n1) to skip when there are no documents.\n2) to end the next outer loop.\n\n\"break to entity X\" would be the most flexible - you could break out three loops if you want. This is the same as \"break to label\" in Java or C.\n\nThanks for your time,\n\nLance (the instigator) "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12649895",
            "date": "2008-11-22T03:55:47+0000",
            "content": "Lance , could you paste a sample data-config and explain the usecase .  "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12649904",
            "date": "2008-11-22T07:36:38+0000",
            "content": "Lance, Transformers can add two special fields to a row \"$hasMore\" and \"$nextUrl\" which tells the XPathEntityProcessor whether to stop now and if not, what is the nextUrl to be fetched. You can write a transformer which adds these special fields based on whether you have more results or not. Maybe that can be used here? "
        }
    ]
}