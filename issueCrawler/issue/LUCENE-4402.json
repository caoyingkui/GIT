{
    "id": "LUCENE-4402",
    "title": "TestAddTaxonomy.testConcurrency failure",
    "details": {
        "components": [
            "modules/facet"
        ],
        "fix_versions": [
            "4.0",
            "3.6.2",
            "6.0"
        ],
        "affect_versions": "3.6.2",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "on the 3.x branch:\n\n    [junit] Testsuite: org.apache.lucene.facet.taxonomy.directory.TestAddTaxonomy\n    [junit] Testcase: testConcurrency(org.apache.lucene.facet.taxonomy.directory.TestAddTaxonomy):\tCaused an ERROR\n    [junit] Index: 1, Size: 2\n    [junit] java.lang.IndexOutOfBoundsException: Index: 1, Size: 2\n    [junit] \tat java.util.ArrayList.rangeCheck(ArrayList.java:604)\n    [junit] \tat java.util.ArrayList.get(ArrayList.java:382)\n    [junit] \tat org.apache.lucene.facet.taxonomy.writercache.cl2o.CharBlockArray.charAt(CharBlockArray.java:148)\n    [junit] \tat org.apache.lucene.facet.taxonomy.CategoryPath.equalsToSerialized(CategoryPath.java:888)\n    [junit] \tat org.apache.lucene.facet.taxonomy.writercache.cl2o.CompactLabelToOrdinal.getOrdinal(CompactLabelToOrdinal.java:323)\n    [junit] \tat org.apache.lucene.facet.taxonomy.writercache.cl2o.CompactLabelToOrdinal.getOrdinal(CompactLabelToOrdinal.java:163)\n    [junit] \tat org.apache.lucene.facet.taxonomy.writercache.cl2o.Cl2oTaxonomyWriterCache.get(Cl2oTaxonomyWriterCache.java:49)\n    [junit] \tat org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter.findCategory(DirectoryTaxonomyWriter.java:386)\n    [junit] \tat org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter.addTaxonomy(DirectoryTaxonomyWriter.java:833)\n    [junit] \tat org.apache.lucene.facet.taxonomy.directory.TestAddTaxonomy.testConcurrency(TestAddTaxonomy.java:206)\n    [junit] \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    [junit] \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    [junit] \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    [junit] \tat java.lang.reflect.Method.invoke(Method.java:601)\n    [junit] \tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n    [junit] \tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n    [junit] \tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n    [junit] \tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n    [junit] \tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    [junit] \tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$SubclassSetupTeardownRule$1.evaluate(LuceneTestCase.java:630)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$InternalSetupTeardownRule$1.evaluate(LuceneTestCase.java:536)\n    [junit] \tat org.apache.lucene.util.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:67)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$TestResultInterceptorRule$1.evaluate(LuceneTestCase.java:457)\n    [junit] \tat org.apache.lucene.util.UncaughtExceptionsRule$1.evaluate(UncaughtExceptionsRule.java:74)\n    [junit] \tat org.apache.lucene.util.LuceneTestCase$SaveThreadAndTestNameRule$1.evaluate(LuceneTestCase.java:508)\n    [junit] \tat org.junit.rules.RunRules.evaluate(RunRules.java:18)\n    [junit] \tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n    [junit] \tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n    [junit] \tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:146)\n    [junit] \tat org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:50)\n    [junit] \tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n    [junit] \tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n    [junit] \tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n    [junit] \tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n    [junit] \tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n    [junit] \tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    [junit] \tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n    [junit] \tat org.apache.lucene.util.UncaughtExceptionsRule$1.evaluate(UncaughtExceptionsRule.java:74)\n    [junit] \tat org.apache.lucene.util.StoreClassNameRule$1.evaluate(StoreClassNameRule.java:36)\n    [junit] \tat org.apache.lucene.util.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:67)\n    [junit] \tat org.junit.rules.RunRules.evaluate(RunRules.java:18)\n    [junit] \tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n    [junit] \tat junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)\n    [junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:518)\n    [junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1052)\n    [junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:879)\n    [junit] \n    [junit] \n    [junit] Tests run: 5, Failures: 0, Errors: 1, Time elapsed: 0.342 sec\n    [junit] \n    [junit] ------------- Standard Error -----------------\n    [junit] NOTE: Ignoring nightly-only test method 'testBig'\n    [junit] WARNING: test method: 'testConcurrency' left thread running: Thread[Thread-1,5,main]\n    [junit] RESOURCE LEAK: test method: 'testConcurrency' left 1 thread(s) running\n    [junit] NOTE: reproduce with: ant test -Dtestcase=TestAddTaxonomy -Dtestmethod=testConcurrency -Dtests.seed=ad99a0aac3d5bf3:4af538a36d0c94b4:-7b609955992bc1c9 -Dargs=\"-Dfile.encoding=UTF-8\"\n    [junit] NOTE: reproduce with: ant test -Dtestcase=TestAddTaxonomy -Dtestmethod=testConcurrency -Dtests.seed=ad99a0aac3d5bf3:4af538a36d0c94b4:-7b609955992bc1c9 -Dargs=\"-Dfile.encoding=UTF-8\"\n    [junit] NOTE: test params are: locale=mt_MT, timezone=Etc/GMT+6\n    [junit] NOTE: all tests run in this JVM:\n    [junit] [TwoEnhancementsTest, TestAdaptiveExample, CategoryListPayloadStreamTest, CategoryAttributeImplTest, PerDimensionIndexingParamsTest, AdaptiveAccumulatorTest, TestFacetArrays, TestFacetsAccumulatorWithComplement, FacetSearchParamsTest, SamplingAccumulatorTest, TestTaxonomyCombined, TestAddTaxonomy]\n    [junit] NOTE: Linux 3.2.0-24-generic amd64/Oracle Corporation 1.7.0_01 (64-bit)/cpus=8,threads=1,free=171017984,total=269352960\n    [junit] ------------- ---------------- ---------------\n    [junit] TEST org.apache.lucene.facet.taxonomy.directory.TestAddTaxonomy FAILED",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2012-09-18T18:34:32+0000",
            "content": "I'll dig. ",
            "author": "Shai Erera",
            "id": "comment-13458032"
        },
        {
            "date": "2012-09-19T11:59:00+0000",
            "content": "Found the problem. On 3.6, all DirTW methods are synchronized, but addTaxonomy wasn't. The idea was to let someone call addTaxo in parallel to addCategory (hence the test), while addTaxo itself calls addCategory internally (which is synchronized). The problem is that prior to calling addCategory, it calls findCategory, which is not synchronized and cache implementations are not thread safe (in 3.6).\n\nSo the solution is to call addCategory from addTaxonomy in 3x, 4x and trunk. In 4x and trunk addCategory is not synchronized, checking the cache first, so the existing code is redundant. In 3x since we cannot trust findCategory in a multi-threaded env., calling addCategory will solve it.\n\nI'll modify the code and commit the changes - a patch is trivial therefore I won't post one. ",
            "author": "Shai Erera",
            "id": "comment-13458607"
        },
        {
            "date": "2012-09-19T12:02:44+0000",
            "content": "Thanks for digging into this Shai! ",
            "author": "Robert Muir",
            "id": "comment-13458612"
        },
        {
            "date": "2012-09-19T12:22:38+0000",
            "content": "Committed revisions 1387540, 1387542 and 1387546 (3x, trunk and 4x respectively).\nI also modified testConcurrency to create atLeast(10000) categories instead of 5000, so that we catch such issues sooner (hopefully). ",
            "author": "Shai Erera",
            "id": "comment-13458626"
        },
        {
            "date": "2013-03-22T16:36:31+0000",
            "content": "[branch_4x commit] Shai Erera\nhttp://svn.apache.org/viewvc?view=revision&revision=1387546\n\nLUCENE-4402: TestAddTaxonomy.testConcurrency failure (4x) ",
            "author": "Commit Tag Bot",
            "id": "comment-13610806"
        },
        {
            "date": "2013-05-10T10:34:32+0000",
            "content": "Closed after release. ",
            "author": "Uwe Schindler",
            "id": "comment-13654250"
        }
    ]
}