{
    "id": "SOLR-2152",
    "title": "Apply \"filters\" to mlt queries without using filters.",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "MoreLikeThis"
        ],
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "We need to provide some additional constraints on the results from MoreLikeThis but would prefer not to trash our caches with short lived filters.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Sven Almgren",
            "id": "comment-12920184",
            "date": "2010-10-12T13:29:51+0000",
            "content": "The idea is to inject the additional query around the PriorityQueue created by the MoreLikeThis class. MLT query is basically a big OR'ed query from \"interesting terms\", and we want to add requirements to this query.\n\nMy solution would be to wrap the result from MoreLikeThis.like() with this \"constraints query\", like how the original document is excluded from the result.\n\nChange\n\n\n \n// exclude current document from results\nBooleanQuery mltQuery = new BooleanQuery();\nmltQuery.add(mltquery, BooleanClause.Occur.MUST);\nmltQuery.add(\n    new TermQuery(new Term(uniqueKeyField.getName(), uniqueKeyField.getType().storedToIndexed(doc.getFieldable(uniqueKeyField.getName())))), \n        BooleanClause.Occur.MUST_NOT);\n\n\n\ninto something like\n\n\n \nBooleanQuery constraint = GetThisQueryFrom(\"mlt.constraint\");\n// exclude current document from results\nBooleanQuery mltQuery = new BooleanQuery();\nmltQuery.add(mltquery, BooleanClause.Occur.MUST);\nmltQuery.add(constraint, BooleanClause.Occur.MUST);\nmltQuery.add(\n    new TermQuery(new Term(uniqueKeyField.getName(), uniqueKeyField.getType().storedToIndexed(doc.getFieldable(uniqueKeyField.getName())))), \n        BooleanClause.Occur.MUST_NOT);\n\n  "
        }
    ]
}