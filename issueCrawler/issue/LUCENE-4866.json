{
    "id": "LUCENE-4866",
    "title": "Lucene corruption",
    "details": {
        "components": [
            "core/index"
        ],
        "fix_versions": [],
        "affect_versions": "3.5",
        "priority": "Blocker",
        "labels": "",
        "type": "Bug",
        "resolution": "Not A Problem",
        "status": "Resolved"
    },
    "description": "Hi all,\n\nWe know that lucene index gets corrupted. in our case they are corrupting again and again due to this production is incosistent. followiing errors are observed. Any help will be helpful.\n\norg.hibernate.search.SearchException: Unable to reopen IndexReader\n        at org.hibernate.search.indexes.impl.SharingBufferReaderProvider$PerDirectoryLatestReader.refreshAndGet(SharingBufferReaderProvider.java:230)\n        at org.hibernate.search.indexes.impl.SharingBufferReaderProvider.openIndexReader(SharingBufferReaderProvider.java:73)\n        at org.hibernate.search.reader.impl.MultiReaderFactory.openReader(MultiReaderFactory.java:49)\n        at org.hibernate.search.query.engine.impl.HSQueryImpl.buildSearcher(HSQueryImpl.java:596)\n        at org.hibernate.search.query.engine.impl.HSQueryImpl.buildSearcher(HSQueryImpl.java:495)\n        at org.hibernate.search.query.engine.impl.HSQueryImpl.queryEntityInfos(HSQueryImpl.java:239)\n        at org.hibernate.search.query.hibernate.impl.FullTextQueryImpl.list(FullTextQueryImpl.java:209)\n        at com.lifetech.ngs.dataaccess.spring.util.SearchUtil.returnProjectionData(SearchUtil.java:646)\n        at com.lifetech.ngs.dataaccess.spring.util.SearchUtil.getSinglePropertyOnlyUsingSearch(SearchUtil.java:556)\n        at com.lifetech.ngs.dataaccess.spring.util.SearchUtil$$FastClassByCGLIB$$568d5972.invoke(<generated>)\n        at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)\n        at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:689)\n        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)\n        at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)\n        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)\n        at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:622)\n        at com.lifetech.ngs.dataaccess.spring.util.SearchUtil$$EnhancerByCGLIB$$47fb00d0.getSinglePropertyOnlyUsingSearch(<generated>)\n        at com.lifetech.ngs.server.impl.SampleManagerImpl.getNameSearchResult(SampleManagerImpl.java:2436)\n        at com.lifetech.ngs.server.impl.SampleManagerImpl$$FastClassByCGLIB$$17af181d.invoke(<generated>)\n        at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)\n        at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:689)\n        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)\n        at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)\n        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)\n        at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:622)\n        at com.lifetech.ngs.server.impl.SampleManagerImpl$$EnhancerByCGLIB$$75b745f9.getNameSearchResult(<generated>)\n        at com.lifetech.ngs.webui.mgc.widgets.sample.SearchSamplesView.populateData(SearchSamplesView.java:635)\n        at com.lifetech.ngs.webui.customcomponents.IRAutoComplete.changeVariables(IRAutoComplete.java:39)\n        at com.vaadin.terminal.gwt.server.AbstractCommunicationManager.changeVariables(AbstractCommunicationManager.java:1445)\n        at com.vaadin.terminal.gwt.server.AbstractCommunicationManager.handleVariableBurst(AbstractCommunicationManager.java:1393)\n        at com.lifetech.ngs.webui.main.SpringVaadinServlet$1.handleVariableBurst(SpringVaadinServlet.java:57)\n        at com.vaadin.terminal.gwt.server.AbstractCommunicationManager.handleVariables(AbstractCommunicationManager.java:1312)\n        at com.vaadin.terminal.gwt.server.AbstractCommunicationManager.doHandleUidlRequest(AbstractCommunicationManager.java:763)\n        at com.vaadin.terminal.gwt.server.CommunicationManager.handleUidlRequest(CommunicationManager.java:296)\n        at com.vaadin.terminal.gwt.server.AbstractApplicationServlet.service(AbstractApplicationServlet.java:501)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:722)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\n        at org.apache.catalina.filters.ExpiresFilter.doFilter(ExpiresFilter.java:1179)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:225)\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:169)\n        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:581)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:98)\n        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:927)\n        at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:680)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)\n        at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:999)\n        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:565)\n        at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:309)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\n        at java.lang.Thread.run(Thread.java:722)\nCaused by: java.io.FileNotFoundException: /shared/grdata/.lucene/MG_SPECIMEN/_5h.cfs (No such file or directory)\n        at java.io.RandomAccessFile.open(Native Method)\n        at java.io.RandomAccessFile.<init>(RandomAccessFile.java:233)\n        at org.apache.lucene.store.MMapDirectory.openInput(MMapDirectory.java:214)\n        at org.apache.lucene.index.CompoundFileReader.<init>(CompoundFileReader.java:65)\n        at org.apache.lucene.index.SegmentCoreReaders.<init>(SegmentCoreReaders.java:68)\n        at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:115)\n        at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:93)\n        at org.apache.lucene.index.DirectoryReader.<init>(DirectoryReader.java:235)\n        at org.apache.lucene.index.ReadOnlyDirectoryReader.<init>(ReadOnlyDirectoryReader.java:34)\n        at org.apache.lucene.index.DirectoryReader.doOpenIfChanged(DirectoryReader.java:506)\n        at org.apache.lucene.index.DirectoryReader.access$000(DirectoryReader.java:45)\n        at org.apache.lucene.index.DirectoryReader$2.doBody(DirectoryReader.java:498)\n        at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:754)\n        at org.apache.lucene.index.DirectoryReader.doOpenNoWriter(DirectoryReader.java:493)\n        at org.apache.lucene.index.DirectoryReader.doOpenIfChanged(DirectoryReader.java:450)\n        at org.apache.lucene.index.DirectoryReader.doOpenIfChanged(DirectoryReader.java:391)\n        at org.apache.lucene.index.IndexReader.openIfChanged(IndexReader.java:497)\n        at org.apache.lucene.index.IndexReader.reopen(IndexReader.java:681)\n        at org.hibernate.search.indexes.impl.SharingBufferReaderProvider$PerDirectoryLatestReader.refreshAndGet(SharingBufferReaderProvider.java:227)\n        ... 55 more",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2013-03-21T10:02:03+0000",
            "content": "org.hibernate.search.SearchException...\n\nThis looks like a bug in how \"Hibernate Search\", have implemented the Lucene APIs; not in Lucene itself. You should first file an issue with them http://www.hibernate.org/subprojects/search.html and if it turns out that there is indeed a bug in Lucene - which by any chance cannot be fixed by upgrading to latest version, then let the Hibernate folks file a concrete bug report. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13608801"
        },
        {
            "date": "2013-03-21T10:47:05+0000",
            "content": "The fact that the missing file looks to be held on a shared drive might also be significant if there is >1 Lucene process configured to access the same directory ... ",
            "author": "Mark Harwood",
            "id": "comment-13608826"
        },
        {
            "date": "2013-03-21T10:54:48+0000",
            "content": "If you use NFS, you need a custom IndexDeletionPolicy:\n\nOne expected use case for this (and the reason why it was first created) is to work around problems with an index directory accessed via filesystems like NFS because NFS does not provide the \"delete on last close\" semantics that Lucene's \"point in time\" search normally relies on. By implementing a custom deletion policy, such as \"a commit is only removed once it has been stale for more than X minutes\", you can give your readers time to refresh to the new commit before IndexWriter removes the old commits.\n\n ",
            "author": "Robert Muir",
            "id": "comment-13608833"
        }
    ]
}