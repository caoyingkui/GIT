{
    "id": "SOLR-1538",
    "title": "Solr possible deadlock source (FindBugs report)",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [
            "1.4.1",
            "1.5",
            "3.1",
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "The code to get the latest accessed items in ConcurrentLRUCache looks like\n\nConcurrentLRUCache.java\n public Map<K, V> getOldestAccessedItems(int n) {\n    markAndSweepLock.lock();\n    Map<K, V> result = new LinkedHashMap<K, V>();\n    TreeSet<CacheEntry> tree = new TreeSet<CacheEntry>();\n    try {\n   ...\n    } finally {\n      markAndSweepLock.unlock();\n    }\n\n\n\n(this method is apparently unused though) and in \n\n\n   public Map<K,V> getLatestAccessedItems(int n) {\n     // we need to grab the lock since we are changing lastAccessedCopy\n     markAndSweepLock.lock();\n     Map<K,V> result = new LinkedHashMap<K,V>();\n     TreeSet<CacheEntry> tree = new TreeSet<CacheEntry>();\n     try {\n...\n\n\n\nThe impression is that if an OOM situation occurs on the allocation of the local LinkedHashMap and TreeSet the lock would not be unlocked anymore.\nThe quick fix would be to move the lock() call after the allocations, and this does not seem to imply any problem.",
    "attachments": {
        "SOLR-1538.patch": "https://issues.apache.org/jira/secure/attachment/12423774/SOLR-1538.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "gabriele renzi",
            "id": "comment-12772311",
            "date": "2009-11-01T11:57:36+0000",
            "content": "simply switch order of ollections allocation and lock aquisition, all tests still pass and it makes the locked zone smaller "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12798935",
            "date": "2010-01-11T23:46:25+0000",
            "content": "I'm not a threading/locking expert, but this seems straight forward enough.\n\nAll the docs i've seen definitely say that a \"try\" block (with \"unlock\" in the finally) should be the very next line after any lock() call. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12798938",
            "date": "2010-01-11T23:52:27+0000",
            "content": "Committed revision 898119. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872690",
            "date": "2010-05-27T23:09:30+0000",
            "content": "\nCorrecting Fix Version based on CHANGES.txt, see this thread for more details...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12873816",
            "date": "2010-05-31T22:59:43+0000",
            "content": "Committed revision 949885.\n\nmerged to branch-1.4 for 1.4.1 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12873817",
            "date": "2010-05-31T22:59:46+0000",
            "content": "Committed revision 949885.\n\nmerged to branch-1.4 for 1.4.1 "
        }
    ]
}