{
    "id": "SOLR-6271",
    "title": "ConjunctionSolrSpellChecker wrong check for same string distance",
    "details": {
        "affect_versions": "4.9",
        "status": "Closed",
        "fix_versions": [
            "5.5"
        ],
        "components": [
            "spellchecker"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "See ConjunctionSolrSpellChecker.java\n\ntry {\n      if (stringDistance == null) \n{\n        stringDistance = checker.getStringDistance();\n      }\n else if (stringDistance != checker.getStringDistance()) \n{\n        throw new IllegalArgumentException(\n            \"All checkers need to use the same StringDistance.\");\n      }\n    } catch (UnsupportedOperationException uoe) \n{\n      // ignore\n    }\n\nIn line stringDistance != checker.getStringDistance() there is comparing by references. So if you are using 2 or more spellcheckers with same distance algorithm, exception will be thrown anyway.",
    "attachments": {
        "SOLR-6271.patch": "https://issues.apache.org/jira/secure/attachment/12705352/SOLR-6271.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Miko\u0142aj Kania",
            "id": "comment-14366989",
            "date": "2015-03-18T11:31:24+0000",
            "content": "This is especially a problem when you want to use DirectSolrSpellChecker with FileBasedSpellChecker. What make things interesting is that WordBreakSpellChecker works fine beacuse its getStringDistance() method throws UnsupportedOperationException, and in ConjunctionSolrSpellChecker there is that work-around for this:\n\n\ntry {\n      if (stringDistance == null) {\n        stringDistance = checker.getStringDistance();\n      } else if (stringDistance != checker.getStringDistance()) {\n        throw new IllegalArgumentException(\n            \"All checkers need to use the same StringDistance.\");\n      }\n    } catch (UnsupportedOperationException uoe) {\n      // ignore\n    }\n\n "
        },
        {
            "author": "ASF GitHub Bot",
            "id": "comment-14367168",
            "date": "2015-03-18T14:15:28+0000",
            "content": "GitHub user gmcoringa opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/135\n\n    SOLR-6271: ConjunctionSolrSpellChecker wrong check for same string distance\n\n    ConjunctionSolrSpellChecher now uses equals method to check for same string distance.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/elo7/lucene-solr SOLR-6271\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/135.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #135\n\n\ncommit 1856fc9bf18dd3d2528c1200e11b15ec122b9b2c\nAuthor: Fabiano V. Santos <tech+gmcoringa@elo7.com>\nDate:   2015-03-17T16:44:09Z\n\n    ConjunctionSolrSpellChecher now uses equals method to check for same string distance\n\n "
        },
        {
            "author": "Fabiano V. Santos",
            "id": "comment-14367170",
            "date": "2015-03-18T14:16:19+0000",
            "content": "Patch based on trunk version from git commit 1e79536e2371737a3732369a0db4022a257be1fe\n\nAlso was created a pull request: https://github.com/apache/lucene-solr/pull/135 "
        },
        {
            "author": "James Dyer",
            "id": "comment-15041819",
            "date": "2015-12-04T17:32:34+0000",
            "content": "Here is an updated patch with a slightly different unit test.\n\nThis is a trivial fix, but important if we ever implement multiple dictionaries:  SOLR-1074 / SOLR-2106 . "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-15041829",
            "date": "2015-12-04T17:41:19+0000",
            "content": "Commit 1717999 from jdyer@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1717999 ]\n\nSOLR-6271: fix StringDistance comparison in CSSC. ( This closes #135 ) "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-15041831",
            "date": "2015-12-04T17:43:52+0000",
            "content": "Commit 1718000 from jdyer@apache.org in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1718000 ]\n\nSOLR-6271: fix StringDistance comparison in CSSC. ( This closes #135 ) "
        },
        {
            "author": "ASF GitHub Bot",
            "id": "comment-15041891",
            "date": "2015-12-04T18:09:59+0000",
            "content": "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/lucene-solr/pull/135 "
        },
        {
            "author": "James Dyer",
            "id": "comment-15041944",
            "date": "2015-12-04T18:36:16+0000",
            "content": "Thanks Igor & Fabiano for reporting this one. "
        },
        {
            "author": "Abhishek Kumar Singh",
            "id": "comment-15905234",
            "date": "2017-03-10T15:14:30+0000",
            "content": "This issue is still occuring in my case, wherein I'm using DirectSolrSpellChecker and  FileBasedSpellChecker . The problem is that DirectSolrSpellChecker is using LuceneLavensteinDistance while  FileBasedSpellChecker is using LavensteinDistance as the StringDistance.\nThis is throwing the   IllegalArgumentException( \"All checkers need to use the same StringDistance.\");  .\n\nWhat can be the fix to this?  "
        },
        {
            "author": "Abhishek Kumar Singh",
            "id": "comment-15972895",
            "date": "2017-04-18T15:17:29+0000",
            "content": "As of Solr 6.5, this has been changed to stringDistance.equals(checker.getStringDistance()) . \n\nHowever, LuceneLevenshteinDistance does not even override equals method.  \nThis does not solve the problem yet, because this default equals method anyway compares references. "
        }
    ]
}