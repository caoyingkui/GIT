{
    "id": "SOLR-12981",
    "title": "Better support JSON faceting responses in SolrJ",
    "details": {
        "type": "Sub-task",
        "status": "Resolved",
        "labels": "",
        "fix_versions": [
            "master (8.0)",
            "7.7"
        ],
        "components": [
            "clients - java",
            "SolrJ"
        ],
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "7.5,                                            master (8.0)"
    },
    "description": "SOLR-12947 created JsonQueryRequest to make using the JSON request API easier in SolrJ.  SOLR-12965 is adding faceting support to this request object.  This subtask of SOLR-12965 involves providing a way to parse the JSON faceting responses into easy-to-use SolrJ objects.  \n\nCurrently the only option for users is to manipulate the underlying NamedList directly.  We should create a \"JsonFacetingResponse\" in the model of ClusteringResponse, SuggesterResponse, TermsResponse, etc. and add an accessor to QueryResponse for getting at the faceting results.",
    "attachments": {
        "SOLR-12981.patch": "https://issues.apache.org/jira/secure/attachment/12947611/SOLR-12981.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16681755",
            "content": "The attached patch creates an object called \"JsonFacetingResponse\" that supports navigating faceting results.  General outline:\n\n*JsonFacetingResponse*\n    int getCount()\n    Object getVal()\n    List<JsonFacetingResponse> getFacetResultsByName(String name)\n    Double getStatFacetResultsByName(String name);\n\n\n\nSome general notes/pros/cons:\n\n\tJsonFacetingResponse is recursive- it represents the top-level faceting response, but it's also used to represent individual facet-buckets (which themselves can have subfacets, etc.)\n\tit parses keys \"count\", and \"val\", and then treats any other JSON keys as the names of subfacets.  This is a misstep with some facet-types which have optional keys/statistics (e.g. the numBuckets stat that is optionally computed for \"terms\" facets).  Partially to blame for this is that it's difficult to look at the JSON faceting response and know what sort of facet we're parsing the results of.  If we had a reliable way to differentiate e.g. a \"terms\" response bucket from a \"range\" response bucket, we could change the interfaces in SolrJ to be a little more helpful. For example we could let users do things like: (facetingResponse.getTermFacetResultsByName(\"categories\").getNumBuckets()).  Musing aloud, I wonder how reasonable it'd be to add a \"type\" property to each facet bucket.  That'd make parsing and allowing access to this stuff much easier.\n\tThe response for heatmap facets is very different from the others.  The current WIP patch doesn't handle it currently, but there's no real blocker for implementing it.\n\n ",
            "author": "Jason Gerlowski",
            "date": "2018-11-09T17:54:04+0000"
        },
        {
            "id": "comment-16686976",
            "content": "The updated patch makes some improvements on the original design, but still takes essentially the same approach.  There's now a few different classes used to represent the different sorts of facets and buckets present in a faceting response.\n\n\tNestableJsonFacet - represents \"query\" facets.  Has a domain count getter and can have nested subfacets.  Parent of BucketJsonFacet.\n\tBucketBasedJsonFacet - the top level entry for a \"terms\" or \"range\" facet.  Provides access to allBuckets, numBuckets, before, after, between properties. Also\n\tBucketJsonFacet - the individual buckets for a \"terms\" or \"range\" facet.  Like its parent NestableJsonFacet, it can have subfacets\n\tHeatmapJsonFacet - represents \"heatmap\" facets.\n\n\n\nHaving separate classes for the different types of facets makes the interfaces a lot cleaner, generally. (e.g. getMinX() is only on HeatmapJsonFacet objects, getVal() is only on BucketJsonFacet objects, etc.).\n\nThe downside of this approach though, as I touched on in an earlier comment, is that the JSON response for faceting requests isn't 100% unambiguous, semantically.  The json faceting code doesn't reserve any of its own keywords- if users name their facets \"val\", or \"minX\", or any other of a few semantically meaningful words, then the parsing done by this patch will break down.  \n\nOne workaround for this would be to make the JSON response less ambiguous by adding a \"type\" field to make explicit the type of each (sub)facet.  Another workaround would involve restricting the facet-names that users can specify.  I think both of these would be A Good Thing for json faceting, though I won't tackle them here.  I think the simplest approach is to make this limitation clear in the documentation.  If a user for some reason absolutely can't change their facet naming, they just won't be able to take advantage of these new helper classes and can parse their response manually as they have up to this point. ",
            "author": "Jason Gerlowski",
            "date": "2018-11-14T18:40:52+0000"
        },
        {
            "id": "comment-16690925",
            "content": "Commit d17c6d8897aad4b06c9c7200d0c445e1170e503f in lucene-solr's branch refs/heads/master from Jason Gerlowski\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d17c6d8 ]\n\nSOLR-12981: Introduce SolrJ type for JSON facet response parsing\n\nRecent JIRA's (SOLR-12947, SOLR-12965) have added support making it\neasier to compose JSON query/faceting requests using SolrJ.  But neither\nmade parsing the responses to these queries any easier.\n\nThis commit introduces NestableJsonFacet (along with several companion\ntypes) which are Java representations of the JSON faceting response.\nThey can be accessed via the new QueryResponse method:\n`getJsonFacetingResponse()`. ",
            "author": "ASF subversion and git services",
            "date": "2018-11-18T15:11:44+0000"
        },
        {
            "id": "comment-16690938",
            "content": "Commit b27bcc859580edff5ce07613e18308edadb88f4c in lucene-solr's branch refs/heads/branch_7x from Jason Gerlowski\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=b27bcc8 ]\n\nSOLR-12981: Introduce SolrJ type for JSON facet response parsing\n\nRecent JIRA's (SOLR-12947, SOLR-12965) have added support making it\neasier to compose JSON query/faceting requests using SolrJ.  But neither\nmade parsing the responses to these queries any easier.\n\nThis commit introduces NestableJsonFacet (along with several companion\ntypes) which are Java representations of the JSON faceting response.\nThey can be accessed via the new QueryResponse method:\n`getJsonFacetingResponse()`. ",
            "author": "ASF subversion and git services",
            "date": "2018-11-18T15:30:18+0000"
        }
    ]
}