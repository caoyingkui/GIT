{
    "id": "SOLR-10718",
    "title": "Configuring Basic auth prevents adding a collection",
    "details": {
        "labels": "",
        "priority": "Critical",
        "components": [
            "Server"
        ],
        "type": "Bug",
        "fix_versions": [
            "6.6"
        ],
        "affect_versions": "6.5,                                            6.5.1",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Configure Basic auth according to documentation \nAdd basic auth params \nSOLR_AUTH_TYPE=\"basic\"\nSOLR_AUTHENTICATION_OPTS=\"-Dbasicauth=solr:SolrRocks\"\n\nTry to add a collection \nReceive a timeout and error in the logs \n\njava.lang.IllegalArgumentException: Credentials may not be null\n        at org.apache.http.util.Args.notNull(Args.java:54)\n        at org.apache.http.auth.AuthState.update(AuthState.java:113)\n        at org.apache.solr.client.solrj.impl.PreemptiveAuth.process(PreemptiveAuth.java:56)\n        at org.apache.http.protocol.ImmutableHttpProcessor.process(ImmutableHttpProcessor.java:132)\n        at org.apache.http.protocol.HttpRequestExecutor.preProcess(HttpRequestExecutor.java:166)\n        at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:485)\n        at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:882)\n        at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)\n        at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n        at org.apache.solr.client.solrj.impl.HttpSolrClient.executeMethod(HttpSolrClient.java:515)\n        at org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:279)\n        at org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:268)",
    "attachments": {
        "SOLR-10718.patch": "https://issues.apache.org/jira/secure/attachment/12870304/SOLR-10718.patch",
        "repro.sh": "https://issues.apache.org/jira/secure/attachment/12869992/repro.sh"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-05-26T03:54:36+0000",
            "content": "Attaching a script to reproduce the issue on Linux boxes.\n\nCan verify that the issue does exist on branch_6_5.  Cannot reproduce on master though; likely already fixed. ",
            "author": "Jason Gerlowski",
            "id": "comment-16025770"
        },
        {
            "date": "2017-05-26T23:32:19+0000",
            "content": "I manage to reproduce. And it works in master branch. However, the mechanism for building HttpClient changed a lot between 6.x and 7.x (PreemptiveBasicAuthConfigurer vs PreemptiveBasicAuthClientBuilderFactory etc), so I suppose there is something here that has not been tested properly.\n\nIt works fine for the initial call but fails when it is the Overseer that issues the collection creation from the queue. ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16027018"
        },
        {
            "date": "2017-05-28T00:06:29+0000",
            "content": "Jan H\u00f8ydahl I contributed the relevant changes recently (SOLR-9997). Let me take a look and get back to you. ",
            "author": "Hrishikesh Gadre",
            "id": "comment-16027654"
        },
        {
            "date": "2017-05-28T00:39:59+0000",
            "content": "Jan H\u00f8ydahl While I don't (yet) know the exact implementation issue, the root-cause is setting these two parameters while starting the Solr server.\n\n\ngrep -q \"^SOLR_AUTH_TYPE=\\\"basic\\\"\" bin/solr.in.sh\nif [ $? != 0 ]; then\n\techo 'SOLR_AUTH_TYPE=\"basic\"' >> bin/solr.in.sh\n\techo 'SOLR_AUTHENTICATION_OPTS=\"-Dbasicauth=solr:SolrRocks\"' >> bin/solr.in.sh\nfi\n\n\n\nNote that these parameters are required only on the client side. If you don't add these parameters to solr.in.sh before server startup, then it works as expected. For testing purpose, I just exported these environment variables on the command-line (instead of adding them to solr.in.sh).\n\nMay be we should just ensure that these environment variables are not considered during Solr server startup? ",
            "author": "Hrishikesh Gadre",
            "id": "comment-16027664"
        },
        {
            "date": "2017-05-28T21:49:20+0000",
            "content": "Yea, I can confirm it is only a problem when Solr is started with these options. I think that the first CREATE hop from client to Solr is authenticated ok, but once the overseer picks the job from the queue, things are messed up. Wonder if this will also be the case for other overseer operations?\n\nI'm not sure that avoiding these options during Solr startup will work, since it may break kerberos auth, see SOLR-10646. \n\nNote: I reproduced this using the new bin/solr auth feature in SOLR-8440 as well:\n\nbin/solr start -c\nbin/solr auth enable -credentials solr:rocks\nbin/solr stop\nbin/solr start -c\nbin/solr create -c foo\n*BOOM*\n\n\n\nI believe we must find a way to fix this where it crashes, else people who start using SOLR-8440 will start complaining once they restart their Solr instance... ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16027959"
        },
        {
            "date": "2017-05-29T14:02:40+0000",
            "content": "All the stack traces seem to originate from SolrCLI (i.e. this seems unrelated to internode communication within the Solr server), so this is not a very serious problem. I am still not sure which differences between master and branch_6x caused this to have happened. \n\nThe attached patch makes it work as expected. Jan H\u00f8ydahl, Hrishikesh Gadre, can you please give the patch a test? ",
            "author": "Ishan Chattopadhyaya",
            "id": "comment-16028373"
        },
        {
            "date": "2017-05-29T14:04:04+0000",
            "content": "I'm not sure that avoiding these options during Solr startup will work, since it may break kerberos auth,\nAgreed. It can break kerberos plugin configuration. ",
            "author": "Ishan Chattopadhyaya",
            "id": "comment-16028374"
        },
        {
            "date": "2017-05-29T14:14:22+0000",
            "content": "I think I also reproduced the situation through a HTTP call directly to admin/collection/, not using bin/solr.\nLooking at your patch, that was along the lines I was thinking. But why on earth are creds==null\u00a0here when -Dbasicauth exists as a global System property?  ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16028391"
        },
        {
            "date": "2017-05-29T16:48:01+0000",
            "content": "Seems like most requests that pass through that part of the code have valid credentials set in them. However, on just one occasion, I am observing, the request doesn't have valid credentials. I'm unable to figure out why that could be. Ignoring that request, as I have done there in the patch, seems to work fine.\n\nMy suggestion is to commit the patch, and release the 6.6 and follow up with a better fix (if any exists) in a 6.6.1 later. ",
            "author": "Ishan Chattopadhyaya",
            "id": "comment-16028511"
        },
        {
            "date": "2017-05-29T16:48:52+0000",
            "content": "Jan H\u00f8ydahl Ishan Chattopadhyaya I found the issue and the fix is attached.\n\nHere is the summary of the problem,\n\n\tSince we are using embedded ZK, the security.json needs to be uploaded after starting Solr server.\n\tBut since the basic authentication is configured during the server startup (via SOLR_AUTH_TYPE env variable), the default HTTP client in HttpShardHandler is configured with PreemptiveAuth request interceptor.\n\tWhen we upload security.json file, we invoke HttpShardHandlerFactory#reconfigureHttpClient(...) API to configure PKI authentication scheme. In this process, HttpClientUtil#setBasicAuth(...) API is invoked.\n\tIn the setBasicAuth(...) method we are cleaning only the credentials but not the PreemptiveAuth request interceptor. Hence when this HTTP client is used subsequently, we observe IllegalArgumentException since PreemptiveAuth request interceptor requires non-null credentials.\n\n\n\nSo the fix in this case is to remove PreemptiveAuth request interceptor when basic auth is not to be used. ",
            "author": "Hrishikesh Gadre",
            "id": "comment-16028513"
        },
        {
            "date": "2017-05-29T17:05:07+0000",
            "content": "Commit aec5d68a068aedbeec91a9d218a688acde1cacd0 in lucene-solr's branch refs/heads/branch_6_6 from Ishan Chattopadhyaya\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=aec5d68 ]\n\nSOLR-10718: Not using pre-emptive authentication interceptor when not using BasicAuth ",
            "author": "ASF subversion and git services",
            "id": "comment-16028517"
        },
        {
            "date": "2017-05-29T17:05:41+0000",
            "content": "Commit 91316cc8037712d81a623078e2e75664a4e03eb4 in lucene-solr's branch refs/heads/branch_6x from Ishan Chattopadhyaya\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=91316cc ]\n\nSOLR-10718: Not using pre-emptive authentication interceptor when not using BasicAuth ",
            "author": "ASF subversion and git services",
            "id": "comment-16028518"
        },
        {
            "date": "2017-05-29T17:06:41+0000",
            "content": "I tested the fix, and it works. Thanks everyone! ",
            "author": "Ishan Chattopadhyaya",
            "id": "comment-16028520"
        },
        {
            "date": "2017-05-29T20:18:16+0000",
            "content": "Good research Hrishikesh Gadre. Feels good to nail that one.\n\nHow could we improve our test suite to get better overall Auth coverage? Is it time to randomize BasicAuth true/false for all or majority of Cloud tests? ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16028603"
        }
    ]
}