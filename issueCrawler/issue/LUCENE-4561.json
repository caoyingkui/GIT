{
    "id": "LUCENE-4561",
    "title": "DWPT assert tripped again",
    "details": {
        "components": [],
        "fix_versions": [
            "4.1",
            "6.0"
        ],
        "affect_versions": "None",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "TestBagOfPositions tripped the spooky DWPT ram used on flush assert in http://jenkins.sd-datasolutions.de/job/Lucene-Solr-4.x-Linux/2472/\n\nIt reproduces for me:\n\n\nant test  -Dtestcase=TestBagOfPositions -Dtests.method=test -Dtests.seed=730E05D38A0E4AFA -Dtests.multiplier=3 -Dtests.slow=true -Dtests.locale=de_DE_PREEURO -Dtests.timezone=America/Metlakatla -Dtests.file.encoding=UTF-8\n\n\n\nFull failure:\n\n\n\n[junit4:junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestBagOfPositions -Dtests.method=test -Dtests.seed=730E05D38A0E4AFA -Dtests.multiplier=3 -Dtests.slow=true -Dtests.locale=de_DE_PREEURO -Dtests.timezone=America/Metlakatla -Dtests.file.encoding=UTF-8\n[junit4:junit4] ERROR   63.2s J0 | TestBagOfPositions.test <<<\n[junit4:junit4]    > Throwable #1: com.carrotsearch.randomizedtesting.UncaughtExceptionError: Captured an uncaught exception in thread: Thread[id=2163, name=Thread-1670, state=RUNNABLE, group=TGRP-TestBagOfPositions]\n[junit4:junit4]    > Caused by: java.lang.AssertionError: actual mem: 33763152 byte, expected mem: 33755888 byte, flush mem: 33610208, active mem: 152944, pending DWPT: 0, flushing DWPT: 2, blocked DWPT: 0, peakDelta mem: 67152 byte\n[junit4:junit4]    > \tat __randomizedtesting.SeedInfo.seed([730E05D38A0E4AFA]:0)\n[junit4:junit4]    > \tat org.apache.lucene.index.DocumentsWriterFlushControl.assertMemory(DocumentsWriterFlushControl.java:120)\n[junit4:junit4]    > \tat org.apache.lucene.index.DocumentsWriterFlushControl.doAfterDocument(DocumentsWriterFlushControl.java:187)\n[junit4:junit4]    > \tat org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:384)\n[junit4:junit4]    > \tat org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1451)\n[junit4:junit4]    > \tat org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:1126)\n[junit4:junit4]    > \tat org.apache.lucene.index.RandomIndexWriter.addDocument(RandomIndexWriter.java:201)\n[junit4:junit4]    > \tat org.apache.lucene.index.RandomIndexWriter.addDocument(RandomIndexWriter.java:160)\n[junit4:junit4]    > \tat org.apache.lucene.index.TestBagOfPositions$1.run(TestBagOfPositions.java:111)\n[junit4:junit4]    > Throwable #2: com.carrotsearch.randomizedtesting.UncaughtExceptionError: Captured an uncaught exception in thread: Thread[id=2164, name=Thread-1671, state=RUNNABLE, group=TGRP-TestBagOfPositions]\n[junit4:junit4]    > Caused by: java.lang.AssertionError: actual mem: 33763152 byte, expected mem: 33755888 byte, flush mem: 33610208, active mem: 152944, pending DWPT: 0, flushing DWPT: 2, blocked DWPT: 0, peakDelta mem: 67152 byte\n[junit4:junit4]    > \tat __randomizedtesting.SeedInfo.seed([730E05D38A0E4AFA]:0)\n[junit4:junit4]    > \tat org.apache.lucene.index.DocumentsWriterFlushControl.assertMemory(DocumentsWriterFlushControl.java:120)\n[junit4:junit4]    > \tat org.apache.lucene.index.DocumentsWriterFlushControl.doAfterDocument(DocumentsWriterFlushControl.java:187)\n[junit4:junit4]    > \tat org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:384)\n[junit4:junit4]    > \tat org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1451)\n[junit4:junit4]    > \tat org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:1126)\n[junit4:junit4]    > \tat org.apache.lucene.index.RandomIndexWriter.addDocument(RandomIndexWriter.java:201)\n[junit4:junit4]    > \tat org.apache.lucene.index.RandomIndexWriter.addDocument(RandomIndexWriter.java:160)\n[junit4:junit4]    > \tat org.apache.lucene.index.TestBagOfPositions$1.run(TestBagOfPositions.java:111)\n[junit4:junit4]    > Throwable #3: com.carrotsearch.randomizedtesting.UncaughtExceptionError: Captured an uncaught exception in thread: Thread[id=2166, name=Thread-1673, state=RUNNABLE, group=TGRP-TestBagOfPositions]\n[junit4:junit4]    > Caused by: java.lang.AssertionError: actual mem: 33763152 byte, expected mem: 33755888 byte, flush mem: 33610208, active mem: 152944, pending DWPT: 0, flushing DWPT: 2, blocked DWPT: 0, peakDelta mem: 67152 byte\n[junit4:junit4]    > \tat __randomizedtesting.SeedInfo.seed([730E05D38A0E4AFA]:0)\n[junit4:junit4]    > \tat org.apache.lucene.index.DocumentsWriterFlushControl.assertMemory(DocumentsWriterFlushControl.java:120)\n[junit4:junit4]    > \tat org.apache.lucene.index.DocumentsWriterFlushControl.doAfterDocument(DocumentsWriterFlushControl.java:187)\n[junit4:junit4]    > \tat org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:384)\n[junit4:junit4]    > \tat org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1451)\n[junit4:junit4]    > \tat org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:1126)\n[junit4:junit4]    > \tat org.apache.lucene.index.RandomIndexWriter.addDocument(RandomIndexWriter.java:201)\n[junit4:junit4]    > \tat org.apache.lucene.index.RandomIndexWriter.addDocument(RandomIndexWriter.java:160)\n[junit4:junit4]    > \tat org.apache.lucene.index.TestBagOfPositions$1.run(TestBagOfPositions.java:111)\n[junit4:junit4]   2> NOTE: test params are: codec=SimpleText, sim=RandomSimilarityProvider(queryNorm=false,coord=no): {field=DFR I(ne)1}, locale=de_DE_PREEURO, timezone=America/Metlakatla\n[junit4:junit4]   2> NOTE: Linux 3.2.0-32-generic amd64/IBM Corporation 1.6.0 (64-bit)/cpus=8,threads=1,free=55064736,total=63793152\n[junit4:junit4]   2> NOTE: All tests run in this JVM: [Nested1, TestIndexWriterWithThreads, TestLevenshteinAutomata, TestBasicOperations, TestStressNRT, TestIndexWriterExceptions, TestConjunctions, TestMultiLevelSkipList, TestConcurrentMergeScheduler, TestIndexWriterOnDiskFull, TestBytesRef, TestThreadedForceMerge, TestDocument, TestCopyBytes, TestIndexWriterNRTIsCurrent, TestScoreCachingWrappingScorer, TestScorerPerf, TestDocValuesTypeCompatibility, TestPrefixCodedTerms, TestRollingBuffer, TestPhrasePrefixQuery, Test4GBStoredFields, TestCustomSearcherSort, TestExplanations, TestIndexInput, TestMultiThreadTermVectors, TestTermInfosReaderIndex, TestSearchAfter, Test2BPositions, TestField, TestSimpleAttributeImpl, TestFlushByRamOrCountsPolicy, TestSimilarityBase, TestByteSlices, TestFlex, TestRecyclingByteBlockAllocator, TestCrash, Test2BTerms, TestSearcherManager, TestDeterminism, TestDemo, TestSpanExplanationsOfNonMatches, TestSubScorerFreqs, TestDocIdSet, TestFieldValueFilter, TestSpanMultiTermQueryWrapper, TestTermVectors, TestSurrogates, TestSimilarity2, Nested1, TestParallelReaderEmptyIndex, TestShardSearching, TestBlockPostingsFormat3, TestPagedBytes, TestCustomNorms, Before3, Before3, TestSegmentReader, TestMatchAllDocsQuery, TestTopDocsCollector, TestNoMergeScheduler, TestDeletionPolicy, Nested1, ThrowInUncaught, TestMultiTermConstantScore, TestPhraseQuery, TestGraphTokenizers, TestBitVector, TestPerFieldPostingsFormat2, TestSegmentTermEnum, TestVersion, TestNGramPhraseQuery, TestBackwardsCompatibility3x, TestRegexpRandom2, TestDirectoryReaderReopen, TestCompoundFile, TestBlockPostingsFormat, TestNRTThreads, TestPayloads, TestTransactions, TestTermRangeQuery, TestSmallFloat, TestFSTs, TestNorms, TestLookaheadTokenFilter, TestDuelingCodecs, TestAtomicUpdate, TestTermsEnum, TestMultiMMap, TestTimeLimitingCollector, TestTopDocsMerge, TestNRTManager, TestArrayUtil, TestBufferedIndexInput, TestIndexWriterForceMerge, TestIndexWriterCommit, TestWeakIdentityMap, TestTypePromotion, TestSimpleExplanations, TestStressIndexing, TestSnapshotDeletionPolicy, TestNRTReaderWithThreads, TestTieredMergePolicy, TestConsistentFieldNumbers, TestCrashCausesCorruptIndex, TestNumericUtils, TestMultiValuedNumericRangeQuery, TestCharTermAttributeImpl, TestRollingUpdates, TestPrefixInBooleanQuery, TestBytesRefHash, TestRamUsageEstimatorOnWildAnimals, TestFieldCacheRangeFilter, TestPayloadSpans, TestMixedCodecs, TestSegmentTermDocs, TestFieldCacheSanityChecker, TestDoc, TestMergeSchedulerExternal, TestOmitTf, TestDisjunctionMaxQuery, TestSimpleSearchEquivalence, Nested, Nested, Nested, Nested, Nested, Nested, Nested, Nested, Nested, Nested, Nested, Nested, Nested, Nested, Nested, Nested, Nested, Nested, Nested, Nested, Nested, TestPayloadNearQuery, TestFilteredQuery, TestPayloadExplanations, TestDocsAndPositions, TestTransactionRollback, TestCompiledAutomaton, TestSentinelIntSet, TestIndexableField, TestBooleanQuery, TestAutomatonQuery, TestComplexExplanationsOfNonMatches, TestRegexpQuery, TestDocCount, TestSearchForDuplicates, TestFilteredSearch, NestedSetupChain, NestedTeardownChain, Nested, Nested, TestDateFilter, TestSpansAdvanced, TestConstantScoreQuery, TestDateTools, TestSearch, TestReaderClosed, TestElevationComparator, TestAutomatonQueryUnicode, TestDateSort, TestBinaryDocument, TestSpanFirstQuery, TestPriorityQueue, TestDocBoost, TestMockCharFilter, TestIsCurrent, TestPrefixFilter, TestBitUtil, TestVersionComparator, TestCachingTokenFilter, TestTermdocPerf, TestTerm, TestLucene40PostingsFormat, TestAllFilesHaveCodecHeader, TestBagOfPositions]",
    "attachments": {
        "LUCENE-4561.patch": "https://issues.apache.org/jira/secure/attachment/12553756/LUCENE-4561.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-11-15T16:48:23+0000",
            "content": "Reproduces for me too on mac (I explicitly did svn up -r1409527)\n\nThis is the first time this assert has ever reproduced... ",
            "author": "Robert Muir",
            "id": "comment-13498126"
        },
        {
            "date": "2012-11-15T17:24:16+0000",
            "content": "reproduces for me too! I will look into that tomorrow... ",
            "author": "Simon Willnauer",
            "id": "comment-13498152"
        },
        {
            "date": "2012-11-16T09:14:17+0000",
            "content": "Phew... glad it reproduced.... \nSo the problem here is the same as it was the last time that the assert is tripped when multiple threads already crossed the stall check before we actually stalled. I fixed this last time with checking the number of active thread states in the pool to get an upper bound but that is actually error prone. In this test here the thread pool only had one thread state but some of the indexing threads already went past the stall check and waited on the DWPTPool to lock that single state. At the same time flushing was so slow (simple text + throttle) that memory piled up and we stalled. But the calculation was simply wrong since there were 3 threads waiting for the DWPT lock but we counted only one in the assert. I added a counter that checks how many updates we see during a stall period. This give a tighter bound but its independent of the # of thread states in the pool ",
            "author": "Simon Willnauer",
            "id": "comment-13498684"
        },
        {
            "date": "2012-11-16T12:49:29+0000",
            "content": "Phew, sneaky!\n\n+1 ",
            "author": "Michael McCandless",
            "id": "comment-13498779"
        },
        {
            "date": "2012-11-16T13:09:14+0000",
            "content": "committed to trunk in rev. 1410326\nmerged to branch_4x in rev. 1410331 ",
            "author": "Simon Willnauer",
            "id": "comment-13498794"
        },
        {
            "date": "2013-03-22T16:16:56+0000",
            "content": "[branch_4x commit] Simon Willnauer\nhttp://svn.apache.org/viewvc?view=revision&revision=1410331\n\nLUCENE-4561: count in-flight threads for asserting memory ",
            "author": "Commit Tag Bot",
            "id": "comment-13610546"
        }
    ]
}