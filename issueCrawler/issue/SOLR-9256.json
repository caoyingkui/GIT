{
    "id": "SOLR-9256",
    "title": "Solr 6.x DataImportHandler fails with postgreSQL dataSource with multiple joined entities",
    "details": {
        "components": [
            "update"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.0.2",
            "6.1",
            "6.1.1",
            "6.2",
            "7.0"
        ],
        "affect_versions": "6.0,                                            6.0.1",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "solr-data-config.xml\n\n<dataConfig>\n  <dataSource name=\"jdbc\" driver=\"org.postgresql.Driver\" url=\"jdbc:postgresql://host:5432/database\" user=\"username\" password=\"password\" readOnly=\"true\" autoCommit=\"false\" />\n  <document>\n    <entity name=\"outer\" dataSource=\"jdbc\" pk=\"id\" query=\"SELECT id, a FROM table_a ORDER BY id ASC\">\n\t\t<field column=\"id\" name=\"id\" />\n\t\t<field column=\"a\" name=\"a\" />\n\t\n\t\t<entity name=\"inner_one\" query=\"SELECT a_id, b FROM table_b\"\n\t\t\t\tcacheKey=\"a_id\" cacheLookup=\"outer.id\" cacheImpl=\"SortedMapBackedCache\">\n\t\t\t<field column=\"b\" name=\"b\" />\n\t\t</entity>\n\t\t\n\t\t<entity name=\"inner_two\" query=\"SELECT a_id, c FROM table_c ORDER BY a_id ASC\"\n\t\t\t\tcacheKey=\"a_id\" cacheLookup=\"outer.id\" join=\"zipper\">\n\t\t\t<field column=\"c\" name=\"c\" />\n\t\t</entity>\n\n\t</entity>\n  </document>\n</dataConfig>\n\n\n\nThis works up to SOLR 5.5.2 (latest 5.x) but fails in SOLR 6.x.\n\nException:\n\norg.apache.solr.handler.dataimport.DataImportHandlerException: org.postgresql.util.PSQLException: Dieses ResultSet ist geschlossen.\n        at org.apache.solr.handler.dataimport.DataImportHandlerException.wrapAndThrow(DataImportHandlerException.java:61)\n        at org.apache.solr.handler.dataimport.JdbcDataSource$ResultSetIterator.hasnext(JdbcDataSource.java:434)\n        at org.apache.solr.handler.dataimport.JdbcDataSource$ResultSetIterator$1.hasNext(JdbcDataSource.java:350)\n        at com.google.common.collect.Iterators$PeekingImpl.hasNext(Iterators.java:1216)\n        at org.apache.solr.handler.dataimport.Zipper.supplyNextChild(Zipper.java:65)\n        at org.apache.solr.handler.dataimport.EntityProcessorBase.getNext(EntityProcessorBase.java:127)\n        at org.apache.solr.handler.dataimport.SqlEntityProcessor.nextRow(SqlEntityProcessor.java:75)\n        at org.apache.solr.handler.dataimport.EntityProcessorWrapper.nextRow(EntityProcessorWrapper.java:244)\n        at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:475)\n        at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:514)\n        at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:414)\n        at org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:329)\n        at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:232)\n        at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:416)\n        at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:480)\n        at org.apache.solr.handler.dataimport.DataImportHandler.handleRequestBody(DataImportHandler.java:200)\n        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:155)\n        at org.apache.solr.core.SolrCore.execute(SolrCore.java:2053)\n        at org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:652)\n        at org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:460)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:229)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:184)\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\n        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1160)\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1092)\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n        at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)\n        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:119)\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)\n        at org.eclipse.jetty.server.Server.handle(Server.java:518)\n        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:308)\n        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:244)\n        at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:273)\n        at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)\n        at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93)\n        at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:246)\n        at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:156)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\n        at java.lang.Thread.run(Thread.java:745)",
    "attachments": {
        "SOLR-9256.patch": "https://issues.apache.org/jira/secure/attachment/12818228/SOLR-9256.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-06-27T16:13:35+0000",
            "author": "Benjamin Richter",
            "content": "This could be caused by postgres limitations. Postgres only allows one open resultset per connection. Recent changes to JdbcDataSource.java     optimized connection reusing and resultset closing.  ",
            "id": "comment-15351335"
        },
        {
            "date": "2016-07-08T08:02:01+0000",
            "author": "Mikhail Khludnev",
            "content": "Can you declare same jdbc twice and use the second with the second entity? ",
            "id": "comment-15367376"
        },
        {
            "date": "2016-07-14T21:57:34+0000",
            "author": "Mikhail Khludnev",
            "content": "Kristine Jetzke,Kristine Jetzke, can you comment on it?  ",
            "id": "comment-15378468"
        },
        {
            "date": "2016-07-15T11:14:22+0000",
            "author": "Benjamin Richter",
            "content": "I tried to reproduce the problem with SOLR 6.1 again, but it seems this error does only occur on 6.0 and 6.0.1. Sorry for the confusion. ",
            "id": "comment-15379250"
        },
        {
            "date": "2016-07-15T11:23:30+0000",
            "author": "Benjamin Richter",
            "content": "Tried SOLR 6.0.1 with multiple dataSources (jdbc1, jdbc2, ... jdbc22) ... same error. ",
            "id": "comment-15379257"
        },
        {
            "date": "2016-07-15T18:43:44+0000",
            "author": "Kristine Jetzke",
            "content": "I was able to reproduce it in 6.0.1 as well. It also works for me in 6.1.0. \nIt fails in 6.0.1 if one of the inner queries returns no result. \n\nMikhail Khludnev Which branches correspond to those versions? The result set handling in  JdbcDataSource.java does not differ in branch_6_0 and branch_6_1. UPDATE: Nevermind, I found the tags. They do differ in the result handling. ",
            "id": "comment-15379887"
        },
        {
            "date": "2016-07-15T19:05:52+0000",
            "author": "Kristine Jetzke",
            "content": "This commit broke it: https://github.com/apache/lucene-solr/commit/13c9912b3c4698595db8d07fcbc09fe062ee5404 (because the hasnext method always uses the initially created result set. This is closed if no more results are returned. Thus, the exception is thrown the next time the hasnext method is called. In the version before and after, the result set field is accessed instead which is set to null if no more results are available. Thus, no methods are called afterwards and no exception is thrown. )\nThis commit fixed it:  https://github.com/apache/lucene-solr/commit/22e5d31cdc9e94aec8043fd451ae1918b5062528\n\nBenjamin Richter If you can't upgrade to 6.1.0, you could create a copy the current version of org.apache.solr.handler.dataimport.JdbcDataSource in your own source code and reference it  in your data config files. ",
            "id": "comment-15379929"
        },
        {
            "date": "2016-07-15T20:35:57+0000",
            "author": "Kristine Jetzke",
            "content": "Mikhail Khludnev I attached a unit test for the master branch (The 6.0 branch would need a slightly different one) . I think there is nothing else to do since it works correctly in all open branches. ",
            "id": "comment-15380066"
        },
        {
            "date": "2016-07-15T20:51:14+0000",
            "author": "Mikhail Khludnev",
            "content": "Thanks, Kristine Jetzke!  ",
            "id": "comment-15380089"
        },
        {
            "date": "2016-08-02T12:06:56+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 209bfcf02131e6c9196d3f9f6bd69d7ae2a6fc63 in lucene-solr's branch refs/heads/master from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=209bfcf ]\n\nSOLR-9209,SOLR-9256: extracting\nJdbcDataSource.createResultSetIterator(), adding a test for\nResultSetIterator.hasNext()  ",
            "id": "comment-15403867"
        },
        {
            "date": "2016-08-02T12:15:27+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 77409fd43264e57d1b65f5fee3b9c7277d2f740a in lucene-solr's branch refs/heads/branch_6x from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=77409fd ]\n\nSOLR-9209,SOLR-9256: extracting\nJdbcDataSource.createResultSetIterator(), adding a test for\nResultSetIterator.hasNext()  ",
            "id": "comment-15403883"
        }
    ]
}