{
    "id": "SOLR-7636",
    "title": "CLUSTERSTATUS Api should not go to OCP to fetch data",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.3",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "Currently it does  multiple ZK operations which is not required. It should just read the status from ZK and return from the CollectionsHandler",
    "attachments": {
        "SOLR-7636.patch": "https://issues.apache.org/jira/secure/attachment/12737532/SOLR-7636.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-06-04T10:55:01+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1683514 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1683514 ]\n\nSOLR-7636: CLUSTERSTATUS API is executed at CollectionsHandler ",
            "id": "comment-14572531"
        },
        {
            "date": "2015-06-04T10:57:07+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1683515 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1683515 ]\n\nSOLR-7636: set svn eol style ",
            "id": "comment-14572533"
        },
        {
            "date": "2015-06-04T11:15:58+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1683519 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1683519 ]\n\nSOLR-7636: CLUSTERSTATUS API is executed at CollectionsHandler ",
            "id": "comment-14572549"
        },
        {
            "date": "2015-06-04T13:37:14+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "I don't think this change is right. Earlier, cluster status was guaranteed to return the latest and most up-to-date cluster state but with this change, a node which is not connected to ZooKeeper can return stale data. This change should either be reverted or fixed. ",
            "id": "comment-14572758"
        },
        {
            "date": "2015-06-04T13:41:20+0000",
            "author": "Noble Paul",
            "content": "In the previous model if the node cannot connect to zk how do you expect it to send a message to the OCP ?  ",
            "id": "comment-14572769"
        },
        {
            "date": "2015-06-04T13:50:01+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "In the previous model if the node cannot connect to zk how do you expect it to send a message to the OCP ?\n\nThat's right. It does not go to OCP but errors out. This commit breaks that guarantee. After this change, when I issue a clusterstatus command I have no idea whether I am getting stale state or not. ",
            "id": "comment-14572776"
        },
        {
            "date": "2015-06-04T13:59:00+0000",
            "author": "Noble Paul",
            "content": "The node should try to fetch the latest state and if it is not able to connect just fail ",
            "id": "comment-14572797"
        },
        {
            "date": "2015-06-04T14:31:57+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1683558 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1683558 ]\n\nSOLR-7636: Update from ZK before returning the status ",
            "id": "comment-14572874"
        },
        {
            "date": "2015-06-04T14:33:47+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1683560 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1683560 ]\n\nSOLR-7636: Update from ZK before returning the status ",
            "id": "comment-14572878"
        },
        {
            "date": "2015-06-08T15:50:49+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Thanks, I think this is better.\n\nYou added a todo item in OverseerCollectionProcessor#checkExclusivity. Please take care of it too. ",
            "id": "comment-14577383"
        },
        {
            "date": "2015-06-08T16:16:30+0000",
            "author": "Noble Paul",
            "content": "That is for back compat. We should remove it in a later release ",
            "id": "comment-14577413"
        },
        {
            "date": "2015-06-08T16:19:37+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Ah, okay. +1 to close this issue then. ",
            "id": "comment-14577417"
        },
        {
            "date": "2015-06-08T19:32:17+0000",
            "author": "Varun Thacker",
            "content": "I'll mark SOLR-7464 as duplicate then. \n\nShalin the concern that you raised about the node now returning stale results will also apply to other operations like LIST which are served from the CollectionsHandler as well? ",
            "id": "comment-14577700"
        },
        {
            "date": "2015-06-08T19:38:34+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Shalin the concern that you raised about the node now returning stale results will also apply to other operations like LIST which are served from the CollectionsHandler as well?\n\nYes, for the sake of correctness, LIST should also hit ZK directly. It'd perhaps be overkill to update the entire cluster state though. ",
            "id": "comment-14577707"
        },
        {
            "date": "2015-06-08T20:21:11+0000",
            "author": "Varun Thacker",
            "content": "Yes, for the sake of correctness, LIST should also hit ZK directly. It'd perhaps be overkill to update the entire cluster state though.\n\nRight. Thought as well.\n\n\nIf users call the cluster status api frequently wouldn't the benefit of moving this out of the OCP be lost? APIs like CLUSTERSTATUS/LIST are probably consumed by monitoring applications which might call it quite frequently. ",
            "id": "comment-14577768"
        },
        {
            "date": "2015-06-09T03:39:44+0000",
            "author": "Noble Paul",
            "content": "If users call the cluster status api frequently wouldn't the benefit of moving this out of the OCP be lost? \n\nBefore this fix, the call path was as follows\n\ncolectionshandler -> ZK Q -> OCP -> (ZK Q read + ZK Q DEL + ZK Q Write) -> (CollectionsHandler ZK READ+ DEL)\n\nNow it has become\n\nCollectionsHandler -> ZK READ \n\nSo, this is definitely a win as of now. ",
            "id": "comment-14578256"
        },
        {
            "date": "2015-06-09T03:40:42+0000",
            "author": "Noble Paul",
            "content": "other operations like LIST which are served from the CollectionsHandler as well?\n\nAll READ operations must be served directly from CollectionsHandler ",
            "id": "comment-14578258"
        },
        {
            "date": "2015-06-09T05:14:32+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "\nBefore this fix, the call path was as follows\ncolectionshandler -> ZK Q -> OCP -> (ZK Q read + ZK Q DEL + ZK Q Write) -> (CollectionsHandler ZK READ+ DEL)\nNow it has become\nCollectionsHandler -> ZK READ\nSo, this is definitely a win as of now.\n\nThat is not true. Because we have to forcefully update the cluster state, we have CollectionsHandler -> ZK getChildren (/live_nodes) + ZK read (/clusterstate.json) + ZK getChildren + N * ZK exists (for getIndividualColls) + W * ZK exists + W * getData (for watched collections) + (N-W) * ZK exists + (N-W) * ZK getData (for non-watched collections). ",
            "id": "comment-14578332"
        },
        {
            "date": "2015-06-09T05:25:39+0000",
            "author": "Noble Paul",
            "content": "Yeah , I have lumped them together as ZK read. We can optimize the update states  ",
            "id": "comment-14578341"
        },
        {
            "date": "2015-06-09T05:32:10+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Yes, some of the ZK exists + ZK read combinations can be simplified to just use ZK reads. I'll open an issue. ",
            "id": "comment-14578347"
        },
        {
            "date": "2015-08-26T13:06:21+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Bulk close for 5.3.0 release ",
            "id": "comment-14713296"
        }
    ]
}