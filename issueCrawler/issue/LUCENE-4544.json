{
    "id": "LUCENE-4544",
    "title": "possible bug in ConcurrentMergeScheduler.merge(IndexWriter)",
    "details": {
        "components": [
            "core/other"
        ],
        "fix_versions": [
            "4.1",
            "6.0"
        ],
        "affect_versions": "6.0",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "from dev list:\n\n\u00a8i suspect that this code is broken. Lines 331 - 343 in org.apache.lucene.index.ConcurrentMergeScheduler.merge(IndexWriter)\n\nmergeThreadCount() are currently active merges, they can be at most maxThreadCount, maxMergeCount is number of queued merges defaulted with maxThreadCount+2 and it can never be lower then maxThreadCount, which means that condition in while can never become true.\n\n      synchronized(this) {\n        long startStallTime = 0;\n        while (mergeThreadCount() >= 1+maxMergeCount) {\n          startStallTime = System.currentTimeMillis();\n          if (verbose()) \n{\n            message(\"    too many merges; stalling...\");\n          }\n          try \n{\n            wait();\n          }\n catch (InterruptedException ie) \n{\n            throw new ThreadInterruptedException(ie);\n          }\n        } \n\nWhile confusing, I think the code is actually nearly correct... but I\nwould love to find some simplifications of CMS's logic (it's really\nhairy).\n\nIt turns out mergeThreadCount() is allowed to go higher than\nmaxThreadCount; when this happens, Lucene pauses\nmergeThreadCount()-maxThreadCount of those merge threads, and resumes\nthem once threads finish (see updateMergeThreads).  Ie, CMS will\naccept up to maxMergeCount merges (and launch threads for them), but\nwill only allow maxThreadCount of those threads to be running at once.\n\nSo what that while loop is doing is preventing more than\nmaxMergeCount+1 threads from starting, and then pausing the incoming\nthread to slow down the rate of segment creation (since merging cannot\nkeep up).\n\nBut ... I think the 1+ is wrong ... it seems like it should just be\nmergeThreadCount() >= maxMergeCount().",
    "attachments": {
        "LUCENE-4544.patch": "https://issues.apache.org/jira/secure/attachment/12552332/LUCENE-4544.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-11-06T20:08:54+0000",
            "content": "Patch.\n\nIt was somewhat tricky to fix the off-by-one, because we only want to stall the thread(s) producing segments if the number of running merges is >= maxMergeCount AND another merge wants to kick off ... I made CMS.merged sync'd, and removed the synchronous IW.mergeInit (I think deterministic segment name assignment isn't important). ",
            "author": "Michael McCandless",
            "id": "comment-13491777"
        },
        {
            "date": "2012-11-06T20:46:14+0000",
            "content": "it can not be made simple by not creating thread for every new segment merge but to use standard threadpool + queue scheme? Lot of libraries can do it easily. ",
            "author": "Radim Kolar",
            "id": "comment-13491800"
        },
        {
            "date": "2012-11-07T16:00:09+0000",
            "content": "I think it needs more than cutting over to thread pool to clean it up \n\nWe've actually looked at using a thread pool (see LUCENE-2063) but it apparently wasn't straightforward ... if you can see a way that'd be nice \n\nBut I think we should do that under a separate issue ... leave this one focused on the off-by-one on maxMergeCount. ",
            "author": "Michael McCandless",
            "id": "comment-13492446"
        },
        {
            "date": "2012-11-07T18:14:20+0000",
            "content": "Added test case ... I think it's ready. ",
            "author": "Michael McCandless",
            "id": "comment-13492565"
        },
        {
            "date": "2013-03-22T16:18:09+0000",
            "content": "[branch_4x commit] Michael McCandless\nhttp://svn.apache.org/viewvc?view=revision&revision=1408092\n\nLUCENE-4544: fix off-by-one in max number of CMS merge threads ",
            "author": "Commit Tag Bot",
            "id": "comment-13610570"
        }
    ]
}