{
    "id": "SOLR-7846",
    "title": "QTs with $variable does not work with query parameter substitution",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "http://yonik.com/solr-query-parameter-substitution/\n\nThis is not working as part of QTs in solrconfig.xml due to XML System Property Substitution getting confused in SOLR 5.2.1.\n\nCannot load the core, since ${value} is being used for XML parameters for system property substitution.\n\nhttps://wiki.apache.org/solr/SolrConfigXml#System_property_substitution\n\nCan we support both?\n\n<str name=\"pspec\">PS127</str>\n<str name=\"hqval1\">hosp_quality_spec_boost:${pspec}</str>\n\nThis does not work since it thinks it is a System Property.\n\nWe can check System Property and if not defined assume it is in Query, or have a new parameter? \n\n\n${variable} - for System Properties\n${{variable}} - for Query Parameters?\n\n\nThoughts?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2015-07-31T23:21:02+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Perhaps what we need is a generic way to escape the ${} syntax in XML files. A simple \\${} could work, but is perhaps dangerous because many places Windows file paths may contain sysprop expansion, e.g. C:\\${dir}\\foo. ",
            "id": "comment-14649989"
        },
        {
            "date": "2015-08-02T20:33:08+0000",
            "author": "Bill Bell",
            "content": "There is a work around, \n\n<str name=\"pspec\">PS127</str>\n<str name=\"hqval1\">hosp_quality_spec_boost:${pspec:${pspec}}</str>\n\nThis works. ",
            "id": "comment-14651169"
        }
    ]
}