{
    "id": "SOLR-6991",
    "title": "Update to Apache TIKA 1.7",
    "details": {
        "components": [
            "contrib - Solr Cell (Tika extraction)"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.0",
            "5.1",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Apache TIKA 1.7 was released: https://dist.apache.org/repos/dist/release/tika/CHANGES-1.7.txt\n\nThis is more or less a dependency update, so replacements. Not sure if we should do this for 5.0. In 5.0 we currently have the previous version, which was not yet released with Solr. If we now bring this into 5.0, we wouldn't have a new release 2 times. I can change the stuff this evening and let it bake in 5.x, so maybe we backport this.",
    "attachments": {
        "SOLR-6991.patch": "https://issues.apache.org/jira/secure/attachment/12692970/SOLR-6991.patch",
        "SOLR-6991-forkfix.patch": "https://issues.apache.org/jira/secure/attachment/12693669/SOLR-6991-forkfix.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-01-16T23:06:31+0000",
            "author": "Anshum Gupta",
            "content": "Uwe did you recommend upgrading Tika for 5.0? If someone can do it and no one minds, I'm actually ok with it specially if it's just a drop in. ",
            "id": "comment-14280961"
        },
        {
            "date": "2015-01-16T23:21:02+0000",
            "author": "Uwe Schindler",
            "content": "I will check out tomorrow morning. If it is not just plug in, I leave it for now. So don't stop the release process, if you are working on it. ",
            "id": "comment-14280983"
        },
        {
            "date": "2015-01-18T11:21:14+0000",
            "author": "Uwe Schindler",
            "content": "Here is the patch. It is just updating dependencies. I am currently running tests, but looks fine. I will check if SOLR-6489 tests are still not working, but this does not really affect this update.\nThis also adds tika-java7 SPI library to support filetype detection using bundled Java 7 tools. ",
            "id": "comment-14281740"
        },
        {
            "date": "2015-01-18T11:39:31+0000",
            "author": "Uwe Schindler",
            "content": "Patch that updates CHANGES.txt and versions.\n\nAnshum Gupta: It is up to you: Should I commit to 5.0 branch, too? One important thing is: It uses a non-beta version of Apache POI, so I have a better feeling \n\nI will check the morphlines again and then commit to trunk and 5.x. ",
            "id": "comment-14281749"
        },
        {
            "date": "2015-01-18T11:48:19+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1652742 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1652742 ]\n\nSOLR-6991: Update to Apache TIKA 1.7 ",
            "id": "comment-14281756"
        },
        {
            "date": "2015-01-18T11:52:51+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1652743 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1652743 ]\n\nSOLR-6991: Apply correct sorting ",
            "id": "comment-14281757"
        },
        {
            "date": "2015-01-18T11:55:31+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1652745 from Uwe Schindler in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1652745 ]\n\nSOLR-6991: Update to Apache TIKA 1.7 ",
            "id": "comment-14281758"
        },
        {
            "date": "2015-01-18T11:57:31+0000",
            "author": "Uwe Schindler",
            "content": "I committed to trunk and branch_5x. I leave the issue open to wait for Anshum Gupta. ",
            "id": "comment-14281761"
        },
        {
            "date": "2015-01-18T15:46:33+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1652783 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1652783 ]\n\nSOLR-6991: Add missing license and notice. Remove outdated stuff from notice files. ",
            "id": "comment-14281834"
        },
        {
            "date": "2015-01-18T15:47:29+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1652784 from Uwe Schindler in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1652784 ]\n\nMerged revision(s) 1652783 from lucene/dev/trunk:\nSOLR-6991: Add missing license and notice. Remove outdated stuff from notice files. ",
            "id": "comment-14281835"
        },
        {
            "date": "2015-01-18T18:49:43+0000",
            "author": "Anshum Gupta",
            "content": "Thanks for doing that Uwe Schindler.\nConsidering that Tika 1.7 uses a non-beta version of Apache POI and also that ODF parsing in Tika 1.6 is actually broken, i.e. throws exceptions for any ODF doc while Tika 1.7 fixes that, I think we should go with 1.7 on 5.0. ",
            "id": "comment-14281897"
        },
        {
            "date": "2015-01-18T18:55:35+0000",
            "author": "Uwe Schindler",
            "content": "OK, I backport! ",
            "id": "comment-14281898"
        },
        {
            "date": "2015-01-18T19:00:44+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1652831 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1652831 ]\n\nSOLR-6991: Move changes ",
            "id": "comment-14281901"
        },
        {
            "date": "2015-01-18T19:01:42+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1652832 from Uwe Schindler in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1652832 ]\n\nMerged revision(s) 1652831 from lucene/dev/trunk:\nSOLR-6991: Move changes ",
            "id": "comment-14281902"
        },
        {
            "date": "2015-01-18T19:10:54+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1652834 from Uwe Schindler in branch 'dev/branches/lucene_solr_5_0'\n[ https://svn.apache.org/r1652834 ]\n\nMerged revision(s) 1652742-1652743, 1652783, 1652831 from lucene/dev/trunk:\nSOLR-6991: Update to Apache TIKA 1.7\nSOLR-6991: Apply correct sorting\nSOLR-6991: Add missing license and notice. Remove outdated stuff from notice files.\nSOLR-6991: Move changes ",
            "id": "comment-14281912"
        },
        {
            "date": "2015-01-18T19:13:23+0000",
            "author": "Uwe Schindler",
            "content": "OK. I backported. I'll trigger a smoker build to be sure all is fine. ",
            "id": "comment-14281914"
        },
        {
            "date": "2015-01-18T19:17:27+0000",
            "author": "Uwe Schindler",
            "content": "also that ODF parsing in Tika 1.6 is actually broken, i.e. throws exceptions for any ODF doc while Tika 1.7 fixes that\n\nI asume you mean that one: TIKA-1412 Good catch. We catually have no test documents in contrib/extraction in ODF format. We should add one, would you open issue? I can check that out. ",
            "id": "comment-14281918"
        },
        {
            "date": "2015-01-18T21:04:58+0000",
            "author": "Uwe Schindler",
            "content": "Smoke tester of 5.0 was happy. ",
            "id": "comment-14281960"
        },
        {
            "date": "2015-01-19T07:37:13+0000",
            "author": "Anshum Gupta",
            "content": "Thanks for taking that up Uwe. I've created SOLR-6996 for adding an ODF doc test for contrib/extraction. ",
            "id": "comment-14282220"
        },
        {
            "date": "2015-01-21T18:29:26+0000",
            "author": "Steve Rowe",
            "content": "Reopening to address this Mac OS X failure in solr-cell:\n\n\nBuild: http://jenkins.thetaphi.de/job/Lucene-Solr-trunk-MacOSX/1943/\nJava: 64bit/jdk1.8.0 -XX:+UseCompressedOops -XX:+UseConcMarkSweepGC\n\n1 tests failed.\nFAILED:  org.apache.solr.handler.extraction.ExtractingRequestHandlerTest.testXPath\n\n...\n\n  [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=ExtractingRequestHandlerTest -Dtests.method=testXPath -Dtests.seed=58A6FBEB77E81527 -Dtests.slow=true -Dtests.locale=tr_TR -Dtests.timezone=Etc/GMT+3 -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n  [junit4] ERROR   2.57s | ExtractingRequestHandlerTest.testXPath <<<\n  [junit4]    > Throwable #1: java.lang.Error: posix_spawn is not a supported process launch mechanism on this platform.\n  [junit4]    > \tat __randomizedtesting.SeedInfo.seed([58A6FBEB77E81527:26F735786F5F7761]:0)\n  [junit4]    > \tat java.lang.UNIXProcess$1.run(UNIXProcess.java:105)\n  [junit4]    > \tat java.lang.UNIXProcess$1.run(UNIXProcess.java:94)\n  [junit4]    > \tat java.security.AccessController.doPrivileged(Native Method)\n  [junit4]    > \tat java.lang.UNIXProcess.<clinit>(UNIXProcess.java:92)\n  [junit4]    > \tat java.lang.ProcessImpl.start(ProcessImpl.java:130)\n  [junit4]    > \tat java.lang.ProcessBuilder.start(ProcessBuilder.java:1029)\n  [junit4]    > \tat java.lang.Runtime.exec(Runtime.java:620)\n  [junit4]    > \tat java.lang.Runtime.exec(Runtime.java:485)\n  [junit4]    > \tat org.apache.tika.parser.external.ExternalParser.check(ExternalParser.java:344)\n  [junit4]    > \tat org.apache.tika.parser.ocr.TesseractOCRParser.hasTesseract(TesseractOCRParser.java:117)\n  [junit4]    > \tat org.apache.tika.parser.ocr.TesseractOCRParser.getSupportedTypes(TesseractOCRParser.java:90)\n  [junit4]    > \tat org.apache.tika.parser.CompositeParser.getParsers(CompositeParser.java:81)\n  [junit4]    > \tat org.apache.tika.parser.DefaultParser.getParsers(DefaultParser.java:95)\n  [junit4]    > \tat org.apache.tika.parser.CompositeParser.getSupportedTypes(CompositeParser.java:229)\n  [junit4]    > \tat org.apache.tika.parser.CompositeParser.getParsers(CompositeParser.java:81)\n  [junit4]    > \tat org.apache.tika.parser.CompositeParser.getParser(CompositeParser.java:209)\n  [junit4]    > \tat org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:244)\n  [junit4]    > \tat org.apache.tika.parser.AutoDetectParser.parse(AutoDetectParser.java:120)\n  [junit4]    > \tat org.apache.solr.handler.extraction.ExtractingDocumentLoader.load(ExtractingDocumentLoader.java:219)\n  [junit4]    > \tat org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:74)\n  [junit4]    > \tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:144)\n  [junit4]    > \tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2006)\n  [junit4]    > \tat org.apache.solr.util.TestHarness.queryAndResponse(TestHarness.java:353)\n  [junit4]    > \tat org.apache.solr.handler.extraction.ExtractingRequestHandlerTest.loadLocalFromHandler(ExtractingRequestHandlerTest.java:703)\n  [junit4]    > \tat org.apache.solr.handler.extraction.ExtractingRequestHandlerTest.loadLocal(ExtractingRequestHandlerTest.java:710)\n  [junit4]    > \tat org.apache.solr.handler.extraction.ExtractingRequestHandlerTest.testXPath(ExtractingRequestHandlerTest.java:474)\n  [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n\n ",
            "id": "comment-14286017"
        },
        {
            "date": "2015-01-21T18:32:25+0000",
            "author": "Steve Rowe",
            "content": "I can reproduce this on OS X 10.10 using Oracle JDK 1.8.0_20.\n\nWhen I revert back to r1652741 (just before the first commit under this issue), all solr-cell tests pass using the following (same thing that fails 100% for me with current trunk):\n\n\nant clean\ncd solr/contrib/extraction\nant test -Dtests.slow=true -Dtests.locale=tr_TR\n\n ",
            "id": "comment-14286020"
        },
        {
            "date": "2015-01-21T18:42:50+0000",
            "author": "Hoss Man",
            "content": "TIKA-93 introduced the TesseractOCRParser, and TIKA-1476 enabled it as a default parser.\n\nthat combination means that the first time Tika is used in Solr, the TesseractOCRParser will be checked to see if the system \"hasTesseract\" installed to know if that parser should be consulted \u2013 and when that happens, ExternalParser.check is used which calls Runtime.exec and blows up in turkish locale.\n\n\n\npossible resolutions i can think of:\n\n\tchange how we init Tika to prevent this parser from ever being used (override the list of autodeteced parsers?)\n\tchange how we include tika jars/defaults to prevent this parser from ever being used (override the default tesseract properties file in the jar somehow maybe?)\n\trollback to tika 1.6\n\tpunt and advise turkish users to run their jvm in en_US ?\n\n ",
            "id": "comment-14286033"
        },
        {
            "date": "2015-01-21T18:57:40+0000",
            "author": "Uwe Schindler",
            "content": "This is in fact the problem with spawning external processes. This is not new, also TIKA 1.6 had parsers that spawned processes. I just think we never hit this because this one is different: The parser spawns a process while initializing (to \"inspect the system). The other Spawning parsers are only executed as needed. ExternalParser exists since a long time in TIKA.\n\nI would not roll back to TIKA 1.5 because the new TIKA is much better than this one (regarding bugs). In fact we should maybe disable this tests with the well-known assume (trunk, 5.x, 5.0). In fact, I would suggest to add a note to the ref guide, so people know what this means. This is unfortunately a bug in the JVM, so this is not really our or TIKA's fault.\n\nIn fact, as written in my Blog post about Locale issues: Most Turkish system administrators don't run servers with the turkish locale  Its just too broken with lots of software. ",
            "id": "comment-14286059"
        },
        {
            "date": "2015-01-21T18:59:45+0000",
            "author": "Uwe Schindler",
            "content": "In fact you can select parsers using a config file / Set<String>. But this makes updaing horrible, because we have to revisit the list on each TIKA update... ",
            "id": "comment-14286065"
        },
        {
            "date": "2015-01-21T19:06:24+0000",
            "author": "Uwe Schindler",
            "content": "This disables the test... Just copypasted from map-reduce/morphlines/....\n\nIn fact this is not TIKA's issue and not new, a lot of stuff around Hadoop in Solr fails with Turkish! ",
            "id": "comment-14286072"
        },
        {
            "date": "2015-01-21T19:19:37+0000",
            "author": "Uwe Schindler",
            "content": "FYI: SolrCellMorphlineTest is already disabled by the same assume, so this is the only broken one. ",
            "id": "comment-14286101"
        },
        {
            "date": "2015-01-21T19:24:20+0000",
            "author": "Hoss Man",
            "content": "In fact this is not TIKA's issue and not new, a lot of stuff around Hadoop in Solr fails with Turkish!\n\n...my point is: it's new to Solr.\n\nin all other cases where POSIX_SPAWN impacts Solr, we either:\n\n\tdeal with it in the solr code, so we give a meaningful error to the user explaining the problem (ie: SystemInfoHandler)\n\tit's in an optional feature that NEVER worked with turkish \u2013 ie: the hadoop / morephlines contribs, from the first version it was available in Solr, would not work with turkish locale\n\n\n\n...in this case, we're talking about an existing solr feature, that has previously worked fine if you run older Solr with turkish, and now when upgrading to 5.0 you're going to get a weird error message.\n\nif there's nothing better we can do keep the ExtractionRequestHandler working or users who upgrade (even if they run with turkish) then i'm fine with assumes in the tests and notes in the docs ... i was just hoping you'd have a better idea.\n\nin particular: I'm still wondering if we can leverage the classpath in a way to override the \"default\" TesseractOCRConfig.properties file in the tika-parsers jar with our own version that prevents tesseract from being used.  (i agree it's not worth switching to explicitly whitelisting the parsers in Solr code, but is there an easy way to blacklist this parser and/or other parsers we know are problematic?) ",
            "id": "comment-14286111"
        },
        {
            "date": "2015-01-21T21:07:37+0000",
            "author": "Uwe Schindler",
            "content": "Hi,\nI checked the code. The problem is: You cannot disable by config (because it always tries to execute the command thats part of the default config file). If the config file is not there, then it runs TESSERACT without any path.\n\nThe only way to work around is: \n\n\tDisable the whole parser (f*ck, because then we need to maintain our own parser list internally). There is no way to tell TIKA to exclude some parsers (something like AutodetectParser#disableParser(name/class/whatever)\n\tUse a hack with reflection to make TesseractOCRParser#TESSERACT_PRESENT return false for any path... Just replace the static map by one that returns false for any key (LOL) and ignores any put()\n\n ",
            "id": "comment-14286272"
        },
        {
            "date": "2015-01-21T21:30:29+0000",
            "author": "Uwe Schindler",
            "content": "One trick could work:\nTIKA prefers always \"external\" parsers loaded by SPI. The trick here would be to add a /META-INF/services/... file that lists a subclass of the Tesseract parser that just always returns \"no supported media types\". TIKA would use our subclass in preference to the one shipped. By that we could disable the parser. I have not checked this, but this would be another hack (that I don't like, too). ",
            "id": "comment-14286307"
        },
        {
            "date": "2015-01-21T21:34:07+0000",
            "author": "Uwe Schindler",
            "content": "The last comment was just an idea, but doesn't work. The problem here is that initialization of the parser fails, so it will always call TesseractOCRParser.getSupportedTypes()... ",
            "id": "comment-14286314"
        },
        {
            "date": "2015-01-21T22:49:54+0000",
            "author": "Hoss Man",
            "content": "The last comment was just an idea, but doesn't work. ...\n\nyou fought a good fight uwe, but alas...\n\n+1 to your SOLR-6991-forkfix.patch for 5.0 .. but don't we need similar assumes in dataimporthandler-extras tests that use TikaEntityProcessor? (i'm not sure why those wouldn't fail with turkish now as well)\n ",
            "id": "comment-14286470"
        },
        {
            "date": "2015-01-21T22:54:22+0000",
            "author": "Steve Rowe",
            "content": "don't we need similar assumes in dataimporthandler-extras tests that use TikaEntityProcessor? (i'm not sure why those wouldn't fail with turkish now as well)\n\nI ran ant test -Dtests.slow=true -Dtests.locale=tr_TR in solr/contrib/dataimporthandler-extras/, and got the following failure:\n\n\n   [junit4] Suite: org.apache.solr.handler.dataimport.TestTikaEntityProcessor\n   [junit4]   2> Creating dataDir: /Users/sarowe/svn/lucene/dev/trunk2/solr/build/contrib/solr-dataimporthandler-extras/test/J0/temp/solr.handler.dataimport.TestTikaEntityProcessor 9123B7DE098A1C98-001/init-core-data-001\n   [junit4]   2> log4j:WARN No appenders could be found for logger (org.apache.solr.SolrTestCaseJ4).\n   [junit4]   2> log4j:WARN Please initialize the log4j system properly.\n   [junit4]   2> log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestTikaEntityProcessor -Dtests.method=testTikaHTMLMapperIdentity -Dtests.seed=9123B7DE098A1C98 -Dtests.slow=true -Dtests.locale=tr_TR -Dtests.timezone=America/Toronto -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n   [junit4] ERROR   0.93s J0 | TestTikaEntityProcessor.testTikaHTMLMapperIdentity <<<\n   [junit4]    > Throwable #1: java.lang.Error: posix_spawn is not a supported process launch mechanism on this platform.\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([9123B7DE098A1C98:C15C334FC0BEE965]:0)\n   [junit4]    > \tat java.lang.UNIXProcess$1.run(UNIXProcess.java:105)\n   [junit4]    > \tat java.lang.UNIXProcess$1.run(UNIXProcess.java:94)\n   [junit4]    > \tat java.security.AccessController.doPrivileged(Native Method)\n   [junit4]    > \tat java.lang.UNIXProcess.<clinit>(UNIXProcess.java:92)\n   [junit4]    > \tat java.lang.ProcessImpl.start(ProcessImpl.java:130)\n   [junit4]    > \tat java.lang.ProcessBuilder.start(ProcessBuilder.java:1029)\n   [junit4]    > \tat java.lang.Runtime.exec(Runtime.java:620)\n   [junit4]    > \tat java.lang.Runtime.exec(Runtime.java:485)\n   [junit4]    > \tat org.apache.tika.parser.external.ExternalParser.check(ExternalParser.java:344)\n   [junit4]    > \tat org.apache.tika.parser.ocr.TesseractOCRParser.hasTesseract(TesseractOCRParser.java:117)\n   [junit4]    > \tat org.apache.tika.parser.ocr.TesseractOCRParser.getSupportedTypes(TesseractOCRParser.java:90)\n   [junit4]    > \tat org.apache.tika.parser.CompositeParser.getParsers(CompositeParser.java:81)\n   [junit4]    > \tat org.apache.tika.parser.DefaultParser.getParsers(DefaultParser.java:95)\n   [junit4]    > \tat org.apache.tika.parser.CompositeParser.getSupportedTypes(CompositeParser.java:229)\n   [junit4]    > \tat org.apache.tika.parser.CompositeParser.getParsers(CompositeParser.java:81)\n   [junit4]    > \tat org.apache.tika.parser.CompositeParser.getParser(CompositeParser.java:209)\n   [junit4]    > \tat org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:244)\n   [junit4]    > \tat org.apache.tika.parser.AutoDetectParser.parse(AutoDetectParser.java:120)\n   [junit4]    > \tat org.apache.solr.handler.dataimport.TikaEntityProcessor.nextRow(TikaEntityProcessor.java:141)\n   [junit4]    > \tat org.apache.solr.handler.dataimport.EntityProcessorWrapper.nextRow(EntityProcessorWrapper.java:243)\n   [junit4]    > \tat org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:476)\n   [junit4]    > \tat org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:415)\n   [junit4]    > \tat org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:330)\n   [junit4]    > \tat org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:232)\n   [junit4]    > \tat org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:416)\n   [junit4]    > \tat org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:480)\n   [junit4]    > \tat org.apache.solr.handler.dataimport.DataImportHandler.handleRequestBody(DataImportHandler.java:189)\n   [junit4]    > \tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:144)\n   [junit4]    > \tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2006)\n   [junit4]    > \tat org.apache.solr.util.TestHarness.query(TestHarness.java:331)\n   [junit4]    > \tat org.apache.solr.handler.dataimport.AbstractDataImportHandlerTestCase.runFullImport(AbstractDataImportHandlerTestCase.java:86)\n   [junit4]    > \tat org.apache.solr.handler.dataimport.TestTikaEntityProcessor.testTikaHTMLMapperIdentity(TestTikaEntityProcessor.java:99)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n\n ",
            "id": "comment-14286477"
        },
        {
            "date": "2015-01-21T23:02:53+0000",
            "author": "Steve Rowe",
            "content": "This version of the patch adds Uwe's assume to dataimporthandler-extra's TestTikaEntityProcessor.\n\nI'm running all Solr tests now with this patch and -Dtests.slow=true -Dtests.locale=tr_TR. ",
            "id": "comment-14286489"
        },
        {
            "date": "2015-01-21T23:03:02+0000",
            "author": "Uwe Schindler",
            "content": "OK. I did not know that dataimporthandler-extras also calls TIKA... ",
            "id": "comment-14286490"
        },
        {
            "date": "2015-01-21T23:09:25+0000",
            "author": "Uwe Schindler",
            "content": "Ah you already posted a patch. Thanks for testing. I have only Windows ready to use on my laptop  ",
            "id": "comment-14286500"
        },
        {
            "date": "2015-01-21T23:10:44+0000",
            "author": "Uwe Schindler",
            "content": "Steve Rowe: Can you commit to all 3 branches, I wanted to go sleeping? Thanks. ",
            "id": "comment-14286502"
        },
        {
            "date": "2015-01-21T23:41:56+0000",
            "author": "Steve Rowe",
            "content": "Steve Rowe: Can you commit to all 3 branches, I wanted to go sleeping? Thanks.\n\nWill do. ",
            "id": "comment-14286558"
        },
        {
            "date": "2015-01-21T23:43:58+0000",
            "author": "Steve Rowe",
            "content": "I'm running all Solr tests now with this patch and -Dtests.slow=true -Dtests.locale=tr_TR.\n\nAll Solr tests passed with the patch.\n\nCommitting now. ",
            "id": "comment-14286562"
        },
        {
            "date": "2015-01-21T23:47:21+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1653704 from Use account \"steve_rowe\" instead in branch 'dev/trunk'\n[ https://svn.apache.org/r1653704 ]\n\nSOLR-6991,SOLR-6387: Under Turkish locale, don't run solr-cell and dataimporthandler-extras tests that use Tika ",
            "id": "comment-14286565"
        },
        {
            "date": "2015-01-21T23:48:14+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1653706 from Use account \"steve_rowe\" instead in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1653706 ]\n\nSOLR-6991,SOLR-6387: Under Turkish locale, don't run solr-cell and dataimporthandler-extras tests that use Tika (merged trunk r1653704) ",
            "id": "comment-14286568"
        },
        {
            "date": "2015-01-21T23:49:13+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1653708 from Use account \"steve_rowe\" instead in branch 'dev/branches/lucene_solr_5_0'\n[ https://svn.apache.org/r1653708 ]\n\nSOLR-6991,SOLR-6387: Under Turkish locale, don't run solr-cell and dataimporthandler-extras tests that use Tika (merged trunk r1653704) ",
            "id": "comment-14286572"
        },
        {
            "date": "2015-01-22T00:21:12+0000",
            "author": "Anshum Gupta",
            "content": "Thanks for fixing this everyone! ",
            "id": "comment-14286623"
        },
        {
            "date": "2015-01-23T12:38:23+0000",
            "author": "Uwe Schindler",
            "content": "Hoss: One idea to fix the whole thing could be:\nIn Solr's main startup method (before any threads or whatever are spawned), I would suggest the main() method of the startup class (do we have that now, or do we still use jetty's start.jar) to do something like suggested here:\n\nhttps://issues.apache.org/jira/browse/TIKA-1526?focusedCommentId=14289182&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14289182\n\nIt is important to do this early and at a time when the global locale setting cannot affect other stuff running in the JVM. So definitely not in the webapp itsself (thats too late):\n\n\tcheck for locale, we do this like that: new Locale(\"tr\").getLanguage().equals(Locale.getDefault().getLanguage()) (it is important to do the check like this, because otherwise its not guaranteed that it really works, especially in newer java versions!!!)\n\tif its such a locale, switch to Locale.ROOT (save original) in a single-threaded environment (this is why it should be in main launcher)\n\texecute a fake UNIX command, like /bin/true. You can also execute some non-existing bullshit that just fails. The call is just there to statically initalize the broken UnixProcess class. Once it is initialized correctly it works\n\tswitch back to saved locale\n\n ",
            "id": "comment-14289194"
        },
        {
            "date": "2015-02-23T05:00:44+0000",
            "author": "Anshum Gupta",
            "content": "Bulk close after 5.0 release. ",
            "id": "comment-14332572"
        }
    ]
}