{
    "id": "SOLR-2530",
    "title": "Remove Noggit CharArr from FieldType",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "4.0-ALPHA"
        ],
        "components": [
            "Schema and Analysis"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "FieldType#indexedToReadable(BytesRef, CharArr) uses a noggit dependency that also spreads into ByteUtils. The uses of this method area all convert to String which makes this extra reference and the dependency unnecessary. I refactored it to simply return string and removed ByteUtils entirely. The only leftover from BytesUtils is a constant, i moved that one to Lucenes UnicodeUtils. I will upload a patch in a second",
    "attachments": {
        "SOLR-2530.patch": "https://issues.apache.org/jira/secure/attachment/12479781/SOLR-2530.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Simon Willnauer",
            "id": "comment-13036204",
            "date": "2011-05-19T14:15:56+0000",
            "content": "here is a patch "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13036219",
            "date": "2011-05-19T14:28:34+0000",
            "content": "There are some efficiency losses here:\n\n\tA reusable CharArr allows one to avoid extra object creation.  See TermsComponent which can update a CharArr and then compare it against a pattern w/o having to create a String object.\n\tWe should not replace the previous toString with BytesRef.utf8String... it's much slower, esp for small strings like will be common here.\n\n\n\nSo rather than just removing ByteUtils.UTF8toUTF16, how about moving it to BytesRef and use it in BytesRTef.utf8String? "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13036224",
            "date": "2011-05-19T14:31:40+0000",
            "content": "My recommendation: add CharsRef. We already have BytesRef and IntsRef... "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13036240",
            "date": "2011-05-19T14:56:50+0000",
            "content": "Minor nit: renaming bigTerm to UnicodeUtil.BIG_UTF8_TERM is a bit misleading since it's not UTF8 at all. "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13036737",
            "date": "2011-05-20T09:27:36+0000",
            "content": "Here is a new patch. Thanks yonik I didn't realize that the utf8String() method is slow / slower. I moved the UTF8ToUTF16 from ByteUtils to UnicodeUtils (plus test) and use it in BytesRef now. I also switched all FT#indexedToReadable to use a CharsRef (o.a.l.util).\n\nI fixed some minor stuff along the way (generics) and added one nocommit to SimpleFacets since we are comparing Strings with == there. If thats ok there we should add a comment!\n "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13036851",
            "date": "2011-05-20T14:34:28+0000",
            "content": "seem like CharsRef is not in the patch... I will upload a new one ASAP "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13037602",
            "date": "2011-05-22T13:57:05+0000",
            "content": "updated patch including CharsRef.java...\n\nIt seems like we can get rid of UTF16Result entirely. I will wait for comments first. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13037605",
            "date": "2011-05-22T14:42:40+0000",
            "content": "\nIt seems like we can get rid of UTF16Result entirely. I will wait for comments first.\n\ndone!\n\nupon review there are two things i dont like:\n\n1. I dont think the BIGTERM should be in UnicodeUtil, its completely unrelated to unicode.\n2. I dont like the way UTF8toUTF16 sets the output, i think it should be consistent with UTF16toUTF8 (always make the result output start at 0). The problem can be seen by the size allocation:\n\n    int out_offset = chars.offset;\n    final char[] out = chars.chars =  ArrayUtil.grow(chars.chars, out_offset + length);\n\n "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13037607",
            "date": "2011-05-22T14:44:54+0000",
            "content": "Also, it seems in a few places in Solr, there was a spare CharArr being reused for an entire loop, but not anymore (there is now a new CharsRef being made each time).\n\nI think its probably best to avoid this and go back to using a spare. "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13037631",
            "date": "2011-05-22T17:10:55+0000",
            "content": "I think its probably best to avoid this and go back to using a spare.\nunintentionally I will fix later.\n1. I dont think the BIGTERM should be in UnicodeUtil, its completely unrelated to unicode.\nAny good place for it?\nI dont like the way UTF8toUTF16 sets the output, i think it should be consistent with UTF16toUTF8 (always make the result output start at 0). The problem can be seen by the size allocation:\n\nAgreed. I will work on a new patch tomorrow.  "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13037799",
            "date": "2011-05-23T08:43:37+0000",
            "content": "next iteration. The UTF8 to UTF16 conversion starts the output at 0 now. I fixed the places where I missed to reuse a spare instance and replaced some occurrences of BytesRef#utf8ToString with BytesRef#utf8ToChars where I can reuse a CharsRef instance. \n\nI also added a comment / TODO to UnicodeUtils#BIG_TERM  to move it elsewhere once we have a good place for it or don't need it anymore.\n\nI think this is ready though, all tests pass. "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13038777",
            "date": "2011-05-24T20:50:08+0000",
            "content": "I think this is ready though, all tests pass.\n\nLooks good to me, there is still the one nocommit about interned fields but I don't know the answer to that one either! The rest of the patch looks great, good to finally get rid of UTF16Result/incremental api and to have a CharsRef. "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13038784",
            "date": "2011-05-24T21:06:12+0000",
            "content": "yeah I wonder if yonik could look at this nocommit? "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13038806",
            "date": "2011-05-24T21:26:40+0000",
            "content": "updated patch to new suggest module and replaced the nocommit in SimpleFacets with a TODO. I will commit this soon if nobody objects. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13038817",
            "date": "2011-05-24T21:35:54+0000",
            "content": "nocommit in SimpleFacets with a TODO.\n\nI've looked into this in the past - its fine. Perhaps it's safer to change it (equals or enum or whatever), but all current usage uses the same constant. "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13038852",
            "date": "2011-05-24T22:12:42+0000",
            "content": "I've looked into this in the past - its fine. Perhaps it's safer to change it (equals or enum or whatever), but all current usage uses the same constant.\n\nalright, I changed the todo to point out that we should cut over to an enum or something similar. This is totally unrelated but wanted to make sure it doesn't get lost.\n\nI will commit in a minute "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13038869",
            "date": "2011-05-24T22:44:46+0000",
            "content": "Committed in revision 1127326. "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13038875",
            "date": "2011-05-24T22:53:00+0000",
            "content": "I am backporting this to 3.x now "
        },
        {
            "author": "Simon Willnauer",
            "id": "comment-13038993",
            "date": "2011-05-25T07:09:11+0000",
            "content": "I am backporting this to 3.x now\nnot needed since the method doesn't use CharArr in 3.x "
        }
    ]
}