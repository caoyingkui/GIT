{
    "id": "LUCENE-8445",
    "title": "RandomGeoPolygonTest.testCompareBigPolygons() failure",
    "details": {
        "components": [
            "modules/spatial3d"
        ],
        "status": "Closed",
        "resolution": "Fixed",
        "fix_versions": [
            "6.6.6",
            "7.5",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "labels": "",
        "priority": "Major",
        "type": "Bug"
    },
    "description": "Failure from https://jenkins.thetaphi.de/job/Lucene-Solr-master-Linux/22590/, reproduces for me on Java8:\n\n\nChecking out Revision 2a41cbd1924510000f6e69ae2e6cccb7b2e26af2 (refs/remotes/origin/master)\n[...]\n   [junit4] Suite: org.apache.lucene.spatial3d.geom.RandomGeoPolygonTest\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=RandomGeoPolygonTest -Dtests.method=testCompareBigPolygons -Dtests.seed=5444688174504C79 -Dtests.multiplier=3 -Dtests.slow=true -Dtests.locale=pt-LU -Dtests.timezone=Pacific/Pago_Pago -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n   [junit4] FAILURE 0.23s J1 | RandomGeoPolygonTest.testCompareBigPolygons {seed=[5444688174504C79:CC6BBA71B5FC82A6]} <<<\n   [junit4]    > Throwable #1: java.lang.AssertionError: \n   [junit4]    > Standard polygon: GeoCompositePolygon: {[GeoConvexPolygon: {planetmodel=PlanetModel.SPHERE, points=[[lat=1.0468214627857893E-8, lon=8.413079957136915E-7([X=0.9999999999996461, Y=8.413079957135923E-7, Z=1.0468214627857893E-8])], [lat=-0.3036468642757333, lon=0.5616500855257733([X=0.807657732111119, Y=0.508219108660839, Z=-0.29900221630132817])], [lat=-0.17226782498440368, lon=0.8641157866087514([X=0.6397020656700857, Y=0.7492646151846353, Z=-0.1714170458549729])], [lat=0.5917632222073597, lon=1.0258877306398073([X=0.43020057589183536, Y=0.7097594028504629, Z=0.5578252903622132])], [lat=0.16341821264361944, lon=0.04608724380526752([X=0.9856292512291138, Y=0.04545712432110151, Z=0.16269182207472105])]], internalEdges={4}}, GeoConvexPolygon: {planetmodel=PlanetModel.SPHERE, points=[[lat=1.0468214627857893E-8, lon=8.413079957136915E-7([X=0.9999999999996461, Y=8.413079957135923E-7, Z=1.0468214627857893E-8])], [lat=0.16341821264361944, lon=0.04608724380526752([X=0.9856292512291138, Y=0.04545712432110151, Z=0.16269182207472105])], [lat=1.5452567609928165E-12, lon=5.5280224842135794E-12([X=1.0, Y=5.5280224842135794E-12, Z=1.5452567609928165E-12])]], internalEdges={0, 2}}, GeoConvexPolygon: {planetmodel=PlanetModel.SPHERE, points=[[lat=1.0468214627857893E-8, lon=8.413079957136915E-7([X=0.9999999999996461, Y=8.413079957135923E-7, Z=1.0468214627857893E-8])], [lat=1.5452567609928165E-12, lon=5.5280224842135794E-12([X=1.0, Y=5.5280224842135794E-12, Z=1.5452567609928165E-12])], [lat=-1.0E-323, lon=0.0([X=1.0, Y=0.0, Z=-1.0E-323])]], internalEdges={0}}]}\n   [junit4]    > Large polygon: GeoComplexPolygon: {planetmodel=PlanetModel.SPHERE, number of shapes=1, address=e0a76761, testPoint=[lat=0.04032281608974351, lon=0.33067345007473165([X=0.945055084899262, Y=0.3244161494642355, Z=0.040311889968686655])], testPointInSet=true, shapes={ {[lat=1.0468214627857893E-8, lon=8.413079957136915E-7([X=0.9999999999996461, Y=8.413079957135923E-7, Z=1.0468214627857893E-8])], [lat=-0.3036468642757333, lon=0.5616500855257733([X=0.807657732111119, Y=0.508219108660839, Z=-0.29900221630132817])], [lat=-0.17226782498440368, lon=0.8641157866087514([X=0.6397020656700857, Y=0.7492646151846353, Z=-0.1714170458549729])], [lat=0.5917632222073597, lon=1.0258877306398073([X=0.43020057589183536, Y=0.7097594028504629, Z=0.5578252903622132])], [lat=0.16341821264361944, lon=0.04608724380526752([X=0.9856292512291138, Y=0.04545712432110151, Z=0.16269182207472105])], [lat=1.5452567609928165E-12, lon=5.5280224842135794E-12([X=1.0, Y=5.5280224842135794E-12, Z=1.5452567609928165E-12])], [lat=-1.0E-323, lon=0.0([X=1.0, Y=0.0, Z=-1.0E-323])]}}\n   [junit4]    > Point: [lat=-8.763997112262326E-13, lon=3.14159265358979([X=-1.0, Y=3.2310891488651735E-15, Z=-8.763997112262326E-13])]\n   [junit4]    > WKT: POLYGON((32.18017946378854 -17.397683785381247,49.51018758330871 -9.870219317504647,58.77903721991479 33.90553510354402,2.640604559432277 9.363173880050821,3.1673235739886286E-10 8.853669066894417E-11,0.0 -5.7E-322,4.820339742500488E-5 5.99784517213369E-7,32.18017946378854 -17.397683785381247))\n   [junit4]    > WKT: POINT(179.99999999999983 -5.021400461974724E-11)\n   [junit4]    > normal polygon: true\n   [junit4]    > large polygon: false\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([5444688174504C79:CC6BBA71B5FC82A6]:0)\n   [junit4]    > \tat org.apache.lucene.spatial3d.geom.RandomGeoPolygonTest.checkPoint(RandomGeoPolygonTest.java:228)\n   [junit4]    > \tat org.apache.lucene.spatial3d.geom.RandomGeoPolygonTest.testComparePolygons(RandomGeoPolygonTest.java:203)\n   [junit4]    > \tat org.apache.lucene.spatial3d.geom.RandomGeoPolygonTest.testCompareBigPolygons(RandomGeoPolygonTest.java:98)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n   [junit4]    > \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n   [junit4]    > \tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n   [junit4]    > \tat java.base/java.lang.Thread.run(Thread.java:844)\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene70): {}, docValues:{}, maxPointsInLeafNode=20, maxMBSortInHeap=5.528098665421503, sim=Asserting(org.apache.lucene.search.similarities.AssertingSimilarity@1922a624), locale=pt-LU, timezone=Pacific/Pago_Pago\n   [junit4]   2> NOTE: Linux 4.15.0-29-generic amd64/Oracle Corporation 9.0.4 (64-bit)/cpus=8,threads=1,free=450991728,total=536870912",
    "attachments": {
        "LUCENE-8445.patch": "https://issues.apache.org/jira/secure/attachment/12934406/LUCENE-8445.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16569503",
            "author": "Ignacio Vera",
            "content": "This is a tiling issue when creating a convex polygon. One of the tiles is degenerated and the answer to within does not have precision.\n\n\u00a0\n\nI think the cleanest way to handle this error is to tighten the conditions when two planes are identical. The result is that an TileException is thrown. The polygon must be constructed with a different technology, in this case GeoComplexPolygon.\n\nAttached a patch with stricter condition. ",
            "date": "2018-08-05T15:36:33+0000"
        },
        {
            "id": "comment-16569555",
            "author": "Lucene/Solr QA",
            "content": "\n\n\n  +1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 1 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   0m 17s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   0m 15s \n  the patch passed  \n\n\n +1 \n  javac  \n   0m 15s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   0m 15s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   0m 15s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   0m 15s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n +1 \n  unit  \n   0m 59s \n  spatial3d in the patch passed.  \n\n\n  \n   \n   3m 24s \n   \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n LUCENE-8445 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12934406/LUCENE-8445.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene1-us-west 4.4.0-130-generic #156~14.04.1-Ubuntu SMP Thu Jun 14 13:51:47 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-LUCENE-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / ffedb99 \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on July 24 2018 \n\n\n Default Java \n 1.8.0_172 \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-LUCENE-Build/62/testReport/ \n\n\n modules \n C: lucene/spatial3d U: lucene/spatial3d \n\n\n Console output \n https://builds.apache.org/job/PreCommit-LUCENE-Build/62/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "date": "2018-08-05T18:40:35+0000"
        },
        {
            "id": "comment-16569594",
            "author": "Karl Wright",
            "content": "It worries me that the detection of identical planes needs to be extended.  Usually that's a sign that the math isn't quite right.  But we were already 1e12 times larger than we should have needed to be, so a factor of 5 more seems not much worse.\n\nI don't have the time right now to do a more detailed analysis, so I guess we can go ahead and commit the patch if all tests continue to pass.  But if others fail we'll want to look in depth as to what is actually going wrong. ",
            "date": "2018-08-05T23:25:46+0000"
        },
        {
            "id": "comment-16569838",
            "author": "ASF subversion and git services",
            "content": "Commit 70a4939ab4a640554aebd1aaa68935605d9af112 in lucene-solr's branch refs/heads/master from Ignacio Vera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=70a4939 ]\n\nLUCENE-8445: Tighten condition when two planes are identical to prevent constructing bogus tiles when building GeoPolygons ",
            "date": "2018-08-06T07:46:03+0000"
        },
        {
            "id": "comment-16569839",
            "author": "ASF subversion and git services",
            "content": "Commit 3712b8fc2b91648a8f2400700c47337a0322f6b6 in lucene-solr's branch refs/heads/branch_7x from Ignacio Vera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3712b8f ]\n\nLUCENE-8445: Tighten condition when two planes are identical to prevent constructing bogus tiles when building GeoPolygons ",
            "date": "2018-08-06T07:46:33+0000"
        },
        {
            "id": "comment-16569840",
            "author": "ASF subversion and git services",
            "content": "Commit 28d92bebf96ca00ea3712be7f2a8eadb5ae90821 in lucene-solr's branch refs/heads/branch_6x from Ignacio Vera\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=28d92be ]\n\nLUCENE-8445: Tighten condition when two planes are identical to prevent constructing bogus tiles when building GeoPolygons ",
            "date": "2018-08-06T07:46:59+0000"
        }
    ]
}