{
    "id": "SOLR-209",
    "title": "Multifields and multivalued facets",
    "details": {
        "affect_versions": "1.1.0",
        "status": "Resolved",
        "fix_versions": [],
        "components": [
            "search"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "MultiFieldsHitsFacets, increase the performance of faceting in multiValued fields, buy creating facets from Lucene Hits. It also allows the creation of facet using multiple fields. The fields must be separated by single space   Example : facet.field=subject subjectG subjectA .\n\nRida Benjelloun\nridabenjelloun@apache.org",
    "attachments": {
        "MultiFieldsHitsFacets.patch": "https://issues.apache.org/jira/secure/attachment/12355512/MultiFieldsHitsFacets.patch",
        "MultiFieldsHitsFacets.java": "https://issues.apache.org/jira/secure/attachment/12355511/MultiFieldsHitsFacets.java"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Rida Benjelloun",
            "id": "comment-12488694",
            "date": "2007-04-13T14:59:16+0000",
            "content": "Java Class "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12488696",
            "date": "2007-04-13T15:06:38+0000",
            "content": "Thanks Rida!\n\nCould you briefly detail the approach your patch takes?\nIt looks like it's like the FieldCache strategy, extended to multi-valued fields?\n\nSo you store in a Map,   docid1=>\n{\"foo\",\"bar\",\"baz\"}\n, docid2=>\n{\"foo\",\"zoo\"}\n, right? "
        },
        {
            "author": "Rida Benjelloun",
            "id": "comment-12488754",
            "date": "2007-04-13T18:54:39+0000",
            "content": "Hi Yonik,\nThe MultiFieldsHitsfacets use lucene hits to create the facet. For each field on which we want to make a facet, I get the field content from the lucene document in the search results, and I check if the Map key is equals to the field content, if no, I add it as a key in the Hashmap, else I get the Map content wish is an Integer and I increment it. Finally I sort the HashMap. \nWith this approach you can tokenized your fields, and it will not have any impact on the faceting mechanism because I use the string content to make the facets, however the field must be stored.\nRegards.\n\nRida Benjelloun "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12488761",
            "date": "2007-04-13T19:24:59+0000",
            "content": "OK, thanks for the clarification.\n\nBTW, the current faceting code can facet on multiple fields... you just need to include facet.field more than once:\n\nfacet.field=subject&facet.field=subjectA&facet.field=subjectG "
        },
        {
            "author": "Rida Benjelloun",
            "id": "comment-12488784",
            "date": "2007-04-13T21:10:07+0000",
            "content": "Hi Yonik,\nActually in our library catalogue, a subject field is composed by 6 fields. With my approach it is possible to build a facet \"subject\" made up of 6 fields and to sort it in one block.\nHowever if I use a facet by fields, I would thus have 6 facet, and each one is sorted separately.\nExample : fields 650 and 651 represents subjects\n\nfacet.field=650 651\n<lst name=\"650 651\">\n          <!-field 650->\n          <int name=\"Rats Physiologie\">140</int>\n          <int name=\"Souris Physiologie\">84</int>\n          <int name=\"Fran\u00e7ais (Langue) Composition et exercices\">78</int>       \n          <!-Field 651->\n          <int name=\"Sainte-Foy (Qu\u00e9bec, Qu\u00e9bec)\">49</int>\n           <!-field 650->\n          <int name=\"Cr\u00e9ation (Arts)\">46</int>         \n          .......\n</lst>\n\n\nfacet.field=650&facet.field=651\n<lst name=\"650\">                \n       <int name=\"Rats Physiologie\">140</int>\n       <int name=\"Souris Physiologie\">84</int>\n       <int name=\"Fran\u00e7ais (Langue) Composition et exercices\">78</int>       \n       <int name=\"Cr\u00e9ation (Arts)\">46</int>      \n          .......\n</lst>\n<lst name=\"651\">          \n      <int name=\"Sainte-Foy (Qu\u00e9bec, Qu\u00e9bec)\">49</int>\n      <int name=\"Qu\u00e9bec (Qu\u00e9bec) Antiquit\u00e9s\">20</int>\n          .......\n</lst>\nAm I right? \n\nRegards  "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12489395",
            "date": "2007-04-17T13:09:53+0000",
            "content": "Rida - I'm curious about your approach.... why not normalize the (obviously MARC) fields during indexing?   Index your 650 and 651 data into a \"subject\" field, for example, and then facet on that instead? "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12709350",
            "date": "2009-05-14T10:30:17+0000",
            "content": "With SOLR-475, is this issue still relevant? "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12858657",
            "date": "2010-04-19T19:48:42+0000",
            "content": "It's been a year since you asked, Shalin, so I'm guessing this issue is no longer relevant now that SOLR-475 is done.  I'm closing. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12858658",
            "date": "2010-04-19T19:49:27+0000",
            "content": "SOLR-475 took care of this "
        }
    ]
}