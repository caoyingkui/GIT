{
    "id": "SOLR-6699",
    "title": "To enable SPDY in a SolrCloud setup",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Solr has lot of inter node communication happening during distributed searching or indexing. Benefits of SPDY is as follows: \n\n-Multiple requests can be sent in parallel (multiplexing) and responses can be received out of order.\n-Headers are compressed and optimized.\n\nThis implementation will be using clear-text spdy and not the usual TLS layer spdy.\n\nThis patch is contributed by \bYahoo! Japan.",
    "attachments": {
        "SOLR-6699.patch": "https://issues.apache.org/jira/secure/attachment/12679100/SOLR-6699.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2014-11-04T01:06:08+0000",
            "author": "Harsh Prasad",
            "content": "Uploaded Patch file for SPDY. ",
            "id": "comment-14195498"
        },
        {
            "date": "2014-11-04T03:43:22+0000",
            "author": "Otis Gospodnetic",
            "content": "I looked at only about 50-100 top lines in this patch and saw a number of versions of various libraries being downgraded, which seems strange, no? ",
            "id": "comment-14195670"
        },
        {
            "date": "2014-11-04T03:45:47+0000",
            "author": "Otis Gospodnetic",
            "content": "Is this supposed to bring performance or scalability benefits?  If so, do you have any numbers you can share? ",
            "id": "comment-14195672"
        },
        {
            "date": "2014-11-04T05:07:14+0000",
            "author": "Shawn Heisey",
            "content": "In addition to reverting a bunch of recent upgrades in jar versions, the patch also seems to revert a lot of other recent dependency work that adjusted the \"conf\" setting on the dependency tags.\n\nHarsh Prasad, was your checkout fully up to date and completely clean before you started modifying it? If you can start with a fresh trunk checkout, that would be best.  Check to make sure it's clean with \"svn stat\" before beginning.\n\nSPDY is supposed to have a lot less latency than HTTP 1.1.  This is primarily on websites, where many different components are requested in order to load one page, and the server is typically remotely located across the Internet.  I suspect that on a LAN, SPDY may not offer as much of a performance boost as it does for the web.  Getting those numbers that Otis asked about is the only way we'll know if the change is worthwhile.\n\nDoes SolrCloud utilize http keepalive for its inter-server connectivity?  If not, that should be something for us to look at, even without SPDY. ",
            "id": "comment-14195718"
        },
        {
            "date": "2014-11-04T05:09:13+0000",
            "author": "Harsh Prasad",
            "content": "I will be uploading a fresh patch soon. The changes mismatched the trunk version.\nRegarding the numbers, I will be run benchmark using solrmeter on wikipedia dataset. Will upload them as soon as they are over. \n\nRegarding SPDY's usage, I understand that the web pages are the one that benefit from it mostly, but in Solr, during distributed search, the delay is mostly because of the inter shard communication. If SPDY can help reduce those latencies then it might be helpful. Other than that, for people using Http Client to communicate with solr can use the Jetty http client to benefit from SPDY optimisations. ",
            "id": "comment-14195719"
        },
        {
            "date": "2014-11-04T06:40:24+0000",
            "author": "Harsh Prasad",
            "content": "Updated the patch file with respect to the latest trunk. ",
            "id": "comment-14195791"
        },
        {
            "date": "2014-11-05T19:13:01+0000",
            "author": "Shawn Heisey",
            "content": "I could be misreading what I'm seeing in the patch, so if that's the case, let me know, and point to the parts of the patch that show I'm clueless.  This looks like a new solrj client that speaks SPDY instead of HTTP, not a patch for inter-server SolrCloud communication.  Is this an incorrect conclusion?  I'm not very familiar with the server-side jetty code. ",
            "id": "comment-14198884"
        },
        {
            "date": "2014-11-06T04:02:45+0000",
            "author": "Minoru Osuka",
            "content": "Solr is available as servlet. What happens if Solr which applied this patch had deployed in the servlet container that doesn't support the SPDY protocol?\nI would like to recommend that you enable SPDY by the system property.\n\nFor example,\n-Denablespdy=true or false ",
            "id": "comment-14199735"
        },
        {
            "date": "2015-03-04T16:36:15+0000",
            "author": "Ramkumar Aiyengar",
            "content": "Looks like SPDY is getting phased out in Jetty (and generally as a protocol) in favour of HTTP/2.\n\nhttps://webtide.com/phasing-out-spdy-support/ ",
            "id": "comment-14347095"
        },
        {
            "date": "2015-03-04T16:57:01+0000",
            "author": "Shawn Heisey",
            "content": "I do wish that HTTP/2 support (or even SPDY support) was coming soon in HttpClient, but it's not.  Without that, SolrJ and SolrCloud will not see any benefit from the new protocol ... so enabling it in the servlet container doesn't really help us.\n\nThe number of people doing work on the HttpComponents project at Apache is very small ... with most work being done by one person. I've read the draft RFC for HTTP/2 ... implementing it in any client or server framework is going to require a lot of development and debugging effort, and none of that work has begun yet on HttpClient. ",
            "id": "comment-14347138"
        },
        {
            "date": "2015-03-04T17:37:38+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Yes, if we decide to go async with Jetty, it will likely be with HTTP/2. We'll have to wait for Jetty 9.3 for that. Jetty does have a client which can use inside Solrj. See https://github.com/eclipse/jetty.project/blob/jetty-http2/jetty-http2/http2-client/src/test/java/org/eclipse/jetty/http2/client/Client.java and https://webtide.com/http2-draft-14-is-live/ ",
            "id": "comment-14347219"
        },
        {
            "date": "2015-03-05T00:39:40+0000",
            "author": "Harsh Prasad",
            "content": "Yeah, i read that too. SPDY was supposed to eventually be proposed as HTTP2, but the timeline was not clear before. I have been busy with my own work for quite some time and have not been able to look at changes required for HTTP2. I was planning to use Jetty Client with HTTP2 support for this purpose. Waiting for Jetty 9.3 myself. To use jetty 9.3 inside solrj, I think some existing implementations might have to be changed too.\n\nThe only thing that I am not sure about is the speed and reliability of the Jetty Client as compared to Apache HttpClient.  ",
            "id": "comment-14347845"
        },
        {
            "date": "2016-07-21T13:36:28+0000",
            "author": "David Smiley",
            "content": "Do we rename this for HTTP/2 or close it as Won't-Fix?   FWIW I locally reconfigured Solr 6.1 for HTTP/2 (plaintext) successfully.  I haven't yet adjusted HttpClient in my client to do it but I will. ",
            "id": "comment-15387686"
        }
    ]
}