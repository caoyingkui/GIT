{
    "id": "LUCENE-862",
    "title": "Contrib query org.apache.lucene.search.BoostingQuery sets boost on constructor Query, not cloned copy",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/search"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "2.1",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "BoostingQuery sets the boost value on the passed context Query\n\n    public BoostingQuery(Query match, Query context, float boost) \n{\n      this.match = match;\n      this.context = (Query)context.clone();        // clone before boost\n      this.boost = boost;\n\n      context.setBoost(0.0f);                      // ignore context-only matches\n    }\n\nThis should be \n      this.context.setBoost(0.0f);                      // ignore context-only matches\n\nAlso, boost value of 0.0 may have wrong effect - see discussion at\n\nhttp://www.mail-archive.com/java-user@lucene.apache.org/msg12243.html",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2007-04-17T07:15:09+0000",
            "content": "Thanks for pointing this bug out Antony. Please ignore my earlier suggestion that setting the boost to zero might  be undesirable. I tested the code and it is correct with this fix. ",
            "author": "Mark Harwood",
            "id": "comment-12489327"
        }
    ]
}