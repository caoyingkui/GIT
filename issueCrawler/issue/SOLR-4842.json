{
    "id": "SOLR-4842",
    "title": "Field faceting with local params affects successive field faceting parameters",
    "details": {
        "affect_versions": "4.3",
        "status": "Closed",
        "fix_versions": [
            "4.3.1",
            "6.0"
        ],
        "components": [
            "search",
            "SearchComponents - other"
        ],
        "type": "Bug",
        "priority": "Critical",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "SOLR-4717 introduced local param support for per-field faceting, allowing the same field to be faceted in various ways.  There's a problem such that one fields local param setting will override the defaults of the next field.  For example: \n\nhttp://localhost:8983/solr/query?q=*:*&facet=true&rows=0&facet.field={!facet.prefix=a}name&facet.field=features\n\n where the facet.prefix for name affects the features faceting.",
    "attachments": {
        "SOLR-4842__hoss_tests.patch": "https://issues.apache.org/jira/secure/attachment/12583949/SOLR-4842__hoss_tests.patch",
        "SOLR-4842.patch": "https://issues.apache.org/jira/secure/attachment/12583930/SOLR-4842.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Erik Hatcher",
            "id": "comment-13662535",
            "date": "2013-05-21T00:58:10+0000",
            "content": "Here's a patch demonstrating a failing test case that should pass, demonstrating the corruption of one facet.field's local params into another facet.field. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13662580",
            "date": "2013-05-21T01:55:41+0000",
            "content": "I'm not sure my patch actually shows the problem clearly yet.  facet.mincount and deprecated facet.zeros support still in there confuse things a bit.  I'm still working through a test case showing the issue clearly. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13662637",
            "date": "2013-05-21T03:41:35+0000",
            "content": "\nErik: based on your followup comment, i ignored your patch and attempted to write a test to reproduce the general problem you described and could not do so \u2013 see attached SOLR-4842__hoss_tests.patch.\n\nif there is a bug, i suspect it must be something subtle in the way the defaults of a particular param are defined.  if you're having trouble writing a test aptch to demonstrate the problme you are seeing, can you at least describe a specific example query where you observe a problem?  even if you can't share the docs needed to seee the problem, knowing exactly what params may help narrow things down.\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13662646",
            "date": "2013-05-21T03:54:56+0000",
            "content": "Erik: ok, now looking at your test, i think it's just flawed.\n\nIgnore for a minute the issue of faceting multiple ways, ignore the \"foo\" key in the assertQ your patch modifies, ignore everything about it, delete it from the test, and just consider a query using only the \"bar\" key like so...\n\n\n      assertQ(\"ignore foo, look at bar\",\n              req(\"q\", \"id:[42 TO 47]\"\n                  ,\"facet\", \"true\"\n                  ,\"facet.zeros\", \"false\"\n                  ,\"fq\", \"id:[42 TO 45]\"\n                  ,\"facet.field\", \"{!key=bar \" +\n                     \"facet.missing=true \"+\n                  \"}\"+fname\n                  )\n              ,\"*[count(//doc)=4]\"\n              ,\"*[count(//lst[@name='bar']/int)=5]\"\n              ,\"//lst[@name='bar']/int[not(@name)][.='1']\"\n              );\n\n\n\nThat test is still going to fail because facet.zeros=false but you are asserting that there should be 5 terms for \"bar\".  the only way there could be 5 terms is if you include the terms with a  zero.\n\nI don't think the docs have never really specified what happens if you mix and match \"facet.mincount\" with the deprecated \"facet.zeros\" (ie: \"facet.mincount=1&facet.zeros=true&facet.field=XXX\"), let alone in the case of per-field overrides (ie: \"facet.mincount=1&f.XXX.facet.zeros=true&facet.field=XXX\") \u2013 i think it's fair game to say all bets are off in the new situation of localparams.  but in this specific case, there's no way it makes sense to think that the \"bar\" key should have a mincount of \"0\". "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13662984",
            "date": "2013-05-21T13:57:29+0000",
            "content": "Here's a patch that demonstrates the issue clearly.  The actual problem reported to me (via a customer) was about facet.prefix, but I tried to distill it to the mincount initially missing the weird mincount/zeros interaction.\n\nI've added two test cases, one that passes as-is, the second fails, and the only difference is the order of the two facet.field params, one using a localparam of facet.prefix, the other not. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13663012",
            "date": "2013-05-21T14:28:09+0000",
            "content": "Here's a patch incorporating Hoss' additional tests as well as my failing test and a fix in SimpleFacets in #parseParams logic when localParams == null which caused carrying over of previous local params.\n\nI'm running the full test suite now and will await Hoss' review (and maybe Ryan's eyes too?) before committing. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13663048",
            "date": "2013-05-21T15:18:41+0000",
            "content": "I'm running the full test suite now and will await Hoss' review (and maybe Ryan's eyes too?) before committing.\n\nFresh branch_4x checkout with just this patch attached, \"ant test\" (from solr/ directory) gives me the following failures:\n\n\n[junit4:junit4] Tests with failures:\n[junit4:junit4]   - org.apache.solr.cloud.CollectionsAPIDistributedZkTest.testDistribSearch\n[junit4:junit4]   - org.apache.solr.cloud.ZkCLITest.testUpConfigLinkConfigClearZk\n\n\n\nI can only presume this is unrelated to this patch. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13663056",
            "date": "2013-05-21T15:30:27+0000",
            "content": "Confirmed bug w/ simple test on example data:\n\nhttp://localhost:8983/solr/query?q=*:*&facet=true&rows=0&facet.field={!facet.prefix=a}name&facet.field=features\n\n\n\nThe features constraints returned all start with \"a\" only. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13663057",
            "date": "2013-05-21T15:34:04+0000",
            "content": "adjusted example with Yonik's example since mincount is a red herring here. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13663098",
            "date": "2013-05-21T16:36:33+0000",
            "content": "Ugh ... i didn't realize how stateful param parsing had gotten i nthe faceting code.\n\nErik's last patch had at least one bug remaining that affected range & date faceting because of the need to reset the \"required\" params.\n\nattached patch seems to fix that ... i don't see any other obvious bugs. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13663117",
            "date": "2013-05-21T16:47:33+0000",
            "content": "Patch looks good, commit it! "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13663162",
            "date": "2013-05-21T17:38:10+0000",
            "content": "Ugh ... i didn't realize how stateful param parsing had gotten i nthe faceting code.\n\nYeah, icky it is.\n\nErik's last patch had at least one bug remaining that affected range & date faceting because of the need to reset the \"required\" params.\n\nHmmm... did you see a test failure?   I was wondering if that change you made was needed at the time but no tests were failing.  I added your one-line tweak in there.  If you added test cases in your patch I didn't catch that yet.  \n\nCommitted to branch_4x and trunk.  Is there any other branch where this should go? "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13663168",
            "date": "2013-05-21T17:43:30+0000",
            "content": "Committed to branch_4x and trunk. Is there any other branch where this should go?\n\nErik, you set the fix version to 4.3.1, and in order for that to happen, this has to be committed on the lucene_solr_4_3 branch, no? "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13663169",
            "date": "2013-05-21T17:44:22+0000",
            "content": "I set the fix version   Erik, please do commit to the 43 branch. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13663180",
            "date": "2013-05-21T17:50:38+0000",
            "content": "I set the fix version  Erik, please do commit to the 43 branch.\n\n - sorry guys, I looked at JIRA's All view and misinterpreted Erik's adding 5.0 as a fix version 2 hours ago as also adding 4.3.1, since it appears as if no fix version was previously set (empty left-hand column), and both 4.3.1 and 5.0 are in the right-hand column. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13663184",
            "date": "2013-05-21T17:51:21+0000",
            "content": "I was wondering if that change you made was needed at the time but no tests were failing. \n\nbecause there were no tests using range on the same field multiple ways mixed with local params on only one of hte range facets.  ie: same bug you found with facet.prefix, but with any of hte facet.range.* params.\n\nI added your one-line tweak in there. If you added test cases in your patch I didn't catch that yet. \n\nyes, the patch had a additional tests demonstrating the reason why reseting \"required\" was needed.\n "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-13663190",
            "date": "2013-05-21T17:58:30+0000",
            "content": "Additional test case from Hoss picked up and committed.  Committed to trunk branch_4x, and lucene_solr_4_3 "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13686928",
            "date": "2013-06-18T16:52:40+0000",
            "content": "Bulk close after 4.3.1 release "
        }
    ]
}