{
    "id": "SOLR-5749",
    "title": "Implement an Overseer status API",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.8",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Sub-task",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Right now there is little to no information exposed about the overseer from SolrCloud.\n\nI propose that we have an API for overseer status which can return:\n\n\tPast N commands executed (grouped by command type)\n\tStatus (queue-size, current overseer leader node)\n\tOverseer log",
    "attachments": {
        "SOLR-5749.patch": "https://issues.apache.org/jira/secure/attachment/12634189/SOLR-5749.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-13905618",
            "date": "2014-02-19T16:10:38+0000",
            "content": "+1 "
        },
        {
            "author": "Timothy Potter",
            "id": "comment-13919552",
            "date": "2014-03-04T16:04:57+0000",
            "content": "Would it make sense to also include metrics for the overseer (possibly using the codahale stuff described in SOLR-4735)? These metrics could then support the decision to apply SOLR-5746 (dedicated/higher-end node for overseer). Key metrics I'd be interested in tracking are:\n\n1) metrics about how many messages per second / minute the overseer is processing\n2) metrics about how long it takes to process each type of operation (leader, state, etc.)\n3) metrics around queue sizes / activity (e.g. workQueue has 1000 messages pending) "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13931883",
            "date": "2014-03-12T15:45:57+0000",
            "content": "This adds /admin/collections?action=OVERSEERSTATUS API. Stats added are:\n\n\tsuccess and error counts\n\tqueue sizes for overseer, overseer work queue and overseer collection queue\n\tvarious timing statistics per operation type\n\n\n\nI'm still working on the tests. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13931891",
            "date": "2014-03-12T15:54:59+0000",
            "content": "Nice Shalin! "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13931901",
            "date": "2014-03-12T15:59:37+0000",
            "content": "Here's how it looks right now:\nhttp://localhost:8983/solr/admin/collections?action=overseerstatus\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<response>\n  <lst name=\"responseHeader\">\n    <int name=\"status\">0</int>\n    <int name=\"QTime\">26</int>\n  </lst>\n  <str name=\"leader\">192.168.1.3:8983_solr</str>\n  <int name=\"overseer_queue_size\">0</int>\n  <int name=\"overseer_work_queue_size\">0</int>\n  <int name=\"overseer_collection_queue_size\">2</int>\n  <lst name=\"stats\">\n    <lst name=\"leader\">\n      <int name=\"requests\">4</int>\n      <int name=\"errors\">0</int>\n      <double name=\"totalTime\">0.599</double>\n      <double name=\"avgRequestsPerSecond\">0.07359325662045857</double>\n      <double name=\"5minRateReqsPerSecond\">0.3504682187309409</double>\n      <double name=\"15minRateReqsPerSecond\">0.38265912794758644</double>\n      <double name=\"avgTimePerRequest\">0.14975</double>\n      <double name=\"medianRequestTime\">0.1395</double>\n      <double name=\"75thPcRequestTime\">0.179</double>\n      <double name=\"95thPcRequestTime\">0.19</double>\n      <double name=\"99thPcRequestTime\">0.19</double>\n      <double name=\"999thPcRequestTime\">0.19</double>\n    </lst>\n    <lst name=\"state\">\n      <int name=\"requests\">4</int>\n      <int name=\"errors\">0</int>\n      <double name=\"totalTime\">8.589</double>\n      <double name=\"avgRequestsPerSecond\">0.06929964428146092</double>\n      <double name=\"5minRateReqsPerSecond\">0.3504682187309409</double>\n      <double name=\"15minRateReqsPerSecond\">0.38265912794758644</double>\n      <double name=\"avgTimePerRequest\">2.14725</double>\n      <double name=\"medianRequestTime\">0.8644999999999999</double>\n      <double name=\"75thPcRequestTime\">5.18075</double>\n      <double name=\"95thPcRequestTime\">6.531</double>\n      <double name=\"99thPcRequestTime\">6.531</double>\n      <double name=\"999thPcRequestTime\">6.531</double>\n    </lst>\n  </lst>\n</response>\n\n "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13931919",
            "date": "2014-03-12T16:13:00+0000",
            "content": "Thanks Mark. \n\nTimothy Potter - I didn't use the metrics APIs (that's a big issue!) but you'll find that all of your demands are met by this patch.\n\nI think we should rename \"stats\" to \"operations\" and have the timing done per minute instead of per-second since Overseer operations are not that frequent. I am working on capturing the past N operations and past N failures (exceptions) per operation to the stats. Right now the stats are in-memory which means that we lose them if the overseer dies. I think that we should periodically, say every 15 minutes, save the stats to ZK and initialize the stats from ZK when a new Overseer starts. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13939140",
            "date": "2014-03-18T12:43:08+0000",
            "content": "\n\tTrack stats per-minute instead of per-second\n\tAdded collection processor statistics as well\n\n "
        },
        {
            "author": "Noble Paul",
            "id": "comment-13939371",
            "date": "2014-03-18T15:23:27+0000",
            "content": "We probably should add statistics on time taken to read the messages from ZK "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13939731",
            "date": "2014-03-18T20:32:06+0000",
            "content": "Added statistics on DistributedQueue as well.\n\n\n{\n  \"responseHeader\":{\n    \"status\":0,\n    \"QTime\":28},\n  \"leader\":\"127.0.1.1:8983_solr\",\n  \"overseer_queue_size\":0,\n  \"overseer_work_queue_size\":0,\n  \"overseer_collection_queue_size\":2,\n  \"overseer_operations\":[\n    \"createcollection\",{\n      \"requests\":1,\n      \"errors\":0,\n      \"totalTime\":0.971481,\n      \"avgRequestsPerMinute\":0.4506035128995973,\n      \"5minRateReqsPerMinute\":7.910887562405325,\n      \"15minRateReqsPerMinute\":10.443896710000685,\n      \"avgTimePerRequest\":0.971481,\n      \"medianRequestTime\":0.971481,\n      \"75thPcRequestTime\":0.971481,\n      \"95thPcRequestTime\":0.971481,\n      \"99thPcRequestTime\":0.971481,\n      \"999thPcRequestTime\":0.971481},\n    \"removeshard\",{\n      \"requests\":2,\n      \"errors\":0,\n      \"totalTime\":0.528514,\n      \"avgRequestsPerMinute\":1.3925947936037932,\n      \"5minRateReqsPerMinute\":9.662379888216847,\n      \"15minRateReqsPerMinute\":11.16388960970474,\n      \"avgTimePerRequest\":0.264257,\n      \"medianRequestTime\":0.26425699999999996,\n      \"75thPcRequestTime\":0.273016,\n      \"95thPcRequestTime\":0.273016,\n      \"99thPcRequestTime\":0.273016,\n      \"999thPcRequestTime\":0.273016},\n    \"updateshardstate\",{\n      \"requests\":3,\n      \"errors\":0,\n      \"totalTime\":2.400814,\n      \"avgRequestsPerMinute\":1.585204122426084,\n      \"5minRateReqsPerMinute\":8.747699997919707,\n      \"15minRateReqsPerMinute\":10.798558466515363,\n      \"avgTimePerRequest\":0.8002713333333333,\n      \"medianRequestTime\":0.653465,\n      \"75thPcRequestTime\":1.194389,\n      \"95thPcRequestTime\":1.194389,\n      \"99thPcRequestTime\":1.194389,\n      \"999thPcRequestTime\":1.194389},\n    \"state\",{\n      \"requests\":20,\n      \"errors\":0,\n      \"totalTime\":24.947245,\n      \"avgRequestsPerMinute\":7.125324255165824,\n      \"5minRateReqsPerMinute\":17.05318606289356,\n      \"15minRateReqsPerMinute\":21.377358367732,\n      \"avgTimePerRequest\":1.24736225,\n      \"medianRequestTime\":0.6480015,\n      \"75thPcRequestTime\":0.77874075,\n      \"95thPcRequestTime\":10.828164299999994,\n      \"99thPcRequestTime\":11.242307,\n      \"999thPcRequestTime\":11.242307},\n    \"createshard\",{\n      \"requests\":6,\n      \"errors\":0,\n      \"totalTime\":0.6182,\n      \"avgRequestsPerMinute\":3.114875928429097,\n      \"5minRateReqsPerMinute\":17.4905427262541,\n      \"15minRateReqsPerMinute\":21.596450394663627,\n      \"avgTimePerRequest\":0.10303333333333332,\n      \"medianRequestTime\":0.1074325,\n      \"75thPcRequestTime\":0.128297,\n      \"95thPcRequestTime\":0.155576,\n      \"99thPcRequestTime\":0.155576,\n      \"999thPcRequestTime\":0.155576},\n    \"leader\",{\n      \"requests\":20,\n      \"errors\":0,\n      \"totalTime\":2.068689,\n      \"avgRequestsPerMinute\":7.222057819167628,\n      \"5minRateReqsPerMinute\":17.568357153570165,\n      \"15minRateReqsPerMinute\":21.607558446226854,\n      \"avgTimePerRequest\":0.10343445,\n      \"medianRequestTime\":0.105716,\n      \"75thPcRequestTime\":0.125223,\n      \"95thPcRequestTime\":0.15367004999999997,\n      \"99thPcRequestTime\":0.154579,\n      \"999thPcRequestTime\":0.154579},\n    \"deletecore\",{\n      \"requests\":2,\n      \"errors\":0,\n      \"totalTime\":0.108824,\n      \"avgRequestsPerMinute\":1.3923955098922307,\n      \"5minRateReqsPerMinute\":9.662379888216847,\n      \"15minRateReqsPerMinute\":11.16388960970474,\n      \"avgTimePerRequest\":0.054412,\n      \"medianRequestTime\":0.054412,\n      \"75thPcRequestTime\":0.058704,\n      \"95thPcRequestTime\":0.058704,\n      \"99thPcRequestTime\":0.058704,\n      \"999thPcRequestTime\":0.058704}],\n  \"collection_operations\":[\n    \"overseerstatus\",{\n      \"requests\":3,\n      \"errors\":0,\n      \"totalTime\":14.146347,\n      \"avgRequestsPerMinute\":1.2874214823830716,\n      \"5minRateReqsPerMinute\":8.124718170996797,\n      \"15minRateReqsPerMinute\":10.512878920945859,\n      \"avgTimePerRequest\":4.715449,\n      \"medianRequestTime\":4.757046,\n      \"75thPcRequestTime\":4.925945,\n      \"95thPcRequestTime\":4.925945,\n      \"99thPcRequestTime\":4.925945,\n      \"999thPcRequestTime\":4.925945},\n    \"splitshard\",{\n      \"requests\":3,\n      \"errors\":0,\n      \"totalTime\":6937.350684,\n      \"avgRequestsPerMinute\":1.5573643647163575,\n      \"5minRateReqsPerMinute\":8.747699997919707,\n      \"15minRateReqsPerMinute\":10.798558466515363,\n      \"avgTimePerRequest\":2312.450228,\n      \"medianRequestTime\":2027.78933,\n      \"75thPcRequestTime\":2935.911503,\n      \"95thPcRequestTime\":2935.911503,\n      \"99thPcRequestTime\":2935.911503,\n      \"999thPcRequestTime\":2935.911503},\n    \"createcollection\",{\n      \"requests\":1,\n      \"errors\":0,\n      \"totalTime\":2236.185807,\n      \"avgRequestsPerMinute\":0.45055336110011696,\n      \"5minRateReqsPerMinute\":7.910887562405325,\n      \"15minRateReqsPerMinute\":10.443896710000685,\n      \"avgTimePerRequest\":2236.185807,\n      \"medianRequestTime\":2236.185807,\n      \"75thPcRequestTime\":2236.185807,\n      \"95thPcRequestTime\":2236.185807,\n      \"99thPcRequestTime\":2236.185807,\n      \"999thPcRequestTime\":2236.185807},\n    \"deleteshard\",{\n      \"requests\":2,\n      \"errors\":1,\n      \"totalTime\":449.782332,\n      \"avgRequestsPerMinute\":2.088013136687043,\n      \"5minRateReqsPerMinute\":9.6597401952259,\n      \"15minRateReqsPerMinute\":11.163546953268966,\n      \"avgTimePerRequest\":149.927444,\n      \"medianRequestTime\":223.62014,\n      \"75thPcRequestTime\":224.781676,\n      \"95thPcRequestTime\":224.781676,\n      \"99thPcRequestTime\":224.781676,\n      \"999thPcRequestTime\":224.781676}],\n  \"overseer_queue\":[\n    \"peek_wait100\",{\n      \"totalTime\":2373.782195,\n      \"avgRequestsPerMinute\":14.806326086807369,\n      \"5minRateReqsPerMinute\":20.993580169733175,\n      \"15minRateReqsPerMinute\":22.99699762014067,\n      \"avgTimePerRequest\":57.89712670731708,\n      \"medianRequestTime\":100.719081,\n      \"75thPcRequestTime\":101.3016165,\n      \"95thPcRequestTime\":101.80825329999999,\n      \"99thPcRequestTime\":101.903817,\n      \"999thPcRequestTime\":101.903817},\n    \"peek_wait_forever\",{\n      \"totalTime\":88855.760833,\n      \"avgRequestsPerMinute\":12.093958880705209,\n      \"5minRateReqsPerMinute\":34.44753369023466,\n      \"15minRateReqsPerMinute\":42.880536002203655,\n      \"avgTimePerRequest\":2613.4047303823527,\n      \"medianRequestTime\":87.3240445,\n      \"75thPcRequestTime\":2211.790657,\n      \"95thPcRequestTime\":17847.67253375,\n      \"99thPcRequestTime\":25305.997634,\n      \"999thPcRequestTime\":25305.997634},\n    \"remove\",{\n      \"totalTime\":83.723085,\n      \"avgRequestsPerMinute\":19.238670321778937,\n      \"5minRateReqsPerMinute\":37.37089757629722,\n      \"15minRateReqsPerMinute\":44.081383699639126,\n      \"avgTimePerRequest\":1.5504275,\n      \"medianRequestTime\":1.424577,\n      \"75thPcRequestTime\":1.7675002499999999,\n      \"95thPcRequestTime\":3.0253507500000003,\n      \"99thPcRequestTime\":4.435305,\n      \"999thPcRequestTime\":4.435305},\n    \"poll\",{\n      \"totalTime\":85.616811,\n      \"avgRequestsPerMinute\":19.238605533763508,\n      \"5minRateReqsPerMinute\":37.37089757629722,\n      \"15minRateReqsPerMinute\":44.081383699639126,\n      \"avgTimePerRequest\":1.5854965,\n      \"medianRequestTime\":1.448463,\n      \"75thPcRequestTime\":1.815407,\n      \"95thPcRequestTime\":3.08085125,\n      \"99thPcRequestTime\":4.510461,\n      \"999thPcRequestTime\":4.510461}],\n  \"overseer_internal_queue\":[\n    \"peek\",{\n      \"totalTime\":0.734537,\n      \"avgRequestsPerMinute\":0.35570294684187176,\n      \"5minRateReqsPerMinute\":7.158067076339619,\n      \"15minRateReqsPerMinute\":10.101505049683713,\n      \"avgTimePerRequest\":0.734537,\n      \"medianRequestTime\":0.734537,\n      \"75thPcRequestTime\":0.734537,\n      \"95thPcRequestTime\":0.734537,\n      \"99thPcRequestTime\":0.734537,\n      \"999thPcRequestTime\":0.734537},\n    \"offer\",{\n      \"totalTime\":43.474119,\n      \"avgRequestsPerMinute\":19.2386904364582,\n      \"5minRateReqsPerMinute\":37.37089757629722,\n      \"15minRateReqsPerMinute\":44.081383699639126,\n      \"avgTimePerRequest\":0.8050762777777778,\n      \"medianRequestTime\":0.815022,\n      \"75thPcRequestTime\":1.017915,\n      \"95thPcRequestTime\":1.33674325,\n      \"99thPcRequestTime\":1.787279,\n      \"999thPcRequestTime\":1.787279},\n    \"remove\",{\n      \"totalTime\":131.244284,\n      \"avgRequestsPerMinute\":31.35258075987943,\n      \"5minRateReqsPerMinute\":71.81843126653187,\n      \"15minRateReqsPerMinute\":86.9619197018428,\n      \"avgTimePerRequest\":1.4914123181818182,\n      \"medianRequestTime\":1.3513225,\n      \"75thPcRequestTime\":2.18225375,\n      \"95thPcRequestTime\":3.0428447,\n      \"99thPcRequestTime\":3.656696,\n      \"999thPcRequestTime\":3.656696},\n    \"poll\",{\n      \"totalTime\":135.212298,\n      \"avgRequestsPerMinute\":31.352528139029836,\n      \"5minRateReqsPerMinute\":71.81843126653187,\n      \"15minRateReqsPerMinute\":86.9619197018428,\n      \"avgTimePerRequest\":1.5365033863636364,\n      \"medianRequestTime\":1.3905595000000002,\n      \"75thPcRequestTime\":2.2290725,\n      \"95thPcRequestTime\":3.0980611,\n      \"99thPcRequestTime\":3.714584,\n      \"999thPcRequestTime\":3.714584}],\n  \"collection_queue\":[\n    \"remove_event\",{\n      \"totalTime\":34.544719,\n      \"avgRequestsPerMinute\":4.2920515037757445,\n      \"5minRateReqsPerMinute\":9.430673865735049,\n      \"15minRateReqsPerMinute\":11.051746440368753,\n      \"avgTimePerRequest\":3.4544718999999997,\n      \"medianRequestTime\":3.161874,\n      \"75thPcRequestTime\":4.8347845,\n      \"95thPcRequestTime\":5.08054,\n      \"99thPcRequestTime\":5.08054,\n      \"999thPcRequestTime\":5.08054},\n    \"peek_wait_forever\",{\n      \"totalTime\":158944.84134,\n      \"avgRequestsPerMinute\":3.9126903584045136,\n      \"5minRateReqsPerMinute\":1.517316852098354,\n      \"15minRateReqsPerMinute\":0.607514604536483,\n      \"avgTimePerRequest\":14449.53103090909,\n      \"medianRequestTime\":11498.972881,\n      \"75thPcRequestTime\":27505.157498,\n      \"95thPcRequestTime\":35014.040773,\n      \"99thPcRequestTime\":35014.040773,\n      \"999thPcRequestTime\":35014.040773}]}\n\n "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13940647",
            "date": "2014-03-19T16:41:48+0000",
            "content": "Added a very basic test. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13941891",
            "date": "2014-03-20T16:16:03+0000",
            "content": "This patch adds tracking 10 most recent failures (with entire request/response) for each Collection API action. I think this along with the requeststatus API added in SOLR-5477 removes the need to expose entire logs.\n\nThis can be committed now. In order to write/read stats from ZK, we need to be able to serialize Timer and related classes. I shall do that via a different issue. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13944208",
            "date": "2014-03-22T19:56:37+0000",
            "content": "Refactored the stats class a bit - replaced the multiple maps with a single one containing a custom class. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13944359",
            "date": "2014-03-23T07:22:30+0000",
            "content": "Commit 1580463 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1580463 ]\n\nSOLR-5749: A new Overseer status collection API exposes overseer queue sizes, timing statistics, success and error counts and last N failures per operation "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13944361",
            "date": "2014-03-23T07:30:21+0000",
            "content": "Commit 1580465 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1580465 ]\n\nSOLR-5749: Removed unused methods "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13944363",
            "date": "2014-03-23T07:32:21+0000",
            "content": "Commit 1580466 from shalin@apache.org in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1580466 ]\n\nSOLR-5749: A new Overseer status collection API exposes overseer queue sizes, timing statistics, success and error counts and last N failures per operation "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-13950274",
            "date": "2014-03-28T02:02:41+0000",
            "content": "Could this be exposed via JMX, like the rest of the stats?\n\nCould we improve naming a bit?\ne.g.\n+      lst.add(\"15minRateReqsPerMinute\", timer.getFifteenMinuteRate());\n+      lst.add(\"avgTimePerRequest\", timer.getMean());\n+      lst.add(\"medianRequestTime\", snapshot.getMedian());\n+      lst.add(\"75thPcRequestTime\", snapshot.get75thPercentile());\n\nNote:\n\n\tReqs vs. spelled our Request\n\tNon-standard \"Pc\".  I think people most often use \"Pctl\"\n\n "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13950348",
            "date": "2014-03-28T04:22:30+0000",
            "content": "Thanks for reviewing Otis.\n\nCould this be exposed via JMX, like the rest of the stats?\n\nIt'd probably be hard for someone to monitor it with jmx because the mbeans will be published only on the overseer node (which can change from time to time).\n\nThe naming is actually copied over from the RequestHandlerBase.getStatistics, except that we track requests per minute instead of per second. I thought we could keep them same in both places for consistency. Would you still prefer to change? "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-13950362",
            "date": "2014-03-28T04:36:55+0000",
            "content": "It'd probably be hard for someone to monitor it with jmx because the mbeans will be published only on the overseer node (which can change from time to time).\n\nI think good monitoring tools won't have a problem with that.  But if you expose it through a non-standard API, then it's harder for monitoring tools to get to this info because now they need to implement a mechanism to, in addition to getting data from JMX, also get this other stats from an alternative API with a custom response format.... which makes things messy.\n\nRe naming - I think good names and consistency is important.  Applications get judged by how things are structured and named, too, not just whether they work or not or how well they work.   Not seeing that consistency bugs me, but it won't break things... "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13950365",
            "date": "2014-03-28T04:43:14+0000",
            "content": "I think good monitoring tools won't have a problem with that. But if you expose it through a non-standard API, then it's harder for monitoring tools to get to this info because now they need to implement a mechanism to, in addition to getting data from JMX, also get this other stats from an alternative API with a custom response format.... which makes things messy.\n\nThat makes sense. I'll open an issue to add a jmx bean.\n\nApplications get judged by how things are structured and named, too, not just whether they work or not or how well they work.  Not seeing that consistency bugs me, but it won't break things...\n\nOkay, we can change the names too  "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13950428",
            "date": "2014-03-28T06:13:41+0000",
            "content": "I opened SOLR-5928 but I am busy with other issues right now so I won't get to it soon. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13960032",
            "date": "2014-04-04T15:12:25+0000",
            "content": "Commit 1584739 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1584739 ]\n\nSOLR-5749: Renamed some stat names "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13960035",
            "date": "2014-04-04T15:13:22+0000",
            "content": "Commit 1584740 from shalin@apache.org in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1584740 ]\n\nSOLR-5749: Renamed some stat names "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13982635",
            "date": "2014-04-27T23:26:02+0000",
            "content": "Close issue after release of 4.8.0 "
        }
    ]
}