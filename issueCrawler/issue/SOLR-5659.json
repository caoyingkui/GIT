{
    "id": "SOLR-5659",
    "title": "Ignore or throw proper error message for bad delete containing bad composite ID",
    "details": {
        "affect_versions": "6.0",
        "status": "Closed",
        "fix_versions": [
            "4.7",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "The following error is thrown when sending deleteById via SolrJ with ID ending with an exclamation mark, it is also the case for deletes by id via the URL. For some curious reason delete by query using the id field does not fail, but i would expect the same behaviour.\n\n\n\tfails: /solr/update?commit=true&stream.body=<delete><id>a!</id></delete>\n\tok: /solr/update?commit=true&stream.body=<delete><query>id:a!</query></delete>\n\n\n\n\n2014-01-22 15:32:48,826 ERROR [solr.core.SolrCore] - [http-8080-exec-5] - : java.lang.ArrayIndexOutOfBoundsException: 1\n        at org.apache.solr.common.cloud.CompositeIdRouter$KeyParser.getHash(CompositeIdRouter.java:291)\n        at org.apache.solr.common.cloud.CompositeIdRouter.sliceHash(CompositeIdRouter.java:58)\n        at org.apache.solr.common.cloud.HashBasedRouter.getTargetSlice(HashBasedRouter.java:33)\n        at org.apache.solr.update.processor.DistributedUpdateProcessor.setupRequest(DistributedUpdateProcessor.java:218)\n        at org.apache.solr.update.processor.DistributedUpdateProcessor.processDelete(DistributedUpdateProcessor.java:961)\n        at org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(UpdateRequestProcessor.java:55)\n        at org.apache.solr.handler.loader.XMLLoader.processDelete(XMLLoader.java:347)\n        at org.apache.solr.handler.loader.XMLLoader.processUpdate(XMLLoader.java:278)\n        at org.apache.solr.handler.loader.XMLLoader.load(XMLLoader.java:174)\n        at org.apache.solr.handler.UpdateRequestHandler$1.load(UpdateRequestHandler.java:92)\n        at org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:74)\n        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:135)\n        at org.apache.solr.core.SolrCore.execute(SolrCore.java:1915)\n        at org.apache.solr.servlet.SolrDispatchFilter.execute(SolrDispatchFilter.java:785)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:418)\n        at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:203)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)\n        at org.apache.coyote.http11.Http11NioProcessor.process(Http11NioProcessor.java:889)\n        at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:744)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:2282)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at java.lang.Thread.run(Thread.java:724) \n\n\n\nSee also: http://lucene.472066.n3.nabble.com/AIOOBException-on-trunk-since-21st-or-22nd-build-td4112753.html",
    "attachments": {
        "SOLR-5659.patch": "https://issues.apache.org/jira/secure/attachment/12627489/SOLR-5659.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-13892096",
            "date": "2014-02-05T13:30:49+0000",
            "content": "This sounds like a bug in CompositeIdRouter - there should not be any ID for which it throws an exception (it was made the default because it is completely transparent, other than the hash codes it produces). "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13892107",
            "date": "2014-02-05T13:47:37+0000",
            "content": "Yes, I think this was introduced with SOLR-5320 "
        },
        {
            "author": "Anshum Gupta",
            "id": "comment-13893938",
            "date": "2014-02-06T22:57:28+0000",
            "content": "Fix and a test which fails without the patch. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13894274",
            "date": "2014-02-07T07:50:22+0000",
            "content": "Thanks Anshum. I added a delete by ID with an id ending with '!' to the test. I'll commit this shortly. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13894288",
            "date": "2014-02-07T08:13:49+0000",
            "content": "Commit 1565572 from shalin@apache.org in branch 'dev/trunk'\n[ https://svn.apache.org/r1565572 ]\n\nSOLR-5659: Add test for compositeId ending with a separator char "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13894289",
            "date": "2014-02-07T08:15:03+0000",
            "content": "Commit 1565573 from shalin@apache.org in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1565573 ]\n\nSOLR-5659: Add test for compositeId ending with a separator char "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13894292",
            "date": "2014-02-07T08:16:55+0000",
            "content": "Thanks Markus and Anshum! "
        }
    ]
}