{
    "id": "LUCENE-7081",
    "title": "Docvalues terms dict should sometimes prefix-compress fixed-length data.",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "6.0"
        ],
        "priority": "Major",
        "status": "Resolved",
        "type": "Improvement"
    },
    "description": "For Sorted/SortedSet types, we encode ordinals and a term dictionary (similar to old lucene 3 term dictionary).\n\nOriginally we had no prefix compression, so we \"save space\" in the fixed-width case by avoiding addressing, we can just use multiplication: https://github.com/apache/lucene-solr/blob/master/lucene/core/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesConsumer.java#L423-L425 \n\nBut it means no compression whatsoever of the actual bytes, even if values are enormous, I don't think its necessarily a good tradeoff. The lack of prefix compression can become much more magnified now that we have fixed width 128-bit point types in the sandbox...",
    "attachments": {
        "LUCENE-7081.patch": "https://issues.apache.org/jira/secure/attachment/12792245/LUCENE-7081.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15187056",
            "author": "Robert Muir",
            "date": "2016-03-09T12:59:55+0000",
            "content": "initial patch after lots of experiments.\n\nwe can easily just compute how well we compress, by computing shared prefix for the first term (count % 16 == 0) and last term (count % 16 == 15) in each block. Thats because our terms dict here uses a single shared prefix for all terms in a block: e.g. terms are delta encoded against the first term in the block always.\n\nwe use prefix compression when we share at least 3 bytes per term on average: thats because prefix encoding has some overhead vs the alternative for fixed-width data (worst case 2 bytes per term for suffix lengths). "
        },
        {
            "id": "comment-15187199",
            "author": "Michael McCandless",
            "date": "2016-03-09T14:58:02+0000",
            "content": "+1, nice! "
        },
        {
            "id": "comment-15188802",
            "author": "Adrien Grand",
            "date": "2016-03-10T06:55:34+0000",
            "content": "+1 "
        },
        {
            "id": "comment-15189214",
            "author": "ASF subversion and git services",
            "date": "2016-03-10T12:26:41+0000",
            "content": "Commit 162636bf05b5b6b35a79bacd2e7440830b05960f in lucene-solr's branch refs/heads/master from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=162636b ]\n\nLUCENE-7081: prefix-compress compressible fixed-width data (like InetAddress/BigInteger) "
        },
        {
            "id": "comment-15189230",
            "author": "ASF subversion and git services",
            "date": "2016-03-10T12:44:55+0000",
            "content": "Commit 7b03e6e02a92878c540ec754fa504dd75fc631a9 in lucene-solr's branch refs/heads/branch_6x from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7b03e6e ]\n\nLUCENE-7081: prefix-compress compressible fixed-width data (like InetAddress/BigInteger) "
        },
        {
            "id": "comment-15189249",
            "author": "ASF subversion and git services",
            "date": "2016-03-10T13:02:10+0000",
            "content": "Commit 10871cfb31464947e95042a91ab9400faa1f9a81 in lucene-solr's branch refs/heads/branch_6_0 from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=10871cf ]\n\nLUCENE-7081: prefix-compress compressible fixed-width data (like InetAddress/BigInteger) "
        },
        {
            "id": "comment-15189356",
            "author": "David Smiley",
            "date": "2016-03-10T14:30:08+0000",
            "content": "Nice!  You forgot a CHANGES.txt, Rob. "
        },
        {
            "id": "comment-15189369",
            "author": "Robert Muir",
            "date": "2016-03-10T14:36:32+0000",
            "content": "Yes, I plan to fold it into some kind of cohesive \"Summary\" of Point Values. See LUCENE-7076 for some notes.\n\nIn this case for example:\n  Adds InetAddress type supporting both IPv4 and IPv6. Both Point and DocValues storage apply prefix-compression so it does not provide 4x overhead (blah blah blah).  "
        }
    ]
}