{
    "id": "SOLR-12467",
    "title": "allow to change the autoscaling configuration via SolrJ",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "SolrJ"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "7.3.1",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Using SolrJ's CloudSolrClient it is possible to read the autoscaling configuration:\ncloudSolrClient.getZkStateReader().getAutoScalingConfig()\n\nThere is however no way to update it. One can only read out the list of life nodes and then do a call to Solr using the LBHttpSolrClient for example. Given that the config is stored in ZooKeeper and thus could be written directly and even when no Solr instance is running this is not optimal.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2018-06-08T09:38:08+0000",
            "content": "This is by design. The primary way of updating autoscaling config is through AutoscalingHandler at /admin/autoscaling, which also performs validation of the config. Manipulating the config by hand may be tricky because there are interdependencies between different sections that are sometimes not obvious (eg. trigger listeners need to refer to existing triggers, trigger action implementations must be valid classes, waitFor must be expressed in seconds, Policy needs to be consistent, etc...).\n\nIf you're feeling adventurous enough you can update ZK directly... you could also use the DistribStateManager API, which at least hides the ZK complexity, eg like this: new ZkDistribStateManager(cloudSolrClient.getZkStateReader().getZkClient()). But I strongly advise using  /admin/autoscaling  ",
            "author": "Andrzej Bialecki",
            "id": "comment-16505867"
        },
        {
            "date": "2018-06-08T09:49:56+0000",
            "content": "To clarify, we could add a method for updating the config from SolrJ directly to ZK, even when Solr is not running, but then we would lose important parts of the validation. In rare cases where this kind of access is required the above workaround seems sufficient. ",
            "author": "Andrzej Bialecki",
            "id": "comment-16505877"
        },
        {
            "date": "2018-06-08T11:00:04+0000",
            "content": "If no update straight in ZK is desired then it would still be nice if SolrJ would offer an update request. Given that this is not done all the time this would be fine for me as well. Now the SolrJ API just looks a bit incomplete  ",
            "author": "Hendrik Haddorp",
            "id": "comment-16505921"
        },
        {
            "date": "2018-06-08T12:45:01+0000",
            "content": "No, we should not be writing to Zookeeper directly. But we should add SolrJ request classes to modify autoscaling configuration the way we use the collection APIs etc. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16505983"
        }
    ]
}