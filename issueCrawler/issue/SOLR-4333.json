{
    "id": "SOLR-4333",
    "title": "edismax query with escaped colon ignores AND and OR",
    "details": {
        "affect_versions": "4.0",
        "status": "Closed",
        "fix_versions": [
            "4.4",
            "6.0"
        ],
        "components": [
            "query parsers"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "When I use the edismax query handler with qf=samenvatting and have a query of the form\n\na\\:b AND cde\n\n\nthen the parsedquery ends up as:\n\n(+(DisjunctionMaxQuery((samenvatting:\"a b\")) DisjunctionMaxQuery((samenvatting:and)) DisjunctionMaxQuery((samenvatting:cde))))/no_coord\n\n\nnote that the AND operator is ignored, and a search for the word AND is performed.\nAs far as I've seen it doesn't matter if the part before the \\: is a real field or not.",
    "attachments": {
        "SOLR-4333.patch": "https://issues.apache.org/jira/secure/attachment/12578946/SOLR-4333.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "James Dyer",
            "id": "comment-13632887",
            "date": "2013-04-16T14:45:29+0000",
            "content": "Here's a failing unit test.  If your client escapes the colon, any boolean operators (AND|OR|NOT) after the escaped colon get interpreted as query operators.  This leads to incorrect logic.  If the default mm=100%, the query likely will return no results. "
        },
        {
            "author": "James Dyer",
            "id": "comment-13634313",
            "date": "2013-04-17T18:59:58+0000",
            "content": "Here is an improved test that shows off the problem a little better.  This happens when you are using boolean syntax with edismax.  Either the default query field or the singular field listed in \"qf\" need to be non-analyzed.\n\nGiven: \n\nq=text_sw:(theos OR hasa\\:colon OR theou)&qf=id\n\nGet back:\n\n\n<str name=\"parsedquery_toString\">+(text_sw:theo (id:OR) (id:hasa:colon) (id:OR) (id:theou)))</str>\n\n\n\nIt fails a little differently if you use an analyzed field in \"qf\" (or as default)...With:\nq=text_sw:(theos OR hasa\\:colon OR theou)&qf=text\n\nGet back:\n\n<str name=\"parsedquery_toString\">+(text_sw:theo (text:\"hasa colon\") (text:theou))</str>\n\n\n\nnote the switch from \"text_sw\" to \"text\".  In either case, removing the colon, or not escaping it resolves the issue.  But it would be best if clients could send escaped colons like this so as to prevent users from using colons with real field names (but allowing application code to do so).\n\n "
        },
        {
            "author": "James Dyer",
            "id": "comment-13636707",
            "date": "2013-04-19T18:35:48+0000",
            "content": "Here's a patch with a fix.  \n\nThe \"splitIntoClauses\" logic escapes colons in a special after-the-fact bit of code, but this does not take into account that some colons might already have been escaped.  This results in two backslashes followed by a colon which in turn produces a query parser exception.  This causes edismax to go into full-escape mode resulting in the surprise described already here.\n\nThe patch changes this to not escape a colon again if it has already been escaped.\n "
        },
        {
            "author": "James Dyer",
            "id": "comment-13636808",
            "date": "2013-04-19T19:59:58+0000",
            "content": "All tests pass with this patch.  I will commit in a few days. "
        },
        {
            "author": "Commit Tag Bot",
            "id": "comment-13638103",
            "date": "2013-04-22T15:31:05+0000",
            "content": "[trunk commit] jdyer\nhttp://svn.apache.org/viewvc?view=revision&revision=1470577\n\nSOLR-4333: edismax to not double-escape colons if already escaped by client application "
        },
        {
            "author": "James Dyer",
            "id": "comment-13638107",
            "date": "2013-04-22T15:33:51+0000",
            "content": "committed\n\nTrunk:  r1470577\nBranch_4x: r1470578 (sorry!  did not enter a svn comment!) "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13716827",
            "date": "2013-07-23T18:38:42+0000",
            "content": "Bulk close resolved 4.4 issues "
        }
    ]
}