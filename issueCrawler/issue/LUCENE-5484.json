{
    "id": "LUCENE-5484",
    "title": "Distinct control of recursion levels for prefix and suffix in Hunspell.",
    "details": {
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Not A Problem",
        "components": [
            "modules/analysis"
        ],
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": []
    },
    "description": "Currently, there is an option to set recursionCap value to control depth of recursion in Hunspell token filter. This recursion enables to apply allowed affix rule to input token and pass output token(s) as an input tokens recursively.\n\nHowever, the recursionCap does not allow to distinguish between how many prefix and suffix rules were applied. It just counts for total. For example if recursionCap is set to 1 it actually includes all of the following options:\n\n\t2 prefix rules, 0 suffix rules\n\t1prefix rule, 1 suffix rule\n\t0 prefix rules, 2 suffix rules\n\n\n\nIn some cases it is required to be able to distinguish between prefix rule and suffix rule and have finer control over how many times is each applied. Requested feature should allow setting recursion level separately for prefix and suffix rules.\n\nSpecific example is the Czech dictionary, where it gives best results if suffix rules are applied only once. Hence recursionCap = 0. But if for input token a prefix rule is applied it does not allow to apply suffix rule and produces a token that is not in root form. And setting recursionCap = 1 produces too many irrelevant tokens that it makes Hunspell token filter unuseful. Good solution to this problem would be tell Hunspell token filter to apply up to 1 prefix rule and up to 1 suffix rule only (meaning never allow to apply 0 prefix rules and 2 suffix rules).\n\nGenerally, this is probably dependant a lot on how particular dictionary and affix rules are constructed and it might not be considered a generalization but rather an expert feature.\n\n(There was some relevant discussion going on in LUCENE-5468)",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13917366",
            "author": "Robert Muir",
            "content": "This is no longer needed.\n\nSee LUCENE-5483:\n\n* LUCENE-5483: Fix inaccuracies in HunspellStemFilter. Multi-stage affix-stripping,\n  prefix-suffix dependencies, and COMPLEXPREFIXES now work correctly according\n  to the hunspell algorithm. Removed recursionCap parameter, as its no longer needed, rules for\n  recursive affix application are driven correctly by continuation classes in the affix file.\n\n ",
            "date": "2014-03-02T11:25:56+0000"
        },
        {
            "id": "comment-13917369",
            "author": "Robert Muir",
            "content": "Just to explain the problem a bit more (for example Czech).\n\nYou should never recurse, unless the affix actually allows for it with a continuation class. The czech ones don't! So it should never strip more than one suffix there. And even with those its max 1 prefix, max 2 suffixes, unless COMPLEXPREFIXES is specified, then its the other way around (max 2 prefixes, max 1 suffixes).\n\nThats why i say the parameter is no longer needed. For your czech dictionary (and many others now), you won't find any differences between 'hunspell -m' and the code in trunk now. ",
            "date": "2014-03-02T11:29:39+0000"
        },
        {
            "id": "comment-13917381",
            "author": "Lukas Vlcek",
            "content": "Excellent, I will give it a try.\nThanks! ",
            "date": "2014-03-02T12:22:07+0000"
        }
    ]
}