{
    "id": "SOLR-554",
    "title": "Hierarchical JDK log level selector for SOLR Admin",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.3"
        ],
        "components": [
            "Admin UI"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "An admin web page to allow displaying and setting the log level of  hierarchical loggers from the UI at runtime.  The existing logging.jsp only sets and displays the root log level.",
    "attachments": {
        "SOLR-554-screenshot-3.jpg": "https://issues.apache.org/jira/secure/attachment/12382666/SOLR-554-screenshot-3.jpg",
        "LogLevelSelection.java": "https://issues.apache.org/jira/secure/attachment/12381267/LogLevelSelection.java",
        "SOLR-554.patch": "https://issues.apache.org/jira/secure/attachment/12382607/SOLR-554.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Sean Timm",
            "id": "comment-12593620",
            "date": "2008-05-01T20:00:29+0000",
            "content": "Here is an implementation written in a servlet.  To configure, add\n\n<servlet>\n        <servlet-name>Logging</servlet-name>\n        <servlet-class>org.apache.solr.servlet.LogLevelSelection</servlet-class>\n</servlet>\n\n<servlet-mapping>\n        <servlet-name>Logging</servlet-name>\n        <url-pattern>/admin/logging</url-pattern>\n</servlet-mapping>\n\n\nto the web.xml configuration.\n\nIt doesn't have the same look and feel of the rest of the admin UI, but I did throw in a link to the Solr logo. \n\nThis is adapted from a former co-workers implementation for an AOL internal framework using Log4j. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12599063",
            "date": "2008-05-22T15:54:53+0000",
            "content": "Didn't try this, so I don't know what this looks like from a L&F perspective, but you mention L&F not being like the rest of Admin \u2013 any chance of somebody giving this some L&F love?  If that happens, we could probably get that in 1.3. "
        },
        {
            "author": "Sean Timm",
            "id": "comment-12599211",
            "date": "2008-05-22T22:04:21+0000",
            "content": "L&F screenshot "
        },
        {
            "author": "Sean Timm",
            "id": "comment-12599212",
            "date": "2008-05-22T22:06:04+0000",
            "content": "Patch format this time.  Added using the solr-admin.css to help the L&F.  Includes mods to web.xml and admin/index.jsp to load this servlet instead of the logging.jsp. "
        },
        {
            "author": "Sean Timm",
            "id": "comment-12599373",
            "date": "2008-05-23T14:03:19+0000",
            "content": "Minor L&F improvement. "
        },
        {
            "author": "Sean Timm",
            "id": "comment-12599374",
            "date": "2008-05-23T14:05:40+0000",
            "content": "L&F screenshot "
        },
        {
            "author": "Sean Timm",
            "id": "comment-12599392",
            "date": "2008-05-23T14:57:27+0000",
            "content": "It was pointed out to me that the logo was not positioned the same as the other admin pages.  This should be better. "
        },
        {
            "author": "Sean Timm",
            "id": "comment-12599393",
            "date": "2008-05-23T14:59:22+0000",
            "content": "Better logo positioning. "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12599404",
            "date": "2008-05-23T15:44:06+0000",
            "content": "This looks very good to me.  I never used the admin log page's functionality.  Does clicking \"set\" actually generate the correct log config file (and it overwrites the old one)? "
        },
        {
            "author": "Sean Timm",
            "id": "comment-12599434",
            "date": "2008-05-23T17:14:16+0000",
            "content": "No, like the existing logging.jsp, it doesn't touch the configuration file.  When the server is bounced, the log levels revert back to those in the config file. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12599876",
            "date": "2008-05-26T17:05:51+0000",
            "content": "While i'm personally a fan of JDK Logging, it does seem that in the \"medium\" future, Solr will be moving to to SLF4J, so I have to question the wisdom of enhancing/improving a JDK Logging specific page in the Solr Admin UI.\n\nI suppose even if/when we use SLF4J, JDK Logging will be the default, and people will have to physically remove the \"adapter\" jar from the solr.war to use something else (at which time they could also remove this servlet registration and delete the link) ... but still, i just wanted to point out it's something we should think about.\n\nIf nothing else, perhaps we could make the admin/index.jsp only generate a link to /admin/logging if it can tell a servlet is registered to that path?  ... or we could just worry about it later. "
        },
        {
            "author": "Sean Timm",
            "id": "comment-12599898",
            "date": "2008-05-26T19:20:31+0000",
            "content": "I'm not sure of the rationale, but SLF4J does not provide a way to change the logging levels, so the only way to do it is with the underlying logging system.  I can provide a Log4j version as well if folks would find that useful.\n\nFrom the SLF4J FAQ: \"SLF4J is only a facade, meaning that it does not provide a complete logging solution. Operations such as configuring appenders or setting logging levels cannot be performed with SLF4J. Thus, at some point in time, any non-trivial application will need to directly invoke the underlying logging system. In other words, complete independence from the API underlying logging system is not possible for a stand-alone application. Nevertheless, SLF4J reduces the impact of this dependence to near-painless levels.\" "
        },
        {
            "author": "Otis Gospodnetic",
            "id": "comment-12604127",
            "date": "2008-06-11T06:02:10+0000",
            "content": "My feeling is we should go ahead with this change for now (for 1.3) and it it becomes obsolete or needs changing later, for 1.4, we can deal with that then.\n\nI'm not assigning this to myself since I stayed out of the whole logging discussion, but I'm marking it for 1.3, so somebody will handle this one way or the other prior to 1.3. "
        },
        {
            "author": "David Smiley",
            "id": "comment-12614810",
            "date": "2008-07-18T17:28:57+0000",
            "content": "This feature may be useful, but it doesn't strike me as something that belongs in any web application (Solr included).  It strikes me as a feature that may or may not be there in your web server. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12619286",
            "date": "2008-08-02T22:09:45+0000",
            "content": "Sean \u2013 this looks great and it is certainly more useful than the current logging.jsp\n\nIs there a reason for not making this as a request handler? Currently, it displays all loggers available to it which also includes org.apache.catalina, ContainerBase and even javax.management.mbeanserver when running Solr under tomcat. It may be better to limit loggers to org.apache.solr by default. If this is made a request handler, we can configure the logger names it should support in solrconfig.xml and users can add packages of their custom solr plugins too. I'll see if I can find some time to make these changes.\n\nThoughts? "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12619424",
            "date": "2008-08-04T06:05:07+0000",
            "content": "On further thought, let's commit this for 1.3 and work on refactoring/enhancements if we can find time.\n\nCommitted revision 682264.\n\nThanks Sean! "
        },
        {
            "author": "Sean Timm",
            "id": "comment-12619886",
            "date": "2008-08-05T14:01:22+0000",
            "content": "There have been times that I've wanted to turn on logging for components outside of Solr.  Since it is hierarchical and sorted alphabetically, I've never found it a problem to find the loggers that I am looking for.  My preference would be to keep all of the available loggers in the table and keep the configuration to a minimum (right now the user does not need to configure anything). "
        },
        {
            "author": "Sean Timm",
            "id": "comment-12620708",
            "date": "2008-08-07T18:30:10+0000",
            "content": "Found a bug.  If a synthesized logger is set to OFF, the below exception is thrown.\n\n\nHTTP ERROR: 500\n\nINTERNAL_SERVER_ERROR\n\nRequestURI=/solr/admin/logging\nCaused by:\n\njava.lang.NullPointerException\n\tat org.apache.solr.servlet.LogLevelSelection.doGet(LogLevelSelection.java:134)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:707)\n        [...]\n\n\n\nThe fix is to ensure that the Level returned from getEffectiveLevel is not null.  If it is null, return Level.OFF.\n\n\n  private Level getEffectiveLevel( Logger logger ) {\n    Level level = logger.getLevel();\n    for( Level l : LEVELS ) {\n      if( level != null ) {\n        return level;\n      }\n      if( l == null ) { continue; }\n      if( logger.isLoggable( l ) ) {\n        level = l;\n      }\n    }\n    if( level == null ) {\n      level = Level.OFF;\n    }\n    return level;\n  }\n\n "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12620712",
            "date": "2008-08-07T18:39:38+0000",
            "content": "Committed revision 683672 with Sean's fix. "
        }
    ]
}