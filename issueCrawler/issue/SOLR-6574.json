{
    "id": "SOLR-6574",
    "title": "new ValueSources & parser syntax for \"coercing\" the datatypes used in wrapped ValueSources",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Something i've been thinking about for a while, but SOLR-6562 recently goaded me into opening a jira for...\n\nwe could/should add ValueSourceParses for \"coercing\" the datatypes of the ValueSources that they wrap, as a way of contorlling wether we ultimately call FunctionValues.floatValue(docid) vs intValue(docid) vs longValue(docid) etc...\n\nso while \"sum(field1, field2)\" currently does float based math on the two fields, we could use \"int(sum(field1, field2))\" which would create some new \"CoerceIntValueSource\" that would wrap the existing SumValueSource, and every type specific method in CoerceIntValueSource's FunctionValues would delegate to SumValueSource's intValue method \u2013 and likewise: CoerceIntValueSource's objectVal() method would return an Integer wrapped arround the results of the intValue(docid).\n\n\n(FWIW: i think a bunch of the existing \"math\" based FunctionValues currently implement most of their methods like intValue/longValue/doubleValue/etc... by just delegating to floatValue \u2013 so for this to work properly that would have to be fixed as well, but those fixes can & should be tracked in their own jiras)",
    "attachments": {},
    "issue_links": {},
    "comments": []
}