{
    "id": "LUCENE-6258",
    "title": "Cut binary releases down to a single format",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Open",
        "type": "Improvement"
    },
    "description": "In LUCENE-6247, one idea discussed to decrease the size of release artifacts was removing either tgz or zip from our binary releases.\n\nThe source releases are already only in tgz.  I think we should do the same for binary releases.  I looked at a number of other Apache projects, and the results are mixed, but there definitely are many major projects (hadoop, couchdb, cassandra, cordova) that only release tgz. Anyone who can deal with running using Lucene or Solr should have the skills necessary to extract an archive in either format, so in this way I think either format is fine, but I think matching what we release source in has a nice look.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14327405",
            "author": "Mark Miller",
            "date": "2015-02-19T13:36:38+0000",
            "content": "I think zip is more universally friendly. For Lucene, as it's a dev lib, this matter less than for Solr.\n\nBeing a linux user, I prefer tgz.\n\nI think either is fine, and both is unnecessary. "
        },
        {
            "id": "comment-14327526",
            "author": "Shai Erera",
            "date": "2015-02-19T14:44:14+0000",
            "content": "+1 to keeping only tgz. "
        },
        {
            "id": "comment-14327594",
            "author": "Adrien Grand",
            "date": "2015-02-19T14:52:58+0000",
            "content": "I think either is fine, and both is unnecessary.\n\n+1 on keeping the tgz only for consistency with our source release "
        },
        {
            "id": "comment-14327820",
            "author": "Hoss Man",
            "date": "2015-02-19T18:10:00+0000",
            "content": "a) worth looking at the build.xml files to make sure we understand what is currently diff between the two \u2013 off the top of my head i seem to recall line endings on shell scripts being diff (to play nicer with cygwin when windows users use zip files) ... on the flip side: tgz lets us preserve executable bits on shell scripts in a way i don't believe works consistently in zip files? ... point is: that should be reviewed thoroughly before ripping out one or the other.\n\nb) this sounds like a made up problem to me \u2013 end users are only helped by having multiple formats, not harmed.  users aren't downloading both the tgz and zip file releases \u2013 they are picking one and using that.  the only size decrease here is in what we as developers have to download to test when voting on an RC. "
        },
        {
            "id": "comment-14327895",
            "author": "Ryan Ernst",
            "date": "2015-02-19T18:22:08+0000",
            "content": "\na) worth looking at the build.xml files to make sure we understand what is currently diff between the two \u2013 off the top of my head i seem to recall line endings on shell scripts being diff (to play nicer with cygwin when windows users use zip files) ... on the flip side: tgz lets us preserve executable bits on shell scripts in a way i don't believe works consistently in zip files? ... point is: that should be reviewed thoroughly before ripping out one or the other.\n\nIf this is true, that we have different line endings depending on the format, then this is bogus IMO. We don't say \"windows\" and \"unix/mac\" in the filename to indicate zip is for one and tgz for the others.\n\n\nb) this sounds like a made up problem to me \u2013 end users are only helped by having multiple formats, not harmed.  users aren't downloading both the tgz and zip file releases \u2013 they are picking one and using that.  the only size decrease here is in what we as developers have to download to test when voting on an RC.\n\nBut that is a real problem. Releases take a long time for the release manager to deal with.  Cutting down on what has to be transferred/tested will allow us iterate more quickly. For example, maybe we wouldn't be so afraid of a respin if spinning an RC took half the time (not saying this will decrease the time by half, only using this as an example for why decreasing total artifacts size is good for us).  \n\nRegarding \"end users are only helped\", then why don't we also release in .7zip, or .rar or any other container format?  Why is our source release only for tgz? IMO it is because we just need some container format to stuff our jar files into. There is no real distinction or advantage for a competent user. "
        },
        {
            "id": "comment-14327904",
            "author": "Mark Miller",
            "date": "2015-02-19T18:27:18+0000",
            "content": "Releases take a long time for the release manager to deal with. \n\nRight, that is what I see as the problem. I have real fast internet and it still takes a long time to shove these files around and sometimes it fails, etc.\n\nWe could ditch zip for the entire process and then run a script at the end that extracts and zips and uploads a zip version. Somehow just do it at the end with some easy ant target or something.\n\nI don't worry too much about supporting both myself though. "
        },
        {
            "id": "comment-14327906",
            "author": "Mark Miller",
            "date": "2015-02-19T18:28:53+0000",
            "content": "Regarding \"end users are only helped\"\n\nI think they are helped by having a zip and 'unix' variant - sad reality of the dual world we live in.\n\nI just don't think they are helped enough for me to care that much about it. "
        },
        {
            "id": "comment-14327933",
            "author": "Hoss Man",
            "date": "2015-02-19T18:45:03+0000",
            "content": "If this is true, that we have different line endings depending on the format, then this is bogus IMO. We don't say \"windows\" and \"unix/mac\" in the filename to indicate zip is for one and tgz for the others.\n\nmaybe we should? ... my memory may also be faulty.  my point is: before throwing away a file type, it's worth looking at why we have that file type.\n\nRegarding \"end users are only helped\", then why don't we also release in .7zip, or .rar or any other container format?\n\nmaybe we should? ... the point here is: i think decisions about what formats we release binary artifacts should primarily be drive by whats best for the user, not what makes life easier for developers.\n\n\u2014\n\nBut that is a real problem. Releases take a long time for the release manager to deal with. Cutting down on what has to be transferred/tested will allow us iterate more quickly.\n\nif that's the goal of this issue then the summary & description are somewhat missleading and confusing. cutting down on the amount of time/work needed for the release manager is a different question/problem then \"let's remove some of the files we release to end users\" \n\nFWIW: there are a lot of things that could be done to simplify the time/energy for the release manager. i already tried to suggest some back in LUCENE-5589 \u2013 notably  having jenkins automate as much as possible, and switching to (the more reliable then people.apache.org) dist.apache.org for hosting the RCs, which would also minimizing the amount of network bandwidth the RC manager has to use \u2013 my suggestions were dismissed \"in toto\", w/o any consideration for the basic premise that the release process might be stream lined & speed up independently of just trying to hack away and remove bytes from disk. "
        }
    ]
}