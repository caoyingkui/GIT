{
    "id": "LUCENE-7968",
    "title": "AnalyzingSuggester's comparator compares incorrectly",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Bug",
        "components": [],
        "fix_versions": [
            "7.1",
            "master (8.0)"
        ]
    },
    "description": "Found by LUCENE-7966, but we should fix here separate.\n\nCurrently the tie-break case of this comparator is buggy when hasPayloads=false, as it assigns negative lengths to the BytesRefs being compared. The current BytesRef.compareTo simply silently returns false in this case, hiding the bug.",
    "attachments": {
        "LUCENE-7968.patch": "https://issues.apache.org/jira/secure/attachment/12886769/LUCENE-7968.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16163940",
            "date": "2017-09-13T00:30:27+0000",
            "content": "Here's an assert that can currently make tests fail. But I want to test that the tie-break case really works, not just that stuff is in-bounds.\n\n\ndiff --git a/lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester.java b/lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester.java\nindex 9c6a624..2fa3569 100644\n--- a/lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester.java\n+++ b/lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester.java\n@@ -392,6 +392,8 @@ public class AnalyzingSuggester extends Lookup implements Accountable {\n         scratchB.offset = readerB.getPosition();\n         scratchA.length = a.length - scratchA.offset;\n         scratchB.length = b.length - scratchB.offset;\n+        assert scratchA.isValid();\n+        assert scratchB.isValid();\n       }\n    \n       return scratchA.compareTo(scratchB);\n\n\n\n\n   [junit4] ERROR   0.31s J2 | AnalyzingSuggesterTest.testRandom <<<\n   [junit4]    > Throwable #1: java.lang.IllegalStateException: length is negative: -1507\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([D27F69F0C3A46E64:A0334CFF72C4D817]:0)\n   [junit4]    > \tat org.apache.lucene.util.BytesRef.isValid(BytesRef.java:222)\n   [junit4]    > \tat org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester$AnalyzingComparator.compare(AnalyzingSuggester.java:395)\n   [junit4]    > \tat org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester$AnalyzingComparator.compare(AnalyzingSuggester.java:339)\n   [junit4]    > \tat org.apache.lucene.util.BytesRefArray$1.comparePivot(BytesRefArray.java:157)\n   [junit4]    > \tat org.apache.lucene.util.IntroSorter.quicksort(IntroSorter.java:66)\n   [junit4]    > \tat org.apache.lucene.util.IntroSorter.quicksort(IntroSorter.java:82)\n   [junit4]    > \tat org.apache.lucene.util.IntroSorter.sort(IntroSorter.java:36)\n   [junit4]    > \tat org.apache.lucene.util.BytesRefArray.sort(BytesRefArray.java:166)\n   [junit4]    > \tat org.apache.lucene.util.BytesRefArray.iterator(BytesRefArray.java:196)\n   [junit4]    > \tat org.apache.lucene.util.OfflineSorter$SortPartitionTask.call(OfflineSorter.java:606)\n   [junit4]    > \tat org.apache.lucene.util.OfflineSorter$SortPartitionTask.call(OfflineSorter.java:588)\n   [junit4]    > \tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n   [junit4]    > \tat org.apache.lucene.util.SameThreadExecutorService.execute(SameThreadExecutorService.java:34)\n   [junit4]    > \tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)\n   [junit4]    > \tat org.apache.lucene.util.OfflineSorter.sort(OfflineSorter.java:285)\n   [junit4]    > \tat org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(AnalyzingSuggester.java:491)\n   [junit4]    > \tat org.apache.lucene.search.suggest.analyzing.AnalyzingSuggesterTest.testRandom(AnalyzingSuggesterTest.java:787)\n   [junit4]    > \tat java.lang.Thread.run(Thread.java:745)\n\n ",
            "author": "Robert Muir"
        },
        {
            "id": "comment-16163991",
            "date": "2017-09-13T01:23:07+0000",
            "content": "Patch, including a test that fails even without the assert. It just adds 50 surface forms with the same weight that all analyze to the same string, and asserts that lookup() returns them back in sorted order by surface form.\n\nWhen payloads=false, the BytesRef's length should be the remaining bytes, not negative. ",
            "author": "Robert Muir"
        },
        {
            "id": "comment-16164001",
            "date": "2017-09-13T01:29:17+0000",
            "content": "From what I can tell, since the stuff going into the FST (analyzed form, costs) is still in-order in this case, nothing detected it.\n\nThe surface forms are stored in a big byte[], so by being out of order it means suggester's results just come back in a bizarre order when there are ties on both the analyzed form and costs (rather than in fact being sorted by surface form).\n\nE.G. if you used a stemmer and added both dog (cost=2) and dogs (cost=2), suggester might sometimes return dog first, other times dogs. ",
            "author": "Robert Muir"
        },
        {
            "id": "comment-16169326",
            "date": "2017-09-17T15:37:40+0000",
            "content": "Commit 2e5f9a4369e0f4f664868718ce3ee8fbea43a98b in lucene-solr's branch refs/heads/master from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2e5f9a4 ]\n\nLUCENE-7968: Analyzing Suggester's comparator compares incorrectly ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16169327",
            "date": "2017-09-17T15:49:28+0000",
            "content": "Commit c12acde72bc585409fe0f5738f3d9f6dbec05d20 in lucene-solr's branch refs/heads/branch_7x from Robert Muir\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c12acde ]\n\nLUCENE-7968: Analyzing Suggester's comparator compares incorrectly ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16207411",
            "date": "2017-10-17T11:04:01+0000",
            "content": "Bulk close after 7.1.0 release ",
            "author": "Shalin Shekhar Mangar"
        }
    ]
}