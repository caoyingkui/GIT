{
    "id": "SOLR-11066",
    "title": "Implement a scheduled trigger",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "AutoScaling",
            "SolrCloud"
        ],
        "type": "Sub-task",
        "fix_versions": [
            "7.3",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Implement a trigger that runs on a fixed interval say every 1 hour or every 24 hours starting at midnight etc.",
    "attachments": {
        "SOLR-11066.patch": "https://issues.apache.org/jira/secure/attachment/12907933/SOLR-11066.patch",
        "SOLR-11066-test-fix.patch": "https://issues.apache.org/jira/secure/attachment/12912998/SOLR-11066-test-fix.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-01-26T21:29:57+0000",
            "content": "This patch is a first cut of the feature. Integration tests are still pending. The configuration of the trigger supports the following parameter:\n\n{\n  \"name\": \"scheduled_trigger_1\",\n  \"type\": \"scheduled\",\n  \"startTime\": \"2018-01-26T21:00:00\",\n  \"every\": \"+1DAY\",\n  \"graceTime\": \"60000\"\n}\n\n\n\n\n\tstartTime is a date in the format yyyy-MM-dd'T'HH:mm:ss. If not specified then it will default to the trigger's creation time.\n\tevery is a string which follows Solr's date math parser syntax e.g. +1DAY, +12HOURS etc. (note date math supports subtraction but using such expression will ensure that the trigger never produces an event\n\tgraceTime is the number of milliseconds after the next scheduled time within which the trigger will fire an event (if it was not able to fire at the exact right time). It defaults to 15 minutes.\n\n\n\nThe trigger itself is quite simple. It applies the every date match expression on the startTime or the last fire time to derive the next scheduled time and if current time is greater than next scheduled time but within graceTime milliseconds then an event is generated. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16341625"
        },
        {
            "date": "2018-01-26T21:50:04+0000",
            "content": "Shouldn't startTime end in a 'Z', as is standard in Solr? Why use a custom SimpleDateFormat, which by the way is an old API? Simply parse using DateMathParser.parseMath(null, str).toInstant(), and an Instant has a toString() of the standard ISO-8601 with 'Z'\n\nDEFAULT_GRACE_TIME_MS could be more clearly defined as: TimeUnit.MINUTES.toMillis(15) ",
            "author": "David Smiley",
            "id": "comment-16341645"
        },
        {
            "date": "2018-01-27T19:24:02+0000",
            "content": "Thanks David. I actually did not want the trailing 'Z' because it signals that the date is represented in UTC. I think that it is an overhead to the user to convert their local timezone to UTC to call/use this API. I will introduce a timeZone configuration parameter to remove chances of confusion.  If the timeZone parameter is missing then we can default to UTC. What do you think? ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16342277"
        },
        {
            "date": "2018-01-27T20:13:26+0000",
            "content": "This patch adds a timeZone configuration parameter. It also changes graceTime to be a date math string instead of milliseconds. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16342294"
        },
        {
            "date": "2018-01-27T20:15:30+0000",
            "content": "Example configuration looks like this with the latest patch:\n\n{\n  \"name\": \"scheduled_trigger_1\",\n  \"type\": \"scheduled\",\n  \"startTime\": \"2018-01-26T21:00:00\",\n  \"every\": \"+1DAY\",\n  \"graceTime\": \"+1MINUTE\",\n  \"timeZone\" : \"America/St_Vincent\"\n}\n\n ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16342295"
        },
        {
            "date": "2018-01-28T01:48:24+0000",
            "content": "Solr has some conventions here already... \"TZ\" is Solr's timezone parameter. \u00a0It has been exclusively used for date math semantics alone \u2013 all times\u00a0are fully unambiguous with Z==UTC. \u00a0I've working on Time Routed Aliases with Gus Heck and we followed this convention.\u00a0\u00a0I guess I'm okay with allowing startTime to not have a trailing 'Z' provided that in this circumstance, we insist that TZ is provided.\n\ngraceTime should probably be renamed graceDuration since it is not a time (startTime is a time). \u00a0I like the readability of using date math. \u00a0With Time Routed Aliases there's a little internal setting \"max-future-ms\" that is in milliseconds but I hesitated a bit on wether to use date math. \u00a0Maybe we should have.\n\nIt's not clear to me looking at the patch how these ScheduledTriggers are created. \u00a0Can you please explain? \u00a0I was anticipating some new API call to create the trigger. ",
            "author": "David Smiley",
            "id": "comment-16342400"
        },
        {
            "date": "2018-01-28T06:03:06+0000",
            "content": "As dave previously pointed out to me, SOLR-2690 has discussion of the rational behind the original TZ param. FWIW I would think start time ought to be UTC for consistency sake. At a minimum it should accept and respect a time stamp with a final Z if the user provides it, and this should not necessarily set the TZ parameter.\u00a0\n\n\"startTime\": \"2018-01-26T21:00:00Z\",\n\"TZ\" : \"America/St_Vincent\"\n\nShould mean starting at that\u00a0clear and unambiguous\u00a0instant, and performing DateMath calculations per the St Vincent timezone.\u00a0 ",
            "author": "Gus Heck",
            "id": "comment-16342462"
        },
        {
            "date": "2018-01-29T08:09:10+0000",
            "content": "+1 to require Z and UTC, with optional TZ. I think that ultimately it\u2019s better to mandate a single format for a time instant, at least in the config - we could be perhaps more lenient in the user APIs, or provide a suggested value expressed in UTC inside the error message. ",
            "author": "Andrzej Bialecki",
            "id": "comment-16343038"
        },
        {
            "date": "2018-01-31T20:01:58+0000",
            "content": "Thanks David, Gus and Andrzej!\n\nThe latest patch has the following changes:\n\n\tgraceTime is renamed to graceDuration\n\tThe trigger accepts a startTime which must be an ISO-8601 date time string ending with the 'Z' (signalling UTC) or without 'Z'. If the date time is without 'Z' then a time zone must be specified.\n\tThe date math is done using the given time zone or UTC if none given\n\tThe calculations in the trigger are all done using the Instant class\n\tThe configuration stored in ZK is exactly what the user provided while creating the API.\n\n\n\nIt's not clear to me looking at the patch how these ScheduledTriggers are created.  Can you please explain?  I was anticipating some new API call to create the trigger.\n\nThe trigger is created using the existing set-trigger API so no API changes were made. This is also the reason behind keeping the configuration in ZK the same as what was given by the user. The alternative would have been for the API to know that scheduled trigger is special and it may require modifying the provided startTime value to UTC. The downside to the current approach is that there is no validation of the properties until a Trigger is instantiated or initialized.\n\nI'm going to open another issue to add a general validation API to Trigger which can be used for validating input configuration to avoid set-trigger calls with bad input succeeding. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16347521"
        },
        {
            "date": "2018-02-19T05:54:23+0000",
            "content": "This patch adds an integration test as well as hooks to create the trigger via the APIs. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16368808"
        },
        {
            "date": "2018-02-20T05:01:20+0000",
            "content": "This patch adds support for Ignored events in ScheduledTrigger. In case where grace time has elapsed and the event is to be skipped, the listener is fired with stage=Ignored so that it is possible to perform some useful action on it. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16369720"
        },
        {
            "date": "2018-02-22T04:12:39+0000",
            "content": "Final patch attached with ref guide changes. I'll commit this to master now. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16372386"
        },
        {
            "date": "2018-02-22T14:32:13+0000",
            "content": "There are a few test failures on jenkins after the commit on master so I am going to revert it until I fix the tests. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16372864"
        },
        {
            "date": "2018-02-22T14:32:45+0000",
            "content": "Commit 4446545de64926eb97bc6160c34c76f25cc7fe7c in lucene-solr's branch refs/heads/master from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4446545 ]\n\nRevert \"SOLR-11066: Implement a scheduled autoscaling trigger that runs on a fixed interval beginning with a given start time\"\n\nThis reverts commit 137e647 ",
            "author": "ASF subversion and git services",
            "id": "comment-16372865"
        },
        {
            "date": "2018-02-26T05:58:36+0000",
            "content": "Blocked by SOLR-12023 ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16376421"
        },
        {
            "date": "2018-03-02T19:16:15+0000",
            "content": "Final patch with some additional code comments after SOLR-12023/SOLR-12031 was fixed. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16384011"
        },
        {
            "date": "2018-03-02T19:35:15+0000",
            "content": "Removed a nocommit in the test I had put in for debugging earlier. Also fixes forbidden API usage in ScheduledTriggerTest. Tests and precommit pass. I'll commit this now. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16384038"
        },
        {
            "date": "2018-03-02T19:36:54+0000",
            "content": "Commit 71fc9cd43d0001ca0e66a443654b091485b21a46 in lucene-solr's branch refs/heads/master from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=71fc9cd ]\n\nSOLR-11066: Implement a scheduled autoscaling trigger that runs on a fixed interval beginning with a given start time ",
            "author": "ASF subversion and git services",
            "id": "comment-16384039"
        },
        {
            "date": "2018-03-02T19:39:33+0000",
            "content": "Commit a7dc153a22f46e1d14307c57ab815ac5c96321b7 in lucene-solr's branch refs/heads/branch_7x from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a7dc153 ]\n\nSOLR-11066: Implement a scheduled autoscaling trigger that runs on a fixed interval beginning with a given start time\n\n(cherry picked from commit 71fc9cd) ",
            "author": "ASF subversion and git services",
            "id": "comment-16384041"
        },
        {
            "date": "2018-03-03T18:57:36+0000",
            "content": "Commit 78f11d05acc8730986d23eda7011b00b213d0fe5 in lucene-solr's branch refs/heads/master from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=78f11d0 ]\n\nSOLR-11066: Marking the test as AwaitsFix until the test failures on jenkins are investigated and fixed ",
            "author": "ASF subversion and git services",
            "id": "comment-16384823"
        },
        {
            "date": "2018-03-03T18:58:27+0000",
            "content": "Commit 1a3468b87282a97222243b7176d9eaeb603e4968 in lucene-solr's branch refs/heads/branch_7x from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1a3468b ]\n\nSOLR-11066: Marking the test as AwaitsFix until the test failures on jenkins are investigated and fixed\n\n(cherry picked from commit 78f11d0) ",
            "author": "ASF subversion and git services",
            "id": "comment-16384825"
        },
        {
            "date": "2018-03-05T08:41:06+0000",
            "content": "I found the cause of the test failures. I had beasted the new test before committing but the failures were always suite failures and depended on the order the tests were executed. The root cause was that some tests start additional nodes which are not shutdown. This causes the cluster layout assumption made in testScheduledTrigger to be wrong and therefore the test fails. This patch fixes the TriggerIntegrationTest to ensure that the beforeTest method keeps exactly 2 jetties running. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16385795"
        },
        {
            "date": "2018-03-05T08:57:32+0000",
            "content": "Commit 334430647356bbd404442121fb968329aa581f54 in lucene-solr's branch refs/heads/master from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3344306 ]\n\nSOLR-11066: Fix TriggerIntegrationTest.testScheduledTrigger by ensuring number of jetties is always 2 before start of test ",
            "author": "ASF subversion and git services",
            "id": "comment-16385817"
        },
        {
            "date": "2018-03-05T08:58:06+0000",
            "content": "Commit f711d475ba206f430c91edce1cfcb6c8c282e26d in lucene-solr's branch refs/heads/branch_7x from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f711d47 ]\n\nSOLR-11066: Fix TriggerIntegrationTest.testScheduledTrigger by ensuring number of jetties is always 2 before start of test\n\n(cherry picked from commit 3344306) ",
            "author": "ASF subversion and git services",
            "id": "comment-16385818"
        },
        {
            "date": "2018-03-06T16:18:40+0000",
            "content": "Jirabot missed a commit I made:\n\n\nSOLR-11066: Added examples of startTime in ref guide. Added null check for processor and code comments to explain skipped events and lastRunAt initialization. Moved default preferredOp value to ComputePlanAction. Extracted a constant.\n\nmaster: http://git-wip-us.apache.org/repos/asf/lucene-solr/commit/9cec2221\nbranch_7x: http://git-wip-us.apache.org/repos/asf/lucene-solr/commit/29060a7b\n\n ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16388029"
        },
        {
            "date": "2018-03-06T18:59:07+0000",
            "content": "Another commit missed by jira bot:\n\nSOLR-11066: Renamed the internal ScheduledTriggers.ScheduledTrigger inner class to TriggerWrapper to avoid confusion with the ScheduledTrigger added in this issue\n\nMaster: http://git-wip-us.apache.org/repos/asf/lucene-solr/commit/8b9a1adb\nbranch_7x: http://git-wip-us.apache.org/repos/asf/lucene-solr/commit/05297278\n\n ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16388320"
        },
        {
            "date": "2018-03-07T11:57:12+0000",
            "content": "Another one:\n\nSOLR-11066: Use timeZone.toZoneId instead of ZoneId.of(timeZoneString) because the latter cannot lookup short aliases\n\nMaster: http://git-wip-us.apache.org/repos/asf/lucene-solr/commit/498927d0\nbranch_7x: http://git-wip-us.apache.org/repos/asf/lucene-solr/commit/8cc98868\n\n ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16389452"
        }
    ]
}