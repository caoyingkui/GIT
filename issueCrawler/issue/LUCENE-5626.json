{
    "id": "LUCENE-5626",
    "title": "SimpleFSLockFactory \"access denied\" on windows.",
    "details": {
        "type": "Bug",
        "priority": "Blocker",
        "labels": "",
        "resolution": "Fixed",
        "components": [
            "core/store"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.8",
            "4.9",
            "6.0"
        ]
    },
    "description": "This happened twice in jenkins:\n\n\n[lockStressTest2] Exception in thread \"main\" java.io.IOException:\nAccess is denied\n[lockStressTest2] at\njava.io.WinNTFileSystem.createFileExclusively(Native Method)\n[lockStressTest2] at java.io.File.createNewFile(File.java:1012)\n[lockStressTest2] at\norg.apache.lucene.store.SimpleFSLock.obtain(SimpleFSLockFactory.java:135)\n\n\n\nMy windows machine got struck by lightning, so I cannot fix this easily.",
    "attachments": {
        "LUCENE-5626.patch": "https://issues.apache.org/jira/secure/attachment/12641448/LUCENE-5626.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13978084",
            "author": "Uwe Schindler",
            "content": "Hi,\nthis is almost impossible to reproduce here locally. It is also a concurrency issue on windows. The problem is: if there is already something else trying to create the file, Windows generally responds with \"Access is denied\".\n\nI think we should catch IOException in the obtain() method and handle this in a similar way like in NIOFSDir (return false, so lock was not aquired successfully).\n\nI will provide a patch after trying to reproduce this on windows (by making filesystem and cpu busy). ",
            "date": "2014-04-23T11:40:40+0000"
        },
        {
            "id": "comment-13978086",
            "author": "Robert Muir",
            "content": "Is it easy with the macro to increase the number of lock clients? Perhaps that is enough to trigger the issue. ",
            "date": "2014-04-23T11:43:40+0000"
        },
        {
            "id": "comment-13978093",
            "author": "Dawid Weiss",
            "content": "See this post, interesting. \nhttp://stackoverflow.com/questions/10516472/file-createnewfile-randomly-fails ",
            "date": "2014-04-23T11:46:38+0000"
        },
        {
            "id": "comment-13978096",
            "author": "Robert Muir",
            "content": "Yes the NativeFSLockFactory already has a catch block for this. \n\nInterestingly enough, its code comment refers to MacOS X...\n ",
            "date": "2014-04-23T11:51:32+0000"
        },
        {
            "id": "comment-13978097",
            "author": "Uwe Schindler",
            "content": "Simple patch, doing the same Exception handling in obtain() like with NativeFSLockFactory.\n\nThis bug is not new, it exists as long as SimpleFSLockFactory exists. But it only happens on Windows and SimpleFSLF is no longer the default, so no need to hold 4.8. ",
            "date": "2014-04-23T11:52:31+0000"
        },
        {
            "id": "comment-13978099",
            "author": "Uwe Schindler",
            "content": "See this post, interesting. http://stackoverflow.com/questions/10516472/file-createnewfile-randomly-fails\n\nThanks. Virus scanner or Indexer are not a problem on Jenkins, as they are disabled there. Otherwise the tests never pass  The same on my local machine, I excluded all directories that are development from virus and indexer. ",
            "date": "2014-04-23T11:57:17+0000"
        },
        {
            "id": "comment-13978100",
            "author": "Uwe Schindler",
            "content": "Interestingly enough, its code comment refers to MacOS X...\n\nBut it applies to Windows, too! If I disable it, it fails on my machine, too! ",
            "date": "2014-04-23T11:58:58+0000"
        },
        {
            "id": "comment-13978101",
            "author": "Robert Muir",
            "content": "Patch looks good. Thanks Uwe. ",
            "date": "2014-04-23T12:00:04+0000"
        },
        {
            "id": "comment-13978102",
            "author": "Dawid Weiss",
            "content": "It would be interesting to see what GetLastError shows, but for this you'd have to access winapi (via jna or something alike). I can't reproduce this locally, unfortunately. ",
            "date": "2014-04-23T12:00:22+0000"
        },
        {
            "id": "comment-13978109",
            "author": "Uwe Schindler",
            "content": "This patch adds the \"failureReason\" like NativeFSLF does. This allows LockFactory throw the real failure after the locking failed. I don't like this code (looks like a hack), but this would make it consistent. ",
            "date": "2014-04-23T12:08:38+0000"
        },
        {
            "id": "comment-13978110",
            "author": "Uwe Schindler",
            "content": "It would be interesting to see what GetLastError shows, but for this you'd have to access winapi (via jna or something alike). I can't reproduce this locally, unfortunately.\n\nVery simple: \"Access denied\". The JNI code transforms GetLastError to a string and throws it as IOException. ",
            "date": "2014-04-23T12:09:46+0000"
        },
        {
            "id": "comment-13978115",
            "author": "Dawid Weiss",
            "content": "Access denied... why?  ",
            "date": "2014-04-23T12:15:30+0000"
        },
        {
            "id": "comment-13978125",
            "author": "Uwe Schindler",
            "content": "Windows responds with this error code whenever a file is opened by another or the same process and you want to change the directory entry/inode/whatever of a file. Quite common, nothing special. ",
            "date": "2014-04-23T12:23:36+0000"
        },
        {
            "id": "comment-13978134",
            "author": "Uwe Schindler",
            "content": "Some comment from StackOverflow: http://stackoverflow.com/questions/4312568/what-causes-writefile-to-return-error-access-denied\n\n\nThere is about a dozen different situations that might result in ERROR_ACCESS_DENIED. Internally, all WriteFile does is call NtWriteFile and map its (somewhat meaningful) NTSTATUS error code into a less meaningful HRESULT.\n\nAmong other things, ERROR_ACCESS_DENIED could indicate that the file is on a network volume and something went wrong with write permissions, or that the file is really not a file but a directory. ",
            "date": "2014-04-23T12:28:01+0000"
        },
        {
            "id": "comment-13978137",
            "author": "Uwe Schindler",
            "content": "In fact this is a major pain and goes back to MS DOS times... If you at some time used the Win32 API, you know that whenever windows does not know how to handle a file it returns ERROR_ACCESS_DENIED on GetLastError (0x5). This is just the error code for, \"everything DOS never supported\". ",
            "date": "2014-04-23T12:30:00+0000"
        },
        {
            "id": "comment-13978151",
            "author": "ASF subversion and git services",
            "content": "Commit 1589394 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1589394 ]\n\nLUCENE-5626: Fix bug in SimpleFSLockFactory's obtain() that sometimes throwed IOException (ERROR_ACESS_DENIED) on Windows if the lock file was created concurrently ",
            "date": "2014-04-23T12:43:39+0000"
        },
        {
            "id": "comment-13978153",
            "author": "ASF subversion and git services",
            "content": "Commit 1589397 from Uwe Schindler in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1589397 ]\n\nMerged revision(s) 1589394 from lucene/dev/trunk:\nLUCENE-5626: Fix bug in SimpleFSLockFactory's obtain() that sometimes throwed IOException (ERROR_ACESS_DENIED) on Windows if the lock file was created concurrently ",
            "date": "2014-04-23T12:44:55+0000"
        },
        {
            "id": "comment-13980032",
            "author": "Uwe Schindler",
            "content": "As we respin 4.8, I will backport this one, too, because otherwise it could happen that somebody (like me) hit this while smoke testing... ",
            "date": "2014-04-24T18:08:47+0000"
        },
        {
            "id": "comment-13980035",
            "author": "ASF subversion and git services",
            "content": "Commit 1589811 from Uwe Schindler in branch 'dev/branches/lucene_solr_4_8'\n[ https://svn.apache.org/r1589811 ]\n\nMerged revision(s) 1589397 from lucene/dev/branches/branch_4x:\nMerged revision(s) 1589394 from lucene/dev/trunk:\nLUCENE-5626: Fix bug in SimpleFSLockFactory's obtain() that sometimes throwed IOException (ERROR_ACESS_DENIED) on Windows if the lock file was created concurrently ",
            "date": "2014-04-24T18:11:24+0000"
        },
        {
            "id": "comment-13980046",
            "author": "ASF subversion and git services",
            "content": "Commit 1589813 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1589813 ]\n\nLUCENE-5626: Move changes entry ",
            "date": "2014-04-24T18:14:45+0000"
        },
        {
            "id": "comment-13980049",
            "author": "ASF subversion and git services",
            "content": "Commit 1589814 from Uwe Schindler in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1589814 ]\n\nMerged revision(s) 1589813 from lucene/dev/trunk:\nLUCENE-5626: Move changes entry ",
            "date": "2014-04-24T18:17:26+0000"
        },
        {
            "id": "comment-13980054",
            "author": "ASF subversion and git services",
            "content": "Commit 1589824 from Uwe Schindler in branch 'dev/branches/lucene_solr_4_8'\n[ https://svn.apache.org/r1589824 ]\n\nMerged revision(s) 1589814 from lucene/dev/branches/branch_4x:\nMerged revision(s) 1589813 from lucene/dev/trunk:\nLUCENE-5626: Move changes entry (merge props only) ",
            "date": "2014-04-24T18:19:18+0000"
        },
        {
            "id": "comment-13980055",
            "author": "Uwe Schindler",
            "content": "Backported to 4.8 for respin. ",
            "date": "2014-04-24T18:19:34+0000"
        },
        {
            "id": "comment-13982561",
            "author": "Uwe Schindler",
            "content": "Close issue after release of 4.8.0 ",
            "date": "2014-04-27T23:25:44+0000"
        }
    ]
}