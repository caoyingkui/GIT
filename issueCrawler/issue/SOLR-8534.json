{
    "id": "SOLR-8534",
    "title": "Add generic support for Collection APIs to be async",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Currently only a handful of Collection API calls support the async parameter. I propose to extended support for async to most APIs.\n\nThe Overseer has a generic support for calls to be async. So we should leverage that and make all commands implemented within the OverseerCollectionMessageHandler to support async",
    "attachments": {
        "SOLR-8534_solrJ.patch": "https://issues.apache.org/jira/secure/attachment/12786891/SOLR-8534_solrJ.patch",
        "SOLR-8534.patch": "https://issues.apache.org/jira/secure/attachment/12781591/SOLR-8534.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-01-11T16:08:37+0000",
            "author": "Varun Thacker",
            "content": "First cut patch which adds support for async calls to the mentioned commands.\n\nAdditionally it makes a few modifications to CollectionAdminRequest which came up while adding async support in SolrJ . I'll look at some of the changes made here more closely for back compat reasons .\n\n\n ",
            "id": "comment-15092192"
        },
        {
            "date": "2016-01-12T14:09:39+0000",
            "author": "Noble Paul",
            "content": "can u make a sub task for the unrelated changes ",
            "id": "comment-15093923"
        },
        {
            "date": "2016-01-15T11:07:31+0000",
            "author": "Varun Thacker",
            "content": "Solr code Changes:\n\n\tCollectionsHandler takes the async param generically. Earlier only few commands took it. The idea is that the OverseerTaskProcessor supports async actions generically. Why limit it only to a few commands.\n\tMerged collectShardResponses and processResponses as they were doing the same thing. collectShardResponses had an abortOnError which logic which I moved to processResponses. I then merged processResponsed and completeAsyncAction into one method . We use processResponses to collect shard responses and should deal with async as well. It would be less error prone that way I feel.\n\tDeleteCollection, CreateShard, DeleteShard implements async\n\tDeleteReplica now reuses the sendShardRequest method instead of doing the same thing there. It also implements async now\n\tThe first call from SplitShard to collectShardResponses is not needed as deleteShard already calls processResponses which processes the shard responses. So I guess this call will always have an empty shard response so it has no effect. The one differences is that deleteShard calls processResponses with abortOnError=true while here the comment says it wants abortOnError=false.\n\tsliceCmd calls sendShardRequest internally instead of doing the same thing there\n\n\n\nQuestion:\nDeleteReplica#collectShardResponses aborts on error because it calls collectShardResponse with abortOnError=false. Is there a reason for delete replica to not abort of the core underneath? Say it fails to unload, we still go ahead and remove the entry from cluster state. So the user can't even retry. Maybe it should abort?\n\nFiled SOLR-8553 and remove the nocommit from the previous patch in reload collection\n\nSolrJ Changes:\n\n\tSolrJ Collection admin requests takes the async param generically. Thus it's added to CollectionSpecificAdminRequest and CollectionShardSpecificAdminRequest . Earlier only certain commands accepted async\n\tA lot of instance variables in the CollectionSpecificAdminequest sub-classes were private or protected. Since most of them were protected I converted the private variables to protected. Maybe they should all be private instead?\n\tCollectionShardAdminRequest#getCommonParams has been deprecated in favour of CollectionShardAdminRequest#getParams to make the API consistent.\n\n\n\nQuestion:\n\n\tA lot of getParams which have been overridden are inconsistant . Some of them do null checks before adding while others don't . Should we make it uniform here by doing null checks everywhere? I guess some of them don't have null checks because they are mandatory? In that case shouldn't we throw an exception if they aren't present?\n\n\n\nHere are the 6 collection api calls which won't support async currently because it's executed in the collections handler and not the overseer.\n\n\tLIST_OP\n\tCLUSTERSTATUS_OP\n\tREBALANCELEADERS_OP\n\tSYNCSHARD_OP\n\tFORCELEADER_OP\n\tCLUSTERPROP_OP\n\n\n\nI filed SOLR-8554 to move REBALANCELEADERS_OP and FORCELEADER_OP to the overseer for the reasons mentioned on the Jira.\n\nSo that leves us with 4 operations not supporting collections api with this patch:\n\n\tLIST_OP\n\tCLUSTERSTATUS_OP\n\tSYNCSHARD_OP\n\tCLUSTERPROP_OP\n\n\n\nCurrently I've run CollectionsAPIAsyncDistributedZkTest several times and it's passed. Haven't run all the tests yet. I'll also add some more async tests ",
            "id": "comment-15101640"
        },
        {
            "date": "2016-01-19T09:05:15+0000",
            "author": "Varun Thacker",
            "content": "Patch which adds some more tests as well as moves the setting of async to the CollectionAdminRequest class in SolrJ so that all APIs can make use of it. ",
            "id": "comment-15106453"
        },
        {
            "date": "2016-01-19T09:29:45+0000",
            "author": "Noble Paul",
            "content": "The patch looks fine +1 ",
            "id": "comment-15106479"
        },
        {
            "date": "2016-01-19T09:35:51+0000",
            "author": "Varun Thacker",
            "content": "Thanks Noble for the review! Tests seem to pass. I'll run it one more time and then commit it.\n\nAfter this there are two tasks that we need to support Async in all API calls -\n\n\tWork on SOLR-8554 . This should be fairly straightforward and I'll get this done after this patch is committed.\n\tPlan on how to support  async to the operations that are currently being handled by the collections handler\n\n ",
            "id": "comment-15106493"
        },
        {
            "date": "2016-01-19T11:09:15+0000",
            "author": "Varun Thacker",
            "content": "Updated patch.\n\nMade some minor change\n\n\n\tRemove unused variable\n\n\n\n\n+    } catch (SolrException e) {\n+      //expected\n+      int x =10;\n+    }\n\n\n\n\n\tReverted wrong change in previous patches for OVERSEERSTATUS_OP which returns a Collections.EMPTY_MAP\n\n\n\n\n     OVERSEERSTATUS_OP(OVERSEERSTATUS) {\n       @Override\n       Map<String, Object> call(SolrQueryRequest req, SolrQueryResponse rsp, CollectionsHandler h) throws Exception {\n-        return new LinkedHashMap<>();\n+        return Collections.EMPTY_MAP;\n       }\n\n\n\n\n\tRemoved final from the setAsyncId signature. Certain operations might need to throw unsupported operation\n\n\n\n\nAll tests pass. I'll commit this shortly ",
            "id": "comment-15106591"
        },
        {
            "date": "2016-01-19T11:32:16+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1725474 from Varun Thacker in branch 'dev/trunk'\n[ https://svn.apache.org/r1725474 ]\n\nSOLR-8534: Add generic support for collection APIs to be async ",
            "id": "comment-15106615"
        },
        {
            "date": "2016-01-21T19:01:01+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1726067 from Varun Thacker in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1726067 ]\n\nSOLR-8534: Add generic support for collection APIs to be async (merged trunk r1725474) ",
            "id": "comment-15111101"
        },
        {
            "date": "2016-01-21T19:02:00+0000",
            "author": "Varun Thacker",
            "content": "Committed to trunk and branch_5x ",
            "id": "comment-15111106"
        },
        {
            "date": "2016-02-05T16:39:06+0000",
            "author": "Anshum Gupta",
            "content": "this has added async support to 'requeststatus' call, which isn't correct. ",
            "id": "comment-15134429"
        },
        {
            "date": "2016-02-05T18:09:14+0000",
            "author": "Varun Thacker",
            "content": "I don't think so. REQUESTSTATUS_OP returns a null  and the check is -\n\n\n      Map<String, Object> props = operation.call(req, rsp, this);\n      String asyncId = req.getParams().get(ASYNC);\n      if (props != null) {\n        if (asyncId != null) {\n          props.put(ASYNC, asyncId);\n        }\n\n\n\nWhich means all calls which are currently being handled by the collections handler directly will return null and the async param won't get applied\n\nAs a future enhancement we need to allow async calls to actions handled by the collections handler as well  ",
            "id": "comment-15134597"
        },
        {
            "date": "2016-02-05T18:35:59+0000",
            "author": "Anshum Gupta",
            "content": "Sorry for not clarifying but I'm actually talking about the SolrJ code. I didn't dig deeper but I could do this:\n\nRequestStatus req = new RequestStatus();\nreq.setAsyncId(\"myid\").process(client);\n\n ",
            "id": "comment-15134653"
        },
        {
            "date": "2016-02-05T18:48:46+0000",
            "author": "Anshum Gupta",
            "content": "Also, this would be a problem with everything that doesn't go to the Overseer. We should introduce a new level in the hierarchy there to selectively support async id. ",
            "id": "comment-15134682"
        },
        {
            "date": "2016-02-05T22:03:39+0000",
            "author": "Varun Thacker",
            "content": "Need to fix SolrJ to not accept async params for commands that don't support async ",
            "id": "comment-15135115"
        },
        {
            "date": "2016-02-08T22:00:59+0000",
            "author": "Varun Thacker",
            "content": "Patch which fixes the SolrJ API's . So Anshum Gupta can you please review it.\n\nI don't like  the extra spaces being added by the patch by Intellij seems to keep adding it back. I'll see what I can do ",
            "id": "comment-15137804"
        },
        {
            "date": "2016-02-08T22:36:45+0000",
            "author": "Anshum Gupta",
            "content": "Thanks Varun Thacker ! I'll take a look in a couple of hours. ",
            "id": "comment-15137889"
        },
        {
            "date": "2016-02-09T16:30:59+0000",
            "author": "Anshum Gupta",
            "content": "Instead of duplicating async code for async why not add another class (AsyncCollectionAdminRequest? ) so that the following classes instead directly extend the async behavior:\n\n\tCollectionAdminRoleRequest\n\tCreateAlias\n\tDeleteAlias\n\tOverseerStatus\n\n\n\nThe rest looks fine to me. ",
            "id": "comment-15139156"
        },
        {
            "date": "2016-02-11T00:01:17+0000",
            "author": "Varun Thacker",
            "content": "Patch which folds in Anshum's changes. I'll commit this soon ",
            "id": "comment-15141983"
        },
        {
            "date": "2016-02-11T01:19:54+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 9985a0966ba33f78b0889b00cd81cd6c5a858111 in lucene-solr's branch refs/heads/master from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9985a09 ]\n\nSOLR-8534: Fix SolrJ APIs to add async support ",
            "id": "comment-15142097"
        },
        {
            "date": "2016-02-11T01:29:31+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 14bd3c4d3859719f8c0d5d0edebbf17f36531b72 in lucene-solr's branch refs/heads/branch_5x from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=14bd3c4 ]\n\nSOLR-8534: Fix SolrJ APIs to add async support ",
            "id": "comment-15142102"
        },
        {
            "date": "2016-02-11T19:03:37+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 13313415a5d975f77a5360239d82a344b9a7aa20 in lucene-solr's branch refs/heads/branch_5_5 from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1331341 ]\n\nSOLR-8534: Fix SolrJ APIs to add async support ",
            "id": "comment-15143282"
        }
    ]
}