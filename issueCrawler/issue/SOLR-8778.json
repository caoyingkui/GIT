{
    "id": "SOLR-8778",
    "title": "Deprecate CSVStrategy's setters, and make its pre-configured strategies immutable",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Resolved",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Removing some deprecated things in CSVStrategy (SOLR-8764) exposed a bug: it's possible to redefine the public static CSVStrategy.{DEFAULT,EXCEL,TDF}_STRATEGY strategies, simply by calling their setters.\n\nRight now that's happening in CSVParserTest.testUnicodeEscape(), where the default unicode escape interpretation is changed from false to true.  And then if that test happens to run before CSVStrategyTest.testSetCSVStrategy(), which tests that the unicode escape interpretation on the default strategy is set to false, then the latter will fail.\n\nExample failures: http://jenkins.thetaphi.de/job/Lucene-Solr-trunk-Linux/16079/ and http://jenkins.thetaphi.de/job/Lucene-Solr-trunk-MacOSX/3126/",
    "attachments": {
        "SOLR-8778.patch": "https://issues.apache.org/jira/secure/attachment/12791189/SOLR-8778.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-03-03T00:12:49+0000",
            "author": "Steve Rowe",
            "content": "I don't think it's useful to have live setters at all on a CSVStrategy instance - they should be removed.\n\nI'll make a patch that:\n\n\tdeprecates the setters (to be removed in 7.0, sigh)\n\tswitches the ctors to not call the setters\n\tswitches all internal Solr usages to treat CSVStrategy instances as if they were immutable (i.e., don't call any setters)\n\tadds a deprecated private CSVStrategy subclass that throws an error from all setters, to be used for the pre-defined static strategies\n\n ",
            "id": "comment-15176777"
        },
        {
            "date": "2016-03-03T15:33:11+0000",
            "author": "Steve Rowe",
            "content": "Patch implementing the idea, additionally adding a ctor param for printerNewline and deprecating clone(), which will also be removed (along with implements Cloneable) in Solr 7, since the sequence (clone(),setXXX(), ...) will no longer be supported - people will just create new immutable instances using one of the ctors.\n\nI guess a builder would make sense here, since there are now 9 params in the full ctor, but I don't plan on doing that.\n\nI'll make a followup issue to remove the deprecated stuff in master.\n\nPrecommit passes, along with the unit tests in the same package.  Running the full Solr test suite now, once done, assuming no failures, I'll commit. ",
            "id": "comment-15177964"
        },
        {
            "date": "2016-03-03T15:46:00+0000",
            "author": "Uwe Schindler",
            "content": "+1 to fix this!\n\nIdeally we should remove our CSV fork from Solr's repository! I tried to do that and cut over to the official release, but I gave up; see SOLR-3213. The commons-csv release is a total rewrite not having any overlap with our early fork in the internal package. The official release does not support most \"hackish\" stuff, introduced to spare allocations (which is no longer an issue in Java 8, we can do new CSV*() as often as we like, Hotspot optimizes that away). I think this stuff also is the reason for this issue, Steve Rowe?\n\nSo we should really upgrade to a better CSV parser (official commons-csv) and remove the \"reuse\" of instances in thread unsafe ways. ",
            "id": "comment-15177978"
        },
        {
            "date": "2016-03-03T15:47:59+0000",
            "author": "Steve Rowe",
            "content": "+1, after the 6.0 release.  I'll commit the patch for now. ",
            "id": "comment-15177985"
        },
        {
            "date": "2016-03-03T15:54:56+0000",
            "author": "ASF subversion and git services",
            "content": "Commit a079ff2528a384468289a8fb80787b418c887496 in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a079ff2 ]\n\nSOLR-8778: Deprecate CSVStrategy's setters, and make its pre-configured strategies immutable ",
            "id": "comment-15177998"
        },
        {
            "date": "2016-03-03T15:57:19+0000",
            "author": "ASF subversion and git services",
            "content": "Commit eb0c3bd90a4feee61b7c9b4c21a78a9f9bace0ff in lucene-solr's branch refs/heads/branch_6x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=eb0c3bd ]\n\nSOLR-8778: Deprecate CSVStrategy's setters, and make its pre-configured strategies immutable ",
            "id": "comment-15178002"
        },
        {
            "date": "2016-03-03T15:57:57+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 8034b5aabd17aa60a37417359841623b07a9e927 in lucene-solr's branch refs/heads/branch_6_0 from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8034b5a ]\n\nSOLR-8778: Deprecate CSVStrategy's setters, and make its pre-configured strategies immutable ",
            "id": "comment-15178004"
        },
        {
            "date": "2016-03-03T19:22:10+0000",
            "author": "Steve Rowe",
            "content": "Resolving as fixed.  I'll hold off creating a JIRA to remove the deprecated stuff in master, since as Uwe says we should instead remove the whole fork. ",
            "id": "comment-15178422"
        },
        {
            "date": "2016-03-03T20:47:55+0000",
            "author": "Uwe Schindler",
            "content": "I'll hold off creating a JIRA to remove the deprecated stuff in master, since as Uwe says we should instead remove the whole fork.\n\nWe should investigate this. Issue with patch is SOLR-3213, but I gave up because to fix this you have to understand the whole CSV handler code (and I was not familar to it when I tried to do this). ",
            "id": "comment-15178593"
        }
    ]
}