{
    "id": "LUCENE-5874",
    "title": "Allow choosing latest default codec (not random)",
    "details": {
        "type": "Test",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved",
        "components": [
            "modules/test-framework"
        ],
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": []
    },
    "description": "Within the Lucene/Solr tests, I can see that we want to widely test the various Lucene Codecs.  And so a test can use a black-list @SuppressCodecs when certain codecs are known not to work with certain tests.  But there is no white-list nor white-list by capabilities (e.g. saying you need term vectors that support payloads).\n\nIn external applications that are using the test infrastructure, this is annoying.  An application generally wants to test with only the codec that ships as default with the particular Lucene version they use.  Now sure, this could be done by using \"-Dtests.codec=Lucene46\" , or having your @BeforeClass explicitly do Codec.setDefault(Codec.forName(\"Lucene46\")).  But in both these cases, you have to call out a specific version; you can't simply ask for whatever the latest is for the Lucene version you're using that's on your classpath.  So what I propose is two things: a whitelist annotation @LuceneTestCase.Codecs and a value \"CURRENT\" (to align with the LUCENE_CURRENT naming convention).  In this way a test could use the latest Codec and not hit a random failure the first time around just because Lucene3x or some other old codec was chosen.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14089352",
            "author": "Robert Muir",
            "content": "Can you comment on the proposal on LUCENE-5858 instead?\n\nI argue there we should remove such ancient codecs from rotation: its annoying because they dont support the full feature set and just causes a bunch of wasted time debugging and false failures.\n\nFurthermore this doesn't really bring any value anymore, it doesnt find bugs in these old codecs, it just brings pain.\nInstead we have a better testing directly against old codecs, we have the mechanism to test these guys directly (various \"unit\" tests like BaseXXXFormatTestCase).\n\nWe could do this before trying to split out a jar, just as a step. ",
            "date": "2014-08-07T15:40:58+0000"
        },
        {
            "id": "comment-14089471",
            "author": "David Smiley",
            "content": "I don't have much of an opinion on LUCENE-5858.  It's somewhat related I guess but doesn't address what I propose in this issue \u2013 the ability for a test (especially a test outside of Lucene/Solr) to simply get whatever the latest Codec/PostingsFormat/DocValues format there is. ",
            "date": "2014-08-07T17:14:08+0000"
        },
        {
            "id": "comment-14089626",
            "author": "Robert Muir",
            "content": "How is it somewhat related? Its completely related if the motivation here is to have all the lucene features: all the other codecs support the full feature set.\n\nIts just the old ones that don't. ",
            "date": "2014-08-07T19:06:47+0000"
        },
        {
            "id": "comment-14090337",
            "author": "David Smiley",
            "content": "I weighed in on LUCENE-5858.\n\nHow is it somewhat related? Its completely related if the motivation here is to have all the lucene features: all the other codecs support the full feature set.\n\nI think one day there's going to be some new feature only supported by a subset of the codecs in the rotation.  If the only tool we have is to say which codecs we don't want, then it's less ideal then expressing what you do want. ",
            "date": "2014-08-08T05:40:43+0000"
        },
        {
            "id": "comment-14090346",
            "author": "Robert Muir",
            "content": "Why woudl there be? Codec is encoding and datastructures. All the current ones support all the current features.\n\nThey arent \"pluggable alternative lucenes\". ",
            "date": "2014-08-08T05:53:40+0000"
        },
        {
            "id": "comment-14090789",
            "author": "David Smiley",
            "content": "I'll comment here when my concern next applies in the future.  It's water under the bridge in the interim once LUCENE-5858 happens. ",
            "date": "2014-08-08T14:13:31+0000"
        }
    ]
}