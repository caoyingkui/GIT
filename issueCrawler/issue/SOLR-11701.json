{
    "id": "SOLR-11701",
    "title": "Upgrade to Tika 1.17 when available",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "7.3"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Kicking off release process for Tika 1.17 in the next few days.  Please let us know if you have any requests.",
    "attachments": {
        "SOLR-11701.patch": "https://issues.apache.org/jira/secure/attachment/12902501/SOLR-11701.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-12-15T02:21:45+0000",
            "content": "GitHub user tballison opened a pull request:\n\n    https://github.com/apache/lucene-solr/pull/291\n\n    jira/solr-11701\n\n    SOLR-11701 upgrade to Tika 1.17\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/tballison/lucene-solr jira/solr-11701\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/lucene-solr/pull/291.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #291\n\n\ncommit c5d4e37de782b2491b3e71cfbb004e5022b55f6b\nAuthor: Karthik Ramachandran <kramachandran@commvault.com>\nDate:   2017-11-14T00:21:44Z\n\n    SOLR-11622: Fix mime4j library dependency for Tika\n\ncommit 40b246b12e8fc6455e023d9d60b8edcfab9b184e\nAuthor: Karthik Ramachandran <kramachandran@commvault.com>\nDate:   2017-12-01T22:12:15Z\n\n    Merge remote-tracking branch 'upstream/master' into jira/solr-11622\n\ncommit 21f2ab483f356fad9b89233e544457a07540afd1\nAuthor: Karthik Ramachandran <kramachandran@commvault.com>\nDate:   2017-12-03T03:50:01Z\n\n    SOLR-11622: Fix bundled mime4j library not sufficient for Tika requirement\n\ncommit a40ca80ed7036732a332f5508589adddde32eb4b\nAuthor: Karthik Ramachandran <kramachandran@commvault.com>\nDate:   2017-12-04T15:33:18Z\n\n    Merge remote-tracking branch 'upstream/master' into jira/solr-11622\n\ncommit a0d6fba8c2e85565a02a8565882a627fa7ceccc4\nAuthor: Karthik Ramachandran <kramachandran@commvault.com>\nDate:   2017-12-14T16:24:45Z\n\n    Merge remote-tracking branch 'upstream/master' into jira/SOLR-11622\n\ncommit c2c885f8a2e2c49fab6f737b13f0ff9a1346714c\nAuthor: Karthik Ramachandran <kramachandran@commvault.com>\nDate:   2017-12-14T20:45:09Z\n\n    SOLR-11622: Fix mime4j library dependency for Tika\n\ncommit e834693a31d0b410a7e0205e1eecda55206a44fa\nAuthor: tballison <tallison@mitre.org>\nDate:   2017-12-15T02:20:51Z\n\n    SOLR-11701 - upgrade to Tika 1.17\n\n ",
            "author": "ASF GitHub Bot",
            "id": "comment-16291932"
        },
        {
            "date": "2017-12-15T02:26:20+0000",
            "content": "I merged [~kramachandran@commvault.com]'s mods and made a few updates for Tika 1.17.\n\nI ran an integration test against 643 files in Apache Tika's unit test docs, and I got the same # of documents indexed in Solr as tika-app.jar parsed without exceptions.\n\n\n    public static void main(String[] args) throws Exception {\n        Path extracts = Paths.get(\"C:\\\\data\\\\tika_unit_tests_extracts\");\n        SolrClient client = new HttpSolrClient.Builder(\"http://localhost:8983/solr/fileupload_passt/\").build();\n        for (File f : extracts.toFile().listFiles()) {\n            try (Reader r = Files.newBufferedReader(f.toPath(), StandardCharsets.UTF_8)) {\n                List<Metadata> metadataList = JsonMetadataList.fromJson(r);\n                String ex = metadataList.get(0).get(TikaCoreProperties.TIKA_META_EXCEPTION_PREFIX + \"runtime\");\n                if (ex == null) {\n                    SolrQuery q = new SolrQuery(\"id: \"+f.getName().replace(\".json\", \"\"));\n                    QueryResponse response = client.query(q);\n                    SolrDocumentList results = response.getResults();\n                    if (results.getNumFound() != 1) {\n                        System.err.println(f.getName() + \" \" + results.getNumFound());\n                    }\n                }\n            }\n        }\n    }\n\n\n\nI did the usual dance:\n\nant clean-jars jar-checksums\nant precommit\n\n\n\nErick Erickson, this should be good to go.   ",
            "author": "Tim Allison",
            "id": "comment-16291935"
        },
        {
            "date": "2017-12-15T02:34:21+0000",
            "content": "OK, probably tomorrow or this weekend. This is the PR #291, right? Plus I should close the other two JIRAS linked too? ",
            "author": "Erick Erickson",
            "id": "comment-16291949"
        },
        {
            "date": "2017-12-15T02:44:39+0000",
            "content": "Yes, and please.  Thank you! ",
            "author": "Tim Allison",
            "id": "comment-16291955"
        },
        {
            "date": "2017-12-15T15:33:59+0000",
            "content": "One more change... I'd like to turn off the missing jar warnings as the default in Solr.  Update to PR coming soon, unless that should be a different issue. ",
            "author": "Tim Allison",
            "id": "comment-16292681"
        },
        {
            "date": "2017-12-15T15:59:00+0000",
            "content": "Tim:\n\nCan't get to JIRA right now (seems to have been happening a lot\nlately). But go ahead and update the PR, I haven't started working on\nthis yet.\n\nErick\n ",
            "author": "Erick Erickson",
            "id": "comment-16292713"
        },
        {
            "date": "2017-12-15T21:12:42+0000",
            "content": "K.  I turned off the warnings with d25349d, and I reran the integration tests. That should be ready to go. ",
            "author": "Tim Allison",
            "id": "comment-16293243"
        },
        {
            "date": "2017-12-16T00:14:39+0000",
            "content": "Double checking since I'm a bit \"git challenged\". That PR has 67 files and 8 commits changed, although most of the file count comes from checksums. Does this sound right?\n\nThe commit history mentions SOLR-11701 and SOLR-11622, but not SOLR-11693, I'm guessing that 11693 is fixed too. ",
            "author": "Erick Erickson",
            "id": "comment-16293441"
        },
        {
            "date": "2017-12-16T01:21:04+0000",
            "content": "Y. Thank you! ",
            "author": "Tim Allison",
            "id": "comment-16293525"
        },
        {
            "date": "2017-12-16T15:58:38+0000",
            "content": "I have a couple of problems. I've attached a patch for comparison in case I messed up the PR (I did mention I'm git-challenged, didn't I?).\n\n1> a precommit error (unused import) in ExtractingRequestHandler.java for import org.apache.tika.mime.MimeTypeException. Simple fix in the attached patch\n\n2> Consistent failure on org.apache.solr.cloud.rule.ImplicitSnitchTest, that's not present on master without the patch. I won't be able to look at this until this evening.\n\nI had a boat-load of trouble pulling the PR, git pull https://github.com/tballison/lucene-solr jira/solr-11701 consistently failed with 401, what eventually worked was \"git pull origin pull/291/head:jira/solr-11701\" but with some merge errors, but they were in the ivy-versions.properties so weren't too complicated. So any tips would be gratefully received \n\nOr just attach a patch I guess, up to you.\n\nWhy the snitch test would be affected is a total mystery but I haven't poked at all on it yet. ",
            "author": "Erick Erickson",
            "id": "comment-16293856"
        },
        {
            "date": "2017-12-16T20:06:35+0000",
            "content": "Away from tools now. Will look on Monday. Thank you! ",
            "author": "Tim Allison",
            "id": "comment-16293930"
        },
        {
            "date": "2017-12-17T03:24:21+0000",
            "content": "OK, I see what's happening here, but not quite sure why or what the proper fix would be.\n\nThere is a lot more data being dumped out as a result of this patch, see below, #######WITHOUT THIS PULL and #####WITH THIS PULL. That results in the framework failing the test because it's too verbose (see ######ERROR).\n\nThis test illustrates how this fails, but be aware that if you just run that test it succeeds (in IntelliJ), you have to run the whole suite.\nImplicitSnitchTest.testGetTags_with_correct_ipv6_format_ip_returns_nothing()\n\nDoing what the error says and adding @TestRuleLimitSysouts.Limit(bytes=20000) causes the test to succeed. I took a quick look at the size of the output file from a test run and there's about a 7K difference with or without this patch (and bumping the limit). Is that sufficient?\n\n#########ERROR\n\njava.lang.AssertionError: The test or suite printed 9268 bytes to stdout and stderr, even though the limit was set to 8192 bytes. Increase the limit with @Limit, ignore it completely with @SuppressSysoutChecks or run with -Dtests.verbose=true\n        at __randomizedtesting.SeedInfo.seed([75A0F6DC6F8B91D6]:0)\n\tat org.apache.lucene.util.TestRuleLimitSysouts.afterIfSuccessful(TestRuleLimitSysouts.java:211)\n\tat com.carrotsearch.randomizedtesting.rules.TestRuleAdapter$1.afterIfSuccessful(TestRuleAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:37)\n\n\n#########WITHOUT THIS PULL\nConnected to the target VM, address: '127.0.0.1:51314', transport: 'socket'\n0    WARN  (TEST-ImplicitSnitchTest.testGetTags_with_correct_ipv6_format_ip_returns_nothing-seed#[F055DBD86566DD29]) [    ] o.a.s.c.c.r.ImplicitSnitch Failed to get IP address from host [[0], with exception [java.net.UnknownHostException: [0: invalid IPv6 address] \n4    WARN  (TEST-ImplicitSnitchTest.testGetTags_with_correct_ipv6_format_ip_returns_nothing-seed#[F055DBD86566DD29]) [    ] o.a.s.c.c.r.ImplicitSnitch Failed to match host IP address from node URL [[0:0:0:0:0:0:0:1]:8983_solr] using regex [(?:https?://)?([^:])\\d)]\nDisconnected from the target VM, address: '127.0.0.1:51314', transport: 'socket'\n\n\n#########WITH THIS PULL (abbreviated)\nobjc[44364]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/bin/java (0x1015234c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x1015af4e0). One of the two will be used. Which one is undefined.\n1    WARN  (TEST-ImplicitSnitchTest.testGetTags_with_correct_ipv6_format_ip_returns_nothing-seed#[75A0F6DC6F8B91D6]) [    ] o.a.s.c.c.r.ImplicitSnitch Failed to get IP address from host [[0], with exception [{}] \njava.net.UnknownHostException: [0: invalid IPv6 address\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1146)\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1126)\n\tat java.net.InetAddress.getByName(InetAddress.java:1076)\n\tat org.apache.solr.common.cloud.rule.ImplicitSnitch.getHostIp(ImplicitSnitch.java:182)\n\tat org.apache.solr.common.cloud.rule.ImplicitSnitch.getIpFragments(ImplicitSnitch.java:169)\n\tat org.apache.solr.common.cloud.rule.ImplicitSnitch.addIpTags(ImplicitSnitch.java:145)\n\tat org.apache.solr.common.cloud.rule.ImplicitSnitch.getTags(ImplicitSnitch.java:73)\n\tat org.apache.solr.cloud.rule.ImplicitSnitchTest.testGetTags_with_correct_ipv6_format_ip_returns_nothing(ImplicitSnitchTest.java:117)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1737)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:934)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:970)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:984)\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36) ",
            "author": "Erick Erickson",
            "id": "comment-16293984"
        },
        {
            "date": "2017-12-17T16:48:04+0000",
            "content": "Ugh. I\u2019m still without keyboard. Can you tell which dependency is now adding more stuff? Will take a look tomorrow. Thank you for making it easy for me to replicate. ",
            "author": "Tim Allison",
            "id": "comment-16294225"
        },
        {
            "date": "2017-12-17T18:23:09+0000",
            "content": "My guess is it's log4j. The line producing the different outputs in IpmlicitSnitch.getHostIp() (see below)\n\nWhat I'm not sure of at all is whether there's really a problem. The total size of the output files in the two cases  produced from ant test differed by 7K (out of 930K or so), so apparently it's just this one log message. Why it would be different is a total mystery. And it can be fixed by the @TestRuleLimitSysouts.Limit(bytes=20000)  annotation. It'd be nice to know why they differ, but perhaps not essential.\n\nAnyway, we can discuss as the week progresses.\n\n  public String getHostIp(String host) {\n    try \n{\n      InetAddress address = InetAddress.getByName(host);\n      return address.getHostAddress();\n    }\n catch (Exception e) {\n\n\tlog.warn(\"Failed to get IP address from host [{}], with exception [{}] \", host, e);*\n      return null;\n    }\n  }\n\n ",
            "author": "Erick Erickson",
            "id": "comment-16294253"
        },
        {
            "date": "2017-12-18T18:42:17+0000",
            "content": "Back to keyboard.  You're right in all of the above. When we bump slf4j from 1.7.7 to 1.7.24, its behavior changes to print out the full stacktrace instead of just the message.\n\nIn org.slf4j.helpers.MessageFormatter in 1.7.7, the exception is counted as one of the members of argArray, and because of the following snippet, the throwableCandidate is nulled out in the returned FormattingTuple\n\n            if (L < argArray.length - 1) {\n                return new FormattingTuple(sbuf.toString(), argArray, throwableCandidate);\n            } else {\n                return new FormattingTuple(sbuf.toString(), argArray, (Throwable)null);\n            }\n\n\n\nIn 1.7.24, there's an added bit of logic before we get to that location that removes the exception from argArray so that it can't get swept into the message.\n\n        Object[] args = argArray;\n        if (throwableCandidate != null) {\n            args = trimmedCopy(argArray);\n        }\n\n\n\nI have in the back of my mind that there was a reason we upgraded slf4j in Tika.  I'll look through our git history to see when/why and if we need to do it for the Solr integration. ",
            "author": "Tim Allison",
            "id": "comment-16295411"
        },
        {
            "date": "2017-12-18T18:50:24+0000",
            "content": "Tim:\n\nI don't see a problem here then, I was mostly worried that this was an inexplicable problem that would pop out other places. We'll upgrade slf4j sometime anyway, so it seems to me that just adding the annotation is an OK fix.\n\nAt most, some of the @Slow or @Nightly or @Weekly tests will error out and need a similar annotation, but we're in the beginning of a new release cycle so there's time for those to flush out.\n\nAny kind of blanket \"don't report the full stack trace\" seems like a bad idea since that's often so necessary to analysis.\n\nIf you find anything out that's germane, let me know otherwise I'll just annotate and commit (probably this evening).\n\nThanks for tracking this down! ",
            "author": "Erick Erickson",
            "id": "comment-16295437"
        },
        {
            "date": "2017-12-18T19:04:45+0000",
            "content": "Sounds good.  Thank you!\n\nOn the git conflict, y, that was caused by the recent addition of opennlp.  I've updated the PR, but there are, of course, already new conflicts!   Let me know if I can do anything to help with that. \n\nOn the 401, I'm sure why that was happening...I'll take a look.\n\nOn the unused imports, ugh.  Thank you. ",
            "author": "Tim Allison",
            "id": "comment-16295483"
        },
        {
            "date": "2017-12-24T05:58:59+0000",
            "content": "OK, I'm having a horrible time merging this. \n\nDid you purposely remove lucene/analysis/opennlp/ivy.xml? \n\nIt's gone from your branch but present in master, and present in the master in your repo, but gone in your branch \n\nOr should I assume that anything having to do with opennlp is something that should be just as it is on master? ",
            "author": "Erick Erickson",
            "id": "comment-16302685"
        },
        {
            "date": "2017-12-25T01:04:37+0000",
            "content": "finally, think I have it all buttoned up. \n\nNOTE: if we start seeing failures because of excessive logging add the annotation mentioned in this JIRA. ",
            "author": "Erick Erickson",
            "id": "comment-16302981"
        },
        {
            "date": "2017-12-25T01:23:22+0000",
            "content": "Commit 7e321d70df302738358266dfcee892dac79d1c0d in lucene-solr's branch refs/heads/master from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7e321d7 ]\n\nSOLR-11701: Upgrade to Tika 1.17 when available ",
            "author": "ASF subversion and git services",
            "id": "comment-16302993"
        },
        {
            "date": "2017-12-25T01:42:35+0000",
            "content": "Commit c548002569f8bd94c6a8386edc85fdcdc55accaf in lucene-solr's branch refs/heads/branch_7x from Erick Erickson\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c548002 ]\n\nSOLR-11701: Upgrade to Tika 1.17 when available\n\n(cherry picked from commit 7e321d7) ",
            "author": "ASF subversion and git services",
            "id": "comment-16303002"
        },
        {
            "date": "2017-12-25T01:44:00+0000",
            "content": "Sorry, forgot to include the comment to close the PR. ",
            "author": "Erick Erickson",
            "id": "comment-16303004"
        },
        {
            "date": "2017-12-25T01:46:30+0000",
            "content": "Thanks all! ",
            "author": "Erick Erickson",
            "id": "comment-16303007"
        },
        {
            "date": "2018-01-03T20:58:19+0000",
            "content": "Finally back to keyboard. Doh, and thank you!!! ",
            "author": "Tim Allison",
            "id": "comment-16310271"
        }
    ]
}