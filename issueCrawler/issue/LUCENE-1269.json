{
    "id": "LUCENE-1269",
    "title": "Analysers and Filters should not be final",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "modules/analysis"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "2.3.1",
        "resolution": "Won't Fix",
        "status": "Closed"
    },
    "description": "I am trying to extend some Lucene Analysers to further improve their behaviour. However, some Analysers and Filters are final classes that I cannot extend (thus resorting to copying the class, which is less than optimal).\n\nAny reason we would want to inhibit people from extending a class like FrenchAnalyzer?\n\nCould me make all Analysers and Filters in the contrib-analysis package non-final?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2008-04-24T00:55:55+0000",
            "content": "Can you submit a patch?  I guess I don't see any reason they need to be final, but I am always paranoid that somebody had to have a reason at the time. ",
            "author": "Grant Ingersoll",
            "id": "comment-12591893"
        },
        {
            "date": "2008-04-27T23:05:54+0000",
            "content": "the general reason why things are final is to protect the lucene devs from needing to maintain compatibility when making perf improvements or adding functionality.\n\nConventional wisdom also says that Analyzers rarely need to be extended because it's generally better for users to compose their own using the underlying TokenFilters \u2013 FrenchAnalyzer is a great example of that.  Anything you might do in a subclass can be done just as easily and with about the same amount of code if you write your own Analyzer that uses the same underlying TokenFilters.\n\nAny class that is currently final can be made non-final, but doing so requires a careful API review to ensure that the public and protected methods are things that we really want to be exposed to (and over ridable by) subclasses.\n\n(going back to the specific example of FrenchAnalyzer: i see no reason not to remove \"final\" .. but i would still encourage people to write their own Analyzer instead of subclassing it) ",
            "author": "Hoss Man",
            "id": "comment-12592693"
        },
        {
            "date": "2009-08-28T08:03:18+0000",
            "content": "See LUCENE-1753 for an explanation, why TokenStreams and TokenFilters should have final implementations of incrementToken/next. ",
            "author": "Uwe Schindler",
            "id": "comment-12748722"
        }
    ]
}