{
    "id": "LUCENE-3006",
    "title": "Javadocs warnings should fail the build",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "3.2,                                            4.0-ALPHA",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "We should fail the build when there are javadocs warnings, as this should not be the Release Manager's job to fix all at once right before the release.\n\nSee http://www.lucidimagination.com/search/document/14bd01e519f39aff/brainstorming_on_improving_the_release_process",
    "attachments": {
        "LUCENE-3006-javadoc-warning-cleanup.patch": "https://issues.apache.org/jira/secure/attachment/12475043/LUCENE-3006-javadoc-warning-cleanup.patch",
        "LUCENE-3006.patch": "https://issues.apache.org/jira/secure/attachment/12474993/LUCENE-3006.patch",
        "LUCENE-3006-modules-javadoc-warning-cleanup.patch": "https://issues.apache.org/jira/secure/attachment/12475245/LUCENE-3006-modules-javadoc-warning-cleanup.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-03-30T16:19:45+0000",
            "content": "+1 ",
            "author": "Michael McCandless",
            "id": "comment-13013530"
        },
        {
            "date": "2011-03-30T16:52:51+0000",
            "content": "One nit - javadocs for solr are not nearly as important as javadocs for lucene in general, and are often just there for expert / internal developers.  But I don't know how onerous it will be to fail on jdoc warning yet... maybe it won't be a big deal. ",
            "author": "Yonik Seeley",
            "id": "comment-13013540"
        },
        {
            "date": "2011-03-30T17:03:54+0000",
            "content": "Doron Cohen briefly enabled fail-on-javadocs-warnings a few years back:\n\nhttps://issues.apache.org/jira/browse/LUCENE-875?focusedCommentId=12493779&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12493779 ",
            "author": "Steve Rowe",
            "id": "comment-13013544"
        },
        {
            "date": "2011-03-30T17:10:44+0000",
            "content": "We should fail the build when there are javadocs warnings\n\nHopefully you mean the build of javadoc should fail?  It seems like one should be able to do a quick change of a method to try something out and still be able to do \"ant test\" to see if it works w/o having to go fix all javadoc references to it first? ",
            "author": "Yonik Seeley",
            "id": "comment-13013548"
        },
        {
            "date": "2011-03-30T18:57:19+0000",
            "content": "Build hook in to javadoc.  Doesn't fix the warnings, which need to be fixed. ",
            "author": "Grant Ingersoll",
            "id": "comment-13013584"
        },
        {
            "date": "2011-03-30T21:37:06+0000",
            "content": "Adds a property to only fail if failonjavadocwarning is true (which is the default setting). ",
            "author": "Grant Ingersoll",
            "id": "comment-13013676"
        },
        {
            "date": "2011-03-30T21:37:53+0000",
            "content": "I think this is ready to go, but still want to test to make sure contribs are building correctly.  Also, committing it will break the build, as we have warnings on trunk! ",
            "author": "Grant Ingersoll",
            "id": "comment-13013678"
        },
        {
            "date": "2011-03-31T00:08:47+0000",
            "content": "I'm working on cleaning up javadoc warnings on trunk, and found a longstanding Sun javadoc bug that is hit by the javadoc on the FieldInfos no-arg constructor:\n\n\n/**\n  * ...\n  * Note: this ctor should not be used during indexing use\n  * {@link FieldInfos#FieldInfos(FieldInfos)} or\n  * {@link FieldInfos#FieldInfos(FieldNumberBiMap)} instead.\n  */\n\n\n\nJavadoc complains that it can't find the second linked-to constructor.  \n\nThere are two problems: first, there really is no constructor with that prototype - it should have a second parameter of type SegmentCodecsBuilder; and second, adding the SegmentCodecsBuilder parameter doesn't make the warning go away, because of this bug: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4464323.\n\nSpelling out the SegmentCodecsBuilder parameter's full package works around this bug under both Oracle JDK 1.5_0_22 and 1.6.0_21. ",
            "author": "Steve Rowe",
            "id": "comment-13013753"
        },
        {
            "date": "2011-03-31T00:48:40+0000",
            "content": "This patch eliminates javadoc warnings on trunk under Sun JDK 1.5.0_22 and 1.6.0_21 for Lucene, and for just 1.6.0_21 on Solr. ",
            "author": "Steve Rowe",
            "id": "comment-13013767"
        },
        {
            "date": "2011-03-31T15:19:45+0000",
            "content": "This patch eliminates javadoc warnings on trunk under Sun JDK 1.5.0_22 and 1.6.0_21 for Lucene, and for just 1.6.0_21 on Solr.\n\nCommitted:\n\n\tr1087319: trunk\n\tr1087329: branch_3x\n\n\n\nOn branch_3x, under both Sun JDK 1.5.0_22 and 1.6.0_21, there are no javadoc warnings for either Solr or Lucene. ",
            "author": "Steve Rowe",
            "id": "comment-13014011"
        },
        {
            "date": "2011-03-31T19:57:04+0000",
            "content": "Here's the patch I just committed. ",
            "author": "Grant Ingersoll",
            "id": "comment-13014173"
        },
        {
            "date": "2011-04-01T17:41:28+0000",
            "content": "Patch annihilating modules/ javadoc warnings (in analysis/icu/ and benchmark/).\n\nCommitting shortly. ",
            "author": "Steve Rowe",
            "id": "comment-13014765"
        },
        {
            "date": "2011-04-01T17:43:53+0000",
            "content": "Patch annihilating modules/ javadoc warnings (in analysis/icu/ and benchmark/).\n\nCommitted on trunk r1087830. ",
            "author": "Steve Rowe",
            "id": "comment-13014767"
        }
    ]
}