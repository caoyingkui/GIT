{
    "id": "LUCENE-8251",
    "title": "Test failure, geo3d complex polygons",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "master (8.0)",
        "status": "Closed",
        "type": "Bug",
        "components": [
            "modules/spatial3d"
        ],
        "fix_versions": [
            "6.7",
            "7.4",
            "master (8.0)"
        ]
    },
    "description": "Error Message:\n Standard polygon: GeoCompositePolygon: {[GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=[[lat=-0.12884119701201008, lon=-1.157781399251359([X=0.3984689569776051, Y=-0.9092889699600808, Z=-0.1286216320286114])], [lat=-0.8977173781916888, lon=2.3672262552845993([X=-0.44522608342175374, Y=0.435509619867484, Z=-0.7811731004355484])], [lat=-1.0294747773716673, lon=1.97235866074843([X=-0.20112459723348416, Y=0.47363995489643546, Z=-0.8558716366345036])]], internalEdges={2}}, GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=[[lat=-0.12884119701201008, lon=-1.157781399251359([X=0.3984689569776051, Y=-0.9092889699600808, Z=-0.1286216320286114])], [lat=-1.0294747773716673, lon=1.97235866074843([X=-0.20112459723348416, Y=0.47363995489643546, Z=-0.8558716366345036])], [lat=-6.4E-323, lon=0.0([X=1.0011188539924791, Y=0.0, Z=-6.4E-323])]], internalEdges={0}}]}  Large polygon: GeoComplexPolygon: {planetmodel=PlanetModel.WGS84, number of shapes=1, address=814a2a8c, testPoint=[lat=-1.1675693914784415, lon=-1.850615018297906E-4([X=0.39171238223740806, Y=-7.249088256972983E-5, Z=-0.9182146655290553])], testPointInSet=true, shapes={ {[lat=-0.12884119701201008, lon=-1.157781399251359([X=0.3984689569776051, Y=-0.9092889699600808, Z=-0.1286216320286114])], [lat=-0.8977173781916888, lon=2.3672262552845993([X=-0.44522608342175374, Y=0.435509619867484, Z=-0.7811731004355484])], [lat=-1.0294747773716673, lon=1.97235866074843([X=-0.20112459723348416, Y=0.47363995489643546, Z=-0.8558716366345036])], [lat=-6.4E-323, lon=0.0([X=1.0011188539924791, Y=0.0, Z=-6.4E-323])]}}  Point: [lat=3.5E-323, lon=9.046923007656787E-5([X=1.0011188498955597, Y=9.057045181228716E-5, Z=3.5E-323])]  WKT: POLYGON((135.63207358036593 -51.43541696593334,113.00782694696038 -58.984559858566556,0.0 -3.68E-321,-66.33598777585381 -7.382056816201731,135.63207358036593 -51.43541696593334))  WKT: POINT(0.005183505059185348 1.98E-321) normal polygon: false large polygon: true\n\nStack Trace:\njava.lang.AssertionError:\nStandard polygon: GeoCompositePolygon: {[GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=[[lat=-0.12884119701201008, lon=-1.157781399251359([X=0.3984689569776051, Y=-0.9092889699600808, Z=-0.1286216320286114])], [lat=-0.8977173781916888, lon=2.3672262552845993([X=-0.44522608342175374, Y=0.435509619867484, Z=-0.7811731004355484])], [lat=-1.0294747773716673, lon=1.97235866074843([X=-0.20112459723348416, Y=0.47363995489643546, Z=-0.8558716366345036])]], internalEdges={2}}, GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=[[lat=-0.12884119701201008, lon=-1.157781399251359([X=0.3984689569776051, Y=-0.9092889699600808, Z=-0.1286216320286114])], [lat=-1.0294747773716673, lon=1.97235866074843([X=-0.20112459723348416, Y=0.47363995489643546, Z=-0.8558716366345036])], [lat=-6.4E-323, lon=0.0([X=1.0011188539924791, Y=0.0, Z=-6.4E-323])]], internalEdges={0}}]}\n\nLarge polygon: GeoComplexPolygon: {planetmodel=PlanetModel.WGS84, number of shapes=1, address=814a2a8c, testPoint=[lat=-1.1675693914784415, lon=-1.850615018297906E-4([X=0.39171238223740806, Y=-7.249088256972983E-5, Z=-0.9182146655290553])], testPointInSet=true, shapes={ {[lat=-0.12884119701201008, lon=-1.157781399251359([X=0.3984689569776051, Y=-0.9092889699600808, Z=-0.1286216320286114])], [lat=-0.8977173781916888, lon=2.3672262552845993([X=-0.44522608342175374, Y=0.435509619867484, Z=-0.7811731004355484])], [lat=-1.0294747773716673, lon=1.97235866074843([X=-0.20112459723348416, Y=0.47363995489643546, Z=-0.8558716366345036])], [lat=-6.4E-323, lon=0.0([X=1.0011188539924791, Y=0.0, Z=-6.4E-323])]}}\n\nPoint: [lat=3.5E-323, lon=9.046923007656787E-5([X=1.0011188498955597, Y=9.057045181228716E-5, Z=3.5E-323])]\n\nWKT: POLYGON((135.63207358036593 -51.43541696593334,113.00782694696038 -58.984559858566556,0.0 -3.68E-321,-66.33598777585381 -7.382056816201731,135.63207358036593 -51.43541696593334))\n\nWKT: POINT(0.005183505059185348 1.98E-321)\nnormal polygon: false\nlarge polygon: true\n\n        at __randomizedtesting.SeedInfo.seed([C1E5FF7FBC7AC980:47CE8D3C5A69DD5B]:0)\n        at org.junit.Assert.fail(Assert.java:93)\n        at org.junit.Assert.assertTrue(Assert.java:43)\n        at org.apache.lucene.spatial3d.geom.RandomGeoPolygonTest.testComparePolygons(RandomGeoPolygonTest.java:179)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:498)\n        at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1737)\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:934)\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:970)\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:984)\n        at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\n        at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\n        at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\n        at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\n        at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:368)\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:817)\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:468)\n        at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:943)\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:829)\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:879)\n        at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:890)\n        at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n        at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\n        at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\n        at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n        at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\n        at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\n        at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\n        at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\n        at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n        at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:368)\n        at java.lang.Thread.run(Thread.java:748)",
    "attachments": {
        "LUCENE-8251.jpg": "https://issues.apache.org/jira/secure/attachment/12918928/LUCENE-8251.jpg"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16436758",
            "date": "2018-04-13T03:47:04+0000",
            "content": "Commit e8f1649ab4f5f79cd1dc6b7b4f26c5f6ec133bc5 in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e8f1649 ]\n\nLUCENE-8251: Annotate occasionally failing test with AwaitsFix ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16436759",
            "date": "2018-04-13T03:47:31+0000",
            "content": "Commit e541ed89f3e2968e0a4497035aaa42614d050e8d in lucene-solr's branch refs/heads/branch_7x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e541ed8 ]\n\nLUCENE-8251: Annotate occasionally failing test with AwaitsFix ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16436760",
            "date": "2018-04-13T03:48:06+0000",
            "content": "Commit edcecb2f42c4cd4b09b13f6bc35828551e86e32f in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=edcecb2 ]\n\nLUCENE-8251: Annotate occasionally failing test with AwaitsFix ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16436772",
            "date": "2018-04-13T04:12:46+0000",
            "content": "I created an explicit test to cover this failure, but it looks like yesterday's commit already addressed it.\nWill commit the explicit test anyway. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16436792",
            "date": "2018-04-13T04:34:01+0000",
            "content": "Commit f41e7c4da7e5386541c9ad2cf0cf6a98d0d41c54 in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f41e7c4 ]\n\nLUCENE-8251: Add an explicit test case to cover the discovered failure.  But it appears to be already fixed. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16436793",
            "date": "2018-04-13T04:34:33+0000",
            "content": "Commit 21f39627624fe4d2b80ca85fae8fdf2b26fd70b6 in lucene-solr's branch refs/heads/branch_7x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=21f3962 ]\n\nLUCENE-8251: Add an explicit test case to cover the discovered failure.  But it appears to be already fixed. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16436794",
            "date": "2018-04-13T04:35:07+0000",
            "content": "Commit 8613627968024e3f4e3e6e1af8d0af8f90afee94 in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8613627 ]\n\nLUCENE-8251: Add an explicit test case to cover the discovered failure.  But it appears to be already fixed. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16437071",
            "date": "2018-04-13T09:34:27+0000",
            "content": "The test needs the planet model WGS84, then you get the error. ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16437120",
            "date": "2018-04-13T10:08:56+0000",
            "content": "Here's the debug output:\n\n\n   [junit4]   1> The following edges should intersect the travel/testpoint planes:\n   [junit4]   1> Travel plane: [lat=-1.0294747773716673, lon=1.97235866074843([X=-0.20112459723348416, Y=0.47363995489643546, Z=-0.8558716366345036])] -> [lat=-6.4E-323, lon=0.0([X=1.0011188539924791, Y=0.0, Z=-6.4E-323])]\n   [junit4]   1>\n   [junit4]   1> Considering edge [lat=-0.12884119701201008, lon=-1.1577813992513593([X=0.39846895697760487, Y=-0.9092889699600809, Z=-0.1286216320286114])] -> [lat=-0.8977173781916888, lon=2.3672262552845993([X=-0.44522608342175374, Y=0.435509619\n867484, Z=-0.7811731004355484])]\n   [junit4]   1>\n   [junit4]   1> Considering edge [lat=-6.4E-323, lon=0.0([X=1.0011188539924791, Y=0.0, Z=-6.4E-323])] -> [lat=-0.12884119701201008, lon=-1.1577813992513593([X=0.39846895697760487, Y=-0.9092889699600809, Z=-0.1286216320286114])]\n   [junit4]   1>\n   [junit4]   1> The following edges should intersect the travel/testpoint planes:\n   [junit4]   1> Travel plane: [lat=-1.0294747773716673, lon=1.97235866074843([X=-0.20112459723348416, Y=0.47363995489643546, Z=-0.8558716366345036])] -> [lat=-6.4E-323, lon=0.0([X=1.0011188539924791, Y=0.0, Z=-6.4E-323])]\n   [junit4]   1>\n   [junit4]   1> Considering edge [lat=-1.0294747773716673, lon=1.97235866074843([X=-0.20112459723348416, Y=0.47363995489643546, Z=-0.8558716366345036])] -> [lat=-6.4E-323, lon=0.0([X=1.0011188539924791, Y=0.0, Z=-6.4E-323])]\n   [junit4]   1>  Edge intersects travel or testPoint plane\n   [junit4]   1>   Assessing travel envelope intersection point [X=1.0011188498945593, Y=4.374699550797305E-5, Z=-7.90512123316076E-5]...\n   [junit4]   1>    Adjoining point [X=1.0011188498945593, Y=4.374699502377152E-5, Z=-7.905121145665111E-5] (dist = 9.999999942608793E-13) is not within\n   [junit4]   1>    Adjoining point [X=1.0011188498945591, Y=4.3746995992174576E-5, Z=-7.905121320656408E-5] (dist = 1.0000000037738338E-12) is not within\n   [junit4]   1>   Assessing travel envelope intersection point [X=1.00111884989656, Y=4.3736315090256196E-5, Z=-7.903191272122474E-5]...\n   [junit4]   1>    Adjoining point [X=1.00111884989656, Y=4.3736314606054664E-5, Z=-7.903191184626825E-5] (dist = 9.999999942608793E-13) is not within\n   [junit4]   1>    Adjoining point [X=1.0011188498965597, Y=4.373631557445772E-5, Z=-7.903191359618122E-5] (dist = 1.0000000037738338E-12) is not within\n\n\n\nSo, only one edge actually intersects the travel planes, but another edge is considered because it has an endpoint on the travel plane.  But that edge does not generate any crossings with the boundary plane at all!  And the first edge generates no crossings either.\n\nIgnacio Vera, I could use a graphic to show me why this is wrong. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16437144",
            "date": "2018-04-13T10:27:13+0000",
            "content": "A bit more difficult to visualize. It seems the intersection point is close to one polygon point from the inside. Then we have a small travel plane that crosses one edge near that point. ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16437154",
            "date": "2018-04-13T10:32:15+0000",
            "content": "I'm still not certain what I'm looking at here.\nWhich planes are the travel planes?  The green and the short one that appears blue? ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16437159",
            "date": "2018-04-13T10:38:07+0000",
            "content": "Yes, the green one goes from test point to intersection point. And the very short one goes from the intersection point to the check point.\n\n\u00a0\n\n\u00a0 ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16437169",
            "date": "2018-04-13T10:49:30+0000",
            "content": "Ok, the travel plane is really tiny and it's all the way out at the maximum X pole:\n\n\n   [junit4]   1> TestPoint plane: [lat=-1.1675693914784415, lon=-1.8506150182993802E-4([X=0.39171238223740795, Y=-7.249088256978756E-5, Z=-0.9182146655290553])] -> [X=1.0011188498955597, Y=-7.249088256978756E-5, Z=-5.4114167758588356E-5]\n   [junit4]   1> Travel plane: [1.0011188498955597,9.057045181228716E-5,3.5E-323] -> [X=1.0011188498955597, Y=-7.249088256978756E-5, Z=-5.4114167758588356E-5]\n\n\n\nThat's the plane that is being crossed.  I bet the problem is that one of the envelope planes only intersects the world at the intersection point region, but doesn't intersect the world where the edge would cross it.\n\nHmm, not sure what to do here.  Obviously the choice of travel planes could be better and that would fix the problem, but can we guarantee that there's always a better choice of travel planes?\n ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16437180",
            "date": "2018-04-13T11:01:42+0000",
            "content": "For the single-plane cases, we're required to be able to use such runt end-of-the-world planes, unless we detect that both the start and the end are the same point and give up right away.  I had always assumed that if we were in this situation, we'd avoid it because the plane would be so short as to be degenerate.  But in this case, it's not so.\n\nI'm also surprised we were about to compute inside/inside and outside/outside intersection points for this situation.  It must have been barely possible. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16437187",
            "date": "2018-04-13T11:08:27+0000",
            "content": "It works on the case of the SPHERE so, is the ellipsoid shape playing a role here? ",
            "author": "Ignacio Vera"
        },
        {
            "id": "comment-16437196",
            "date": "2018-04-13T11:16:29+0000",
            "content": "\n   [junit4]   1> Test point distance to intersection point: 1.1019959350649466\n   [junit4]   1> Check point distance to intersection point: 1.7180611724460635E-4\n\n\n\nSo the check point segment is of enough length to be a concern, but the envelope plane for it is too near to being off the world to be intersected with. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16437273",
            "date": "2018-04-13T12:54:57+0000",
            "content": "Ignacio Vera, yes, the spheroid plays a role, because it makes the maximum workable travel plane length at the x and y poles that much shorter. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16437275",
            "date": "2018-04-13T12:57:00+0000",
            "content": "Unfortunately I need to deal with some other burning issues at the moment, and I have no idea how to fix this particular problem either, so I'm going to have to put it on hold until I think of something workable.\n\nNext steps: First, validate the picture that the reason that the intersections aren't getting detected is because they'd be off the ellipsoid.  This can be done in theory by seeing if the Plane.findIntersections code finds zero solutions for the intersection in question.  I bet it does, and that would confirm the picture.\n ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16437306",
            "date": "2018-04-13T13:35:35+0000",
            "content": "Here's a similar case:\n\n\n   [junit4]    > Point: [lat=3.310332671314249E-4, lon=-3.0E-323([X=1.0011187987699837, Y=-3.0E-323, Z=3.314036388489196E-4])]\n   [junit4]    > WKT: POLYGON((0.2605244736823189 -4.368136428487497,0.0 -4.283522745751538E-243,-0.05551266494188662 0.08658374814251642,-0.23216835996485705 -0.8093540467004184,0.2605244736823189 -4.368136428487497))\n   [junit4]    > WKT: POINT(-1.7E-321 0.018966809085057403)\n\n\n ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16437313",
            "date": "2018-04-13T13:40:41+0000",
            "content": "Commit 79350bd4dd31a67c05f08e6484561c38494d4773 in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=79350bd ]\n\nLUCENE-8251: Add AwaitsFix for the tests that this issue covers. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16437314",
            "date": "2018-04-13T13:41:15+0000",
            "content": "Commit 5d8b87e221263fcf6bc0b4554b61ae43c074a590 in lucene-solr's branch refs/heads/branch_7x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5d8b87e ]\n\nLUCENE-8251: Add AwaitsFix for the tests that this issue covers. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16437315",
            "date": "2018-04-13T13:41:41+0000",
            "content": "Commit a97738a659aebaae153168b7fdddee5709f2abc2 in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a97738a ]\n\nLUCENE-8251: Add AwaitsFix for the tests that this issue covers. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16437407",
            "date": "2018-04-13T15:02:50+0000",
            "content": "Things have quieted down enough so I can look at this some more.\n\nThe first thing I noted was that we've got detected intersections with both inner and outer envelopes for the travel plane.  But they aren't discovered to be crossings \u2013 because when you start at the intersection point and move along the edge a small distance either way, you're not inside the actual travel plane zone:\n\n\n   [junit4]   1> TestPoint plane: [lat=-1.1675693914784415, lon=-1.8506150182993802E-4([X=0.39171238223740795, Y=-7.249088256978756E-5, Z=-0.9182146655290553])] -> [X=1.0011188498955597, Y=-7.249088256978756E-5, Z=-5.4114167758588356E-5]\n   [junit4]   1> Travel plane: [1.0011188498955597,9.057045181228716E-5,3.5E-323] -> [X=1.0011188498955597, Y=-7.249088256978756E-5, Z=-5.4114167758588356E-5]\n   [junit4]   1>\n   [junit4]   1> Considering edge [lat=-0.12884119701201008, lon=-1.1577813992513593([X=0.39846895697760487, Y=-0.9092889699600809, Z=-0.1286216320286114])] -> [lat=-0.8977173781916888, lon=2.3672262552845993([X=-0.44522608342175374, Y=0.435509619\n867484, Z=-0.7811731004355484])]\n   [junit4]   1>\n   [junit4]   1> Considering edge [lat=-6.4E-323, lon=0.0([X=1.0011188539924791, Y=0.0, Z=-6.4E-323])] -> [lat=-0.12884119701201008, lon=-1.1577813992513593([X=0.39846895697760487, Y=-0.9092889699600809, Z=-0.1286216320286114])]\n   [junit4]   1>\n   [junit4]   1> Considering edge [lat=-1.0294747773716673, lon=1.97235866074843([X=-0.20112459723348416, Y=0.47363995489643546, Z=-0.8558716366345036])] -> [lat=-6.4E-323, lon=0.0([X=1.0011188539924791, Y=0.0, Z=-6.4E-323])]\n   [junit4]   1>  Edge intersects travel or testPoint plane\n   [junit4]   1>  Assessing inner crossings...\n   [junit4]   1>   Assessing travel envelope intersection point [X=1.0011188498945593, Y=4.374699550797305E-5, Z=-7.90512123316076E-5]...\n   [junit4]   1>    Adjoining point [X=1.0011188498945593, Y=4.374699502377152E-5, Z=-7.905121145665111E-5] (dist = 9.999999942608793E-13) is not within\n   [junit4]   1>    Adjoining point [X=1.0011188498945591, Y=4.3746995992174576E-5, Z=-7.905121320656408E-5] (dist = 1.0000000037738338E-12) is not within\n   [junit4]   1>  Assessing outer crossings...\n   [junit4]   1>   Assessing travel envelope intersection point [X=1.00111884989656, Y=4.3736315090256196E-5, Z=-7.903191272122474E-5]...\n   [junit4]   1>    Adjoining point [X=1.00111884989656, Y=4.3736314606054664E-5, Z=-7.903191184626825E-5] (dist = 9.999999942608793E-13) is not within\n   [junit4]   1>    Adjoining point [X=1.0011188498965597, Y=4.373631557445772E-5, Z=-7.903191359618122E-5] (dist = 1.0000000037738338E-12) is not within\n\n\n\nIf the edge plane were parallel, or nearly parallel, to the envelope plane, that might explain it \u2013 and I think that may actually be the case. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16437432",
            "date": "2018-04-13T15:18:31+0000",
            "content": "Confirmed that the envelope plane and the edge plane are nearly parallel.  Adjoining points on the edge plane that are ~1e-12 away from the intersection point are still just about the same distance from the travel plane as before:\n\n\n   [junit4]   1> TestPoint plane: [lat=-1.1675693914784415, lon=-1.8506150182993802E-4([X=0.39171238223740795, Y=-7.249088256978756E-5, Z=-0.9182146655290553])] -> [X=1.0011188498955597, Y=-7.249088256978756E-5, Z=-5.4114167758588356E-5]\n   [junit4]   1> Travel plane: [1.0011188498955597,9.057045181228716E-5,3.5E-323] -> [X=1.0011188498955597, Y=-7.249088256978756E-5, Z=-5.4114167758588356E-5]\n   [junit4]   1>\n   [junit4]   1> Considering edge [lat=-0.12884119701201008, lon=-1.1577813992513593([X=0.39846895697760487, Y=-0.9092889699600809, Z=-0.1286216320286114])] -> [lat=-0.8977173781916888, lon=2.3672262552845993([X=-0.44522608342175374, Y=0.435509619\n867484, Z=-0.7811731004355484])]\n   [junit4]   1>\n   [junit4]   1> Considering edge [lat=-6.4E-323, lon=0.0([X=1.0011188539924791, Y=0.0, Z=-6.4E-323])] -> [lat=-0.12884119701201008, lon=-1.1577813992513593([X=0.39846895697760487, Y=-0.9092889699600809, Z=-0.1286216320286114])]\n   [junit4]   1>\n   [junit4]   1> Considering edge [lat=-1.0294747773716673, lon=1.97235866074843([X=-0.20112459723348416, Y=0.47363995489643546, Z=-0.8558716366345036])] -> [lat=-6.4E-323, lon=0.0([X=1.0011188539924791, Y=0.0, Z=-6.4E-323])]\n   [junit4]   1>  Edge intersects travel or testPoint plane\n   [junit4]   1>  Assessing inner crossings...\n   [junit4]   1>   Assessing travel envelope intersection point [X=1.0011188498945593, Y=4.374699550797305E-5, Z=-7.90512123316076E-5], travelPlane distance=-1.000310945187266E-12...\n   [junit4]   1>    Adjoining point [X=1.0011188498945593, Y=4.374699502377152E-5, Z=-7.905121145665111E-5] (intersection dist = 9.999999942608793E-13; travelPlane dist=-1.000310945187266E-12; testPointPlane dist=1.1623787759355908E-4) is not within\n   [junit4]   1>    Adjoining point [X=1.0011188498945591, Y=4.3746995992174576E-5, Z=-7.905121320656408E-5] (intersection dist = 1.0000000037738338E-12; travelPlane dist=-1.000532989792191E-12; testPointPlane dist=1.1623787856196213E-4) is not within\n   [junit4]   1>  Assessing outer crossings...\n   [junit4]   1>   Assessing travel envelope intersection point [X=1.00111884989656, Y=4.3736315090256196E-5, Z=-7.903191272122474E-5], travelPlane distance=1.000310945187266E-12...\n   [junit4]   1>    Adjoining point [X=1.00111884989656, Y=4.3736314606054664E-5, Z=-7.903191184626825E-5] (intersection dist = 9.999999942608793E-13; travelPlane dist=1.000310945187266E-12; testPointPlane dist=1.1622719717584222E-4) is not within\n\n   [junit4]   1>    Adjoining point [X=1.0011188498965597, Y=4.373631557445772E-5, Z=-7.903191359618122E-5] (intersection dist = 1.0000000037738338E-12; travelPlane dist=1.000088900582341E-12; testPointPlane dist=1.1622719814424528E-4) is not within\n\n\n ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16437436",
            "date": "2018-04-13T15:24:18+0000",
            "content": "We should be able to detect this situation with adjoining points, by seeing if the adjoining points are on the very same envelope plane we computed intersection with.  That might lead is to be able to increase the separation of adjoining points until we're finally able to detect crossings.\n\nThe problem with that approach is there's no guarantee that we will ever leave the envelope plane.  In the case of essential parallelism, though, it may be safe to count it as a crossing. ",
            "author": "Karl Wright"
        },
        {
            "id": "comment-16437531",
            "date": "2018-04-13T16:28:17+0000",
            "content": "Commit d78c354bef3dd451ab584c7fe71bb614696d7fd6 in lucene-solr's branch refs/heads/master from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d78c354 ]\n\nLUCENE-8251: Handle near-parallelness with envelope plane by a progressive adjoining point distance increment, up to 100 iterations.  Then, give up and assume a crossing. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16437532",
            "date": "2018-04-13T16:28:52+0000",
            "content": "Commit 368bdf36c117dafb6c793d787f1863e219352c31 in lucene-solr's branch refs/heads/branch_7x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=368bdf3 ]\n\nLUCENE-8251: Handle near-parallelness with envelope plane by a progressive adjoining point distance increment, up to 100 iterations.  Then, give up and assume a crossing. ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16437534",
            "date": "2018-04-13T16:29:26+0000",
            "content": "Commit 2863fce4e149f2086347f3956717794a252591aa in lucene-solr's branch refs/heads/branch_6x from Karl Wright\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2863fce ]\n\nLUCENE-8251: Handle near-parallelness with envelope plane by a progressive adjoining point distance increment, up to 100 iterations.  Then, give up and assume a crossing. ",
            "author": "ASF subversion and git services"
        }
    ]
}