{
    "id": "LUCENE-7031",
    "title": "Prepared query for making fast join on different entity (reader /container)",
    "details": {
        "resolution": "Unresolved",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [],
        "priority": "Major",
        "status": "Open",
        "type": "Improvement"
    },
    "description": "Considering a Entity item\n{title}\nand a entity ACL\n{item,user,permissions[]}\n\nthe relationship is ACL -->0-n-->Item\n search1:lucene:title:t*\n search2:lucene :user:john and permissions:read\n search1 on indexreader1, search2 on indexreader2\nusing prepared query on search2 , i can write on entity1 a special field tellling if search2(user) = true or false .\nMaking this observation i can also extends it for creating a bit mask considering several possibilities.\nFor example\nsearch2:lucene :user:john and permissions:\n{read,write,delete}\ncontains 3 bits for every instance user associated to entity1.\nSo you can index (user|bitmask) , keeps all the infos for data retrievel. \nIf a index is a bytearray stream to scanning , why not insert a sub stream inside?\nin this way lucene queries continues to be fast but it permits to make associations for different entities /readers/containers.\nImage for example that very entity/reader is related to specific table on database or in different persistent repositories. \n\n Associations in computer science are too much important , it is necessary to find a general solution for indexing them",
    "attachments": {},
    "issue_links": {},
    "comments": []
}