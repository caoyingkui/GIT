{
    "id": "SOLR-6446",
    "title": "Large spatial query problem",
    "details": {
        "affect_versions": "4.9",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "spatial"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Not A Problem"
    },
    "description": "We are currently upgrading from Solr 4.1 to 4.9 and have observed differences in spatial query results.\n\nHere are the relevant schema details:\n\n<field name=\"geo\"  type=\"location_rpt\"  indexed=\"true\" stored=\"false\"/>\n<fieldType name=\"location_rpt\" class=\"solr.SpatialRecursivePrefixTreeFieldType\" spatialContextFactory=\"com.spatial4j.core.context.jts.JtsSpatialContextFactory\" geo=\"true\" distErrPct=\"0.1\" maxDistErr=\"0.000009\" units=\"degrees\"/>\n\nJTS v1.10 jar has been added to the classpath.\n\nA simple test case that shows the problem:\nI have 3 documents indexed each with one of the following polygon values set for the \"geo\" field.\n\nPOLYGON ((-0.70312499989791 8.0592296260867, 13.359374998139 8.0592296260867, 13.359374998139 21.616579333871, -0.70312499989791 21.616579333871, -0.70312499989791 8.0592296260867))\nPOLYGON ((120.58593748322 13.923403895824, 132.53906248155 13.923403895824, 132.53906248155 25.165173365383, 120.58593748322 25.165173365383, 120.58593748322 13.923403895824))\nPOLYGON ((-133.24218748145 0.35156029394437, -121.99218748302 0.35156029394437, -121.99218748302 11.523087505283, -133.24218748145 11.523087505283, -133.24218748145 0.35156029394437))\n\nWhen I execute this query, I get only 2 results. With this exact same configuration and data in Solr 4.1, the query yields all 3 results.\n\ngeo:\"Intersects(POLYGON((-126 -14, 128 -14, 128 35, -126 35, -126 -14)))\"\n\nMy assumption is that the query now goes the opposite way around the earth. This seems to be confirmed by the following query that spans the date line. I get the same 2 results.\n\ngeo:\"Intersects(POLYGON((128 -14, 128 35, -126 35, -126 -14, 128 -14)))\"\n\nHave I uncovered a bug or is this actually how the system is supposed to behave now? Is there a way to get the old behavior? It is a requirement for us to allow these large polygon queries.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "David Smiley",
            "id": "comment-14114389",
            "date": "2014-08-28T21:35:56+0000",
            "content": "Hi.  Without looking through your specific examples, I'm pretty sure what's going on based on what you've said.  In Lucene 4.7, Spatial4j was upgraded to v0.4.1, which has a different default behavior for interpreting rectangular polygons.  Check out the release notes:\nhttps://github.com/spatial4j/spatial4j/blob/master/CHANGES.md\n\nIt used to be the case that rectangular polygons provided in WKT had to have its vertexes given in counter-clockwise order to indicate which way around the earth it went. The default is now the shorter width (less than 180 degrees). This setting can be changed via the \u201cdatelineRule\u201d setting. To avoid ambiguity, just use the ENVELOPE syntax.\nThe javadocs for datelineRule are here: https://spatial4j.github.io/spatial4j/apidocs/com/spatial4j/core/io/jts/JtsWktShapeParser.DatelineRule.html\nIn particular, to get the former behavior, you should set datelineRule=\"ccwRect\" on the field type in your Solr schema.\n\nAs an aside, you might also want to add autoIndex=\"true\" to see some speedup.  It's a new option in 0.4. "
        }
    ]
}