{
    "id": "SOLR-3386",
    "title": "ExtractingRequestHandler applies fname settings to literals",
    "details": {
        "affect_versions": "3.5",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "contrib - Solr Cell (Tika extraction)"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "The SolrContentHandler.addLiterals() method call the SolrContentHandler.addField() which itself obtains the field with SolrContentHandler.findMappedName().\n\nIf this call makes sense with SolrContentHandler.addMetadata() [and others] because the user can't set the name of the fields otherwise, with literals it isn't useful, the name of the field is manually given by the user and it shouldn't be modified at all (maybe applying unknownFieldPrefix or defaultField could be done, but even that doesn't seem quite normal).\n\n\n\nI got this issue with the following usecase:\n\nI have a schema containing a \"title\" field which is mandatory and contains only one value.\nMy documents have an internal title which is used as the value of the \"title\" field.\nWhen sending one of these documents (and HTML document), if it contains a \"title\" metadata I get an exception because I have multiple values for my \"title\" field (an exception I expect).\nTo fix that I used \"fname.title=tika_title\", so the title provided by tika is kept under another name.\nBoth titles (the original one I pass manually, and the metadata one) are now stored in the field \"tika_title\" and I get an exception because the \"title\" field hasn't been provided at all.\n\n\n\nAn easy workaround for this bug is sending the literal named as \"my_title\", and adding the following fnames \"fname.my_title=title&fname.title=tika_title\". A small swicheroo which puts back the correct value in the expected field.\n\n\n\nA way to fix that is extracting the first part of SolrContentHandler.addField() (lowerNames and findMappedName()) in an external method (or put the lowerNames check in SolrContentHandler.findMappedName() ) and use that external method (or findMappedName() ) before calling SolrContentHandler.addField()",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Dave Shepperton",
            "id": "comment-15209866",
            "date": "2016-03-24T06:36:58+0000",
            "content": "I'm pretty new to Solr, but I'd like to help with this issue. I've been grappling with it recently, and I found it to be quite frustrating. It has taken a lot of work for me to work around the consequences as I integrate Solr with my organization's software.\n\nBased upon the documentation from https://cwiki.apache.org/confluence/display/solr/Uploading+Data+with+Solr+Cell+using+Apache+Tika on the fmap.* parameters seem like they should apply to field name-value pairs being created by Tika. At least if this is not the intention, I think it should be spelled out in the documentation.\n\nCan someone help me figure out the status of this constellation or related issues? What is the intended behavior? What can I do to help?\n\n(See also one of the comments in SOLR-5375 that seem to spell out more or less the same issue.) "
        }
    ]
}