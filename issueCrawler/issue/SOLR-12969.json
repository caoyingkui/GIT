{
    "id": "SOLR-12969",
    "title": "Inconsistency with leader when PeerSync return ALREADY_IN_SYNC",
    "details": {
        "type": "Bug",
        "status": "Open",
        "labels": "",
        "fix_versions": [],
        "components": [
            "replication (java)"
        ],
        "priority": "Major",
        "resolution": "Unresolved",
        "affect_versions": "6.6.5,                                            7.5"
    },
    "description": "Under certain circumstances, replication fails between a leader and follower.\u00a0 The follower will not receive updates from the leader, even though the leader has a newer version.\u00a0 If the leader is restarted, it will get the older version from the follower.\n\n\u00a0\n\nThis was discussed on the\u00a0mailing list\u00a0and Kevin Risden\u00a0wrote a script\u00a0that demonstrates this error.\u00a0 He also verified that the error occurs when the script is run outside of docker.\n\n\u00a0\n\nHere is the scenario of the failure:\n\n\tA collection with 1 shards and 2 replicas\n\tStop non-leader replica (B)\n\tIndex more than 100 documents to the collection\n\tStart replica B, it failed to do PeerSync and\u00a0starts segments replication\n\tIndex document 101th to the collection\n\t\n\t\tLeader's tlog: [1, 2, 3, ..., 100, 101]\n\t\tReplica's tlog: [101]\n\t\n\t\n\tStop replica B\n\tIndex document 102th to the collection\n\tStart replica B, on doing PeerSync\n\t\n\t\tLeader's tlog: [1, 2, 3, ..., 100, 101, 102]\n\t\tReplica's tlog: [101]\n\t\tLeader's high (80th): 80\n\t\tReplica's low: 101\n\t\tBy comparison: replica's low > leader's high => ALREADY_IN_SYNC",
    "attachments": {
        "SOLR-12969.patch": "https://issues.apache.org/jira/secure/attachment/12947431/SOLR-12969.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16677277",
            "content": "Cao Manh Dat - Do you have any ideas here? I think you did work on replication. ",
            "author": "Kevin Risden",
            "date": "2018-11-06T20:31:44+0000"
        },
        {
            "id": "comment-16679971",
            "content": "I confirm that this problem happens on different versions of Solr (maybe from the start since this is problem of PeerSync logic).\u00a0\n\nAttached patch here that fix the problem, but I really don't like the way we current do PeerSync. I may think about this for couple of days before committing the patch.\n\nP/S: The scenario when this failure happen is tricky and this bug appear with the appearance of SolrCloud so we don't have to rush about it. ",
            "author": "Cao Manh Dat",
            "date": "2018-11-08T16:23:16+0000"
        },
        {
            "id": "comment-16683323",
            "content": "There are actually 2 problems that I think we should fix here:\n\n\tSince PeerSyncWithLeader is the case replica sync with its leader, the result should not be ALREADY_IN_SYNC in case of fingerprint comparison failed.\n\tPeerSync check for already_in_sync should be more robust \"ourLowThreshold > otherHigh && ourHighest >= otherHighest\" insteads of \"ourLowThreshold > otherHigh\".\n\n\n\nAttached a patch for fixing this problem.\n\n\u00a0 ",
            "author": "Cao Manh Dat",
            "date": "2018-11-12T07:17:18+0000"
        },
        {
            "id": "comment-16683475",
            "content": "Actually, I have another idea for not relying on tlog for PeerSync. This idea requires 2 changes\n\n\tVersions should be monotonic increased (instead of relying on clock time).\n\tEach commit point will contains the compressed format of all the updates versions had been applied. I.E: 1..100,103..1000.\n\tTherefore based on above changes, we can quickly compare version that we missed without caring about compute fingerprint or relying on tlog.\n\tWe still need to think about cases with FORCELEADER or similar cases, i.e: different updates have same update version.\n\n\n\nBut this approach requires a lot of changes and I'm not sure it is worth or not. What we gain here by going with above approach is\n\n\tFaster and more reliable PeerSync process.\n\tWe don't have to compute fingerprint any more.\nMay be one or two more cases will convince me on switching to above approach. Any thoughts? Shalin Shekhar Mangar Mark Miller Yonik Seeley\n\n ",
            "author": "Cao Manh Dat",
            "date": "2018-11-12T09:47:15+0000"
        },
        {
            "id": "comment-16683505",
            "content": "Commit f357c06276139defa26d0569fe5903cfd3d66cdb in lucene-solr's branch refs/heads/master from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f357c06 ]\n\nSOLR-12969: Inconsistency with leader when PeerSync return ALREADY_IN_SYNC ",
            "author": "ASF subversion and git services",
            "date": "2018-11-12T10:10:33+0000"
        },
        {
            "id": "comment-16683659",
            "content": "Commit f357c06276139defa26d0569fe5903cfd3d66cdb in lucene-solr's branch refs/heads/jira/http2 from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f357c06 ]\n\nSOLR-12969: Inconsistency with leader when PeerSync return ALREADY_IN_SYNC ",
            "author": "ASF subversion and git services",
            "date": "2018-11-12T11:55:24+0000"
        }
    ]
}