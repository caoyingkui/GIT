{
    "id": "SOLR-78",
    "title": "[PATCH] Improved config loading",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.1.0"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Solr configuration throws an UnsupportedConfigurationException for Node.getTextContent() if it is started in server environments that uses older implementations of the DOM API. This can be improved by checking wich node type is actually handled an calling the appropriate methods.\n\nA patch that fixes this problem is attached.",
    "attachments": {
        "fixed-config-loading-with-older-parser-versions.patch": "https://issues.apache.org/jira/secure/attachment/12346689/fixed-config-loading-with-older-parser-versions.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Alexander Saar",
            "id": "comment-12456489",
            "date": "2006-12-07T17:08:44+0000",
            "content": "Patch that fixes the problem described by this issue. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12456987",
            "date": "2006-12-08T21:47:38+0000",
            "content": "FWIW: I don't know a lot about DOM2 vs DOM3, but loking over the documentation on the meaning of textContent I see...\n\n      http://www.w3.org/TR/DOM-Level-3-Core/core.html\n      ...\n      [forsome node types]\n      concatenation of the textContent attribute value of every child node, excluding COMMENT_NODE and \n      PROCESSING_INSTRUCTION_NODE nodes. This is the empty string if the node has no children.\n      [for other node types including comments and processing instructions]\n      nodeValue\n\nIf I'm reading that right, then if we replace usages of getTextContent with our own method for walking the child nodes and pulling out the nodeValue, we need to explicitly watch out for processing instructions and comments or we will start slurping them in my accident right?\n\neither way: DOMUtil.getText(Node) should have some javadoc clarifying it's purpsoe (support DOM 2) so it doesn't accidently get optimized away by someone down the road who says \"hey, we can just use getTextContent()!\" "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12458318",
            "date": "2006-12-14T00:35:02+0000",
            "content": "I tried to produce an example of the type of thing i'm worried about with the body of a comment getting slurped up ... but i could not \u2013 as far as i can tell that's actually a defect of the DOM parser, the spec says it should be there.\n\nEither way it should be safe and easy to check the Node type and only include nodes that aren't comments or processing instructions, i'll try to do that tomorow. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12458590",
            "date": "2006-12-14T19:59:34+0000",
            "content": "revised version of patch that attempts to impliment the DOM Spec for \"textContent\" as precicesly as possible....\n\nhttp://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-textContent\n\nIt seems to work properly, but I'd appreciate some eyeballs on this before I commit. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-12458600",
            "date": "2006-12-14T20:38:39+0000",
            "content": "I'm no DOM expert, but it looks OK.\nIf it works on all our current tests/configs then it's a low risk change since that's all it's used for.\n\nHmmm, but how do we know it's reading all the values OK, instead of getting a default or something.\nPerhaps run a startup test with the debugging level pumped all the way up, one before the change, and one after, then diff the logs (minus timestamps/linenumbers)?\n\nOh, and StringBuffer could be StringBuilder, but it's private so I don't really care. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12458667",
            "date": "2006-12-15T03:37:07+0000",
            "content": "Changed StringBuffer to StringBuilder (i keep forgetting about that class) and then tried out Yonik's suggestion (using the full test suite we have since some config access is done on an as needed basis) and the only diffs were in default object toStrings, and the names of temp directories created for indexes (AbstractSolrTestcase puts the time and a random number in the name when making the directory)\n\ncommited.\n\n(Thanks for the initial patch Alexander, this is the kind of thing that never would have occured to me, but shoudl really help reduce frustrations new users might have)\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12589363",
            "date": "2008-04-15T23:56:45+0000",
            "content": "This bug was modified as part of a bulk update using the criteria...\n\n\n\tMarked (\"Resolved\" or \"Closed\") and \"Fixed\"\n\tHad no \"Fix Version\" versions\n\tWas listed in the CHANGES.txt for 1.1\n\n\n\nThe Fix Version for all 38 issues found was set to 1.1, email notification\nwas suppressed to prevent excessive email.\n\nFor a list of all the issues modified, search jira comments for this\n(hopefully) unique string: 20080415hossman3 "
        }
    ]
}