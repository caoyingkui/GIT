{
    "id": "SOLR-3690",
    "title": "binary solr package isn't including lucene test-framework jar",
    "details": {
        "affect_versions": "4.0-ALPHA",
        "status": "Closed",
        "fix_versions": [
            "4.0",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Blocker",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "As noted by Koorosh on the solr-user list...\n\n\nI have been developing extensions to SOLR code using 4.0 truck. For JUnit testing I am extending AbstractSolrTestCase which in the ALPHA release is located in JAR apache-solr-test-framework-4.0.0-ALPHA.jar. However, this class extends LuceneTestCase which comes from JAR lucene-test-framework-4.0-SNAPSHOT.jar. In the ALPHA release the later JAR is not shipped or I can't find it.\n\n...i confirmed that Solr 4.0.0-ALPHA binary package the solr test framework is in test./dist/apache-solr-test-framework-4.0.0-ALPHA.jar but the lucene test-framework jar isn't included at all.",
    "attachments": {
        "SOLR-3690.broken.jdoc.links.to.solrcore.patch": "https://issues.apache.org/jira/secure/attachment/12540998/SOLR-3690.broken.jdoc.links.to.solrcore.patch",
        "SOLR-3690.patch": "https://issues.apache.org/jira/secure/attachment/12540988/SOLR-3690.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13425404",
            "date": "2012-07-30T23:58:58+0000",
            "content": "This sort of requires some careful thining baout how this should be packaged.\n\nNormally if a lucene jar is a solr core dependency, we include it in the war and that's it.  \n\nIf it's not a core dependency and it's only used by contribs, we ship it in the lucene-libs dir of that contrib.\n\nsolr-test-framework isn't either of those though \u2013 and doesn't really have a place for a \"lucene-lib\" dir at the moment \u2013 but there's no reason we couldn't add test-framework/lucene-libs to the packages i suppose.  probably a good idea to include a test-framework/README.txt anyway.\n "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13425475",
            "date": "2012-07-31T02:38:28+0000",
            "content": "It would be good to think about: ideally in the future we could imagine more lucene .jar's easily pluggable into Solr.\n\nSo how should the thing be shipped?\n\nFor instance, other lucene analysis jars are in the same boat as this lucene-test-framework.jar, they might\nbe large (like lucene-test-framework which is 6MB!) and due to size excluded in the .war file, but still \nuseful to some people.\n\nIt would be nice to be consistent with the other analyzers and their dependencies (e.g. ICU or morfologik jars),\nthe same way as lucene-test-framework and its dependencies (randomized-runner, etc). We might have more modules\nlike this in the future (e.g. codecs is growing fast, we have a lot of similarities, these are easily pluggable today: just throwing these out there). "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13429790",
            "date": "2012-08-07T03:43:04+0000",
            "content": "rmuir20120906-bulk-40-change "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13434230",
            "date": "2012-08-14T16:22:59+0000",
            "content": "It would be good to think about: ideally in the future we could imagine more lucene .jar's easily pluggable into Solr.\n\nright, this is what i was asking about in LUCENE-4044...\n\nFWIW: The other issue to consider here is how the packaging of these \"uber-module-jars\" will work in Solr binary pacakges ... right now it's the solr contribs that provide the factories that ensure the lucene modules they depend on make it into the final tgx/zip files ... if lucene modules start providing the factories themselves, we'll need some build.xml shenanigans to copy those module jars into the solr package dirs.\n\n...but we punted on it there.\n\nIt would be nice to be consistent with the other analyzers and their dependencies (e.g. ICU or morfologik jars), the same way as lucene-test-framework and its dependencies (randomized-runner, etc). We might have more modules\n\nAgreed.  I think we should continue to punt on the larger issue (of including arbitrary lucene jars like codecs and what not) in the binary release, and focus here in this issue on treating the solr-test-framework the same as a solr-contrib and have it pull in it's lucene-libs and external dependencies via ivy.xml\n\nI'll start working on a patch "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13434233",
            "date": "2012-08-14T16:27:02+0000",
            "content": "that sounds good. then we get consistency. separately we can figure out what might be better for the future. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13434700",
            "date": "2012-08-15T00:43:53+0000",
            "content": "Ok, patch ready for review.\n\na few things to note:\n\n1) adding the logic to solr-test-framework to know about lucene-libs and libs caused some javadoc errors due to multiple copies of junit jars sowing up in the classpath used to build the javadocs ... but the real cruz of hte problem seemed to be that solr-test-framework was previously juping through unneccessary hoops to build the javadocs because it didn't use lucene-libs and libs properly ... i think i've fixed it appropriately.\n\n2) since solr-test-framework is not truly a contrib, i didn't put it's resulting README.txt, lucene-libs and lib dirs under \"contrib\" in the binary package, but i also didn't really think it made sense to pollute the top level dir with another directory either, so i followed the lead of solrj and put it under \"dist/\"\n\ncomments? "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13434704",
            "date": "2012-08-15T00:51:47+0000",
            "content": "I can explain the screwed up unnecessary javadocs hoops. really this deserves a comment.\n\nWith your current patch the 'hack' will break:\n\njavadocs-lint:\n     [exec] \n     [exec] Crawl/parse...\n     [exec] \n     [exec] Verify...\n     [exec] \n     [exec] build/docs/api/test-framework/org/apache/solr/analysis/MockTokenizerFactory.html\n     [exec]   BROKEN LINK: file:/home/rmuir/workspace/lucene-trunk/lucene/build/docs/test-framework/org/apache/lucene/analysis/Tokenizer.html\n     [exec]   BROKEN LINK: file:/home/rmuir/workspace/lucene-trunk/lucene/build/docs/test-framework/org/apache/lucene/analysis/Tokenizer.html\n     [exec] \n     [exec] build/docs/api/test-framework/org/apache/solr/analysis/MockCharFilterFactory.html\n     [exec]   BROKEN LINK: file:/home/rmuir/workspace/lucene-trunk/lucene/build/docs/test-framework/org/apache/lucene/analysis/CharFilter.html\n     [exec]   BROKEN LINK: file:/home/rmuir/workspace/lucene-trunk/lucene/build/docs/test-framework/org/apache/lucene/analysis/CharFilter.html\n     [exec] \n     [exec] build/docs/api/test-framework/org/apache/solr/core/MockDirectoryFactory.html\n     [exec]   BROKEN LINK: file:/home/rmuir/workspace/lucene-trunk/lucene/build/docs/test-framework/org/apache/lucene/store/Directory.html\n     [exec]   BROKEN LINK: file:/home/rmuir/workspace/lucene-trunk/lucene/build/docs/test-framework/org/apache/lucene/store/Directory.html\n     [exec] \n     [exec] build/docs/api/test-framework/org/apache/solr/core/MockFSDirectoryFactory.html\n     [exec]   BROKEN LINK: file:/home/rmuir/workspace/lucene-trunk/lucene/build/docs/test-framework/org/apache/lucene/store/Directory.html\n     [exec]   BROKEN LINK: file:/home/rmuir/workspace/lucene-trunk/lucene/build/docs/test-framework/org/apache/lucene/store/Directory.html\n     [exec] \n     [exec] Broken javadocs links were found!\n\nBUILD FAILED\n/home/rmuir/workspace/lucene-trunk/solr/build.xml:528: The following error occurred while executing this line:\n/home/rmuir/workspace/lucene-trunk/lucene/common-build.xml:1740: exec returned: 1\n\n\n "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13434708",
            "date": "2012-08-15T00:54:52+0000",
            "content": "OK I was looking to 'show' the example on the website docs, but that isnt going to work. Basically the problem here is we have:\n\n\torg.apache.lucene.analysis package in lucene-core\n\torg.apache.lucene.analysis package in lucene-test-framework\n\t... with o.a.l.store and so on\n\n\n\nso this 'package' conflict causes problems for the package-list, and solr-test-framework links to lucene-test-framework\nbecause it 'has these packages' (but so does lucene-core!). \n\nyes its a hack, and yes you can say its bogus we have the duplicated packages in multiple modules, HOWEVER this is tests.\nI think its ok to have 'greyed out links' from the solr-test-framework javadocs to these lucene-core things, because\nits fair we should be able to test pkg-private stuff \n\nHowever, there might be a better, cleaner way than the hack i had before: such as somehow explicitly disabling these packages\nor some javadocs option like that. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13434759",
            "date": "2012-08-15T02:24:12+0000",
            "content": "so this 'package' conflict causes problems for the package-list, and solr-test-framework links to lucene-test-framework\n\nyeah, that makes total sense ... it ust wasn't clear before why it was doing what it was doing. (although there was still a lot of wonky and unnecessary classpath stuff)\n\nI think its ok to have 'greyed out links' from the solr-test-framework javadocs to these lucene-core things\n\nUnfortunately it also means we have greyed out links to the core-test-framework stuff as well, and people are who are learning about solr-test-framework baseclasses are probably going to need to know just as much about stuff like LuceneTestCase, but i don't really see a good solution to that, so oh well.\n\ni switched back to using invoke-javadoc directly and got things working with javadocs-lint.  i went on and attempted to at least get the solr-test-framework javadocs linking to the solr-core javadocs, but ran into a problem that the relative paths between them are differnet between \"build\" and \"dist\" and javadocs-lint expects them to work in build, so i scraped that (but it's attached if anyone wants to take a crack at it)\n "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13435003",
            "date": "2012-08-15T12:06:57+0000",
            "content": "I understand the problem. its actually part of a larger problem for solr?\n\nCurrently the solr javadocs in dist/ are really organized in a mess. 'javadocs-all' creates this massive javadocs of everything (core, solrj, contribs) and puts\nit in the output folder THEN solrj is redundantly duplicated on top of this. so you have e.g.\nhttp://lucene.apache.org/solr/api-4_0_0-ALPHA/org/apache/solr/client/solrj/package-summary.html\nbut also\nhttp://lucene.apache.org/solr/api-4_0_0-ALPHA/solrj/org/apache/solr/client/solrj/package-summary.html\n\nThis is not useful and not very navigable.\n\nInstead I think, like lucene, we should nuke javadocs-all completely and organize javadocs into subfolders (core, solrj, test-framework, dataimport, ...),\nthat have the links to each other.\n\nWe can then add a nice auto-generated index page like http://lucene.apache.org/core/4_0_0-ALPHA/index.html that lets you navigate them, thats\nalso checked of course by the link-checkers and such.\n\nUwe just started talking about doing this on SOLR-2747\n\nI know this is all beyond the scope of the issue, I'm just explaining why its crazy and what I think we should do to make it simpler. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13435005",
            "date": "2012-08-15T12:08:12+0000",
            "content": "+1, I can help  "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13435385",
            "date": "2012-08-15T18:36:11+0000",
            "content": "Committed revision 1373553. - trunk\nCommitted revision 1373557. - 4x\n\n...we can iterate on javadoc improvements elsewhere\n "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13654011",
            "date": "2013-05-10T10:33:44+0000",
            "content": "Closed after release. "
        }
    ]
}