{
    "id": "LUCENE-7390",
    "title": "Let BKDWriter use temp heap for sorting points in proportion to IndexWriter's indexing buffer",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "6.2",
            "7.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "With Lucene's default codec, when writing dimensional points, we only give BKDWriter 16 MB heap to use for sorting, regardless of how large IW's indexing buffer is.  A custom codec can change this but that's a little steep.\n\nI've been testing indexing performance on a points-heavy dataset, 1.2 billion taxi rides from http://www.nyc.gov/html/tlc/html/about/trip_record_data.shtml , indexing with a 1 GB IW buffer, and the small 16 MB heap limit causes clear performance problems because flushing the large segments forces BKDwriter to switch to offline sorting which causes the DWPTs take too long to flush.  They then fall behind, and Lucene does a hard stall on incoming indexing threads until they catch up.\n\nRobert Muir had a simple idea to let IW pass the allowed temp heap usage to PointsWriter.writeField.",
    "attachments": {
        "LUCENE-7390.patch": "https://issues.apache.org/jira/secure/attachment/12819580/LUCENE-7390.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15389210",
            "author": "Michael McCandless",
            "date": "2016-07-22T09:25:57+0000",
            "content": "Patch, I think it's ready.\n\nNote that merging still only gets 16 MB by default (a custom codec can\nalways change that), but I think 1) we should fix that separately, and\n2) it's lower priority since 1D fields merge via optimized merge sort,\nso they don't use any heap for sorting. "
        },
        {
            "id": "comment-15389727",
            "author": "Robert Muir",
            "date": "2016-07-22T15:50:45+0000",
            "content": "+1\n\nI have a little concern about this being fairly sizeable amount of ram, but i dont know if its worth the effort to e.g. compute this somewhere else, reserve the space away, pass thru to PointValuesWriter, increase the default rambuffer (else we reserve the whole thing by default), and so on. Seems messy no matter how I look at it.\n\nIt is a little annoying that performance is so sensitive to this change, we should look into that more somehow. Maybe we can improve it so it does not need so much RAM. "
        },
        {
            "id": "comment-15389815",
            "author": "Michael McCandless",
            "date": "2016-07-22T16:49:05+0000",
            "content": "I have a little concern about this being fairly sizeable amount of ram\n\nYeah I agree...\n\nBut, with this change, we allow each flushing segment to use up to 1/8th of IW's buffer, or 16 MB, whichever is larger, in temp space.  Remember that this is transient usage: after that sort and the points are written, it's freed.  It's not unlike how merging uses temp space to map around deleted doc IDs, or in-flight flushing segments tie up temp space until they finish writing.  I think IW has a right to use temp space beyond the \"long term\" indexing buffer ... I'll try to improve IWC's javadocs here, explaining that this is not a hard limit.\n\nIt is a little annoying that performance is so sensitive to this change, we should look into that more somehow. Maybe we can improve it so it does not need so much RAM.\n\nI already made quite a few optimizations here, but I agree we could do more, e.g. don't always do a secret forceMerge in OfflineSorter (LUCENE-7141), but that got sort of complicated when I last tried...\n\nI think the discontinuity, moving from a single in-heap sort, to \"serialize to disk\", \"read 2 partitions and sort those in heap\", \"write those partitions to disk\", \"do a final merge sort of those 2 partitions to another file\", is the big hit, and I agree it would be great to find a way to reduce that cost. "
        },
        {
            "id": "comment-15391201",
            "author": "Michael McCandless",
            "date": "2016-07-24T23:43:04+0000",
            "content": "New iteration, trying to improve the javadocs in LiveIndexWriterConfig.setRAMBufferSizeMB to make it clearer that this is not a hard limit.\n\nThe docs actually said this before, but it was a bit buried, so I shortened things up a bit, and move that note up higher. "
        },
        {
            "id": "comment-15392023",
            "author": "Robert Muir",
            "date": "2016-07-25T14:46:04+0000",
            "content": "+1 "
        },
        {
            "id": "comment-15392112",
            "author": "ASF subversion and git services",
            "date": "2016-07-25T15:33:47+0000",
            "content": "Commit 3a0a9fd2c25965db4bde20975d9e6df4b540588a in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3a0a9fd ]\n\nLUCENE-7390: improve points indexing performance by letting the codec use transient heap in proportion to IndexWriter's indexing buffer, by default "
        },
        {
            "id": "comment-15392125",
            "author": "ASF subversion and git services",
            "date": "2016-07-25T15:42:44+0000",
            "content": "Commit 686f67d9a3afff79dbe8b3a47d47e73cfad2dec5 in lucene-solr's branch refs/heads/branch_6x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=686f67d ]\n\nLUCENE-7390: improve points indexing performance by letting the codec use transient heap in proportion to IndexWriter's indexing buffer, by default "
        },
        {
            "id": "comment-15399771",
            "author": "ASF subversion and git services",
            "date": "2016-07-29T18:02:20+0000",
            "content": "Commit 1aecdd28d130c757770de67bfde52f3c989bd134 in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1aecdd2 ]\n\nLUCENE-7390: revert this change, since it's obsoleted by the much better LUCENE-7396 "
        },
        {
            "id": "comment-15399778",
            "author": "ASF subversion and git services",
            "date": "2016-07-29T18:05:38+0000",
            "content": "Commit 9554719f12080e233dbfe634f4a7066e138033ed in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9554719 ]\n\nLUCENE-7390: another part of the revert "
        },
        {
            "id": "comment-15399876",
            "author": "ASF subversion and git services",
            "date": "2016-07-29T19:13:53+0000",
            "content": "Commit c5c5335c9b36b30b5f49f8d354011d6fa874f383 in lucene-solr's branch refs/heads/branch_6x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c5c5335 ]\n\nLUCENE-7390: revert this change, since it's obsoleted by the much better LUCENE-7396 "
        },
        {
            "id": "comment-15399878",
            "author": "ASF subversion and git services",
            "date": "2016-07-29T19:13:57+0000",
            "content": "Commit e3de51be2edd086c29be8fdcfca7f8a5990a640c in lucene-solr's branch refs/heads/branch_6x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e3de51b ]\n\nLUCENE-7390: another part of the revert "
        },
        {
            "id": "comment-15403156",
            "author": "ASF subversion and git services",
            "date": "2016-08-02T01:07:36+0000",
            "content": "Commit 1aecdd28d130c757770de67bfde52f3c989bd134 in lucene-solr's branch refs/heads/apiv2 from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1aecdd2 ]\n\nLUCENE-7390: revert this change, since it's obsoleted by the much better LUCENE-7396 "
        },
        {
            "id": "comment-15403158",
            "author": "ASF subversion and git services",
            "date": "2016-08-02T01:07:41+0000",
            "content": "Commit 9554719f12080e233dbfe634f4a7066e138033ed in lucene-solr's branch refs/heads/apiv2 from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9554719 ]\n\nLUCENE-7390: another part of the revert "
        },
        {
            "id": "comment-15438981",
            "author": "Michael McCandless",
            "date": "2016-08-26T13:59:16+0000",
            "content": "Bulk close resolved issues after 6.2.0 release. "
        }
    ]
}