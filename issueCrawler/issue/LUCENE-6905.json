{
    "id": "LUCENE-6905",
    "title": "GeoPointDistanceQuery using wrapped lon for dateline crossing query",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.4",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "Bug"
    },
    "description": "GeoPointDistanceQuery handles dateline crossing by splitting the Minimum Bounding Rectangle (MBR) into east/west ranges and rewriting to a Boolean SHOULD. PostFiltering is accomplished by calculating the distance from the center point to the candidate point field. Unfortunately the center point is wrapped such that calculating the closest point on the \"circle\" from an eastern point to a western MBR provides incorrect results thus causing false negatives in the range creation. This was caught by a jenkins failure and reproduced in 2 places: GeoPointDistanceTermsEnum and TestGeoRelations",
    "attachments": {
        "LUCENE-6905.patch": "https://issues.apache.org/jira/secure/attachment/12773374/LUCENE-6905.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-15014762",
            "author": "Nicholas Knize",
            "date": "2015-11-19T23:38:18+0000",
            "content": "Simple patch that unwraps the center longitude such that distance is correctly computed. Also corrects maxRadialDistance for center location at the poles. \nThis fixes build failure #14669 and passes a 200 iteration beast test.. "
        },
        {
            "id": "comment-15015229",
            "author": "Nicholas Knize",
            "date": "2015-11-20T05:03:48+0000",
            "content": "Updated patch that moves unwrapping to GeoUtils. TestGeoUtils.testGeoRelations is also reenabled and updated for BKD verification.  /cc Michael McCandless "
        },
        {
            "id": "comment-15015607",
            "author": "Michael McCandless",
            "date": "2015-11-20T11:05:44+0000",
            "content": "Updated patch that moves unwrapping to GeoUtils. TestGeoUtils.testGeoRelations is also reenabled and updated for BKD verification\n\nWhoa, wonderful!  I will look at the patch! "
        },
        {
            "id": "comment-15015633",
            "author": "Michael McCandless",
            "date": "2015-11-20T11:28:36+0000",
            "content": "For the record, MBR in geo speak means \"minimum bounding rectangle\" \n\nIn the GeoDistanceUtils.maxRadialDistance javadocs can you say that the returned results is in meters?\n\nIs this comment in GeoUtils.unwrapLon stale?\n\n\n+    // if centerLon is within bbox\n\n\n\n(I see no centerLon nor a bbox).\n\nCan you add a javadoc to this method?  Can you add an assert before returning that lon is now in-bounds?  (I.e. that the incoming lon did not require more than one iteration of unwrapping).   Can you make the {{ += 360}} also a double (or make the other one an int)?\n\nOK so the test failures were caused by 1) not having a tolerance for up to 0.5% error in the distance, and 2) not handling dateline crossovers correctly, and not pole crossing issues?  We should fix this test to \"behave\" like the query does: rewrite up front into the two halves of the MBR, instead of unwrapping on each step of the recursion.  But let's do that separately ... can you add a TODO?\n\nCan we now remove the true in TestGeoUtils.testGeoRelations?:\n\n\n      // TODO: GeoUtils APIs are still buggy for large distances:\n      if (true || useSmallRanges) {\n        // Approx 3 degrees lon at the equator:\n        radiusMeters = random().nextDouble() * 333000;\n      } else {\n        radiusMeters = random().nextDouble() * GeoProjectionUtils.SEMIMAJOR_AXIS * Math.PI / 2.0;\n      }\n\n\n\nI.e. we can now test large distances? "
        },
        {
            "id": "comment-15018145",
            "author": "Michael McCandless",
            "date": "2015-11-20T15:23:41+0000",
            "content": "Also, why didn't our randomized tests (which I think do span the dateline sometimes) not tickle this bug? "
        },
        {
            "id": "comment-15022849",
            "author": "Nicholas Knize",
            "date": "2015-11-23T19:47:07+0000",
            "content": "For the record, MBR in geo speak means \"minimum bounding rectangle\"\n\nyesyes! Updated the comment to spell out the acronym.\n\nWe should fix this test to \"behave\" like the query does: rewrite up front into the two halves of the MBR\n\nAre you referring to TestGeoUtils.testGeoRelations? unwrapLon is only called iff the bbox crosses the dateline. Which behaves like the GeoPointDistanceQueryImpl does.\n\nAlso, after digging a little bit more I've decided to move the TestGeoUtils.testGeoRelations fixes to new issue, LUCENE-6908 (patch coming next). The .testGeoRelations method doesn't exactly test the behavior of GeoPoint*Query as its using the BKD split technique (instead of quad cell division) to divide the space on each pass. For \"large\" distance queries this can create a lot of irregular rectangles producing large radial distortion error when using the cartesian approximation methods provided by GeoUtils. I have a \"rewrite\" fix that I'll attach to LUCENE-6908 that further divides the space allowing us to use the fast cartesian approximation methods instead of converting to an expensive oblate geometry approach.\n\nCan we now remove the true in TestGeoUtils.testGeoRelations\n\nAlso doing this in LUCENE-6908. "
        },
        {
            "id": "comment-15022854",
            "author": "Nicholas Knize",
            "date": "2015-11-23T19:50:27+0000",
            "content": "Jenkins did catch this, eventually. Looking at the randomization it looks like the probability of producing this case is quite low. The LUCENE-6908 patch will re-enable large distances and testGeoRelations which will produce more of these edge cases. "
        },
        {
            "id": "comment-15022856",
            "author": "Nicholas Knize",
            "date": "2015-11-23T19:51:31+0000",
            "content": "New patch to focus on unwrapping only. "
        },
        {
            "id": "comment-15022960",
            "author": "Nicholas Knize",
            "date": "2015-11-23T20:44:06+0000",
            "content": "Updated patch to correct path and addresses review comments. "
        },
        {
            "id": "comment-15024287",
            "author": "Michael McCandless",
            "date": "2015-11-24T11:14:02+0000",
            "content": "Thank you for separating out the patches Nicholas Knize.\n\nI don't like that we are changing the error tolerance from 0.5% to 7% when USGS says it's supposed to be 0.5%.  Is that intentional?  I mean, is the error in these queries really supposed to be so high?\n\nCan we move the lon unwrapping up into GeoPointDistanceQuery.rewrite method, and add centerLon as a parameter to GeoPointDistanceQueryImpl, since it \"knows\" when it's making queries that have a boundary on the date line?  In fact, it knows which sub-query is \"to the left\" and which is \"to the right\", so maybe we just inline the logic inside rewrite and remove GeoUtils.unwrapLon public method? "
        },
        {
            "id": "comment-15026941",
            "author": "Nicholas Knize",
            "date": "2015-11-25T15:40:23+0000",
            "content": "Updated patch:\n\n\tmoves unwrapping into GeoPointDistanceQuery\n\tremoves 7% tolerance - will be addressed by LUCENE-6908\n\n\n "
        },
        {
            "id": "comment-15026962",
            "author": "Michael McCandless",
            "date": "2015-11-25T15:51:47+0000",
            "content": "+1, thanks Nicholas Knize, patch looks great, but can we add a test case showing the bug and then showing that we fixed it?  (Just capture the jenkins failures) "
        },
        {
            "id": "comment-15027001",
            "author": "Nicholas Knize",
            "date": "2015-11-25T16:05:42+0000",
            "content": "thanks Michael McCandless. I went ahead and added the jenkins failure as an explicit test. I'll commit shortly.  "
        },
        {
            "id": "comment-15027021",
            "author": "ASF subversion and git services",
            "date": "2015-11-25T16:17:21+0000",
            "content": "Commit 1716462 from Nicholas Knize in branch 'dev/trunk'\n[ https://svn.apache.org/r1716462 ]\n\nLUCENE-6905: Unwrap center longitude for dateline crossing GeoPointDistanceQuery. "
        },
        {
            "id": "comment-15027051",
            "author": "ASF subversion and git services",
            "date": "2015-11-25T16:27:36+0000",
            "content": "Commit 1716465 from Nicholas Knize in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1716465 ]\n\nLUCENE-6905: Unwrap center longitude for dateline crossing GeoPointDistanceQuery. "
        },
        {
            "id": "comment-15027080",
            "author": "ASF subversion and git services",
            "date": "2015-11-25T16:38:59+0000",
            "content": "Commit 1716478 from Nicholas Knize in branch 'dev/branches/lucene_solr_5_4'\n[ https://svn.apache.org/r1716478 ]\n\nLUCENE-6905: Unwrap center longitude for dateline crossing GeoPointDistanceQuery. "
        },
        {
            "id": "comment-15027121",
            "author": "ASF subversion and git services",
            "date": "2015-11-25T16:55:33+0000",
            "content": "Commit 1716483 from Nicholas Knize in branch 'dev/branches/lucene_solr_5_4'\n[ https://svn.apache.org/r1716483 ]\n\nLUCENE-6905: updating change log. "
        },
        {
            "id": "comment-15027142",
            "author": "ASF subversion and git services",
            "date": "2015-11-25T17:01:53+0000",
            "content": "Commit 1716486 from Nicholas Knize in branch 'dev/trunk'\n[ https://svn.apache.org/r1716486 ]\n\nLUCENE-6905: updating change log. "
        },
        {
            "id": "comment-15027148",
            "author": "ASF subversion and git services",
            "date": "2015-11-25T17:03:13+0000",
            "content": "Commit 1716488 from Nicholas Knize in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1716488 ]\n\nLUCENE-6905: updating change log. "
        }
    ]
}