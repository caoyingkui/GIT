{
    "id": "LUCENE-4903",
    "title": "Add AssertingScorer",
    "details": {
        "components": [],
        "fix_versions": [],
        "affect_versions": "None",
        "priority": "Minor",
        "labels": "",
        "type": "Improvement",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "I think we would benefit from having an AssertingScorer that would assert that scorers are advanced correctly, return valid scores (eg. not NaN), ...",
    "attachments": {
        "LUCENE-4903.patch": "https://issues.apache.org/jira/secure/attachment/12577228/LUCENE-4903.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2013-04-04T15:06:34+0000",
            "content": "+1\n\nIt should also confirm that Weight.scoresDocsOutOfOrder didn't lie! ",
            "author": "Michael McCandless",
            "id": "comment-13622395"
        },
        {
            "date": "2013-04-04T15:11:36+0000",
            "content": "and score() etc shouldnt be called after these things return NO_MORE_DOCS. ",
            "author": "Robert Muir",
            "id": "comment-13622398"
        },
        {
            "date": "2013-04-04T16:12:58+0000",
            "content": "It should also confirm that Weight.scoresDocsOutOfOrder didn't lie!\n\nHow can I check for that? ",
            "author": "Adrien Grand",
            "id": "comment-13622466"
        },
        {
            "date": "2013-04-04T16:22:18+0000",
            "content": "How can I check for that?\n\nWell, hopefully we have an AssertingWeight, and then when its scorer() method is returned, it calls .scoresDocsOOO on the wrapped weight, and if that returns true, then the returned AssertingScorer should ensure every returned docID is > the previous one, I think? ",
            "author": "Michael McCandless",
            "id": "comment-13622474"
        },
        {
            "date": "2013-04-05T16:26:19+0000",
            "content": "Patch\n\n\n\tchecks for in-order scoring when applicable\n\n\n\n\n\tchecks score values (not INFINITY or NaN)\n\n\n\n\n\tchecks that Scorer.score() is not called before iteration started or after it finished\n\n\n\n\n\treuses assertions of DocsEnum on Scorer\n\n\n\n\n\tmakes sure that nextDoc() and advance(target) are not called directly on \"top scorers\" (only from score(Collector)).\n\n\n\n\n\tmakes more tests use LuceneTestCase.newSearcher (most of the patch size)\n\n ",
            "author": "Adrien Grand",
            "id": "comment-13623759"
        },
        {
            "date": "2013-04-05T20:18:48+0000",
            "content": "Wow, this looks awesome!  Nice that you cut over all tests to use newSearcher ... does anything fail?\n\nWhy do you need to track the instances with the WeakHashMap? ",
            "author": "Michael McCandless",
            "id": "comment-13624017"
        },
        {
            "date": "2013-04-06T14:21:48+0000",
            "content": "The problem is that scorers are hard to track: scoring usually happens by calling Scorer.score(Collector), which itself calls Collector.setScorer(Scorer). Since the asserting scorer delegates to the wrapped one, the asserting scorer gets lost, this is why Collector.setScorer tries to get it back by using a weak hash map.\n\nI'm not totally happy with it either and would really like to make Scorer.score(Collector) use methods from the asserting scorer directly. We can't rely on Scorer.score(Collector)'s default implementation since it relies on Scorer.nextDoc and some scorers such as BooleanScorer don't implement this method. ",
            "author": "Adrien Grand",
            "id": "comment-13624419"
        },
        {
            "date": "2013-04-06T19:55:06+0000",
            "content": "Since the asserting scorer delegates to the wrapped one, the asserting scorer gets lost, this is why Collector.setScorer tries to get it back by using a weak hash map.\n\nOK I see.\n\nWell I would just commit what you have now   We can improve the WeakHashMap solution if necessary later ... this is an awesome step forward.  Progress not perfection ... ",
            "author": "Michael McCandless",
            "id": "comment-13624481"
        },
        {
            "date": "2013-04-09T14:06:21+0000",
            "content": "\nThe problem is that scorers are hard to track: scoring usually happens by calling Scorer.score(Collector), which itself calls Collector.setScorer(Scorer). Since the asserting scorer delegates to the wrapped one, the asserting scorer gets lost, this is why Collector.setScorer tries to get it back by using a weak hash map.\n\nI'm not totally happy with it either and would really like to make Scorer.score(Collector) use methods from the asserting scorer directly. We can't rely on Scorer.score(Collector)'s default implementation since it relies on Scorer.nextDoc and some scorers such as BooleanScorer don't implement this method.\n\nCould we alternatively use VirtualMethod to detect if score(Collector)/score(Collector,int,int) are overridden in the underlying scorer? If they aren't, then its safe for AssertingScorer to use its own implementation (possibly with more checks).  ",
            "author": "Robert Muir",
            "id": "comment-13626628"
        },
        {
            "date": "2013-04-09T14:14:45+0000",
            "content": "This is a good idea, I didn't know of this class. I'll update the patch! ",
            "author": "Adrien Grand",
            "id": "comment-13626638"
        },
        {
            "date": "2013-04-10T00:04:13+0000",
            "content": "New patch:\n\n\n\tborrows Robert's idea to not delegate if the method has not been overridden,\n\n\n\n\n\tAssertingScorer.score(Collector) either calls score(Collector) or score(Collector, NO_MORE_DOCS, nextDoc()) depending on random().nextBoolean()\n\n\n\n\n\tmodifies some join scorers so that nextDoc throws UOE instead of iterating out of order\n\n\n\n\n\tadds an assertion to Scorer.score(Collector) to make sure that iteration has not started before this method is called\n\n\n\n\n\tadds an assertion to Scorer.score(Collector, int, int) to make sure that docID() == firstDocID\n\n ",
            "author": "Adrien Grand",
            "id": "comment-13627291"
        },
        {
            "date": "2013-04-10T00:09:48+0000",
            "content": "So we don't need the weak map anymore right? ",
            "author": "Robert Muir",
            "id": "comment-13627300"
        },
        {
            "date": "2013-04-10T00:18:49+0000",
            "content": "maybe AssertingWeight's scorer() method should create a new Random(random.nextLong()) to pass to the AssertingScorer when it creates it? This way when AssertingIndexSearcher wraps an IndexSearcher with an executorService configured, things are more likely to reproduce. ",
            "author": "Robert Muir",
            "id": "comment-13627305"
        },
        {
            "date": "2013-04-10T08:10:26+0000",
            "content": "So we don't need the weak map anymore right?\n\nIt could still be useful to Scorers that override score(Collector collector) and call collector.setScorer(this) in the body of this method I think.\n\nmaybe AssertingWeight's scorer() method should create a new Random(random.nextLong()) to pass to the AssertingScorer when it creates it?\n\nGood point. I'll update the patch. ",
            "author": "Adrien Grand",
            "id": "comment-13627594"
        },
        {
            "date": "2013-04-10T12:46:22+0000",
            "content": "I'd just commit the thing \n\nI'm happy you are doing this work and happy to try to look at patches... but this would really improve our tests ",
            "author": "Robert Muir",
            "id": "comment-13627743"
        },
        {
            "date": "2013-04-10T22:13:17+0000",
            "content": "[trunk commit] jpountz\nhttp://svn.apache.org/viewvc?view=revision&revision=1466709\n\nLUCENE-4903: Add AssertingScorer. ",
            "author": "Commit Tag Bot",
            "id": "comment-13628349"
        },
        {
            "date": "2013-04-10T22:30:33+0000",
            "content": "I just committed. Hopefully this will find bugs in Scorers! ",
            "author": "Adrien Grand",
            "id": "comment-13628369"
        },
        {
            "date": "2013-04-10T22:32:08+0000",
            "content": "[branch_4x commit] jpountz\nhttp://svn.apache.org/viewvc?view=revision&revision=1466719\n\nLUCENE-4903: Add AssertingScorer. ",
            "author": "Commit Tag Bot",
            "id": "comment-13628372"
        }
    ]
}