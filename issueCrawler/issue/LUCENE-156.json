{
    "id": "LUCENE-156",
    "title": "QueryParser fails when feeding with a stop word with a boosting factor",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/queryparser"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "1.2",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "so this happens when I use the StandardAnalyzer which contains StopFilter\n\nin most of the case the parser autoatically removes the stop words, as one can\ncheck at the official demo, found at\nlucene-1.2/src/demo/org/apache/lucene/demo/SearchFiles\n\nthis only fails when there is a boosting factor defined for any of the stop\nword,. like this: the^3",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2003-10-21T16:53:57+0000",
            "content": "Please provide the exact error message and stack trace that you are getting.\n\nIt would also help if you could provide self-sufficient code that we could run\nto see the problem you are experiencing. ",
            "author": "Otis Gospodnetic",
            "id": "comment-12321428"
        },
        {
            "date": "2003-10-21T18:49:18+0000",
            "content": "the stack trace:\norg.apache.lucene.queryParser.ParseException: Encountered \"^\" at line 1, column 0.\nWas expecting one of:\n    <NOT> ...\n    \"+\" ...\n    \"-\" ...\n    \"(\" ...\n    <QUOTED> ...\n    <TERM> ...\n    <PREFIXTERM> ...\n    <WILDTERM> ...\n    <RANGEIN> ...\n    <RANGEEX> ...\n    <NUMBER> ...\n\n        at\norg.apache.lucene.queryParser.QueryParser.generateParseException(Unknown Source)\n        at org.apache.lucene.queryParser.QueryParser.jj_consume_token(Unknown\nSource)\n        at org.apache.lucene.queryParser.QueryParser.Clause(Unknown Source)\n        at org.apache.lucene.queryParser.QueryParser.Query(Unknown Source)\n        at org.apache.lucene.queryParser.QueryParser.parse(Unknown Source)\n        at org.apache.lucene.queryParser.QueryParser.parse(Unknown Source)\n        at demo.org.apache.lucene.demo.SearchFiles.main(SearchFiles.java:84)\n\nprobably this is not a very good stack trace, but you can easily generate at\nyour environment, just feed the QueryParser with this string: \"the^3\" ",
            "author": "Pakozdi Tibor",
            "id": "comment-12321429"
        },
        {
            "date": "2003-10-21T19:56:36+0000",
            "content": "This has certainly been fixed.  It came up on the mailing list a few weeks ago and I tried it with the \nlatest codebase with  no problem.  Also, we have a test case that does test for this situation that \ncurrently passes:\n\n    StandardAnalyzer oneStopAnalyzer = new StandardAnalyzer(new String[]\n{\"on\"}\n);\n    QueryParser qp = new QueryParser(\"field\", oneStopAnalyzer);\n    Query q = qp.parse(\"on^1.0\");\n\nI'm marking this as FIXED.  If you experience this problem with the latest codebase, please re-\nopen. ",
            "author": "Erik Hatcher",
            "id": "comment-12321430"
        }
    ]
}