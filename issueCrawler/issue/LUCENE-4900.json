{
    "id": "LUCENE-4900",
    "title": "Add spatial edge approximations: include/exclude/center",
    "details": {
        "components": [
            "modules/spatial"
        ],
        "fix_versions": [],
        "affect_versions": "None",
        "priority": "Minor",
        "labels": "",
        "type": "New Feature",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "The RecursivePrefixTree predicates incidentally buffer the query shape slightly to your specifications (distErr, distErrPct) as a byproduct of fitting it to a grid, thus making the search area slightly (or not so slightly) larger than the given shape.  Because of the grid approximation, some amount of this is unavoidable.  The result is that these predicates can match some false-positives that are slightly outside the query shape.  The user might want instead to not match those false positives on the edge at all and is willing to accept the reverse inaccuracy \u2013 not matching false-negatives i.e. sort of reverse-buffering the shape edge. Or the user might instead want to substitute the center point of the a cell at the shape's edge to detect if it's a match or not \u2013 thus some false-positives will match and some false-negatives won't match but at a higher detail.\n\nBased on the way these predicates are implemented, it'd be pretty easy to add support for these conditions.  Arguably there is an index-time analog to this idea as well but that'd be harder.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}