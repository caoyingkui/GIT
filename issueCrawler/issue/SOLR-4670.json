{
    "id": "SOLR-4670",
    "title": "Core mismatch in concurrent documents creation",
    "details": {
        "affect_versions": "4.0,                                            4.1,                                            4.2,                                            4.2.1",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "multicore",
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "The issue can be reproduced in this way:\n\n\tInstall SolrCloud with at least 2 nodes\n\tInstall ZooKeeper with at least 2 nodes\n\tCreate 30 cores\n\tAfter each core creation, create 20 random generated documents in a random existent core with 2 concurrent threads on all solr nodes (for example, document 1 in core 3 on node 1, document 2 in core 5 on node 1, document 3 in core 3 on node 2, etc...).\n\tAfter all cores creation, query each core for all documents and compare insert data with query result\n\n\n\nSome documents result in different core than they are created.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-13622112",
            "date": "2013-04-04T12:55:23+0000",
            "content": "How are you creating your collection (i.e. what is the actual command used?)\nHow are you creating each core? "
        },
        {
            "author": "Alberto Ferrini",
            "id": "comment-13622169",
            "date": "2013-04-04T13:17:30+0000",
            "content": "I create a tree on ZooKeeper by SolrZkClient (org.apache.solr.common.cloud.SolrZkClient)\n\nSolrZkClient zkClient=new SolrZkClient(properties.getProperty(ZOOKEEPER_SERVER_ADDRESS), ZOOKEEPER_CLIENT_TIMEOUT);\nString configName=request.getParameter(\"coreName\");\nFile dir=new File(properties.getProperty(CORE_DIR));\nuploadToZK(zkClient, dir, ZOOKEEPER_CONFIGS_ZKNODE + \"/\" + configName,configName);\n\nThe method uploadToZK invokes recursively zkClient.makePath()\n\nThen I send one request to each solr node for create the core by solrj client (org.apache.solr.client.solrj.impl.HttpSolrServer):\n\n\nString configName=request.getParameter(\"coreName\");\nHttpSolrServer solrServer=new HttpSolrServer(request.getParameter(\"url\"));\nCreate newCoreRequest=new Create();\nnewCoreRequest.setCollection(configName);\nnewCoreRequest.setDataDir(System.getProperty(\"solr.data.dir\")+File.separator+configName);\nnewCoreRequest.setSchemaName(\"schema_\"+configName+\".xml\");\nnewCoreRequest.setConfigName(\"solrconfig_\"+configName+\".xml\");\nnewCoreRequest.setInstanceDir(configName+\"/\");\nnewCoreRequest.setShardId(configName);\nnewCoreRequest.setCoreName(configName);}}\nsolrServer.request(newCoreRequest);\n\nAt the end of the process, the line automatically added on each solr.xml is like this:\n\n<core schema=\"schema_core_01.xml\" loadOnStartup=\"true\" shard=\"core_01\" instanceDir=\"core_01/\" transient=\"false\" name=\"core_01\" config=\"solrconfig_core_01.xml\" collection=\"core_01\" dataDir=\"/home/solr/solr/server.2/data/core_01\"/> "
        }
    ]
}