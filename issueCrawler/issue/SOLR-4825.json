{
    "id": "SOLR-4825",
    "title": "Port SolrLogFormatter to log4j",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.4",
            "6.0"
        ],
        "components": [],
        "type": "Test",
        "priority": "Critical",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Cloud tests are extremelly difficult to debug without this logging - can't go back to the early days of sys outs at this point. I'll port this formatter to work with log4j as a Layout.",
    "attachments": {
        "SOLR-4825.patch": "https://issues.apache.org/jira/secure/attachment/12583361/SOLR-4825.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Mark Miller",
            "id": "comment-13658735",
            "date": "2013-05-15T20:15:01+0000",
            "content": "Patch attached. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13659117",
            "date": "2013-05-16T01:30:10+0000",
            "content": "after commit r1483088 on trunk (and likewise on 4x), RegexBoostProcessorTest started failing because the testframework detected that the static variabls in the test were using too much ram.\n\nas i noted via email...\n\n\nSomething is fishy with this sudden onset of RegexBoostProcessorTest \nfailures....\n\n - happening on diff hosts, diff OSes, diff JVMs\n - happening on trunk and 4x\n - only started happening today\n - SolrRequestParsers object is huge for no explicible reason...\n\n: Stack Trace: junit.framework.AssertionFailedError: Clean up static \n: fields (in @AfterClass?), your test seems to hang on to approximately \n: 51,150,032 bytes (threshold is 10,485,760). Field reference sizes \n: (counted individually):\n        ...\n:   - 51,880,376 bytes, protected static \n: org.apache.solr.servlet.SolrRequestParsers \n: org.apache.solr.update.processor.RegexBoostProcessorTest._parser\n\n...why is SolrRequestParsers 51 MB ?\n\nIn other similar failures today it was 11MB, 12MB, 25MB, etc...\n\nInstances of this class shouldn't by fluctuating in size, it doesn't \nmaintain any mutable state -- so WTF?\n\nDon't get me wrong: RegexBoostProcessorTest should probably have an \n@AfterClass to null this out -- but i'm concerned that either:\n\na) something has changed allowing SolrRequestParsers instances to now \ngrow w/o bound\n\nb) something has changed to break the size detection code in the test \nframework.\n\n\n\nrmuir \"fixed\" the test to null out the SolrRequestParsers instance in the test, but also noted that when he was debugging things...\n\n\nI think it might be related to its logger actually.\n\nWhen i run it before mark's commit on SOLR-4825, its logger is 50kb\nwhen i run it now, its logger is megabytes.\n\nSo I think that change caused it\n\n\n\n...so there definitely smells like a memory leak in here somewhere. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13659173",
            "date": "2013-05-16T03:07:55+0000",
            "content": "Interesting - I actually saw this once before a couple successful test runs and figured it was an anomaly. Will investigate in the AM.  "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13679526",
            "date": "2013-06-10T14:15:14+0000",
            "content": "We have already switched to using a hash rather than SolrCore in the map that likely held on to so much memory - resolving this as done - we can open further issues if necessary. "
        },
        {
            "author": "Steve Rowe",
            "id": "comment-13716895",
            "date": "2013-07-23T18:38:54+0000",
            "content": "Bulk close resolved 4.4 issues "
        }
    ]
}