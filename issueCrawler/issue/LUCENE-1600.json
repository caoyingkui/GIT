{
    "id": "LUCENE-1600",
    "title": "Reduce usage of String.intern(), performance is terrible",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "2.9"
        ],
        "affect_versions": "2.4,                                            2.4.1",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "I profiled a simple MatchAllDocsQuery() against ~1.5 million documents (8 fields of short text, Field.Store.YES,Field.Index.NOT_ANALYZED_NO_NORMS), then retrieved all documents via searcher.doc(i, fs). String.intern() showed up as a top hotspot (see attached screenshot), so i implemented a small optimization to not intern() for every new Field(), instead forcing the intern in the FieldInfos class and adding a optional \"internName\" constructor to Field. This reduced execution time for searching and iterating through all documents by 35%. Results were similar for -server and -client.\n\n\nTRUNK (2.9) w/out patch: matched 1435563 in 8884 ms/search\nTRUNK (2.9) w/patch: matched 1435563 in 5786 ms/search",
    "attachments": {
        "intern_perf.patch": "https://issues.apache.org/jira/secure/attachment/12405338/intern_perf.patch",
        "intern.png": "https://issues.apache.org/jira/secure/attachment/12405337/intern.png"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-04-13T18:49:59+0000",
            "content": "attaching profiler screenshot and patch ",
            "author": "Patrick Eger",
            "id": "comment-12698494"
        },
        {
            "date": "2009-04-13T18:50:42+0000",
            "content": "note that there may be other opportunities to reduce interning, i fixed it only for my specific use-case ",
            "author": "Patrick Eger",
            "id": "comment-12698495"
        },
        {
            "date": "2009-04-13T20:04:13+0000",
            "content": "Thanks for the fix, P.  I'll commit this for 2.9. ",
            "author": "Michael McCandless",
            "id": "comment-12698534"
        },
        {
            "date": "2009-04-16T20:56:49+0000",
            "content": "contrib/MemoryIndex has a bunch of notes about how interning is\nslow, and using (I believe) hashmaps of strings is better.\nComments on this approach? ",
            "author": "Jason Rutherglen",
            "id": "comment-12699857"
        },
        {
            "date": "2009-04-16T21:06:47+0000",
            "content": "Hashmaps would work also, but then they either need to be synchronized or kept per-thread, the former would probably kill all your performance gains and the latter would be annoying i think. A moderate usage of String.intern() is fine i think, my patch just takes it out of the hot-path (for my use-case at least). Other uses of String.intern() in the codebase may have different solutions/tradeoffs certainly. ",
            "author": "Patrick Eger",
            "id": "comment-12699864"
        },
        {
            "date": "2009-04-16T21:08:15+0000",
            "content": "In addition to Mikes fixes, there are more places in FieldsReader, where intern() is used. The best would be to add the sme ctor to AbstractField, too and use it for LayzyField and so on, too.\nIf I have time, I attach a patch similar to Patrick's. ",
            "author": "Uwe Schindler",
            "id": "comment-12699865"
        }
    ]
}