{
    "id": "SOLR-220",
    "title": "Solr returns \"HTTP status code=1\" in some case",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [],
        "components": [
            "search"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "If I request the following on solr example:\n\nhttp://localhost:8080/solr/select?q=ipod%3Bzzz+asc&version=2.2&start=0&rows=10&indent=on\n\nI got an exception as I expected because zzz isn't undefined, but HTTP status code is 1. I expected 400 in this case.\nThe reason of this is because IndexSchema.getField() method throws SolrException(1,\"\") and QueryParsing.parseSort() doesn't catch it:\n\n        // getField could throw an exception if the name isn't found\n    \tSchemaField f = schema.getField(part);\t// <=== makes HTTP status code=1\n        if (f == null || !f.indexed())\n{\n          throw new SolrException( 400, \"can not sort on unindexed field: \"+part );\n        }\n\nThere seems to be a couple of ways to solve this problem:\n\n1. IndexSchema.getField() method throws SolrException(400,\"\")\n2. IndexSchema.getField() method doesn't throw the exception but returns null\n3. The caller catches the exception and re-throws SolrException(400,\"\")\n4. The caller catches the exception and re-throws SolrException(400,\"\",cause) that wraps the cause exception\n\nI think either #3 or #4 will be acceptable. The attached patch is #3 for sort on undefined field.\n\nOther than QueryParsing.parseSort(), IndexSchema.getField() is called by the following class/methos:\n\n\n\tCSVLoader.prepareFields()\n\tJSONWriter.writeDoc()\n\tSimpleFacets.getTermCounts()\n\tQueryParsing.parseValSource()\n\n\n\nI'm not sure these methods require same patch. Any thoughts?\n\nregards,",
    "attachments": {
        "QueryParsing.patch": "https://issues.apache.org/jira/secure/attachment/12356469/QueryParsing.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Koji Sekiguchi",
            "id": "comment-12492527",
            "date": "2007-04-29T00:11:26+0000",
            "content": "the patch for \"sort on undefined field\" "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12492531",
            "date": "2007-04-29T00:29:41+0000",
            "content": "I just checked in a much smaller patch that at least won't throw a status code=\"1\"\nhttp://svn.apache.org/viewvc/lucene/solr/trunk/src/java/org/apache/solr/schema/IndexSchema.java?r1=533449&r2=533448&pathrev=533449\n\nWe should probably use your patch so that it has a nice context specific error, rather then the general \"undefined field\"\n\nAs an aside, SOLR-204 will make the request dispatcher the default /select handler.  This catches invalid error codes and returns a 500.\n\nthanks\n "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-12492601",
            "date": "2007-04-29T21:02:46+0000",
            "content": "fixed in rev 533560 "
        }
    ]
}