{
    "id": "LUCENE-2158",
    "title": "NRT can temporarily lose deletions at high indexing rates",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/index"
        ],
        "type": "Bug",
        "fix_versions": [
            "2.9.2",
            "3.0.1",
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "OK, I found a sneaky case where NRT can temporarily lose deletions.\nThe deletions aren't permanently lost - they are seen on the next\nopened NRT reader.\n\nIt happens like this (in IW.getReader):\n\n\n\tFirst flush() is called, to flush added docs & materialize the\n    deletes.\n\n\n\n\n\tThe very next statement enters a sync'd block to open the reader,\n    but, if indexing rate is very high, and threads get scheduled\n    \"appropriately\", a \"natural\" flush (due to RAM buffer being full\n    or flush doc count being reached) could be hit before the sync\n    block is entered, in which case that 2nd flush won't materialize\n    the deletes associated with it, and the returned NRT reader will\n    only see its adds until it's next reopened.\n\n\n\nThe fix is simple \u2013 we should materialize deletes inside the sync\nblock, not during the flush.",
    "attachments": {
        "LUCENE-2158.patch": "https://issues.apache.org/jira/secure/attachment/12428022/LUCENE-2158.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2009-12-15T10:05:19+0000",
            "content": "Attached patch.\n\nJake/John, hopefully this explains what you guys were seeing in stress testing Lucene NRT! ",
            "author": "Michael McCandless",
            "id": "comment-12790639"
        }
    ]
}