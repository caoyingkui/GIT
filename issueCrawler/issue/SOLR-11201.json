{
    "id": "SOLR-11201",
    "title": "Implement trigger for arbitrary metrics",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "AutoScaling",
            "SolrCloud"
        ],
        "type": "Sub-task",
        "fix_versions": [
            "7.3",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "It should be possible to set a trigger on any metrics exposed by the Metrics API using a threshold value. Supporting waitFor may not be possible or useful for all metrics. For those we will implement proper trigger support (such as searchRate) However, a naive implementation might be to just poll the value of the metric frequently and if it is consistently above the threshold, fire the trigger.",
    "attachments": {
        "SOLR-11201-test-fix.patch": "https://issues.apache.org/jira/secure/attachment/12912053/SOLR-11201-test-fix.patch",
        "SOLR-11201.patch": "https://issues.apache.org/jira/secure/attachment/12902853/SOLR-11201.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-08-08T07:21:52+0000",
            "content": "Users should be able to use any metrics with the following syntax\neg: \n\n{ 'replica': 0, 'metrics:solr.jvm/os.systemLoadAverage': '<0.5'}\n\n\n\nall the metrics variables should be defined in the following syntax\n\nmetrics:<group>/<prefix>\n\n ",
            "author": "Noble Paul",
            "id": "comment-16117992"
        },
        {
            "date": "2017-11-27T18:57:14+0000",
            "content": "metrics:<group>/<prefix>\nOther places already use a different syntax, namely metrics:group:prefix, and there's even specific support for this syntax in MetricsHandler and in MetricsUtils, so let's be consistent about this. ",
            "author": "Andrzej Bialecki",
            "id": "comment-16267256"
        },
        {
            "date": "2017-12-19T12:31:23+0000",
            "content": "This patch adds a MetricTrigger that creates MetricBreachedEvents. The intention is to watch container level metrics and perform move replica actions if they are breached. But any arbitrary metric (even core level) can be used as well. It supports \"below\" and \"above\" threshold values and can limit operations to a specific collection, shard or a single node.\n\nExample set-trigger call that fires the trigger whenever the total usable space on a node having replicas of \"mycollection\" falls below 100GB. The computed plan will then move replicas of mycollection away from such nodes.\n\n{\n  \"set-trigger\": {\n    \"name\": \"metric_trigger\",\n    \"event\": \"metric\",\n    \"waitFor\": \"5s\",\n    \"metric\": \"metric:solr.node:CONTAINER.fs.coreRoot.usableSpace\"\n    \"below\": 107374182400,\n    \"collection\": \"mycollection\",\n    \"shard\": \"shard1\"    \n  }\n}\n\n ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16296716"
        },
        {
            "date": "2017-12-19T15:28:31+0000",
            "content": "I think that the configuration should also specify what is the preferred action - in many cases this will be MOVEREPLICA, but if we plan to use this trigger for other metrics then other actions may be more appropriate depending on the metric (eg. ADDREPLICA, REPLACENODE, SPLITSHARD, etc). ",
            "author": "Andrzej Bialecki",
            "id": "comment-16296960"
        },
        {
            "date": "2017-12-20T08:59:19+0000",
            "content": "Thanks Andrzej. This patch adds a optional property named 'preferredOperation' to the trigger that can be used to change the default operation (MOVEREPLICA). However, on writing a test that sets  preferredOperation to addreplica, I found that the policy can return an unbounded number of suggestions. I believe a similar bug was found in the search rate trigger. So for now, I have commented out that test.  ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16298132"
        },
        {
            "date": "2017-12-22T15:48:58+0000",
            "content": "Commit 43f17f7af1831b71f3f53f600bcf04579c4b960a in lucene-solr's branch refs/heads/master from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=43f17f7 ]\n\nSOLR-11201: Implement autoscaling trigger for arbitrary metrics that creates events when a given metric breaches a threshold ",
            "author": "ASF subversion and git services",
            "id": "comment-16301582"
        },
        {
            "date": "2017-12-22T16:05:40+0000",
            "content": "Commit 136b2581e854a205a5a2e2a6c3dcc288138f0ce1 in lucene-solr's branch refs/heads/branch_7x from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=136b258 ]\n\nSOLR-11201: Implement autoscaling trigger for arbitrary metrics that creates events when a given metric breaches a threshold\n\n(cherry picked from commit 43f17f7) ",
            "author": "ASF subversion and git services",
            "id": "comment-16301595"
        },
        {
            "date": "2018-02-26T06:00:44+0000",
            "content": "Re-opening. Noble pointed out in SOLR-12031 that the integration test added in this issue is not correct. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16376423"
        },
        {
            "date": "2018-02-26T14:38:38+0000",
            "content": "This patch fixes the faulty assumption in the previous test. The earlier test tried to assert that a particular operation is computed even though there are no violations simulated by the test. This patch fixes by adding a new policy after creating the collection such that there are explicit violations that should be fixed. ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16376967"
        },
        {
            "date": "2018-02-26T16:52:17+0000",
            "content": "Commit e08eac421a19f148f2ac149bc5ebcc121cdea51f in lucene-solr's branch refs/heads/master from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e08eac4 ]\n\nSOLR-11201: Fix bad assumptions made in testMetricTrigger ",
            "author": "ASF subversion and git services",
            "id": "comment-16377160"
        },
        {
            "date": "2018-02-26T16:52:50+0000",
            "content": "Commit 7707e6528ea5c62420df90c63fc52fc8684e4439 in lucene-solr's branch refs/heads/branch_7x from Shalin Shekhar Mangar\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7707e65 ]\n\nSOLR-11201: Fix bad assumptions made in testMetricTrigger\n\n(cherry picked from commit e08eac4) ",
            "author": "ASF subversion and git services",
            "id": "comment-16377162"
        }
    ]
}