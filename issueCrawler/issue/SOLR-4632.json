{
    "id": "SOLR-4632",
    "title": "transientCacheSize is not retained when persisting solr.xml",
    "details": {
        "affect_versions": "4.2",
        "status": "Closed",
        "fix_versions": [
            "4.3",
            "6.0"
        ],
        "components": [
            "multicore"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "transientCacheSize is not persisted solr.xml when creating a new core. I was able to reproduce this using the following solr.xml file:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<solr persistent=\"true\">\n  <cores transientCacheSize=\"21\" defaultCoreName=\"collection1\" adminPath=\"/admin/cores\" zkClientTimeout=\"${zkClientTimeout:15000}\" hostPort=\"8983\" hostContext=\"solr\">\n    <core name=\"collection1\" collection=\"collection1\"/>\n  </cores>\n</solr>\n\n\n\nI created a new core:\n\n curl \"http://localhost:8983/solr/admin/cores?action=create&instanceDir=collection1&transient=true&name=tmp5&loadOnStartup=false\"\n\n\nThe resulting solr.xml file has the new core added, but is missing the transientCacheSize attribute.",
    "attachments": {
        "SOLR-4632.txt": "https://issues.apache.org/jira/secure/attachment/12575115/SOLR-4632.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "dfdeshom",
            "id": "comment-13611308",
            "date": "2013-03-22T21:46:55+0000",
            "content": "patch attached for a fix. Fix also on github here: https://github.com/dfdeshom/lucene-solr/commit/SOLR-4632 "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13612174",
            "date": "2013-03-24T18:03:02+0000",
            "content": "Thanks both for catching this and the patch! I'm currently working on SOLR-4615, so I'm in the code anyway. I hope to fold this patch into that work in the next day or two and commit... "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13613326",
            "date": "2013-03-26T00:13:42+0000",
            "content": "Hmmm, why did you remove the check in CoreContainer when persisting the transientCacheSize around line 1,300 (warning, I've made some other changes so the file lines may not match).\n\nIt seems incorrect to me to persist Integer.MAX_VALUE if nothing has ever been specified, just let the default value happen next time the file is read rather than leave the user wondering where the heck that came from.\n\nYou don't need to put up a new patch, I'll just change this in SOLR-4615 unless you convince me that this check is really a bad idea....\n "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13613349",
            "date": "2013-03-26T00:41:06+0000",
            "content": "Looking more closely, transientCacheSize is persisted when it's value is other than Integer.MAX_VALUE. So I don't think this is a problem after all. "
        },
        {
            "author": "dfdeshom",
            "id": "comment-13614303",
            "date": "2013-03-26T17:01:42+0000",
            "content": "> Looking more closely, transientCacheSize is persisted when it's value is other than Integer.MAX_VALUE. So I don't think this is a problem after all.\n\nI have been able to reproduce the bug today using the example I gave previously: transientCacheSize is definitely not persisted regardless of its value. I am using the trunk branch of lucene-solr here: https://github.com/apache/lucene-solr/commits/trunk\n\nWere you not able to reproduce this bug using the example I gave above? "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13614549",
            "date": "2013-03-26T21:06:11+0000",
            "content": "Nope. Also, there's a test that's been in there from the beginning that verifies that if the value for transientCacheSize is other than Integer.MAX_VALUE, it's persisted. If it's not present, the default is Integer.MAX_VALUE. Reading that value is a bit opaque, it's easy to overlook. \n\nBut in looking at the code, it was misleading at best. There's no way to change the value of transientCacheSize outside of having it in the solr.xml file in the <cores> tag, you can't dynamically change it. None of the create process for a core changes the value in the <cores> tag. Nor should it IMO.\n\nSo I don't understand what you're doing to test this. How are you changing the valur for transientCacheSize?\n\nBTW, all that is entirely separate from not being able to specify loadOnStartup and transient when creating cores, I've include that patch in what I'm working on now. "
        },
        {
            "author": "dfdeshom",
            "id": "comment-13614552",
            "date": "2013-03-26T21:15:08+0000",
            "content": "I created a solr.xml file that looks like this:\n\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<solr persistent=\"true\">\n  <cores transientCacheSize=\"21\" defaultCoreName=\"collection1\" adminPath=\"/admin/cores\" zkClientTimeout=\"${zkClientTimeout:15000}\" hostPort=\"8983\" hostContext=\"solr\">\n    <core name=\"collection1\" collection=\"collection1\"/>\n  </cores>\n</solr>\n\n\n\nI started solr: java -jar start.jar\n\nI issued a command to create another core:\n\n curl \"http://localhost:8983/solr/admin/cores?action=create&instanceDir=collection1&name=tmp5\"\n\n\nI opened the modified solr.xml file. It contained the newly-created core, but transientCacheSize was not present anymore. I don't think transientCacheSize should be modifiable by the http api either, I just don't think it should swallow it. Ideally, it should work as you said, but it's not for me.\n "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13614589",
            "date": "2013-03-26T21:51:47+0000",
            "content": "OK, I'll give it a shot with those instructions..... "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13614774",
            "date": "2013-03-27T01:05:58+0000",
            "content": "Oh my goodness lookit that. It fails. Thanks for the instructions!\n\nBTW, you're in a heap o' trouble with that new core definition, it'll try to use the same index as \"collection1\" with disastrous results I'd expect unless you specify a distinct data dir.\n\nOK, now that I can reproduce this I'll fix it as part of SOLR-4615, thanks again! "
        },
        {
            "author": "dfdeshom",
            "id": "comment-13615432",
            "date": "2013-03-27T16:09:21+0000",
            "content": "Great! I was starting to think something was wrong with my setup. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13615482",
            "date": "2013-03-27T16:53:13+0000",
            "content": "bq: Great! I was starting to think something was wrong with my setup.\n\nNope, just something wrong with the tests I wrote. There are some special cases that are only encountered through the test suite, and those paths were the ones exercised by the unit tests. The path through those persisted the transientCacheSize just fine. But the real-world path didn't.\n\nThere'll be a discussion on the dev list Real Soon Now <G>...\n\nAgain many thanks for pointing this out, we need as many eyes on this code as possible. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13619382",
            "date": "2013-04-02T00:51:05+0000",
            "content": "Fixed in SOLR-4615 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13654330",
            "date": "2013-05-10T10:34:48+0000",
            "content": "Closed after release. "
        }
    ]
}