{
    "id": "LUCENE-4477",
    "title": "Boolean query composed of spanqueries can return ArrayIndexOutOfBoundsException if one of the subqueries doesn't have a match",
    "details": {
        "components": [
            "core/search"
        ],
        "fix_versions": [
            "4.0-BETA"
        ],
        "affect_versions": "4.0-BETA",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Duplicate",
        "status": "Closed"
    },
    "description": "When building a boolean query of two spanqueryies, if one of the spanqueries does not have a hit, an ArrayIndexOutOfBoundsException is thrown.\n\nThis does not happen when building a boolean query of two TermQuery(ies), nor does it happen if all of the terms have a hit.\n\n\n\t@Test\n\tpublic void testBooleanSpanQuery() {\n\t\tboolean failed = false;\n\t\tint hits = 0;\n\t\ttry{\n\t\t\tCharArraySet stops = CharArraySet.EMPTY_SET;\n\t\t\tAnalyzer indexerAnalyzer = new StandardAnalyzer(LuceneProjectVersion.LUCENE_VERSION, stops);\n\t\t\tDirectory directory = new RAMDirectory();\n\n\t\t\tIndexWriterConfig config = new IndexWriterConfig(LuceneProjectVersion.LUCENE_VERSION, indexerAnalyzer);\n\t\t\tIndexWriter writer = new IndexWriter(directory, config);\n\t\t\tString FIELD = \"content\";\n\t\t\tDocument d = new Document();\n\t\t\td.add(new TextField(FIELD, \"clockwork orange\", Field.Store.YES));\n\t\t\twriter.addDocument(d);\n\t\t\twriter.close();\n\n\t\t\tIndexReader indexReader = DirectoryReader.open(directory);\n\t\t\tIndexSearcher searcher = new IndexSearcher(indexReader);\n\n\t\t\tBooleanQuery query = new BooleanQuery();\n\t\t\tSpanQuery sq1 = new SpanTermQuery(new Term(FIELD, \"clockwork\"));\n\t\t\tSpanQuery sq2 = new SpanTermQuery(new Term(FIELD, \"clckwork\"));\n\t\t\tquery.add(sq1, BooleanClause.Occur.SHOULD);\n\t\t\tquery.add(sq2, BooleanClause.Occur.SHOULD);\n\t\t\tTopScoreDocCollector collector = TopScoreDocCollector.create(1000, true);\n\t\t\tsearcher.search(query, collector);\n\t\t\thits = collector.topDocs().scoreDocs.length;\n\t\t\tfor (ScoreDoc scoreDoc : collector.topDocs().scoreDocs)\n{\n\t\t\t\tSystem.out.println(scoreDoc.doc);\n\t\t\t}\n\t\t} catch (java.lang.ArrayIndexOutOfBoundsException e)\n{\n\t\t\tfailed = true;\n\t\t}\n catch (IOException e)\n{\n\t\t\n\t\t\te.printStackTrace();\n\t\t}\n\t\tassertEquals(\"Bug in boolean query composed of span queries\", failed, false);\n\t\tassertEquals(\"Bug in boolean query composed of span queries\", hits, 1);\n\t}",
    "attachments": {
        "LUCENE-4477.patch": "https://issues.apache.org/jira/secure/attachment/12548788/LUCENE-4477.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-10-11T18:05:03+0000",
            "content": "Maybe try the patch on LUCENE-4401 ? I'm on the phone but it might be the same bug (fixed in the final release: coming out tomorrow) ",
            "author": "Robert Muir",
            "id": "comment-13474377"
        },
        {
            "date": "2012-10-11T18:22:59+0000",
            "content": "This test passes now on trunk (I stuffed it into analysis module...). ",
            "author": "Michael McCandless",
            "id": "comment-13474405"
        },
        {
            "date": "2012-10-11T20:23:30+0000",
            "content": "Dup of LUCENE-4401, but I committed this nice test case (thanks Timothy!). ",
            "author": "Michael McCandless",
            "id": "comment-13474480"
        },
        {
            "date": "2013-03-22T16:26:44+0000",
            "content": "[branch_4x commit] Michael McCandless\nhttp://svn.apache.org/viewvc?view=revision&revision=1397323\n\nLUCENE-4477/LUCENE-4401: remove dup test ",
            "author": "Commit Tag Bot",
            "id": "comment-13610683"
        },
        {
            "date": "2013-03-22T16:26:54+0000",
            "content": "[branch_4x commit] Michael McCandless\nhttp://svn.apache.org/viewvc?view=revision&revision=1397284\n\nLUCENE-4477/LUCENE-4401: add test case ",
            "author": "Commit Tag Bot",
            "id": "comment-13610686"
        }
    ]
}