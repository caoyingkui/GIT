{
    "id": "LUCENE-1553",
    "title": "ConcurrentScheduleManager.addMyself() has wrong inted",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "2.9"
        ],
        "affect_versions": "2.4",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "This method has the wrong index for the 'size' variable, I think it should b allInstances.size.\n\n\nprivate void addMyself() {\n    synchronized(allInstances) {\n      final int size=0;\n      int upto = 0;\n      for(int i=0;i<size;i++) {\n        final ConcurrentMergeScheduler other = (ConcurrentMergeScheduler) allInstances.get(i);\n        if (!(other.closed && 0 == other.mergeThreadCount()))\n          // Keep this one for now: it still has threads or\n          // may spawn new threads\n          allInstances.set(upto++, other);\n      }\n      allInstances.subList(upto, allInstances.size()).clear();\n      allInstances.add(this);\n    }\n  }",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2009-03-05T09:53:59+0000",
            "content": "Good catch, thanks Scott!  I'll commit shortly.\n\nThis is only used by unit tests, to ensure that a test fails whenever ConcurrentMergeScheduler hits an unhandled exception. ",
            "author": "Michael McCandless",
            "id": "comment-12679137"
        }
    ]
}