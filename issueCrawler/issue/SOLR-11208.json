{
    "id": "SOLR-11208",
    "title": "Usage SynchronousQueue in Executors prevent large scale operations",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "6.6",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "I am not sure where to start with this one.\n\nI tried to post this already on the mailing list: https://mail-archives.apache.org/mod_mbox/lucene-solr-user/201708.mbox/%3c48C49426-33A2-4D79-AE26-A4515B8F834E@gmail.com%3e\n\nIn short: the usage of a SynchronousQueue as the workQeue prevents more tasks than max threads.\n\nFor example, taken from OverseerCollectionMessageHandler:\n\n\n\n  ExecutorService tpe = new ExecutorUtil.MDCAwareThreadPoolExecutor(5, 10, 0L, TimeUnit.MILLISECONDS,\n      new SynchronousQueue<>(),\n      new DefaultSolrThreadFactory(\"OverseerCollectionMessageHandlerThreadFactory\"));\n\n\n\nThis Executor is used when doing a REPLACENODE (= ADDREPLICA) command. When the node has more than 10 collections this will fail with the mentioned java.util.concurrent.RejectedExecutionException.\n\nI am also not sure how to fix this. Just replacing the queue with a different implementation feels wrong to me or could cause unwanted side behaviour.\n\nThanks",
    "attachments": {},
    "issue_links": {},
    "comments": []
}