{
    "id": "SOLR-10733",
    "title": "Rule-based Replica Placement not working correct",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "Rules",
            "SolrCloud"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "6.5.1",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "A setup of a SolrCloud with 6 nodes on 3 server e.g.:\n\nserver1:8983 , server1:7574\nserver2:8983 , server2:7574\nserver3:8983 , server3:7574\n\n\nand a command for creating a new collection with rule:\n\nhttp://localhost:8983/solr/admin/collections?action=CREATE&name=boss&\ncollection.configName=boss_configs&numShards=3&replicationFactor=2&\nmaxShardsPerNode=1&rule=shard:shard1,replica:<2,port:8983\n\n\nshould create a collection with 3 shards and least a shard1 with two different nodes running on port 8983.\n\nshard1 --> server_x:8983 ,  server_y:8983\n\n\n\nA even more restrictive rule like\n\nrule=shard:shard1,replica:<2,port:8983&rule=shard:shard3,replica:<2,port:7574\n\n\nshould also resolve to a solution because if it really checks all permutations accross shards/replicas/ports and available nodes it should be able to solve this.",
    "attachments": {
        "SOLR-10733.patch": "https://issues.apache.org/jira/secure/attachment/12870062/SOLR-10733.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-05-26T12:38:35+0000",
            "content": "I have added a \"testPlacement4()\" to RuleEngineTest.java to make more clear where the problem is.\nFirst part in \"testPlacement4()\" has \"rule=shard:shard1,port:49961\" and will pass.\nSecond part in \"testPlacement4()\" has \"rule=shard:shard1,replica:<2,port:49961\" and should, from my point of view, also pass.\nBut it doesn't. ",
            "author": "Bernd Fehling",
            "id": "comment-16026221"
        },
        {
            "date": "2017-05-31T14:47:56+0000",
            "content": "A more complex \"testPlacement4()\" to point out the problem but also the fix to solve this.\nIt passes all previous RuleEngine tests and also the new one. ",
            "author": "Bernd Fehling",
            "id": "comment-16031266"
        },
        {
            "date": "2017-06-01T06:38:37+0000",
            "content": "Bernd Fehling The rule shard:shard1,replica:<2,port:8983 means the no:of replicas in port 8983 could be zero\n\nI guess the rule that you wanted to have is shard:shard1,replica:>0,port:8983 ",
            "author": "Noble Paul",
            "id": "comment-16032537"
        },
        {
            "date": "2017-06-01T07:44:51+0000",
            "content": "Some explanation about Rule.java / ReplicaAssigner.java and what this patch is doing.\n\nAfter running all parts many many times to understand Rule and ReplicaAssigner this is roughly how it works.\n\n\tnumShards and replicationFactor build a sorted list of Positions e.g. [shard1:0,shard2:0,shard1:1,shard2:1,...]\n\tthere is a sorted list of LiveNodes\n\tthere is a list with all Rules\n\n\n\nIt selects the first shard from Positions list, takes the first node from LiveNodes list and checks the node with his tags against all Rules.\n\n\tif the selected node with his tags doesn't pass all Rules it is skipped and the next node is selected\n\tif the selected node with his tags passes all Rules it is assigned to the selected shard\nThis continues until all shards with their replicas are filled.\n\n\n\nProblem 1)\nIf the selected node under test doesn't pass the Rules it is simply skipped.\nIf we have a rule without wildcards then the node with his tags (port, node,rack,...) might fail for this shard but could later on pass the Rules if tested against other Positions. But this will never happen because the list of LiveNodes has always the same sequence.\nSolution here, move the node in the list of LiveNodes to the end of the list so it might match later on.\n\nProblem 2)\nIt is possible (as in testPlacement2) that you have many nodes but because of restrictive Rules you can only assign 2 or 3 of the nodes from LiveNodes to shards. You will run out of nodes passing the Rules and all nodes failing the Rules end up at the end of LiveNodes list. This is solved by checking the position in LiveNodes against the number of nodes in LiveNodes. If position is higher it will start from beginning of LiveNodes.\n\nProblem 3)\nIf you want to have only 1 replica the rule will be \"replica:<2\" (as stated in \"Rule-based Replica Placement\" of Solr Documentation). \nBecause each node is also counted as replica it leads to the situation where a shard has already assigned one node.\nFor the next node the test against Rules will be \"is the number of replicas less than 2\" which is positive and pass. So the node will be assigned to the shard. \nAt the end of all assignments there is a final testing which will verify the result against all Rules.\nBut now the same test which passed before \"is the number of replicas less than 2\" will fail because this test is done after the assignment.\nThis is solved by decreasing the \"NumberOfNodesWithSameTagVal\" by one during the phase of VERIFY. ",
            "author": "Bernd Fehling",
            "id": "comment-16032590"
        },
        {
            "date": "2017-06-01T07:51:54+0000",
            "content": "Noble Paul No I wanted to have exactly 1 replica with port 8983 assigned to shard1 and not \"one or more\". ",
            "author": "Bernd Fehling",
            "id": "comment-16032602"
        },
        {
            "date": "2017-06-01T08:00:06+0000",
            "content": "So the rule should be replica:1,shard:shard1,port:8983 , right? ",
            "author": "Noble Paul",
            "id": "comment-16032614"
        },
        {
            "date": "2017-06-01T08:13:35+0000",
            "content": "Yes it should be, but due to \"Problem 3\" which I described above it will never get there.\nBecause during assign phase the test will be if the node under test will pass the Rules for shard1 with port 8983 which already has exactly one node assigned. So it will never get there because to the beginning the number is 0 \"zero\".\nThis is a logical error with \"less than\" and the Rules (first before assignment, second after assignment (verify)).\n\nThis was already \"implemented\" in the code and I ran into it and fixed it also. ",
            "author": "Bernd Fehling",
            "id": "comment-16032622"
        },
        {
            "date": "2017-06-02T05:36:48+0000",
            "content": "Anyway, we are getting rid of the rule based replica placement in favor the new Policy framework (SOLR-9735). This will be there in 7.0 release about to happen anytime\n\nHowever we will fix this before the next release ",
            "author": "Noble Paul",
            "id": "comment-16034170"
        },
        {
            "date": "2017-06-02T07:07:03+0000",
            "content": "This is very very bad.\nOn 23/May/2017 you wrote on solr user list \"... if it doesn't , it's a bug. Please open a ticket...\".\n\n\tI opened a ticket\n\twrote a test case\n\tran many, many times with debugger through the code\n\tpresented a working patch after one week digging through code which also removed an error\nAnd the response is \"Anyway, we are getting rid of it\" .\n\n\n\nThis is not the acknowledgment I usually get when trying to support projects and solve issues.\nI wish you would have pointed out SOLR-9735 earlier and not after one week work when coming up with a solution.\nCheers! ",
            "author": "Bernd Fehling",
            "id": "comment-16034249"
        },
        {
            "date": "2017-06-02T08:30:17+0000",
            "content": "Bernd Fehling Apologies for the miscommunication and I was in a hurry\n\nThis will be fixed in the next release and your work is useful. \n\n\"And the response is \"Anyway, we are getting rid of it\" .\n\nWe are \"deprecating it\" , but this will continue to work for anyone using the old rules. So, if you plan to use this feature with \"rules\" it's a good fix. The policy framework is still not merged into master and it's not a good idea to rely on an unreleased feature until it's released\n\napologies, again ",
            "author": "Noble Paul",
            "id": "comment-16034326"
        },
        {
            "date": "2017-06-06T08:56:53+0000",
            "content": "The test seems be wrong\n\nIf I'm right, the following asserts ensure that all replicas of shard1 falls on nodes with port 49961 and all replicas of shard3 fall in nodes with port 49955\nBut the rule is not stating that \n\n[{'shard':'shard1','replica':'<2','port':'49961'},\n{'shard':'shard3','replica':'<2','port':'49955'}]\n\n\n\n for (Position key : mapping.keySet()) {\n      if(key.toString().contains(\"shard1\")) {\n        assertTrue(mapping.get(key).contains(\"49961\"));\n      }\n    }\n    for (Position key : mapping.keySet()) {\n      if(key.toString().contains(\"shard3\")) {\n        assertTrue(mapping.get(key).contains(\"49955\"));\n      }\n    }\n\n ",
            "author": "Noble Paul",
            "id": "comment-16038413"
        },
        {
            "date": "2017-06-06T12:49:07+0000",
            "content": "Actually I can't follow you. There are two rules and six nodes, 3 nodes with port 49961 and 3 nodes with port 49955.\nWhat is your concern?\nAre the test failing on your system? ",
            "author": "Bernd Fehling",
            "id": "comment-16038811"
        },
        {
            "date": "2017-06-06T12:56:58+0000",
            "content": "The tests pass. But, the rules do not match with what the test case is testing for. The test is wrong ",
            "author": "Noble Paul",
            "id": "comment-16038829"
        },
        {
            "date": "2017-06-06T12:59:44+0000",
            "content": "replica:<2,shard:shard 1,port:8983\n\nMeans there can be a maximum of 1 replica in the node with port 8983. The test is expecting 2 replicas in port 8983 ",
            "author": "Noble Paul",
            "id": "comment-16038833"
        },
        {
            "date": "2017-06-06T13:16:10+0000",
            "content": "Yes, because who ever implemented \"Rule-based Replica Assignment\" irgnored the fact that a node is also a replica.\nThe \"inventor\" was obviously thinking he has a node and then a replica of that node, but ignoring that a node also counts as replica.\nThis is how the whole code about this \"Rule-based Replica Assignment\" is written. I just \"enhanced\" that wrong logic.\nBut if you wish I can test for at least one node with port 49961 on shard1 and one with port 49955 on shard3. ",
            "author": "Bernd Fehling",
            "id": "comment-16038861"
        },
        {
            "date": "2017-06-06T13:20:17+0000",
            "content": "I plead guilty of writing this.\n\nBTW a replica is not a node. A replica is a physical copy of a shard. It has nothing to do with a node. Please get familiar with the terminology used in solr ",
            "author": "Noble Paul",
            "id": "comment-16038868"
        },
        {
            "date": "2017-06-06T13:35:51+0000",
            "content": "OK, sorry, I was just trying to explaining how the \"counting\" of replicas in the code is written.\nThe code says:\n\n\tyou have a number of shards (like slots, buckets or whatelse)\n\tyou have a counter for replicas\n\tyou have a number of nodes (e.g. with \"attributes\" like port, rack, ...)\n\tyou have rules\nIt selects the first slot of available shards, takes the first node from the list of nodes, checks the node aginst all rules and, if all rules pass, assigns the node to that shard slot and also increases the replica counter for that shard.\nThis behaviour of the code makes replica counter a node counter for the shard.\nOr not?\n\n ",
            "author": "Bernd Fehling",
            "id": "comment-16038898"
        },
        {
            "date": "2017-06-06T18:20:09+0000",
            "content": "I'm not even talking about the code. I'm saying that the test case is not correct. ",
            "author": "Noble Paul",
            "id": "comment-16039389"
        },
        {
            "date": "2017-06-07T10:13:26+0000",
            "content": "Ahhh, I think I know what you mean. \nI only check for shard1 with port 49961 and shard3 with port 49955 and not also that replica is less than 2 ?\n ",
            "author": "Bernd Fehling",
            "id": "comment-16040658"
        },
        {
            "date": "2017-06-07T12:09:53+0000",
            "content": "OK, two versions for testing the result of the rules, which one do you accept/prefer?\n\nversion1)\n\n    int shard1_replica_count = 0;\n    for (Position key : mapping.keySet()) {\n      if(key.toString().contains(\"shard1\")) {\n        if(mapping.get(key).contains(\"49961\")) {\n          shard1_replica_count += key.index;\n        }\n        assertTrue(mapping.get(key).contains(\"49961\"));\n      }\n    }\n    assertTrue(shard1_replica_count < 2);\n    int shard3_replica_count = 0;\n    for (Position key : mapping.keySet()) {\n      if(key.toString().contains(\"shard3\")) {\n        if(mapping.get(key).contains(\"49955\")) {\n          shard3_replica_count += key.index;\n        }\n        assertTrue(mapping.get(key).contains(\"49955\"));\n      }\n    }\n    assertTrue(shard3_replica_count < 2);\n\n\n\nversion 2)\n\n    int shard1_replica_count = 0;\n    for (Position key : mapping.keySet()) {\n      if(key.toString().contains(\"shard1\")) {\n        shard1_replica_count += key.index;\n        assertTrue(mapping.get(key).contains(\"49961\"));\n      }\n    }\n    assertTrue(shard1_replica_count < 2);\n    int shard3_replica_count = 0;\n    for (Position key : mapping.keySet()) {\n      if(key.toString().contains(\"shard3\")) {\n        shard3_replica_count += key.index;\n        assertTrue(mapping.get(key).contains(\"49955\"));\n      }\n    }\n    assertTrue(shard3_replica_count < 2);\n\n ",
            "author": "Bernd Fehling",
            "id": "comment-16040769"
        },
        {
            "date": "2017-06-07T12:54:24+0000",
            "content": "rules are still same? replica:<2,shard:shard1,port:49961 and  replica:<2,shard:shard3,port: 49955   ? ",
            "author": "Noble Paul",
            "id": "comment-16040823"
        },
        {
            "date": "2017-06-08T06:38:39+0000",
            "content": " Sorry, I can't follow you. Can you please write in full sentences what your concern is?\n ",
            "author": "Bernd Fehling",
            "id": "comment-16042287"
        },
        {
            "date": "2017-12-12T05:04:38+0000",
            "content": "they all seem to be about replica placement rules being incorrect. ",
            "author": "Erick Erickson",
            "id": "comment-16287110"
        },
        {
            "date": "2017-12-12T05:10:39+0000",
            "content": "In the same ballpark, even though 11005 is about new policy. ",
            "author": "Erick Erickson",
            "id": "comment-16287118"
        }
    ]
}