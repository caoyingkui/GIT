{
    "id": "SOLR-2166",
    "title": "termvector component has strange syntax",
    "details": {
        "affect_versions": "None",
        "status": "Open",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "The termvector  response format could really be improved.",
    "attachments": {
        "SOLR-2166.diff": "https://issues.apache.org/jira/secure/attachment/12523727/SOLR-2166.diff",
        "workaround-managled-SOLR-2166.diff": "https://issues.apache.org/jira/secure/attachment/12523730/workaround-managled-SOLR-2166.diff"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Yonik Seeley",
            "id": "comment-12921361",
            "date": "2010-10-15T14:03:25+0000",
            "content": "Here's one example snippet:\n\n\n        \"titl\":{\n          \"tf\":2,\n          \"offsets\":{\n            \"start\":10,\n            \"end\":15,\n            \"start\":28,\n            \"end\":33},\n          \"positions\":{\n            \"position\":0,\n            \"position\":2},\n          \"df\":1,\n          \"tf-idf\":2.0}},\n\n\n\nLooks like offsets should be an array of int - start/end pairs, and positions should just be an array of int.\nAlso, the \"doc-0\" label is strange:\n\n  \"termVectors\":{\n    \"doc-0\":{\n      \"uniqueKey\":\"0\",\n      \"test_basictv\":{\n\n\n\nPerhaps termVectors should just be an array, and the internal lucene docid should be just another key/value (if we really want to keep that). "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12921394",
            "date": "2010-10-15T15:00:22+0000",
            "content": "See SOLR-651 for much discussion around it.  I've always felt it was overly verbose, but I recall the general consensus at the time was to reuse Solr's existing capabilities (I don't recall us being able to just an array, but perhaps I missed it) instead of having a much more compact representation.\n\nAt any rate, +1 for a less verbose format. "
        },
        {
            "author": "Gerhard Killesreiter",
            "id": "comment-13259269",
            "date": "2012-04-22T21:21:43+0000",
            "content": "IMO this is partially a bug: If you use json_decode on the current structure, it will discard all entries from the positions array besides the last one. json_decode is correct to do this: The keys in an array shouldn't be all identical.\n\nAny pointers on how to fix this are appreciated. "
        },
        {
            "author": "Peter Wolanin",
            "id": "comment-13259304",
            "date": "2012-04-22T23:35:36+0000",
            "content": "Here's a patch rolled against Solr 3.5 which I think makes the format into something more compact and that doesn't fail on JSON parsing.\n\nBEFORE:\n\n  \"termVectors\":{\n    \"doc-49\":{\n      \"uniqueKey\":\"evfbih/node/89\",\n      \"content\":{\n        \"abba\":{\n          \"positions\":{\n            \"position\":49}},\n        \"abigo\":{\n          \"positions\":{\n            \"position\":5,\n            \"position\":72}},\n\n\n\n\nAFTER:\n\n\n  \"termVectors\":{\n    \"doc-49\":{\n      \"uniqueKey\":\"evfbih/node/89\",\n      \"content\":{\n        \"abba\":{\n          \"positions\":[49]},\n        \"abigo\":{\n          \"positions\":[5,\n            72]},\n\n "
        },
        {
            "author": "Peter Wolanin",
            "id": "comment-13259317",
            "date": "2012-04-23T00:17:06+0000",
            "content": "As a work-around one could enabled access to the unused writeNamedListAsMapMangled() function which prevents writing duplicate keys.  For this work-around patch, use:\n\njson.nl=mapm instead of json.nl=map\n\nto see the behavior AFTER:\n\n  \"termVectors\":{\n    \"doc-49\":{\n      \"uniqueKey\":\"evfbih/node/89\",\n      \"content\":{\n        \"abba\":{\n          \"positions\":{\n            \"position\":49}},\n        \"abigo\":{\n          \"positions\":{\n            \"position\":5,\n            \"position_1\":72}},\n\n "
        },
        {
            "author": "Walter Underwood",
            "id": "comment-13590822",
            "date": "2013-03-01T18:51:09+0000",
            "content": "JSON does not require that keys are unique, but the ECMA spec says to only keep the last value.\n\nBecause different JSON parsers interpret duplicate keys differently, this seems like something to avoid.\n\nFor more details, see: http://www.tbray.org/ongoing/When/201x/2013/02/21/JSON-Lesson "
        }
    ]
}