{
    "id": "SOLR-3739",
    "title": "ExtendedDismaxQParser (edismax) does not obey q.op for tokens split by an analyzer",
    "details": {
        "affect_versions": "3.6.1,                                            4.0-BETA",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "query parsers"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "If a field type analyzer splits a query token into multiple terms when the classic Lucene query parser is called from the edismax query parser, the terms will always be combined with the \"OR\" operator even if the user has explicitly set the default query operator to \"AND\" with the \"q.op\" request parameter.\n\nThis is because edismax only simulates the default operator by forcing \"mm\" (minMatch) to 100% for the top-level BooleanQuery alone and never sets the default query operator when it invokes the classic Lucene Query parser which in turn is performing the term analysis and generation of the nested Boolean Query for the sub-terms.\n\nOne solution is for edismax to always set the default query operator when calling the classic Lucene query parser, or at least when q.op=AND.\n\nWhether to also set the Lucene default query operator to AND when mm=100% is another possibility, but subject to debate. It is asserted that mm=100% is only supposed to apply to the top-level query and not to any nested (parenthesized or split term) queries, but I suggest that failing to treat mm=100% as if q.op=AND will lead to more confusion and surprise for non-expert users than doing so. Note that there is no current API for setting the default minMatch for the classic Lucene query parser, and even if there were, the question of whether it should only apply to the top-level query would still arise.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13451186",
            "date": "2012-09-08T00:36:53+0000",
            "content": "removing fixVersion=4.0 since there is no evidence that anyone is currently working on this issue.  (this can certainly be revisited if volunteers step forward)\n\n "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-16430020",
            "date": "2018-04-09T04:38:36+0000",
            "content": "Can this be closed? There's been a lot of changes since this was opened. "
        }
    ]
}