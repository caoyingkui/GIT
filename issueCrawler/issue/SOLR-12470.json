{
    "id": "SOLR-12470",
    "title": "Search Rate Trigger created more than 3 replicas",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "AutoScaling"
        ],
        "type": "Bug",
        "fix_versions": [
            "7.5"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Here's the trigger that I created . At this point the\u00a0collection\u00a0was one shard and one replica ( on node3 )\n\ncurl -X POST -H 'Content-type:application/json' --data-binary '{\n\"set-trigger\": {\n\"name\" : \"search_rate_trigger\",\n\"event\" : \"searchRate\",\n\"collection\" : \"test_rate_trigger\",\n\"rate\" : 1.0,\n\"waitFor\" : \"1m\",\n\"enabled\" : true,\n\"actions\" : [\n{\n\"name\" : \"compute_plan\",\n\"class\": \"solr.ComputePlanAction\"\n},\n{\n\"name\" : \"execute_plan\",\n\"class\": \"solr.ExecutePlanAction\"\n}\n]\n}\n}' http://localhost:8983/solr/admin/autoscaling\n\n\u00a0\n\nI also had a trigger listener setup as I was testing the listener feature\n\ncurl -X POST -H 'Content-type:application/json' --data-binary '{\n\"set-listener\": {\n\"name\": \"search_rate_listener\",\n\"trigger\": \"search_rate_trigger\",\n\"stage\": [\"STARTED\", \"ABORTED\", \"SUCCEEDED\", \"FAILED\"],\n\"class\": \"solr.SystemLogListener\"\n}\n}' http://localhost:8983/solr/admin/autoscaling\n\n\u00a0\n\nI ran a script to fire queries at every 100ms . The index didn't have any docs so it's a simple match all query\n\nwhile [ 1 ]\ndo\ncurl -s \"http://localhost:8984/solr/test_rate_trigger/select/?q=*:*\" > /dev/null\nsleep .1\ndone\n\n\nAfter a few minutes I see 4 replicas being created.\n\nAttaching logs from all 4 nodes. It should be fairly easy to reproduce with the above mentioned steps\n\nAlso attaching all the docs from the .system collection for reference\n\nHere's another interesting this I noticed. I re-created the setup but this time removed the execute_plan part\n\nNow every 1 min the compute plan action tries to create 3 replicas . Why I found this interesting is that it was trying to create two replicas on the same node\nDoes this look like a separate bug?\n\nINFO - 2018-06-08 03:41:32.586; [ ] org.apache.solr.servlet.HttpSolrCall; [admin] webapp=null path=/admin/metrics params={wt=javabin&version=2&key=solr.jvm:os.processCpuLoad&key=solr.node:CONTAINER.fs.coreRoot.usableSpace&key=solr.jvm:os.systemLoadAverage&key=solr.jvm:memory.heap.used} status=0 QTime=0\nINFO - 2018-06-08 03:41:40.909; [ ] org.apache.solr.servlet.HttpSolrCall; [admin] webapp=null path=/admin/metrics params={prefix=CONTAINER.fs.usableSpace,CORE.coreName&wt=javabin&version=2&group=solr.node,solr.core} status=0 QTime=1\nINFO - 2018-06-08 03:41:40.932; [ ] org.apache.solr.cloud.autoscaling.ComputePlanAction; Computed Plan: action=ADDREPLICA&collection=test_rate_trigger&shard=shard1&node=127.94.0.1:8984_solr&type=NRT\nINFO - 2018-06-08 03:41:40.933; [ ] org.apache.solr.cloud.autoscaling.ComputePlanAction; Computed Plan: action=ADDREPLICA&collection=test_rate_trigger&shard=shard1&node=127.94.0.1:8983_solr&type=NRT\nINFO - 2018-06-08 03:41:40.934; [ ] org.apache.solr.cloud.autoscaling.ComputePlanAction; Computed Plan: action=ADDREPLICA&collection=test_rate_trigger&shard=shard1&node=127.94.0.1:8983_solr&type=NRT\nINFO - 2018-06-08 03:41:40.934; [ ] org.apache.solr.client.solrj.cloud.autoscaling.PolicyHelper; returnSession, curr-time 9184331 sessionWrapper.createTime 9184324085271, this.sessionWrapper.createTime 9184324085271\nINFO - 2018-06-08 03:42:32.604; [ ] org.apache.solr.servlet.HttpSolrCall; [admin] webapp=null path=/admin/metrics params={wt=javabin&version=2&key=solr.jvm:os.processCpuLoad&key=solr.node:CONTAINER.fs.coreRoot.usableSpace&key=solr.jvm:os.systemLoadAverage&key=solr.jvm:memory.heap.used} status=0 QTime=0\nINFO - 2018-06-08 03:42:41.525; [ ] org.apache.solr.servlet.HttpSolrCall; [admin] webapp=null path=/admin/metrics params={prefix=CONTAINER.fs.usableSpace,CORE.coreName&wt=javabin&version=2&group=solr.node,solr.core} status=0 QTime=0\nINFO - 2018-06-08 03:42:41.559; [ ] org.apache.solr.cloud.autoscaling.ComputePlanAction; Computed Plan: action=ADDREPLICA&collection=test_rate_trigger&shard=shard1&node=127.94.0.1:8984_solr&type=NRT\nINFO - 2018-06-08 03:42:41.560; [ ] org.apache.solr.cloud.autoscaling.ComputePlanAction; Computed Plan: action=ADDREPLICA&collection=test_rate_trigger&shard=shard1&node=127.94.0.1:8983_solr&type=NRT\nINFO - 2018-06-08 03:42:41.560; [ ] org.apache.solr.cloud.autoscaling.ComputePlanAction; Computed Plan: action=ADDREPLICA&collection=test_rate_trigger&shard=shard1&node=127.94.0.1:8983_solr&type=NRT\nINFO - 2018-06-08 03:42:41.561; [ ] org.apache.solr.client.solrj.cloud.autoscaling.PolicyHelper; returnSession, curr-time 9244959 sessionWrapper.createTime 9244956725861, this.sessionWrapper.createTime 9244956725861\nINFO - 2018-06-08 03:43:32.622; [ ] org.apache.solr.servlet.HttpSolrCall; [admin] webapp=null path=/admin/metrics params={wt=javabin&version=2&key=solr.jvm:os.processCpuLoad&key=solr.node:CONTAINER.fs.coreRoot.usableSpace&key=solr.jvm:os.systemLoadAverage&key=solr.jvm:memory.heap.used} status=0 QTime=0\nINFO - 2018-06-08 03:43:42.158; [ ] org.apache.solr.servlet.HttpSolrCall; [admin] webapp=null path=/admin/metrics params={prefix=CONTAINER.fs.usableSpace,CORE.coreName&wt=javabin&version=2&group=solr.node,solr.core} status=0 QTime=1\nINFO - 2018-06-08 03:43:42.178; [ ] org.apache.solr.cloud.autoscaling.ComputePlanAction; Computed Plan: action=ADDREPLICA&collection=test_rate_trigger&shard=shard1&node=127.94.0.1:8984_solr&type=NRT\nINFO - 2018-06-08 03:43:42.180; [ ] org.apache.solr.cloud.autoscaling.ComputePlanAction; Computed Plan: action=ADDREPLICA&collection=test_rate_trigger&shard=shard1&node=127.94.0.1:8983_solr&type=NRT\nINFO - 2018-06-08 03:43:42.181; [ ] org.apache.solr.cloud.autoscaling.ComputePlanAction; Computed Plan: action=ADDREPLICA&collection=test_rate_trigger&shard=shard1&node=127.94.0.1:8983_solr&type=NRT\nINFO - 2018-06-08 03:43:42.181; [ ] org.apache.solr.client.solrj.cloud.autoscaling.PolicyHelper; returnSession, curr-time 9305581 sessionWrapper.createTime 9305577119413, this.sessionWrapper.createTime 9305577119413\nINFO - 2018-06-08 03:44:32.642; [ ] org.apache.solr.servlet.HttpSolrCall; [admin] webapp=null path=/admin/metrics params={wt=javabin&version=2&key=solr.jvm:os.processCpuLoad&key=solr.node:CONTAINER.fs.coreRoot.usableSpace&key=solr.jvm:os.systemLoadAverage&key=solr.jvm:memory.heap.used} status=0 QTime=0\nINFO - 2018-06-08 03:44:42.759; [ ] org.apache.solr.servlet.HttpSolrCall; [admin] webapp=null path=/admin/metrics params={prefix=CONTAINER.fs.usableSpace,CORE.coreName&wt=javabin&version=2&group=solr.node,solr.core} status=0 QTime=0\nINFO - 2018-06-08 03:44:42.778; [ ] org.apache.solr.cloud.autoscaling.ComputePlanAction; Computed Plan: action=ADDREPLICA&collection=test_rate_trigger&shard=shard1&node=127.94.0.1:8984_solr&type=NRT\nINFO - 2018-06-08 03:44:42.779; [ ] org.apache.solr.cloud.autoscaling.ComputePlanAction; Computed Plan: action=ADDREPLICA&collection=test_rate_trigger&shard=shard1&node=127.94.0.1:8983_solr&type=NRT\nINFO - 2018-06-08 03:44:42.779; [ ] org.apache.solr.cloud.autoscaling.ComputePlanAction; Computed Plan: action=ADDREPLICA&collection=test_rate_trigger&shard=shard1&node=127.94.0.1:8983_solr&type=NRT\nINFO - 2018-06-08 03:44:42.779; [ ] org.apache.solr.client.solrj.cloud.autoscaling.PolicyHelper; returnSession, curr-time 9366182 sessionWrapper.createTime 9366178796748, this.sessionWrapper.createTime 9366178796748\n\n\u00a0\n\nThirdly, for this above mentioned test I started observing the .system collection . Here is a query that I used to get the documents created from the first time the listener kicked in\n\nhttp://localhost:8983/solr/.system/select?fq=source_s:SystemLogListener&q=*:*&rows=4&sort=timestamp%20asc\n\nMy first expectation was that I'd see 3 docs but I saw 4 docs. Curious why it's 4 ( the docs are attached as 4_docs.json )\n\nMy intention here is to remove the system log listener with an http listener here I wanted to understand should I be looking out for 4 events or 3\nThe first reaction here is it's a minor bug hence I'm putting it as part of this jira\n\nHappy to break it up into smaller Jiras once I hear back if these are valid issues. This test was run against master",
    "attachments": {
        "bug_report.txt": "https://issues.apache.org/jira/secure/attachment/12927086/bug_report.txt",
        "system_docs.json": "https://issues.apache.org/jira/secure/attachment/12927089/system_docs.json",
        "multiple_replicas.zip": "https://issues.apache.org/jira/secure/attachment/12927088/multiple_replicas.zip",
        "4_docs.json": "https://issues.apache.org/jira/secure/attachment/12927085/4_docs.json",
        "graph_view.png": "https://issues.apache.org/jira/secure/attachment/12927087/graph_view.png"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-06-08T18:43:03+0000",
            "content": "I'll look into it more closely - a quick comment for now:\n\nMy first expectation was that I'd see 3 docs but I saw 4 docs. Curious why it's 4 ( the docs are attached as 4_docs.json )\n\nThese are STARTED and SUCCEEDED events produced by two listeners - your listener and the default one that is always created when a trigger is created. Admittedly there should be an event property that contains the listener name - it's impossible to figure out now which listener produced what event...\n\n2 replicas on the same node ... it could be caused by the cluster layout existing just before each operation, and the autoscaling policy? AddReplicaSuggester simulates how adding a replica affects number of cores and disk space on each node, and assigns replicas to nodes based on minimizing the violations. ",
            "author": "Andrzej Bialecki",
            "id": "comment-16506437"
        },
        {
            "date": "2018-08-07T15:12:36+0000",
            "content": "Another problem that I see in this configuration is that SearchRateTrigger monitors a 1-min average request rate. This means that the value of this metric will always significantly lag behind the current \"momentary\" request rate. Since waitFor in your configuration is also set to 1m it's quite probable that the changes that the trigger requested didn't have enough time to sufficiently lower the 1-min average to avoid tripping the threshold rate again - this time by a smaller margin, so the trigger requested 1 more replica to be added (it may request up to 3 if the rate is significantly exceeded).\n\nI'll update the Ref Guide to explain this situation and recommend that waitFor should be set to a multiple of the base change rate of the monitored metric. ",
            "author": "Andrzej Bialecki",
            "id": "comment-16571819"
        },
        {
            "date": "2018-08-07T16:29:32+0000",
            "content": "Another issue with this testing method: since you're using a simple curl command accessing always a single specific URL (as opposed to CloudSolrClient or another load-balancing client) then the search rate for this particular replica, as measured by QUERY./select.requestTimes:1minRate, will always stay constant no matter how many other replicas are added.\n\nThis means that the trigger will endlessly keep adding new replicas, because even after they are added the search rate never decreases... This is easy to reproduce by keeping the requestor process running for a long time - I stopped at 40 replicas \n\nI need to investigate how to fix the trigger to prevent situations like this. ",
            "author": "Andrzej Bialecki",
            "id": "comment-16571933"
        },
        {
            "date": "2018-08-14T18:41:58+0000",
            "content": "Commit 8dd704ef78e5a2c3bf7c3d206d44a2d971c758fe in lucene-solr's branch refs/heads/master from Andrzej Bialecki\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8dd704e ]\n\nSOLR-12470: Search Rate Trigger multiple bug fixes, improvements and documentation updates. ",
            "author": "ASF subversion and git services",
            "id": "comment-16580244"
        },
        {
            "date": "2018-08-14T19:27:30+0000",
            "content": "Commit 16ede5192bf2d8a62974f5c62e3baf94c0d4b3fd in lucene-solr's branch refs/heads/branch_7x from Andrzej Bialecki\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=16ede51 ]\n\nSOLR-12470: Search Rate Trigger multiple bug fixes, improvements and documentation updates. ",
            "author": "ASF subversion and git services",
            "id": "comment-16580317"
        }
    ]
}