{
    "id": "SOLR-9344",
    "title": "BasicAuthIntegrationTest test failures on update",
    "details": {
        "components": [
            "security",
            "Tests"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.3"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "I've seen this a number of times while developing SOLR-9200 and SOLR-9324; there's also a public failure here: http://jenkins.thetaphi.de/job/Lucene-Solr-master-Linux/17372/\n\n\norg.apache.solr.client.solrj.impl.CloudSolrClient$RouteException: IOException occured when talking to server at: http://127.0.0.1:45882/solr/testSolrCloudCollection_shard1_replica2\n\tat __randomizedtesting.SeedInfo.seed([99BB0D0378978FA8:A463A32F4079D1D8]:0)\n\tat org.apache.solr.client.solrj.impl.CloudSolrClient.directUpdate(CloudSolrClient.java:760)\n\tat org.apache.solr.client.solrj.impl.CloudSolrClient.sendRequest(CloudSolrClient.java:1172)\n\tat org.apache.solr.client.solrj.impl.CloudSolrClient.requestWithRetryOnStaleState(CloudSolrClient.java:1061)\n\tat org.apache.solr.client.solrj.impl.CloudSolrClient.request(CloudSolrClient.java:997)\n\tat org.apache.solr.client.solrj.SolrClient.request(SolrClient.java:1219)\n\tat org.apache.solr.security.BasicAuthIntegrationTest.doExtraTests(BasicAuthIntegrationTest.java:193)\n\tat org.apache.solr.cloud.TestMiniSolrCloudClusterBase.testCollectionCreateSearchDelete(TestMiniSolrCloudClusterBase.java:196)\n\tat org.apache.solr.cloud.TestMiniSolrCloudClusterBase.testBasics(TestMiniSolrCloudClusterBase.java:79)\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(java.base@9-ea/Native Method)\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(java.base@9-ea/NativeMethodAccessorImpl.java:62)\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(java.base@9-ea/DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(java.base@9-ea/Method.java:533)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\n\tat com.carrotsearch.randomizedtesting.rules.SystemPropertiesRestoreRule$1.evaluate(SystemPropertiesRestoreRule.java:57)\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.rules.SystemPropertiesRestoreRule$1.evaluate(SystemPropertiesRestoreRule.java:57)\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\n\tat java.lang.Thread.run(java.base@9-ea/Thread.java:843)\nCaused by: org.apache.solr.client.solrj.SolrServerException: IOException occured when talking to server at: http://127.0.0.1:45882/solr/testSolrCloudCollection_shard1_replica2\n\tat org.apache.solr.client.solrj.impl.HttpSolrClient.executeMethod(HttpSolrClient.java:620)\n\tat org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:259)\n\tat org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:248)\n\tat org.apache.solr.client.solrj.impl.LBHttpSolrClient.doRequest(LBHttpSolrClient.java:413)\n\tat org.apache.solr.client.solrj.impl.LBHttpSolrClient.request(LBHttpSolrClient.java:366)\n\tat org.apache.solr.client.solrj.impl.CloudSolrClient.lambda$directUpdate$0(CloudSolrClient.java:735)\n\tat java.util.concurrent.FutureTask.run(java.base@9-ea/FutureTask.java:266)\n\tat org.apache.solr.common.util.ExecutorUtil$MDCAwareThreadPoolExecutor.lambda$execute$0(ExecutorUtil.java:229)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@9-ea/ThreadPoolExecutor.java:1158)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@9-ea/ThreadPoolExecutor.java:632)\n\t... 1 more\nCaused by: org.apache.http.NoHttpResponseException: 127.0.0.1:45882 failed to respond\n\tat org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:143)\n\tat org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:57)\n\tat org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:261)\n\tat org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:165)\n\tat org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:167)\n\tat org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:272)\n\tat org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:124)\n\tat org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:271)\n\tat org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)\n\tat org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)\n\tat org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)\n\tat org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n\tat org.apache.solr.client.solrj.impl.HttpSolrClient.executeMethod(HttpSolrClient.java:511)\n\t... 10 more",
    "attachments": {
        "SOLR-9344.patch": "https://issues.apache.org/jira/secure/attachment/12827056/SOLR-9344.patch",
        "SOLR-9344-httpconfigurer.patch": "https://issues.apache.org/jira/secure/attachment/12827902/SOLR-9344-httpconfigurer.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-09-05T09:13:32+0000",
            "author": "Alan Woodward",
            "content": "I'm pretty sure that this is due to stale connections.  Here's a patch that does the following:\n\n\tmoves BasicAuthIntegrationTest to use SolrCloudTestCase\n\tremoves the 'collectionCreateSearchDelete' part of the test, which is duplicated in MiniSolrCloudClusterTest, doesn't seem to do anything useful here, and is the source of any stale connections that are happening\n\tremove MiniSolrCloudClusterTestBase, which is now superfluous.\n\n ",
            "id": "comment-15464536"
        },
        {
            "date": "2016-09-07T08:31:15+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 5b0bf4ab74d18fba9a96a31dbf016b19897adf12 in lucene-solr's branch refs/heads/branch_6x from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=5b0bf4a ]\n\nSOLR-9344: Move BasicAuthIntegrationTest to SolrCloudTestCase ",
            "id": "comment-15470004"
        },
        {
            "date": "2016-09-07T08:31:20+0000",
            "author": "ASF subversion and git services",
            "content": "Commit d0d893e1045eb4d7813e39249ed37b726536eaf3 in lucene-solr's branch refs/heads/master from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d0d893e ]\n\nSOLR-9344: Move BasicAuthIntegrationTest to SolrCloudTestCase ",
            "id": "comment-15470006"
        },
        {
            "date": "2016-09-07T08:32:49+0000",
            "author": "Alan Woodward",
            "content": "Will see if this fixes the problem. ",
            "id": "comment-15470011"
        },
        {
            "date": "2016-09-07T13:28:17+0000",
            "author": "Alan Woodward",
            "content": "Well, we're getting new failures at least: http://jenkins.thetaphi.de/job/Lucene-Solr-6.x-Linux/1679/\n\n\nCaused by: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target\n\n\n\nDo BasicAuth and SSL not mix Noble Paul?  Should we disable SSL on this test class? ",
            "id": "comment-15470645"
        },
        {
            "date": "2016-09-07T13:32:49+0000",
            "author": "Noble Paul",
            "content": "Alan Woodward I observed a different kind of failure in master. These two are different. SSL and Basic auth should work together perfectly. Actually, we recommend users to setup basicauth with SSL(if possible).  ",
            "id": "comment-15470660"
        },
        {
            "date": "2016-09-09T08:04:04+0000",
            "author": "ASF subversion and git services",
            "content": "Commit a0dcf389b2570e341b5c12987d5756b57e7a9b00 in lucene-solr's branch refs/heads/branch_6x from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=a0dcf38 ]\n\nSOLR-9344: Don't reuse port in BasicAuthIntegrationTest ",
            "id": "comment-15476272"
        },
        {
            "date": "2016-09-09T08:04:07+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 003a346d5005afad20a1766bafbffa18621d9d62 in lucene-solr's branch refs/heads/master from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=003a346 ]\n\nSOLR-9344: Don't reuse port in BasicAuthIntegrationTest ",
            "id": "comment-15476273"
        },
        {
            "date": "2016-09-10T09:10:29+0000",
            "author": "Alan Woodward",
            "content": "OK, this looks like a genuine bug.  The above exception is caused when trying to use an HttpClient configured by the PKIAuthenticationPlugin, in combination with SSL.  Tests using SSL set a static HttpClientConfigurer on HttpClientUtil, but this is then replaced by the PKIAuthenticationPlugin, so any clients created after this replacement don't get SSL support.  Maybe HttpClientUtil needs to maintain a list of configurers and run through them all, rather than just having a single one?\n\nThis only happens on 6.x, as the mechanism has changed in master. ",
            "id": "comment-15479478"
        },
        {
            "date": "2016-09-10T11:34:41+0000",
            "author": "Noble Paul",
            "content": "Good catch. What's stopping us from moving the coffee from master to 6.x ",
            "id": "comment-15479663"
        },
        {
            "date": "2016-09-10T19:17:16+0000",
            "author": "Alan Woodward",
            "content": "Looking at SOLR-9028 and SOLR-4509, it looks like it we can't backport the mechanism changes without breaking the auth plugin API.  Instead, here's a patch for 6x only that changes HttpClientUtil to hold a list of HttpClientConfigurer objects, which seems to make tests pass.  Hoss Man Mark Miller you did most of the work changing stuff for the master branch, does this change make sense? ",
            "id": "comment-15480284"
        },
        {
            "date": "2016-09-10T19:21:02+0000",
            "author": "Alan Woodward",
            "content": "Hm, actually scratch this patch, it's causing a whole bag of test failures, looking into why now... ",
            "id": "comment-15480291"
        },
        {
            "date": "2016-09-10T20:03:32+0000",
            "author": "Alan Woodward",
            "content": "Fixed the test failures - I added a 'resetConfigurers()' method to HttpClientUtil which removes all added configurers and goes back to using the default, and also ensured that a default configurer was always the first element in the chain. ",
            "id": "comment-15480365"
        },
        {
            "date": "2016-09-11T14:28:38+0000",
            "author": "Noble Paul",
            "content": "Alan Woodward this patch is for branch_6x right ? ",
            "id": "comment-15481836"
        },
        {
            "date": "2016-09-11T14:30:45+0000",
            "author": "Alan Woodward",
            "content": "Right, this is for 6.x only, master isn't affected by this bug (and the test failures are all appearing on the 6x branch tests). ",
            "id": "comment-15481840"
        },
        {
            "date": "2016-09-12T08:22:17+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 66a51b76b399ac0b018a4f600de3fc349ae7a2ec in lucene-solr's branch refs/heads/branch_6x from Alan Woodward\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=66a51b7 ]\n\nSOLR-9344: Allow multiple HttpClientConfigurers to be set on HttpClientUtil ",
            "id": "comment-15483462"
        },
        {
            "date": "2016-09-12T13:26:56+0000",
            "author": "Alan Woodward",
            "content": "Looks like this has finally been fixed! ",
            "id": "comment-15484118"
        },
        {
            "date": "2016-11-09T08:38:14+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Closing after 6.3.0 release. ",
            "id": "comment-15650272"
        }
    ]
}