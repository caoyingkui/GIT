{
    "id": "LUCENE-2387",
    "title": "IndexWriter retains references to Readers used in Fields (memory leak)",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "2.9.3",
            "3.0.2",
            "3.1",
            "4.0-ALPHA"
        ],
        "affect_versions": "3.0.1",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "As described in [1] IndexWriter retains references to Reader used in Fields and that can lead to big memory leaks when using tika's ParsingReaders (as those can take 1MB per ParsingReader). \n\n[2] shows a screenshot of the reference chain to the Reader from the IndexWriter taken with Eclipse MAT (Memory Analysis Tool) . The chain is the following:\n\nIndexWriter -> DocumentsWriter -> DocumentsWriterThreadState -> DocFieldProcessorPerThread  -> DocFieldProcessorPerField -> Fieldable -> Field (fieldsData) \n\n\n-------------\n[1] http://markmail.org/thread/ndmcgffg2mnwjo47\n[2] http://skitch.com/ecerulm/n7643/eclipse-memory-analyzer",
    "attachments": {
        "ASF.LICENSE.NOT.GRANTED--LUCENE-2387-29x.patch": "https://issues.apache.org/jira/secure/attachment/12441710/ASF.LICENSE.NOT.GRANTED--LUCENE-2387-29x.patch",
        "LUCENE-2387.patch": "https://issues.apache.org/jira/secure/attachment/12441284/LUCENE-2387.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2010-04-09T10:31:21+0000",
            "content": "Attached patch nulls out the Fieldable reference. ",
            "author": "Michael McCandless",
            "id": "comment-12855340"
        },
        {
            "date": "2010-04-09T10:56:31+0000",
            "content": "As Tokenizers are reused, the analyzer holds also a reference to the last used Reader. The easy fix would be to unset the Reader in Tokenizer.close(). If this is the case for you, that may be easy to do. So Tokenizer.close() looks like this:\n\n\n/** By default, closes the input Reader. */\n@Override\npublic void close() throws IOException {\n    input.close();\n    input = null; // <-- new!\n}\n\n ",
            "author": "Uwe Schindler",
            "id": "comment-12855345"
        },
        {
            "date": "2010-04-09T10:59:51+0000",
            "content": "I agree, Uwe \u2013 I'll fold that into the patch.  Thanks. ",
            "author": "Michael McCandless",
            "id": "comment-12855347"
        },
        {
            "date": "2010-04-14T10:03:21+0000",
            "content": "29x version of this patch. ",
            "author": "Michael McCandless",
            "id": "comment-12856823"
        },
        {
            "date": "2010-05-04T22:09:53+0000",
            "content": "Is there a chance that this can also be applied to 3.0.2 / 3.1? It would be really helpful to get this as soon as possible in the next Lucene version. ",
            "author": "Shay Banon",
            "id": "comment-12864044"
        },
        {
            "date": "2010-05-04T23:19:01+0000",
            "content": "OK I'll backport. ",
            "author": "Michael McCandless",
            "id": "comment-12864064"
        },
        {
            "date": "2010-05-05T05:11:05+0000",
            "content": "Thanks! ",
            "author": "Shay Banon",
            "id": "comment-12864157"
        }
    ]
}