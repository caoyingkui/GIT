{
    "id": "SOLR-11233",
    "title": "GC_LOG_OPTS customisation is a little confusing",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Task",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "GC_LOG_OPTS customisation is currently supported but (pre Java 9) the customised settings are supplemented e.g. https://github.com/apache/lucene-solr/blob/releases/lucene-solr/6.6.0/solr/bin/solr#L1713\n\nGC_LOG_OPTS+=(\"$gc_log_flag:$SOLR_LOGS_DIR/solr_gc.log\" '-XX:+UseGCLogFileRotation' '-XX:NumberOfGCLogFiles=9' '-XX:GCLogFileSize=20M')\n\n\n\nThis seems unexpected and confusing. Some ideas for making it less confusing:\n\n\n\ta new GC_LOG_FILE_OPTS option\n\t\n\t\tthe new option can be customised but if unset it would default to existing behaviour\n\t\n\t\n\n\n\n\n\tuse customised GC_LOG_OPTS 'as is'\n\t\n\t\tthis would be a change to existing behaviour i.e. the solr#L1713 settings mentioned above would no longer be appended",
    "attachments": {
        "SOLR-11233.patch": "https://issues.apache.org/jira/secure/attachment/12893719/SOLR-11233.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-24T10:09:36+0000",
            "content": "Quoting from the recent release - https://github.com/apache/lucene-solr/blob/releases/lucene-solr/7.1.0/solr/bin/solr#L1801\n\n\n1781 # Establish default GC logging opts if no env var set (otherwise init to sensible default)\n1782 if [ -z ${GC_LOG_OPTS+x} ]; then\n1783   if [[ \"$JAVA_VER_NUM\" < \"9\" ]] ; then\n1784     GC_LOG_OPTS=('-verbose:gc' '-XX:+PrintHeapAtGC' '-XX:+PrintGCDetails' \\\n1785                  '-XX:+PrintGCDateStamps' '-XX:+PrintGCTimeStamps' '-XX:+PrintTenuringDistribution' \\\n1786                  '-XX:+PrintGCApplicationStoppedTime')\n1787   else\n1788     GC_LOG_OPTS=('-Xlog:gc*')\n1789   fi\n1790 else\n1791   GC_LOG_OPTS=($GC_LOG_OPTS)\n1792 fi\n1793\n\n\n\n\n1794 # if verbose gc logging enabled, setup the location of the log file and rotation\n1795 if [ \"$GC_LOG_OPTS\" != \"\" ]; then\n1796   if [[ \"$JAVA_VER_NUM\" < \"9\" ]] ; then\n1797     gc_log_flag=\"-Xloggc\"\n1798     if [ \"$JAVA_VENDOR\" == \"IBM J9\" ]; then\n1799       gc_log_flag=\"-Xverbosegclog\"\n1800     fi\n1801     GC_LOG_OPTS+=(\"$gc_log_flag:$SOLR_LOGS_DIR/solr_gc.log\" '-XX:+UseGCLogFileRotation' '-XX:NumberOfGCLogFiles=9' '-XX:GCLogFileSize=20M')\n1802   else\n1803     # http://openjdk.java.net/jeps/158\n1804     for i in \"${!GC_LOG_OPTS[@]}\";\n1805     do\n1806       # for simplicity, we only look at the prefix '-Xlog:gc'\n1807       # (if 'all' or multiple tags are used starting with anything other then 'gc' the user is on their own)\n1808       # if a single additional ':' exists in param, then there is already an explicit output specifier\n1809       GC_LOG_OPTS[$i]=$(echo ${GC_LOG_OPTS[$i]} | sed \"s|^\\(-Xlog:gc[^:]*$\\)|\\1:file=$SOLR_LOGS_DIR/solr_gc.log:time,uptime:filecount=9,filesize=20000|\")\n1810     done\n1811   fi\n1812 fi\n\n\n\nLet's just talk about how it works for Java 8 now, as it seems to work as expected for Java 9. The first block of code checks if the user has set GC_LOG_OPTS environment variable. If he hasn't, it proceeds to set the default ones. If he has, it parses the options into an array (line 1791).\n\nIn the second block, the confusing part is line 1801. It appends the default options to the options provided by the user. \n\nSo for example, if I pass in \n\nGC_LOG_OPTS=\"-XX:NumberOfGCLogFiles=20\"\n\n then at the end of line 1801 GC_LOG_OPTS will be, \n\n('-XX:NumberOfGCLogFiles=20', \"$gc_log_flag:$SOLR_LOGS_DIR/solr_gc.log\" '-XX:+UseGCLogFileRotation' '-XX:NumberOfGCLogFiles=9' '-XX:GCLogFileSize=20M')\n\n\nWhich option will be actually selected is ambiguous and undeterministic. Checking it for GCLogFiles, \n\nps -ef | grep java | grep GCLogFiles\n\n returned us a `9` which would mean it ignored user input. When we tested it for GCLogFileSize it showed both the values. \n\nThere are a couple of ways to solve the problem as mentioned in the linked JIRA issue.\n\nWe chose to go with a new GC_LOG_FILE_OPTS option. The way we've implemented it maintains existing behaviour for those who don't want to change any of their start scripts and provides an option to fix this ambiguous behaviour for those who want to change it. So, the users who want to fix it will now have to provide the GC log file options through the new GC_LOG_FILE_OPTS environment variable. \n\nThe changes are very subtle. We replace line 1801 with,\n\n\n1801     if [ -z ${GC_LOG_FILE_OPTS+x} ]; then\n1802         GC_LOG_FILE_OPTS=(\"$gc_log_flag:$SOLR_LOGS_DIR/solr_gc.log\" '-XX:+UseGCLogFileRotation' '-XX:NumberOfGCLogFiles=9' '-XX:GCLogFileSize=20M')\n1803     else\n1804         GC_LOG_FILE_OPTS=($GC_LOG_FILE_OPTS)\n1805     fi\n1806     GC_LOG_OPTS+=$GC_LOG_FILE_OPTS\n\n\n\nFor Java 9, this ambiguous behavior doesn't seem to be present as the code (line 1809) only sets the default options either when the user hasn't provided any input or any specific file options. ",
            "author": "Pranav Murugappan",
            "id": "comment-16216648"
        }
    ]
}