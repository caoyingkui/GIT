{
    "id": "SOLR-11504",
    "title": "Provide a config to restrict number of indexing threads",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "5.3,                                            6.0,                                            7.0",
        "resolution": "Unresolved",
        "status": "Reopened"
    },
    "description": "For heavy indexing load (through REST api), Solr does not have any way to restrict number of threads. There used to be a config in lucene to restrict number of threads but that has been removed since https://issues.apache.org/jira/browse/LUCENE-6659 . \n\nFor example, in my bulk indexing scenario, within few minutes, my solr server had created 300 parallel threads each writing its own segment. The result was tons of small segments getting flushed to disk (as total RAM limit was reached quickly by sum of all segments), and solr has to spend time later to merge them into reasonable sizes.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2017-11-01T10:27:58+0000",
            "content": "Does Solr not use a thread pool for indexing? ",
            "author": "Michael McCandless",
            "id": "comment-16233893"
        },
        {
            "date": "2017-11-01T13:15:25+0000",
            "content": "Solr has no indexing threadpool   The closest thing is UpdateShardHandler.updateExecutor which is unbounded, not pluggable, and it's only used by inter-shard requests coming out of a given peer node \u2013 it's not at the the thread that will do actual indexing.\n\nI'm marking this as a duplicate. ",
            "author": "David Smiley",
            "id": "comment-16234049"
        },
        {
            "date": "2017-11-01T17:14:22+0000",
            "content": "David Smiley\nYou have duplicated it with \"SOLR-3585\" . Isn't that JIRA very broad scoped? The scope in the current ticket (11504) is to restrict the requests from Solr to Lucene's `IndexWriter`. My initial thoughts are: IndexWriter.getDocument(s) and updateDocument(s) is mostly used from `DirectUpdateHandler2`  (It is also used in `FileBasedSpellChecker.java` : which seems to be a non-routine scenario). For the purpose of fixing SOLR-11504, it seems enough to use a counting semaphore (or any similar structure) to control the flow of indexing requests from `DirectUpdateHandler2` to `IndexWriter`. \n\nWhat do you think? ",
            "author": "Nawab Zada Asad iqbal",
            "id": "comment-16234401"
        },
        {
            "date": "2017-11-01T19:15:05+0000",
            "content": "Doh!  Of course Nawab. ",
            "author": "David Smiley",
            "id": "comment-16234595"
        },
        {
            "date": "2017-11-02T06:34:20+0000",
            "content": "Related Jira LUCENE-5644\n\nFor the purpose of fixing SOLR-11504, it seems enough to use a counting semaphore (or any similar structure) to control the flow of indexing requests from `DirectUpdateHandler2` to `IndexWriter`.\n\nThis comment also suggests a similar approach https://issues.apache.org/jira/browse/LUCENE-6659?focusedCommentId=14987090&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14987090 ",
            "author": "Varun Thacker",
            "id": "comment-16235255"
        }
    ]
}