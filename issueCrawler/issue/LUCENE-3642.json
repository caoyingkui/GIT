{
    "id": "LUCENE-3642",
    "title": "EdgeNgrams creates invalid offsets",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "3.6",
            "4.0-ALPHA"
        ],
        "affect_versions": "3.5",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "A user reported this because it was causing his highlighting to throw an error.",
    "attachments": {
        "6B2Uh.png": "https://issues.apache.org/jira/secure/attachment/12506995/6B2Uh.png",
        "LUCENE-3642_test.patch": "https://issues.apache.org/jira/secure/attachment/12506998/LUCENE-3642_test.patch",
        "LUCENE-3642_ngrams.patch": "https://issues.apache.org/jira/secure/attachment/12506999/LUCENE-3642_ngrams.patch",
        "LUCENE-3642.patch": "https://issues.apache.org/jira/secure/attachment/12507012/LUCENE-3642.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-12-12T12:25:02+0000",
            "content": "screenshot from the user ",
            "author": "Robert Muir",
            "id": "comment-13167472"
        },
        {
            "date": "2011-12-12T12:37:05+0000",
            "content": "I thought up a hackish way we can test for these invalid offsets for all filters... I'll see if it works. ",
            "author": "Robert Muir",
            "id": "comment-13167476"
        },
        {
            "date": "2011-12-12T13:19:09+0000",
            "content": "here's a test.\n\nthe problem is a previous filter 'lengthens' this term by folding \u00e6 -> ae, but EdgeNGramFilter computes the offsets \"additively\": offsetAtt.setOffset(tokStart + start, tokStart + end);\n\nBecause of this if a word has been 'lengthened' by a previous filter, edgengram will produce offsets that are longer than the original text. (and probably bogus ones if its been shortened).\n\nI think we should what WDF does here, if the original offsets have already been changed (startOffset + termLength != endOffset), then we should simply preserve them for the new subwords.\n\nI added a check for this to basetokenstreamtestcase... now to see if anything else fails...  ",
            "author": "Robert Muir",
            "id": "comment-13167486"
        },
        {
            "date": "2011-12-12T13:37:27+0000",
            "content": "so my assert trips for shit like whitespacespacetokenizer + lowercase... how horrible is that?\n\nThere must be offset bugs in CharTokenizer... i'll dig into it. ",
            "author": "Robert Muir",
            "id": "comment-13167491"
        },
        {
            "date": "2011-12-12T14:16:06+0000",
            "content": "Here's a patch fixing the (edge)ngrams filters, using the same logic as wdf (its well-defined, i think its the only thing we can do here).\n\nStill need to fix the chartokenizer bug, and also add some tests for any other \"filters that are actually tokenizers\" we might have. ",
            "author": "Robert Muir",
            "id": "comment-13167500"
        },
        {
            "date": "2011-12-12T14:58:40+0000",
            "content": "Robert, that patch for the EdgeNGramTokenFilter worked. If there occur any problems I let you know. Thanks! ",
            "author": "Max Beutel",
            "id": "comment-13167516"
        },
        {
            "date": "2011-12-12T15:25:56+0000",
            "content": "Thanks Max, I am currently adding more tests/fixes for other broken tokenizers/filters with offset bugs.\n\nI'll update the patch when these are passing, but i think the ngrams stuff is ok. ",
            "author": "Robert Muir",
            "id": "comment-13167544"
        },
        {
            "date": "2011-12-12T16:27:50+0000",
            "content": "updated patch with a test+fix for smartchinese, and with a test for CharTokenizer... it currently fails with an off by one (incorrect startOffset) which is in turn jacking up the endOffsets too.  ",
            "author": "Robert Muir",
            "id": "comment-13167578"
        },
        {
            "date": "2011-12-12T16:35:12+0000",
            "content": "here's the fix for CharTokenizer.\n\nTests are passing, I will commit soon. ",
            "author": "Robert Muir",
            "id": "comment-13167580"
        },
        {
            "date": "2011-12-12T16:41:40+0000",
            "content": "Just looking i see another bug in CharTOkenizer... i'll add another test. ",
            "author": "Robert Muir",
            "id": "comment-13167585"
        },
        {
            "date": "2011-12-12T17:22:36+0000",
            "content": "patch with tests and fix for the additional bug in CharTokenizer. ",
            "author": "Robert Muir",
            "id": "comment-13167607"
        }
    ]
}