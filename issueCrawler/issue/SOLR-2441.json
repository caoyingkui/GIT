{
    "id": "SOLR-2441",
    "title": "Requesting invalid field names should return an error",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "If  you send a request for fl=foofoofoo and that field does not exist, solr just returns empty documents:\n\n<result name=\"response\" numFound=\"17\" start=\"0\">\n  <doc></doc>\n  <doc></doc>\n  <doc></doc>\n</result>\n\n\n\nThis seems like an error, not something we should support.  (I think requesting an invalid field name should also be an error, but that is another issue)\n\nThe distributed tests check if this is supported \u2013 I don't think they should",
    "attachments": {
        "SOLR-2441-invalid-fl-error.patch": "https://issues.apache.org/jira/secure/attachment/12474563/SOLR-2441-invalid-fl-error.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Ryan McKinley",
            "id": "comment-13010973",
            "date": "2011-03-24T22:31:08+0000",
            "content": "This patch check validates the fl parameter and throws an exception if you request bad fields.\n\nIt is a little ugly, but will soon be replaced by SOLR-1566\n\nUnless anyone has a good reason to request an unknown field, i would like to commit this soon "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13011071",
            "date": "2011-03-25T02:19:52+0000",
            "content": "this adds tests and works \u2013 i would like to commit tomorrow to pave the way for SOLR-1566 "
        },
        {
            "author": "Jan H\u00f8ydahl",
            "id": "comment-13011174",
            "date": "2011-03-25T12:15:08+0000",
            "content": "I tend to like the flexibility of Solr wrt. fields and schema.\nEven if you have a schema, Solr does not try to enforce it query-time, you kind of get the same transparent behavior as with Lucene, that if the docs you query contain the fields requested, you get them, if not you don't. You may modify your schema without re-indexing your content and still be able to retrieve fields.\n\nAnd what if I choose to shard across two Solr's with different scemas - because I know they share the \"id\", \"title\", \"body\" fields. Could be a webcrawl core and a fileserver core. I may want to query on the title&body only, but ask for fl=id,title,url,meta_keywords,file_path and choose to render my web results using url and meta_keywords but my fileserver docs with file_path.\n\nHave you considered dynamic fields?\n\nBased on this I think this solution is not a good idea, at least it should be configurable and by default off. "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13011215",
            "date": "2011-03-25T14:25:35+0000",
            "content": "aah yes \u2013 that is a reasonable use case i had not thought of.  Sharding across different schema. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13011273",
            "date": "2011-03-25T16:40:31+0000",
            "content": "my gut reaction to ryan's initial issue was that it was a good idea, but the other use case to consider is a schema that's changing over time.\n\nif an existing client has a hardcoded list of fields they ask for: \"fl=id,name,summary,body\" and i change my schema to make body no longer stored, should that cause queries from that existing client to start failing?  what if i remove \"summary\" from the schema completely?\n\nthis almost feels like it should be configurable for the responsewriter's option "
        },
        {
            "author": "Ryan McKinley",
            "id": "comment-13225771",
            "date": "2012-03-09T01:29:38+0000",
            "content": "While it would be nice...  I don't think we should do this "
        }
    ]
}