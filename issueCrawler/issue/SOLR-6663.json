{
    "id": "SOLR-6663",
    "title": "decide rules & syntax for computing stats/ranges/queries only at certain levels of a pivot",
    "details": {
        "components": [],
        "type": "Sub-task",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Steve Molloy asked a great question in SOLR-6351...\n\nOne more question around this, which applies for SOLR-6353 and SOLR-4212 as well. Should we have a syntax to apply stats/queries/ranges only at specific levels in the pivot hierarchy? It would reduce amount of computation and size of response for cases where you only need it at a specific level (usually last level I guess). \n\nI'm splitting this off into it's own Sub-task for further discussion.\n\n\n\nFor now, the \"stats\" localparam must be a single tag, and the \"work around\" is to add a common tag to all stats you want to use.\n\nie, this will cause an error...\n\nstats.field={!tag=tagA}price\nstats.field={!tag=tagB}popularity\nstats.field={!tag=tagB}clicks\nfacet.pivot={!stats=tagA,tagB}xxx,yyy,zz\n\n\n\nbut this will work...\n\nstats.field={!tag=tagA,tagPivot}price\nstats.field={!tag=tagB,tagPivot}popularity\nstats.field={!tag=tagB,tagPivot}clicks\nfacet.pivot={!stats=tagPivot}xxx,yyy,zz",
    "attachments": {
        "SOLR-6663.patch": "https://issues.apache.org/jira/secure/attachment/12705633/SOLR-6663.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2014-10-27T23:37:23+0000",
            "author": "Hoss Man",
            "content": "\ncut/pasting comments about this from SOLR-6351...\n\n\n\nSteve's initial suggestion...\n\n\nOne more question around this, which applies for SOLR-6353 and SOLR-4212 as well. Should we have a syntax to apply stats/queries/ranges only at specific levels in the pivot hierarchy? It would reduce amount of computation and size of response for cases where you only need it at a specific level (usually last level I guess). Something like:\nfacet.pivot={!stats=s1,s2}field1,field2\n\nWe could us * for all levels, or something like:\nfacet.pivot={!stats=,,s3}field1,field2,field3\nto only apply at 3rd level.\n\nMy reply...\n\n\n...\n\n\nThat's a great question ... honestly it's not something i ever really thought about.  \n\nOne quick thing i will point out: the size of the response shouldn't really be a huge factor in our decisions here, because with SOLR-6349 (which i'll hopefully have a patch for in the next day or so) the response will only need to include the stats people actually care about, andsask for, so the typical result size should be much smaller.\n\nBut you've got a good point about amount of computation done/returned at levels that people may not care about ... in my head, it seemed to make sense that the stats (and ranges, etc...) should be computed at every level just like the pivot count size \u2013 but at the intermediate levels that count is a \"free\" computation based on the size of the subset, and but i suspect you are correct: may people may only care about having these new stats/ranges/query on the leaves in the common case.\n\nI'm not really following your suggested syntax though ... you seem to be saying that in the \"stats\" local param, commas would be used to delimit \"levels\" of the pivot (corresponding to the commas in the list of pivot fields) but then i'm not really clear what you mean about using \"*\" (if that means all levels, how do you know what tag name to use?\n\nin the original examples i porposed, i was thinking that a comma seperated list could refer to multiple tag names, wimilar to how the \"exlcusions\" work \u2013 ie..\n\n\nfacet.pivot={!stats=prices,ratings}category,manufacturer\nfacet.pivot={!stats=prices,pop}reseller\nstats.field={!key=avg_list_price tag=prices mean=true}list_price\nstats.field={!tag=ratings min=true max=true}user_rating\nstats.field={!tag=ratings min=true max=true}editors_rating\nstats.field={!tag=prices min=true max=true}sale_price\nstats.field={!tag=pop}weekly_tweets\nstats.field={!tag=pop}weekly_page_views\n\n\n\n...would result in the \"category,manufacturer\" pivot having stats on \"avg_list_price, sale_price, user_rating, & editors_rating\" while the \"reseller\" pivot would have stats on \"avg_list_price, sale_price, weekly_tweets, & weekly_page_views\"\n\nThinking about it now though, if we support multiple tag names on stats.field, the same thing could be supported like this...\n\n\nfacet.pivot={!stats=cm_s}category,manufacturer\nfacet.pivot={!stats=r_s}reseller\nstats.field={!key=avg_list_price tag=cm_s,r_s mean=true}list_price\nstats.field={!tag=cm_s min=true max=true}user_rating\nstats.field={!tag=cm_s min=true max=true}editors_rating\nstats.field={!tag=cm_s,r_s min=true max=true}sale_price\nstats.field={!tag=r_s}weekly_tweets\nstats.field={!tag=r_s}weekly_page_views\n\n\n\nSo ... if we did that, then we could start using \"position\" info in a comma seperated list of tag names to refer to where in the pivot \"depth\" those stats/ranges/queries should be computed ... the question i have is \"should we\" ? .. in the context of a facet.pivot param, will it be obvious to folks that there is a maping between the commas in these local params and hte commas in hte bod of the facet.pivot param, or will it confuse people who are use to seeing comma as just a way of delimiting multiple values in tag/ex params?\n\nmy opinion: no freaking clue at the moment ... need to let it soak in my brain.\n ",
            "id": "comment-14186037"
        },
        {
            "date": "2015-03-18T18:32:08+0000",
            "author": "Hoss Man",
            "content": "Ok, after mulling this over a bit, i think there's a way to provide very robust support for \"pair-wise\" matching comma seperated tags to correspond with the comma seperated field names in a pivot \u2013 but still have a syntax that is simple and (mostly) intuitive in the common cases:\n\n\n\ta comma separated list of tag names can be specified that is the same length as the list of fields being pivoted on (or shorter)\n\teach position in the tag list corresponds with the same position in the list of fields\n\tand empty string in the tag list means \"compute nothing for this field in the pivot\"\n\tif the list of tags is longer then the list of fields, that's an error\n\tif the list of tags is shorter then the list of fields, the last tag in the list is used for each position not accounted for in the list of fields (1)\n\ta single \"*\" may be used as a sentinel value in the list of tags.  It's effect is that all tag values that come after it (if any) will be \"right aligned\" with the list of field names, and acts as if all the felds prior to those that correspond with the specified tag names have been mapped to an empty string tag.\n\n\n\nNote that because of \"(1)\" above, this approach means that in the case of a single tag name (which the only thing supported at the moment) the behavior would degrade to match the existing behavior: all of the tagged stats computed for all of the fields in the pivot.\n\n\nTo give some concrete examples/test cases of what that would look like, assume the following request:\n\n\n  facet.pivot={!stats=$stags}fV,fW,fX,fY,fZ\n  stags=....\n\n\n\nHere's what stats (by tag name) would be computed for each field in the pivot based on the value of the stags param...\n\n\n\n\nstags\nfV\nfW\nfX\nfY\nfZ\n\n\ntA,tB,tC,tD,tE\ntA\ntB\ntC\ntD\ntE\n\n\ntA,tB\ntA\ntB\ntB\ntB\ntB\n\n\ntA,,tB\ntA\n-\ntB\ntB\ntB\n\n\ntA,,tB,,tC\ntA\n-\ntB\n-\ntC\n\n\ntA,*,tB,tC\ntA\n-\n-\ntB\ntC\n\n\ntA\ntA\ntA\ntA\ntA\ntA\n\n\ntA,*\ntA\n-\n-\n-\n-\n\n\n*,tA\n-\n-\n-\n-\ntA\n\n\n\n\n\n\nNote that the last 3 rows in that table show what i expect would typically be the most common cases.\n\nWhat do folks think of this approach?  Are the common cases straight forward enough? Is there any usage we should support that isn't covered here? ",
            "id": "comment-14367623"
        },
        {
            "date": "2015-03-19T11:37:39+0000",
            "author": "Steve Molloy",
            "content": "+1 This seems straight-foward and flexible enough for every case I can think of. Also agree with the single tag name case to preserve current behaviour. ",
            "id": "comment-14368940"
        },
        {
            "date": "2015-03-19T17:09:54+0000",
            "author": "Hoss Man",
            "content": "here's a really rough implementation + tests of a utility method for parsing out the tags.  Not covered here is good error msgs and the necessary changes to use this utility from the recursive doPivots() ",
            "id": "comment-14369724"
        }
    ]
}