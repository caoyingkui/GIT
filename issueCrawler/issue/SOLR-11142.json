{
    "id": "SOLR-11142",
    "title": "NotOLE2FileException when adding MSG files with attachments",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "contrib - Solr Cell (Tika extraction)"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "5.5.1,                                            6.6.5,                                            7.4",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "When adding MSG files which have attachments we systematically get this error:\n\n\n\nERROR (qtp1013423070-16) [   x:default] o.a.s.s.HttpSolrCall null:org.apache.poi.poifs.filesystem.NotOLE2FileException: Invalid header signature; read 0x0A1A0A0D474E5089, expected 0xE11AB1A1E011CFD0 - Your file appears not to be a valid OLE2 document\n\tat org.apache.poi.poifs.storage.HeaderBlock.<init>(HeaderBlock.java:162)\n\tat org.apache.poi.poifs.storage.HeaderBlock.<init>(HeaderBlock.java:112)\n\tat org.apache.poi.poifs.filesystem.NPOIFSFileSystem.<init>(NPOIFSFileSystem.java:302)\n\tat org.apache.tika.parser.microsoft.OfficeParser.parse(OfficeParser.java:111)\n\tat org.apache.tika.parser.DelegatingParser.parse(DelegatingParser.java:72)\n\tat org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor.parseEmbedded(ParsingEmbeddedDocumentExtractor.java:103)\n\tat org.apache.tika.parser.microsoft.AbstractPOIFSExtractor.handleEmbeddedResource(AbstractPOIFSExtractor.java:129)\n\tat org.apache.tika.parser.microsoft.OutlookExtractor.parse(OutlookExtractor.java:238)\n\tat org.apache.tika.parser.microsoft.OfficeParser.parse(OfficeParser.java:170)\n\tat org.apache.tika.parser.microsoft.OfficeParser.parse(OfficeParser.java:117)\n\tat org.apache.solr.handler.extraction.ExtractingDocumentLoader.load(ExtractingDocumentLoader.java:228)\n\tat org.apache.solr.handler.ContentStreamHandlerBase.handleRequestBody(ContentStreamHandlerBase.java:69)\n\tat org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:155)\n\tat org.apache.solr.core.SolrCore.execute(SolrCore.java:2082)\n\tat org.apache.solr.servlet.HttpSolrCall.execute(HttpSolrCall.java:651)\n\tat org.apache.solr.servlet.HttpSolrCall.call(HttpSolrCall.java:458)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:229)\n\tat org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:184)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:499)\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)\n\tat org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\n\tat java.lang.Thread.run(Thread.java:745)\n\n\n\nAfter inspecting SOLR code it seems the problem comes from here:\n\nIn the ExtractingDocumentLoader class we have:\n\n\ncontext.set(Parser.class, parser);\n\n\n\nIn our case the parser is an instance of OfficeParser.\n\nWhen processing an MSG file, the OutlookExtractor class is used by the OfficeParser.\n\nTo process the attachments of the MSG file, the OutlookExtractor calls the ParsingEmbeddedDocumentExtractor.\n\nTo parse an attachment, the ParsingEmbeddedDocumentExtractor uses the DelegatingParser.\n\nThe DelegatingParser determines the parser to use by just looking at the parser set in the context.\n\n\n\n protected Parser getDelegateParser(ParseContext context) {\n        return context.get(Parser.class, EmptyParser.INSTANCE);\n    }\n\n\n\n\nSo in our case this means that every attachment will be processed with the OfficeParser, even if the attachment is not an MsOffice document !\n\nTo make it work correctly, it is an AutoDetectParser that should be set in the context when working with MSG files:\n\n\ncontext.set(Parser.class, new AutoDetectParser());",
    "attachments": {
        "test.msg": "https://issues.apache.org/jira/secure/attachment/12878822/test.msg"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-07-25T15:43:02+0000",
            "content": "Example msg file to reproduce the error added as \"test.msg\" ",
            "author": "Olivier Masseau",
            "id": "comment-16100227"
        },
        {
            "date": "2017-07-25T15:46:59+0000",
            "content": "This certainly looks like something that could change in Solr. That said, in general I usually don't recommend that you go to production with extracting request handler. There's a long writeup here with background, plus sample code for parsing via SolrJ, see: https://lucidworks.com/2012/02/14/indexing-with-solrj/\n\nOr use a server-based Tika, see: https://tika.apache.org/1.16/gettingstarted.html. ",
            "author": "Erick Erickson",
            "id": "comment-16100239"
        },
        {
            "date": "2018-09-14T14:05:06+0000",
            "content": "Note: The same problem occurs if providing a .doc file that contains embedded images (.png for example).\n\nThe images will be parsed with the OfficeParser leading to a NotOLE2FileException: Invalid header signature; read 0x0A1A0A0D474E5089, expected 0xE11AB1A1E011CFD0\n\nThis bugs occurs in Solr 5, 6 and 7.\n\nSo it seems if has not bee fixed since then. ",
            "author": "Olivier Masseau",
            "id": "comment-16614890"
        }
    ]
}