{
    "id": "SOLR-11453",
    "title": "Create separate logger for slow requests",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "logging"
        ],
        "type": "Improvement",
        "fix_versions": [
            "7.4",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "There is some desire on the mailing list to create a separate logfile for slow queries.  Currently it is not possible to do this cleanly, because the WARN level used by slow query logging within the SolrCore class is also used for other events that SolrCore can log.  Those messages would be out of place in a slow query log.  They should typically stay in main solr logfile.\n\nI propose creating a custom logger for slow queries, similar to what has been set up for request logging.  In the SolrCore class, which is org.apache.solr.core.SolrCore, there is a special logger at org.apache.solr.core.SolrCore.Request.  This is not a real class, just a logger which makes it possible to handle those log messages differently than the rest of Solr's logging.  I propose setting up another custom logger within SolrCore which could be org.apache.solr.core.SolrCore.SlowRequest.",
    "attachments": {
        "SOLR-11453.patch": "https://issues.apache.org/jira/secure/attachment/12891095/SOLR-11453.patch",
        "slowlog-informational.patch": "https://issues.apache.org/jira/secure/attachment/12922190/slowlog-informational.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-09T17:34:51+0000",
            "content": "Patch implementing this change to logging. ",
            "author": "Shawn Heisey",
            "id": "comment-16197362"
        },
        {
            "date": "2017-10-09T17:47:17+0000",
            "content": "The checkout I used to create the patch wasn't up to date, and there were conflicts when I pulled the changes.\n\nI started over and created a whole new patch.  It adds to the 7.1 section of CHANGES.txt, but since the 7.1 branch has already been created and seems to be on a fast track, it might be too late to put it there. ",
            "author": "Shawn Heisey",
            "id": "comment-16197378"
        },
        {
            "date": "2017-10-09T17:48:23+0000",
            "content": "Second try at the patch wasn't quite correct, here's a third try! ",
            "author": "Shawn Heisey",
            "id": "comment-16197382"
        },
        {
            "date": "2017-10-09T17:50:12+0000",
            "content": "Before going here can't you configure specific classes to log to a separate file in log4j properties at a specific level rather than make a code change?  ",
            "author": "Erick Erickson",
            "id": "comment-16197390"
        },
        {
            "date": "2017-10-09T17:56:52+0000",
            "content": "SlowRequest logger won't need the \"slow: \" log prefix, I think.\n\nErick Erickson - you can, but the problem is that there's a lot of other stuff at WARN that isn't slow logging, so we need the requests in their own log. ",
            "author": "Mike Drob",
            "id": "comment-16197403"
        },
        {
            "date": "2017-10-09T17:58:06+0000",
            "content": "Before going here can't you configure specific classes to log to a separate file in log4j properties at a specific level rather than make a code change?\n\nYes, but currently it wouldn't be a clean separation.\n\nThe slow query logging is done by SolrCore, at the WARN level.  The problem is that there are other things logged in SolrCore at WARN, so log4j cannot easily tell them apart, and they're not the kinds of things you want in a slow query log.  The patch provides the special logger so that slow queries can be handled entirely separately from the other warnings that SolrCore logs. ",
            "author": "Shawn Heisey",
            "id": "comment-16197405"
        },
        {
            "date": "2017-10-09T18:00:21+0000",
            "content": "SlowRequest logger won't need the \"slow: \" log prefix, I think.\nTrue, but this is quite useful for those not separating the logs. (true, they could search for level=WARN, but still...) ",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-16197409"
        },
        {
            "date": "2017-10-09T18:00:42+0000",
            "content": "Along with the code change, I should put some commented lines in log4j.properties for logging slow queries to a separate logfile. ",
            "author": "Shawn Heisey",
            "id": "comment-16197411"
        },
        {
            "date": "2017-10-09T18:04:07+0000",
            "content": "I agree with the code change. This makes it easier to filter the log messages, as the class name simply has the keyword \".SlowRequest\" appended.\n\nTrue, but this is quite useful for those not separating the logs. (true, they could search for level=WARN, but still...)\n\nThe class name is still logged and so are the \".SlowRequest\" suffix. No need for the log prefix. ",
            "author": "Uwe Schindler",
            "id": "comment-16197414"
        },
        {
            "date": "2017-10-09T18:45:19+0000",
            "content": "bq: I should put some commented lines in log4j.properties for logging slow\n\nThat would be very good in deed.\n\nIf you're feeling really ambitious, you could add that to the asciidoc in .../solr/solr-ref-guide/src/configuring-logging.adoc, there's already a \"logging slow queries\" section... ",
            "author": "Erick Erickson",
            "id": "comment-16197486"
        },
        {
            "date": "2017-10-09T21:29:07+0000",
            "content": "I haven't been able to figure out how to get it logging to a separate file.  I've asked the log4j mailing list for some help. ",
            "author": "Shawn Heisey",
            "id": "comment-16197727"
        },
        {
            "date": "2017-10-10T17:06:16+0000",
            "content": "The log4j response basically was \"you're using an end of life version, upgrade to get help.\"  We say this to users often enough ourselves about older Solr versions, so while that's disappointing, it's understandable.\n\nSo I'm shifting focus to SOLR-7887, but it's a pretty daunting task. ",
            "author": "Shawn Heisey",
            "id": "comment-16198978"
        },
        {
            "date": "2017-10-10T17:07:48+0000",
            "content": "Linking to the log4j upgrade. ",
            "author": "Shawn Heisey",
            "id": "comment-16198983"
        },
        {
            "date": "2018-05-04T17:26:52+0000",
            "content": "Hi Shawn,\n\nIs this still on your radar. Now that we have\u00a0successfully\u00a0upgraded to Log4j2 this wold be a useful feature to have enabled by default ",
            "author": "Varun Thacker",
            "id": "comment-16464166"
        },
        {
            "date": "2018-05-04T21:51:11+0000",
            "content": "I have revived the thread on the log4j mailing list to learn how to do it with the upgraded version. ",
            "author": "Shawn Heisey",
            "id": "comment-16464433"
        },
        {
            "date": "2018-05-04T22:19:23+0000",
            "content": "It may be easier to discuss here rather than on the log4j mailing list, so here is one idea. \n\nConfigure log4j so that a certain named logger is associated with a separate appender. In your application code, all logging that needs to end up in the \"slow requests\" log file should be done using the logger with that name. \n\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Configuration status=\"WARN\">\n  <Properties>\n    <Property name=\"filename\">logs/app.log</Property>\n    <Property name=\"slowLogs\">logs/app-slow.log</Property>\n  </Properties>\n  <Appenders>\n    <File name=\"file\" fileName=\"${filename}\">\n      <PatternLayout pattern=\"%d{HH:mm:ss.SSS} %-5level [%t] %logger{36} - %msg%n\"/>\n    </File>\n    <File name=\"slow\" fileName=\"${slowLogs}\">\n      <PatternLayout pattern=\"%d %p [%t] %c{1.} %m%n\"/>\n    </File>\n  </Appenders>\n  <Loggers>\n    <Logger name=\"org.apache.solr.core.SolrCore.SlowRequest\" level=\"trace\">\n      <AppenderRef ref=\"slow\"/>\n    </Logger>\n    <Root level=\"info\">\n      <AppenderRef ref=\"file\"/>\n    </Root>\n  </Loggers>\n</Configuration>\n\n\nIn your application:\n\nprivate final static Logger slowRequests = LogManager.getLogger(\"org.apache.solr.core.SolrCore.SlowRequest\");\nprivate final static Logger logger = LogManager.getLogger();\n\n...\nlogger.trace(\"normal logging\");\nslowRequests.trace(\"a slow request just came in\");\n\n\n\nWith the above configuration, all log messages sent to the slowRequests logger end up in both the log files. If you want to send the slow request log messages to the slow log file only, set additivity = \"false\" on the slow logger. See the manual for details.\n\n\n...\n  <Loggers>\n    <Logger name=\"org.apache.solr.core.SolrCore.SlowRequest\" level=\"trace\" additivity = \"false\">\n...\n\n ",
            "author": "Remko Popma",
            "id": "comment-16464452"
        },
        {
            "date": "2018-05-04T22:41:26+0000",
            "content": "This is the log4j2 config that Solr 7.4 will have out of the box:\n\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n  Licensed to the Apache Software Foundation (ASF) under one or more\n  contributor license agreements.  See the NOTICE file distributed with\n  this work for additional information regarding copyright ownership.\n  The ASF licenses this file to You under the Apache License, Version 2.0\n  (the \"License\"); you may not use this file except in compliance with\n  the License.  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  -->\n\n<Configuration>\n  <Appenders>\n    <Console name=\"STDOUT\" target=\"SYSTEM_OUT\">\n      <PatternLayout>\n        <Pattern>\n          %d{yyyy-MM-dd HH:mm:ss.SSS} %-5p (%t) [%X{collection} %X{shard} %X{replica} %X{core}] %c{1.} %m%n\n        </Pattern>\n      </PatternLayout>\n    </Console>\n    <RollingFile\n        name=\"RollingFile\"\n        fileName=\"${sys:solr.log.dir}/solr.log\"\n        filePattern=\"${sys:solr.log.dir}/solr.log.%i\" >\n      <PatternLayout>\n        <Pattern>\n          %d{yyyy-MM-dd HH:mm:ss.SSS} %-5p (%t) [%X{collection} %X{shard} %X{replica} %X{core}] %c{1.} %m%n\n        </Pattern>\n      </PatternLayout>\n      <Policies>\n        <OnStartupTriggeringPolicy />\n        <SizeBasedTriggeringPolicy size=\"32 MB\"/>\n      </Policies>\n      <DefaultRolloverStrategy max=\"10\"/>\n    </RollingFile>\n  </Appenders>\n  <Loggers>\n    <Logger name=\"org.apache.hadoop\" level=\"warn\"/>\n    <Logger name=\"org.apache.solr.update.LoggingInfoStream\" level=\"off\"/>\n    <Logger name=\"org.apache.zookeeper\" level=\"warn\"/>\n\n    <Root level=\"info\">\n      <AppenderRef ref=\"RollingFile\"/>\n      <AppenderRef ref=\"STDOUT\"/>\n    </Root>\n  </Loggers>\n</Configuration>\n\n\n\nI will attempt to write a combined config that accomplishes the logging.\n\nVarun Thacker, my bias (for the first release where we have this) is to not have this separate logfile created by default, but to have a commented config section in log4j2.xml that would enable it.  For a later release (still need to decide whether that's 7.x or 8.0), after we are sure it's working right in the wild, we can enable it by default. ",
            "author": "Shawn Heisey",
            "id": "comment-16464473"
        },
        {
            "date": "2018-05-04T22:44:01+0000",
            "content": "Should we keep the slow query logging at WARN?  Initial thought is that this is the correct level, but I'm curious what everyone else thinks. ",
            "author": "Shawn Heisey",
            "id": "comment-16464476"
        },
        {
            "date": "2018-05-04T23:25:37+0000",
            "content": "Shawn Heisey Thanks for showing the full config. I notice that rollover occurs after the log file exceeds 32MB. That seems very small to me. Not sure how much logging you expect, but you may end up with a limited number of small log files and lose crucial troubleshooting info.\n\nAlso, you may be interested in the custom delete on rollover action that is more powerful than what can be achieved with  <DefaultRolloverStrategy max=\"10\"/>. ",
            "author": "Remko Popma",
            "id": "comment-16464499"
        },
        {
            "date": "2018-05-05T00:34:03+0000",
            "content": "The rollover size value in the default config used to be 4MB, so 32MB is a huge improvement!  I agree, it's a low value.  But we can't make it TOO big, or Solr may have trouble when somebody begins using it on a very small system.  (Think raspberry pi, or a super small container/VM).  For the same reason, the default heap size is only 512MB, which means that almost all users have to eventually adjust their config.\n\nWhen I deploy Solr for real usage, I change the rollover size to 4GB (on older versions where it's log4j.properties).  The systems I run it on have terabytes of disk space, and I want to be sure that I WILL have something to look at (without checking lots of log files) when somebody tells me about a problem they had two or three days ago.\n\nMy dev server is running an older version (6.6.3).  The production servers are running even older versions.  The current logfile on dev is 720MB and covers these times:\n\n2018-05-02 15:26:59.556\n2018-05-05 00:22:35.226\n\nI haven't modified the logging config much, so that should be fairly typical for a server matching the size and activity level.\n\nA fair amount of effort has been expended to reduce how much Solr logs in an out-of-the-box configuration.  When starting the Solr example on the most current release (7.3.0) with one index that has nothing in it, the logfile gets to 6KB.  Here's the contents:\n\n\n2018-05-05 00:21:48.416 INFO  (main) [   ] o.e.j.s.Server jetty-9.4.8.v20171121, build timestamp: 2017-11-21T21:27:37Z, git hash: 82b8fb23f757335bb3329d540ce37a2a2615f0a8\n2018-05-05 00:21:49.133 INFO  (main) [   ] o.a.s.s.SolrDispatchFilter  ___      _       Welcome to Apache Solr\u2122 version 7.3.0\n2018-05-05 00:21:49.133 INFO  (main) [   ] o.a.s.s.SolrDispatchFilter / __| ___| |_ _   Starting in standalone mode on port 8983\n2018-05-05 00:21:49.133 INFO  (main) [   ] o.a.s.s.SolrDispatchFilter \\__ \\/ _ \\ | '_|  Install dir: C:\\Users\\sheisey\\Downloads\\solr-7.3.0\n2018-05-05 00:21:49.148 INFO  (main) [   ] o.a.s.s.SolrDispatchFilter |___/\\___/_|_|    Start time: 2018-05-05T00:21:49.135Z\n2018-05-05 00:21:49.150 INFO  (main) [   ] o.a.s.u.StartupLoggingUtils Property solr.log.muteconsole given. Muting ConsoleAppender named CONSOLE\n2018-05-05 00:21:49.238 INFO  (main) [   ] o.a.s.c.SolrResourceLoader Using system property solr.solr.home: C:\\Users\\sheisey\\Downloads\\solr-7.3.0\\server\\solr\n2018-05-05 00:21:49.245 INFO  (main) [   ] o.a.s.c.SolrXmlConfig Loading container configuration from C:\\Users\\sheisey\\Downloads\\solr-7.3.0\\server\\solr\\solr.xml\n2018-05-05 00:21:50.197 INFO  (main) [   ] o.a.s.c.CorePropertiesLocator Found 1 core definitions underneath C:\\Users\\sheisey\\Downloads\\solr-7.3.0\\server\\solr\n2018-05-05 00:21:50.198 INFO  (main) [   ] o.a.s.c.CorePropertiesLocator Cores are: [foo]\n2018-05-05 00:21:50.205 INFO  (coreLoadExecutor-6-thread-1) [   ] o.a.s.c.TransientSolrCoreCacheDefault Allocating transient cache for 2147483647 transient cores\n2018-05-05 00:21:50.323 INFO  (coreLoadExecutor-6-thread-1) [   x:foo] o.a.s.c.SolrResourceLoader [foo] Added 57 libs to classloader, from paths: [/C:/Users/sheisey/Downloads/solr-7.3.0/contrib/clustering/lib, /C:/Users/sheisey/Downloads/solr-7.3.0/contrib/extraction/lib, /C:/Users/sheisey/Downloads/solr-7.3.0/contrib/langid/lib, /C:/Users/sheisey/Downloads/solr-7.3.0/contrib/velocity/lib, /C:/Users/sheisey/Downloads/solr-7.3.0/dist]\n2018-05-05 00:21:53.197 INFO  (main) [   ] o.e.j.s.Server Started @6060ms\n2018-05-05 00:21:53.898 INFO  (coreLoadExecutor-6-thread-1) [   x:foo] o.a.s.c.SolrConfig Using Lucene MatchVersion: 7.3.0\n2018-05-05 00:21:54.191 INFO  (coreLoadExecutor-6-thread-1) [   x:foo] o.a.s.s.IndexSchema [foo] Schema name=default-config\n2018-05-05 00:21:54.630 WARN  (coreLoadExecutor-6-thread-1) [   x:foo] o.a.s.c.SolrResourceLoader Solr loaded a deprecated plugin/analysis class [solr.SynonymFilterFactory]. Please consult documentation how to replace it accordingly.\n2018-05-05 00:21:55.357 INFO  (qtp818403870-15) [   ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/info/system params={wt=json} status=0 QTime=51\n2018-05-05 00:21:55.371 INFO  (coreLoadExecutor-6-thread-1) [   x:foo] o.a.s.s.IndexSchema Loaded schema default-config/1.6 with uniqueid field id\n2018-05-05 00:21:55.438 INFO  (coreLoadExecutor-6-thread-1) [   x:foo] o.a.s.c.CoreContainer Creating SolrCore 'foo' using configuration from instancedir C:\\Users\\sheisey\\Downloads\\solr-7.3.0\\server\\solr\\foo, trusted=true\n2018-05-05 00:21:55.485 INFO  (coreLoadExecutor-6-thread-1) [   x:foo] o.a.s.c.SolrCore solr.RecoveryStrategy.Builder\n2018-05-05 00:21:55.492 INFO  (coreLoadExecutor-6-thread-1) [   x:foo] o.a.s.c.SolrCore [[foo] ] Opening new SolrCore at [C:\\Users\\sheisey\\Downloads\\solr-7.3.0\\server\\solr\\foo], dataDir=[C:\\Users\\sheisey\\Downloads\\solr-7.3.0\\server\\solr\\foo\\data\\]\n2018-05-05 00:21:55.534 INFO  (coreLoadExecutor-6-thread-1) [   x:foo] o.a.s.r.XSLTResponseWriter xsltCacheLifetimeSeconds=5\n2018-05-05 00:21:55.895 INFO  (coreLoadExecutor-6-thread-1) [   x:foo] o.a.s.u.UpdateHandler Using UpdateLog implementation: org.apache.solr.update.UpdateLog\n2018-05-05 00:21:55.896 INFO  (coreLoadExecutor-6-thread-1) [   x:foo] o.a.s.u.UpdateLog Initializing UpdateLog: dataDir= defaultSyncLevel=FLUSH numRecordsToKeep=100 maxNumLogsToKeep=10 numVersionBuckets=65536\n2018-05-05 00:21:55.915 INFO  (coreLoadExecutor-6-thread-1) [   x:foo] o.a.s.u.CommitTracker Hard AutoCommit: if uncommited for 15000ms; \n2018-05-05 00:21:55.915 INFO  (coreLoadExecutor-6-thread-1) [   x:foo] o.a.s.u.CommitTracker Soft AutoCommit: disabled\n2018-05-05 00:21:56.010 INFO  (coreLoadExecutor-6-thread-1) [   x:foo] o.a.s.s.SolrIndexSearcher Opening [Searcher@67d0efb2[foo] main]\n2018-05-05 00:21:56.050 INFO  (coreLoadExecutor-6-thread-1) [   x:foo] o.a.s.r.ManagedResourceStorage File-based storage initialized to use dir: C:\\Users\\sheisey\\Downloads\\solr-7.3.0\\server\\solr\\foo\\conf\n2018-05-05 00:21:56.101 INFO  (coreLoadExecutor-6-thread-1) [   x:foo] o.a.s.h.c.SpellCheckComponent Initializing spell checkers\n2018-05-05 00:21:56.111 INFO  (coreLoadExecutor-6-thread-1) [   x:foo] o.a.s.s.DirectSolrSpellChecker init: {name=default,field=_text_,classname=solr.DirectSolrSpellChecker,distanceMeasure=internal,accuracy=0.5,maxEdits=2,minPrefix=1,maxInspections=5,minQueryLength=4,maxQueryFrequency=0.01}\n2018-05-05 00:21:56.130 INFO  (coreLoadExecutor-6-thread-1) [   x:foo] o.a.s.h.ReplicationHandler Commits will be reserved for 10000ms.\n2018-05-05 00:21:56.270 INFO  (coreLoadExecutor-6-thread-1) [   x:foo] o.a.s.u.UpdateLog Could not find max version in index or recent updates, using new clock 1599581418967531520\n2018-05-05 00:21:56.282 INFO  (searcherExecutor-7-thread-1-processing-x:foo) [   x:foo] o.a.s.c.QuerySenderListener QuerySenderListener sending requests to Searcher@67d0efb2[foo] main{ExitableDirectoryReader(UninvertingDirectoryReader())}\n2018-05-05 00:21:56.282 INFO  (searcherExecutor-7-thread-1-processing-x:foo) [   x:foo] o.a.s.c.QuerySenderListener QuerySenderListener done.\n2018-05-05 00:21:56.282 INFO  (searcherExecutor-7-thread-1-processing-x:foo) [   x:foo] o.a.s.h.c.SpellCheckComponent Loading spell index for spellchecker: default\n2018-05-05 00:21:56.293 INFO  (searcherExecutor-7-thread-1-processing-x:foo) [   x:foo] o.a.s.c.SolrCore [foo] Registered new searcher Searcher@67d0efb2[foo] main{ExitableDirectoryReader(UninvertingDirectoryReader())}\n\n\n\nThat version is still using log4j1.2, but I would not anticipate much change with the next version using log4j2. ",
            "author": "Shawn Heisey",
            "id": "comment-16464534"
        },
        {
            "date": "2018-05-05T07:31:40+0000",
            "content": "If you want to have a configuration that is only enabled under special circumstances you can use the RoutingAppender - http://logging.apache.org/log4j/2.x/manual/appenders.html#RoutingAppender or the ScriptAppenderSelector - http://logging.apache.org/log4j/2.x/manual/appenders.html#ScriptAppenderSelector. If those don't fit the bill make a suggestion for how you would like it to work. ",
            "author": "Ralph Goers",
            "id": "comment-16464689"
        },
        {
            "date": "2018-05-05T16:43:11+0000",
            "content": "Those appenders look very interesting.  Sounds like we could use one or more system properties to control whether separate logfiles are created, all within the log4j2.xml config. ",
            "author": "Shawn Heisey",
            "id": "comment-16464834"
        },
        {
            "date": "2018-05-05T18:05:44+0000",
            "content": "Yes, as the implementation of those shows, it is entirely possible to dynamically create appenders. If those don't exactly meet your needs you could look at what they do and create something similar that does. You could either include that with Solr or provide a patch to Log4j to include it.  For example, if you don't want to rely on a Script you could modify ScriptAppenderSelector to be SystemPropertyAppenderSelector where the build method would rely on the system property to choose which Appender to create. Or if you want to rely on some Solr configuration provide a hook to Solr's configuration to choose the Appender. ",
            "author": "Ralph Goers",
            "id": "comment-16464852"
        },
        {
            "date": "2018-05-05T18:51:47+0000",
            "content": "Quick patch , where we create a new\u00a0solr_slow_requests.log file which logs slow requests . This is in addition to logging in the solr.log file ( we don't want to change this behaviour atleast in the 7.x code base )\u00a0\n\n\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16464860"
        },
        {
            "date": "2018-05-06T17:14:30+0000",
            "content": "Varun Thacker, I'm going to attach the code patch I was developing, with some ideas you can use or not as you desire.\n\nIn accordance with some best practices mentioned on SOLR-12286, I removed usages of \"log.isXxxxEnabled()\" methods.  That is the idea I was most interested in telling you about.\n\nI noticed the SolrCore class has an empty top-level Javadoc. Which makes precommit pass, but doesn't give anyone any information about the class.  That's a rather glaring omission IMHO.  Adding it is probably out of scope for this issue.\n\nOne of the warnings I noticed in eclipse is that serialVersionUID  was missing from an inner anonymous class, so I had eclipse add that. Also not important for this issue. ",
            "author": "Shawn Heisey",
            "id": "comment-16465224"
        },
        {
            "date": "2018-05-06T17:42:06+0000",
            "content": "Ralph Goers, thanks for the docs.  There is a lot of information there, but I'm not sure that there is enough information there for ME to figure out how to write a script to look at sysprops and determine whether certain loggers will be sent to the main file or to their own file(s).\n\nI see in the docs where a list of three parameters is sent to the script, one of which is logEvent.  Is there a reference for everything contained within those parameters?\n\nIs javascript the recommended language choice?  I'm wondering about its performance, mostly.  I don't want to introduce really slow components into the logging.  One of the examples on that doc page says javascript, but appears to actually include Java code.  If my interpretation of that example is correct, does that perform well?\n\nIf using javascript directly and not including Java code, are sysprops available?  If so, how are they accessed? ",
            "author": "Shawn Heisey",
            "id": "comment-16465231"
        },
        {
            "date": "2018-05-06T19:13:38+0000",
            "content": "The Log4j ScriptManager makes the Log4j Configuration and StatusLogger available to every script. Other variables are added to the bindings depending on when the script will run. In the case of ScriptAppenderSelector only the default bindings are available (there is no logEvent when that script is run - it happens during logging configuration). If you were looking at the example at http://logging.apache.org/log4j/2.x/manual/configuration.html#Scripts, it is determining which Pattern to use for a particular log event, so that script is called for every log event. You can see what parameters a ScriptFilter is passed by looking at https://github.com/apache/logging-log4j2/blob/master/log4j-core/src/main/java/org/apache/logging/log4j/core/filter/ScriptFilter.java or http://logging.apache.org/log4j/2.x/manual/filters.html#Script.\n\nAs far as the best script language goes, the Javascript engine is included in the JDK so it is always available, but it doesn't compile to byte code so its performance won't be the best. For something that will only execute once at configuration that probably doesn't matter, but for something that will execute on every log event I would use a scripting language that compiles, such as Groovy. \n\nTo get a system property you would just call System.getProperty(\"property\") in whatever syntax the script language requires.  ",
            "author": "Ralph Goers",
            "id": "comment-16465259"
        },
        {
            "date": "2018-05-09T03:09:25+0000",
            "content": "Hi Shawn,\n\nThanks for working on the patch. Few things I wanted to ask you.\n\u00a0\u00a0I noticed the SolrCore class has an empty top-level Javadoc. Which makes precommit pass, but doesn't give anyone any information about the class. That's a rather glaring omission IMHO.\nMakes sense. I'll fold this change in.\n\n\u00a0\nIn accordance with some best practices mentioned on\u00a0SOLR-12286, I removed usages of \"log.isXxxxEnabled()\" methods. That is the idea I was most interested in telling you about.\nThese are logging lines that would get used for every update and search request. If by any chance removing the isDebugEnabled on these creates a ton of objects then this won't be good. I'd rather be pedantic and not change it here? What do you think?\nOne of the warnings I noticed in eclipse is that serialVersionUID was missing from an inner anonymous class, so I had eclipse add that. Also not important for this issue.\nDo you know if our precommit also lists this as a warning? I'm open to adding this as but was just curious?\n\u00a0\nHave you had a chance to look at my patch? Do those changes look good? If yes then I'll fold these enhancements that you added and commit it tomorrow ",
            "author": "Varun Thacker",
            "id": "comment-16468265"
        },
        {
            "date": "2018-05-09T04:35:57+0000",
            "content": "New version of the informational patch.  Summary of things different from your patch:\n\n\n\tSolrCore main javadoc added as already mentioned.\n\tThe requestLog field has no need to be public.  Set to private.\n\tRemoved string concatenation from logging messages, switched to slf4j {} parameters.  A bunch of concatenation for things other than slf4j logging still exists.\n\tRemoved most usages of isXxxxEnabled logging level checks.\n\tAdded serialVersionUID to an anonymous class. Hopefully the number that eclipse generated matches the one that Java auto-assigned.  Prior experience shows that having eclipse generate this value on a class always makes the same number, so I think there's a possibility that it is indeed the same number that Java assigns at compile time if it's not present.  I actually have no idea whether this is flagged as a warning by anything other than my IDE.  If we leave serialVersionUID out of a class that implement Serializable, then change the code in that class in a way that changes the automatically generated serialVersionUID, different versions of Solr will not be able to send/receive that object in Javabin.\n\n\n\nI kept one isDebugEnabled usage for a situation where a logging parameter comes from a method that builds a string with StringBuilder instead of using already built objects \u2013 could be slow.  Also added TODO on that to figure out whether logging the same info at DEBUG and INFO is actually necessary.\n\nI have plans to try and create a log4j config that uses a sysprop to decide whether to log slow requests to a separate file, but it's not something that I expect to come together quickly.  I will likely need to learn groovy, since I don't think we want slow javascript code running for every single log message.  I also need to figure out whether adding groovy as a dependency for Solr will cause issues with the parts of the build system that already use groovy. ",
            "author": "Shawn Heisey",
            "id": "comment-16468316"
        },
        {
            "date": "2018-05-09T04:41:00+0000",
            "content": "I have plans to try and create a log4j config that uses a sysprop to decide whether to log slow requests to a separate file, but it's not something that I expect to come together quickly.\nCheckout StartupLoggingUtils#muteConsole on how we disable console logs when not running in foreground mode.\u00a0 We could use a similar trick.\n\n\u00a0\n\nDo we really want to add a sysprop? My thoughts are to enable it by default and then if a user doesn't want it he can change the log4j2.xml himself.\u00a0\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16468319"
        },
        {
            "date": "2018-05-09T04:50:18+0000",
            "content": "Looks like I didn't get the last of the changes actually saved before I created the patch.  Uploaded another version. ",
            "author": "Shawn Heisey",
            "id": "comment-16468324"
        },
        {
            "date": "2018-05-09T05:04:19+0000",
            "content": "That's a good question on the sysprop.  I have no idea how many users might want to enable/disable separate logfiles, but if it's wanted frequently, it would be better to have it controlled by a setting in solr.in.sh in the same way as the heap size. ",
            "author": "Shawn Heisey",
            "id": "comment-16468332"
        },
        {
            "date": "2018-05-09T19:11:26+0000",
            "content": "Hi Shawn Heisey\n\nJust wanted to know what's the plan here?\u00a0Your\u00a0slowlog-informational.patch patch looks good to me!\n\nI'm thinking let's commit\u00a0slowlog-informational.patch + add log2j2 appenders on by default.\n\nPersonally I don't think we should expose turning it off via a sysprop but If you think it's a good idea then I am not opposed to it. Only\u00a0thought would be : can we do that as a separate Jira ?\u00a0\n\nI will be off for 1 week starting Friday FYI so won't be active on jira ",
            "author": "Varun Thacker",
            "id": "comment-16469332"
        },
        {
            "date": "2018-05-10T00:07:08+0000",
            "content": "A separate issue for sysprop usage would be a good idea.\n\nAlso a separate issue:  Eventually, as part of the overall drive to reduce log verbosity, I think we should have an option to send things from o.a.s.SolrCore.Request to a separate logfile.  Not sure that we want that enabled by default, but perhaps we can poll the user list for opinions about whether it should be enabled by default in 8.0.  There might be a significant chunk of the userbase that wants it.  The only drawback in my mind to a separate request log is that it's more difficult to put the requests in context with everything in solr.log.\n\nFor the log4j2.xml config, are you thinking of disabling additivity so that the slow requests are ONLY logged to the separate file?  I think that's a good idea. ",
            "author": "Shawn Heisey",
            "id": "comment-16469732"
        },
        {
            "date": "2018-05-10T01:01:54+0000",
            "content": "Having a separate logfile for slow requests turned on by default doesn't have the same drawback as a separate log for all requests that is enabled by default.  Every entry logged by .SlowRequest is logged by .Request as well. ",
            "author": "Shawn Heisey",
            "id": "comment-16469780"
        },
        {
            "date": "2018-05-10T06:11:56+0000",
            "content": "For the log4j2.xml config, are you thinking of disabling additivity so that the slow requests are ONLY logged to the separate file? I think that's a good idea.\nWe can do that on master? For 7.x I think it's a good idea to log to both for back-compat? ",
            "author": "Varun Thacker",
            "id": "comment-16469963"
        },
        {
            "date": "2018-05-10T16:19:04+0000",
            "content": "We can do that on master? For 7.x I think it's a good idea to log to both for back-compat?\n\nHere's why I think we should only send logs from the .SlowRequest logger to the separate logfile:  The request gets logged twice to solr.log if we don't.  Once by the .Request logger, and once by the .SlowRequest logger. ",
            "author": "Shawn Heisey",
            "id": "comment-16470628"
        },
        {
            "date": "2018-05-10T16:25:18+0000",
            "content": "Fair enough. We can also call it out in the release notes.\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16470647"
        },
        {
            "date": "2018-05-10T16:28:57+0000",
            "content": "Agreed Shawn Heisey I think\u00a0that was the initial requirement we had this one logged (to segregate the slow query logs from main logs\u00a0to source\u00a0query improvements)\u00a0\n\n\u00a0\n\n\u00a0 ",
            "author": "Atita Arora",
            "id": "comment-16470668"
        },
        {
            "date": "2018-05-22T15:37:01+0000",
            "content": "Hi Shawn,\n\nDo you want me to pick this up and commit it or is this still on your radar? ",
            "author": "Varun Thacker",
            "id": "comment-16484153"
        },
        {
            "date": "2018-05-22T17:51:15+0000",
            "content": "I have been having a severe lack of free time lately.  Haven't had a chance to look at the latest.  Feel free to take over!\n\nBecause of the duplicate logging that would result if we don't log the slow logger to a separate log by default, i think it should default to a separate file.\n\nSomething I'm thinking about for a separate issue:  Offer an option (not enabled by default) that would send all of the standard request logging (org.apache.solr.core.SolrCore.Request) to a separate file.  I think might significantly reduce the overall size of the main solr.log. ",
            "author": "Shawn Heisey",
            "id": "comment-16484356"
        },
        {
            "date": "2018-05-28T19:04:43+0000",
            "content": "Updated patch folding in changes from Shawn's patch. Running tests etc.\n\nIf everything looks okay I'll commit it later today ",
            "author": "Varun Thacker",
            "id": "comment-16492888"
        },
        {
            "date": "2018-05-28T19:45:10+0000",
            "content": "Final patch.\u00a0\u00a0We log slow queries only to one file\u00a0 : solr_slow_requests.log as a warn\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16492900"
        },
        {
            "date": "2018-05-28T20:32:59+0000",
            "content": "Commit 44015e2acda37d8e0bebf6833d298ae3b263e580 in lucene-solr's branch refs/heads/master from Varun Saxena\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=44015e2 ]\n\nSOLR-11453: Configuring slowQueryThresholdMillis logs slow requests to a separate file - solr_slow_requests.log ",
            "author": "ASF subversion and git services",
            "id": "comment-16492915"
        },
        {
            "date": "2018-05-28T20:37:26+0000",
            "content": "Commit 9349a9d6325761147de3232c1f793b08e6082390 in lucene-solr's branch refs/heads/branch_7x from Varun Saxena\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9349a9d ]\n\nSOLR-11453: Configuring slowQueryThresholdMillis logs slow requests to a separate file - solr_slow_requests.log\n\n(cherry picked from commit 44015e2) ",
            "author": "ASF subversion and git services",
            "id": "comment-16492917"
        },
        {
            "date": "2018-05-28T20:37:48+0000",
            "content": "Thanks all!\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16492918"
        },
        {
            "date": "2018-06-02T15:20:44+0000",
            "content": "There's a tiny problem in CHANGES.txt ... in the \"Upgrade Notes\" section, it says \"Previously they would get logged in the solr.xml file\" \u2013 incorrect filename and no terminating period.  The sentence on the previous line also has a space before the period.  The extra space is also in the \"New Features\" mention. ",
            "author": "Shawn Heisey",
            "id": "comment-16499102"
        },
        {
            "date": "2018-06-02T15:27:55+0000",
            "content": "Hi Shawn,\n\nThanks for pointing it out. Do you want to just go ahead and fix it? Otherwise I'll do it later today ",
            "author": "Varun Thacker",
            "id": "comment-16499106"
        },
        {
            "date": "2018-06-02T15:40:10+0000",
            "content": "I've got too much happening today, or I would have just taken care of it. ",
            "author": "Shawn Heisey",
            "id": "comment-16499110"
        },
        {
            "date": "2018-06-05T22:16:28+0000",
            "content": "Commit 124b5e047df697bfd61f1d14f87a0ee5d24f68d8 in lucene-solr's branch refs/heads/master from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=124b5e0 ]\n\nSOLR-11453: fix typos in the CHANGES entry ",
            "author": "ASF subversion and git services",
            "id": "comment-16502573"
        },
        {
            "date": "2018-06-05T22:18:24+0000",
            "content": "Commit 7d827c627c3090354898cd02fb9cd6a303dfb2a9 in lucene-solr's branch refs/heads/branch_7x from Varun Thacker\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7d827c6 ]\n\nSOLR-11453: fix typos in the CHANGES entry ",
            "author": "ASF subversion and git services",
            "id": "comment-16502578"
        },
        {
            "date": "2018-06-11T14:13:14+0000",
            "content": "Shawn Heisey, Varun Thacker - There was no Ref Guide change needed for this change? I didn't follow closely, but it seems the current docs are out of date after this?\n\nSee what it would look like if the 7.4 Ref Guide was released today: https://builds.apache.org/view/L/view/Lucene/job/Solr-reference-guide-7.4/javadoc/configuring-logging.html#logging-slow-queries - is that still accurate? ",
            "author": "Cassandra Targett",
            "id": "comment-16508109"
        },
        {
            "date": "2018-06-11T14:17:49+0000",
            "content": "Good catch! Yeah I didn't\u00a0remember\u00a0that there was a ref guide\u00a0section for this. It would need to be updated.\n\nI'll write up a draft for it later today. Would appreciate a review ",
            "author": "Varun Thacker",
            "id": "comment-16508118"
        },
        {
            "date": "2018-07-18T20:58:27+0000",
            "content": "Commit d443ed088d2d6f6d6fd0c8965e27bde660ad440f in lucene-solr's branch refs/heads/master from Cassandra Targett\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=d443ed0 ]\n\nSOLR-11453: Ref Guide: add info on location of solr_slow_requests.log ",
            "author": "ASF subversion and git services",
            "id": "comment-16548394"
        },
        {
            "date": "2018-07-18T20:59:56+0000",
            "content": "Commit 2cb716952054132a2c267285063658681a9116bb in lucene-solr's branch refs/heads/branch_7x from Cassandra Targett\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=2cb7169 ]\n\nSOLR-11453: Ref Guide: add info on location of solr_slow_requests.log ",
            "author": "ASF subversion and git services",
            "id": "comment-16548398"
        }
    ]
}