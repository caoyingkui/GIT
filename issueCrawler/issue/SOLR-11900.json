{
    "id": "SOLR-11900",
    "title": "API command to delete oldest collections in a time routed alias",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "SolrCloud"
        ],
        "type": "Sub-task",
        "fix_versions": [
            "7.6",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "For Time Routed Aliases, we'll need an API command to delete the oldest collection(s).  Perhaps the command action name is DELETE_COLLECTION_OF_ROUTED_ALIAS (yes that's long).  And input is of course the routed alias name, plus a mandatory \"before\" which is a standard time input that Solr accepts that will likely include date math.  Thus if you used before=\"NOW/DAY-90DAYS\" then your guaranteed to have the last 90 days worth of data.  If a collection overlaps past what \"before\" is computed to be then it needs to stay.  The pattern might match any number of collections, perhaps none.  But in all cases, the most recent collection must be retained \u2013 the time routed aliases must at all times refer to at least one collection.\n\nThe underlying steps will be to first update the alias, and then delete the collection(s).  It ought to return the collections that get deleted.",
    "attachments": {
        "SOLR-11900.patch": "https://issues.apache.org/jira/secure/attachment/12908212/SOLR-11900.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-01-27T04:12:25+0000",
            "content": "Perhaps in fact we don't actually need a new API \u00a0but instead have a delete query that looks like this timeRoutedField:[* TO NOW/MONTH] auto-purge the old collections. \u00a0We've already got the URP in place to intercept and act. Arguably if new data creates collections, telling it to delete old stuff should delete the old collections.\n\nRegardless of how this feature looks, there will be a separate issue to auto-delete. \u00a0The issue here is about being explicit about it. ",
            "author": "David Smiley",
            "id": "comment-16341937"
        },
        {
            "date": "2018-01-29T22:15:42+0000",
            "content": "The attached patch uses the idea above, and is mostly done.  The main thing left is to add alias metadata flag to control this, defaulting to false. \u00a0Suggested:\u00a0\"deleteQueryDeletesCollections\".  I'm not sure wether to also pass-through the delete query as a normal query as well... there are distinctions in the timezone since a NOW/MONTH for this code I added will use the TZ from the alias metadata but the delete query against Solr will use the TZ parameter sent in the update request.  (P.S. I believe there is another issue about tlog replay not serializing the update request params).  So that's not nice.  Maybe I'm stubbornly latching onto this idea and I ought to instead make yet another conventional SolrCloud collections API request.  DELETEROUTEDALIASCOLLECTION?  Ugh.\n\nIt'd be interesting to see what happens if the incoming delete request is flowing into the oldest collection.  It will try to delete itself.  Does that work? I'm guessing it would, albeit with a timeout error.  If it doesn't; is it a big deal? I don't think so since an incoming request to the alias will always route to the first collection (\"soonest\"), and this one is not delete-able by this code. ",
            "author": "David Smiley",
            "id": "comment-16344109"
        },
        {
            "date": "2018-01-30T03:43:53+0000",
            "content": "I was chatting with Gus Heck and we figured the need for this isn't very compelling (in either form above).  Instead, if the user wants to delete old collections explicitly, they could do these commands themselves (update the alias, delete the collections).  Collection deletion could even be enhanced to detect its a part of an alias and auto-remove itself, which would make it easier and would eliminate a race condition of the target collection list getting updated at the same time more collections get added (however unlikely).  And after SOLR-11925, the user could also temporarily adjust whatever metadata setting that establishes the automatic collection deletion time span, assuming that new data is coming in to trigger the logic.\n\nSo I'll stop this now and re-use most of the code here in SOLR-11925 which needs most of the same stuff. ",
            "author": "David Smiley",
            "id": "comment-16344455"
        }
    ]
}