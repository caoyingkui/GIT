{
    "id": "SOLR-7956",
    "title": "There are interrupts on shutdown in places that can cause ChannelAlreadyClosed exceptions which prevents proper closing of transaction logs.",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "5.4",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Found this while beast testing HttpPartitionTest.",
    "attachments": {
        "SOLR-7956.patch": "https://issues.apache.org/jira/secure/attachment/12751899/SOLR-7956.patch",
        "SOLR-7956-commit-tracker.patch": "https://issues.apache.org/jira/secure/attachment/12753109/SOLR-7956-commit-tracker.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-08-25T14:55:25+0000",
            "author": "Mark Miller",
            "content": "I've changed most executors to no longer interrupt on shutdown. Tests work out okay. ",
            "id": "comment-14711393"
        },
        {
            "date": "2015-08-25T16:00:10+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1697707 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1697707 ]\n\nSOLR-7956: There are interrupts on shutdown in places that can cause ChannelAlreadyClosed exceptions which prevents proper closing of transaction logs. ",
            "id": "comment-14711521"
        },
        {
            "date": "2015-08-26T18:46:55+0000",
            "author": "Scott Blum",
            "content": "Interrupts permanently breaking index writers is our #1 production issue right now, so I've just started looking at all the code and JIRAs related to this problem.  Glad I found this one, I might try a backport to our ~5.2.1 instance.\n\nOne question, have you also audited the existing Future.cancel(true) calls?  I see several of these in Solr.  The ones in ReplicationHandler and CommitTracker seem suspect to me, not sure about HttpShardHandler (maybe that one doesn't hit any core stuff directly). ",
            "id": "comment-14715320"
        },
        {
            "date": "2015-08-26T19:23:10+0000",
            "author": "Yonik Seeley",
            "content": "The ones in ReplicationHandler and CommitTracker seem suspect to me\n\nI think you're right... the one in CommitTracker does look suspect, esp since we now share the IndexWriter across UpdateHandlers on a core reload. ",
            "id": "comment-14715371"
        },
        {
            "date": "2015-08-26T19:42:51+0000",
            "author": "Scott Blum",
            "content": "Supposing I make the following adjustments:\n\npending.cancel(true) => pending.cancel(false)\nscheduler.shutdownNow() => scheduler.shutdown();\n\nThen, do I need to wait for the scheduler to actually terminate before exiting close()? ",
            "id": "comment-14715392"
        },
        {
            "date": "2015-08-26T19:57:23+0000",
            "author": "Scott Blum",
            "content": "I also see a bunch of calls to ExecutorUtil.shutdownNowAndAwaitTermination(), that seems pretty dangerous.  It's difficult to audit exactly how those executors are being used, but it seems worrisome. ",
            "id": "comment-14715407"
        },
        {
            "date": "2015-08-26T20:02:00+0000",
            "author": "Scott Blum",
            "content": "fsyncService.shutdownNow() in IndexFetcher.cleanup() seems particularly dangerous, as that executor's tasks dive directly into channel code ",
            "id": "comment-14715413"
        },
        {
            "date": "2015-08-28T15:23:08+0000",
            "author": "Mark Miller",
            "content": "Okay, this patch drops use of shutdownNow and cancel(true) - miss anything? ",
            "id": "comment-14719977"
        },
        {
            "date": "2015-08-28T15:25:44+0000",
            "author": "Mark Miller",
            "content": "\n       try {\n+        // we allow interrupts because ref counted closing is done - we want out\n         ExecutorUtil.shutdownNowAndAwaitTermination(recoveryExecutor);\n       } catch (Exception e) {\n\n\n\nWhoops - I'll flip that one too. I think it's fine, but if we can take out all use, it simplifies things a bit. ",
            "id": "comment-14719985"
        },
        {
            "date": "2015-08-28T15:33:02+0000",
            "author": "Mark Miller",
            "content": "Hmm...replication will actually hang in some tests when we don't interrupt. I remember this now from the last time I worked on this issue. ",
            "id": "comment-14720010"
        },
        {
            "date": "2015-08-28T15:51:27+0000",
            "author": "Mark Miller",
            "content": "Okay, updated patch. Can't wait for shutdown in the replication handler pre close or we get locked up in core reload. ",
            "id": "comment-14720038"
        },
        {
            "date": "2015-08-28T16:50:04+0000",
            "author": "Mark Miller",
            "content": "This does slow down the tests a few minutes - though they are already 6 minutes slower than they were for me this spring anyway. ",
            "id": "comment-14720219"
        },
        {
            "date": "2015-08-29T02:09:19+0000",
            "author": "Scott Blum",
            "content": "Some of those might be okay, I don't know the code well enough.  However, the shutdownNow() call in CommitTracker is definitely fatal.  I've attached a patch to demonstrate with a test case.\n\nFWIW, the pending.cancel(true), while dangerous, is far less likely to be hit because the task nulls out the pending field as soon as it starts to run.  But the shutdownNow() will interrupt the thread even after the field is nulled out, so it's a lot more likely to really hit. ",
            "id": "comment-14720914"
        },
        {
            "date": "2015-08-29T02:11:02+0000",
            "author": "Scott Blum",
            "content": "private volatile boolean closed = false;\n\n^^ new field is not actually used ",
            "id": "comment-14720916"
        },
        {
            "date": "2015-08-30T04:28:54+0000",
            "author": "Mark Miller",
            "content": "Speak of the devil, just saw an incident where that commit tracker interrupter is screwing up both Solr and HDFS. ",
            "id": "comment-14721376"
        },
        {
            "date": "2015-08-30T23:44:33+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1700177 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1700177 ]\n\nSOLR-7956: There are interrupts on shutdown in places that can cause ChannelAlreadyClosed exceptions which prevents proper closing of transaction logs, interfere with the IndexWriter, the hdfs client and other things. ",
            "id": "comment-14721783"
        },
        {
            "date": "2015-08-30T23:54:49+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1700178 from Mark Miller in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1700178 ]\n\nSOLR-7956: There are interrupts on shutdown in places that can cause ChannelAlreadyClosed exceptions which prevents proper closing of transaction logs. ",
            "id": "comment-14721792"
        },
        {
            "date": "2015-08-30T23:57:32+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1700179 from Mark Miller in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1700179 ]\n\nSOLR-7956: There are interrupts on shutdown in places that can cause ChannelAlreadyClosed exceptions which prevents proper closing of transaction logs, interfere with the IndexWriter, the hdfs client and other things. ",
            "id": "comment-14721793"
        },
        {
            "date": "2015-08-31T02:22:10+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1700185 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1700185 ]\n\nSOLR-7956: Remove a few more interrupt causes. ",
            "id": "comment-14721876"
        },
        {
            "date": "2015-08-31T02:49:41+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1700188 from Mark Miller in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1700188 ]\n\nSOLR-7956: Remove a few more interrupt causes. ",
            "id": "comment-14721894"
        },
        {
            "date": "2015-08-31T17:20:02+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1700279 from Mark Miller in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1700279 ]\n\nSOLR-7956: Missed an interrupt shutdown on 5x backport. ",
            "id": "comment-14723717"
        },
        {
            "date": "2015-09-01T19:13:15+0000",
            "author": "Scott Blum",
            "content": "Mark Miller LGTM, thanks!\n\nOne question about:\n\nhttps://svn.apache.org/viewvc/lucene/dev/branches/branch_5x/solr/core/src/java/org/apache/solr/update/CommitTracker.java?r1=1700188&r2=1700187&pathrev=1700188\n\nI don't remember why anymore, but I may have needed to use `ExecutorUtil.shutdownAndAwaitTermination(scheduler);` locally when I was testing this.  Curious if you have concrete reasons for preferring one or the other here. ",
            "id": "comment-14725903"
        },
        {
            "date": "2015-09-01T21:07:41+0000",
            "author": "Mark Miller",
            "content": "No strong reason - just that we were not waiting to begin with, so I figured I wouldn't change that, just remove the interrupts. Tests did not seem to complain, so stuck with it. ",
            "id": "comment-14726190"
        },
        {
            "date": "2015-10-06T14:39:02+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1707066 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1707066 ]\n\nSOLR-7956: Fix CHANGES entries that got mangled. ",
            "id": "comment-14945121"
        }
    ]
}