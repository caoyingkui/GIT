{
    "id": "SOLR-5615",
    "title": "Deadlock while trying to recover after a ZK session expiry",
    "details": {
        "affect_versions": "4.4,                                            4.5,                                            4.6",
        "status": "Resolved",
        "fix_versions": [
            "4.6.1",
            "6.0"
        ],
        "components": [
            "SolrCloud"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "The sequence of events which might trigger this is as follows:\n\n\n\tLeader of a shard, say OL, has a ZK expiry\n\tThe new leader, NL, starts the election process\n\tNL, through Overseer, clears the current leader (OL) for the shard from the cluster state\n\tOL reconnects to ZK, calls onReconnect from event thread (main-EventThread)\n\tOL marks itself down\n\tOL sets up watches for cluster state, and then retrieves it (with no leader for this shard)\n\tNL, through Overseer, updates cluster state to mark itself leader for the shard\n\tOL tries to register itself as a replica, and waits till the cluster state is updated\n   with the new leader from event thread\n\tZK sends a watch update to OL, but it is blocked on the event thread waiting for it.\n\n\n\nOops. This finally breaks out after trying to register itself as replica times out after 20 mins.",
    "attachments": {
        "SOLR-5615.patch": "https://issues.apache.org/jira/secure/attachment/12621800/SOLR-5615.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-13864250",
            "date": "2014-01-07T14:12:59+0000",
            "content": "Submitted https://github.com/apache/lucene-solr/pull/13 for one possible solution, though I am not sure if this is the right way to go about this.. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13864341",
            "date": "2014-01-07T15:50:25+0000",
            "content": "Not sure given the info, but the patch doesn't seem crazy to me. I've made a few adjustments in this patch. "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-13864389",
            "date": "2014-01-07T17:01:12+0000",
            "content": "Here's some log trace which actually happened, might help understand the scenario above..\n\n\n2014-01-06 06:22:03,867 INFO [main-EventThread] o.a.s.c.c.ConnectionManager [ConnectionManager.java:88] Our previous ZooKeeper session was expired. Attempting to reconnect to recover relationship with ZooKeeper...\n\n// ..\n\n2014-01-06 06:22:12,529 INFO [main-EventThread] o.a.s.c.c.ConnectionManager [ConnectionManager.java:103] Connection with ZooKeeper reestablished.\n\n// ..\n\n2014-01-06 06:22:36,573 INFO [main-EventThread] o.a.s.c.ZkController [ZkController.java:989] publishing core=collection_20131120_shard205_replica2 state=down\n\n// ..\n\n2014-01-06 06:28:01,479 INFO [main-EventThread] o.a.s.c.c.ZkStateReader [ZkStateReader.java:199] Updating cluster state from ZooKeeper... \n2014-01-06 06:28:01,487 INFO [main-EventThread] o.a.s.c.ZkController [ZkController.java:651] Register node as live in ZooKeeper:/live_nodes/host5:10750_solr\n\n// See trace above, it directly got leader props from ZK successfully, so there is actually a leader at this point contrary to what it finds below\n\n2014-01-06 06:28:01,567 INFO [main-EventThread] o.a.s.c.c.SolrZkClient [SolrZkClient.java:378] makePath: /live_nodes/host5:10750_solr\n2014-01-06 06:28:01,669 INFO [main-EventThread] o.a.s.c.ZkController [ZkController.java:757] Register replica - core:collection_20131120_shard241_replica2 address:http://host5:10750/solr collection:collection_20131120 shard:shard241\n2014-01-06 06:28:01,669 INFO [main-EventThread] o.a.s.c.s.i.HttpClientUtil [HttpClientUtil.java:103] Creating new http client, config:maxConnections=10000&maxConnectionsPerHost=20&connTimeout=30000&socketTimeout=30000&retry=false\n\n// nothing much after this on main-EventThread for 20 mins..\n\n2014-01-06 06:54:01,786 ERROR [main-EventThread] o.a.s.c.ZkController [ZkController.java:869] Error getting leader from zk\norg.apache.solr.common.SolrException: No registered leader was found, collection:collection_20131120 slice:shard241\n\n// Then goes on to the next replica ..\n\n2014-01-06 06:54:01,786 INFO [main-EventThread] o.a.s.c.ZkController [ZkController.java:757] Register replica - core:collection_20131120_shard209_replica2 address:http://host5:10750/solr collection:collection_20131120 shard:shard209\n2014-01-06 06:54:01,786 INFO [main-EventThread] o.a.s.c.s.i.HttpClientUtil [HttpClientUtil.java:103] Creating new http client, config:maxConnections=10000&maxConnectionsPerHost=20&connTimeout=30000&socketTimeout=30000&retry=false\n\n// waits another twenty mins (by which time I ordered a shutdown, so things started erroring out sooner after that)\n\n2014-01-06 07:19:21,656 ERROR [main-EventThread] o.a.s.c.ZkController [ZkController.java:869] Error getting leader from zk\norg.apache.solr.common.SolrException: No registered leader was found, collection:collection_20131120 slice:shard209\n\n// After trying to register all other replicas, these failed fast because we had ordered a shutdown already..\n\n2014-01-06 07:19:21,693 INFO [main-EventThread] o.a.s.c.c.DefaultConnectionStrategy [DefaultConnectionStrategy.java:48] Reconnected to ZooKeeper\n2014-01-06 07:19:21,693 INFO [main-EventThread] o.a.s.c.c.ConnectionManager [ConnectionManager.java:130] Connected:true\n\n// And immediately, *now* it fires all the events it was waiting for!\n\n2014-01-06 07:19:21,693 INFO [main-EventThread] o.a.s.c.c.ConnectionManager [ConnectionManager.java:72] Watcher org.apache.solr.common.cloud.ConnectionManager@2467da0a name:ZooKeeperConnection Watcher:host1:11600,host2:11600,host3:11600 got event WatchedEvent state:Disconnected type:None path:null path:null type:None\n2014-01-06 07:19:21,693 INFO [main-EventThread] o.a.z.ClientCnxn [ClientCnxn.java:509] EventThread shut down\n\n// many more such disc events, and then the watches\n\n2014-01-06 07:19:21,694 WARN [main-EventThread] o.a.s.c.c.ZkStateReader [ZkStateReader.java:281] ZooKeeper watch triggered, but Solr cannot talk to ZK\n2014-01-06 07:19:21,694 INFO [main-EventThread] o.a.s.c.c.ZkStateReader [ZkStateReader.java:210] A cluster state change: WatchedEvent state:SyncConnected type:NodeDataChanged path:/clusterstate.json, has occurred - updating... (live nodes size: 112)\n2014-01-06 07:19:21,694 WARN [main-EventThread] o.a.s.c.c.ZkStateReader [ZkStateReader.java:234] ZooKeeper watch triggered, but Solr cannot talk to ZK\n\n\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13864401",
            "date": "2014-01-07T17:06:38+0000",
            "content": "Thanks, perfect. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13864434",
            "date": "2014-01-07T17:35:27+0000",
            "content": "Okay, now it's more clear to me. We need to run onReconnect in a background thread I think. "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-13864446",
            "date": "2014-01-07T17:48:07+0000",
            "content": "That, incidentally, was my first attempt at a fix! (Should have a diff..) However, onReconnect in any case runs in the event thread of the expired ZK which wouldn't have events after that, so it's effectively backgrounded? It should still work as a solution I guess.. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13864460",
            "date": "2014-01-07T17:58:00+0000",
            "content": "However, onReconnect in any case runs in the event thread of the expired ZK which wouldn't have events after that, so it's effectively backgrounded?\n\nBut it holds the ConnectionManager this lock while it runs right? I think we just don't want to hold that lock while it runs. \n\nI think the other changes are likely okay too - I'm playing around with a combination of the two. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13864470",
            "date": "2014-01-07T18:04:22+0000",
            "content": "Another rev. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13864475",
            "date": "2014-01-07T18:09:42+0000",
            "content": "Even with the other changes, I like the idea of using a background thread because I don't think it's right that we do that whole reconnect process before we set that we are connected to zk and get out of the connection manager. I really don't think that process should hold up the connection manager at all - it's meant to just trigger it. "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-13864491",
            "date": "2014-01-07T18:20:04+0000",
            "content": "Fair enough. Would that allow multiple onReconnect.command () invocations to run simultaneously, and is that fine? (on mobile, so my reading of the patch could be wrong) What if we were in the process of recovering when we were unfortunate enough to get a second expiry thereby bringing all nodes down? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13864502",
            "date": "2014-01-07T18:27:18+0000",
            "content": "Yeah, I've been considered the same thing. My inclination was it was okay, but we may have to add something to cancel our leader election before joining the election to be sure. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13864562",
            "date": "2014-01-07T19:05:57+0000",
            "content": "Another rev that adds what I think is a decent change anyway - before joining an election, cancel any known previous election participation. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13865604",
            "date": "2014-01-08T16:36:03+0000",
            "content": "Commit 1556572 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1556572 ]\n\nSOLR-5615: Deadlock while trying to recover after a ZK session expiration. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13865606",
            "date": "2014-01-08T16:37:04+0000",
            "content": "Commit 1556573 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1556573 ]\n\nSOLR-5615: Deadlock while trying to recover after a ZK session expiration. "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-13865612",
            "date": "2014-01-08T16:40:45+0000",
            "content": "Had noticed a separate race while initially investigating running onReconnect in a separate thread, https://github.com/apache/lucene-solr/pull/15 for that. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13865621",
            "date": "2014-01-08T16:44:30+0000",
            "content": "Thanks, we should open a new JIRA issue for that. "
        },
        {
            "author": "Ramkumar Aiyengar",
            "id": "comment-13865627",
            "date": "2014-01-08T16:48:47+0000",
            "content": "SOLR-5620 "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13867165",
            "date": "2014-01-09T22:16:53+0000",
            "content": "Noted while backporting SOLR-5543 to the 4.6 branch: In the trunk CHANGES.txt file for trunk, this issue number shows up in the 4.6.1 section, but does not appear to have been actually backported to the 4.6 branch yet. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13867180",
            "date": "2014-01-09T22:26:50+0000",
            "content": "Yeah, I started it, but turns out it's difficult without backporting another fix first. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13869834",
            "date": "2014-01-13T18:59:36+0000",
            "content": "Commit 1557811 from Mark Miller in branch 'dev/branches/lucene_solr_4_6'\n[ https://svn.apache.org/r1557811 ]\n\nSOLR-5615: Deadlock while trying to recover after a ZK session expiration. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13869839",
            "date": "2014-01-13T19:06:41+0000",
            "content": "Commit 1557812 from Mark Miller in branch 'dev/branches/lucene_solr_4_6'\n[ https://svn.apache.org/r1557812 ]\n\nSOLR-5615: Add CHANGES entry to 4.6 branch "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13869850",
            "date": "2014-01-13T19:13:33+0000",
            "content": "Commit 1557814 from Mark Miller in branch 'dev/branches/lucene_solr_4_6'\n[ https://svn.apache.org/r1557814 ]\n\nSOLR-5615: Fix CHANGES mismerge "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13888098",
            "date": "2014-01-31T20:06:36+0000",
            "content": "Bulk change via releasing 4.6.1 in JIRA. Any issues that were not resolved against 4.6.1 should be. I have not gone through the generated emails yet.  "
        },
        {
            "author": "ASF GitHub Bot",
            "id": "comment-14262139",
            "date": "2014-12-31T12:28:56+0000",
            "content": "Github user andyetitmoves closed the pull request at:\n\n    https://github.com/apache/lucene-solr/pull/13 "
        }
    ]
}