{
    "id": "SOLR-9000",
    "title": "New Admin UI hardcodes /solr context and fails when it changes",
    "details": {
        "components": [
            "Admin UI"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "6.0",
        "status": "Closed",
        "resolution": "Won't Fix",
        "priority": "Major"
    },
    "description": "If the solr context is changed from /solr to any other value (e.g. /solr6_0/instance/solr1), the new Admin UI does not work as it still tries to load resources from /solr prefix:\n\nThe context is changed by editing server/contexts/solr-jetty-context.xml:\n\n<Set name=\"contextPath\"><Property name=\"hostContext\" default=\"/solr6_0/instance/solr1\"/></Set>\n\nand by changing redirect in the server/etc/jetty.xml\n\n\n    <New class=\"org.eclipse.jetty.rewrite.handler.RedirectRegexRule\">\n      <Set name=\"regex\">^/$</Set>\n      <Set name=\"replacement\">/solr6_0/instance/solr1/</Set>\n     </New>\n\nThis affects New Admin UI, as well as both links between the UIs.\n\nThe old Admin UI seems to work with the changed context, once it is manually loaded.",
    "attachments": {
        "solr-wrong-urls-screenshot.png": "https://issues.apache.org/jira/secure/attachment/12799048/solr-wrong-urls-screenshot.png"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-04-16T11:32:37+0000",
            "author": "Upayavira",
            "content": "It is my impression that, since the switch to Solr being a standalone app, this prefix is not intended as  a user configurable thing. Therefore, no effort has gone into making it configuable within the admin UI. ",
            "id": "comment-15244161"
        },
        {
            "date": "2016-04-16T12:15:41+0000",
            "author": "Alexandre Rafalovitch",
            "content": "I do not remember any discussions to that effect. I remember about the talks to get rid of prefix all-together perhaps.\n\nBut it is possible that is so, as the bin/solr script does not seem to offer any way to change the URL either. E.g. for cloud example creation. ",
            "id": "comment-15244180"
        },
        {
            "date": "2016-04-17T03:09:11+0000",
            "author": "Shawn Heisey",
            "content": "TL;DR warning.  Sorry, couldn't get my mind to shut up.\n\nIf the old admin UI works with an alternate context path, then it must be possible for the javascript to figure out what the path should be ... but I suspect that it will require special work (java system property set from an environment variable probably) to make the bin/solr script aware of the context path passed to Jetty.\n\nWhile I understand the desire to make things as flexible as possible, each bit that is easily configurable is another variable that must be tracked and handled in multiple places, and another potential source of bugs.\n\nI think it is prudent to keep using /solr as the first part of all URL paths, no matter what happens with future efforts to pull the networking layer into Solr.  SOLR-8029 changes the landscape a bit, but until that becomes a feature in released code, we must decide whether we want Solr to work with a user-defined context path.  I do not think we should try to support that. ",
            "id": "comment-15244514"
        },
        {
            "date": "2016-08-29T09:39:53+0000",
            "author": "Johan Sj\u00f6berg",
            "content": "To try and be helpful and clear up some confusion\n\nIs contextPath a user configurable property? Yes and in the above example it is imposed by the application server as part of the servlet standard. The issue is that Solr doesn't respect it. \nIs there a need? Yes, for instance to deploy multiple Solr instances to the same application server. \nCan javascript be contextPath aware? Yes. Any server-side html rendering mechanism should allow this. Consider a simple JSP snippet with <script src=\"<%=request.getContextPath%/myscript.js></script> or myJsVar=<%=request.getContextPath%>.\n\nIn general, I think that the choice to disregard a standard should carry a strong argument.  ",
            "id": "comment-15445387"
        },
        {
            "date": "2016-08-29T10:49:14+0000",
            "author": "Upayavira",
            "content": "See here: https://wiki.apache.org/solr/WhyNoWar\n\nSolr does not support being used as a war in a different servlet container. It may work, it may not.\n\nTherefore, as started above, the additional complexity required to support multiple roots has not been added to the UI.\n\nIf someone took the time to make it work, i wouldn't object, but i would be concerned if that led to people thinking Solr would work as a war. If it isn't this preventing it, it may soon be something else. And that something else could occur at any time.\n\nI'd suggest you rearchitect your system to use the inbuilt jetty, as you will be following Standard practice at that point. If that requires two JVMs, so be it. ",
            "id": "comment-15445528"
        },
        {
            "date": "2016-08-29T11:44:32+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "-1 to support this now that Solr is a standalone app and being a servlet is just an impl. detail.\nLots of Solr config relies on the fact that there is only one Solr in the container, such as the use of Java properties for solr.solr.home, solr.data.dir etc.\nWe should close this with \"Won't fix\". \n\nI will probably be easier to achieve embedding Solr in various ways once we re-package Solr and get rid of the Jetty coupling we have today. ",
            "id": "comment-15445622"
        },
        {
            "date": "2016-08-29T12:38:56+0000",
            "author": "Alexandre Rafalovitch",
            "content": "I think the main use-case I can think of is having multiple Solr instances behind a proxy on different path. E.g. /solr62, /solr61. Being able to have each one accessible with its own Admin UI would be easy if the new UI support the path like the old UI does. But if it does not, it is nearly impossible (URL rewriting by proxy is messy).\n\nAn alternative, is to put each instance on its own port, but that could have issues with not all ports being open.\n\nBut the main issue is whether this is a regression. If we treat it as one, it should probably be fixed (I can look into what that takes). If we treat it as non-regression, the reasons to implement it are limited.  ",
            "id": "comment-15445753"
        },
        {
            "date": "2016-08-29T12:58:14+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "It is a regression if we have official documentation stating that Solr supports multiple installs per app server, but we have explicitly removed any such docs as far as I know.\nIt is not Solr's responsibility to provide Proxy functionality. I have successfully used nginx to proxy multiple Solrs on another public facing URL, but those use cases are outside the boundaries of Solr in my opinion. ",
            "id": "comment-15445798"
        },
        {
            "date": "2016-08-29T15:50:09+0000",
            "author": "Alexandre Rafalovitch",
            "content": "Latest Solr is a blackbox with a fixed URL (/solr). Any other configuration should be achieved through external means (e.g. proxy). ",
            "id": "comment-15446239"
        },
        {
            "date": "2017-01-09T16:12:34+0000",
            "author": "Timo Hund",
            "content": "Hi together, this would mean that multiple solr installations would allways require one hostname per solr instance because seperating the instances by the path is not possible. Why not make the pathes relativ as proposed in SOLR-9584 to allow both? ",
            "id": "comment-15812132"
        },
        {
            "date": "2017-01-09T16:58:43+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "That is not true. You can start as many Solrs you like on the same host by specifying different ports solr start -p <port> ",
            "id": "comment-15812246"
        },
        {
            "date": "2017-01-10T09:32:23+0000",
            "author": "Timo Hund",
            "content": "I know that the port can be used. And i also undestand an agree that solr should be a blackbox which means that internally in the java application the assumption is made that /solr is the path. What do you think about SOLR-9584? I think this is something different because it is related to the use interface, a proxy would not have a chance to change the delivered javascript code. ",
            "id": "comment-15814471"
        }
    ]
}