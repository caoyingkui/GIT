{
    "id": "SOLR-2739",
    "title": "TestSqlEntityProcessorDelta.testNonWritablePersistFile failures on some systems",
    "details": {
        "affect_versions": "3.3",
        "status": "Closed",
        "fix_versions": [
            "3.5",
            "4.0-ALPHA"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Shawn Heisey noted on the mailing list that he was getting consistent failures from TestSqlEntityProcessorDelta.testNonWritablePersistFile on his machine.\n\nI can't reproduce his exact failures, but the test is hinky enough that i want to try and clean it up.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-13095635",
            "date": "2011-09-01T22:02:05+0000",
            "content": "Failure Shawn reported seeing consistently with all seeds...\n\n\n    [junit] 08/08/2011 10:05:13 \u0645 org.apache.solr.SolrTestCaseJ4 assertQ\n    [junit] SEVERE: REQUEST FAILED: xpath=//*[@numFound='0']\n    [junit]     xml response was: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    [junit] <response>\n    [junit] <lst name=\"responseHeader\"><int name=\"status\">0</int><int name=\"QTime\">1</int><lst name=\"params\"><str name=\"start\">0</str><str name=\"q\">id:1</str><str name=\"qt\">standard</str><str name=\"rows\">20</str><str name=\"version\">2.2</str></lst></lst><result name=\"response\" numFound=\"1\" start=\"0\"><doc><arr name=\"desc\"><str>hello</str></arr><str name=\"id\">1</str><date name=\"timestamp\">2011-08-08T19:05:13.353Z</date></doc></result>\n    [junit] </response>\n    [junit]\n    [junit]     request was:start=0&q=id:1&qt=standard&rows=20&version=2.2\n    [junit] 08/08/2011 10:05:13 \u0645 org.apache.solr.common.SolrException log\n    [junit] SEVERE: REQUEST FAILED: start=0&q=id:1&qt=standard&rows=20&version=2.2:java.lang.RuntimeException: REQUEST FAILED: xpath=//*[@numFound='0']\n    [junit]     xml response was: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    [junit] <response>\n    [junit] <lst name=\"responseHeader\"><int name=\"status\">0</int><int name=\"QTime\">1</int><lst name=\"params\"><str name=\"start\">0</str><str name=\"q\">id:1</str><str name=\"qt\">standard</str><str name=\"rows\">20</str><str name=\"version\">2.2</str></lst></lst><result name=\"response\" numFound=\"1\" start=\"0\"><doc><arr name=\"desc\"><str>hello</str></arr><str name=\"id\">1</str><date name=\"timestamp\">2011-08-08T19:05:13.353Z</date></doc></result>\n    [junit] </response>\n    [junit]\n    [junit]     request was:start=0&q=id:1&qt=standard&rows=20&version=2.2\n    [junit]     at org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:377)\n    [junit]     at org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:351)\n    [junit]     at org.apache.solr.handler.dataimport.TestSqlEntityProcessorDelta.testNonWritablePersistFile(TestSqlEntityProcessorDelta.java:121)\n    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    [junit]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    [junit]     at java.lang.reflect.Method.invoke(Method.java:597)\n    [junit]     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n    [junit]     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n    [junit]     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n    [junit]     at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n    [junit]     at org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:48)\n    [junit]     at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    [junit]     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)\n    [junit]     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)\n    [junit]     at org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1339)\n    [junit]     at org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1241)\n    [junit]     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)\n    [junit]     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)\n    [junit]     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)\n    [junit]     at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)\n    [junit]     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)\n    [junit]     at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    [junit]     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)\n    [junit]     at org.junit.runners.ParentRunner.run(ParentRunner.java:236)\n    [junit]     at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)\n    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:420)\n    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:911)\n    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:743)\n    [junit]\n    [junit] NOTE: reproduce with: ant test -Dtestcase=TestSqlEntityProcessorDelta -Dtestmethod=testNonWritablePersistFile -Dtests.seed=-792d6c110a4b6e96:1c3eeb109a03bb0b:-1ac8e3d1d169d356\n    [junit] NOTE: test params are: locale=ar_SA, timezone=Asia/Amman\n    [junit] NOTE: all tests run in this JVM:\n    [junit] [TestCachedSqlEntityProcessor, TestClobTransformer, TestContentStreamDataSource, TestDataConfig, TestDateFormatTransformer, TestDocBuilder, TestDocBuilder2, TestDocBuilderThreaded, TestEntityProcessorBase, TestErrorHandling, TestEvaluatorBag, TestFieldReader, TestFileListEntityProcessor, TestJdbcDataSource, TestLineEntityProcessor, TestNumberFormatTransformer, TestPlainTextEntityProcessor, TestRegexTransformer, TestScriptTransformer, TestSqlEntityProcessor, TestSqlEntityProcessor2, TestSqlEntityProcessorDelta]\n    [junit] NOTE: Linux 2.6.18-238.12.1.el5.centos.plusxen amd64/Sun Microsystems Inc. 1.6.0_26 (64-bit)/cpus=3,threads=4,free=109853160,total=195952640\n\n\n\ni can't reproduce, this exact error and i don't fully understand the test, but it seems to be attempting to verify that if the dataimport.properties file can't be written to, then after it \"does some stuff\", there are still no docs in the index.\n\nthe problem is that it conditionally tries to \"do stuff\" if the JVM says that it was able to mark the dataimport.properties as read only w/o any indication of this in the test output.  on top of that: the file it creates & attempts to mark read only is only cleaned up if all of this succeeds - and from my own testing that can cause problems in other tests in this class.\n\nI'm going to change this silent conditional to an assumption, and move the file deletion logic into a higher up finally block, and see if that change the behavior on shawns box (if he starts seeing a message about the assumption failed, we'll have made progress) "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13095642",
            "date": "2011-09-01T22:14:00+0000",
            "content": "Committed revision 1164287 - trunk\nCommitted revision 1164289 - 3x\n\nThis should make the test sane enough that it either works, or correctly skips because of the assumption, on all platforms.\n\nleaving open to see if Shawn chimes in with any followup comments "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13095718",
            "date": "2011-09-02T01:55:03+0000",
            "content": "I continue to get a failure.  It looks like it's checking to make sure numFound is 0, but it's seeing 1, which is what it did before.  The exception does look different, and now it's caused by another exception.  Failure text from the new branch_3x:\n\n\n    [junit] ------------- Standard Error -----------------\n    [junit] NOTE: reproduce with: ant test -Dtestcase=TestSqlEntityProcessorDelta -Dtestmethod=testNonWritablePersistFile -Dtests.seed=-5706afed1ddb3d06:65ec54c2cd2efa63:3ba1f077e387d65\n    [junit] NOTE: test params are: locale=en_IE, timezone=Europe/Berlin\n    [junit] NOTE: all tests run in this JVM:\n    [junit] [TestCachedSqlEntityProcessor, TestClobTransformer, TestContentStreamDataSource, TestDataConfig, TestDateFormatTransformer, TestDocBuilder, TestDocBuilder2, TestDocBuilderThreaded, TestEntityProcessorBase, TestErrorHandling, TestEvaluatorBag, TestFieldReader, TestFileListEntityProcessor, TestJdbcDataSource, TestLineEntityProcessor, TestNumberFormatTransformer, TestPlainTextEntityProcessor, TestRegexTransformer, TestScriptTransformer, TestSqlEntityProcessor, TestSqlEntityProcessor2, TestSqlEntityProcessorDelta]\n    [junit] NOTE: Linux 2.6.18-238.12.1.el5.centos.plusxen amd64/Sun Microsystems Inc. 1.6.0_26 (64-bit)/cpus=3,threads=4,free=193825632,total=247136256\n    [junit] ------------- ---------------- ---------------\n    [junit] Testcase: testNonWritablePersistFile(org.apache.solr.handler.dataimport.TestSqlEntityProcessorDelta):       Caused an ERROR\n    [junit] Exception during query\n    [junit] java.lang.RuntimeException: Exception during query\n    [junit]     at org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:385)\n    [junit]     at org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:352)\n    [junit]     at org.apache.solr.handler.dataimport.TestSqlEntityProcessorDelta.testNonWritablePersistFile(TestSqlEntityProcessorDelta.java:124)\n    [junit]     at org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:147)\n    [junit]     at org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:50)\n    [junit] Caused by: java.lang.RuntimeException: REQUEST FAILED: xpath=//*[@numFound='0']\n    [junit]     xml response was: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    [junit] <response>\n    [junit] <lst name=\"responseHeader\"><int name=\"status\">0</int><int name=\"QTime\">0</int><lst name=\"params\"><str name=\"start\">0</str><str name=\"q\">id:1</str><str name=\"qt\">standard</str><str name=\"rows\">20</str><str name=\"version\">2.2</str></lst></lst><result name=\"response\" numFound=\"1\" start=\"0\"><doc><arr name=\"desc\"><str>hello</str></arr><str name=\"id\">1</str><date name=\"timestamp\">2011-09-02T01:45:21.014Z</date></doc></result>\n    [junit] </response>\n    [junit]\n    [junit]     request was:start=0&q=id:1&qt=standard&rows=20&version=2.2\n    [junit]     at org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:378)\n\n "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13104824",
            "date": "2011-09-14T19:46:10+0000",
            "content": "This is still a problem.  As it seems to be specific to my environment, I am very interested in tracking it down, but I have no idea where to begin.  My current test setup is CentOS 6, ext4, Oracle Java 1.6.0_27-b07.  Can you give me pointers on how to figure out what the problem is?  Do you need me to provide any more information than I have already?\n\nSteps to reproduce current failures on my system from the commandline with 3.4 or branch_3x:\n\nsvn co https://svn.apache.org/repos/asf/lucene/dev/branches/lucene_solr_3_4 lucene_solr_3_4\ncd lucene_solr_3_4/solr\nant test\n\nsvn co https://svn.apache.org/repos/asf/lucene/dev/branches/branch_3x branch_3x\ncd branch_3x/solr\nant test\n\nSome additional info:\n\n[root@bigindy5 src]# rpm -qa | egrep \"ant|junit|java\"\njava-1.6.0-openjdk-1.6.0.0-1.36.b17.el6_0.x86_64\njava-1.6.0-sun-1.6.0.27-1.0.cf.x86_64\nant-nodeps-1.7.1-13.el6.x86_64\nwpa_supplicant-0.6.8-10.el6.x86_64\nlibvirt-java-devel-0.4.5-2.el6.noarch\njava-1.6.0-sun-devel-1.6.0.27-1.0.cf.x86_64\nenchant-1.5.0-4.el6.x86_64\ntzdata-java-2011g-1.el6.noarch\njava_cup-0.10k-5.el6.x86_64\njunit-3.8.2-6.5.el6.x86_64\njava-1.6.0-sun-plugin-1.6.0.27-1.0.cf.x86_64\nanthy-9100h-10.1.el6.x86_64\nlibvirt-java-0.4.5-2.el6.noarch\njava-1.5.0-gcj-1.5.0.0-29.1.el6.x86_64\nant-1.7.1-13.el6.x86_64\nant-junit-1.7.1-13.el6.x86_64\nibus-anthy-1.2.1-1.el6.x86_64\njava-1.6.0-sun-jdbc-1.6.0.27-1.0.cf.x86_64\njunit4-4.5-5.3.el6.noarch\n\n[root@bigindy5 src]# java -version\njava version \"1.6.0_27\"\nJava(TM) SE Runtime Environment (build 1.6.0_27-b07)\nJava HotSpot(TM) 64-Bit Server VM (build 20.2-b06, mixed mode)\n\n[root@bigindy5 src]# uname -a\nLinux bigindy5 2.6.32-71.29.1.el6.centos.plus.x86_64 #1 SMP Sun Jun 26 16:27:27 BST 2011 x86_64 x86_64 x86_64 GNU/Linux "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13104841",
            "date": "2011-09-14T20:01:25+0000",
            "content": "I've also been seeing intermittent failures in TestCSVLoader, in both 3.4 and 3x.  The nature of the failure is the same as on TestSqlEntityProcessorDelta, numFound shows a different value than what the test expects.  If I run the following command over and over, sometimes it will fail, but mostly it will pass:\n\nant test -Dtestcase=TestCSVLoader -Dtestmethod=testCommitWithin\n\nHere's one failure on lucene_solr_3_4:\n\n    [junit] Testsuite: org.apache.solr.handler.TestCSVLoader\n    [junit] Testcase: testCommitWithin(org.apache.solr.handler.TestCSVLoader):  Caused an ERROR\n    [junit] Exception during query\n    [junit] java.lang.RuntimeException: Exception during query\n    [junit]     at org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:385)\n    [junit]     at org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:352)\n    [junit]     at org.apache.solr.handler.TestCSVLoader.testCommitWithin(TestCSVLoader.java:121)\n    [junit]     at org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:147)\n    [junit]     at org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:50)\n    [junit] Caused by: java.lang.RuntimeException: REQUEST FAILED: xpath=//*[@numFound='3']\n    [junit]     xml response was: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    [junit] <response>\n    [junit] <responseHeader><status>0</status><QTime>0</QTime></responseHeader><result name=\"response\" numFound=\"0\" start=\"0\"/>\n    [junit] </response>\n    [junit]\n    [junit]     request was:start=0&q=id:[100+TO+110]&qt=standard&rows=20&version=2.0\n    [junit]     at org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:378)\n    [junit]\n    [junit]\n    [junit] Tests run: 5, Failures: 0, Errors: 1, Time elapsed: 29.793 sec\n    [junit]\n    [junit] ------------- Standard Error -----------------\n    [junit] 2011-09-15 12:46:04.PD org.apache.solr.SolrTestCaseJ4 assertQ\n    [junit] SEVERE: REQUEST FAILED: xpath=//*[@numFound='3']\n    [junit]     xml response was: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    [junit] <response>\n    [junit] <responseHeader><status>0</status><QTime>0</QTime></responseHeader><result name=\"response\" numFound=\"0\" start=\"0\"/>\n    [junit] </response>\n    [junit]\n    [junit]     request was:start=0&q=id:[100+TO+110]&qt=standard&rows=20&version=2.0\n    [junit] 2011-09-15 12:46:04.PD org.apache.solr.common.SolrException log\n    [junit] SEVERE: REQUEST FAILED: start=0&q=id:[100+TO+110]&qt=standard&rows=20&version=2.0:java.lang.RuntimeException: REQUEST FAILED: xpath=//*[@numFound='3']\n    [junit]     xml response was: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    [junit] <response>\n    [junit] <responseHeader><status>0</status><QTime>0</QTime></responseHeader><result name=\"response\" numFound=\"0\" start=\"0\"/>\n    [junit] </response>\n    [junit]\n    [junit]     request was:start=0&q=id:[100+TO+110]&qt=standard&rows=20&version=2.0\n    [junit]     at org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:378)\n    [junit]     at org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:352)\n    [junit]     at org.apache.solr.handler.TestCSVLoader.testCommitWithin(TestCSVLoader.java:121)\n    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    [junit]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    [junit]     at java.lang.reflect.Method.invoke(Method.java:597)\n    [junit]     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n    [junit]     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n    [junit]     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n    [junit]     at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n    [junit]     at org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:48)\n    [junit]     at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    [junit]     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)\n    [junit]     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)\n    [junit]     at org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:147)\n    [junit]     at org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:50)\n    [junit]     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)\n    [junit]     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)\n    [junit]     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)\n    [junit]     at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)\n    [junit]     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)\n    [junit]     at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    [junit]     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)\n    [junit]     at org.junit.runners.ParentRunner.run(ParentRunner.java:236)\n    [junit]     at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)\n    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:420)\n    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:911)\n    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:743)\n    [junit]\n    [junit] NOTE: reproduce with: ant test -Dtestcase=TestCSVLoader -Dtestmethod=testCommitWithin -Dtests.seed=-17a44f827c503e4f:5a853ada905dd3c8:-362930cca8744e9b\n    [junit] NOTE: test params are: locale=sq_AL, timezone=Asia/Tashkent\n    [junit] NOTE: all tests run in this JVM:\n    [junit] [SolrInfoMBeanTest, TestSolrCoreProperties, DoubleMetaphoneFilterFactoryTest, TestArabicFilters, TestBulgarianStemFilterFactory, TestCzechStemFilterFactory, TestDictionaryCompoundWordTokenFilterFactory, TestGreekStemFilterFactory, TestHindiFilters, TestKeepFilterFactory, TestTurkishLowerCaseFilterFactory, TestJmxIntegration, TestLegacyMergeSchedulerPolicyConfig, TestPropInjectDefaults, TestCSVLoader]\n    [junit] NOTE: Linux 2.6.32-71.29.1.el6.centos.plus.x86_64 amd64/Sun Microsystems Inc. 1.6.0_27 (64-bit)/cpus=4,threads=2,free=146206112,total=246153216\n    [junit] ------------- ---------------- ---------------\n    [junit] TEST org.apache.solr.handler.TestCSVLoader FAILED "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13105030",
            "date": "2011-09-15T00:26:44+0000",
            "content": "I've now tried it on a completely unrelated Debian system (Squeeze, ext4) with the same TestSqlEntityProcessorDelta failure.  All packages on this system are from the standard Debian repositories, and include ant 1.8.1, which I remember reading isn't supported by the lucene/solr build system.  I also tried to do it on a Debian Lenny system, but it's running ant 1.7.0 and won't run Solr's build.xml at all. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13105636",
            "date": "2011-09-15T19:50:45+0000",
            "content": "Shawn: still no suggestion for you on why you're the only one getting failures with TestSqlEntityProcessorDelta, but as for this...\n\nI've also been seeing intermittent failures in TestCSVLoader, in both 3.4 and 3x.\n\n...that is definitely unrelated, see SOLR-2540.\n "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106252",
            "date": "2011-09-16T14:50:15+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13109585",
            "date": "2011-09-21T15:42:00+0000",
            "content": "I was looking at the test and SOLR-2551, the issue where it was created.  It could be that I'm misreading that issue, but shouldn't it only fail to import on a delta?  The code for testNonWritablePersistFile does a full import before it does the numFound check.\n\nChanging runFullImport to runDeltaImport makes the test pass for me.\n\nHave I got the wrong idea here? "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13109602",
            "date": "2011-09-21T15:58:10+0000",
            "content": "If I do have the right idea, then the rest of this paragraph applies, otherwise not:  I have to wonder why the current test is passing for everyone but me.  It seems as though it should be failing for everyone.\n\nI added a couple more lines, so now it tries a delta import, checks for numFound=0, then runs a full import and checks for numFound=1.  Contrary to what I expected, the second part failed. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-13112426",
            "date": "2011-09-22T09:06:42+0000",
            "content": "Shawn, the test does a full-import because that operation also writes the last import time to the dataimport.properties and a delta import is supposed to start from after that time. So, if dataimport.properties is not writable, a delta import will always do a full import regardless of whether a full import had succeeded before it. This is why the test makes sure that a full-import is failed if dataimport.properties is not writable and the data-config has configured the delta import related attributes. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13112899",
            "date": "2011-09-22T20:51:10+0000",
            "content": "Shalin,\n\nThanks.  So the weird thing on my system is that the import is not only proceeding, it's succeeding, so there is a document in the index when it turns around and queries for id:1, so the test as-is fails for me.\n\nIf I tell it to do a delta import rather than a full import, the test succeeds - no document is indexed.  If I tell it to do a delta import, check for no documents, then do a full import and check for 1 document, the second part fails - the full import did not index anything.\n\nNone of my test runs show the following exception in checkWritablePersistFile.  On systems where the test passes, is it thrown?\n\nthrow new DataImportHandlerException(SEVERE, persistFile.getAbsolutePath() +\n          \" is not writable. Delta imports are supported by data config but will not work.\");\n\nThere's nothing particularly unusual about this setup.  It's 64-bit CentOS 6, ext4 over LVM on a Dell server with hardware RAID1, running Oracle Java 1.6.0_27.  Java was installed using the method on this page, with the nosrc rpm specific to version _27, not the _26 one on the page:\nhttp://www.city-fan.org/tips/SunJava6OnFedora\n\nMy best guess (on the unmodified test) is that when checkWritablePersistFile (called from doFullImport) runs the isWritable() check, it is being told that the file is writable, so the full import proceeds.  I can't see any reason for the check to work correctly on delta import but not work on full import.\n\nMy first thought is thread locking/timing problems in the test code, but I don't know how to look for that, and I know the build.xml for DIH tests is configured to not run tests in parallel.  Second thought if that's not the problem is that it is a bug in the OS, Java, or the OS/Java combination.  It fails on CentOS5/1.6.0_26 on NFS and ext3.  It fails on CentOS6/1.6.0_27 on NFS and ext4.  It fails on Debian6/1.6.0_26 on ext4.  Due to ongoing work that can't be interrupted to remake the platform, I can't easily try any other combinations. "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13113535",
            "date": "2011-09-23T16:28:13+0000",
            "content": "By adding print statements to the Solr and test code, I was able to determine that canWrite() is always returning true.\n\nAs a further test, I wrote the following code:\n\n\nimport java.io.*;\n\npublic class Main\n{\n        public static void main(String[] args)\n        {\n                File f = new File(\"testfile\");\n                File g = new File(\".\");\n                System.out.println(\"writable: \" + f.canWrite());\n                f.setReadOnly();\n                System.out.println(\"writable: \" + f.canWrite());\n                g.setReadOnly();\n                System.out.println(\"writable: \" + f.canWrite());\n        }\n}\n\n\n\nWhat this does is check canWrite on the file, then change the file to read only, then change the current directory to read only, printing the state of canWrite() after each step.\n\nI created a directory /tmp/testfile (0x755) and created a file in that directory called testfile (0x644).  While in /tmp/testfile, I ran the above program.  When it's done both the directory and the file have no write permissions, with this output:\n\nwritable: true\nwritable: true\nwritable: true\n\nRunning it multiple times produces the same output.  This is looking to me like a bug in java, one that seems to have been there for quite a while.  I got the same results on our production webserver (CentOS5 with java 1.6.0_14). "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13113539",
            "date": "2011-09-23T16:36:50+0000",
            "content": "On Windows, it behaves as expected:\n\nC:\\Users\\sheisey\\Downloads\\testfile>java Main\nwritable: true\nwritable: false\nwritable: false\n\nC:\\Users\\sheisey\\Downloads\\testfile>java -version\njava version \"1.6.0_27\"\nJava(TM) SE Runtime Environment (build 1.6.0_27-b07)\nJava HotSpot(TM) 64-Bit Server VM (build 20.2-b06, mixed mode) "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13113553",
            "date": "2011-09-23T16:53:15+0000",
            "content": "I wondered how this problem didn't show up for me before now, so I checked something.  The canWrite method shows up in the solr source in exactly two places:\n\n[root@bigindy5 solr]# grep -rl canWrite . | grep \"java$\"\n./core/src/java/org/apache/solr/handler/SnapShooter.java\n./contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter.java\n\n\nIt's slightly more prevalent on the lucene side of the house:\n\n[root@bigindy5 lucene]# grep -rl canWrite . | grep \"java$\"\n./contrib/spellchecker/src/java/org/apache/lucene/search/suggest/tst/TSTLookup.java\n./contrib/spellchecker/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup.java\n./contrib/spellchecker/src/java/org/apache/lucene/search/suggest/fst/FSTLookup.java\n./contrib/facet/src/java/org/apache/lucene/facet/search/TotalFacetCountsCache.java "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13113576",
            "date": "2011-09-23T17:22:34+0000",
            "content": "One of my co-workers has a Gentoo box with 2.6.38.  Unlike my CentOS and Debian machines, this bug is not there:\n\napalmer@toro /tmp/testfile $ java -version\njava version \"1.6.0_26\"\nJava(TM) SE Runtime Environment (build 1.6.0_26-b03)\nJava HotSpot(TM) 64-Bit Server VM (build 20.1-b02, mixed mode)\n\napalmer@toro /tmp/testfile $ java Main\nwritable: true\nwritable: false\nwritable: false "
        },
        {
            "author": "Shawn Heisey",
            "id": "comment-13113601",
            "date": "2011-09-23T17:42:20+0000",
            "content": "My co-worker figured out the problem.  Running it as root overrides the read-only permission.  Tried it again as a nonprivileged user and everything is fine.  Would it be difficult for \"ant test\" to see a username of root or a uid of 0?  If a test fails and they are root/0, perhaps a warning could be issued asking them to try again with a nonprivileged user. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13113651",
            "date": "2011-09-23T18:46:05+0000",
            "content": "Shawn: awesome that you finally figured out the problem \u2013 never would have ocured to me you were running tests as root.\n\ni actually want to re-open this and make the test catch this.\n\nsimilar to how i made the test \"assume\" the setReadOnly call worked, i want the test to \"assume\" !isWritable so you don't get false failures here. "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13114930",
            "date": "2011-09-26T21:07:05+0000",
            "content": "I've committed additional \"assume\" statements to the test so that we not only verify setReadonly succeeds, but subsequent calls to canWrite fail.  this should ensure that people running as root (or on esoteric filesystems that don't support read only files) don't see false failures. "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13157848",
            "date": "2011-11-27T12:36:05+0000",
            "content": "Bulk close after 3.5 is released "
        }
    ]
}