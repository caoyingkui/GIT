{
    "id": "LUCENE-4440",
    "title": "FilterCodec should take a delegate Codec in its ctor",
    "details": {
        "components": [
            "core/codecs"
        ],
        "fix_versions": [
            "4.0",
            "4.1",
            "6.0"
        ],
        "affect_versions": "4.0-BETA",
        "priority": "Blocker",
        "labels": "",
        "type": "Improvement",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "FilterCodec has a delegate() method through which an extension can return its delegate Codec. This method is called on every Codec method. Adrien, on LUCENE-4391, failed to pass a Codec in the ctor, since he couldn't called Codec.forName().\n\nInstead, we should just pass e.g. new Lucene40Codec(). I'll post a patch shortly.",
    "attachments": {
        "LUCENE-4440.patch": "https://issues.apache.org/jira/secure/attachment/12546859/LUCENE-4440.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-09-27T13:25:41+0000",
            "content": "A very trivial patch. Removes delegate() and takes a Codec in FilterCodec ctor. The changes to the 3 classes that extend it are simple. ",
            "author": "Shai Erera",
            "id": "comment-13464713"
        },
        {
            "date": "2012-09-27T13:27:53+0000",
            "content": "if possible, I'd like to commit it to 4.0 too, just so that whoever extends FilterCodec in 4.0 doesn't need to change his code when he upgrades to 4.1. And the change is really trivial. ",
            "author": "Shai Erera",
            "id": "comment-13464715"
        },
        {
            "date": "2012-09-27T13:33:32+0000",
            "content": "This is also similar to what i suggested on LUCENE-4391, see Adrien's comment.\n\nIf we do this, we should probably add a NOTE/WARNING somewhere that tells you\nyou should not call Codec.forName in your no-arg constructor.\n\ne.g. dont call super(\"mycodec\", Codec.forName(xxxx)) ",
            "author": "Robert Muir",
            "id": "comment-13464721"
        },
        {
            "date": "2012-09-27T13:35:06+0000",
            "content": "If we do this, we should probably add a NOTE/WARNING somewhere that tells you you should not call Codec.forName in your no-arg constructor.\n\n+1 ",
            "author": "Adrien Grand",
            "id": "comment-13464722"
        },
        {
            "date": "2012-09-27T13:37:23+0000",
            "content": "Maybe we should also test loader against null in Codec.forName to throw a better exception than a NPE whenever initialization issues happen (or even better fix this issue, but I am not sure it is possible...). ",
            "author": "Adrien Grand",
            "id": "comment-13464724"
        },
        {
            "date": "2012-09-27T13:43:38+0000",
            "content": "I can add to Codec.forName() something like <b>NOTE:</b> do not call this method from a Codec's ctor !. What do you think? ",
            "author": "Shai Erera",
            "id": "comment-13464727"
        },
        {
            "date": "2012-09-27T13:45:13+0000",
            "content": "This is the same chicken-and-egg problem the ICU4J project had with one Japanese Locale. The problem here is, that Codec.forName() cannot be used before SPI loading is finished. The problem here is that SPI loads all codec names and creates instances from them. But at the time of creating those instances, the lookup does not yet work.\n\nI agree we should add a null check in SPILoader's lookup method (not Codec.forName) to throw IllegalStateException(\"Cannot requests codec until service provider interface has finished loading them\"). ",
            "author": "Uwe Schindler",
            "id": "comment-13464728"
        },
        {
            "date": "2012-09-27T13:45:45+0000",
            "content": "From the documentation perspective, the problem is not really FIlterCodec's problem. Its more general really. ",
            "author": "Robert Muir",
            "id": "comment-13464729"
        },
        {
            "date": "2012-09-27T13:47:30+0000",
            "content": "And separately, i.e. separate issue, not for 4.0, I think we should make Lucene40Codec completely final. With FilterCodec, whoever wants to extend Lucene40Codec should just extend FilterCodec, like AppendingCodec, and use PerFieldPF. But this needs a separate discussion. I'll open a separate issue. ",
            "author": "Shai Erera",
            "id": "comment-13464731"
        },
        {
            "date": "2012-09-27T13:50:28+0000",
            "content": "I would prefer something like this patch over the abstract method we currently have, especially if we have some way to throw an exception in the\nSPI loader if you do a chicken-egg.\n\nCan we make a separate patch to throw an exception if you do this? I definitely would support this null check for 4.0, because currently\nyou will get a confusing exception. ",
            "author": "Robert Muir",
            "id": "comment-13464736"
        },
        {
            "date": "2012-09-27T13:50:29+0000",
            "content": "I agree we should add a null check in SPILoader's lookup method (not Codec.forName) to throw IllegalStateException(\"Cannot requests codec until service provider interface has finished loading them\").\n\nThis won't help. The NPE is thrown from Codec.forName because loader is null ! It confused me, since I thought static members should be initialized before any method is accessed, but perhaps this doesn't hold for static methods?\n\nFrom the documentation perspective, the problem is not really FIlterCodec's problem. Its more general really.\n\nYes, that's why I suggested to add this comment to Codec.forName(). Oh, unless you mean that we should add that comment not as part of this issue? ",
            "author": "Shai Erera",
            "id": "comment-13464737"
        },
        {
            "date": "2012-09-27T13:50:39+0000",
            "content": "Maybe we should also test loader against null in Codec.forName to throw a better exception than a NPE whenever initialization issues happen (or even better fix this issue, but I am not sure it is possible...).\n\nloader should be always != null. The problem is that NamedSPILoader.lookup() may NPE/fail. I can at least add a test that verifies what happens when you do call Codec.forName() inside a Codec ctor. ",
            "author": "Uwe Schindler",
            "id": "comment-13464738"
        },
        {
            "date": "2012-09-27T13:52:29+0000",
            "content": "Ah you are right, it might be == null. Beacuse at the time of init (until NamedSPILoader's ctor has finished), the assignment is not yet done. So we must null-check in Codec class itsself to throw Exception. ",
            "author": "Uwe Schindler",
            "id": "comment-13464740"
        },
        {
            "date": "2012-09-27T14:01:03+0000",
            "content": "Inside NamedSPILoader loader all is fine, because the List is initialized to be empty initially and later replaced by a unmodifiable reloaded one. ",
            "author": "Uwe Schindler",
            "id": "comment-13464750"
        },
        {
            "date": "2012-09-27T14:06:44+0000",
            "content": "Isn't there a way to ensure that NamedSPILoader would finish before forName() is accessed? If not, we need to add such check to every forName we have. Here's a proposal message:\n\n\n    if (loader == null) {\n      throw new IllegalStateException(\"you are probably calling this method from inside a Codec's ctor); you shouldn't!\");\n    }\n\n ",
            "author": "Shai Erera",
            "id": "comment-13464753"
        },
        {
            "date": "2012-09-27T14:24:27+0000",
            "content": "Please add this also to listCodecs maybe  ",
            "author": "Uwe Schindler",
            "id": "comment-13464770"
        },
        {
            "date": "2012-09-27T14:31:29+0000",
            "content": "Isn't there a way to ensure that NamedSPILoader would finish before forName() is accessed?\n\nUnfortunately not, this is a chicken-and-egg problem: If you access Codec.class in any way (e.g. already at the time when you subclass it!), it is classloaded. After classloaded, it is initialized, so its static <clinit> method is called. This method runs new NamedSPILoader(Codec.class) [the first line in the class source code], and this one loads all codecs which are listed in META-INF/services. As e.g. AppendingCodec is listed there, it is loaded by NamedSPILoader and its ctor is called. As we are still in the stacktrace inside NamedSPILoader.<init>, this call did not yet return to caller (Codec.<clinit>), so the assignment of the static final loader field is not yet finished. Unfortunately, AppendingCodec.<init> calls Codec.forName() and hits the NPE, because the field is not yet initialized. You have to say: You cannot call any method of Codec at that time! ",
            "author": "Uwe Schindler",
            "id": "comment-13464778"
        },
        {
            "date": "2012-09-27T17:29:34+0000",
            "content": "Patch adding the Exceptions to Codec and PostingsFormat.\n\nThe Analysis SPI factory loading mechanism does not have the chicken-egg problem:\n\n\tIt returns new instances and has no forName() method.\n\tStatic class ctors from Subclasses are not executed while SPI loading, ass SPIClassIterator does not initialize classes while loading. The first time a factory is touched is when a new instance is created and that happens not while SPI is initializing\n\n\n\nPlease check the messages, I want to commit this ASAP, because Robert wants to spin a new RC. ",
            "author": "Uwe Schindler",
            "id": "comment-13464893"
        },
        {
            "date": "2012-09-27T17:41:06+0000",
            "content": "thanks for adding these checks: I think this is much more clear than NPE! ",
            "author": "Robert Muir",
            "id": "comment-13464909"
        },
        {
            "date": "2012-09-27T17:52:05+0000",
            "content": "Committed trunk revision: 1391140\nCommitted 4.x branch revision: 1391143\nCommitted 4.0 branch revision: 1391144 ",
            "author": "Uwe Schindler",
            "id": "comment-13464916"
        },
        {
            "date": "2012-09-27T20:17:22+0000",
            "content": "Thanks Uwe for adding the messages and committing. ",
            "author": "Shai Erera",
            "id": "comment-13465040"
        },
        {
            "date": "2013-03-22T16:30:57+0000",
            "content": "[branch_4x commit] Uwe Schindler\nhttp://svn.apache.org/viewvc?view=revision&revision=1391143\n\nMerged revision(s) 1391140 from lucene/dev/trunk:\nLUCENE-4440: Refactor FilterCodec to get the delegate passed into ctor. Fix Codec's and PostingsFormat's forName lookup methods to throw IllegalStateException if you call those methods from the constructor of e.g. FilterCodec. ",
            "author": "Commit Tag Bot",
            "id": "comment-13610735"
        }
    ]
}