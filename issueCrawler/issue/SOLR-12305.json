{
    "id": "SOLR-12305",
    "title": "When a replica is applying updates, some kind of updates can skip buffering for faster recovery",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "7.5",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "The current recovery process has\u00a02 main problems (pointed out by Shalin Shekhar Mangar ) which make it may never finish.\n\n\tThe replay updates process is too slow, we do it in a single-thread fashion. Therefore if the more updates get appended at a faster rate, the replay process will be never finished\n\tThe buffering tlog is unbounded, we keep adding more entries to buffering tlog and waiting for them to get replayed. If we have a way to reduce the number of updates in buffering tlog, even when replay process is slow it will eventually\u00a0finish.\n\n\n\nI come up with a solution for the second problem which is described on this link:\n\nhttps://docs.google.com/document/d/14DCkYRvYnQmactyWek3nYtUVdpu_CVIA4ZBTfQigjlU/edit?usp=sharing\n\nIn short, the document presents a\u00a0modification for current recovery process (section 3: algorithm) and also proof the correctness of the modification (section 1 and 2). There are some pros in this approach\n\n\tMaking buffering tlog bounded.\n\tIt will automatically throttle updates from the leader, imagine this case\n\t\n\t\tWe have a shard with a leader and a replica. When leader sends replica an update.\n\t\tIf the replica is healthy, the leader will have to wait for the replica to finish\u00a0process that updates before return to users. Let's call the total time for an update is T0\n\t\tIf the replica is recovering, in the current code, the replica will only append that update to its buffering tlog (which is much faster than indexing), so the total time for an update is T1 < T0. Therefore the rate of incoming updates will be higher in this case.\n\t\tIn above design, T1 will be subequal to T0.",
    "attachments": {
        "SOLR-12305.patch": "https://issues.apache.org/jira/secure/attachment/12932394/SOLR-12305.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-07-20T09:52:58+0000",
            "content": "Attached a patch for this ticket. The theory for proving the correctness is quite long. But the change here is quite minimal (thanks to SOLR-9922). In short of the change here\u00a0is \"When a\u00a0replica is replaying its buffer updates if it receives\u00a0an update contains a full document (atomic update, index new documents), instead of writing the update to buffer tlog, write the update directly to index (and tlog) normally.\"\n\n\u00a0 ",
            "author": "Cao Manh Dat",
            "id": "comment-16550588"
        },
        {
            "date": "2018-07-20T11:01:18+0000",
            "content": "I will commit the patch soon if there is no objection.\u00a0 ",
            "author": "Cao Manh Dat",
            "id": "comment-16550651"
        },
        {
            "date": "2018-07-20T11:43:10+0000",
            "content": "+1 LGTM ",
            "author": "Shalin Shekhar Mangar",
            "id": "comment-16550682"
        },
        {
            "date": "2018-07-21T19:31:28+0000",
            "content": "+ // package private for testing\nI recently learnt that we could replace this with the @VisibleForTesting annotation\u00a0\n\n\u00a0\n\n\u00a0\n\n\u00a0 ",
            "author": "Varun Thacker",
            "id": "comment-16551804"
        },
        {
            "date": "2018-07-23T02:33:41+0000",
            "content": "Commit 8c06dec16dd711c097f4f8eaa7d9df041e0cb563 in lucene-solr's branch refs/heads/master from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8c06dec ]\n\nSOLR-12305: When a replica is applying updates, some kind of updates can skip buffering for faster recovery ",
            "author": "ASF subversion and git services",
            "id": "comment-16552223"
        },
        {
            "date": "2018-07-23T02:36:51+0000",
            "content": "Commit 307c5beb452bb37987318b9beb61d8aa3cd3a907 in lucene-solr's branch refs/heads/branch_7x from Cao Manh Dat\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=307c5be ]\n\nSOLR-12305: When a replica is applying updates, some kind of updates can skip buffering for faster recovery ",
            "author": "ASF subversion and git services",
            "id": "comment-16552225"
        }
    ]
}