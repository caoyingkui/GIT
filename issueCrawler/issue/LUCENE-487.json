{
    "id": "LUCENE-487",
    "title": "Database as a lucene index target",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/store"
        ],
        "type": "New Feature",
        "fix_versions": [],
        "affect_versions": "1.9",
        "resolution": "Not A Problem",
        "status": "Closed"
    },
    "description": "I've written an extension for the Directory object called DBDirectory, that allows you to read and write a Lucene index to a database instead of a file system.\n\nThis is done using blobs. Each blob represents a \"file\". Also, each blob has a name which is equivalent to the filename and a prefix, which is equivalent to a directory on a file system. This allows you to create multiple Lucene indexes in a single database schema.\n\nThe solution uses two tables:\nLUCENE_INDEX - which holds the index files as blobs\nLUCENE_LOCK - holds the different locks\n\nAttached is my proposed solution. This solution is still very basic, but it does the job.\nThe solution supports Oracle and mysql\n\nTo use this solution:\n\n1. Place the files:\n\n\tDBDirectory in src/java/org/apache/lucene/store\n\tTestDBIndex in src/test/org/apache/lucene/index\n\tobjects-mysql.sql in src/db\n\tobjects-oracle.sql in src/db\n\n\n\n2. Edit the parameters for the database connection in TestDBIndex\n\n3. Create the database tables using the objects-mysql.sql script (assuming you're using mysql)\n\n4. Build Lucene\n\n5. Run TestDBIndex with the database driver in the classpath\n\nI've tested the solution on mysql, but it should work on Oracle, I will test that in a few days.\n\nAmir",
    "attachments": {
        "files.zip": "https://issues.apache.org/jira/secure/attachment/12321874/files.zip"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2006-08-03T10:19:10+0000",
            "content": "I believe that I detected a bug in this extension\nThe case of file containing only one character does not index correctly. The correction seems to work.\n\nDBDirectory.java \nLine 426\n\nOriginal:\n\n            Blob blob=rs.getBlob(\"DATA\");\n            byte[] buffer=null;\n            long pos=1;\n            int length=0;\n            while(pos<blob.length()) \n{\n                length=BUFFER_SIZE>blob.length()-pos?(int)(blob.length()-pos+1):BUFFER_SIZE;\n                buffer=blob.getBytes(pos,length);\n                file.addData(buffer);\n                pos+=BUFFER_SIZE>blob.length()-pos?(int)(blob.length()-pos+1):BUFFER_SIZE;\n            }\n\nCorrection:\n\n            Blob blob=rs.getBlob(\"DATA\");\n            byte[] buffer=null;\n            long pos=1;\n            int length=0;\n            while(pos<=blob.length()) \n{\n                length=BUFFER_SIZE>blob.length()-pos?(int)(blob.length()-pos+1):BUFFER_SIZE;\n                buffer=blob.getBytes(pos,length);\n                file.addData(buffer);\n                pos+=BUFFER_SIZE>blob.length()-pos?(int)(blob.length()-pos+1):BUFFER_SIZE;\n            }\n\nChristophe ",
            "author": "Christophe B\u00e9got",
            "id": "comment-12425483"
        },
        {
            "date": "2011-01-25T14:59:13+0000",
            "content": "Not active since 2006 and we already have DBDirectory. ",
            "author": "Shai Erera",
            "id": "comment-12986414"
        }
    ]
}