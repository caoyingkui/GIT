{
    "id": "SOLR-6607",
    "title": "Managing requesthandlers through API",
    "details": {
        "components": [],
        "type": "Sub-task",
        "labels": "",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "The concept of solrconfig editing is split into multiple pieces . This issue is about registering components and uploading binaries through an API.\n\nThis supports multiple operations\n\n\n\tcommands  'create-requesthandler', \"update-requesthandler\",\"delete-requesthandler\"  which can set the configuration of a component . This configuration will be saved inside the configoverlay.json\n\n\n\n\nThe components has to be available in the classpath of all nodes. \nexample for registering a component\n\ncurl http://localhost:8983/solr/collection1/config -H 'Content-type:application/json'  -d '{\n\"create-requesthandler\" : {\"name\": \"/mypath\" ,\n                                          \"class\":\"com.mycomponent.ClassName\" , \n                                           \"defaults\":{\"x\":\"y\" ,\" a\":\"b\"},\n                                           \"useParams\":\"x\"\n                                         },\n\"update-requesthandler\" :{\"name\": \"/mypath\" ,\n                                           \"class\":\"com.mycomponent.ClassName\" ,\n                                           \"useParams\":\"y\" ,\n                                           \"defaults\":{\"x\":\"y\" ,\" a\":\"b\"}\n                                         },\n\"delete-requesthandler\" :\"/mypath\" \n}'",
    "attachments": {
        "SOLR-6607.patch": "https://issues.apache.org/jira/secure/attachment/12684053/SOLR-6607.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2014-11-27T11:59:56+0000",
            "author": "Noble Paul",
            "content": "Done with testcases ",
            "id": "comment-14227581"
        },
        {
            "date": "2014-11-27T12:14:23+0000",
            "author": "Noble Paul",
            "content": "The scope of this ticket is reduced to just registering existing components. Loading external components will be tackled in SOLR-6801 ",
            "id": "comment-14227590"
        },
        {
            "date": "2014-11-27T13:16:27+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1642141 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1642141 ]\n\nSOLR-6607 Managing requesthandlers through API ",
            "id": "comment-14227642"
        },
        {
            "date": "2014-11-27T13:24:58+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1642143 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1642143 ]\n\nSOLR-6607 Managing requesthandlers through API ",
            "id": "comment-14227648"
        },
        {
            "date": "2014-11-27T13:42:38+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1642151 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1642151 ]\n\nSOLR-6607 /config path should show overridden requesthandler ",
            "id": "comment-14227662"
        },
        {
            "date": "2014-11-27T13:46:18+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1642153 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1642153 ]\n\nSOLR-6607 /config path should show overridden requesthandler ",
            "id": "comment-14227669"
        },
        {
            "date": "2014-11-27T13:57:25+0000",
            "author": "Alexandre Rafalovitch",
            "content": "Would it be possible - if not done already - for when these combined request handlers returned, there is a synthetic attribute which says whether they were loaded from source, from overlay (only), or from overlay as an over-ride.\n\nHaving such flag will significantly simplify troubleshooting for both user and Solr developer adding more features later. ",
            "id": "comment-14227675"
        },
        {
            "date": "2014-11-28T04:46:36+0000",
            "author": "Noble Paul",
            "content": "Currently , you can hit /config/overlay to know the request handlers specified in overlay. And /config/requestHandler can give you all request handlers registered in the core.\n\nCurrently , there are three places a requesthandler can be loaded from\n\n\n\tregistered in overlay\n\tregistered in solrconfig.xml\n\timplicit ones , registered in code\n\n\n\nAnd the priority is in that order . \n\n\nHowever, we are planning to  add a new a new endpoint /<requesthandlername>/_meta which gives the details of the requesthandler .\n\nDo you think it is necessary to know from where it is loaded in the /config end point itself ? ",
            "id": "comment-14228070"
        },
        {
            "date": "2014-11-28T21:50:14+0000",
            "author": "Alexandre Rafalovitch",
            "content": "I think it is very important to have unified way to get all the different permutations of ground truth. Prior to these - exciting - new developments, there was one place to find the ground truth - in solrconfig.xml. You could grep the file and get everything you needed (well, except for admin ones, but they were mentioned in the comments).\n\nBut now, we have a lot more handlers that are implicit plus the hardcoded ones and the overlay ones. If there is no way to get all of the information (including the source of the definition) in one place, there will be confusion down the line. From users and - I suspect - tool writers.\n\nSo, I think a single end-point with parameters to differentiate the source would be nice. The parameters could be ?source=all, source=implicit, source=defined, source=overlay as well as status=active, status=overriden and status=disabled/inactive (maybe). By default, it would be source=all and status=active. These two parameters would be included for each entry.\n\nSo, if I have /selectAR in solrconfig.xml and it's also overriden in the overlay then it will be returned as source=overlay, status=active when I request with source=all, but as source=defined, status=overriden when I request with source=defined.\n\nDoes it make sense? \n ",
            "id": "comment-14228528"
        },
        {
            "date": "2014-11-29T05:14:25+0000",
            "author": "Noble Paul",
            "content": "how about adding extra information to the /config end point \n\nexample\n\n\n\"/analysis/field\": {\n\"_meta_\" : {\n                  \"source\" : \"overlay\", // alternatively, implicit, solrconfig.xml\n                  \"overrides\" : \" solrconfig.xml\"\n                  }\n\"startup\": \"lazy\",\n\"name\": \"/analysis/field\",\n\"class\": \"solr.FieldAnalysisRequestHandler\"\n}\n\n ",
            "id": "comment-14228635"
        },
        {
            "date": "2014-11-29T05:17:28+0000",
            "author": "Noble Paul",
            "content": "So, I think a single end-point with parameters to differentiate the source would be nice\n\nThe objective pf /config endpoint is to give the definitive schema that is in use now\n\nFor checking the overlay the endpoint is /config/overlay. Probably we can add more end points for solrconfig.xml\n ",
            "id": "comment-14228638"
        },
        {
            "date": "2014-11-29T16:50:35+0000",
            "author": "Alexandre Rafalovitch",
            "content": "I don't have a terribly strong opinion on the specific setup. As long as it can answer two questions easily:\n1. What handlers do I actually have\n2. Why do I have those specific handlers (where are they defined and whether they override/are overriden).\n\nThe above proposal seems to cover those two questions. ",
            "id": "comment-14228838"
        },
        {
            "date": "2014-11-29T17:41:55+0000",
            "author": "Alexandre Rafalovitch",
            "content": "Ugh, just realized. Does this also cover handleSelect=true and reports it (the fourth location? actually even messier with qt=).\n\nAlso related: SOLR-6807 and SOLR-3346 ",
            "id": "comment-14228858"
        },
        {
            "date": "2014-11-30T10:00:42+0000",
            "author": "Noble Paul",
            "content": "I don't think qt= matter here. handleSelect is not a problem either. It is using the same handler that is defined somewhere using one of the existing mechanisms ",
            "id": "comment-14229062"
        },
        {
            "date": "2014-12-10T18:24:11+0000",
            "author": "Yonik Seeley",
            "content": "You gave a good example of what the API looks like, but not so much what it does.\nDoes it work in solr-cloud mode? In stand-alone mode?\nAre the changes persisted somehow in both of these modes? If so, what's the mechanism. If not, is there a plan for that? ",
            "id": "comment-14241490"
        },
        {
            "date": "2014-12-10T18:26:18+0000",
            "author": "Noble Paul",
            "content": "Does it work in solr-cloud mode? In stand-alone mode?\n\nBoth.\n\nAre the changes persisted somehow in both of these modes? If so, what's the mechanism. If not, is there a plan for that?\n\nIn both cases changes are persisted.\n\nfor standalone node , it is written to the conf dir\n\nfor solrcloud it is written to zk\n ",
            "id": "comment-14241495"
        },
        {
            "date": "2015-01-06T15:11:15+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1649821 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1649821 ]\n\nSOLR-6801 addressing test failures, SOLR-6607 supporting all initArgs for requesthandlers ",
            "id": "comment-14266225"
        },
        {
            "date": "2015-01-06T15:20:48+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1649826 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1649826 ]\n\nSOLR-6801 addressing test failures, SOLR-6607 supporting all initArgs for requesthandlers ",
            "id": "comment-14266260"
        },
        {
            "date": "2015-01-11T19:19:43+0000",
            "author": "Alexandre Rafalovitch",
            "content": "What happened with the meta implementation for the ground truth?\n\nNow that /update is in the explicit configuration, I cannot seem to find that indicated when I do *curl http://localhost:8983/solr/techproducts/config/requestHandler*\n\nI talked about the ground truth in this issue on the November 28th. I can't find what addresses it. Is there a different JIRA that I am missing perhaps? Without the \"ground truth\" it is very hard to debug things. ",
            "id": "comment-14273017"
        },
        {
            "date": "2015-01-12T13:08:51+0000",
            "author": "Noble Paul",
            "content": "I got sucked into the bug fix mode. Let's track it in a separate issue SOLR-6964 ",
            "id": "comment-14273576"
        },
        {
            "date": "2015-02-23T05:01:17+0000",
            "author": "Anshum Gupta",
            "content": "Bulk close after 5.0 release. ",
            "id": "comment-14332679"
        }
    ]
}