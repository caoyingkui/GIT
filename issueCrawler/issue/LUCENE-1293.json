{
    "id": "LUCENE-1293",
    "title": "Tweaks to PhraseQuery.explain()",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "core/search"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "1.9,                                            2.0.0,                                            2.1,                                            2.2,                                            2.3,                                            2.3.1,                                            2.3.2,                                            2.4",
        "resolution": "Incomplete",
        "status": "Resolved"
    },
    "description": "The explain() function in PhraseQuery.java is very clumzy and could use many optimizations. Perhaps it is only because it is intended to use while debugging?\n\nHere's an example:\n\n\n      result.addDetail(fieldExpl);\n\n      // combine them\n      result.setValue(queryExpl.getValue() * fieldExpl.getValue());\n\n      if (queryExpl.getValue() == 1.0f)\n        return fieldExpl;\n\n      return result;\n   }\n\n\n\nCan easily be tweaked and become:\n\n\n      if (queryExpl.getValue() == 1.0f) {\n        return fieldExpl;\n      }\n\n      result.addDetail(fieldExpl);\n\n      // combine them\n      result.setValue(queryExpl.getValue() * fieldExpl.getValue());\n\n      return result;\n  }\n\n\n\nAnd thats really just for a start...\n\nItamar.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2008-05-24T03:35:49+0000",
            "content": "Itamar - could you explain, in plain English, why the above is better? (sorry, I'm not terribly familiar with PhraseQuery's explain(), so I can't tell why this reordering makes the explain output better).  Also, if you have more changes to make, please go ahead and put them in a patch.  Thanks! ",
            "author": "Otis Gospodnetic",
            "id": "comment-12599557"
        },
        {
            "date": "2008-05-29T10:41:27+0000",
            "content": "The specific change above prevents explain() from performing unnecessary actions and return earlier when Value == 1.0f. It could be done better, but will require one to dive really deep into it.\n\nHowever, this report is of PhraseQuery.explain() being very clumzy - the above is just a small example of that. It really should be redesigned - unless, again, it is only intended for use in debug environments, so the Lucene dev team prefer easier to write code than smarter and robuster code... ",
            "author": "Itamar Syn-Hershko",
            "id": "comment-12600737"
        },
        {
            "date": "2008-05-30T00:07:43+0000",
            "content": "It is meant for debugging, though I have found it so painfully slow in the past that I have avoided it on occasion.\n\nThe main culprit is the looped next() call in PhraseScorer.explain().  Using skipTo() would be faster. ",
            "author": "Mike Klaas",
            "id": "comment-12600973"
        },
        {
            "date": "2008-08-27T10:26:18+0000",
            "content": "I think the explain method is primarily used for debugging, and so performance is not really important.  It's also complex enough as is, and probably not well covered by unit tests, that I'm nervous about just tweaking it.  I'm resolving this as INCOMPLETE.  Itamar, if you want to see this resolved, can you post a full patch and we can reconsider it?  Thanks. ",
            "author": "Michael McCandless",
            "id": "comment-12626053"
        }
    ]
}