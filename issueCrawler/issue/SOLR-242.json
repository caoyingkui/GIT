{
    "id": "SOLR-242",
    "title": "tr parameter implies XSL, no wt=xslt necessary",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [],
        "components": [],
        "type": "Improvement",
        "priority": "Trivial",
        "labels": "",
        "resolution": "Won't Fix"
    },
    "description": "Perhaps the most trivial issue ever, but &tr=file.xsl should imply that the XML from whichever response writer is being used gets parsed by the given transform. The wt=xslt is somewhat redundant. And maybe change the tr parameter to xslt. \n\nImagine in the future there's a response writer that outputs a different kind of XML. That shouldn't preclude the use of a transform on top of that response.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Hoss Man",
            "id": "comment-12497089",
            "date": "2007-05-18T23:56:25+0000",
            "content": "this would go against the current model in Solr, that SolrCore (or the now the dispatcher) looks at as few options as necessary to hand off to a request handler, and based onteh result then to an outputwriter ... this would make it necessary for SolrCore to know about properties specific to a single OutputWriter ... saying that the presence of \"tr\" means use the XsltResponseWriter is like saying that if the \"json.nl\" param is specified, and a \"wt\" is not specified, then assume \"wt=json\" ... it starts crossing a scary line.   there's also no requirement that clients register the XsltResponseWriter, and custom request handlers might have a different use for a param named 'tr\"\n\nI'm also not sure i understand your last comment...\n\n  \"Imagine in the future there's a response writer that outputs a different kind of XML. \n    That shouldn't preclude the use of a transform on top of that response.\"\n\n...true, but you would need differnet XSLTs for differnet base XML responses, and the current XsltResponseWriter forcably uses the XmlResponseWriter to get it's input .. if someone wanted to style some other hypothetical future xml format, then the XsltResponseWriter would need to know about that class \u2013 either hardcoded in it, or more likely as an init param .. in which case you'd wnat to register multiple instances of hte Writer using different names ... how would you know which one to use given only the \"tr\" param?\n\n "
        },
        {
            "author": "Brian Whitman",
            "id": "comment-12497179",
            "date": "2007-05-19T20:44:34+0000",
            "content": "OK, I guess I am over-complicating by trying to simplify. XSLT to me seems like something that happens at the very end of everything, and the response writers seem to be a different \"class\" of things.\n\nBut if tr is only used by xslt, shouldn't it be xslt.tr (to follow the standard, like json.nl?) \n\nAlso, if wt=xslt is set but no tr=, what happens? \n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12497742",
            "date": "2007-05-22T07:34:10+0000",
            "content": "\"standard\" is loose term ... it's more of a convention, and it's one that wasn't really well established early on so there are lots of exceptions. "
        }
    ]
}