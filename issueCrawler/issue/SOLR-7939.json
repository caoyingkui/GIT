{
    "id": "SOLR-7939",
    "title": "Result Grouping: Number of results in group is not according to specs",
    "details": {
        "components": [
            "search",
            "SolrCloud"
        ],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "4.7.1",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "When using result grouping (group=true), Solr specs state the following about the \"rows\" and \"group.limit\" params:\nrows - The number of groups to return.\ngroup.limit -  Number of rows to return in each group.\n\nWe are using Solr cloud with a single collection and 64 shards. \nWhen grouping by field (i.e. using the group.field parameter), the behavior is as expected.\nHowever, when grouping by query (using group.query), the number of documents inside each group is affected by the rows param, instead of the group.limit param.\nThis is different than what is mentioned in the specs.\n\nMoreover, when switching to a non-sharded environment (64 collections, 1 shard per collection), the behavior is different, and the number of docs inside each group is affected by the group.query param, as expected.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2018-02-15T15:05:35+0000",
            "author": "John Montgomery",
            "content": "I've looked into this a bit and it appears to be due to TopGroupsShardResponseProcessor\u00a0using the wrong value when merging results.\u00a0 It appears to be using the value from rows instead of the one from group.limit.\n\n\u00a0\n\nIn particular this line:\n\nhttps://github.com/apache/lucene-solr/blob/master/solr/core/src/java/org/apache/solr/search/grouping/distributed/responseprocessor/TopGroupsShardResponseProcessor.java#L176\n\n\u00a0\n\nWhich is:\n\nint topN = rb.getGroupingSpec().getOffset() + rb.getGroupingSpec().getLimit();\n\nRoughly speaking it should be something like:\n\nint topN = rb.getGroupingSpec().getWithinGroupOffset() + rb.getGroupingSpec().getWithinGroupLimit()\n\nFrom local testing that fix does work (correct group count returned etc).\u00a0 However the tests in TestDistributedGrouping then fail.\u00a0 This appears to be due to them passing group.limit=-1.\u00a0 I tried to update the code to allow for that, but the tests still fail with a mismatch between the number of results from the distributed vs non-distributed search (6 vs 7):\n\njunit.framework.AssertionFailedError: .grouped[a_t:kings OR a_t:eggs].doclist.size():6!=7\n\nSo it looks like the problem fix may need to be a bit more complex.\n\nWe were evaluating using groups for some functionality, but I think we can achieve similar results with sub-faceting by id and a 2nd request to solr. ",
            "id": "comment-16365690"
        }
    ]
}