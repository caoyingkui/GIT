{
    "id": "LUCENE-6118",
    "title": "Improve efficiency of the history structure for filter caching",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "priority": "Minor",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "The filter caching uses  a ring buffer that tracks frequencies of the hashcodes of the most-recently used filters. However it is based on an ArrayDeque<Integer> and a HashMap<Integer> which keep on (un)wrapping ints. Since the data-structure is very simple, we could try to do something better...",
    "attachments": {
        "LUCENE-6118.patch": "https://issues.apache.org/jira/secure/attachment/12687711/LUCENE-6118.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14249707",
            "author": "Adrien Grand",
            "date": "2014-12-17T10:55:42+0000",
            "content": "Here is a patch. No more java.lang.Integers and 22 bytes per entry on average (4 for the ring buffer and 18 for the bag that tracks frequencies). "
        },
        {
            "id": "comment-14250673",
            "author": "Ryan Ernst",
            "date": "2014-12-17T22:18:04+0000",
            "content": "+1\n\nFor IntBag.remove() when the frequency reaches 0, could you find the end of the chain and move that back into the slot was just broken? This would then require moving up to only one element of the bag, instead of re-adding all elements after the old value in the chain. Something like:\n\nif (newFreq == 0) {\n    // move the last key in the chain back into this zeroed slot\n    int slot2 = (slot + 1) & mask;\n    while (freqs[slot2] != 0) {\n        slot2 = (slot2 + 1) & mask;\n    }\n    keys[slot] = keys[slot2];\n    freqs[slot] = freqs[slot2];\n}\n\n "
        },
        {
            "id": "comment-14251384",
            "author": "Adrien Grand",
            "date": "2014-12-18T08:39:59+0000",
            "content": "It wouldn't work unfortunately, let's imagine the following example: you have four keys A, B, C and D. Given their hash codes, A and B should go to slot 3 while C and D should go to slot 4. It is possible to have them store at the following slots in the hash table:\n\n\nslot | 3 | 4 | 5 | 6 |\nkey  | A | C | B | D |\n\n\n\nNow if we remove A, the end of the chain is D but its slot is 4 not 3 so we cannot move it into slot 3. Instead, we need to move B in the slot of A and D in the slot of B to come back to a consistent state:\n\n\nslot | 3 | 4 | 5 | 6 |\nkey  | B | C | D | \u2205 |\n\n\n\nBut you're right that the algorithm is not optimal here... I updated the patch with something better (and hopefully still readable?). "
        },
        {
            "id": "comment-14252916",
            "author": "Ryan Ernst",
            "date": "2014-12-19T04:37:02+0000",
            "content": "Thanks Adrien Grand, I understand now.  The new patch looks better there.  +1 "
        },
        {
            "id": "comment-14253291",
            "author": "ASF subversion and git services",
            "date": "2014-12-19T11:22:14+0000",
            "content": "Commit 1646674 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1646674 ]\n\nLUCENE-6118: Improve the efficiency of the history structure for recently-used filters. "
        },
        {
            "id": "comment-14253295",
            "author": "ASF subversion and git services",
            "date": "2014-12-19T11:25:31+0000",
            "content": "Commit 1646675 from Adrien Grand in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1646675 ]\n\nLUCENE-6118: Improve the efficiency of the history structure for recently-used filters. "
        },
        {
            "id": "comment-14253296",
            "author": "Adrien Grand",
            "date": "2014-12-19T11:27:15+0000",
            "content": "Thanks Ryan! "
        },
        {
            "id": "comment-14332794",
            "author": "Anshum Gupta",
            "date": "2015-02-23T05:01:56+0000",
            "content": "Bulk close after 5.0 release. "
        }
    ]
}