{
    "id": "SOLR-6426",
    "title": "SolrZkClient clean can fail due to a race with children nodes.",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.10.4",
            "5.0",
            "6.0"
        ],
        "components": [],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "ASF subversion and git services",
            "id": "comment-14108640",
            "date": "2014-08-25T00:03:29+0000",
            "content": "Commit 1620245 from Mark Miller in branch 'dev/trunk'\n[ https://svn.apache.org/r1620245 ]\n\nSOLR-6426: SolrZkClient clean can fail due to a race with children nodes. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14108641",
            "date": "2014-08-25T00:05:07+0000",
            "content": "Commit 1620246 from Mark Miller in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1620246 ]\n\nSOLR-6426: SolrZkClient clean can fail due to a race with children nodes. "
        },
        {
            "author": "Jessica Cheng Mallet",
            "id": "comment-14157255",
            "date": "2014-10-02T21:52:32+0000",
            "content": "Hey Mark, just took a look at this patch and there is a risk of stack overflow if children nodes are actively being added. Would you please comment on where you saw the race happen that necessitated this change? Is it better to eliminate that risk instead? "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14157354",
            "date": "2014-10-02T22:57:11+0000",
            "content": "This should not normally happen in working Solr code, say nothing about a race with another client constantly adding nodes.\n\nI saw it happen in a test case or something - the reason it happens is unrelated - as a general client method, I don't think the method itself should randomly bail part way through depending on arbitrary timing.\n "
        },
        {
            "author": "Mark Miller",
            "id": "comment-14157361",
            "date": "2014-10-02T23:00:40+0000",
            "content": "Also, keep in mind, this change does nothing about the risk of another client constantly adding nodes. That could race with this before and after. This is about trying to remove a node that has children - it looks like the node has no children, we try to remove it, boom it has a child. It doesn't affect a race off adding and removing children nodes. It just makes the method consistent in working how it was intended rather than this odd race fail you can get.\n\nThat doesn't mean the clean method itself could not be re implemented or something, but that's another issue. "
        },
        {
            "author": "Jessica Cheng Mallet",
            "id": "comment-14157445",
            "date": "2014-10-02T23:46:49+0000",
            "content": "The only thing that I'm worried with regarding to the racing clients is that before, this code will fail (which is what you're trying to fix here), but now there might be a risk of infinite recursion here causing stack overflow if it keeps coming back to this point and finding more children after it thinks it deleted all of them. In practice it probably won't happen, but it just feels a bit scary. Maybe that part can be made iterative instead (with a maximum bail-out number of tries)? "
        },
        {
            "author": "Anshum Gupta",
            "id": "comment-14332889",
            "date": "2015-02-23T05:02:27+0000",
            "content": "Bulk close after 5.0 release. "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-14338273",
            "date": "2015-02-26T11:45:17+0000",
            "content": "Reopening to backport to 4.10.4 "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-14338276",
            "date": "2015-02-26T11:48:49+0000",
            "content": "Commit 1662426 from shalin@apache.org in branch 'dev/branches/lucene_solr_4_10'\n[ https://svn.apache.org/r1662426 ]\n\nSOLR-6426: SolrZkClient clean can fail due to a race with children nodes. "
        },
        {
            "author": "Michael McCandless",
            "id": "comment-14348920",
            "date": "2015-03-05T15:36:30+0000",
            "content": "Bulk close for 4.10.4 release "
        }
    ]
}