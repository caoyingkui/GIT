{
    "id": "SOLR-7955",
    "title": "Auto create .system collection on first request if it does not exist",
    "details": {
        "components": [],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.5",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "Why should a user need to create the .system collection manually? It would simplify instructions related to BLOB store if user could assume it is always there.",
    "attachments": {
        "SOLR-7955.patch": "https://issues.apache.org/jira/secure/attachment/12836807/SOLR-7955.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-08-21T10:58:02+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Reference guide https://cwiki.apache.org/confluence/display/solr/Blob+Store+API requires you to create the collection manually. If instead the Overseer created it on startup with shards=1, replicationfactor=2, then the refguide could instead document that if you require more shards or replicas then you should modify or recreate the collection manually. ",
            "id": "comment-14706548"
        },
        {
            "date": "2015-08-21T11:29:04+0000",
            "author": "Noble Paul",
            "content": "Yes, this was the original plan. I was waiting for the feature to settle\n\n\n\tIn a cluster when a create collection is invoked check if .system collection exists. If not create a .system collection with shards=1, and replicationFactor=2\n\tif the first collection to be created is .system then it's fine\n\n ",
            "id": "comment-14706565"
        },
        {
            "date": "2015-08-21T12:06:55+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "What if admin chooses to upload a bunch of jars to blob store right after install, and then someone else, perhaps an application, will later create a bunch of collections. Then the .system collection must exist independent of collection CREATE requests.\n\nLikewise, it would be nice if a collection could be created with a flag \"bind all gobal runtime libs\", much like how the current static $SOLR_HOME/lib folder works, i.e. all collections will have access to all the global libs. E.g. if a collections was created with &property.runtimeLibs=all then you would not, as a collection creator, need to know the keys by which they are registered and not need to  - you'd get them all (latest versions) on classpath. For many smaller setups this would simplify things. ",
            "id": "comment-14706584"
        },
        {
            "date": "2015-08-21T12:20:53+0000",
            "author": "Noble Paul",
            "content": "What if admin chooses to upload a bunch of jars to blob store right after install, and then someone else, perhaps an application, will later create a bunch of collections. Then the .system collection must exist independent of collection CREATE requests.\n\nIf admin wants to upload a bunch of jars before collection CREATE , go ahead and create the .system collection first and upload all jars \n\nLikewise, it would be nice if a collection could be created with a flag \"bind all gobal runtime libs\",\n\nI don't think you understand the current feature fully. \n\nThere is nothing called all \"runtime libs\" . blob store has more things than just jars. And there are many versions of each jars. User MUST specify which version of the jar he wants to use. \nThe idea of \"latest\" is NOT possible , it can mean that the same collection in two different nodes may run different versions of a library.\n ",
            "id": "comment-14706680"
        },
        {
            "date": "2015-08-21T12:59:45+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Ok, understand that blob store is just a generic key/value store and knows nothing about the data. So any smartness here would need to be added on a layer above. Let's defer that to another jira. ",
            "id": "comment-14706713"
        },
        {
            "date": "2015-08-21T19:50:51+0000",
            "author": "Shawn Heisey",
            "content": "Devil's advocate thoughts:\n\nIf this is auto-created when the first node is started, then it will be a non-redundant collection.  If we wait for two nodes, then a single-node test install will not have it.  If we automatically add replicas as new nodes are brought up, the user might be very unhappy with that decision.\n\nI do like the idea of creating this collection automatically, but its behavior must be configurable, with sensible defaults.  Any actions taken (or explicitly NOT taken) should probably be logged at WARN so that someone looking in the logging tab of the admin UI can see them. ",
            "id": "comment-14707362"
        },
        {
            "date": "2015-08-21T21:05:17+0000",
            "author": "Mark Miller",
            "content": "Personally, I like the idea that the majority of people not using this feature don't have to deal with this internal collection. If they decide they want to use the blob api, they create the collection - simple. ",
            "id": "comment-14707462"
        },
        {
            "date": "2015-08-22T19:01:02+0000",
            "author": "Ramkumar Aiyengar",
            "content": "I agree, there's a footprint to adding a collection, and people who don't need this feature shouldn't have to bear it. If we want to make the feature easier, may be lazily on first use (if possible) is a better alternative than on first start.. ",
            "id": "comment-14708132"
        },
        {
            "date": "2015-08-24T08:08:44+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "may be lazily on first use (if possible) is a better alternative than on first start..\n\"First use\" in this context I guess is first data upload, e.g.\n\ncurl -X POST ... --data-binary @test1.jar http://localhost:8983/solr/.system/blob/test\n\n\nIs it even possible to intercept a POST to .system if it does not exist, or is the special /blob handler only registered when collection is created? ",
            "id": "comment-14708923"
        },
        {
            "date": "2015-08-24T08:50:05+0000",
            "author": "Ramkumar Aiyengar",
            "content": "Should certainly be possible. Actually there's the concept of lazy cores already which probably does this already, but I am not sure.. ",
            "id": "comment-14708976"
        },
        {
            "date": "2015-08-24T09:52:12+0000",
            "author": "Noble Paul",
            "content": "Lazy cores is different.  We can auto create the collection when the first request comes. The core container has to be aware of this special collection  ",
            "id": "comment-14709036"
        },
        {
            "date": "2015-08-24T10:49:52+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Changed issue summary to \"Auto create .system collection on first request if it does not exist\". Agree this is a more elegant solution. ",
            "id": "comment-14709090"
        },
        {
            "date": "2016-11-03T13:58:34+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Simple patch which just logs a line in HttpSolrCall when we have detected .system collection not exists. Suppose we could put some auto-create logic there? ",
            "id": "comment-15632786"
        },
        {
            "date": "2016-11-03T14:43:02+0000",
            "author": "Shawn Heisey",
            "content": "Another TL;DR comment:\n\nSomething I touched on earlier: What will the default value for replicationFactor be when the collection is automatically built?  One idea, but I'm far from saying it's the best idea, is to set the default to the number of servers in the cloud.\n\nIf the replica count is hard-coded to 2, or uses the number of servers, the following scenario would result either in no .system collection at all (failed create due to insufficient servers) or no redundancy:  A user sets up a cloud, initially with one server, then creates a collection on that cloud to try things out before adding more servers and setting up their real collection(s).\n\nI like the idea of not making the user do things manually, but if a user proceeds in the cautious manner I just described, I worry that we'll put that user in a bad situation at a later date when the server containing their .system collection dies.  We can create good documentation, but unless the user thinks to LOOK for that documentation, they might get a nasty surprise one day.\n\nRelated:  The reference guide probably needs a section describing problems that can arise from a lack of understanding, and how to remedy them.  A possible section title:  \"Gotchas: Solving problems you may not know you have\" ",
            "id": "comment-15632931"
        },
        {
            "date": "2016-11-06T22:37:35+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Defaulting to number of live nodes in cluster would probably do. Then we'd need to document that manual ADDREPLICA calls are necessary to achieve redundancy if you start off with one node and later add nodes.\n\nIdeally we should re-visit the former vision of being able to configure a desired state for a collection, which the cluster (Overseer) will try to achieve. Say you configure replicationFactor=3&stateType=desired in a one-node cluster. Then you add nodes, and the Overseer issues ADDREPLICA commands until condition is reached. Next, we could allow variables/functions instead of absolute numbers, i.e. replicationFactor=nodeCount(). Of course there are many issues to such an approach too, e.g. actions should probably only trigger N seconds after the last add/remove command. ",
            "id": "comment-15642554"
        },
        {
            "date": "2016-11-07T15:55:19+0000",
            "author": "Noble Paul",
            "content": "Let's limit the scope to creating the .system collection during the first request. I would say let's keep the replicationfactor=Math.min(3,totalNodes) . For the time being, it should be good enough. Users can do ADDREPLICA later ",
            "id": "comment-15644547"
        },
        {
            "date": "2017-02-02T00:27:51+0000",
            "author": "Noble Paul",
            "content": "I'm planning to commit this as soon as I add a test ",
            "id": "comment-15849169"
        },
        {
            "date": "2017-02-02T04:56:38+0000",
            "author": "ASF subversion and git services",
            "content": "Commit e200b8a2a418cdb145acb51d1181b1b60362a926 in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e200b8a ]\n\nSOLR-7955: Auto create .system collection on first request if it does not exist ",
            "id": "comment-15849435"
        },
        {
            "date": "2017-02-02T07:45:54+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 3e44928f490c34666107e9bd6393020be160865f in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3e44928 ]\n\nSOLR-7955: making it easy to commit to branch_6x ",
            "id": "comment-15849597"
        },
        {
            "date": "2017-02-02T08:01:22+0000",
            "author": "ASF subversion and git services",
            "content": "Commit ff1a9e923530cd044eebcee5f7dcca77e26b7d0c in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ff1a9e9 ]\n\nSOLR-7955: further optimization to avoid zk lookup ",
            "id": "comment-15849608"
        },
        {
            "date": "2017-02-02T08:29:39+0000",
            "author": "ASF subversion and git services",
            "content": "Commit ec778c5c8f6b3bcb551a3ae9999c73f664e2de90 in lucene-solr's branch refs/heads/branch_6x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=ec778c5 ]\n\nSOLR-7955: Auto create .system collection on first request if it does not exist ",
            "id": "comment-15849652"
        },
        {
            "date": "2017-02-02T08:29:41+0000",
            "author": "ASF subversion and git services",
            "content": "Commit afae0d971867216d1f02a96395ba939a37c8d86e in lucene-solr's branch refs/heads/branch_6x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=afae0d9 ]\n\nSOLR-7955: Auto create .system collection on first request if it does not exist ",
            "id": "comment-15849653"
        }
    ]
}