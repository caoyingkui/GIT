{
    "id": "SOLR-8230",
    "title": "Create Facet Telemetry for Nested Facet Query",
    "details": {
        "components": [
            "Facet Module"
        ],
        "type": "Sub-task",
        "labels": "",
        "fix_versions": [
            "5.5",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "This is the first step for SOLR-8228 Facet Telemetry. It's going to implement the telemetry for a nested facet query and put the information obtained in debug field in response.\n\nHere is an example of telemetry returned from query. \nQuery\n\ncurl http://localhost:8228/solr/films/select -d 'q=*:*&wt=json&indent=true&debugQuery=true&json.facet={\ntop_genre: {\n  type:terms,\n  field:genre,\n  numBucket:true,\n  limit:2,\n  facet: {\n    top_director: {\n        type:terms,\n        field:directed_by,\n        numBuckets:true,\n        limit:2\n    },\n    first_release: {\n        type:terms,\n        field:initial_release_date,\n        sort:{index:asc},\n        numBuckets:true,\n        limit:2\n    }\n  }\n}\n}'\n\n\n\nTelemetry returned (inside debug part)\n\n    \"facet-trace\":{\n      \"processor\":\"FacetQueryProcessor\",\n      \"elapse\":1,\n      \"query\":null,\n      \"sub-facet\":[{\n          \"processor\":\"FacetFieldProcessorUIF\",\n          \"elapse\":1,\n          \"field\":\"genre\",\n          \"limit\":2,\n          \"sub-facet\":[{\n              \"filter\":\"genre:Drama\",\n              \"processor\":\"FacetFieldProcessorUIF\",\n              \"elapse\":0,\n              \"field\":\"directed_by\",\n              \"limit\":2},\n            {\n              \"filter\":\"genre:Drama\",\n              \"processor\":\"FacetFieldProcessorNumeric\",\n              \"elapse\":0,\n              \"field\":\"initial_release_date\",\n              \"limit\":2},\n            {\n              \"filter\":\"genre:Comedy\",\n              \"processor\":\"FacetFieldProcessorUIF\",\n              \"elapse\":0,\n              \"field\":\"directed_by\",\n              \"limit\":2},\n            {\n              \"filter\":\"genre:Comedy\",\n              \"processor\":\"FacetFieldProcessorNumeric\",\n              \"elapse\":0,\n              \"field\":\"initial_release_date\",\n              \"limit\":2}]}]},",
    "attachments": {
        "SOLR-8230.patch": "https://issues.apache.org/jira/secure/attachment/12772266/SOLR-8230.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-11-13T19:03:25+0000",
            "author": "Michael Sun",
            "content": "Uploaded first patch for review. It adds a facet trace field in response to reveal the debugging information of facet if debugQuery=true in request. Here is some thoughts for the patch.\n\n1. In the patch, it shows the facet processor used, elapse time and facet description for each step to execute facet. If there is sub-facet, it shows the facet hierarchy as well. It helps to understand how the facet is executed and the cost of each step. \n2. The total count and unique count is not included and is planned for next sub-task.\n3. The debug information is stored along with FacetContext since FacetContext maintains steps and hierarchy of facet execution. FacetContext is organized in a tree structure. The root of the tree is stored in ResponseBuilder as \"FacetContext\".\n4. FacetDebugInfo.getFacetDebugInfoInJSON() is designed to be static. The reason is FacetContext is package private. From DebugComponent.java, there is no good way to access facet debug information.\n5. The escape string in JSON output format in facet trace in the response is somehow not completely correct. I am trying to figure it out. ",
            "id": "comment-15004521"
        },
        {
            "date": "2015-11-20T02:59:22+0000",
            "author": "Yonik Seeley",
            "content": "OK, so I had a quick look...\n\n5. The escape string in JSON output format in facet trace in the response is somehow not completely correct. I am trying to figure it out.\n\nDon't serialize it yourself... You should add a general object to the response (Map, List, etc) and let the response writer formulate the correct response (JSON, binary, XML, etc). ",
            "id": "comment-15015095"
        },
        {
            "date": "2015-11-20T17:55:54+0000",
            "author": "Michael Sun",
            "content": "Make sense. Thanks Yonik Seeley ",
            "id": "comment-15018423"
        },
        {
            "date": "2015-11-20T19:21:04+0000",
            "author": "Michael Sun",
            "content": "Just uploaded a new patch. Here is the change after previous patch.\n1. the facet debug information is organized as general objects (map and list) and is formulated by response writer. In this way, the output trace is in correct format.\n2. add filter description for each sub-facet processed. ",
            "id": "comment-15018586"
        },
        {
            "date": "2015-11-27T20:28:51+0000",
            "author": "Yonik Seeley",
            "content": "I like the getFacetDescription() in FacetRequest, it's nice and general.  Perhaps we should make a generic base-class implementation of FacetRequest.toString() that uses this as well.\n\nIn FacetContext, I see you build a tree - having the current context point to all it's sub-contexts (even when debug isn't turned on).\nThat may be problematic memory-wise...  FacetContext contains a reference to (among other things) \"base\", the DocSet for the facet domain.  Previously FacetContext objects were not retained longer than needed. ",
            "id": "comment-15030223"
        },
        {
            "date": "2015-11-30T18:02:13+0000",
            "author": "Michael Sun",
            "content": "Thanks Yonik Seeley. It's really good insight to point out the potential memory issue. Let me fix it. It can be fixed either by building a separate tree for telemetry information only (small amount of data) or null out the unused fields in sub context once it's used. ",
            "id": "comment-15032175"
        },
        {
            "date": "2015-11-30T18:56:32+0000",
            "author": "Michael Sun",
            "content": "Just uploaded new patch. In the patch, it builds a tree structure for facet telemetry information only during facet processing. The facet context is not retained after each facet is processed as it was. ",
            "id": "comment-15032244"
        },
        {
            "date": "2015-12-14T19:45:28+0000",
            "author": "Michael Sun",
            "content": "Just uploaded a new patch. Thanks Yonik Seeley for review. Here is the change from last patch.\n\n1. If debug option in query is not set, FacetDebugInfo is not created to reduce memory usage.\n2. It allows to add user defined information into FacetDebugInfo.\n\nAlso an example facet telemetry is added in JIRA. ",
            "id": "comment-15056581"
        },
        {
            "date": "2015-12-17T18:36:47+0000",
            "author": "Yonik Seeley",
            "content": "Is this patch for trunk?  I'm getting failures when I try to apply it. ",
            "id": "comment-15062510"
        },
        {
            "date": "2015-12-17T19:05:19+0000",
            "author": "Michael Sun",
            "content": "Yonik Seeley The patch is on trunk. ",
            "id": "comment-15062575"
        },
        {
            "date": "2015-12-17T19:16:16+0000",
            "author": "Michael Sun",
            "content": "Attach an updated patch generated from trunk up to date. ",
            "id": "comment-15062593"
        },
        {
            "date": "2015-12-18T16:44:22+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1720823 from Yonik Seeley in branch 'dev/trunk'\n[ https://svn.apache.org/r1720823 ]\n\nSOLR-8230: JSON Facet API: add facet-info to debug when debugQuery=true ",
            "id": "comment-15064176"
        },
        {
            "date": "2015-12-18T16:45:35+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1720824 from Yonik Seeley in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1720824 ]\n\nSOLR-8230: JSON Facet API: add facet-info to debug when debugQuery=true ",
            "id": "comment-15064179"
        },
        {
            "date": "2015-12-18T16:49:46+0000",
            "author": "Yonik Seeley",
            "content": "Committed.  Thanks Michael!\nI also added a simple test to just test for the presence of \"facet-info\" and also randomly added it in the main TestJsonFacets test just to ensure that it didn't cause exceptions or other issues for all the various facet types.\n\nFrom a style perspective, I also moved the license to the top of the new file. ",
            "id": "comment-15064186"
        }
    ]
}