{
    "id": "LUCENE-2887",
    "title": "Remove/deprecate IndexReader.undeleteAll",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "3.1",
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "This API is rather dangerous in that it's \"best effort\" since it can only un-delete docs that have not yet been merged away, or, dropped (as of LUCENE-2010).\n\nGiven that it exposes impl details of how Lucene prunes deleted docs, I think we should remove this API.\n\nAre there legitimate use cases....?",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2011-01-24T20:34:29+0000",
            "content": "The MultiPassIndexSplitter won't work without this API. It can be modified to use a subclass of IndexReader & term / postings enumerators to restore the current behavior, or it can be rewritten entirely as a (fabled) SinglePassIndexSplitter.  ",
            "author": "Andrzej Bialecki",
            "id": "comment-12985967"
        },
        {
            "date": "2011-01-25T12:39:45+0000",
            "content": "I think it is correct to say that \"if the result of ir.numDeletedDocs() is N, then calling ir.undeleteAll() will undelete exactly N documents\"... or am I missing it? \n\nBecause if a merge was invoked for the segments seen by this reader, I see two options:\n\n\tA merge is on going, or the merge is done but uncommitted yet.\n   This means that an index writer has a lock on the index, hence ir.undeleteAll() will fail to get the lock.\n\tThe merge was already committed.\n   This means that the index reader will fail to get write permission for being Stale.\n\n\n\nSo I think this method behaves deterministically - perhaps its jdoc should say something like: \nUndeletes all #numDeletedDocs() documents currently marked as deleted in this index. ? ",
            "author": "Doron Cohen",
            "id": "comment-12986364"
        },
        {
            "date": "2011-01-25T23:07:06+0000",
            "content": "I think it is correct to say that \"if the result of ir.numDeletedDocs() is N, then calling ir.undeleteAll() will undelete exactly N documents\"... or am I missing it?\n\nThat's right... it's just that you can no longer \"rely\" on how IW reclaims del docs.\n\nBut I'll just commit that \"clarification\" to the javadoc and leave the API for now... ",
            "author": "Michael McCandless",
            "id": "comment-12986752"
        },
        {
            "date": "2011-01-25T23:16:14+0000",
            "content": "I just sharpened the jdocs... ",
            "author": "Michael McCandless",
            "id": "comment-12986759"
        },
        {
            "date": "2011-03-30T15:50:11+0000",
            "content": "Bulk close for 3.1 ",
            "author": "Grant Ingersoll",
            "id": "comment-13013393"
        }
    ]
}