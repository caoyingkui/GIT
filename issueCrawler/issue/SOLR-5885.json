{
    "id": "SOLR-5885",
    "title": "solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SimplePropertiesWriter.java has crazy locale lookup",
    "details": {
        "affect_versions": "4.7",
        "status": "Open",
        "fix_versions": [
            "4.9",
            "6.0"
        ],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "SimplePropertiesWriter uses the following code to convert a string to a java.util.Locale:\n\n    if(params.get(LOCALE) != null) {\n      String localeStr = params.get(LOCALE);\n      for (Locale l : Locale.getAvailableLocales()) {\n        if(localeStr.equals(l.getDisplayName(Locale.ROOT))) {\n          locale = l;\n          break;\n        }\n      }\n      if(locale==null) {\n        throw new DataImportHandlerException(SEVERE, \"Unsupported locale for PropertWriter: \" + localeStr);\n      }\n    } else {\n      locale = Locale.ROOT;\n    }    \n\n\n\nThis makes no sense to me. Before I fixed that in LUCENE-5540, it was using the \"localized\" display name of the locale for lookup.\n\nAs we are on Java 7 in trunk and 4.x we can use the new API: Locale#forLanguageTag(String languageTag)\n\nThis one is not dependent on current locale, does not use display name and follows standards (IETF BCP 47).",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Uwe Schindler",
            "id": "comment-13971303",
            "date": "2014-04-16T12:57:43+0000",
            "content": "Move issue to Solr 4.9. "
        }
    ]
}