{
    "id": "SOLR-9052",
    "title": "Provide a syntax for Adding Multiple Documents on REST that Uses Proper JSON Format",
    "details": {
        "components": [
            "update"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "Currently if you want to post a batch of documents to the update handler and need to include any options like a boost for each, you have to use a format that uses multiple \"add\" keys, which make it virtually impossible to build an object in another language and serialize it since most do not allow multiple keys of the same name. Many JSON formatters and validators as well will not allow this. While the JSON specs do not exclude it outright, they do say that keys \"SHOULD\" be unique and certainly not having unique keys results in a multitude of issues when trying to work with Solr from other languages. Please add a way to send multiple documents to the update handler via the REST Api that does not require using multiple \"add\" keys.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-05-03T08:01:15+0000",
            "author": "Jan H\u00f8ydahl",
            "content": "Linking to RefGuide section\n\nOne way could be to allow special field names in the docs, such as \"_boost_\" : 2.0. If this is parsed in a proper location, it would also work with CSV or any other handler as well. ",
            "id": "comment-15268325"
        },
        {
            "date": "2016-05-03T17:44:37+0000",
            "author": "Mary Jo Sminkey",
            "content": "I like it Jan, that sounds like a good solution that wouldn't require too much modification to the existing method(s). I expect the boost is the one setting on docs that people are most likely to need to include although it would certainly be a good idea to add support for the other settings as well (overwrite and commitWithin are two that I know of).  ",
            "id": "comment-15269171"
        },
        {
            "date": "2017-11-16T07:57:11+0000",
            "author": "Mateusz Owdziej",
            "content": "What about accepting json with add key as array and other commands (e.g. delete). It is difficult (or impossible) to create json with multiple \"add\" keys. \nProposition: \n\n{\n   \"add\":{\n      \"doc\":[\n         {\n            \"id\":\"DOC1\",\n            \"my_field\":2.3\n         },\n         {\n            \"id\":\"DOC2\",\n            \"my_field\":4.2\n         }\n      ]\n   },\n   \"commit\":{   },\n   \"optimize\":{  \"waitSearcher\":false  },\n   \"delete\":[\n      { \"id\":\"ID\" },\n      { \"query\":\"QUERY\" }\n   ]\n}\n\n\nHow to make such action using rest api: delete all documents, add new one and after that commit everything? ",
            "id": "comment-16254894"
        }
    ]
}