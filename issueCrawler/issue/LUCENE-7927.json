{
    "id": "LUCENE-7927",
    "title": "Add facets impl to count unique numeric values",
    "details": {
        "labels": "",
        "priority": "Major",
        "resolution": "Fixed",
        "affect_versions": "None",
        "status": "Closed",
        "type": "Improvement",
        "components": [
            "modules/facet"
        ],
        "fix_versions": [
            "7.1",
            "master (8.0)"
        ]
    },
    "description": "The facets module has multiple facet methods for counting flat and hierarchical fields, and also a method for counting numeric ranges.  I'd like to also add a method that counts unique numeric (long) values, designed to be used for fields that have only a few, typically low valued, numbers across the index e.g. a \"review\" rating from 1 to 5.",
    "attachments": {
        "LUCENE-7927.patch": "https://issues.apache.org/jira/secure/attachment/12881322/LUCENE-7927.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16122301",
            "date": "2017-08-10T20:47:47+0000",
            "content": "Patch; I think it's ready.  I named the new facets impl LongValueFacetCounts. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-16130159",
            "date": "2017-08-17T09:49:54+0000",
            "content": "Another iteration, borrowing the nice native long -> int hash table from Solr's NumericFacets, and also adding specialized implementations for counting all facets and for the multi-valued case.\n\nIt would be nice to also support float/double but I think that should be a separate issue.\n\nNext up l'll make a benchmark to test whether the small value optimization (using a simple array to count values 0 - 1023) is worthwhile ... it could be the hash table is fast enough. ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-16135288",
            "date": "2017-08-21T15:21:07+0000",
            "content": "Another iteration, also adding an option to count all facets from a LongValuesSource.\n\nI made a simple artificial benchmark (https://github.com/mikemccand/luceneutil/blob/master/src/main/perf/NumericValueFacetBenchmark.java), indexing 50M docs with a numeric DV field with values 0 - 9, to test whether special casing small values (0-1023) is worthwhile:\n\nCounting long values for all docs takes 99.0 msec (best of 100 iters), and 153.4 msec if I turn off the opto, so ~35% faster.\n\nThe overall gains are less if I run an IntPoint.newRangeQuery matchin first 50% of the index and compute facets on that: 255.3 msec and 279.4 if I turn off the optimization, so ~9% faster.  But net/net I think we should keep the opto... I think it's a common use case to count smallish ordinals.\n ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-16145532",
            "date": "2017-08-29T15:57:47+0000",
            "content": "Commit de5c68b5f813f8069ad7524bd772514e1f818f30 in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=de5c68b ]\n\nLUCENE-7927: add LongValueFacetCounts to compute facet count for individual numeric doc values ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16145537",
            "date": "2017-08-29T15:58:50+0000",
            "content": "Commit 4b48608574d9da0152288b103c8ceea940194062 in lucene-solr's branch refs/heads/branch_7x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=4b48608 ]\n\nLUCENE-7927: add LongValueFacetCounts to compute facet count for individual numeric doc values ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16147332",
            "date": "2017-08-30T14:39:09+0000",
            "content": "Michael McCandless Your previous comment said we should keep the optimization but it is actually commented out in your commit.  ",
            "author": "Adrien Grand"
        },
        {
            "id": "comment-16148243",
            "date": "2017-08-31T00:12:18+0000",
            "content": "Argh, thanks for catching that Adrien Grand!  I'll fix tomorrow ... ",
            "author": "Michael McCandless"
        },
        {
            "id": "comment-16148770",
            "date": "2017-08-31T10:03:39+0000",
            "content": "Commit aa5dac04bdb5f49b75b95763e9b08065c47b8e52 in lucene-solr's branch refs/heads/master from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=aa5dac0 ]\n\nLUCENE-7927: re-enable the low value optimization ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16148771",
            "date": "2017-08-31T10:04:26+0000",
            "content": "Commit 37518aee105432910ab317ecc1c4feda7601124b in lucene-solr's branch refs/heads/branch_7x from Mike McCandless\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=37518ae ]\n\nLUCENE-7927: re-enable the low value optimization ",
            "author": "ASF subversion and git services"
        },
        {
            "id": "comment-16207376",
            "date": "2017-10-17T11:03:48+0000",
            "content": "Bulk close after 7.1.0 release ",
            "author": "Shalin Shekhar Mangar"
        }
    ]
}