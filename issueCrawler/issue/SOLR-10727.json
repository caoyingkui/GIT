{
    "id": "SOLR-10727",
    "title": "Optimize faceting on empty docSet to return faster and not pollute filter cache",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "7.0"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Resolved"
    },
    "description": "In certain faceting circumstances (both classic SimpleFacets and JSON Facets), SolrIndexSearcher.numDocs(q,docSet) is invoked.  numDocs can be improved to return early if the passed docSet (the base of documents to compute facets on) is empty.  Since it doesn't today, it'll go create a filter cache entry (if it doesn't exist) for the query.  Range faceting is a heavy user of this method since it'll be called for each range.  If you're doing date range faceting and do time based sharding and have a time based filter query, then there's a decent chance the current index in question won't match the query.  So lets not pollute the filter cache.",
    "attachments": {
        "SOLR_10727_SolrIndexSearcher_numDocs_0_docSet.patch": "https://issues.apache.org/jira/secure/attachment/12869321/SOLR_10727_SolrIndexSearcher_numDocs_0_docSet.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-05-22T19:46:12+0000",
            "content": "Trivial patch.  Assuming tests pass, I'll commit tomorrow. ",
            "author": "David Smiley",
            "id": "comment-16020068"
        },
        {
            "date": "2017-05-22T20:18:42+0000",
            "content": "+1 ",
            "author": "Mikhail Khludnev",
            "id": "comment-16020123"
        },
        {
            "date": "2017-05-22T21:42:31+0000",
            "content": "+1 ... but it seems like if we're going to try and optimize this situation, why not (also) optimize it slightly higher up and completely avoid the construction of the Query objects? (and in some cases: additional overhead)\n\nfor example: the first usage of SolrIndexSearcher.numDocs(Query,DocSet) i found was RangeFacetProcessor.rangeCount(DocSet subset,...) ... if the first line of that method was if (0 == subset.size()) return 0 then we'd not only optimize away the SolrIndexSearcher hit, but also fetching the SchemaField & building the range query (not to mention the much more expensive getGroupedFacetQueryCount in the grouping case)\n\nAt a glance, most other callers of SolrIndexSearcher.numDocs(Query,DocSet) could be trivially optimize this way as well \u2013 at a minimum to eliminate Query parsing/construction. ",
            "author": "Hoss Man",
            "id": "comment-16020247"
        },
        {
            "date": "2017-05-23T03:35:35+0000",
            "content": "Hoss Man if you'd like to take this over to increase the scope then be my guest.  There are 6 callers of this method; I was going for the easy win. ",
            "author": "David Smiley",
            "id": "comment-16020614"
        },
        {
            "date": "2017-05-23T04:52:34+0000",
            "content": "... I was going for the easy win.\n\nI'm sorry, i worded my comment poorly ... I should have never used the word \"but\" \u2013 please go ahead commit your current patch and get the quick win.\n\nYour patch (and the your general point of range faceting calling this method a lot) just got me spitballing about other potential optimizations along the same lines \u2013 I should have just gone ahead and created a new jira for that, done now: SOLR-10732 ",
            "author": "Hoss Man",
            "id": "comment-16020658"
        },
        {
            "date": "2017-05-23T14:51:13+0000",
            "content": "Commit 715d8b0ccf42d30661a7964c33bd27c9fec3d18e in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=715d8b0 ]\n\nSOLR-10727: SolrIndexSearcher.numDocs empty docSet optimization ",
            "author": "ASF subversion and git services",
            "id": "comment-16021279"
        },
        {
            "date": "2017-05-23T14:53:52+0000",
            "content": "Ok no prob.  Feel free to simply add onto the same CHANGES.txt entry I did for SOLR-10727 if you commit for 7.0. ",
            "author": "David Smiley",
            "id": "comment-16021283"
        }
    ]
}