{
    "id": "LUCENE-3539",
    "title": "IndexFormatTooOld/NewExc should try to include fileName + directory when possible",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Improvement",
        "fix_versions": [
            "3.5",
            "4.0-ALPHA"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "(Spinoff from http://markmail.org/thread/t6s7nn3ve765nojc )\n\nWhen we throw a too old/new exc we should try to include the full path to the offending file, if possible.",
    "attachments": {
        "LUCENE-3539.patch": "https://issues.apache.org/jira/secure/attachment/12501269/LUCENE-3539.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2011-10-28T10:30:59+0000",
            "content": "Patch.  I now pass DataInput down to IndexFormatTooNew/OldExc, and\n.toString() it, and impl'd .toString in the all the IndexInput impls I\ncould find. ",
            "author": "Michael McCandless",
            "id": "comment-13138207"
        },
        {
            "date": "2011-10-28T13:03:30+0000",
            "content": "I dont think i like all the duplication/extra tracking in every indexinput impl... \n\nIn my opinion its not worth it!\n\ncan this be done in a cleaner way? ",
            "author": "Robert Muir",
            "id": "comment-13138303"
        },
        {
            "date": "2011-10-28T13:12:17+0000",
            "content": "I agree with Robert, adding this to IndexInput is stupid.\n\nI think, only adding the file name as done before should be fine. There are only few places where we pass null as file name to the exception (whoch may be fixed). Passing the whole directory name is in my opinion useless. Its up to the implementation using lucene to keep track of its directory name (when it opens a IndexReader it already knows its dir name).\n\nI would close this as won't fix and maybe only fix the remaining places that misses the file name (e.g. SegmentTermsEnumReader). ",
            "author": "Uwe Schindler",
            "id": "comment-13138314"
        },
        {
            "date": "2011-10-28T13:14:10+0000",
            "content": "you might be able to work me down to a partial path rather than a full path...\n\nlike if IndexInput takes String name in its ctor (the same one passed to Directory.openInput NOT the full path, keeps String as a private variable), and implements toString itself.\n\nthen we wouldnt have to track additional variables in each indexinput impl, only change openinput and the ctors to pass this information.\n\nBut i'm still not sure how useful this is. \n\nIt really seems like an implementation detail that we check the stored fields to determine if an indexformat is too old. who cares what the file name is? ",
            "author": "Robert Muir",
            "id": "comment-13138322"
        },
        {
            "date": "2011-10-28T19:54:40+0000",
            "content": "Some more thoughts:\n\n\tmaybe IndexInput should have a ctor like IndexInput(String resourceDescription)\n\tthen, in all error messages (e.g. read past EOF) we could include this, for better error descriptions\n\twhen directories call openInput they could pass whatever they want (e.g. filename), and CFS could include the \"real\" file within cfs\n\twe could declare this as just an opaque string describing the indexinput (yeah and II could use it in its toString() as well)\n\tif we do this, i think it should be non-null (e.g. in 3.x we add no-arg ctor that forwards to \"no additional details\" or whatever)\n\n\n\nIf we did it consistently like this, i think it could improve error messages and debugging and be a pretty clean change. ",
            "author": "Robert Muir",
            "id": "comment-13138694"
        },
        {
            "date": "2011-10-29T10:42:53+0000",
            "content": "+1, I like that solution, Robert.  I'll rework the patch... ",
            "author": "Michael McCandless",
            "id": "comment-13139181"
        },
        {
            "date": "2011-11-02T00:11:32+0000",
            "content": "New patch folding in Robert's idea....\n\nI added final String resourceDescription to II, returned from\ntoString, made it required arg to the ctor, and fix all II subclasses\nto pass something reasonable.\n\nWhen our II impls originate an exception (eg from EOF), I also include\nII.toString(); if a method they call throws IOE (eg file.read(...)\ninside SimpleFSII), then I catch & rethrow w/ II.toString() included.\n\nI also include the sub-file name when inside a sliced II (CFS/CFX);\nI added a required arg (sliceDescription) to the sliceInput method\nfor this. ",
            "author": "Michael McCandless",
            "id": "comment-13141791"
        },
        {
            "date": "2011-11-03T17:02:12+0000",
            "content": "Patch looks good, only one minor idea for improvement:\n\nWhen we throw \"read past EOF\" I think we should throw java.io.EOFException (extends IOException) rather than a generic one? ",
            "author": "Robert Muir",
            "id": "comment-13143317"
        },
        {
            "date": "2011-11-03T17:18:22+0000",
            "content": "OK, new patch; I changed to EOFE, and I just use in.toString() instead of special casing DI vs II.\n\nI think it's ready! ",
            "author": "Michael McCandless",
            "id": "comment-13143329"
        },
        {
            "date": "2011-11-04T22:06:01+0000",
            "content": "mike can we close LUCENE-3138 too? ",
            "author": "Simon Willnauer",
            "id": "comment-13144395"
        },
        {
            "date": "2011-11-05T17:59:40+0000",
            "content": "mike can we close LUCENE-3138 too?\n\nHmm I don't think so.  It's unrelated to my fixes here?  Here I just \"improved\" the error message you see when you get an IOE, CorruptIndexE, IndexFormatTooXE out of Lucene. ",
            "author": "Michael McCandless",
            "id": "comment-13144767"
        },
        {
            "date": "2011-11-27T12:29:30+0000",
            "content": "Bulk close after release of 3.5 ",
            "author": "Uwe Schindler",
            "id": "comment-13157779"
        }
    ]
}