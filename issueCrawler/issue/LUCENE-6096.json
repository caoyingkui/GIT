{
    "id": "LUCENE-6096",
    "title": "Improve FilterCache.ramBytesUsed",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.0",
            "6.0"
        ],
        "priority": "Minor",
        "status": "Closed",
        "type": "Improvement"
    },
    "description": "I worked on some tests to improve ram usage estimation of LRUFilterCache and found some issues:\n\n1. It currently only takes into account filters and DocIdSets, not the internal overhead of the various hash tables and linked lists that are being maintained. If the filter cache mostly stores sparse doc id sets (or even worse DocIdSet.EMPTY instances that require 0 bytes since it's a singleton) then the memory usage can be significantly under-estimated.\n\n2. It treats all filters as if they were singletons. The filter cache is essentially a Map<SegmentCoreReaders, Map<Filter, DocIdSet>> and it treats filters as if all filters that are equal are the same instance when it comes to memory usage. But this is not the case actually since the map on the second level uses the first-seen filter as a key, which might be different on different segments because of merging.",
    "attachments": {
        "LUCENE-6096.patch": "https://issues.apache.org/jira/secure/attachment/12685381/LUCENE-6096.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14235940",
            "author": "Adrien Grand",
            "date": "2014-12-05T19:19:25+0000",
            "content": "Here is a patch:\n\n\tit uses a more sensible memory usage for filters that don't implement Accountable (which is the memory usage for a QueryWrapperFilter around a TermQuery, see test)\n\tit tries to take the memory usage of the hash tables into account\n\tfilters are deduplicated, this actually did not require many changes since filters were already stored in a top-level LinkedHashMap for LRU evictions.\n\n "
        },
        {
            "id": "comment-14236110",
            "author": "Robert Muir",
            "date": "2014-12-05T21:10:08+0000",
            "content": "+1\n\nWe should probably fix IW's estimate as well in BufferedUpdates, it would be nice if it were more reasonable than 24. "
        },
        {
            "id": "comment-14242417",
            "author": "ASF subversion and git services",
            "date": "2014-12-11T11:30:41+0000",
            "content": "Commit 1644600 from Adrien Grand in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1644600 ]\n\nLUCENE-6096: Relax assertion about memory usage since memory usage depends on the JVM impl and settings. "
        },
        {
            "id": "comment-14242670",
            "author": "ASF subversion and git services",
            "date": "2014-12-11T15:17:13+0000",
            "content": "Commit 1644672 from Adrien Grand in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1644672 ]\n\nLUCENE-6096: Avoid CMS which can close segments while we are measuring ram usage of the filter cache. "
        },
        {
            "id": "comment-14242672",
            "author": "ASF subversion and git services",
            "date": "2014-12-11T15:17:56+0000",
            "content": "Commit 1644673 from Adrien Grand in branch 'dev/trunk'\n[ https://svn.apache.org/r1644673 ]\n\nLUCENE-6096: Avoid CMS which can close segments while we are measuring ram usage of the filter cache. "
        },
        {
            "id": "comment-14332796",
            "author": "Anshum Gupta",
            "date": "2015-02-23T05:01:57+0000",
            "content": "Bulk close after 5.0 release. "
        }
    ]
}