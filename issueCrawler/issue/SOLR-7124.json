{
    "id": "SOLR-7124",
    "title": "Add \"delconfig\" command to zkcli",
    "details": {
        "components": [
            "SolrCloud"
        ],
        "type": "New Feature",
        "labels": "",
        "fix_versions": [
            "5.2",
            "6.0"
        ],
        "affect_versions": "5.0",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Minor"
    },
    "description": "As far as I know, there is no functionality included with Solr that can delete a SolrCloud config in zookeeper.\n\nA \"delconfig\" command should be added to ZkCli and the zkcli script that can accomplish this.  It should refuse to delete a config that is in use by any current collection.",
    "attachments": {
        "SOLR-7124.patch": "https://issues.apache.org/jira/secure/attachment/12736475/SOLR-7124.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-02-27T04:28:18+0000",
            "author": "Vamsee Yarlagadda",
            "content": "Looks like \"zkcli .. -cmd clear <znode>\" can delete the znodes recursively. So a user can call this for /solr/configs/<ConfigName> to delete a config.\nhttps://github.com/apache/lucene-solr/blob/trunk/solr/core/src/java/org/apache/solr/cloud/ZkCLI.java#L236\n\nI agree the users didn't have the direct option to delete the config (similar to upconfig, downconfig). It would be good to have one.\nIt should refuse to delete a config that is in use by any current collection.\nWe should also keep in mind that a user can replace existing configs for a collection and call collection RELOAD. So adding this check can prevent one from easily replacing configs. Thoughts? ",
            "id": "comment-14339702"
        },
        {
            "date": "2015-02-27T14:43:39+0000",
            "author": "Shawn Heisey",
            "content": "We should also keep in mind that a user can replace existing configs for a collection and call collection RELOAD. So adding this check can prevent one from easily replacing configs. Thoughts?\n\nThe check to see whether the config is in use would only be required on delconfig.  It would not be required on upconfig, because upconfig will not delete any files from an existing config, it will only add or overwrite.\n\nA slightly different check (making sure the config actually exists) might need to be performed for linkconfig.  I know it is possible to link a config to a collection that doesn't exist yet, so that when it is created it will already have the correct config.  it is probably also possible to make that link to a config that doesn't exist, but I think we should prevent that. ",
            "id": "comment-14340205"
        },
        {
            "date": "2015-02-28T02:13:15+0000",
            "author": "Vamsee Yarlagadda",
            "content": "It would not be required on upconfig, because upconfig will not delete any files from an existing config, it will only add or overwrite.\nYou are right. I am not aware of this. I was under the impression that it will throw an error if config already exists. However as you pointed out, it will not delete any files as part of this operation. But there is a chance that we can end up with a mix of both old and new configs. Let's say if the old config has a file foo.txt and the new config is missing it then the updated configs in ZK contains all the files from new config + foo.txt. I am not sure whether this is a separate bug we need to fix.\n\nA slightly different check (making sure the config actually exists) might need to be performed for linkconfig.\nMakes sense. ",
            "id": "comment-14341217"
        },
        {
            "date": "2015-05-31T23:38:32+0000",
            "author": "Xu Zhang",
            "content": "Here is a quick implementation.\n\nWhen deleting configset, will check if any collection using the config. ",
            "id": "comment-14566830"
        }
    ]
}