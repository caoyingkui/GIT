{
    "id": "LUCENE-5408",
    "title": "SerializedDVStrategy -- match geometries in DocValues",
    "details": {
        "type": "New Feature",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed",
        "components": [
            "modules/spatial"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "4.7",
            "6.0"
        ]
    },
    "description": "I've started work on a new SpatialStrategy implementation I'm tentatively calling SerializedDVStrategy.  It's similar to the JtsGeoStrategy in Spatial-Solr-Sandbox but a little different in the details \u2013 certainly faster.  Using Spatial4j 0.4's BinaryCodec, it'll serialize the shape to bytes (for polygons this in internally WKB format) and the strategy will put it in a BinaryDocValuesField.  In practice the shape is likely a polygon but it needn't be.  Then I'll implement a Filter that returns a DocIdSetIterator that evaluates a given document passed via advance(docid)) to see if the query shape matches a shape in DocValues. It's improper usage for it to be used in a situation where it will evaluate every document id via nextDoc().  And in practice the DocValues format chosen should be a disk resident one since each value tends to be kind of big.\n\nThis spatial strategy in and of itself has no index; it's O(N) where N is the number of documents that get passed thru it.  So it should be placed last in the query/filter tree so that the other queries limit the documents it needs to see.  At a minimum, another query/filter to use in conjunction is another SpatialStrategy like RecursivePrefixTreeStrategy.\n\nEventually once the PrefixTree grid encoding has a little bit more metadata, it will be possible to further combine the grid & this strategy in such a way that many documents won't need to be checked against the serialized geometry.",
    "attachments": {
        "LUCENE-5408_GeometryStrategy.patch": "https://issues.apache.org/jira/secure/attachment/12626124/LUCENE-5408_GeometryStrategy.patch",
        "LUCENE-5408_SerializedDVStrategy.patch": "https://issues.apache.org/jira/secure/attachment/12628885/LUCENE-5408_SerializedDVStrategy.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-13886774",
            "author": "David Smiley",
            "content": "This is intermediate progress; it needs to be tested.  And I hope to possible share a Bits based DocIdSet with Michael McCandless in LUCENE-5418.  The sentiment in that issue about how to handle super-slow Filters is a problem here too.\n\nI had an epiphany last night that the current Spatial RPT grid and algorithm doesn't need to be modified to be able to differentiate the matching docs into confirmed & un-confirmed matches for common scenarios.  As such, to prevent mis-use of the expensive Filter returned from this GeometryStrategy, I might force it to be paired with RecursivePrefixTreeStrategy.  And then leave an expert method exposed to grab Bits or a Filter purely based on the Geometry DocValues check.  ElasticSearch and Solr wouldn't use that but someone coding directly to Lucene would have the ability to wire things together in ways more flexible than are possible in ES or Solr.  The most ideal way is to compute a fast pre-filter bitset separate from the slow post-filter, with user keyword queries and other filters in the middle.  But the slow post-filter to operate best needs a side-artifact bitset computed when the pre-filter bitset is generated.  I'll eventually be more clear in javadocs. ",
            "date": "2014-01-30T16:54:38+0000"
        },
        {
            "id": "comment-13900499",
            "author": "David Smiley",
            "content": "Technically this only requires LUCENE-4978 when the indexed data is a point, but you wouldn't have a need for this strategy if you were doing that. ",
            "date": "2014-02-13T16:51:59+0000"
        },
        {
            "id": "comment-13900865",
            "author": "David Smiley",
            "content": "Attached is a working patch with tests.  I plan to commit it in 2 days.\n\nI renamed it from GeometryStrategy to SerializedDVStrategy which is more meaningful.  If you call makeQuery you get an UnsupportedOperationException, and if you call makeFilter and then try to grab the iterator, you'll get an UnsupportedOperationException too.  The main way the functionality is exposed is via a makeShapeValueSource() that returns Shape instances from FunctionValues.objectVal(doc).  From this, I implemented a DistanceToShapeValueSource (from the center of the shape), and a ShapePredicateValueSource that's a boolean. \n\nExposing this via Solr will come in another issue.  That's not as trivial as the other strategies because this particular one needs to be used in a certain way in Solr \u2013 a PostFilter. ",
            "date": "2014-02-13T23:14:38+0000"
        },
        {
            "id": "comment-13902783",
            "author": "ASF subversion and git services",
            "content": "Commit 1568807 from David Smiley in branch 'dev/trunk'\n[ https://svn.apache.org/r1568807 ]\n\nLUCENE-5408: Spatial SerializedDVStrategy ",
            "date": "2014-02-16T18:58:43+0000"
        },
        {
            "id": "comment-13902805",
            "author": "ASF subversion and git services",
            "content": "Commit 1568817 from David Smiley in branch 'dev/trunk'\n[ https://svn.apache.org/r1568817 ]\n\nLUCENE-5408: fixed tests; some strategies require DocValues ",
            "date": "2014-02-16T20:05:14+0000"
        },
        {
            "id": "comment-13902806",
            "author": "ASF subversion and git services",
            "content": "Commit 1568818 from David Smiley in branch 'dev/branches/branch_4x'\n[ https://svn.apache.org/r1568818 ]\n\nLUCENE-5408: Spatial SerializedDVStrategy ",
            "date": "2014-02-16T20:06:05+0000"
        }
    ]
}