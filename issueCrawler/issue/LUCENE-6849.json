{
    "id": "LUCENE-6849",
    "title": "Add IndexWriter API to write segment(s) without refreshing them",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [],
        "labels": "",
        "fix_versions": [
            "5.4",
            "6.0"
        ],
        "priority": "Major",
        "status": "Closed",
        "type": "New Feature"
    },
    "description": "Today, the only way to have IndexWriter free up some heap is to invoke refresh or flush or close it, but these are all quite costly, and do much more than simply \"move bytes to disk\".\n\nI think we should add a simple API, e.g. \"move the biggest in-memory segment to disk\" to 1) give more granularity (there could be multiple in-memory segments), and 2) only move bytes to disk (not refresh, not fsync, etc.).\n\nThis way apps that want to be more careful on how heap is used can have more control.",
    "attachments": {
        "LUCENE-6849.patch": "https://issues.apache.org/jira/secure/attachment/12770779/LUCENE-6849.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14991490",
            "author": "Michael McCandless",
            "date": "2015-11-05T10:38:29+0000",
            "content": "Trivial patch, tests pass.\n\nI think the simplest approach here is to just make the existing flush\nmethod public?\n\nThis will write all in-memory segments to disk, but not fsync nor open\nnew (NRT) reader on them.\n\nWe can later explore finer granularity if we really need to flush only\nthe biggest segment or something. "
        },
        {
            "id": "comment-14991515",
            "author": "Shai Erera",
            "date": "2015-11-05T10:57:08+0000",
            "content": "LGTM. And +1 on making both flush public API. It's an expert API and I believe users who intend to call flush() can also understand the implications of calling flush(true, true). Later we can consider consolidating and enhance this with a flush(FlushOptions) method, where FlushOptions lets you specify whether you want to merge, applyDeletes, segment size flush threshold etc.\n\nA few comments:\n\n\n\tIf you make the second flush() public\n\t\n\t\tI think we should document in flush() when you should use the second one?\n\t\tWe should add a testFlushNoCommitButMergeAndApplyDeletes?\n\t\tAdd the second flush() variant to RandomIndexWriter?\n\t\n\t\n\tIn RandomIndexWriter.maybeFlushOrCommit, should we also sometimes randomly apply deletes and trigger merges?\n\n "
        },
        {
            "id": "comment-14991572",
            "author": "Robert Muir",
            "date": "2015-11-05T11:54:42+0000",
            "content": "I disagree. I don't think we should add anything but a no-arg flush() here.\n\nIf its going to be more engineered than that, then this is the wrong direction: lets just not expose it at all. "
        },
        {
            "id": "comment-14993574",
            "author": "Adrien Grand",
            "date": "2015-11-06T12:21:43+0000",
            "content": "+1 on the patch and agreed that we should only expose a no-argument flush method, it's actually nice that the patch decreased the visibility of flush(boolean, boolean). "
        },
        {
            "id": "comment-14998665",
            "author": "ASF subversion and git services",
            "date": "2015-11-10T14:35:59+0000",
            "content": "Commit 1713646 from Michael McCandless in branch 'dev/trunk'\n[ https://svn.apache.org/r1713646 ]\n\nLUCENE-6849: expose IndexWriter.flush to move in-memory segments to disk "
        },
        {
            "id": "comment-14998673",
            "author": "ASF subversion and git services",
            "date": "2015-11-10T14:40:22+0000",
            "content": "Commit 1713649 from Michael McCandless in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1713649 ]\n\nLUCENE-6849: expose IndexWriter.flush to move in-memory segments to disk "
        },
        {
            "id": "comment-15021739",
            "author": "Simon Willnauer",
            "date": "2015-11-23T08:32:28+0000",
            "content": "nice change - simple but powerful, seems like we got that part of IW reasonably clean  "
        }
    ]
}