{
    "id": "SOLR-9554",
    "title": "Multiple ManagedIndexSchemaFactory upgrades running simultaneously can clash, causing cores not to load",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [
            "6.3",
            "7.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "If a collection is created using a configset with a ManagedSchemaFactory but no managed-schema file, then multiple cores may try and convert the schema file simultaneously.",
    "attachments": {
        "SOLR-9554-just-fix.patch": "https://issues.apache.org/jira/secure/attachment/12831061/SOLR-9554-just-fix.patch",
        "SOLR-9554-test.patch": "https://issues.apache.org/jira/secure/attachment/12831162/SOLR-9554-test.patch",
        "SOLR-9554.patch": "https://issues.apache.org/jira/secure/attachment/12830476/SOLR-9554.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2016-09-24T19:18:17+0000",
            "author": "Alan Woodward",
            "content": "See https://jenkins.thetaphi.de/job/Lucene-Solr-master-Solaris/862/consoleFull for an example.  The '.system' collection isn't created properly, because one of the replicas crashes on startup due to this race.\n\nI guess the straightforward fix is to detect if 'schema.xml' isn't there any more, and retry reading 'managed-schema' instead. ",
            "id": "comment-15519494"
        },
        {
            "date": "2016-09-27T08:05:20+0000",
            "author": "Alan Woodward",
            "content": "Another failure caused by this: https://jenkins.thetaphi.de/job/Lucene-Solr-master-Solaris/869/consoleFull\n\nIn this case, the race is as follows:\n\n\tcore 1 finds that there's no managed-schema\n\tcore 2 finds that there's no managed-schema\n\tcore 1 loads schema.xml, upgrades to managed-schema, and moves schema.xml to schema.xml.bak\n\tcore 2 tries to load schema.xml and crashes with a NullPointerException\n\n\n\nI've tried writing a test case to hammer on this, but it refuses to fail - possibly it needs to be running on a slow enough machine?  In any case, I think we need some kind of distributed lock when doing the fallback-and-upgrade manoeuvre. ",
            "id": "comment-15525428"
        },
        {
            "date": "2016-09-27T08:56:35+0000",
            "author": "Mikhail Khludnev",
            "content": "Can you attach this test?  ",
            "id": "comment-15525534"
        },
        {
            "date": "2016-09-27T10:10:14+0000",
            "author": "Alan Woodward",
            "content": "Sure, here it is. ",
            "id": "comment-15525673"
        },
        {
            "date": "2016-09-28T08:06:13+0000",
            "author": "Mikhail Khludnev",
            "content": "when I tried to catch this race with debugger, I found that mock responds false by default, that bypasses condition in ManagedIndexSchemaFactory.zkUgradeToManagedSchema()\n\n  if (zkController.pathExists(nonManagedSchemaPath)) {\n\n\nhere I modified mock. but it still can't catch this race..  ",
            "id": "comment-15528801"
        },
        {
            "date": "2016-09-28T09:44:06+0000",
            "author": "Andrey Kudryavtsev",
            "content": "ManagedIndexSchemaFactory#create contains a pretty cool code in terms of multithreading execution. \n\nBut it seems like even if there would be a race between several threads execute this code, it won't lead to that NPE that was logged in Jenkins job. I mean - loadedResource won't be null in 169 line due to race. It is just my understanding and it easily could be wrong.  \n\nBut still - NPE is here in Jenkins.\n\nOne of possible options - there was an IOException in 146 line. That exception was lost, but as a result we could get loadedResource=null in 169 line. \n\nSo why don't we start diving into this issue with this small change - log possible exception in catch block. I think it should be logged in any case. ",
            "id": "comment-15529090"
        },
        {
            "date": "2016-09-28T14:41:00+0000",
            "author": "Mikhail Khludnev",
            "content": "I make test really really mad. It synchronizes race to reproduce it. Note: to reproduce the NPE failure you need to run it a few times -Dtests.iters=10, just because now shuffle(winner,looser) adds one more race. \nNow we can think how to fix it, and it's worth to do.\nBut might be more important question how to avoid such races in zoo once and for all or detect them automatically. Can we prohibit writes to Zookeeper at all?     ",
            "id": "comment-15529863"
        },
        {
            "date": "2016-09-28T20:48:01+0000",
            "author": "Mikhail Khludnev",
            "content": "Attaching a simplified test without that latch. Now it's just random sleep. I think it's crucial to provide a zkcliet per thread, Zookeper has stale reads without sync. Patch also contains a FIX but it's commented, at least we need to refactor ManagedIndexSchemaFactory.loadedResource - this is an unfortunate example of non-final-lity. It's interesting that ManagedIndexSchemaFactory.create(String, SolrConfig) already defend from the discussed race, it just missed one assignment.  ",
            "id": "comment-15530829"
        },
        {
            "date": "2016-09-29T08:32:08+0000",
            "author": "Alan Woodward",
            "content": "Aha, yes, I see the fix.  And I agree that this needs to be refactored, but maybe just commit the fix here for now and open another JIRA to clean the whole thing up? ",
            "id": "comment-15532163"
        },
        {
            "date": "2016-09-29T08:35:18+0000",
            "author": "Mikhail Khludnev",
            "content": "oh. Please go ahead. I'll tweak the test later. ",
            "id": "comment-15532168"
        },
        {
            "date": "2016-09-30T04:30:06+0000",
            "author": "Mikhail Khludnev",
            "content": "I'm going to commit SOLR-9554-just-fix.patch. It has no test, just assignment fix is there. It should fix existing tests.  ",
            "id": "comment-15534991"
        },
        {
            "date": "2016-09-30T05:03:27+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 64b0c91df16b09d430957092f71b4991c2a66db2 in lucene-solr's branch refs/heads/master from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=64b0c91 ]\n\nSOLR-9554: fix NullPointerException when cores move schema.xml to\nmanaged-schema concurrently. No new test added yet.  ",
            "id": "comment-15535045"
        },
        {
            "date": "2016-09-30T05:15:51+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1c614e1d4df4915dd19eb96f478a0379deecef69 in lucene-solr's branch refs/heads/branch_6x from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1c614e1 ]\n\nSOLR-9554: fix NullPointerException when cores move schema.xml to\nmanaged-schema concurrently. No new test is added yet.  ",
            "id": "comment-15535064"
        },
        {
            "date": "2016-09-30T20:14:53+0000",
            "author": "Mikhail Khludnev",
            "content": "SOLR-9554-test.patch makes test simple as possible. There is no refactoring for ManagedIndexSchemaFactory yet. TBC. \n\nThe question is: SuspendingZkClient reminds the best testing practices. Can it be generalized and used somewhere else?  ",
            "id": "comment-15536943"
        },
        {
            "date": "2016-10-02T11:13:01+0000",
            "author": "Mikhail Khludnev",
            "content": "Turns out refactoring ManagedIndexSchemaFactory is not so easy. I.ll just commit SOLR-9554-test.patch. Objections? ",
            "id": "comment-15540204"
        },
        {
            "date": "2016-10-02T18:29:13+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 67a9d3a44f5709f31172b58c0747981afd20f468 in lucene-solr's branch refs/heads/master from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=67a9d3a ]\n\nSOLR-9554: adding a test for concurrent schema upgrade in cloud.\n ",
            "id": "comment-15540769"
        },
        {
            "date": "2016-10-02T18:45:27+0000",
            "author": "ASF subversion and git services",
            "content": "Commit cc1841cbb73f1c5c54208549cb20cf8244fa5104 in lucene-solr's branch refs/heads/branch_6x from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cc1841c ]\n\nSOLR-9554: adding a test for concurrent schema upgrade in cloud.\n ",
            "id": "comment-15540796"
        },
        {
            "date": "2016-10-03T07:20:30+0000",
            "author": "ASF subversion and git services",
            "content": "Commit cc4c780227e999339e083cababff96912c4fbb53 in lucene-solr's branch refs/heads/master from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cc4c780 ]\n\nSOLR-9554: clear statics to fix the test failure ",
            "id": "comment-15541749"
        },
        {
            "date": "2016-10-03T07:25:16+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 81a859b962214732f142653c90164f08625bf213 in lucene-solr's branch refs/heads/branch_6x from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=81a859b ]\n\nSOLR-9554: clear statics to fix the test failure ",
            "id": "comment-15541760"
        },
        {
            "date": "2016-11-09T08:37:27+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Closing after 6.3.0 release. ",
            "id": "comment-15650231"
        }
    ]
}