{
    "id": "SOLR-1061",
    "title": "Improve RegexTransformer to create multiple columns from regex groups",
    "details": {
        "affect_versions": "None",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Improvement",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "example\n\n<field column=\"full_name\" regex=\"Mr(\\w*)\\b(\\w*)\" groupNames=\"firstName,secondName\"/>\n\n\n\nThis is more efficient in extracting multiple values from a single String. if some groups need to be omitted just leave it empty",
    "attachments": {
        "SOLR-1061.patch": "https://issues.apache.org/jira/secure/attachment/12402197/SOLR-1061.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Fergus McMenemie",
            "id": "comment-12680807",
            "date": "2009-03-11T08:56:02+0000",
            "content": "Yes, yes. Another usecase I ran into a lot was having lat/long within the same XML field, this would have been really useful.  I guess if the matcher fails the fields/colums firstName and secondName are undefined?  However although the above is neat and clean it can of course now be done as follows:-\n\n   <field column=\"firstName\"       regex=\"Mr(\\w*)\\b\\w*\" replaceWith=\"$1\"  sourceColName=\"full_name\"/>\n   <field column=\"secondName\" regex=\"Mr\\w*\\b(\\w*)\" replaceWith=\"$1\"  sourceColName=\"full_name\"/>\n\n\n\nAlso I would think the following will be a related common usecase; imagine a field which listed an indeterminate number of aliases or alternate names for a person. This is bad data design but it happens. We need to expose regex's global feature\n\n\n<firstName>josephine</firstname>\n<aliases>jo,joe,jos<aliases>\n\n\n\n\n   <field column=\"alias\" regex=\"([^,]+)\"  regex_options=\"global\" sourceColName=\"aliases\"/>\n\n\n\nwhich would populate the column alias with multiple values. The attribute regex_options allows other regex options such as case insensitivity to be added as well.\n "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12682023",
            "date": "2009-03-14T10:38:13+0000",
            "content": "fix . w/ no testcase "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12682024",
            "date": "2009-03-14T10:39:13+0000",
            "content": "fix w/o testcase "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12682218",
            "date": "2009-03-16T04:49:14+0000",
            "content": "there was a bug in the last patch "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12682572",
            "date": "2009-03-17T06:44:29+0000",
            "content": "with testcase "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12682588",
            "date": "2009-03-17T08:00:44+0000",
            "content": "Committed revision 755143.\n\nThanks Noble!\n\nFergus, can you open another issue for the other enhancements you mentioned? Also, I see only these flags in java.util.Pattern \n\n\tCASE_INSENSITIVE\n\tMULTILINE\n\tDOTALL\n\tUNICODE_CASE\n\tCANON_EQ\n\n\n\nWhat does global do exactly? "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775470",
            "date": "2009-11-10T15:50:35+0000",
            "content": "Bulk close Solr 1.4 issues "
        }
    ]
}