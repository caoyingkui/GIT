{
    "id": "SOLR-9396",
    "title": "[subquery] transformer doesn't automatically request needed fields, only other fields in fl can be used as input to subquery",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "spinning off of SOLR-9377...\n\nthe [subquery] transformer doesn't do anything to explicitly request the document fields it needs in order to construct the subquery it executes (ie every field foo to fill in $row.foo)).  Which can lead to unexpected errors when parsing/executing the subquery.\n\nThe workaround is to only use the [subquery] transformer in conjunction with an fl=* glob, or explicitly list all fields needed.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2016-08-09T01:01:25+0000",
            "author": "Hoss Man",
            "content": "Relevant comment from SOLR-9377...\n\nHere's an example of what this failure looks like...\n\n\n# start example\n$ bin/solr -e techproducts\n...\n\n# disable autocommit & lazy field loading\n$ curl --data-binary '{\"set-property\":{\"updateHandler.autoSoftCommit.maxTime\":\"-1\"},\"set-property\":{\"query.enableLazyFieldLoading\":false}}' -H 'Content-Type: application/json' 'http://localhost:8983/solr/techproducts/config'\n...\n\n# re-index w/o doing a commit\n$ bin/post -commit no -c techproducts example/exampledocs/*.xml\n...\n\n# do an RTG that involves:\n#  - a function in the fl (so RTG uses a realtime searcher)\n#  - a subquery in the fl that refers to field not otherwise included in the fl -- ie: price\n#\n# ...this will fail because the qubquery execution can't find a value for \"$row.price\" so\n#    the sub-request query parsing fails\n#\n$ curl 'http://localhost:8983/solr/techproducts/get?indent=true&id=SOLR1000&fl=id,product(popularity,3)&fl=xxx:%5Bsubquery%5D&xxx.q=%7B!field+f=price+v=$row.price%7D'\n{\n  \"error\":{\n    \"metadata\":[\n      \"error-class\",\"org.apache.solr.common.SolrException\",\n      \"root-error-class\",\"org.apache.solr.common.SolrException\"],\n    \"msg\":\"while invoking xxx:[subquery] on doc=SolrDocument{id=stored,indexed,tokenized,omitNorms,indexOptions=DOCS<id:SOLR1000>, _version_=1542133\",\n    \"code\":400}}\n\n\n\n\nhere's the same problem demonstrated with a regular search...\n\n\n# hack to force documentCache to not init properly (no straight forward way to disable via API)\n# NOTE: expected to cause errors in log\n$ curl --data-binary '{\"set-property\":{\"query.documentCache.initialSize\":\"-1\"}}' -H 'Content-Type: application/json' 'http://localhost:8983/solr/techproducts/config'\n\n# do a simple query that involves:\n#  - a subquery in the fl that refers to field not otherwise included in the fl (price)\n#\n# ...this will fail because the qubquery execution can't find a value for \"$row.price\" so\n#    the sub-request query parsing fails\n$ curl 'http://localhost:8983/solr/techproducts/select?indent=true&q=id:SOLR1000&fl=id&fl=xxx:%5Bsubquery%5D&xxx.q=%7B!field+f=price+v=$row.price%7D'\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<response>\n\n<lst name=\"error\">\n  <lst name=\"metadata\">\n    <str name=\"error-class\">org.apache.solr.common.SolrException</str>\n    <str name=\"root-error-class\">org.apache.solr.common.SolrException</str>\n  </lst>\n  <str name=\"msg\">while invoking xxx:[subquery] on doc=SolrDocument{id=stored,indexed,tokenized,omitNorms,indexOptions=DOCS&lt;id:SOLR1000&gt;}</str>\n  <int name=\"code\">400</int>\n</lst>\n</response>\n\n\n\n\n\n\nThe \"right\" way to fix this is to have SubQueryAugmenter.getExtraRequestFields() return the list of field names it expects to find in the docs being transformed, but unfortunately I can't think of an easy way to identify the list of all $row.* params used in the subquery.\n ",
            "id": "comment-15412760"
        },
        {
            "date": "2016-08-09T02:51:57+0000",
            "author": "ASF subversion and git services",
            "content": "Commit e08d656a15a51ef2e38ceb983e786cc37eed834f in lucene-solr's branch refs/heads/branch_6x from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=e08d656 ]\n\nSOLR-9377: Fix jdocs and test to match expected behavior, workaround SOLR-9396\n\n(cherry picked from commit 1164c17e0e1c81fae4aa1103506536f82f70cf3c) ",
            "id": "comment-15412846"
        },
        {
            "date": "2016-08-09T02:52:00+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1164c17e0e1c81fae4aa1103506536f82f70cf3c in lucene-solr's branch refs/heads/master from Chris Hostetter\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=1164c17 ]\n\nSOLR-9377: Fix jdocs and test to match expected behavior, workaround SOLR-9396 ",
            "id": "comment-15412848"
        }
    ]
}