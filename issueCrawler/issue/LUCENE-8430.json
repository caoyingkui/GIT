{
    "id": "LUCENE-8430",
    "title": "TopDocs.totalHits is not always the accurate hit count",
    "details": {
        "components": [],
        "status": "Resolved",
        "resolution": "Fixed",
        "fix_versions": [
            "master (8.0)"
        ],
        "affect_versions": "None",
        "labels": "",
        "priority": "Minor",
        "type": "Sub-task"
    },
    "description": "Sub task of LUCENE-8060. We should change TopDocs.totalHits so that users get a compilation error, and the new field or documentation should make it clear that this number is not always the accurate hit count, which is important if we want to enable index sorting / WAND / impacts -related optimizations by default.",
    "attachments": {
        "LUCENE-8430.patch": "https://issues.apache.org/jira/secure/attachment/12933172/LUCENE-8430.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-16558107",
            "author": "Adrien Grand",
            "content": "Here is a proposal which replaces TopDocs.totalHits with a new TotalHits object that is implemented like this:\n\n\n/**\n * Description of the total number of hits of a query. The total hit count\n * can't generally be computed accurately without visiting all matches, which\n * is costly for queries that match lots of documents. Given that it is often\n * enough to have a lower bounds of the number of hits, such as\n * \"there are more than 1000 hits\", Lucene has options to stop counting as soon\n * as a threshold has been reached in order to improve query times.\n */\npublic final class TotalHits {\n\n  /** How the {@link TotalHits#value} should be interpreted. */\n  public enum Relation {\n    /**\n     * The total hit count is equal to {@link TotalHits#value}.\n     */\n    EQUAL_TO,\n    /**\n     * The total hit count is greater than or equal to {@link TotalHits#value}.\n     */\n    GREATER_THAN_OR_EQUAL_TO\n  }\n\n  /**\n   * The value of the total hit count. Must be interpreted in the context of\n   * {@link #relation}.\n   */\n  public final long value;\n\n  /**\n   * Whether {@link #value} is the exact hit count, in which case\n   * {@link #relation} is equal to {@link Relation#EQUAL_TO}, or a lower bound\n   * of the total hit count, in which case {@link #relation} is equal to\n   * {@link Relation#GREATER_THAN_OR_EQUAL_TO}.\n   */\n  public final Relation relation;\n\n  /** Sole constructor. */\n  public TotalHits(long value, Relation relation) {\n    if (value < 0) {\n      throw new IllegalArgumentException(\"value must be >= 0, got \" + value);\n    }\n    this.value = value;\n    this.relation = Objects.requireNonNull(relation);\n  }\n\n  @Override\n  public String toString() {\n    return value + (relation == Relation.EQUAL_TO ? \"\" : \"+\") + \" hits\";\n  }\n\n}\n\n\n\nAlso TopScoreDocCollector and TopFieldCollector have been changed to disable the extrapolation of the hit count based on the number of hits that were collected exactly, and instead return the number of collected hits as a hit count, and GREATER_THAN_OR_EQUAL_TO as a relation. TopDocs#merge makes sure to return GREATER_THAN_OR_EQUAL_TO as a relation if any of the merged TopDocs instance has a hit count that is a lower bound too. All other changes are just about fixing compilation.\n\nThis way, whether the hit count is accurate or not is explicit, and users won't fall into the trap of assuming a hit count is accurate when it is not when they upgrade to Lucene 8. ",
            "date": "2018-07-26T09:42:41+0000"
        }
    ]
}