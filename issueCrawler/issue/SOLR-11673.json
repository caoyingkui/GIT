{
    "id": "SOLR-11673",
    "title": "ReplicationHandler race-condition between deleting slave index and commit in master",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "7.4",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "failure in master described in SOLR-6228.\n\n\n  2> NOTE: reproduce with: ant test  -Dtestcase=TestReplicationHandler -Dtests.method=doTestIndexAndConfigReplication -Dtests.seed=C541E9C9CC845BA5 -Dtests.slow=true -Dtests.locale=es-BO -Dtests.timezone=Africa/Addis_Ababa -Dtests.asserts=true -Dtests.file.encoding=US-ASCII\n[10:13:23.442] ERROR   36.6s | TestReplicationHandler.doTestIndexAndConfigReplication <<<\n   > Throwable #1: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0\n   >    at __randomizedtesting.SeedInfo.seed([C541E9C9CC845BA5:D109B29CEF83E6BB]:0)\n   >    at java.util.ArrayList.rangeCheck(ArrayList.java:653)\n   >    at java.util.ArrayList.get(ArrayList.java:429)\n   >    at org.apache.solr.handler.TestReplicationHandler.doTestIndexAndConfigReplication(TestReplicationHandler.java:561)\n\n\nEasily reproducible in master by beast.",
    "attachments": {
        "SOLR-11673-skipCommitOnMasterVersionZero.patch": "https://issues.apache.org/jira/secure/attachment/12899309/SOLR-11673-skipCommitOnMasterVersionZero.patch",
        "SOLR-11673.patch": "https://issues.apache.org/jira/secure/attachment/12917114/SOLR-11673.patch",
        "replication spin now.txt": "https://issues.apache.org/jira/secure/attachment/12917833/replication%20spin%20now.txt",
        "SOLR-11673-test-fix.patch": "https://issues.apache.org/jira/secure/attachment/12899307/SOLR-11673-test-fix.patch",
        "SOLR-11673-reproducer.patch": "https://issues.apache.org/jira/secure/attachment/12899577/SOLR-11673-reproducer.patch",
        "replication spin was.txt": "https://issues.apache.org/jira/secure/attachment/12917827/replication%20spin%20was.txt",
        "doTestIndexAndConfigReplication-consoleText.txt": "https://issues.apache.org/jira/secure/attachment/12900370/doTestIndexAndConfigReplication-consoleText.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-11-26T18:02:46+0000",
            "content": "it looks like this \n\n  2> 5913 INFO  (indexFetcher-47-thread-1) [    x:collection1] o.a.s.h.IndexFetcher Master's generation: 1\n  2> 5913 INFO  (indexFetcher-47-thread-1) [    x:collection1] o.a.s.h.IndexFetcher Master's version: 0\n  2> 5913 INFO  (indexFetcher-47-thread-1) [    x:collection1] o.a.s.h.IndexFetcher Slave's generation: 1\n  2> 5913 INFO  (indexFetcher-47-thread-1) [    x:collection1] o.a.s.h.IndexFetcher Slave's version: 0\n  2> 5913 INFO  (indexFetcher-47-thread-1) [    x:collection1] o.a.s.h.IndexFetcher New index in Master. Deleting mine...\n\n\nSlave has launched. \n\n  2> 5915 INFO  (qtp1591236769-56) [    x:collection1] o.a.s.u.p.LogUpdateProcessorFactory [collection1]  webapp=/solr path=/update params={wt=javabin&version=2}{add=[2000]} 0 2\n  2> 5916 INFO  (qtp1591236769-56) [    x:collection1] o.a.s.u.DirectUpdateHandler2 start commit{,optimize=false,openSearcher=true,waitSearcher=true,expungeDeletes=false,softCommit=false,\n\n\ncommit in master\nAnd slave miss it, since it reset to the same timestamp as master's commit\n\n  2> 6903 INFO  (indexFetcher-47-thread-1) [    x:collection1] o.a.s.h.IndexFetcher Master's generation: 2\n  2> 6904 INFO  (indexFetcher-47-thread-1) [    x:collection1] o.a.s.h.IndexFetcher Master's version: 1507446809140\n  2> 6904 INFO  (indexFetcher-47-thread-1) [    x:collection1] o.a.s.h.IndexFetcher Slave's generation: 2\n  2> 6904 INFO  (indexFetcher-47-thread-1) [    x:collection1] o.a.s.h.IndexFetcher Slave's version: 1507446809140\n  2> 6904 INFO  (indexFetcher-47-thread-1) [    x:collection1] o.a.s.h.IndexFetcher Slave in sync with master.\n  2> 6962 INFO  (qtp922057044-80) [    x:collection1] o.a.s.c.S.Request [collection1]  webapp=/solr path=/select params={q=*:*&sort=id+desc&wt=javabin&version=2} hits=0 status=0 QTime=0\n  2> 6964 INFO  (TEST-TestReplicationHandler.doTestIndexAndConfigReplication-seed#[C541E9C9CC845BA5]) [    ] o.a.s.h.TestReplicationHandler Waiting for 1 docs\n\n \n.. ",
            "author": "Mikhail Khludnev",
            "id": "comment-16266111"
        },
        {
            "date": "2017-11-26T18:05:21+0000",
            "content": "SOLR-11673-test-fix.patch the simple currentTimeMillis() spin in test makes the beast happy.\nBut the question is, can't we reset slave index more reliable?  ",
            "author": "Mikhail Khludnev",
            "id": "comment-16266112"
        },
        {
            "date": "2017-11-26T19:32:03+0000",
            "content": "SOLR-11673-skipCommitOnMasterVersionZero.patch\nfixes TestReplicationHandler.doTestIndexAndConfigReplication by setting \nskipCommitOnMasterVersionZero=true. And I suppose it always makes sense, see here, commit() in alternative branch is a clear race with master commit(). WDYT?\nbeast command is:\nant beast -Dbeast.iters=10  -Dtestcase=TestReplicationHandler -Dtests.method=doTestIndexAndConfigReplication  -Dtests.slow=true  \n ",
            "author": "Mikhail Khludnev",
            "id": "comment-16266149"
        },
        {
            "date": "2017-11-28T09:14:48+0000",
            "content": "SOLR-11673-reproducer.patch adding timeout to IndexFetcher just to reproduce the issue. For my i5 laptop it fails roughly about 2 of 100 iters.   ",
            "author": "Mikhail Khludnev",
            "id": "comment-16268425"
        },
        {
            "date": "2017-12-03T11:41:05+0000",
            "content": "doTestIndexAndConfigReplication-consoleText.txt CI failure ",
            "author": "Mikhail Khludnev",
            "id": "comment-16275887"
        },
        {
            "date": "2017-12-08T18:23:23+0000",
            "content": "I think this is the same issue described in SOLR-10751, although I thought this was fixed by SOLR-11293. Looks like it's not? ",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-16283979"
        },
        {
            "date": "2017-12-08T21:33:42+0000",
            "content": "quoting https://issues.apache.org/jira/browse/SOLR-11293?focusedCommentId=16182379&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16182379\nIn case of masterVersion = zero, tlog replica won't do commit, just open new searcher.\nHere is what the parameter skipCommitOnMasterVersionZero was introduced for. \nBut the thing is that it always makes sense (all tests are passed). The points are:\n\n\tthere is a race condition between initial slave commit and the first meaningful master commit, the later might just be ignored.\n\tI don't see a reason behind that slave commit at all. Could it happen that it was necessary some time ago and now it just breaks the test(s) rarely?\n\n\n\nThanks for responding, Tom\u00e1s Fern\u00e1ndez L\u00f6bbe ",
            "author": "Mikhail Khludnev",
            "id": "comment-16284256"
        },
        {
            "date": "2017-12-08T21:43:04+0000",
            "content": "I don't see a reason behind that slave commit at all. Could it happen that it was necessary some time ago and now it just breaks the test(s) rarely?\nMaybe I'm missing something, but doesn't the deleteAll requires the commit? ",
            "author": "Tom\u00e1s Fern\u00e1ndez L\u00f6bbe",
            "id": "comment-16284271"
        },
        {
            "date": "2017-12-08T21:52:41+0000",
            "content": "I don't know, but I see that skipCommitOnMasterVersionZero bypasses it successfully. Perhaps just by updating commit point, whatever it means. ",
            "author": "Mikhail Khludnev",
            "id": "comment-16284290"
        },
        {
            "date": "2017-12-09T14:53:09+0000",
            "content": "Hi, so the fix in SOLR-11293 solved a problem in ReplicationHandler when it gets used by tlog replicas ( so skipCommitOnMasterVersionZero==true only in case of tlog replicas ). I did not confident enough to always enable that flag to true in all cases. ",
            "author": "Cao Manh Dat",
            "id": "comment-16284765"
        },
        {
            "date": "2017-12-09T20:29:32+0000",
            "content": "https://jenkins.thetaphi.de/job/Lucene-Solr-7.2-Linux/37/testReport/junit/org.apache.solr.handler/TestReplicationHandler/doTestIndexAndConfigReplication/\n\norg.apache.solr.handler.TestReplicationHandler.doTestIndexAndConfigReplication\n\nFailing for the past 1 build (Since Unstable#37 )\nTook 31 sec.\nError Message\n\nIndex: 0, Size: 0\nStacktrace\n\njava.lang.IndexOutOfBoundsException: Index: 0, Size: 0\n\tat __randomizedtesting.SeedInfo.seed([5416020D95B2758D:405E5958B6B5C893]:0)\n\tat java.util.ArrayList.rangeCheck(ArrayList.java:653)\n\tat java.util.ArrayList.get(ArrayList.java:429)\n\tat org.apache.solr.handler.TestReplicationHandler.doTestIndexAndConfigReplication(TestReplicationHandler.java:561\n\n ",
            "author": "Mikhail Khludnev",
            "id": "comment-16284982"
        },
        {
            "date": "2017-12-12T06:32:23+0000",
            "content": "Build: https://jenkins.thetaphi.de/job/Lucene-Solr-7.x-Linux/977/\nJava: 64bit/jdk-10-ea+32 -XX:-UseCompressedOops -XX:+UseSerialGC\n\n1 tests failed.\nFAILED:  org.apache.solr.handler.TestReplicationHandler.doTestIndexAndConfigReplication\n\nError Message:\nIndex 0 out-of-bounds for length 0\n\nStack Trace:\njava.lang.IndexOutOfBoundsException: Index 0 out-of-bounds for length 0\n        at __randomizedtesting.SeedInfo.seed([5212D7D20AA5CB57:465A8C8729A27649]:0)\n        at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n        at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n        at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)\n        at java.base/java.util.Objects.checkIndex(Objects.java:372)\n        at java.base/java.util.ArrayList.get(ArrayList.java:440)\n        at org.apache.solr.handler.TestReplicationHandler.doTestIndexAndConfigReplication(TestReplicationHandler.java:561) ",
            "author": "Mikhail Khludnev",
            "id": "comment-16287189"
        },
        {
            "date": "2017-12-15T19:54:41+0000",
            "content": "I don't see any objections. What about pushing skipCommitOnMasterVersionZero=true by default? Which branch? Or we need more testing?   ",
            "author": "Mikhail Khludnev",
            "id": "comment-16293106"
        },
        {
            "date": "2018-02-23T12:21:51+0000",
            "content": "I can push it in, if anybody suggest to move forward.\u00a0 ",
            "author": "Mikhail Khludnev",
            "id": "comment-16374283"
        },
        {
            "date": "2018-03-11T08:00:34+0000",
            "content": "Commit 8f1350af20c682df7b7fb9e3af762e03b944fdb9 in lucene-solr's branch refs/heads/master from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8f1350a ]\n\nSOLR-11673: specifying exact ticket in @BadApple ",
            "author": "ASF subversion and git services",
            "id": "comment-16394434"
        },
        {
            "date": "2018-03-11T08:02:08+0000",
            "content": "Commit 3ecefe1d0e4d0cbeb6e4393fa2339210f8eb612d in lucene-solr's branch refs/heads/branch_7x from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=3ecefe1 ]\n\nSOLR-11673: specifying exact ticket in @BadApple ",
            "author": "ASF subversion and git services",
            "id": "comment-16394435"
        },
        {
            "date": "2018-03-31T11:21:17+0000",
            "content": "Getting back to it. It's interesting, injecting 1 sec delay in IndexFetcher doesn't reproduce the failure. So far only small delays around 10ms let test fail.   ",
            "author": "Mikhail Khludnev",
            "id": "comment-16421282"
        },
        {
            "date": "2018-04-01T13:38:15+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 1 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   3m  3s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   2m 24s \n  the patch passed  \n\n\n +1 \n  javac  \n   2m 24s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   2m 24s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   2m 24s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   2m 24s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n  91m 27s \n  core in the patch failed.  \n\n\n  \n   \n 101m  5s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.cloud.autoscaling.sim.TestLargeCluster \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-11673 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12917114/SOLR-11673.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene2-us-west.apache.org 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / b4a83ff \n\n\n ant \n version: Apache Ant(TM) version 1.9.6 compiled on July 8 2015 \n\n\n Default Java \n 1.8.0_152 \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/32/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/32/testReport/ \n\n\n modules \n C: solr solr/core U: solr \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/32/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16421657"
        },
        {
            "date": "2018-04-01T13:48:14+0000",
            "content": "Commit 7a920cb0f64ee3de058a980e7564685cdc311c06 in lucene-solr's branch refs/heads/master from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7a920cb ]\n\nSOLR-11673: Slave doesn't commit empty index if new index appears on master by deafult. ",
            "author": "ASF subversion and git services",
            "id": "comment-16421659"
        },
        {
            "date": "2018-04-01T14:10:19+0000",
            "content": "Commit 8d69b7bf3eed38ed60fa1ffe2e7bc92b78aea526 in lucene-solr's branch refs/heads/branch_7x from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8d69b7b ]\n\nSOLR-11673: Slave doesn't commit empty index if new index appears on master by deafult. ",
            "author": "ASF subversion and git services",
            "id": "comment-16421668"
        },
        {
            "date": "2018-04-06T07:31:29+0000",
            "content": "the matter of fact, after startup slave constantly spinning in replication spin was.txt (it's pre SOLR-11673 spin), the spin after SOLR-11673 is almost the same replication spin now.txt, but slave doesn't increase the version. It spins until the first master commit and isn't caused by SOLR-11673.  ",
            "author": "Mikhail Khludnev",
            "id": "comment-16428062"
        }
    ]
}