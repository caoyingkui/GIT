{
    "id": "LUCENE-6774",
    "title": "Remove solr hack in MorfologikFilter",
    "details": {
        "resolution": "Fixed",
        "affect_versions": "None",
        "components": [
            "modules/analysis"
        ],
        "labels": "",
        "fix_versions": [
            "5.3.1",
            "6.0"
        ],
        "priority": "Blocker",
        "status": "Resolved",
        "type": "Bug"
    },
    "description": "If solr wants to set the contextClassLoader because its classloading is fucked up, then it needs to do this hack itself: it should not be in lucene code.\n\nThe current mess prevents use of this analyzer in other environments",
    "attachments": {
        "LUCENE-6774.patch": "https://issues.apache.org/jira/secure/attachment/12753782/LUCENE-6774.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "id": "comment-14727438",
            "author": "Robert Muir",
            "date": "2015-09-02T14:47:04+0000",
            "content": "patch. "
        },
        {
            "id": "comment-14727452",
            "author": "Uwe Schindler",
            "date": "2015-09-02T14:52:49+0000",
            "content": "I think the main problem is Morphologik that reads the resources from the context classloader - which is just wrong.\n\nI'd suggest to not use the static Dictionary#getForLanguage and instead load the FSA with the methods taking InputStream or URL from resources. We just need to duplicate the ISO code -> Resource file name code and then pass the resource URL from the \"right\" classloader to the load() methods.\n\nI can have a look. "
        },
        {
            "id": "comment-14727461",
            "author": "Robert Muir",
            "date": "2015-09-02T14:57:38+0000",
            "content": "Sorry, that is incorrect Uwe. Morfologik \"tries\" that loader, but it also does things correctly too.\n\nLook right here:\n\nhttps://github.com/morfologik/morfologik-stemming/blob/master/morfologik-fsa/src/main/java/morfologik/util/ResourceUtils.java#L40-L50 "
        },
        {
            "id": "comment-14727462",
            "author": "Robert Muir",
            "date": "2015-09-02T14:58:17+0000",
            "content": "I am committing this because such hacks should not be in lucene code. Please open a separate issue to deal with the solr hack better "
        },
        {
            "id": "comment-14727467",
            "author": "ASF subversion and git services",
            "date": "2015-09-02T15:00:54+0000",
            "content": "Commit 1700837 from Robert Muir in branch 'dev/trunk'\n[ https://svn.apache.org/r1700837 ]\n\nLUCENE-6774: Remove solr hack in MorfologikFilter "
        },
        {
            "id": "comment-14727478",
            "author": "ASF subversion and git services",
            "date": "2015-09-02T15:12:12+0000",
            "content": "Commit 1700839 from Robert Muir in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1700839 ]\n\nLUCENE-6774: Remove solr hack in MorfologikFilter "
        },
        {
            "id": "comment-14727488",
            "author": "Uwe Schindler",
            "date": "2015-09-02T15:21:05+0000",
            "content": "I linked the issue that causes the havoc here. I don't think this is an issue anymore, because morphologik tries:\n\n\n\tcontext classloader\n\town classloader\n\tsystem classloader\n\n\n\n(in this order). I am not sure how this was implemented in the version used in SOLR-4007. Maybe Dawid Weiss knows more. I have he feeling that this is no issue anymore. We should add a test for Solr. "
        },
        {
            "id": "comment-14727490",
            "author": "Yonik Seeley",
            "date": "2015-09-02T15:22:12+0000",
            "content": "Hmmm, you essentially reverted SOLR-4007\n\nIs that code no longer necessary, or will the error that SOLR-4007 resolved now happen again?\nI know SOLR-4007 didn't add a test (and maybe it's hard to do), but that's no reason to knowingly break Solr. "
        },
        {
            "id": "comment-14727498",
            "author": "Robert Muir",
            "date": "2015-09-02T15:25:35+0000",
            "content": "this horrible hack prevents the analyzer from being used in other environments. sorry, solr can set contextclassloader in its own code. Doing it here is no reason to break other non-solr apps\n\nBelieve it or not, there are people that use lucene without solr. "
        },
        {
            "id": "comment-14727500",
            "author": "Yonik Seeley",
            "date": "2015-09-02T15:27:41+0000",
            "content": "If it did break Solr, then we should have come up with a solution that works for everyone.\nRemoving that code without even knowing if it broke solr is essentially giving us all the middle finger. "
        },
        {
            "id": "comment-14727503",
            "author": "Uwe Schindler",
            "date": "2015-09-02T15:29:36+0000",
            "content": "Yonik Seeley: I'd suggest to write a test, which is not so easy for analysis extras. From looking at the code I see no reason why Morphologik's code may not find the files. I think this might have been fixed by Dawid to no longer solely depend on context classloader. "
        },
        {
            "id": "comment-14727509",
            "author": "Robert Muir",
            "date": "2015-09-02T15:31:10+0000",
            "content": "I don't care if i broke solr. solr can fix itself here instead of breaking everyone else. its just that simple. lucene is a library.\n\nif you think i'm giving solr the middle finger, then well, fine, it deserves it:\n\n....................../\u00b4\u00af/) \n....................,/\u00af../ \n.................../..../ \n............./\u00b4\u00af/'...'/\u00b4\u00af\u00af`\u00b7\u00b8 \n........../'/.../..../......./\u00a8\u00af\\ \n........('(...\u00b4...\u00b4.... \u00af~/'...') \n.........\\.................'...../ \n..........''...\\.......... _.\u00b7\u00b4 \n............\\..............( \n..............\\.............\\...\n\n "
        },
        {
            "id": "comment-14727515",
            "author": "Uwe Schindler",
            "date": "2015-09-02T15:35:52+0000",
            "content": "Setting a context class loader inside \"library\" code is a big problem and should never ever done. It is good that Robert found this problem. The code has to be removed, sorry.\n\nPlease let us fix the code by:\n\n\tfirst adding a test\n\task Dawid Weiss if there were changes he did after this issue in Morphlogik's resource loading\n\n\n\nIf both of this does not work would suggest to:\n\n\tlet Solr set the context ClassLoader: SOLR-3716\n\tjust load the resource files ourselves and pass them to Dictionary#load(). This is mainly because I am not happy that Morfologik uses context ClassLoader at all. So I would like to fix this by loading the file ourselves from Class's classpath (or in the factory using ResourceLoader as provided by Lucene/Solr).\n\n "
        },
        {
            "id": "comment-14727533",
            "author": "Yonik Seeley",
            "date": "2015-09-02T15:49:29+0000",
            "content": "Setting as a blocker until someone can determine if Solr is now broken or not.  Hopefully Uwe is right and the code is no longer needed. "
        },
        {
            "id": "comment-14727594",
            "author": "Uwe Schindler",
            "date": "2015-09-02T16:37:36+0000",
            "content": "Hi,\nI checked the code after a beer and now I know what the issue is. In fact the ResourceUtils code did not change since Solr 4.0 where SOLR-4007 was reported on. This was using version 1.5.5 of Morphologik.\n\nThe problem is very simple:\n\n\tMorphologic tries context class loader first, obviously this fails for Solr (SOLR-3716)\n\tAs a second try it does \"the right thing\" but obviously wrong: It uses ResourceUtil.class.getResourceAsStream(), and this fails because when loading the resource it uses an absolute path inclusive package, but without a slash. This of course fails, because the file is not found. This causes Solr fail.\n\tFinally it tries the system classloader. Of course the resource isn't there, because the system classloader has no morphologic jars\n\n\n\nThe issue here is the stupid java difference: If you use a Classloader, you don't need leading slash. If you use Class#getResource() it resolves against current package, so you need a leading slash, if you want it with an absolute path.\n\nIn single classloader applications this is no issue, because the context classloader always works, but not in Solr. "
        },
        {
            "id": "comment-14727600",
            "author": "Uwe Schindler",
            "date": "2015-09-02T16:43:21+0000",
            "content": "My proposal:\n\n\twe should load the resource using local path (it is very simple, its just the language name)\n\tDawid Weiss should maybe fix this in morphologik, the code is still broken. Maybe he should remove the whole class (he has a nocommit there)\n\n\n\nI'll supply a patch for a solution that always works not dealing with context classloader. "
        },
        {
            "id": "comment-14727666",
            "author": "Uwe Schindler",
            "date": "2015-09-02T17:22:24+0000",
            "content": "Patch. This also removes the horrible cache and uses the only existing dictionary (\"pl\") statically.\n\nWe should maybe add some additional code to the factory to also allow loading from plain files. But that's another issue. "
        },
        {
            "id": "comment-14727669",
            "author": "Dawid Weiss",
            "date": "2015-09-02T17:24:29+0000",
            "content": "I will fix this in Morfologik so that dictionaries are not looked up via class resource search mechanism. The reason context class loader was used was not just Solr \u2013 it was also a workaround for certain web servlet containers (as far as I can remember).\n\nI am working on a proper fix in Morfologik, which I'll then apply to Lucene/ Solr. "
        },
        {
            "id": "comment-14727672",
            "author": "Uwe Schindler",
            "date": "2015-09-02T17:25:58+0000",
            "content": "I changed the static constant with the default dict to be consistent. "
        },
        {
            "id": "comment-14727674",
            "author": "Dawid Weiss",
            "date": "2015-09-02T17:26:51+0000",
            "content": "Thanks Uwe, yep, it looks good to me as a temporary workaround. "
        },
        {
            "id": "comment-14727676",
            "author": "Uwe Schindler",
            "date": "2015-09-02T17:27:23+0000",
            "content": "Dawid: I think the quickest fix would be to replace the second try to add a leading slash in ResourceUtils. For now, we prefer to have the dictionary loaded statically. "
        },
        {
            "id": "comment-14727681",
            "author": "Dawid Weiss",
            "date": "2015-09-02T17:30:16+0000",
            "content": "I actually plan to remove all that logic from ResourceUtils... it should be up to the caller to figure out how to locate dictionary resources \u2013 that's where the knowledge of how to do it should be. "
        },
        {
            "id": "comment-14727682",
            "author": "Uwe Schindler",
            "date": "2015-09-02T17:32:21+0000",
            "content": "Maybe add a method with a classloader. "
        },
        {
            "id": "comment-14727699",
            "author": "Dawid Weiss",
            "date": "2015-09-02T17:38:27+0000",
            "content": "I think an URI would be most flexible. "
        },
        {
            "id": "comment-14727730",
            "author": "Uwe Schindler",
            "date": "2015-09-02T17:54:00+0000",
            "content": "OK or URI. I think the current Lucene code is not really a \"workaround\" we can keep it as is. It does not hack anything it just uses the official APIs. The only thing thats a hack is the hardcoded package paths. Maybe add those as constants to Morfologik. "
        },
        {
            "id": "comment-14727737",
            "author": "Uwe Schindler",
            "date": "2015-09-02T17:58:16+0000",
            "content": "New patch. There was a copy'n'paste problem with error message in last one. "
        },
        {
            "id": "comment-14727738",
            "author": "Dawid Weiss",
            "date": "2015-09-02T18:00:09+0000",
            "content": "You see Morfologik does ship with the Polish dictionary, but it's merely a simple wrapper around a static inflection dictionary. You could build these yourself for an arbitrary language and reuse all of the code to just load and scan it \u2013 this is what this project does, for example:\n\nhttps://languagetool.org/\n\nThat's why I think it'd make more sense to remove all of these resource-loading facilities and simply require an URI to the data itself. \n\nYour solution is great, of course! "
        },
        {
            "id": "comment-14727741",
            "author": "Uwe Schindler",
            "date": "2015-09-02T18:01:31+0000",
            "content": "URI -> URL (like returned by Class#getResource()). URI does not supply InputStreams. "
        },
        {
            "id": "comment-14727745",
            "author": "Uwe Schindler",
            "date": "2015-09-02T18:04:29+0000",
            "content": "Personally, I would also like to change the factory class to take the language code (for backwards compatibility) and otherwise use dict and meta file as separate config params. The default Lucene ResourceLoader interface would then convert them to a URL/InputStream, so it works in Solr from conf/ directory, too. "
        },
        {
            "id": "comment-14727754",
            "author": "Dawid Weiss",
            "date": "2015-09-02T18:13:08+0000",
            "content": "What you should be using is this explicit constructor:\n\nhttps://github.com/morfologik/morfologik-stemming/blob/master/morfologik-stemming/src/main/java/morfologik/stemming/Dictionary.java#L64\n\nFSA can be read from an InputStream:\n\nhttps://github.com/morfologik/morfologik-stemming/blob/master/morfologik-fsa/src/main/java/morfologik/fsa/FSA.java#L256\n\nAnd DictionaryMetadata can be constructed programmatically or otherwise. Here is the method that does the loading from two streams (FSA and properties):\n\nhttps://github.com/morfologik/morfologik-stemming/blob/master/morfologik-stemming/src/main/java/morfologik/stemming/Dictionary.java#L106-L156\n "
        },
        {
            "id": "comment-14727875",
            "author": "Uwe Schindler",
            "date": "2015-09-02T19:15:01+0000",
            "content": "OK thanks. I will open separate issue about the factory. "
        },
        {
            "id": "comment-14728016",
            "author": "ASF subversion and git services",
            "date": "2015-09-02T20:53:41+0000",
            "content": "Commit 1700903 from Uwe Schindler in branch 'dev/trunk'\n[ https://svn.apache.org/r1700903 ]\n\nLUCENE-6774: Remove classloader hack in MorfologikFilter #2 "
        },
        {
            "id": "comment-14728018",
            "author": "ASF subversion and git services",
            "date": "2015-09-02T20:55:30+0000",
            "content": "Commit 1700904 from Uwe Schindler in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1700904 ]\n\nMerged revision(s) 1700903 from lucene/dev/trunk:\nLUCENE-6774: Remove classloader hack in MorfologikFilter #2 "
        },
        {
            "id": "comment-14728019",
            "author": "Uwe Schindler",
            "date": "2015-09-02T20:57:00+0000",
            "content": "OK. I will open a new issue to allow loading arbitrary dicts with morfologik with the factory. The current factory only allows for a language name, which must be packaged in a JAR file in correct package. "
        },
        {
            "id": "comment-14734882",
            "author": "Uwe Schindler",
            "date": "2015-09-08T14:29:45+0000",
            "content": "Reopen for backport "
        },
        {
            "id": "comment-14734908",
            "author": "ASF subversion and git services",
            "date": "2015-09-08T14:39:34+0000",
            "content": "Commit 1701811 from Uwe Schindler in branch 'dev/branches/lucene_solr_5_3'\n[ https://svn.apache.org/r1701811 ]\n\nBackport:\nLUCENE-6774: Remove classloader hack in MorfologikFilter "
        },
        {
            "id": "comment-14734909",
            "author": "Uwe Schindler",
            "date": "2015-09-08T14:39:45+0000",
            "content": "OK, I backported. "
        }
    ]
}