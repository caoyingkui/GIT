{
    "id": "LUCENE-4459",
    "title": "TestWeakIdentityMap.testConcurrentHashMap fails periodically in jenkins",
    "details": {
        "components": [],
        "fix_versions": [
            "4.1",
            "6.0"
        ],
        "affect_versions": "3.6.1,                                            4.0-BETA",
        "priority": "Major",
        "labels": "",
        "type": "Bug",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "There is either a bug, a test bug, or a jvm bug.\n\nI dont care which one it is, but lets fix the intermittent fail or disable the test.",
    "attachments": {
        "LUCENE-4459.patch": "https://issues.apache.org/jira/secure/attachment/12547826/LUCENE-4459.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2012-10-04T16:04:17+0000",
            "content": "+1\n\nThis test has also tripped on both Uwe's build box\n(http://markmail.org/thread/yrg3rnorefq5jqq6) and Simon's\n(http://markmail.org/thread/qcjegwszimqrgs3y).  It also fails\nquite easily for me when running Zing (free for open-source\ndev...). ",
            "author": "Michael McCandless",
            "id": "comment-13469470"
        },
        {
            "date": "2012-10-04T16:06:41+0000",
            "content": "Here's the exc when it fails:\n\n[junit4:junit4] Suite: org.apache.lucene.util.TestWeakIdentityMap\n[junit4:junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestWeakIdentityMap -Dtests.method=testConcurrentHashMap -Dtests.seed=3BF33FCBB5027789 -Dtests.slow=true -Dtests.locale=es_UY -Dtests.timezone=Europe/Volgograd -Dtests.file.encoding=ISO-8859-1\n[junit4:junit4] FAILURE 1.26s J0 | TestWeakIdentityMap.testConcurrentHashMap <<<\n[junit4:junit4]    > Throwable #1: java.lang.AssertionError: iteratorSize(0)>=newSize(1)\n[junit4:junit4]    > \tat __randomizedtesting.SeedInfo.seed([3BF33FCBB5027789:BA829794CBA28EFB]:0)\n[junit4:junit4]    > \tat org.junit.Assert.fail(Assert.java:93)\n[junit4:junit4]    > \tat org.junit.Assert.assertTrue(Assert.java:43)\n[junit4:junit4]    > \tat org.apache.lucene.util.TestWeakIdentityMap.testConcurrentHashMap(TestWeakIdentityMap.java:234)\n[junit4:junit4]    > \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n[junit4:junit4]    > \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n[junit4:junit4]    > \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n[junit4:junit4]    > \tat java.lang.reflect.Method.invoke(Method.java:597)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1559)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$600(RandomizedRunner.java:79)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:737)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:773)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:787)\n[junit4:junit4]    > \tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:50)\n[junit4:junit4]    > \tat org.apache.lucene.util.TestRuleFieldCacheSanity$1.evaluate(TestRuleFieldCacheSanity.java:51)\n[junit4:junit4]    > \tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\n[junit4:junit4]    > \tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\n[junit4:junit4]    > \tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)\n[junit4:junit4]    > \tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:358)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:782)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:442)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:746)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$3.evaluate(RandomizedRunner.java:648)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$4.evaluate(RandomizedRunner.java:682)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:693)\n[junit4:junit4]    > \tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\n[junit4:junit4]    > \tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:42)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.rules.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:55)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:39)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n[junit4:junit4]    > \tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:43)\n[junit4:junit4]    > \tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:48)\n[junit4:junit4]    > \tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:70)\n[junit4:junit4]    > \tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:55)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\n[junit4:junit4]    > \tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:358)\n[junit4:junit4]    > \tat java.lang.Thread.run(Thread.java:662)\n[junit4:junit4]   2> NOTE: test params are: codec=Lucene3x, sim=RandomSimilarityProvider(queryNorm=false,coord=crazy): {}, locale=es_UY, timezone=Europe/Volgograd\n[junit4:junit4]   2> NOTE: Windows Vista 6.0 x86/Sun Microsystems Inc. 1.6.0_23 (32-bit)/cpus=4,threads=1,free=12923248,total=16318464\n[junit4:junit4]   2> NOTE: All tests run in this JVM: [TestWeakIdentityMap]\n[junit4:junit4] Completed on J0 in 1.92s, 2 tests, 1 failure <<< FAILURES!\n\n ",
            "author": "Michael McCandless",
            "id": "comment-13469471"
        },
        {
            "date": "2012-10-04T16:40:33+0000",
            "content": "Don't disable the test, we can maybe disable this part of the assert. I will take a look. ",
            "author": "Uwe Schindler",
            "id": "comment-13469493"
        },
        {
            "date": "2012-10-04T21:12:12+0000",
            "content": "There are only a few cases when this can happen and one can reproduce the exact bug behaviour:\nIt looks like in some cases, WeakReferences are already cleared before they appear in the ReferenceQueue (which is perfectly fine). In that case, the iterator will filter out those removed values, but the size() call later will still report them.\n\nThis is somehow a \"bug\" in the test (wrong assumption: the ReferenceQueue will contain the items before they are removed). But we can do better (and make the test work). We keep the backing map up-to-date by quickly removing the GCed values in the iterator.\n\nI will attach a patch with some minor cleanups to make the code look like FilterIterator. ",
            "author": "Uwe Schindler",
            "id": "comment-13469707"
        },
        {
            "date": "2012-10-04T21:22:03+0000",
            "content": "Patch. \n\nThis is not a bug, so no need to backport to 4.0 or 3.6. It is just an improvement, whcih makes the test pass always! ",
            "author": "Uwe Schindler",
            "id": "comment-13469721"
        },
        {
            "date": "2012-10-04T21:46:35+0000",
            "content": "I added a test improvement to verify the map size before the iterator, too. ",
            "author": "Uwe Schindler",
            "id": "comment-13469753"
        },
        {
            "date": "2012-10-04T22:00:41+0000",
            "content": "Mike tested this with Zing VM and was not able to reproduce this anymore (which was easy with Zing).\n\nI will commit now. ",
            "author": "Uwe Schindler",
            "id": "comment-13469767"
        },
        {
            "date": "2012-10-04T22:01:16+0000",
            "content": "Committed to trunk and 4.x revision 1394291, 1394293 ",
            "author": "Uwe Schindler",
            "id": "comment-13469768"
        },
        {
            "date": "2013-03-22T16:28:42+0000",
            "content": "[branch_4x commit] Uwe Schindler\nhttp://svn.apache.org/viewvc?view=revision&revision=1394293\n\nMerged revision(s) 1394291 from lucene/dev/trunk:\nLUCENE-4459: Improve WeakIdentityMap.keyIterator() to remove GCed keys from backing map early instead of waiting for reap(). This makes test failures in TestWeakIdentityMap disappear, too. ",
            "author": "Commit Tag Bot",
            "id": "comment-13610710"
        }
    ]
}