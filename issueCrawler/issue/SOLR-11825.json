{
    "id": "SOLR-11825",
    "title": "TestPointFields.testDatePointFieldSortAndFunction() failure",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "7.3",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "Reproducing master seed from https://jenkins.thetaphi.de/job/Lucene-Solr-master-Linux/21216/:\n\n\nChecking out Revision 5a08fa8bbb1cf26b4af5b71549671c31e1427f44 (refs/remotes/origin/master)\n[...]\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestPointFields -Dtests.method=testDatePointFieldSortAndFunction -Dtests.seed=A41248828EFF34E3 -Dtests.multiplier=3 -Dtests.slow=true -Dtests.locale=ar-YE -Dtests.timezone=Etc/GMT+10 -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] ERROR   0.17s J2 | TestPointFields.testDatePointFieldSortAndFunction <<<\n   [junit4]    > Throwable #1: java.lang.RuntimeException: Exception during query\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([A41248828EFF34E3:73AF779D2D1E9BFD]:0)\n   [junit4]    > \tat org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:902)\n   [junit4]    > \tat org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:862)\n   [junit4]    > \tat org.apache.solr.schema.TestPointFields.doTestDatePointFunctionQuery(TestPointFields.java:3599)\n   [junit4]    > \tat org.apache.solr.schema.TestPointFields.testDatePointFieldSortAndFunction(TestPointFields.java:1664)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n   [junit4]    > \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n   [junit4]    > \tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n   [junit4]    > \tat java.base/java.lang.Thread.run(Thread.java:844)\n   [junit4]    > Caused by: java.lang.RuntimeException: REQUEST FAILED: xpath=//result/doc[9]/date[@name='number_p_dt_dv'][.='+293401-11-02T19:17:28.572Z']\n   [junit4]    > \txml response was: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   [junit4]    > <response>\n   [junit4]    > <lst name=\"responseHeader\"><int name=\"status\">0</int><int name=\"QTime\">0</int></lst><result name=\"response\" numFound=\"30\" start=\"0\"><doc><str name=\"id\">R</str><date name=\"number_p_dt_dv\">+831895-07-23T21:09:09.338Z</date></doc><doc><str name=\"id\">Z</str><date name=\"number_p_dt_dv\">+725281-03-30T13:09:50.329Z</date></doc><doc><str name=\"id\">A</str><date name=\"number_p_dt_dv\">+681046-11-04T12:49:38.424Z</date></doc><doc><str name=\"id\">S</str><date name=\"number_p_dt_dv\">+662906-09-27T18:36:37.903Z</date></doc><doc><str name=\"id\">K</str><date name=\"number_p_dt_dv\">+477986-01-24T14:48:55.265Z</date></doc><doc><str name=\"id\">M</str><date name=\"number_p_dt_dv\">+395512-11-01T10:23:52.727Z</date></doc><doc><str name=\"id\">I</str><date name=\"number_p_dt_dv\">+350980-09-17T07:18:22.252Z</date></doc><doc><str name=\"id\">O</str><date name=\"number_p_dt_dv\">+295226-09-03T14:25:02.014Z</date></doc><doc><str name=\"id\">F</str><date name=\"number_p_dt_dv\">+293401-10-30T14:59:03.236Z</date></doc><doc><str name=\"id\">Y</str><date name=\"number_p_dt_dv\">+293401-11-02T19:17:28.572Z</date></doc><doc><str name=\"id\">N</str><date name=\"number_p_dt_dv\">+284573-12-19T12:15:27.792Z</date></doc><doc><str name=\"id\">X</str><date name=\"number_p_dt_dv\">+223248-07-13T00:56:07.425Z</date></doc><doc><str name=\"id\">U</str><date name=\"number_p_dt_dv\">+13953-10-02T03:24:10.232Z</date></doc><doc><str name=\"id\">E</str><date name=\"number_p_dt_dv\">-71579-02-08T15:03:14.552Z</date></doc><doc><str name=\"id\">D</str><date name=\"number_p_dt_dv\">-117292-05-19T19:23:42.342Z</date></doc><doc><str name=\"id\">C</str><date name=\"number_p_dt_dv\">-236708-05-08T15:18:34.650Z</date></doc><doc><str name=\"id\">Q</str><date name=\"number_p_dt_dv\">-279851-11-04T08:31:48.940Z</date></doc><doc><str name=\"id\">T</str><date name=\"number_p_dt_dv\">-298426-05-18T11:07:08.059Z</date></doc><doc><str name=\"id\">L</str><date name=\"number_p_dt_dv\">-424243-10-30T19:47:50.864Z</date></doc><doc><str name=\"id\">J</str><date name=\"number_p_dt_dv\">-500593-12-19T00:44:52.457Z</date></doc><doc><str name=\"id\">V</str><date name=\"number_p_dt_dv\">-644149-02-10T23:07:16.955Z</date></doc><doc><str name=\"id\">W</str><date name=\"number_p_dt_dv\">-659321-04-17T04:29:21.261Z</date></doc><doc><str name=\"id\">]</str><date name=\"number_p_dt_dv\">-771072-10-19T17:00:40.997Z</date></doc><doc><str name=\"id\">B</str><date name=\"number_p_dt_dv\">-844756-02-08T16:51:18.073Z</date></doc><doc><str name=\"id\">^</str><date name=\"number_p_dt_dv\">-844852-04-22T10:39:12.946Z</date></doc><doc><str name=\"id\">[</str><date name=\"number_p_dt_dv\">-854949-01-22T23:26:25.473Z</date></doc><doc><str name=\"id\">G</str><date name=\"number_p_dt_dv\">-867161-10-28T16:28:50.272Z</date></doc><doc><str name=\"id\">H</str><date name=\"number_p_dt_dv\">-911399-03-28T15:02:37.797Z</date></doc><doc><str name=\"id\">P</str><date name=\"number_p_dt_dv\">-911691-05-13T13:07:48.860Z</date></doc><doc><str name=\"id\">\\</str><date name=\"number_p_dt_dv\">-921747-04-13T05:12:36.872Z</date></doc></result>\n   [junit4]    > </response>\n   [junit4]    > \trequest was:q=*:*&fl=id,+number_p_dt_dv&sort=product(-1,ms(number_p_dt_dv))+asc&rows=30&wt=xml\n   [junit4]    > \tat org.apache.solr.SolrTestCaseJ4.assertQ(SolrTestCaseJ4.java:895)\n[...]\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene70): {id=PostingsFormat(name=Memory)}, docValues:{foo_p_f_ni_dv_ns=DocValuesFormat(name=Lucene70), foo_p_f_ni_dv_ns_mv=DocValuesFormat(name=Lucene70), number_p_dt_dv_ns=DocValuesFormat(name=Asserting), foo_p_d_ni_dv_ns_mv=DocValuesFormat(name=Lucene70), foo_p_i_ni_dv_ns=DocValuesFormat(name=Asserting), number_p_f_ni_mv_dv_smf=DocValuesFormat(name=Lucene70), number_p_dt_ni_mv_dv_sml=DocValuesFormat(name=Lucene70), number_p_f_dv=DocValuesFormat(name=Asserting), number_p_i_dv_ns=DocValuesFormat(name=Lucene70), number_p_l_ni_dv=DocValuesFormat(name=Asserting), number_p_l_dv_ns=DocValuesFormat(name=Asserting), foo_p_l_ni_dv_ns=DocValuesFormat(name=Lucene70), number_p_dt_ni_mv_dv=DocValuesFormat(name=Asserting), number_p_l_dv_sml=DocValuesFormat(name=Lucene70), number_p_i_dv_smf=DocValuesFormat(name=Direct), number_p_d_ni_ns_dv=DocValuesFormat(name=Direct), number_p_dt_ni_dv_ns_mv=DocValuesFormat(name=Asserting), number_p_i_ni_dv_ns_mv=DocValuesFormat(name=Lucene70), number_p_f_dv_smf=DocValuesFormat(name=Lucene70), number_p_l_ni_dv_ns=DocValuesFormat(name=Direct), number_p_l_dv_smf=DocValuesFormat(name=Lucene70), number_p_d_ni_mv_dv_sml=DocValuesFormat(name=Lucene70), number_p_d_dv_smf=DocValuesFormat(name=Lucene70), number_p_f_ni_dv_ns_mv=DocValuesFormat(name=Direct), number_p_dt_ni_dv=DocValuesFormat(name=Asserting), number_p_f_ni_mv_dv_sml=DocValuesFormat(name=Lucene70), number_p_d_ni_mv_dv_smf=DocValuesFormat(name=Lucene70), number_p_f_dv_ns_mv=DocValuesFormat(name=Asserting), number_p_l_dv_ns_mv=DocValuesFormat(name=Asserting), number_p_dt_mv_dv_sml=DocValuesFormat(name=Lucene70), number_p_l_ni_ns_dv=DocValuesFormat(name=Asserting), number_p_f_ni_ns_dv=DocValuesFormat(name=Direct), number_p_i_ni_dv_ns=DocValuesFormat(name=Lucene70), number_p_i_dv_sml=DocValuesFormat(name=Asserting), foo_p_d_ni_dv_ns=DocValuesFormat(name=Lucene70), number_p_dt_dv_sml=DocValuesFormat(name=Lucene70), number_p_dt_dv_smf=DocValuesFormat(name=Lucene70), number_p_i_mv_dv=DocValuesFormat(name=Lucene70), number_p_d_ni_dv=DocValuesFormat(name=Direct), number_p_l_ni_dv_ns_mv=DocValuesFormat(name=Asserting), number_p_dt_ni_dv_sml=DocValuesFormat(name=Lucene70), number_p_d_mv_dv_smf=DocValuesFormat(name=Lucene70), number_p_d_ni_dv_smf=DocValuesFormat(name=Lucene70), foo_p_l_ni_dv_ns_mv=DocValuesFormat(name=Lucene70), number_p_dt_ni_dv_smf=DocValuesFormat(name=Lucene70), number_p_d_mv_dv_sml=DocValuesFormat(name=Lucene70), number_p_dt_ni_ns_dv=DocValuesFormat(name=Asserting), foo_p_i_ni_dv_ns_mv=DocValuesFormat(name=Asserting), number_p_dt_mv_dv_smf=DocValuesFormat(name=Lucene70), number_p_l_mv_dv=DocValuesFormat(name=Direct), number_p_d_ni_dv_sml=DocValuesFormat(name=Lucene70), number_p_f_mv_dv=DocValuesFormat(name=Asserting), number_p_f_ni_mv_dv=DocValuesFormat(name=Direct), number_p_i_ni_mv_dv=DocValuesFormat(name=Lucene70), number_p_i_mv_dv_smf=DocValuesFormat(name=Direct), foo_p_dt_ni_dv_ns_mv=DocValuesFormat(name=Lucene70), number_p_l_ni_mv_dv=DocValuesFormat(name=Asserting), number_p_d_dv=DocValuesFormat(name=Direct), number_p_l_ni_dv_sml=DocValuesFormat(name=Lucene70), number_p_d_dv_ns=DocValuesFormat(name=Direct), number_p_i_ni_mv_dv_smf=DocValuesFormat(name=Direct), number_p_l_ni_dv_smf=DocValuesFormat(name=Lucene70), number_p_dt_dv_ns_mv=DocValuesFormat(name=Direct), number_p_i_ni_mv_dv_sml=DocValuesFormat(name=Asserting), number_p_l_dv=DocValuesFormat(name=Direct), number_p_dt_mv_dv=DocValuesFormat(name=Direct), number_p_l_mv_dv_smf=DocValuesFormat(name=Lucene70), number_p_d_ni_dv_ns=DocValuesFormat(name=Asserting), number_p_i_dv_ns_mv=DocValuesFormat(name=Lucene70), number_p_d_ni_dv_ns_mv=DocValuesFormat(name=Direct), number_p_i_ni_dv_sml=DocValuesFormat(name=Direct), number_p_i_ni_dv_smf=DocValuesFormat(name=Asserting), number_p_l_mv_dv_sml=DocValuesFormat(name=Lucene70), number_p_d_dv_sml=DocValuesFormat(name=Lucene70), number_p_f_dv_sml=DocValuesFormat(name=Lucene70), number_p_f_ni_dv_ns=DocValuesFormat(name=Asserting), number_p_i_ni_ns_dv=DocValuesFormat(name=Lucene70), number_p_f_ni_dv=DocValuesFormat(name=Direct), foo_p_dt_ni_dv_ns=DocValuesFormat(name=Lucene70), number_p_dt_dv=DocValuesFormat(name=Asserting), number_p_l_ni_mv_dv_smf=DocValuesFormat(name=Lucene70), number_p_dt_ni_mv_dv_smf=DocValuesFormat(name=Lucene70), number_p_d_ni_mv_dv=DocValuesFormat(name=Direct), number_p_d_dv_ns_mv=DocValuesFormat(name=Direct), number_p_f_ni_dv_sml=DocValuesFormat(name=Lucene70), number_p_l_ni_mv_dv_sml=DocValuesFormat(name=Lucene70), number_p_d_mv_dv=DocValuesFormat(name=Asserting), number_p_i_dv=DocValuesFormat(name=Lucene70), number_p_f_mv_dv_sml=DocValuesFormat(name=Lucene70), number_p_i_mv_dv_sml=DocValuesFormat(name=Asserting), number_p_f_ni_dv_smf=DocValuesFormat(name=Lucene70), number_p_dt_ni_dv_ns=DocValuesFormat(name=Direct), number_p_f_mv_dv_smf=DocValuesFormat(name=Lucene70), number_p_i_ni_dv=DocValuesFormat(name=Lucene70), number_p_f_dv_ns=DocValuesFormat(name=Direct)}, maxPointsInLeafNode=304, maxMBSortInHeap=5.893618502916581, sim=Asserting(org.apache.lucene.search.similarities.AssertingSimilarity@144ec6b), locale=ar-YE, timezone=Etc/GMT+10\n   [junit4]   2> NOTE: Linux 4.10.0-40-generic amd64/Oracle Corporation 10-ea (64-bit)/cpus=8,threads=1,free=144014848,total=518979584",
    "attachments": {
        "SOLR-11825.patch": "https://issues.apache.org/jira/secure/attachment/12905379/SOLR-11825.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-01-05T22:55:56+0000",
            "content": "The issue appears to be that the float sort value isn't precise enough to distinguish between two dates that are fairly close.  After adding the sort value product(-1,ms(field)) to the fl list, the two out-of-order docs are:\n\n\n<doc>\n  <str name=\"id\">F</str>\n  <date name=\"number_p_dt_dv\">+293401-10-30T14:59:03.236Z</date>\n  <float name=\"product(-1,ms(number_p_dt_dv))\">-9.1967007E15</float>\n</doc>\n<doc>\n  <str name=\"id\">Y</str>\n  <date name=\"number_p_dt_dv\">+293401-11-02T19:17:28.572Z</date>\n  <float name=\"product(-1,ms(number_p_dt_dv))\">-9.1967007E15</float>\n</doc>\n\n ",
            "author": "Steve Rowe",
            "id": "comment-16314078"
        },
        {
            "date": "2018-01-05T23:06:52+0000",
            "content": "yeah \u2013 i was just about to post that hypothosis based on reading the query response and noting how close those \"randomly large\" dates were to eachother.\n\nI suspect the test, as written to (evidently) use completley random dates, is invalid given that sorting by function happens at float precision.\n\nWe should probably make this test only used randomized dates for strict date sorting (ie: sort=field asc|desc ) since that should happen at ms level precision \u2013 and should fail if it doesn't \u2013 and use a static set of dates for testing that function composition/sorting works properly ",
            "author": "Hoss Man",
            "id": "comment-16314093"
        },
        {
            "date": "2018-01-10T01:55:20+0000",
            "content": "I suspect the test, as written to (evidently) use completley random dates, is invalid given that sorting by function happens at float precision.\n\nAgreed.\n\nWe should probably make this test only used randomized dates for strict date sorting (ie: sort=field asc|desc ) since that should happen at ms level precision \u2013 and should fail if it doesn't \u2013 and use a static set of dates for testing that function composition/sorting works properly\n\nAgreed.  This patch does this.  Committing shortly. ",
            "author": "Steve Rowe",
            "id": "comment-16319545"
        },
        {
            "date": "2018-01-10T02:03:14+0000",
            "content": "Commit da011e6fcd4991b386118ce803186f6fd640ac43 in lucene-solr's branch refs/heads/branch_7x from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=da011e6 ]\n\nSOLR-11825: stop testing randomized dates with function query sorting ",
            "author": "ASF subversion and git services",
            "id": "comment-16319560"
        },
        {
            "date": "2018-01-10T02:04:32+0000",
            "content": "Commit 077e8b1da4f5a2ab99ac5fefcb2891869c2a43c6 in lucene-solr's branch refs/heads/master from Steve Rowe\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=077e8b1 ]\n\nSOLR-11825: stop testing randomized dates with function query sorting ",
            "author": "ASF subversion and git services",
            "id": "comment-16319564"
        }
    ]
}