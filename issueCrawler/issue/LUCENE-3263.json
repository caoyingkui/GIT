{
    "id": "LUCENE-3263",
    "title": "Create Build-A-Module process",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "general/build"
        ],
        "type": "New Feature",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Over the last few weeks, we've had a number of modules made.  This process seems only likely to continue with the potential for modules within modules as well.\n\nWhen creating a module, there is usually a consistent series of steps that need to be done.  For me these are:\n\n\n\tCreate module directory\n\tAdd LICENSE.txt and NOTICE.txt\n\tCreate build.xml with dependencies on other modules (if there are any)\n\tUpdate parent build.xml (in case of modules)\n\tAdd java and test directories to dev-tools/eclipse/dot.classpath\n\tCreate module directory in dev-tools/idea\n\tAdd .iml to dev-tools/idea/path/to/module\n\tAdd module to dev-tools/idea/.idea/modules.xml\n\tAdd module to dev-tools/idea/.idea/workspace.xml\n\tCreate module directory in dev-tools/maven\n\tAdd pom.xml.template to dev-tools/maven/path/to/module\n\n\n\nI think we can create a script which provided some basic information, can complete the majority of the above tasks.  Of course if the module requires some custom build targets or dependencies, then human involvement will be required afterwards.  But at the very least, it'll reduce the effort required to make a new module and lower the risk of a step being missed (which I've done a few times).  \n\nWe can also use this as a chance to build in any verification of the configurations, so people can feel more comfortable using them.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}