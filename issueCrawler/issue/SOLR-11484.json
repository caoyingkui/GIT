{
    "id": "SOLR-11484",
    "title": "CloudSolrClient's cache of collection clusterstate can cause RouteExceptions when attempting directUpdates after collection modifications",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Bug",
        "fix_versions": [
            "7.2",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "This was discovered while auditing jenkins failures from \nTestCollectionsAPIViaSolrCloudCluster.testCollectionCreateSearchDelete (where a test explicitly deletes and then recreates a collection with the same name), but as noted in a comment below, SOLR-11392 is another example of non-obvious test failures that can pop up because of this bug.\n\nIn practice, it can affect any CloudSolrClient user after changes have been made to a collection (to add/move replicas, etc...)\n\n\n\nOriginal jira notes...\n\nTestCollectionsAPIViaSolrCloudCluster.testCollectionCreateSearchDelete\nseems to fail with non-trivial frequency, so I grabbed the logs from a recent failure and starting trying to follow along with the actions to figure out what exactly is happening....\n\nhttps://jenkins.thetaphi.de/job/Lucene-Solr-master-Linux/20662/\n\n\n   [junit4] ERROR   20.3s J1 | TestCollectionsAPIViaSolrCloudCluster.testCollectionCreateSearchDelete <<<\n   [junit4]    > Throwable #1: org.apache.solr.client.solrj.impl.CloudSolrClient$RouteException: Error from server at https://127.0.0.1:42959/solr/testcollection_shard1_replica_n3: Expected mime type a\npplication/octet-stream but got text/html. <html>\n   [junit4]    > <head>\n   [junit4]    > <meta http-equiv=\"Content-Type\" content=\"text/html;charset=ISO-8859-1\"/>\n   [junit4]    > <title>Error 404 </title>\n\n\n\nThe crux of this failure appears to be a genuine bug in how CloudSolrClient uses it's cached ClusterState info when doing (direct) updates.  The key bits seem to be:\n\n\n\tCloudSolrClient does something (update,query,etc...) with a collection causing the current cluster state for the collection to be cached\n\tThe actual collection changes such that a Solr node/core no longer exists as part of the collection\n\tCloudSolrClient is asked to process an UpdateRequest which triggers the code paths for the directUpdate() method \u2013 which attempts to route the updates directly to a replica of the appropriate shard using the (cache) collection state info\n\tCloudSolrClient (may) attempt to send that UpdateRequest to a node/core that doesn't exist, getting a 404 \u2013 which does not (seem to) trigger a state refresh, or retry to find a correct URL to resend the update to.\n\n\n\nDetails to follow in comment....",
    "attachments": {
        "SOLR-11484.patch": "https://issues.apache.org/jira/secure/attachment/12892649/SOLR-11484.patch",
        "jenkins.thetaphi.20662.txt": "https://issues.apache.org/jira/secure/attachment/12891864/jenkins.thetaphi.20662.txt"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-13T00:22:17+0000",
            "content": "I've attached the log from https://jenkins.thetaphi.de/job/Lucene-Solr-master-Linux/20662/\n\nA quick walk through of some of the key bits of logging from testCollectionCreateSearchDelete ...\n\n\nTest Creates a 2x2 collection, resulting in 4 SolrCores...\n\n\n   \n   [junit4]   2> 334246 INFO  (parallelCoreAdminExecutor-1592-thread-1-processing-n:127.0.0.1:42959_solr aecb57e9-be15-41b4-892b-269c3ef4df623724636310642455 CREATE) [n:127.0.0.1:42959_solr    ] o.a.s.h.a.CoreAdminOperation core create command qt=/admin/cores&collection.configName=solrCloudCollectionConfig&newCollection=true&collection=testcollection&version=2&replicaType=NRT&async=aecb57e9-be15-41b4-892b-269c3ef4df623724636310642455&coreNodeName=core_node4&name=testcollection_shard1_replica_n3&action=CREATE&numShards=2&shard=shard1&property.solr.directoryFactory=solr.StandardDirectoryFactory&wt=javabin\n   [junit4]   2> 334261 INFO  (parallelCoreAdminExecutor-1581-thread-1-processing-n:127.0.0.1:34827_solr aecb57e9-be15-41b4-892b-269c3ef4df623724636321671098 CREATE) [n:127.0.0.1:34827_solr    ] o.a.s.h.a.CoreAdminOperation core create command qt=/admin/cores&collection.configName=solrCloudCollectionConfig&newCollection=true&collection=testcollection&version=2&replicaType=NRT&async=aecb57e9-be15-41b4-892b-269c3ef4df623724636321671098&coreNodeName=core_node8&name=testcollection_shard2_replica_n6&action=CREATE&numShards=2&shard=shard2&property.solr.directoryFactory=solr.StandardDirectoryFactory&wt=javabin\n   [junit4]   2> 334272 INFO  (parallelCoreAdminExecutor-1579-thread-1-processing-n:127.0.0.1:38927_solr aecb57e9-be15-41b4-892b-269c3ef4df623724636317202530 CREATE) [n:127.0.0.1:38927_solr    ] o.a.s.h.a.CoreAdminOperation core create command qt=/admin/cores&collection.configName=solrCloudCollectionConfig&newCollection=true&collection=testcollection&version=2&replicaType=NRT&async=aecb57e9-be15-41b4-892b-269c3ef4df623724636317202530&coreNodeName=core_node7&name=testcollection_shard2_replica_n5&action=CREATE&numShards=2&shard=shard2&property.solr.directoryFactory=solr.StandardDirectoryFactory&wt=javabin\n   [junit4]   2> 334272 INFO  (parallelCoreAdminExecutor-1577-thread-1-processing-n:127.0.0.1:36233_solr aecb57e9-be15-41b4-892b-269c3ef4df623724636304239736 CREATE) [n:127.0.0.1:36233_solr    ] o.a.s.h.a.CoreAdminOperation core create command qt=/admin/cores&collection.configName=solrCloudCollectionConfig&newCollection=true&collection=testcollection&version=2&replicaType=NRT&async=aecb57e9-be15-41b4-892b-269c3ef4df623724636304239736&coreNodeName=core_node2&name=testcollection_shard1_replica_n1&action=CREATE&numShards=2&shard=shard1&property.solr.directoryFactory=solr.StandardDirectoryFactory&wt=javabin\n\n\n\nNote that these initial Cores are:\n\n\n\ttestcollection_shard1_replica_n3\n\ttestcollection_shard2_replica_n6\n\ttestcollection_shard2_replica_n5\n\ttestcollection_shard1_replica_n1\n\n\n\n...the test then does some searching of this collection, and a few other things, before ultimately deleting this collection, and verifies the delete worked correctly...\n\n\n   ....\n   [junit4]   2> 340530 INFO  (TEST-TestCollectionsAPIViaSolrCloudCluster.testCollectionCreateSearchDelete-seed#[DC2FFDE51D1E4138]) [    ] o.a.s.c.AbstractDistribZkTestBase Wait for collection to disappear - collection: testcollection failOnTimeout:true timeout (sec):330\n   [junit4]   1> -\n   [junit4]   2> 340530 INFO  (TEST-TestCollectionsAPIViaSolrCloudCluster.testCollectionCreateSearchDelete-seed#[DC2FFDE51D1E4138]) [    ] o.a.s.c.AbstractDistribZkTestBase Collection has disappeared - collection: testcollection\n\n\n\n...at which point it recreates the collection, and we get 4 completely new SolrCores...\n\n\n   [junit4]   2> 340531 INFO  (qtp6784903-4183) [n:127.0.0.1:38927_solr    ] o.a.s.h.a.CollectionsHandler Invoked Collection Action :create with params replicationFactor=2&collection.configName=solrCloudCollectionConfig&maxShardsPerNode=1&name=testcollection&nrtReplicas=2&action=CREATE&numShards=2&property.solr.directoryFactory=solr.StandardDirectoryFactory&wt=javabin&version=2 and sendToOCPQueue=true\n   [junit4]   2> 340533 INFO  (OverseerThreadFactory-1587-thread-3-processing-n:127.0.0.1:34827_solr) [n:127.0.0.1:34827_solr    ] o.a.s.c.CreateCollectionCmd Create collection testcollection\n   ....\n   [junit4]   2> 340948 INFO  (qtp13197426-4184) [n:127.0.0.1:36233_solr    ] o.a.s.h.a.CoreAdminOperation core create command qt=/admin/cores&collection.configName=solrCloudCollectionConfig&newCollection=true&collection=testcollection&version=2&replicaType=NRT&coreNodeName=core_node8&name=testcollection_shard2_replica_n6&action=CREATE&numShards=2&shard=shard2&property.solr.directoryFactory=solr.StandardDirectoryFactory&wt=javabin\n   [junit4]   2> 340948 INFO  (qtp13767699-4323) [n:127.0.0.1:42959_solr    ] o.a.s.h.a.CoreAdminOperation core create command qt=/admin/cores&collection.configName=solrCloudCollectionConfig&newCollection=true&collection=testcollection&version=2&replicaType=NRT&coreNodeName=core_node5&name=testcollection_shard1_replica_n2&action=CREATE&numShards=2&shard=shard1&property.solr.directoryFactory=solr.StandardDirectoryFactory&wt=javabin\n   [junit4]   2> 340949 INFO  (qtp18576982-4232) [n:127.0.0.1:34827_solr    ] o.a.s.h.a.CoreAdminOperation core create command qt=/admin/cores&collection.configName=solrCloudCollectionConfig&newCollection=true&collection=testcollection&version=2&replicaType=NRT&coreNodeName=core_node3&name=testcollection_shard1_replica_n1&action=CREATE&numShards=2&shard=shard1&property.solr.directoryFactory=solr.StandardDirectoryFactory&wt=javabin\n   [junit4]   2> 341020 INFO  (qtp1638616-4379) [n:127.0.0.1:40813_solr    ] o.a.s.h.a.CoreAdminOperation core create command qt=/admin/cores&collection.configName=solrCloudCollectionConfig&newCollection=true&collection=testcollection&version=2&replicaType=NRT&coreNodeName=core_node7&name=testcollection_shard2_replica_n4&action=CREATE&numShards=2&shard=shard2&property.solr.directoryFactory=solr.StandardDirectoryFactory&wt=javabin\n\n\n\nNote the new SolrCore names/paths...\n\n\n\ttestcollection_shard1_replica_n1\n\ttestcollection_shard1_replica_n2\n\ttestcollection_shard2_replica_n4\n\ttestcollection_shard2_replica_n6\n\n\n\n...note in particular that there is NOT a \"testcollection_shard1_replica_n3\" core in the \"new\" instance of this collection ... that was only the prior (instance) of this collection.\n\nCollection creation finishes...\n\n\n   [junit4]   2> 344142 INFO  (qtp6784903-4183) [n:127.0.0.1:38927_solr    ] o.a.s.s.HttpSolrCall [admin] webapp=null path=/admin/collections params={replicationFactor=2&collection.configName=solrCloudCollectionConfig&maxShardsPerNode=1&name=testcollection&nrtReplicas=2&action=CREATE&numShards=2&property.solr.directoryFactory=solr.StandardDirectoryFactory&wt=javabin&version=2} status=0 QTime=3610\n   [junit4]   2> 344143 INFO  (TEST-TestCollectionsAPIViaSolrCloudCluster.testCollectionCreateSearchDelete-seed#[DC2FFDE51D1E4138]) [    ] o.a.s.c.AbstractDistribZkTestBase Wait for recoveries to finish - collection: testcollection failOnTimeout:true timeout (sec):330\n   ...\n   [junit4]   2> 344144 INFO  (TEST-TestCollectionsAPIViaSolrCloudCluster.testCollectionCreateSearchDelete-seed#[DC2FFDE51D1E4138]) [    ] o.a.s.c.AbstractDistribZkTestBase Recoveries finished - collection: testcollection\n\n\n\n...now the test does a \":\" query over the colleciton \u2013 to ensure no docs found...\n\n\n   [junit4]   2> 344168 INFO  (qtp13767699-4319) [n:127.0.0.1:42959_solr c:testcollection s:shard1 r:core_node5 x:testcollection_shard1_replica_n2] o.a.s.c.S.Request [testcollection_shard1_replica_n2]  webapp=/solr path=/select params={df=text&distrib=false&_stateVer_=testcollection:7&fl=id&fl=score&shards.purpose=4&start=0&fsv=true&shard.url=https://127.0.0.1:42959/solr/testcollection_shard1_replica_n2/|https://127.0.0.1:34827/solr/testcollection_shard1_replica_n1/&rows=10&version=2&q=*:*&NOW=1507805797249&isShard=true&wt=javabin} hits=0 status=0 QTime=0\n   [junit4]   2> 344168 INFO  (qtp1638616-4384) [n:127.0.0.1:40813_solr c:testcollection s:shard2 r:core_node7 x:testcollection_shard2_replica_n4] o.a.s.c.S.Request [testcollection_shard2_replica_n4]  webapp=/solr path=/select params={df=text&distrib=false&_stateVer_=testcollection:7&fl=id&fl=score&shards.purpose=4&start=0&fsv=true&shard.url=https://127.0.0.1:40813/solr/testcollection_shard2_replica_n4/|https://127.0.0.1:36233/solr/testcollection_shard2_replica_n6/&rows=10&version=2&q=*:*&NOW=1507805797249&isShard=true&wt=javabin} hits=0 status=0 QTime=0\n   [junit4]   2> 344169 INFO  (qtp18576982-4231) [n:127.0.0.1:34827_solr c:testcollection s:shard1 r:core_node3 x:testcollection_shard1_replica_n1] o.a.s.c.S.Request [testcollection_shard1_replica_n1]  webapp=/solr path=/select params={q=*:*&_stateVer_=testcollection:7&wt=javabin&version=2} hits=0 status=0 QTime=2\n\n\n\n...that request was directed to \"testcollection_shard1_replica_n1\" (a core name that just so happened to exist in both instances of the \"testcollection\") and that works and we get the correct response of numFound=0.\n\nBut the next line in the test/lots is an attempt to add a document \u2013 and this is what fails...\n\n\n   [junit4]   2> 344173 ERROR (TEST-TestCollectionsAPIViaSolrCloudCluster.testCollectionCreateSearchDelete-seed#[DC2FFDE51D1E4138]) [    ] o.a.s.c.s.i.CloudSolrClient Request to collection testcollection failed due to (404) org.apache.solr.client.solrj.impl.HttpSolrClient$RemoteSolrException: Error from server at https://127.0.0.1:42959/solr/testcollection_shard1_replica_n3: Expected mime type application/octet-stream but got text/html. <html>\n   [junit4]   2> <head>\n   [junit4]   2> <meta http-equiv=\"Content-Type\" content=\"text/html;charset=ISO-8859-1\"/>\n   [junit4]   2> <title>Error 404 </title>\n   [junit4]   2> </head>\n   [junit4]   2> <body>\n   [junit4]   2> <h2>HTTP ERROR: 404</h2>\n   [junit4]   2> <p>Problem accessing /solr/testcollection_shard1_replica_n3/update. Reason:\n   [junit4]   2> <pre>    Can not find: /solr/testcollection_shard1_replica_n3/update</pre></p>\n   [junit4]   2> <hr /><a href=\"http://eclipse.org/jetty\">Powered by Jetty:// 9.3.20.v20170531</a><hr/>\n   [junit4]   2> </body>\n   [junit4]   2> </html>\n   [junit4]   2> , retry? 0\n\n\n\n...the key problem being that CloudSolrClient.directUpdate is using (stale) ClusterState info about the collection to try and route that update directly to \"testcollection_shard1_replica_n3\" which doesn't exist in the collection \u2013 it hasn't existed since the last time this collection existed.\n\nAnd once this 404 is returned, CloudSolrClient does not (or can not? not sure what the rules are for Updates) make any attempt to retry this update.\n\nThe stale collection info and the resulting 404 are ultimately what fails the test...\n\n\n   [junit4] ERROR   20.3s J1 | TestCollectionsAPIViaSolrCloudCluster.testCollectionCreateSearchDelete <<<\n   [junit4]    > Throwable #1: org.apache.solr.client.solrj.impl.CloudSolrClient$RouteException: Error from server at https://127.0.0.1:42959/solr/testcollection_shard1_replica_n3: Expected mime type a\npplication/octet-stream but got text/html. <html>\n   [junit4]    > <head>\n   [junit4]    > <meta http-equiv=\"Content-Type\" content=\"text/html;charset=ISO-8859-1\"/>\n   [junit4]    > <title>Error 404 </title>\n   [junit4]    > </head>\n   [junit4]    > <body>\n   [junit4]    > <h2>HTTP ERROR: 404</h2>\n   [junit4]    > <p>Problem accessing /solr/testcollection_shard1_replica_n3/update. Reason:\n   [junit4]    > <pre>    Can not find: /solr/testcollection_shard1_replica_n3/update</pre></p>\n   [junit4]    > <hr /><a href=\"http://eclipse.org/jetty\">Powered by Jetty:// 9.3.20.v20170531</a><hr/>\n   [junit4]    > </body>\n   [junit4]    > </html>\n   [junit4]    >        at __randomizedtesting.SeedInfo.seed([DC2FFDE51D1E4138:7FD553409AF6AB9D]:0)\n   [junit4]    >        at org.apache.solr.client.solrj.impl.CloudSolrClient.directUpdate(CloudSolrClient.java:539)\n   [junit4]    >        at org.apache.solr.client.solrj.impl.CloudSolrClient.sendRequest(CloudSolrClient.java:993)\n   [junit4]    >        at org.apache.solr.client.solrj.impl.CloudSolrClient.requestWithRetryOnStaleState(CloudSolrClient.java:862)\n   [junit4]    >        at org.apache.solr.client.solrj.impl.CloudSolrClient.request(CloudSolrClient.java:793)\n   [junit4]    >        at org.apache.solr.client.solrj.SolrRequest.process(SolrRequest.java:178)\n   [junit4]    >        at org.apache.solr.client.solrj.request.UpdateRequest.commit(UpdateRequest.java:233)\n   [junit4]    >        at org.apache.solr.cloud.TestCollectionsAPIViaSolrCloudCluster.testCollectionCreateSearchDelete(TestCollectionsAPIViaSolrCloudCluster.java:167)\n\n\n\n\n...shouldn't this type of failure cause the (stale) collection info in CloudSolrClient to be refreshed, and then retry the update? ",
            "author": "Hoss Man",
            "id": "comment-16202862"
        },
        {
            "date": "2017-10-13T00:49:49+0000",
            "content": "Hoss Man, Noble Paul, this is related I believe to SOLR-11392.\n\nAlan Woodward, discusses the issue in the ticket. ",
            "author": "Joel Bernstein",
            "id": "comment-16202881"
        },
        {
            "date": "2017-10-13T09:27:02+0000",
            "content": "Hoss Man \n\n boolean wasCommError =\n          (rootCause instanceof ConnectException ||\n              rootCause instanceof ConnectTimeoutException ||\n              rootCause instanceof NoHttpResponseException ||\n              rootCause instanceof SocketException);\n\n\nI think we should add RouteException to this list ",
            "author": "Noble Paul",
            "id": "comment-16203289"
        },
        {
            "date": "2017-10-17T17:11:23+0000",
            "content": "\nNoble Paul:  IIUC you're saying \u2013 at a broader level \u2013 that you think this is a bug in CloudSolrClient, and not a mistake in the affected test(s), correct?\n\nIn that case, I'm attaching a patch with test explicitly targeted at this caching problem in CloudSolrClient that fails reliably (for me) 100% of the time, and i'll re-word the summary/description to more specificaly describe the underlying problem.\n\nThat said: I don't really understand all the possible code paths well enough to be confident of your suggested fix:\n\n\n\tis adding RouteException to the wasCommError logic safe?\n\t\n\t\tit's not clear to me that every possible reason for a RouteException is actually a \"communication error\" that should trigger all the affected downstream logic that comes with setting that boolean\n\t\n\t\n\tis setting wasCommError enough to actually fix this bug?\n\t\n\t\tIt doesn't seem like setting that is sufficient, because I don't think the directUpdate() code paths will (currently) attempt a retry even if true==wasCommError  ?\n\t\n\t\n\n\n\n? ",
            "author": "Hoss Man",
            "id": "comment-16207928"
        },
        {
            "date": "2017-10-17T17:40:59+0000",
            "content": "Effects of this bug may be also combined with effects of SOLR-9440, so fixing the caching at this level may not completely solve the issue. ",
            "author": "Andrzej Bialecki",
            "id": "comment-16208006"
        },
        {
            "date": "2017-10-24T09:12:58+0000",
            "content": "I have an idea for this problem. The node responds a proper error ( like the node cannot find this core or collection, including clusterstate version), therefore cloudclient can know about it stale state and do retry. ",
            "author": "Cao Manh Dat",
            "id": "comment-16216583"
        },
        {
            "date": "2017-10-25T07:50:00+0000",
            "content": "The exceptions are used to invalidate cache and retry. \nCao Manh Dat, the node is supposed to respond with the new state.json version in every response. ",
            "author": "Noble Paul",
            "id": "comment-16218227"
        },
        {
            "date": "2017-10-26T12:26:05+0000",
            "content": "There were 2 bugs\n\n\n\tWhen there is a RouteException, CSC never invalidated it's state cache\n\tWhen directUpdatesToLeadersOnly==true, it errors out if the state.json doesn't have a node marked as leader. If there is no leader to be found, it's safer to just send the request to any live NRT replica instead of throwing an Exception\n\n ",
            "author": "Noble Paul",
            "id": "comment-16220377"
        },
        {
            "date": "2017-10-27T04:58:36+0000",
            "content": "Commit 0d29f7a1a24c98149485bb96f835fe0d35df8f7f in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=0d29f7a ]\n\nSOLR-11484: CloudSolrClient does not invalidate cache or retry for RouteException ",
            "author": "ASF subversion and git services",
            "id": "comment-16221714"
        },
        {
            "date": "2017-10-27T05:46:17+0000",
            "content": "Commit 59109e1b15f0ab8fd4cf980880282bc820315c79 in lucene-solr's branch refs/heads/branch_7x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=59109e1 ]\n\nSOLR-11484: CloudSolrClient does not invalidate cache or retry for RouteException ",
            "author": "ASF subversion and git services",
            "id": "comment-16221742"
        },
        {
            "date": "2017-10-27T23:54:37+0000",
            "content": "Reopening to address a 100% reproducing CloudSolrClient NPE that begins at commit 59109e1b1 on this issue, from https://jenkins.thetaphi.de/job/Lucene-Solr-7.x-Linux/685:\n\n\nChecking out Revision 14bb48e3268c8e2f4aa509b1a71a9fb3e361b082 (refs/remotes/origin/branch_7x)\n[...]\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=TestCloudSchemaless -Dtests.method=test -Dtests.seed=2542B6AD904A6296 -Dtests.multiplier=3 -Dtests.slow=true -Dtests.locale=th-TH-u-nu-thai-x-lvariant-TH -Dtests.timezone=America/Nipigon -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n   [junit4] ERROR   48.2s J0 | TestCloudSchemaless.test <<<\n   [junit4]    > Throwable #1: java.lang.NullPointerException\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([2542B6AD904A6296:AD1689773EB60F6E]:0)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.CloudSolrClient.requestWithRetryOnStaleState(CloudSolrClient.java:925)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.CloudSolrClient.request(CloudSolrClient.java:808)\n   [junit4]    > \tat org.apache.solr.client.solrj.SolrRequest.process(SolrRequest.java:178)\n   [junit4]    > \tat org.apache.solr.client.solrj.SolrClient.add(SolrClient.java:106)\n   [junit4]    > \tat org.apache.solr.client.solrj.SolrClient.add(SolrClient.java:71)\n   [junit4]    > \tat org.apache.solr.client.solrj.SolrClient.add(SolrClient.java:85)\n   [junit4]    > \tat org.apache.solr.schema.TestCloudSchemaless.test(TestCloudSchemaless.java:171)\n   [junit4]    > \tat org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsFixedStatement.callStatement(BaseDistributedSearchTestCase.java:993)\n   [junit4]    > \tat org.apache.solr.BaseDistributedSearchTestCase$ShardsRepeatRule$ShardsStatement.evaluate(BaseDistributedSearchTestCase.java:968)\n[...]\n   [junit4]   2> NOTE: test params are: codec=Asserting(Lucene70): {}, docValues:{}, maxPointsInLeafNode=350, maxMBSortInHeap=6.677333545717319, sim=RandomSimilarity(queryNorm=true): {}, locale=th-TH-u-nu-thai-x-lvariant-TH, timezone=America/Nipigon\n   [junit4]   2> NOTE: Linux 4.10.0-33-generic i386/Oracle Corporation 1.8.0_144 (32-bit)/cpus=8,threads=1,free=305236536,total=523501568\n\n ",
            "author": "Steve Rowe",
            "id": "comment-16223062"
        },
        {
            "date": "2017-10-28T01:27:56+0000",
            "content": "Commit cf75e14e41f9c670c1346974693b9706325bec63 in lucene-solr's branch refs/heads/branch_7x from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=cf75e14 ]\n\nSOLR-11484: fixing NPE ",
            "author": "ASF subversion and git services",
            "id": "comment-16223129"
        },
        {
            "date": "2017-10-28T01:34:33+0000",
            "content": "Commit f1a6b68d75e58f464b2ed4ee3702a6c1b14511a0 in lucene-solr's branch refs/heads/master from Noble Paul\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=f1a6b68 ]\n\nSOLR-11484: fixing NPE ",
            "author": "ASF subversion and git services",
            "id": "comment-16223132"
        },
        {
            "date": "2017-10-28T15:51:02+0000",
            "content": "After this commit what's the definition of {{directUpdatesToLeadersOnly?\n\n\n       Replica leader = slice.getLeader();\n+      if (directUpdatesToLeadersOnly && leader == null) {\n+        for (Replica replica : slice.getReplicas(\n+            replica -> replica.isActive(getClusterStateProvider().getLiveNodes())\n+                && replica.getType() == Replica.Type.NRT)) {\n+          leader = replica;\n+          break;\n+        }\n+      }\n\n ",
            "author": "Varun Thacker",
            "id": "comment-16223608"
        },
        {
            "date": "2017-10-28T22:55:06+0000",
            "content": "If there is no leader, send the request to any live NRT node ",
            "author": "Noble Paul",
            "id": "comment-16223767"
        },
        {
            "date": "2017-10-29T03:17:56+0000",
            "content": "But then why have the directUpdatesToLeadersOnly flag? Shouldn't that be just the default behaviour?  ",
            "author": "Varun Thacker",
            "id": "comment-16223821"
        },
        {
            "date": "2017-10-29T03:22:07+0000",
            "content": "I have to agree with you on that ",
            "author": "Noble Paul",
            "id": "comment-16223822"
        },
        {
            "date": "2017-11-01T16:15:17+0000",
            "content": "Hi Everyone,\n\n Christine Poerschke what are your thoughts on this? I guess the work \"Only\" in the flag would mean that the update should fail if there are no leaders?\n\nIn which case our tests should not set this flag and use the default behaviour which is \"If there is no leader, send the request to any live NRT node\" ",
            "author": "Varun Thacker",
            "id": "comment-16234311"
        },
        {
            "date": "2017-11-03T23:11:17+0000",
            "content": "Hi Varun Thacker - thanks for including me here.\n\n... I guess the work \"Only\" in the flag would mean that the update should fail if there are no leaders? ...\n\nCorrect, that was the intention. For convenience copy/pasting a SOLR-9512 comment here:\n\nThe SOLR-9090 directUpdatesToLeadersOnly motivation/intention was for the flag to be not a hint but a directive and for updates to 'fail fast' if there is (temporarily or otherwise) no shard leader. Fail fast (and let the caller of the CloudSolrClient handle alarming and retries as it sees fit) as opposed to sending or retry-sending to a non-leader which would then forward to the leader (and potentially still fail eventually, eventually/not-fast-slowly).\n\nAs far as the\n\n... In which case our tests should not set this flag and use the default behaviour ...\n\nalternative is concerned, hmm, i'm not sure, wouldn't that reduce test coverage in general, though yes perhaps for very specific tests a test could opt-out of randomising the value of the flag.\n\nticket cross-reference: SOLR-11507 concerns flag randomisation in the test CloudSolrClient - David Smiley and Jason Gerlowski any thoughts on this?\n\n(I should also mention that the directUpdatesToLeadersOnly flag's addition predates the new replica types and I haven't yet considered if/how that might change the meaning of the flag.) ",
            "author": "Christine Poerschke",
            "id": "comment-16238555"
        },
        {
            "date": "2017-11-03T23:24:28+0000",
            "content": "There are two possibilities\n1) the state.json had no leader\n2) there is no leader at all\n\nMost often it's because of #1. In case of #1 it's better to try a random node than fail fast ",
            "author": "Noble Paul",
            "id": "comment-16238569"
        },
        {
            "date": "2017-11-12T03:50:26+0000",
            "content": "Reproducing failure of a test added on this issue, from https://jenkins.thetaphi.de/job/Lucene-Solr-7.x-MacOSX/302/ (reproduces for me on master branch on Linux):\n\n\nChecking out Revision 6b5fbd3265e6819469e1b70a68908767fc14dd87 (refs/remotes/origin/branch_7x)\n[...]\n   [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=CloudSolrClientTest -Dtests.method=testRetryUpdatesWhenClusterStateIsStale -Dtests.seed=3D8409F14A788F1 -Dtests.slow=true -Dtests.locale=fr-BL -Dtests.timezone=MET -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n   [junit4] ERROR   5.59s J1 | CloudSolrClientTest.testRetryUpdatesWhenClusterStateIsStale <<<\n   [junit4]    > Throwable #1: org.apache.solr.client.solrj.impl.HttpSolrClient$RemoteSolrException: Error from server at http://127.0.0.1:65235/solr/stale_state_test_col_shard1_replica_n1: Expected mime type application/octet-stream but got text/html. <html>\n   [junit4]    > <head>\n   [junit4]    > <meta http-equiv=\"Content-Type\" content=\"text/html;charset=ISO-8859-1\"/>\n   [junit4]    > <title>Error 404 </title>\n   [junit4]    > </head>\n   [junit4]    > <body>\n   [junit4]    > <h2>HTTP ERROR: 404</h2>\n   [junit4]    > <p>Problem accessing /solr/stale_state_test_col_shard1_replica_n1/update. Reason:\n   [junit4]    > <pre>    Can not find: /solr/stale_state_test_col_shard1_replica_n1/update</pre></p>\n   [junit4]    > <hr /><a href=\"http://eclipse.org/jetty\">Powered by Jetty:// 9.3.20.v20170531</a><hr/>\n   [junit4]    > </body>\n   [junit4]    > </html>\n   [junit4]    > \tat __randomizedtesting.SeedInfo.seed([3D8409F14A788F1:B7E9D877F74EFEDD]:0)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.HttpSolrClient.executeMethod(HttpSolrClient.java:607)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:255)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.HttpSolrClient.request(HttpSolrClient.java:244)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.LBHttpSolrClient.doRequest(LBHttpSolrClient.java:483)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.LBHttpSolrClient.request(LBHttpSolrClient.java:413)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.CloudSolrClient.directUpdate(CloudSolrClient.java:559)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.CloudSolrClient.sendRequest(CloudSolrClient.java:1016)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.CloudSolrClient.requestWithRetryOnStaleState(CloudSolrClient.java:883)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.CloudSolrClient.request(CloudSolrClient.java:816)\n   [junit4]    > \tat org.apache.solr.client.solrj.SolrRequest.process(SolrRequest.java:194)\n   [junit4]    > \tat org.apache.solr.client.solrj.request.UpdateRequest.commit(UpdateRequest.java:233)\n   [junit4]    > \tat org.apache.solr.client.solrj.impl.CloudSolrClientTest.testRetryUpdatesWhenClusterStateIsStale(CloudSolrClientTest.java:844)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n   [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n   [junit4]    > \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n   [junit4]    > \tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n   [junit4]    > \tat java.base/java.lang.Thread.run(Thread.java:844)\n[...]\n   [junit4]   2> NOTE: test params are: codec=CheapBastard, sim=RandomSimilarity(queryNorm=false): {}, locale=fr-BL, timezone=MET\n\n ",
            "author": "Steve Rowe",
            "id": "comment-16248775"
        },
        {
            "date": "2017-12-31T03:09:46+0000",
            "content": "Github user SerCeMan commented on the issue:\n\n    https://github.com/apache/lucene-solr/pull/264\n\n    Closing as this might be fixed by https://issues.apache.org/jira/browse/SOLR-11484 ",
            "author": "ASF GitHub Bot",
            "id": "comment-16307051"
        }
    ]
}