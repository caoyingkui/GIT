{
    "id": "SOLR-4258",
    "title": "Edismax query behavior change between 3.5 and 3.6-4.x when undefined field in QF param or query malformed",
    "details": {
        "affect_versions": "3.6,                                            4.0",
        "status": "Open",
        "fix_versions": [],
        "components": [
            "search"
        ],
        "type": "Bug",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "If the following query conditons are met:\n\n(1) include an operator in your query string ( \"AND\", \"OR\", \"NOT\" ) \n(2) include a field in your QF parameter that's not defined your schema\n\nthe query behavior for the edismax handler has changed from 3.5 to 3.6 (and continues into 4.x). The behavior can be recreated using following parameters on the stock example index:\n\nq=bar AND grill\ndeftype=edismax\nqf=title INVALID\ndebugQuery=true\nlowercaseOperators=false\n\nhttp://localhost:8983/solr/select?q=bar%20AND%20grill&defType=edismax&qf=title%20INVALID&debugQuery=true&lowercaseOperators=false\n\nTesting between 3.5 and 3.6 show the following differences between the parsed query:\n\nin 3.5   : ((title:bar) +(title:grill))\nin 3.6.0 : +(((title:bar) (title:and) (title:grill))~3)\n\nIn 3.6 the operator has been lowercased and included in the query, even though lowercaseOperators is \"false\"\n\nI couldn't find any docs that explain how a query should behave with an invalid QF param or that the behavior had changed. I took a stab at a patch to make 4.x behave as < 3.6, but again, I'm not exactly sure what the behavior should be. The patch removes operators from the query string if \"lowercaseOperators\" is false and the query parsing falls past the initial parsing attempt. Thanks!",
    "attachments": {
        "SOLR-4258.patch": "https://issues.apache.org/jira/secure/attachment/12563141/SOLR-4258.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Chris Bleakley",
            "id": "comment-13549213",
            "date": "2013-01-10T00:04:17+0000",
            "content": "Updated patch to reflect latest changes from edismax refactor "
        },
        {
            "author": "Chris Bleakley",
            "id": "comment-13559096",
            "date": "2013-01-21T21:04:14+0000",
            "content": "This behavior also happens with malformed queries. For example, even if all fields in the QF parameter exist we can still replicate the behavior with a query with unbalanced parenthesis: \n\n(bar AND grill \n\ngets parsed as\n\n+((title:bar) (title:and) (title:grill))\n\nTo replicate use the solr 4.0 example: http://localhost:8983/solr/select?q=(bar%20AND%20grill&defType=edismax&qf=title&debugQuery=true&lowercaseOperators=false\n\nI've updated the patch with a test case for this as well. "
        },
        {
            "author": "Yonik Seeley",
            "id": "comment-13559302",
            "date": "2013-01-22T02:23:30+0000",
            "content": "lowercaseOperators=true means that we will attempt to treat something like \"and\" as the operator \"AND\".\nIf lowercaseOperators=false, \"and\" is treated like any other word.\n\nPerhaps the difference between 3.5 and 3.6 is text analysis of the title field?  \"and\" is an English stopword... "
        },
        {
            "author": "Chris Bleakley",
            "id": "comment-13559382",
            "date": "2013-01-22T04:12:41+0000",
            "content": "I'm not sure that lowercaseOperators has any affect here. For example, the query below only varies on lowercaseOperators true/false but exhibits the same parsed query behavior: +((id:bar) (id:AND) (id:grill))\n\nhttp://localhost:8983/solr/select?q=bar%20AND%20grill&defType=edismax&qf=id%20UNDEFINED&debugQuery=true&lowercaseOperators=true\n\nhttp://localhost:8983/solr/select?q=bar%20AND%20grill&defType=edismax&qf=id%20UNDEFINED&debugQuery=true&lowercaseOperators=false\n\nAdditionally, the queries above are using the \"id\" field which is a String field.\n\n> Perhaps the difference between 3.5 and 3.6 is text analysis of the title field? \"and\" is an English stopword...\n\nLooking at 3.5 vs 3.6 it doesn't look like either \"text_general\" field type used for \"title\" has changed or that the stopwords list in \"stopwords.txt\" been modified:\n\nhttps://github.com/apache/lucene-solr/blob/lucene_solr_3_6/solr/example/solr/conf/schema.xml\nhttps://github.com/apache/lucene-solr/blob/lucene_solr_3_5/solr/example/solr/conf/schema.xml\n\nThank you for your help!  "
        }
    ]
}