{
    "id": "SOLR-12361",
    "title": "Add solr child documents as values inside SolrInputField",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [],
        "type": "Sub-task",
        "fix_versions": [
            "7.5"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "During the discussion on SOLR-12298, there was a proposal to remove _childDocuments, and incorporate the relationship between the parent and its child documents, by holding the child documents inside a solrInputField, inside of the document.",
    "attachments": {
        "SOLR-12361_ref_guide.patch": "https://issues.apache.org/jira/secure/attachment/12939431/SOLR-12361_ref_guide.patch",
        "SOLR-12361.patch": "https://issues.apache.org/jira/secure/attachment/12923652/SOLR-12361.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2018-05-16T07:12:21+0000",
            "content": "quoting David Smiley\nOne other variation on an approach is to keep the _childDocuments member of SolrInputDocument but have it be a Map<String,List<SolrInputDocument>> to capture the relationship name.\nThis would make all children as multiValued fields.\n How do you propose we store whether the fields was an array or a single value document when it was entered?\n Perhaps we should have the _childDocuments be a Map<String,Object>, having the values either be a SolrInputDocument or a Collection<SolrInputDocument>.\nPerhaps have the values be SolrInputDocument, or some variation of it be a better fit, since it has the ability to abstract the value as a collection even if it is originally an object? ",
            "author": "mosh",
            "id": "comment-16476952"
        },
        {
            "date": "2018-05-16T08:52:16+0000",
            "content": "Perhaps we should have the _childDocuments be a Map<String,Object>, having the values either be a SolrInputDocument or a Collection<SolrInputDocument>.\nI have uploaded a small patch, where the _childDocuments is a Map<String,Object> ",
            "author": "mosh",
            "id": "comment-16477088"
        },
        {
            "date": "2018-05-16T13:49:56+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 1 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   6m 59s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   6m 18s \n  the patch passed  \n\n\n +1 \n  javac  \n   6m 18s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   5m  8s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   4m 43s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   4m 43s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n 120m 14s \n  core in the patch failed.  \n\n\n +1 \n  unit  \n  12m 43s \n  solrj in the patch passed.  \n\n\n +1 \n  unit  \n   1m 49s \n  test-framework in the patch passed.  \n\n\n  \n   \n 154m 15s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.cloud.api.collections.TestCollectionsAPIViaSolrCloudCluster \n\n\n\u00a0\n solr.cloud.autoscaling.SearchRateTriggerIntegrationTest \n\n\n\u00a0\n solr.cloud.autoscaling.sim.TestLargeCluster \n\n\n\u00a0\n solr.cloud.autoscaling.SearchRateTriggerTest \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-12361 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12923652/SOLR-12361.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene2-us-west.apache.org 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / b3894d7 \n\n\n ant \n version: Apache Ant(TM) version 1.9.6 compiled on July 8 2015 \n\n\n Default Java \n 1.8.0_172 \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/94/artifact/out/patch-unit-solr_core.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/94/testReport/ \n\n\n modules \n C: solr/core solr/solrj solr/test-framework U: solr \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/94/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16477455"
        },
        {
            "date": "2018-05-17T07:40:30+0000",
            "content": "patch up to date with pull request ",
            "author": "mosh",
            "id": "comment-16478674"
        },
        {
            "date": "2018-05-17T14:54:54+0000",
            "content": "Oh yeah; the multi-valued question makes this solution path more complicated because it needs to duplicate similar logic that exists for plain field values.  add(key,Object) is ugly.  Ugh.  Could you please try the approach of adding SolrInputDocuments as if they were fields values? ",
            "author": "David Smiley",
            "id": "comment-16479166"
        },
        {
            "date": "2018-05-18T00:42:50+0000",
            "content": "\n\n\n  -1 overall \n\n\n\n\n\n\n\n\n\n Vote \n Subsystem \n Runtime \n Comment \n\n\n\u00a0\n\u00a0\n\u00a0\n  Prechecks  \n\n\n +1 \n  test4tests  \n   0m  0s \n  The patch appears to include 1 new or modified test files.  \n\n\n\u00a0\n\u00a0\n\u00a0\n  master Compile Tests  \n\n\n +1 \n  compile  \n   3m  4s \n  master passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Patch Compile Tests  \n\n\n +1 \n  compile  \n   3m  6s \n  the patch passed  \n\n\n +1 \n  javac  \n   3m  6s \n  the patch passed  \n\n\n +1 \n  Release audit (RAT)  \n   2m 29s \n  the patch passed  \n\n\n +1 \n  Check forbidden APIs  \n   2m 17s \n  the patch passed  \n\n\n +1 \n  Validate source patterns  \n   2m 17s \n  the patch passed  \n\n\n\u00a0\n\u00a0\n\u00a0\n  Other Tests  \n\n\n -1 \n  unit  \n 192m 58s \n  core in the patch failed.  \n\n\n -1 \n  unit  \n   6m 41s \n  solrj in the patch failed.  \n\n\n +1 \n  unit  \n   0m 45s \n  test-framework in the patch passed.  \n\n\n  \n   \n 210m  5s \n   \n\n\n\n\n\n\n\n\n\n Reason \n Tests \n\n\n Failed junit tests \n solr.search.join.TestCloudNestedDocsSort \n\n\n\u00a0\n solr.cloud.MoveReplicaHDFSTest \n\n\n\u00a0\n solr.common.util.TestJavaBinCodec \n\n\n\n\n\n\n\n\n\n Subsystem \n Report/Notes \n\n\n JIRA Issue \n SOLR-12361 \n\n\n JIRA Patch URL \n https://issues.apache.org/jira/secure/attachment/12923887/SOLR-12361.patch \n\n\n Optional Tests \n  compile  javac  unit  ratsources  checkforbiddenapis  validatesourcepatterns  \n\n\n uname \n Linux lucene1-us-west 3.13.0-88-generic #135-Ubuntu SMP Wed Jun 8 21:10:42 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux \n\n\n Build tool \n ant \n\n\n Personality \n /home/jenkins/jenkins-slave/workspace/PreCommit-SOLR-Build/sourcedir/dev-tools/test-patch/lucene-solr-yetus-personality.sh \n\n\n git revision \n master / 7bb3e5c \n\n\n ant \n version: Apache Ant(TM) version 1.9.3 compiled on April 8 2014 \n\n\n Default Java \n 1.8.0_172 \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/97/artifact/out/patch-unit-solr_core.txt \n\n\n unit \n https://builds.apache.org/job/PreCommit-SOLR-Build/97/artifact/out/patch-unit-solr_solrj.txt \n\n\n  Test Results \n https://builds.apache.org/job/PreCommit-SOLR-Build/97/testReport/ \n\n\n modules \n C: solr/core solr/solrj solr/test-framework U: solr \n\n\n Console output \n https://builds.apache.org/job/PreCommit-SOLR-Build/97/console \n\n\n Powered by \n Apache Yetus 0.7.0   http://yetus.apache.org \n\n\n\n\n\n\nThis message was automatically generated.\n ",
            "author": "Lucene/Solr QA",
            "id": "comment-16479953"
        },
        {
            "date": "2018-05-21T05:08:25+0000",
            "content": "Oh yeah; the multi-valued question makes this solution path more complicated because it needs to duplicate similar logic that exists for plain field values. add(key,Object) is ugly. Ugh. Could you please try the approach of adding SolrInputDocuments as if they were fields values?\nI have started doing this in another branch, this might be the better way to go, but it will require a lot of adjusting of current unit tests.\nHopefully I'll have a WIP pull request up by tomorrow. ",
            "author": "mosh",
            "id": "comment-16482200"
        },
        {
            "date": "2018-05-22T05:29:51+0000",
            "content": "David Smiley\nPerhaps changing the _childDocuments to Map<String, SolrInputField> (maybe a name change should be made) could solve our problem gracefully? ",
            "author": "mosh",
            "id": "comment-16483513"
        },
        {
            "date": "2018-05-22T13:51:24+0000",
            "content": "+1 to that ",
            "author": "David Smiley",
            "id": "comment-16483978"
        },
        {
            "date": "2018-05-23T15:32:24+0000",
            "content": "I have just uploaded a pull request incorporating child documents as values inside SolrInputDocument.\n Perhaps you could check it out and so we can discuss which option is better suited out of the two:\n\n1. The pull request: GitHub Pull Request #382\n2. _childDocuments as a Map<String, SolrInputField>:\nPerhaps changing the _childDocuments to Map<String, SolrInputField> ",
            "author": "mosh",
            "id": "comment-16487477"
        },
        {
            "date": "2018-05-24T04:03:42+0000",
            "content": "I mostly finished reviewing #382 (removal of _childDocuments) but I ought to look a bit more; plus I need to look at your #2 path. \u00a0As I was looking at #382, I kept thinking of back-compat ramifications, and then an epiphany hit me:\u00a0\u00a0Lets say that docs can have semantic child relations (named child relations), OR (XOR?) they can have anonymous ones \u2013 what we have today. \u00a0The latter (anonymous), lets say we retain this for now in 7x (keep _childDocuments impl) but come 8.0 we remove it. \u00a0For now just leave it and we deal with child docs potentially\u00a0in both places. \u00a0In this scheme, doc.getChildDocuments only returns anonymous children (impl doesn't change).  We can't change the name unfortunately but we can add javadocs that scream this point and potentially mark itself deprecated.  With this path, the main thing to concern ourselves with right now is simply supporting SolrInputDocument as field values and not worrying about disturbing back-compat.  This means we also needn't worry about, say, your change to ClientUtils.writeXML since child docs can come from either place and it's okay (no duplication of same docs to worry about).\n\nAlso, I wonder if we even need to directly \"flatten\" the tree to a List after all?  Consider your change to DocumentBuilder; maybe it should just operate recursively?  Granted DocumentBuilder would then need to return a List<Document> but whatever. ",
            "author": "David Smiley",
            "id": "comment-16488384"
        },
        {
            "date": "2018-05-24T04:25:43+0000",
            "content": "I looked closer at what it would take to remove the direct flattening.  AddUpdateCommand would no longer implement Iterable<Document>.  DirectUpdateHandler2.allowDuplicateUpdate currently grabs this iterable and passes to Lucene IndexWriter.  I think it could instead grab a List<Document> from the command, after which it could then check the size for > 1 and add one document or the set of them atomically (no need for cmd.isBlock).  Maybe I'll look at this more tomorrow.  So this could remove the isBlock call which is potentially expensive'ish.  We could even do this and leave DocumentBuilder alone; keep the flatten.  Shrug; eh; debatable...  ",
            "author": "David Smiley",
            "id": "comment-16488401"
        },
        {
            "date": "2018-05-24T05:13:48+0000",
            "content": "Lets say that docs can have semantic child relations (named child relations), OR (XOR?) they can have anonymous ones \u2013 what we have today.\n\u00a0Just to make sure we're on the same page David Smiley.\nDo you propose we deprecate _childDocuments for the time being, leave it as is, while implementing child docs as values?\nLater on(Solr 8.0) the _childDocuments will be removed?\nPlus, would we have to enforce that no childDocument is inserted inside the childDocuments key annonymous childDocuments were inserted to the current doc?\n\n\u00a0 ",
            "author": "mosh",
            "id": "comment-16488429"
        },
        {
            "date": "2018-05-24T05:46:04+0000",
            "content": "Also, I wonder if we even need to directly \"flatten\" the tree to a List after all? Consider your change to DocumentBuilder; maybe it should just operate recursively? Granted DocumentBuilder would then need to return a List<Document> but whatever.\nThis could be changed if it is deemed as a better approach. ",
            "author": "mosh",
            "id": "comment-16488462"
        },
        {
            "date": "2018-05-24T12:53:25+0000",
            "content": "Do you propose we deprecate _childDocuments for the time being, leave it as is, while implementing child docs as values?  Later on(Solr 8.0) the _childDocuments will be removed?\n\nYes. \n(BTW I recommend sticking with using master branch for patch development / WIP; it shouldn't be an issue)\n\nPlus, would we have to enforce that no childDocument is inserted inside the childDocuments key annonymous childDocuments were inserted to the current doc?\n\nThat was my \"XOR\" posed as a question... I think we shouldn't bother to complicate ourselves with preventing it; so let it be possible.  In practice, I expect users to do one or the other.\n\nRE DocumentBuilder:  Maybe nevermind my thoughts on changing that.  But I do think the changes to remove cmd.isBlock are worthwhile as it helps us remove `org.apache.solr.common.SolrDocumentBase#hasChildDocuments` ",
            "author": "David Smiley",
            "id": "comment-16488935"
        },
        {
            "date": "2018-05-24T13:13:25+0000",
            "content": "BTW another thing I like about the approach of treating child documents as field values is that it could make it easier / more natural to return child documents in all/most of our response formats (except perhaps CSV) since they are attached to the field name just as will be allowed on the way in.  \n\nIf we instead go with the path of merely turning the List child into a Map with String semantic key (#2 path), we would then need to consider how each response format deals with semantic children (how this looks in XML, JSON, Ruby, ...), which would certainly add code/complexity rather than the unifying principle of using field names. ",
            "author": "David Smiley",
            "id": "comment-16488963"
        },
        {
            "date": "2018-05-28T05:51:06+0000",
            "content": "added a new WIP pull request #385 ",
            "author": "mosh",
            "id": "comment-16492288"
        },
        {
            "date": "2018-05-31T03:50:29+0000",
            "content": "Cao Manh Dat can you please review the changes to IgnoreLargeDocumentProcessorFactory that mosh changed in PR 385? \u00a0(note it includes more tests). \u00a0I have and it looks good though I admit I'm confused by this URP as to when exactly it's doing a \"primitiveEstimate\" vs doing a \"fastEstimate\" (that isn't necessarily primitive). \u00a0Two of the instanceof dispatches look similar (fastEstimate(obj) and inside the loop of fastEstimate(map ).\u00a0 Hey BTW line 115 could be changed to loop on the SolrInputFields instead of the field names to avoid doing an internal hashmap lookup on all field names. ",
            "author": "David Smiley",
            "id": "comment-16496048"
        },
        {
            "date": "2018-06-04T06:46:16+0000",
            "content": "David Smiley In fastEstimate(map) and fastEstimate(collection) we only count its element if it is a primitive object (we do not go further here).\nline 115 could be changed to loop on the SolrInputFields instead of the field names to avoid doing an internal hashmap lookup on all field names.\n+1 for this one.\n\nWith the change in pull request, we can change fastEstimate to estimate and merge\u00a0all the duplications. ",
            "author": "Cao Manh Dat",
            "id": "comment-16499819"
        },
        {
            "date": "2018-06-08T04:18:52+0000",
            "content": "I took your PR and ran with it a bit further; patch attached.  I had a stupid bug that took some time to debug so I wasn't ready till now.  I'm running tests but so far so good.\n\n\n\tMoved/added javadocs to SolrDocumentBase instead of subclass impls RE child docs.  I added a bit more info to them and made getChildDocumentCount deprecated.\n\tIngoreLargeDocumentProcessorFactory: ensured the value side of estimate(map) uses the recursive estimate() instead of the non-recursive primitiveEstimate().\n\n\n\nAddUpdateCommand:\n\n\tpending nocommit that getLuceneDocument(inPlaceUpdate) is in fact always == isInPlaceUpdate() so this parameter is not needed and I think we can get rid of this overloaded variant.\n\trename: getLuceneDocsIfNested  (to balance with getLuceneDocument).  Added javadocs.\n\tthis method now returns Iterable<Document> and null if it turns out there is no nesting.  This solves some awkwardness in exposing SolrInputDocument type to the UpdateHandler which we don't want.\n\trename: recUnwrap... to flatten\n\tmoved isUsableForChildDocs check to getLuceneDocsIfNested where (to me) it seems nicer)\n\n\n\nDirectUpdateHandler2:\n\n\tupdateDocOrDocValues now has a simpler method contract; it's caller doesn't need to pass the \"updateTerm\" as it did originally, and improved from the last patch we return void not the idTerm.  doNormalUpdate had \"cmd.updateTerm\" (signature dedupe) logic that needed the idTerm & updateTerm which was why earlier I thought to return it but after some examination I think it's better if this logic was absorbed into updateDocOrDocValues.  I inlined updateDocument() into updateDocOrDocValues \u2013 ultimately trying to make the code path and scope of idTerm/updateTerm more clear and I'm pretty happy with it.   Note \"inline\" is a verb used in coding (and can be found in IDE's for example); you earlier mistook my suggestion as a suggestion to rename a method.\n\n\n\nLooking again at SolrTestCaseJ4.compareSolrInputDocument... maybe this logic ought to go on SolrInputDocument or better SolrDocumentBase as equals()?  If it were moved there, you wouldn't have even needed to make the change you did, and thus it'd be simpler and more obvious \u2013 why should one have to know SolrTestCaseJ4.compareSolrInputDocument exists.  Heck, I can argue that SolrDocumentBase doesn't meet the contract of the Map it implements since a Map's equals() demands it actually works!  (hashcode too) ",
            "author": "David Smiley",
            "id": "comment-16505685"
        },
        {
            "date": "2018-06-08T17:06:06+0000",
            "content": "New patch:\n\n\n\tremoved overloaded getLuceneDocument(isInplaceUpdate) since we can simply call IsInPlaceUpdate() internally\n\tAdded \"ignoreNestedDocs\" flag to DocumentBuilder.toDocument() to toggle wether it throws an exception or ignores them.  Further, AddUpdateCommand.getLuceneDocsIfNested() now checks this early and returns null instead of throwing an exception later in this method.\n\n\n\nI left the document equality issue for another time, commenting on SOLR-5265: https://issues.apache.org/jira/browse/SOLR-5265?focusedCommentId=16506268&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16506268\n\nI think this is ready.  The tests pass, and precommit is running now.  What do you think mosh?  How should I refer to you in CHANGES.txt? ",
            "author": "David Smiley",
            "id": "comment-16506274"
        },
        {
            "date": "2018-06-10T05:36:10+0000",
            "content": "What do you think mosh? How should I refer to you in CHANGES.txt?\nI like it, this patch looks ready.\n You can simply refer to me as Moshe Bla. ",
            "author": "mosh",
            "id": "comment-16507255"
        },
        {
            "date": "2018-06-11T14:48:52+0000",
            "content": "Commit 8095139da3598e9f76c8d960855535553b753ee9 in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=8095139 ]\n\nSOLR-12361: Allow nested child documents to be in field values of a SolrInputDocument.\n\n\tAddUpdateCommand and it's relationship with DirectUpdateHandler2 was reworked substantially.\n\n\n\nFixes #385 ",
            "author": "ASF subversion and git services",
            "id": "comment-16508160"
        },
        {
            "date": "2018-06-11T14:54:14+0000",
            "content": "Commit 7744162905e3d9c613262c23c242d238596d058f in lucene-solr's branch refs/heads/branch_7x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7744162 ]\n\nSOLR-12361: Allow nested child documents to be in field values of a SolrInputDocument.\n\n\tAddUpdateCommand and it's relationship with DirectUpdateHandler2 was reworked substantially.\n\n\n\nFixes #385\n\n(cherry picked from commit 8095139) ",
            "author": "ASF subversion and git services",
            "id": "comment-16508171"
        },
        {
            "date": "2018-06-11T15:01:19+0000",
            "content": "Note: We accidentally took this issue in a different direction than the original title/description called for instead of doing that under another issue which already existed SOLR-12383.  So I deleted that other issue, and edited this issue to reflect the path taken.\n\nThanks for contributing Moshe! ",
            "author": "David Smiley",
            "id": "comment-16508185"
        },
        {
            "date": "2018-06-14T16:00:28+0000",
            "content": "We have a bug in AddBlockUpdateTest, NPE in getNewClock. \u00a0Something is null in this chain: return h.getCore().getUpdateHandler().getUpdateLog().getVersionInfo().getNewClock();\n\n-Dtests.seed=1D7D12D76FA3B2BF\n\n\u00a0Can you please look mosh? ",
            "author": "David Smiley",
            "id": "comment-16512676"
        },
        {
            "date": "2018-06-18T23:32:14+0000",
            "content": "Another failing seed from https://jenkins.thetaphi.de/job/Lucene-Solr-7.x-Linux/2137/:\n\n\n  [junit4]   2> NOTE: reproduce with: ant test  -Dtestcase=AddBlockUpdateTest -Dtests.method=testExceptionThrown -Dtests.seed=5A413468F2535FB2 -Dtests.multiplier=3 -Dtests.slow=true -Dtests.badapples=true -Dtests.locale=ha-NE -Dtests.timezone=Europe/London -Dtests.asserts=true -Dtests.file.encoding=UTF-8\n  [junit4] ERROR   0.01s J2 | AddBlockUpdateTest.testExceptionThrown <<<\n  [junit4]    > Throwable #1: java.lang.NullPointerException\n  [junit4]    > \tat __randomizedtesting.SeedInfo.seed([5A413468F2535FB2:254BCC42439D188F]:0)\n  [junit4]    > \tat org.apache.solr.update.AddBlockUpdateTest.id(AddBlockUpdateTest.java:703)\n  [junit4]    > \tat org.apache.solr.update.AddBlockUpdateTest.block(AddBlockUpdateTest.java:633)\n  [junit4]    > \tat org.apache.solr.update.AddBlockUpdateTest.testExceptionThrown(AddBlockUpdateTest.java:243)\n  [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n  [junit4]    > \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n  [junit4]    > \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n  [junit4]    > \tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n  [junit4]    > \tat java.base/java.lang.Thread.run(Thread.java:844)\n\n ",
            "author": "Steve Rowe",
            "id": "comment-16516462"
        },
        {
            "date": "2018-06-19T04:13:12+0000",
            "content": "I committed a fix to master & branch_7x https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;a=commit;h=f5508505f2ddec5f96d0d7fcb5980243d41d1df4\u00a0that simply doesn't set the version in\u00a0indexSolrInputDocumentsDirectly since it didn't seem pertinent to the test. \u00a0Apparently randomly there is no updateLog to get the \"clock\" from, which led to an NPE.\n\nThe failure Steve mentioned RE NPE in id() is I think a side-effect of other failing tests involving a race condition on afterClass() that nulls out the \"counter\" to generate IDs. \u00a0So it's a red herring, in other words. \u00a0I don't actually know how this could happen (shouldn't all test methods complete before beforeClass is run?) but we can watch for future failures\u00a0to see if this occurs again. ",
            "author": "David Smiley",
            "id": "comment-16516637"
        },
        {
            "date": "2018-08-13T08:37:46+0000",
            "content": "\u00a0Hi, I see that the CHANGES entry for this is listed under \"Other Changes\". However I think it should be moved under \"New Features\". ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16577961"
        },
        {
            "date": "2018-08-13T16:18:50+0000",
            "content": "Okay; there are really a set of issues that are all related that together comprise a new feature but alone are internal plumbing that may be confusing to read by itself.  That's my thinking on why these are in \"Other\".  I could add a new \"New Features\" item once we have a 7.5 feature freeze that summarizes the net effect of the issues. ",
            "author": "David Smiley",
            "id": "comment-16578554"
        },
        {
            "date": "2018-08-13T16:22:55+0000",
            "content": "+1 Think that makes it easier to read changes, and easier for the RM to author release notes ",
            "author": "Jan H\u00f8ydahl",
            "id": "comment-16578562"
        },
        {
            "date": "2018-09-12T19:48:51+0000",
            "content": "In the attach patch \"ref_guide.patch\" suffix, I gathered together issues related to nested docs including this one under \"New Features\". \u00a0I tweaked the wording a little. \u00a0I then updated \"uploading-data-with-index-handlers.adoc\" to show the old (anonymous) and new (labelled) way of associating docs in XML & JSON. Cassandra Targett could you please review? \u00a0I hope this isn't too late for 7.5. ",
            "author": "David Smiley",
            "id": "comment-16612654"
        },
        {
            "date": "2018-09-12T20:32:35+0000",
            "content": "I think the patch is good and helps explain\u00a0this type of documents in\u00a0better detail. The only change I would make is to change the heading \"Schema notes\" to capitalize \"notes\" -> \"Notes\" for headline case in our section titles. ",
            "author": "Cassandra Targett",
            "id": "comment-16612698"
        },
        {
            "date": "2018-09-12T21:34:36+0000",
            "content": "Commit 6e8c05f6fe083544fb7f8fdd01df08ac54d7742e in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6e8c05f ]\n\nSOLR-12361: ref guide changes & CHANGES.txt organization ",
            "author": "ASF subversion and git services",
            "id": "comment-16612763"
        },
        {
            "date": "2018-09-12T21:35:35+0000",
            "content": "Commit 136f0fee5b1c27047a14c2aa9fc89c23eb69fa08 in lucene-solr's branch refs/heads/branch_7x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=136f0fe ]\n\nSOLR-12361: ref guide changes & CHANGES.txt organization\n\n(cherry picked from commit 6e8c05f6fe083544fb7f8fdd01df08ac54d7742e) ",
            "author": "ASF subversion and git services",
            "id": "comment-16612765"
        },
        {
            "date": "2018-09-12T21:37:01+0000",
            "content": "Commit c19dc51e93ff3e11b975e557a7431e188ec007f9 in lucene-solr's branch refs/heads/branch_7_5 from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=c19dc51 ]\n\nSOLR-12361: ref guide changes & CHANGES.txt organization\n\n(cherry picked from commit 6e8c05f6fe083544fb7f8fdd01df08ac54d7742e) ",
            "author": "ASF subversion and git services",
            "id": "comment-16612767"
        },
        {
            "date": "2018-09-14T03:30:22+0000",
            "content": "Commit 6e8c05f6fe083544fb7f8fdd01df08ac54d7742e in lucene-solr's branch refs/heads/jira/http2 from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=6e8c05f ]\n\nSOLR-12361: ref guide changes & CHANGES.txt organization ",
            "author": "ASF subversion and git services",
            "id": "comment-16614310"
        }
    ]
}