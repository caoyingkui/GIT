{
    "id": "SOLR-12185",
    "title": "Can't change Single Valued field to Multi Valued even by deleting/readding",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "Schema and Analysis"
        ],
        "type": "Bug",
        "fix_versions": [],
        "affect_versions": "7.1",
        "resolution": "Information Provided",
        "status": "Closed"
    },
    "description": "Changing a single-valued field to multi-valued field with doc values breaks things.\u00a0 This doesn't matter if you change the field or do a complete delete and re-add of the field.\u00a0 The only way I have found to \"fix\" this is to delete the entire core from disk and re-add it.\nSteps to replicate:\n\n\tCreate a field, make it single valued with doc values\n\tIndex a couple of docs\n\tDelete the field\n\tAdd the field again with the same name, but change it to multiValued\n\tTry indexing a couple of docs\n\n\n\nExpected result:\n\nThe documents are indexed correctly and there are no issues\nActual outcome:\n\nThe documents refuse to be indexed and you see this in the logs:\n\norg.apache.solr.common.SolrException: Exception writing document id 6a3226c8-c904-40d7-aecb-76c3515db7b8 to the index; possible analysis error: cannot change DocValues type from SORTED to SORTED_SET for field \"example_field\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:221)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.processor.RunUpdateProcessor.processAdd(RunUpdateProcessorFactory.java:67)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.processor.DistributedUpdateProcessor.doLocalAdd(DistributedUpdateProcessor.java:991)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.processor.DistributedUpdateProcessor.versionAdd(DistributedUpdateProcessor.java:1207)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.processor.DistributedUpdateProcessor.processAdd(DistributedUpdateProcessor.java:753)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.processor.LogUpdateProcessorFactory$LogUpdateProcessor.processAdd(LogUpdateProcessorFactory.java:103)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.processor.AddSchemaFieldsUpdateProcessorFactory$AddSchemaFieldsUpdateProcessor.processAdd(AddSchemaFieldsUpdateProcessorFactory.java:474)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.processor.FieldNameMutatingUpdateProcessorFactory$1.processAdd(FieldNameMutatingUpdateProcessorFactory.java:74)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.processor.FieldMutatingUpdateProcessor.processAdd(FieldMutatingUpdateProcessor.java:118)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(UpdateRequestProcessor.java:55)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.processor.AbstractDefaultValueUpdateProcessorFactory$DefaultValueUpdateProcessor.processAdd(AbstractDefaultValueUpdateProcessorFactory.java:91)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.handler.dataimport.SolrWriter.upload(SolrWriter.java:80)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.handler.dataimport.DataImportHandler$1.upload(DataImportHandler.java:257)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:527)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:415)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:330)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:233)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:415)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:474)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.handler.dataimport.DataImporter.lambda$runAsync$0(DataImporter.java:457)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at java.lang.Thread.run(Thread.java:748)\nCaused by: java.lang.IllegalArgumentException: cannot change DocValues type from SORTED to SORTED_SET for field \"example_field\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.lucene.index.FieldInfos$FieldNumbers.verifyConsistent(FieldInfos.java:293)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.lucene.index.FieldInfos$FieldNumbers.setDocValuesType(FieldInfos.java:341)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.lucene.index.DefaultIndexingChain.indexDocValue(DefaultIndexingChain.java:524)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:466)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:392)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:239)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:481)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1717)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.DirectUpdateHandler2.updateDocument(DirectUpdateHandler2.java:960)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.DirectUpdateHandler2.updateDocOrDocValues(DirectUpdateHandler2.java:949)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.DirectUpdateHandler2.doNormalUpdate(DirectUpdateHandler2.java:329)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.DirectUpdateHandler2.addDoc0(DirectUpdateHandler2.java:266)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 at org.apache.solr.update.DirectUpdateHandler2.addDoc(DirectUpdateHandler2.java:216)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ... 32 more",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2018-04-04T03:24:55+0000",
            "content": "Changing the multiValued setting on a field with existing data that includes docValues requires getting rid of the entire index and building it again.\n\nThis behavior comes from Lucene, not Solr.  Lucene saves certain information about the docValues into the index, and once it's there, it can't be changed.  There's nothing we can do in Solr to fix this behavior.\n ",
            "author": "Shawn Heisey",
            "id": "comment-16424936"
        },
        {
            "date": "2018-04-04T04:06:28+0000",
            "content": "Should I raise this with Lucene then? ",
            "author": "Cetra Free",
            "id": "comment-16424961"
        },
        {
            "date": "2018-04-04T21:06:15+0000",
            "content": "I've attempted to ask on the #lucene IRC channel whether this is something they could fix.  I didn't get an answer.  You could try and get it fixed on the Lucene side, but I think there's a good chance that they'll say it can't be fixed, because you already have data in the index with one docValues designation.  I bet they'll say that you can't add more data with a different designation until that previous data is entirely gone.  Not just deleted \u2013 but GONE.  Deleted docs are only marked as deleted. ",
            "author": "Shawn Heisey",
            "id": "comment-16426167"
        },
        {
            "date": "2018-04-04T22:44:55+0000",
            "content": "I've raised this as a ticket to see if it gets traction: https://issues.apache.org/jira/browse/LUCENE-8235\n\nIt would be nice if you could fully purge a field when you delete it, rather than facebook it and just mark it as deleted but keep it around  ",
            "author": "Cetra Free",
            "id": "comment-16426285"
        },
        {
            "date": "2018-04-04T23:11:15+0000",
            "content": "It would be nice if you could fully purge a field when you delete it\n\nChanges to the schema make ZERO changes to the Lucene index.  Lucene doesn't know about the concept of a schema.  Solr can't purge anything when you delete a field, because it NEVER changes the index based on schema changes.\n\nAlso, Solr isn't even aware that you've changed the schema.  When you restart Solr or reload indexes to make a schema change active, all information about the previous schema is gone.  It only knows about the schema that's present right at that moment. ",
            "author": "Shawn Heisey",
            "id": "comment-16426311"
        },
        {
            "date": "2018-04-04T23:27:27+0000",
            "content": "Solr can't purge anything when you delete a field, \n\nFollowup on this point:\n\nYou can't just delete a field in a Lucene index.  Reindexing every document containing that field (and making sure that the field is NOT in the new document) would be required.  Reindexing a document involves marking the old copy as deleted and indexing a new copy, so you've got the same issue \u2013 old versions with that field are STILL in the index, unless you force a merge of the entire index to purge deleted documents.\n\nSolr uses the term \"optimize\" for what Lucene has renamed to forceMerge.  That operation can quite literally take hours, and the I/O required can affect performance drastically, so it's NOT something you want to happen automatically. ",
            "author": "Shawn Heisey",
            "id": "comment-16426322"
        }
    ]
}