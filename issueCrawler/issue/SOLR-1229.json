{
    "id": "SOLR-1229",
    "title": "deletedPkQuery feature does not work when pk and uniqueKey field do not have the same value",
    "details": {
        "affect_versions": "1.4",
        "status": "Closed",
        "fix_versions": [
            "1.4"
        ],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "Problem doing a delta-import such that records marked as \"deleted\" in the database are removed from Solr using deletedPkQuery.\n\nHere's a config I'm using against a mocked test database:\n\n\n<dataConfig>\n <dataSource driver=\"com.mysql.jdbc.Driver\" url=\"jdbc:mysql://localhost/db\"/>\n <document name=\"tests\">\n   <entity name=\"test\"\n           pk=\"board_id\"\n           transformer=\"TemplateTransformer\"\n           deletedPkQuery=\"select board_id from boards where deleted = 'Y'\"\n           query=\"select * from boards where deleted = 'N'\"\n           deltaImportQuery=\"select * from boards where deleted = 'N'\"\n           deltaQuery=\"select * from boards where deleted = 'N'\"\n           preImportDeleteQuery=\"datasource:board\">\n     <field column=\"id\" template=\"board-${test.board_id}\"/>\n     <field column=\"datasource\" template=\"board\"/>\n     <field column=\"title\" />\n   </entity>\n </document>\n</dataConfig>\n\n\n\nNote that the uniqueKey in Solr is the \"id\" field.  And its value is a template board-<PK>.\n\nI noticed the javadoc comments in DocBuilder#collectDelta it says \"Note: In our definition, unique key of Solr document is the primary key of the top level entity\".  This of course isn't really an appropriate assumption.",
    "attachments": {
        "tests.patch": "https://issues.apache.org/jira/secure/attachment/12412010/tests.patch",
        "SOLR-1229.patch": "https://issues.apache.org/jira/secure/attachment/12411304/SOLR-1229.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Erik Hatcher",
            "id": "comment-12721264",
            "date": "2009-06-18T13:55:58+0000",
            "content": "Maybe the pk field returned from deletedPkQuery should be run through the transformation process on the uniqueKey (id in this case) field to get the actual value?? "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12721349",
            "date": "2009-06-18T17:15:58+0000",
            "content": "there is a huge problem w/ the current implementation.\nThe whole delta-import process is built like an after thought. I wish to revamp the whole design. so that all the rows returned, deletedPkQuery or deltaQuery etc should also go through the transformations "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12722128",
            "date": "2009-06-20T03:04:36+0000",
            "content": "FYI - some prior discussion on solr-user too: http://www.lucidimagination.com/search/document/b8ef8e2e9e1de005/pk_vs_uniquekey_with_dih_delta_import, about trying \"select concat('board-',board_id)  \nfrom boards where deleted = 'Y'\", to no avail.\n\n "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12722150",
            "date": "2009-06-20T08:24:27+0000",
            "content": "Erik plz let me know if this helps.\n "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12722258",
            "date": "2009-06-20T20:05:42+0000",
            "content": "Someone with magic powers, please mark this as \"to be fixed in Solr 1.4\". "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12722266",
            "date": "2009-06-20T22:02:17+0000",
            "content": "Noble - that looks like the right thing to add for delta queries, but that didn't help with the deleted one.  I've attached a patch that fixes things in my limited test.  \n\nWe really need to add some unit tests for this - tricky business though.  Lance - do you have some unit tests to add that shows it broken and then fixed with this patch? "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12722333",
            "date": "2009-06-21T10:20:39+0000",
            "content": "Erik, the fix is not right\n\nsee this\n\nkey = map.get(dataImporter.getSchema().getUniqueKeyField().getName());\n\n\n\nThe name of the uniqueKey field in the scema and the one you have in the map does not have to be same. DIH really gives you an option for it to be different. The attribute 'pk' is only used for this purpose.  "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12722345",
            "date": "2009-06-21T12:03:27+0000",
            "content": "Noble - they do have to be the same, and that is why applying the transformations as you patched is part of the right answer.  But in order to call writer.deleteDoc(key) in DocBuilder#deleteAll it must use the value of the uniqueKey field, not of the pk one.  That is the crux of the issue here.  In my case, in the example at the top of this issue, the pk field is board_id with a value of \"1\", and the id field after applying transformations is \"board-1\".  The delete-by-id to Solr must be done using value \"board-1\" and that is only obtained by looking up the uniqueKey field (id in this example) from the schema and pulling it from the map.\n\nThe latest patch I supplied worked in my test case and I analyzed it through a debugger.  "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12722354",
            "date": "2009-06-21T13:06:06+0000",
            "content": "But in order to call writer.deleteDoc(key) in DocBuilder#deleteAll it must use the value of the uniqueKey field, not of the pk one\n\n\nWhy can't you keep the uniqueKey same as pk  as shown below(it is not used anywhere else (yes there is one other place which is gonna be deprecated) ) . That should solve the problem. DIH is agnostic of the solr primary key . The point is that , the key name does not matter only the value matters . As long as the value is correct, delete should work automatically . \n\nthe following should be just fine\n\n<entity name=\"test\"\npk=\"id\"\n...\n\n\n "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12722359",
            "date": "2009-06-21T14:44:20+0000",
            "content": "If the pk attribute is not used, then let's just remove it altogether.  DIH should NOT be agnostic to Solr's uniqueKey field though - and it would be silly to mandate users duplicate the uniqueKey setting as DIH pk values when it can just be gotten from the schema.  So -1 to misusing a pk-named attribute this way, when the most intuitive interpretation would be that pk is the Primary Key of the table being indexed.\n "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12722363",
            "date": "2009-06-21T15:03:11+0000",
            "content": "Here's another patch that removes references to pk from DocBuilder#deleteAll.  \n\nI've just looked for uses of pk myself, and indeed it seems it should be removed.  DIH must know and use the uniqueKey field from the schema for updates/deletes - there is no reason for DIH configs to have to specify it again. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12722364",
            "date": "2009-06-21T15:04:42+0000",
            "content": "In my latest patch, I added a comment with a question about the use of the loop in deletelAll.  I don't see why it is needed.  Noble? "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12722427",
            "date": "2009-06-21T21:11:20+0000",
            "content": "There are two bugs in this issue:\n\n1) The deletedPkQuery must say \"select field from table\". It may not say \"select expression\" or \"select field AS FIELD from table\". The former does not work and the latter may work with some databases and not others.  In other words, the first example works and the others fail:\n\n    deletedPkQuery=\"select id from item where EXPRESSION\"\n    deletedPkQuery=\"select concat('',id) from item where EXPRESSION\"\n    deletedPkQuery=\"select id from item AS ID where EXPRESSION\"\n    deletedPkQuery=\"select id from item AS ITEM.ID where EXPRESSION\"\n\n2) If a template is used to format the contents of the Solr primary key, that template is declared at the <field> level and is not visible in the parent <entity> level. Since the deletedPkQuery is declared in the <entity> level, it cannot see the field's template. Thus the template cannot be applied to the results of the deletedPkQuery. Any formatting in the <field> template must be duplicated (in SQL syntax) in the deletedPkQuery. \n\nThis is workaround that achieves the goal of #2: if the Solr primary key is declared as\n\n    <field name=\"id\" template=\"prefix-${item.id}\"\n\nthen the deletedPkQuery must be declared as\n\n    deletedPkQuery=\"select concat('prefix',id) from item where EXPRESSION\"\n\nBecause of bug #1, it is not possible to use this workaround.\n\nThe attached patch fixes bug #1, making it possible to use the workaround. It is Erik's second patch but only with the fix for bug #1. It does not create an automatic way for results of deletedPkQuery to be formatted with the primary key's template.\n "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12722441",
            "date": "2009-06-22T00:26:46+0000",
            "content": "Lance - your patch misses the all important EntityProcessorWrapper.java changes that both Noble and I contributed in our patches.  That's needed to make this work! "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12722443",
            "date": "2009-06-22T00:38:50+0000",
            "content": "I've retested my last patch and all works fine in my single record simple test case using the exact configuration (and MySQL DB) as posted here.  I do a full-import, one record goes in.  I do change deleted to 'Y' and do a delta-import and the document is removed from Solr.\n\nLance - please fall back to my last patch - the applyTransformer call in EntityProcessorWrapper#nextDeletedRow that I added is crucial.  It gives an id=board-1 value which is then used for deletion in DocBuilder#deleteAll. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12722473",
            "date": "2009-06-22T03:48:00+0000",
            "content": "If the pk attribute is not used, then let's just remove it altogether.....\n\nhi Erik. you got me wrong.   Let me try to explain. There are two potential names for a field one is the 'column' and other is the 'name'\n\n'column' is the name of the field in the source or in DIH. The 'name' is the name of that field in Solr.  DIH uses the 'name' attribute only when it writes the field to Solr. \n\nThe relation ship between 'pk' attribute and the '<uniqueKey>' in Solr  is same . The distinction is important . Otherwise the user will be forced to use the same name in both the db and solr (assuming no transformations are done).  "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12722495",
            "date": "2009-06-22T07:14:38+0000",
            "content": "Yup, I've deleted my patch. After a lot more examination of the code, and combinatoric testing, I see why it works and is the right fix for this incarnation of the DIH.\n\nAnd, yes, unit tests for more of these options are on the way! "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12722921",
            "date": "2009-06-23T01:19:25+0000",
            "content": "Noble - I'm not following your explanation here.  The pk attribute seems like it should simply be removed (and the usages of it refactored to use Solr's uniqueKey setting when doing updated/deleted activities - that's the key to the Solr docs after all).\n\nRegarding 'column'/'name' - there are cases where it is quite confusing - where column is used to specify the Solr field name - and that feels wrong to me.  'name' should always be the Solr name, and if it is a templated field, it should be 'name'/'template' not 'column'/'template', for example.   \n "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12722922",
            "date": "2009-06-23T01:21:11+0000",
            "content": "I plan on committing this patch later this week.  It fixes the problems we've had.   Please review and comment further if there are still holes... but we really should be discussing this with unit tests.  I hope to see some of those this week from Lance. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12722956",
            "date": "2009-06-23T04:17:51+0000",
            "content": "he pk attribute seems like it should simply be removed \n\nThe pk attribute IS REQUIRED  for this use case. I guess the solution to your problem is that you set the pk correct as the name you find in the \"source row\" map. if we remove it every user will be forced to keep the uniquekey same as the name it has in the source DB.\n\nTake the following usecase\n\n\n   <entity name=\"test\"\n           pk=\"db_id\"\n           deletedPkQuery=\"select db_id from boards where deleted = 'Y'\">\n     <field column=\"db_id\" name=\"solr_id\"/>\n   </entity>\n\n\n\nelsewhere in solrconfig.xml\n\n\n<uniqueKey>solr_id</uniqueKey>\n\n\n\n\n\nif you omit that pk attributethis will fail "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12723393",
            "date": "2009-06-24T01:05:49+0000",
            "content": "The pk attribute currently is used to track only modified/deleted records during a delta-import.  But only the uniqueKey setting makes sense, and that will get mapped from the transformations applied.  I fail to see how removing pk (and of course refactoring its current uses to the uniqueKey value) will cause problems.  The only thing that matters here is that transformations are applied such that the uniqueKey field value is accurate.  There is nothing in what I'm suggesting here that makes the DB primary key field match the Solr uniqueKey field name.  \n\nAgain, tests are really required so we can be sure we have the bases covered, but it's been tested pretty thoroughly that my patch fixes a serious issue. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12723427",
            "date": "2009-06-24T04:27:25+0000",
            "content": "hi Erik it works in your case , But the usecase I have given above (which is a more normal usecase)\n\nlet me explain with the above example . \n\n\n// this code is  taken from your patch\n SchemaField uniqueKeyField = dataImporter.getSchema().getUniqueKeyField();\n// now the value of uniqueKeyField is 'solr_id'\n if (uniqueKeyField == null) return;\n Object key = map.get(uniqueKeyField.getName());\n //the map contains {\"db_id\"-> \"12345\"}\n //so key == null; and it will do nothing and return\n // on the contrary if you set the pk=\"db_id\" , then it works\n\n\n\n\n\n\n "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12724391",
            "date": "2009-06-26T05:45:28+0000",
            "content": "committed r788587 "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12724462",
            "date": "2009-06-26T10:28:51+0000",
            "content": "Noble - I don't really appreciate you committing a partial patch of this.  What you committed requires us to set pk=\"id\", which is just silly and nonsensical.  I'm opening this back up to continue to fix this awkward area of DIH.   "
        },
        {
            "author": "Shalin Shekhar Mangar",
            "id": "comment-12724471",
            "date": "2009-06-26T10:58:33+0000",
            "content": "Erik, the most common use-case as far as I have seen is that the primary key in tables is different from the uniqueKey in Solr (think about multiple tables with each having a root-entity). Yes, the pk can be transformed (or one can alias it in sql) but this being the most common use-case, I feel pk should be kept as-is.\n\nLet me give a few possible cases \n\n\tThe name of table's primary key is different from solr's unique key name and the deletedPkQuery returns only one column (most common use-case)\n\tThe name of table's primary key is different from solr's unique key name and the deletedPkQuery returns multiple columns\n\tThe name of table's primary key is same as solr's unique key name and the deletedPkQuery returns only one column\n\tThe name of table's primary key is same as solr's unique key name and the deletedPkQuery returns multiple columns\n\n\n\nFor #1 'pk' does not matter because we can use the single columns coming back from deletedPkQuery\nFor #2, 'pk' is required otherwise the user is forced to use a transformer (or alias). For non-database use-cases (there is none right now), there is no aliasing so the user must write a transformer\nFor #3, neither 'pk' nor 'uniqueKey' matters\nFor #4, we can use solr's uniqueKey name (I guess this is your use-case?). I think that this is a rare use-case.\n\nIf at all, we decide to go with uniqueKey only, the right way to do that would be to use the corresponding column-mapping for looking up the unique key. For the example below, we should use \"db-id\" to lookup in the map returned by deletedPkQuery if solr-id is the uniqueKey in solr:\n\n<field column=\"db-id\" name=\"solr-id\" />\n\n\n\nHowever, even though the above approach is the 'right' one, it is very tricky and hard to explain to users. Also, there could be multiple columns mapped to same solr key (think about template for unique key for 'types' of documents based on a flag column). This may be very error-prone.\n\nWhat do you think? "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12724780",
            "date": "2009-06-27T01:06:58+0000",
            "content": "In all of those cases, as long as what is returned from the query and run through transformations ends up with a key in the map that is the same as the uniqueKey setting in schema.xml, then all is fine.  I still don't see a need to set pk=\"solr-id\".  Won't there always be a uniqueKey-named key in that map after transformations are applied?  uniqueKey definitely matters... that's the field that must be used for deletions, and what I'm consistently seeing mentioned here is that you want to duplicate that by saying pk=\"<uniqueKeyFieldName>\", which is unnecessary duplication.  When would you set pk to anything else?\n\nIt'll be later next week at the earliest, but I hope to get some unit tests contributed so we can discuss this topic through tests rather than prose.\n\nMy use case is exactly the config at the top of this issue, where the uniqueKey value is a templated transformation (because of multiple DIH configurations bringing in various data sources, so the  unique key value must be fabricated to be guaranteed to be unique across different datasources that may have the same primary keys in the databases) - this corresponds to your #1. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12724803",
            "date": "2009-06-27T05:35:22+0000",
            "content": "don't really appreciate you committing a partial patch of this\n\nI am sorry about this. But, my fix was good enough for the bug's description. I was planing to open another issue for this.\n\nEither we should change the descrption to , deprecate 'pk' or we can open another issue for the same.\nDIH works as intented to with this fix and the deprecation can be take up .\n\nWon't there always be a uniqueKey-named key in that map after transformations..\n\nThe assumption is that transformation is always done. My experience with ''DIH support says that users don't use it always.Transformer is just a addon .\n\nAnyway , the right fix would be to find out what is the right mapping in DIH for the given solr <uniqueKey> and use it as a pk. That can definitely be another jira issue\n\nyour thoughts? "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12724924",
            "date": "2009-06-28T05:10:27+0000",
            "content": "This patch contains two unit test files addressing the topics of this bug: \n1) database and Solr have different primary key names\n2) solr primary key value is processed with a template\n\nTestSqlEntityProcessorDelta.java does general tests of delta-import\n\nTestSqlEntityProcessorDelta2.java does the same tests with a different solr id name and a template for the solr id value.\n\nAlso, there was a mistake in the test fixture which caused delta imports to always empty the index first.\n\nI believe that these tests should work. Please make all changes necessary so that we have working unit tests for these features, and please change the wiki to match all syntax changes. "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12724925",
            "date": "2009-06-28T05:19:17+0000",
            "content": "Also, I recommend that a feature be removed: creating a deltaImportQuery if the user does not declare one. From the wiki:\n\n\"deltaImportQuery : (Only used in delta-import) . If this is not present , DIH tries to construct the import query by(after identifying the delta) modifying the 'query' (this is error prone). There is a namespace ${dataimporter.delta.<column-name>} which can be used in this query. e.g: select * from tbl where id=${dataimporter.delta.id}   Solr1.4.\"\n\nThe user should just be required to supply the deltaImportQuery. Now that the deltaImportQuery declaration exists, this \"helper feature\" is just a trap for the unwary. The phrase \"this is error prone\" is always a bad sign. "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12724987",
            "date": "2009-06-28T19:31:20+0000",
            "content": "Shalin, how can a deletedPkQuery return multiple columns? It is supposed to return a list of Solr uniqueKeys. These are then sent in with the Solr delete-by-id operation.\n "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12724990",
            "date": "2009-06-28T20:00:53+0000",
            "content": "Lance - the SQL query could return more than one column.   A bit non-sensical, but it could be specified that way.  SELECT * FROM BOARDS WHERE deleted='Y' for example.\n\nAnd no, it isn't supposed to return Solr uniqueKey id's!!!   That's the main crux of the dilemma here... how to jive what is returned from a SQL resultset with Solr unique keys. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12725126",
            "date": "2009-06-29T11:16:58+0000",
            "content": "Also, I recommend that a feature be removed: creating a deltaImportQuery if the user does not declare one. From the wiki: \n\nIt will be removed. But, we cannot remove it from the wiki until we release 1.4.  "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12725138",
            "date": "2009-06-29T11:49:09+0000",
            "content": "I believe that these tests should work.\n\nhi Lance, do the testcases run.? or we require some fix to make it work? I applied the patch and the testcases are failing "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12725629",
            "date": "2009-06-30T13:57:50+0000",
            "content": "Lance - I too get failures with your tests.  Here's one example:\n\njunit.framework.AssertionFailedError: query failed XPath: //*[@numFound='0'] xml response was: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<response>\n<lst name=\"responseHeader\"><int name=\"status\">0</int><int name=\"QTime\">1</int><lst name=\"params\"><str name=\"rows\">20</str><str name=\"start\">0</str><str name=\"q\">desc:hello OR XtestCompositePk_DeltaImport_replace_nodelete</str><str name=\"qt\">standard</str><str name=\"version\">2.2</str></lst></lst><result name=\"response\" numFound=\"1\" start=\"0\"><doc><arr name=\"desc\"><str>hello</str></arr><str name=\"id\">1</str><date name=\"timestamp\">2009-06-30T13:55:58.2Z</date></doc></result>\n</response>\n\n\tat org.apache.solr.util.AbstractSolrTestCase.assertQ(AbstractSolrTestCase.java:182)\n\tat org.apache.solr.util.AbstractSolrTestCase.assertQ(AbstractSolrTestCase.java:172)\n\tat org.apache.solr.handler.dataimport.TestSqlEntityProcessorDelta.testCompositePk_DeltaImport_replace_nodelete(TestSqlEntityProcessorDelta.java:194)\n\n "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12725810",
            "date": "2009-06-30T21:10:54+0000",
            "content": "I apologize, I did not put it clearly. \n\nYes, these tests do not work against the current code base. I believe they are correct tests for the features we have talked about in this issue, SOLR-1229. The code in these tests should work, when this bug is resolved. They will not work with the partial patch currently committed.\n\nThese tests are variations of the original test set. They handle two cases: 1) the solr uniqueKey has a different name than the DB primary key, and 2) the solr uniqueKey's value is a transformation of the DB primary key's value.\n\nIn other words, if your code actually works, and passes your by-hand tests, it should then pass all of these tests. If there is something wrong in these tests, please fix it.\n\nShould you wish to write further tests, the pre/post remove query features at present have no coverage. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12725926",
            "date": "2009-07-01T05:17:40+0000",
            "content": "The testcases are wrong.\n\ntake the case of testCompositePk_DeltaImport_empty()\n\nthe uniqueKey is 'solr_id' and there is no such field which maps to 'solr_id '\n\nsee the mapping\n\n<field column=\"id\" name=\"id\"/>\n\n\n\n "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12725948",
            "date": "2009-07-01T06:41:08+0000",
            "content": "Erik, the new fix\n\nThis eliminates the need for 'pk' most of the cases.  It tries to identify the corresponding column mapping for the solr uniqueKey.  But the user can override this by specifying the pk attribute if the guess is not going to be correct "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12727914",
            "date": "2009-07-07T04:50:48+0000",
            "content": "Erik, did you have a chance to look at the fix? "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12729657",
            "date": "2009-07-10T14:52:10+0000",
            "content": "Latest patch (adapted by Lance).  All tests pass and this will be committed shortly. "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12729660",
            "date": "2009-07-10T14:56:43+0000",
            "content": "Committed to r792963.  Thanks Lance and Noble for iterating on this.  We've at least got it working well enough for our current needs. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12729971",
            "date": "2009-07-11T10:42:49+0000",
            "content": "this fix does not allow the user to override the pk key name from the data-config.xml . The deduced key takes precedence. In most cases the pk attribute is not required, but when it is mentioned it should take precedence "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12730201",
            "date": "2009-07-13T03:24:55+0000",
            "content": "Noble-\n\nWith this change to DocBuilder.deleteAll(), the Delta2 test runs. With the code in the other order, the two delete operations do not work because the template is not applied. \n\nPlease alter this config file (from unit test Delta2) to embody the use case you mention. The database pk is 'id' and the schema pk is 'solr_id'.  And please describe the primary key design of the database and solr schemas.\n\n<dataConfig>\n  <document>\n     <entity name=\"x\" pk=\"id\" transformer=\"TemplateTransformer\"          \n         query=\"select * from x\"  \n         deletedPkQuery=\"select id from x where last_modified > NOW AND deleted='true'\" \n         deltaImportQuery=\"select * from x where id='${dataimporter.delta.id}'\"  \n         deltaQuery=\"select id from x where last_modified > NOW\">\n            <field column=\"solr_id\" template=\"prefix-${x.id}\"/>\n               <entity name=\"y\" query=\"select * from y where y.A='${x.id}'\">\n                  <field column=\"desc\" />\n               </entity>\n      </entity>\n   </document>\n</dataConfig> "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12730243",
            "date": "2009-07-13T07:40:37+0000",
            "content": "ideally , for your usecases , the pk attribute is not required. So i have removed it. Now it uses the user provided pk if it is not present it falls back to the solr schema uniqueKey "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12731780",
            "date": "2009-07-16T03:15:34+0000",
            "content": "Ok - these run. Thanks.\n\nJust to make sure I understand. The 'pk' attribute declares 2 things:  \n    1) that this column must exist for a document to be generated, and \n    2) that this entity is the level where documents are created. Is this true?\n\ntmpid appears as an unused name merely so that ${x.id} is sent into solr_id. Maybe name=\"\" would be more clear for this purpose?\n\nLance\n\n\n "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12732213",
            "date": "2009-07-16T22:37:22+0000",
            "content": "Something is documented on the wiki but not used: multiple PKs in one entity.\n\nOn the wiki page, see the config file after \"Writing a huge deltaQuery\" - there is a attribute: \n{pk=\"ITEM_ID, CATEGORY_ID\"}\nThere is code to parse this in DataImporter.InitEntity() and store the list in Entity.primaryKeys. But this list of PKs is never used.\n\nI think the use case for this is that the user requires more fields besides the uniqueKey for a document. Is this right? This is definitely on my list of must-have features. The second field may or may not be declared \"required\" in the schema, so looking at the schema is not good enough. The field has to be declared \"required\" in the dataconfig.\n\nLance\n\n(I split this comment out from the previous since they are not related. However, this is another feature inside the same bit of code upon which we are ceaselessly chewing.) "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12732433",
            "date": "2009-07-17T09:26:59+0000",
            "content": "1) that this column must exist for a document to be generated, and \nno,\n2) that this entity is the level where documents are created. Is this true?\nno: rootEntity decides that\n\npk is currently used for delete. XPathEntityProcessor also uses that to decode if this row is a candidate for a doc\n\nmultiple pk values were supported for deltas (to construct the deltaImportQuery when it is not present  ). That is going to be deprecated from 1.4.  "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12738816",
            "date": "2009-08-04T04:39:20+0000",
            "content": "I guess the latest patch can be committed and this issue can be closed "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12739377",
            "date": "2009-08-05T08:54:26+0000",
            "content": "I guess the fix was not done "
        },
        {
            "author": "Erik Hatcher",
            "id": "comment-12739424",
            "date": "2009-08-05T10:46:29+0000",
            "content": "Do you have a failing test case? "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12739444",
            "date": "2009-08-05T12:06:32+0000",
            "content": "Nope. The last current trunk  has changed an existing feature. The pk  attribute is ignored. that is why I have reopened it in the first place "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12739930",
            "date": "2009-08-06T07:48:27+0000",
            "content": "\nThere are a couple of other features to remove in this code:\n\n1) multiple primary keys\n2) deltaImportQuery is created automatically if it is not given in the dataconfig.xml file\n\nDo we want to attack all of those in this issue?\n\n\n "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12739948",
            "date": "2009-08-06T09:07:20+0000",
            "content": "Do we want to attack all of those in this issue?\n\nwe must remove them . Let us have a separate issue for them "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12740385",
            "date": "2009-08-07T03:40:00+0000",
            "content": "The Delta2 test handles both of the problems in this issue. Should this issue be closed? "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12740433",
            "date": "2009-08-07T07:15:26+0000",
            "content": "The issue is reopened because it breaks an existing functionality. The latest patch fixes that "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12746546",
            "date": "2009-08-23T02:57:57+0000",
            "content": "Noble, what is this broken functionality? \n\nI just did a full update and all unit tests work. If you describe the problem I will do the unit test and fix it. "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12746584",
            "date": "2009-08-23T10:30:11+0000",
            "content": "what is this broken functionality?\n\nTill this fix the user provided 'pk' was always honoured. Now, the derived pk can never be overridden. My latest patch has the fix and corresponding changes to the tests.  "
        },
        {
            "author": "Lance Norskog",
            "id": "comment-12747175",
            "date": "2009-08-25T01:45:33+0000",
            "content": "The latest patch works against the latest SVN checkout. Please commit it and close this issue.\n\nThanks! "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12747333",
            "date": "2009-08-25T09:54:49+0000",
            "content": "committed :r807537 "
        },
        {
            "author": "Grant Ingersoll",
            "id": "comment-12775779",
            "date": "2009-11-10T15:52:08+0000",
            "content": "Bulk close for Solr 1.4 "
        }
    ]
}