{
    "id": "SOLR-7073",
    "title": "Add an API to add a jar to a collection's classpath",
    "details": {
        "components": [],
        "type": "Sub-task",
        "labels": "",
        "fix_versions": [
            "5.1",
            "6.0"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Major"
    },
    "description": "The idea of having separate classloaders for each component may be counter productive.  This aims to add a jar dependency to the collection itself and each core belonging to that collection will have the jar in the classpath\n\nAs we load everything from the .system collection , we cannot make the core loading delayed till .system is fully loaded and is available . \n\nThere is a new  set of  config commands to manage the dependencies on a collection level. It is possible to have more than one jar as a dependency. The \"lib\" attribute is same as the blob name that we use in the blob store API\nexample:\n\ncurl http://localhost:8983/solr/collection1/config -H 'Content-type:application/json'  -d '{\n\"add-runtimelib\" : {\"name\": \"jarname\" , \"version\":2 },\n\"update-runtimelib\" :{\"name\": \"jarname\" ,\"version\":3},\n\"delete-runtimelib\" :\"jarname\" \n}' \n\n\n\nThe same is added to the overlay.json .\n\nThe default SolrResourceLoader does not have visibility to  these jars . There is a classloader that can access these jars which is made available only to those components which are specially annotated\n\nEvery pluggable component can have an optional extra attribute called runtimeLib=true, which means, these components are not be loaded at core load time. They are tried to be loaded on demand and if all the dependency jars are not available at the component load time an error is thrown . \n\nexample of registering a valueSourceParser which depends on the runtime classloader\n\ncurl http://localhost:8983/solr/collection1/config -H 'Content-type:application/json'  -d '{\n\"create-valuesourceparser\" : {\"name\": \"nvl\" ,\n\"runtimeLib\": true, \n\"class\":\"solr.org.apache.solr.search.function.NvlValueSourceParser , \n\"nvlFloatValue\":0.0 }  \n}'",
    "attachments": {
        "SOLR-7073_5x.patch": "https://issues.apache.org/jira/secure/attachment/12703426/SOLR-7073_5x.patch",
        "SOLR-7073.patch": "https://issues.apache.org/jira/secure/attachment/12701864/SOLR-7073.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-03-02T11:34:23+0000",
            "author": "Noble Paul",
            "content": "first cut ",
            "id": "comment-14343063"
        },
        {
            "date": "2015-03-02T17:56:13+0000",
            "author": "Noble Paul",
            "content": "This does a complete refactor of Solr's plugin loading because all components now need to be lazily loadable based on the extra flag. I would love to have extra eyes on this before it is too late. \n\nThere is a new class called PluginRegistry which is slightly more than our Map<String,Plugin>> .PluginRegistry takes care of loading the plugins at startup or lazily depending on the various attributes such as startup=\"lazy\" or runtimeLib=\"true\" . This patch gets rid of the Lazy loading wrappers we had for SolrRequestHandler and QueryResponseWriter ",
            "id": "comment-14343469"
        },
        {
            "date": "2015-03-02T19:15:21+0000",
            "author": "Noble Paul",
            "content": "with basic tests added and some bugs fixed ",
            "id": "comment-14343602"
        },
        {
            "date": "2015-03-03T16:47:07+0000",
            "author": "Noble Paul",
            "content": "more tests and cleanup ",
            "id": "comment-14345319"
        },
        {
            "date": "2015-03-05T17:47:16+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Thanks Noble. Some comments:\n\n\n\tI don't like that delete-runtimelib has just the name and not a json body. In future if we want to delete old versions of jars, how do we do that? Would it delete all versions? We should keep it consistent and have a json object as the value.\n\tMinor typos in JarRepository - s/decerease/decrease and s/getSytemCollReplica/getSystemCollReplica.\n\tWe should check for liveness as well inside getSystemCollReplica\n\tRecoveryStrategy has some code commented out. Is it not necessary anymore?\n\n/*if (handler instanceof LazyRequestHandlerWrapper) {\n      handler = ((LazyRequestHandlerWrapper) handler).getWrappedHandler();\n    }*/\n\n\n\tThe patch removes the disableExternalLib flag from RequestHandlers. Is that not needed anymore?\n\tCan we please rename SolrConfig.clsVsInfo to classVsInfo? and LazyRHHolder to LazyRequestHandlerHolder?\n\tWhy is LazyRHHolder required? There are other plugins which can be loaded from runtimeLib then what is special about request handlers to deserve their own class. Also LazyRHHolder asserts that the \"lib\" tag must also have \"version\" but other lazy plugins don't?\n\tA request handler loaded from runtimeLib is initialized from LazyRHHolder but a lazy handler loaded from regular jars is loaded via LazyPluginHolder? This is really confusing. Please consider better names for these class so that their purpose is clear. Some javadocs/comments won't hurt.\n\tRequestHandlers.initHandlersFromConfig used to call init on the handlers. I can't find where they are being initialized now.\n\n ",
            "id": "comment-14349158"
        },
        {
            "date": "2015-03-05T18:23:43+0000",
            "author": "Noble Paul",
            "content": "Thanks for the comments\n\nI don't like that delete-runtimelib has just the name and not a json body. In future if we want to delete old versions of jars, \n\nThere is one an only one version of a given jar that you can add to a collection. So, you can either delete or update\n\nMinor typos in JarRepository - s/decerease/decrease and s/getSytemCollReplica/getSystemCollReplica.\n\nsure\n\nWe should check for liveness as well inside getSystemCollReplica\n\nsure\n\nRecoveryStrategy has some code commented out. Is it not necessary anymore?\n\nWe no more have those Lazy Wrappers . What we have is LazyPluginHolder . When you do a get() for a plugin, you get a live instance. fully instantiated\n\nThe patch removes the disableExternalLib flag from RequestHandlers. Is that not needed anymore?\nThat is moved to PluginRegistry where it assumes a new name enable.runtime.lib\n\nCan we please rename SolrConfig.clsVsInfo to classVsInfo? and LazyRHHolder to LazyRequestHandlerHolder?\n\nsure\n\nWhy is LazyRHHolder required? \n\nIt was required because of the feature we released in 5.0 for a per request handler classloader. I'm going to remove that\n\nRequestHandlers.initHandlersFromConfig used to call init on the handlers. I can't find where they are being initialized now. \n\nIt all goes into PluginsRegistry . Initialization is done inside there ",
            "id": "comment-14349197"
        },
        {
            "date": "2015-03-07T05:49:30+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1664795 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1664795 ]\n\nSOLR-7073: test files required for the feature ",
            "id": "comment-14351428"
        },
        {
            "date": "2015-03-07T05:49:30+0000",
            "author": "Noble Paul",
            "content": "final patch ",
            "id": "comment-14351429"
        },
        {
            "date": "2015-03-07T05:58:07+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1664797 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1664797 ]\n\nSOLR-7073: Add an API to add a jar to a collection's classpath ",
            "id": "comment-14351433"
        },
        {
            "date": "2015-03-08T18:11:58+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1665063 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1665063 ]\n\nSOLR-7073: rename the .jar files to .jar.bin so that the build scripts don't fail ",
            "id": "comment-14352178"
        },
        {
            "date": "2015-03-08T20:23:55+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1665076 from Noble Paul in branch 'dev/trunk'\n[ https://svn.apache.org/r1665076 ]\n\nSOLR-7073: renamed PluginRegistry to PluginBag ",
            "id": "comment-14352232"
        },
        {
            "date": "2015-03-09T13:26:35+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1665228 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1665228 ]\n\nSOLR-7073: Add an API to add a jar to a collection's classpath, adding test files ",
            "id": "comment-14352963"
        },
        {
            "date": "2015-03-09T16:33:15+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1665295 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1665295 ]\n\nSOLR-7073:  Support adding a jar to a collections classpath ",
            "id": "comment-14353176"
        },
        {
            "date": "2015-03-15T02:34:31+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1666771 from Noble Paul in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1666771 ]\n\nSOLR-7073: accidentally deleted previos changes ",
            "id": "comment-14362150"
        },
        {
            "date": "2015-03-17T16:57:00+0000",
            "author": "Yonik Seeley",
            "content": "When I saw that this issue had changed how plugins (and lazy plugins) were loaded, I quickly checked to see if concurrency was still handled correctly for lazy loaded.  At first blush, it looks like a double-checked-locking race has been introduced.  I'll open another issue for this.\n\nWe need to be careful when changes have concurrency implications.  Are there other areas of these changes that should be reviewed? ",
            "id": "comment-14365513"
        },
        {
            "date": "2015-03-19T16:11:38+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1667799 from Yonik Seeley in branch 'dev/trunk'\n[ https://svn.apache.org/r1667799 ]\n\nSOLR-7262: fix broken thread safety for request handler registry introduced by SOLR-7073 ",
            "id": "comment-14369615"
        },
        {
            "date": "2015-03-19T16:14:25+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 1667803 from Yonik Seeley in branch 'dev/branches/branch_5x'\n[ https://svn.apache.org/r1667803 ]\n\nSOLR-7262: fix broken thread safety for request handler registry introduced by SOLR-7073 ",
            "id": "comment-14369622"
        },
        {
            "date": "2015-04-15T00:31:01+0000",
            "author": "Timothy Potter",
            "content": "Bulk close after 5.1 release ",
            "id": "comment-14495414"
        }
    ]
}