{
    "id": "SOLR-4948",
    "title": "Tidy up CoreContainer construction logic",
    "details": {
        "affect_versions": "None",
        "status": "Resolved",
        "fix_versions": [
            "4.4"
        ],
        "components": [],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Fixed"
    },
    "description": "While writing tests for SOLR-4914, I discovered that it's really difficult to create a CoreContainer.  There are a bunch of constructors which initialise different things, one (but only one!) of which also loads all the cores.  Then you have the Initializer object, which basically does the same thing.  Sort of.  And then the TestHarness doesn't actually use CoreContainer, but an anonymous subclass of CoreContainer which has it's own initialisation logic.  It would be nice to clean this up!",
    "attachments": {
        "SOLR-4948.patch": "https://issues.apache.org/jira/secure/attachment/12589087/SOLR-4948.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "author": "Alan Woodward",
            "id": "comment-13690389",
            "date": "2013-06-21T15:30:42+0000",
            "content": "Patch that does said tidying.\n\n1) Rationalizes the constructor to just taking a SolrResourceLoader and ConfigSolr object (plus various defaults).  None of the constructors load the cores.\n\n2) Remove the arguments to load() - everything necessary for loading has already been passed to the constructor.\n\n3) Add a convenience createAndLoad() static method.\n\n4) Adds some convenience methods for creating ConfigSolr objects.\n\n5) Removes the Initializer object entirely\n\n6) Refactors TestHarness to create its own ConfigSolr instance, rather than doing any funky subclassing and initializing.\n\nThere are a couple of test fails (both ZK tests) which I will get on with fixing. "
        },
        {
            "author": "Mark Miller",
            "id": "comment-13690412",
            "date": "2013-06-21T15:53:18+0000",
            "content": "Only did a glance review, but +1 given that. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13690484",
            "date": "2013-06-21T17:15:04+0000",
            "content": "If you can fix up the nonsense about whether or not there's a cfg in core container that's null that appears to only be true in the test shell you would have my eternal gratitude. There are a series of comments around if (cfg != null) \n{do one thing}\n else \n{ do another}\n. I really, really hate having the main-line code have conditions that are only there for testing, but never tried to take on fixing the test-harness sensitivites.\n\nHaven't reviewed quite yet, may be able to this weekend. "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13690579",
            "date": "2013-06-21T18:36:19+0000",
            "content": "The cfg is final and required to be passed in to the constructor - I should probably add something that ensures that it's not null as well, which would stop any further test bugs creeping in. "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13691242",
            "date": "2013-06-22T20:44:34+0000",
            "content": "Latest patch.  I still have two test failures in SolrCoreCheckLockOnStartupTest, which I think is due to the old TestHarness not using the normal load() logic and just creating a core on its own.\n\nThe tests create an IndexWriter on a directory, and then try to open a new SolrCore over the same instance dir.  This should fail, but it seems that the default DirectoryFactory notices that there's already an index there, and creates a new index_temp directory to hold the Core's index.  Which means no exceptions get thrown, and the test passes.  Will try and work out which DirectoryFactory was used before... "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13691246",
            "date": "2013-06-22T20:52:44+0000",
            "content": "Actually, no, ignore that last comment.  It's because the test is creating a core under test-files, rather than using the tmp datadir that it should be, so the locked index is in a completely different place to the core... "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13691252",
            "date": "2013-06-22T21:14:15+0000",
            "content": "OK, think that's it; a combination of not setting dataDir properly on the TestHarness solr.xml, and checking for thrown exceptions rather than looking at CoreContainer.getCoreInitFailures().  Will run all tests again here, but I think this is ready to commit. "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13692890",
            "date": "2013-06-25T09:38:03+0000",
            "content": "Am still getting a few test failures, mainly due to the TestHarness code assuming that we want to start up a single core before doing any tests.  Gradually working through them... "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13692985",
            "date": "2013-06-25T12:48:01+0000",
            "content": "Still two test failures:\n\nTestCoreContainer.testPersist, which wants a core's instanceDir to be persisted as an absolute directory.  However, if I do that, then all of Erick's TestSolrXmlPersistence tests fail, as they seem to expect relative ones...  Can we decide which one should be the correct behaviour?  \n\nClusterStateUpdateTest.testCoreRegistration, which is failing with Zookeeper SessionExpiredExceptions.  Still digging on this one. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13693055",
            "date": "2013-06-25T14:08:03+0000",
            "content": "Alan:\n\nfirst, I'm soooo glad you're tackling this and not me, but I'm a little jealous that your hard work will actually live on and mine will be obsolete in 5.0 <G>....\n\nWhich of the various asserts in TestCoreContainer.testPersist fail? There are several.... And are these with the latest patch? I have to go out for much of today and I happen to be on California time so I won't be able to look at this until probably after you've gone to sleep.\n\nBut here's the general rule, the instancedir that's persisted should be what was originally specified when the core was created. So if I create a core with a relative instancedir, what gets persisted should be a relative instance dir and vice-versa. I'm not actually sure how all this gets handled when creating a core from another core like happens in that test, I don't remember writing any tests to cover this in the persistence tests I wrote lately. There are tests in there to handle creating cores from the admin handler but not from a \"template\" core.... It's entirely possible that we need to change the behavior in this case.\n\nHere's what I'd say (without actually looking). The persisted core should have the same instancedir form as the template core's original definition did. But you can't really tell this from core.getInstanceDir since that might substitute sys vars and all that kind of thing. But we can just change the test based on that principle...\n\nSo if the latest patch on this JIRA shows this behavior, I'll see if I can take a whack at it later today.\n "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13693065",
            "date": "2013-06-25T14:23:19+0000",
            "content": "OK, I think this patch fixes everything.\n\nThe persistence problems were eventually due to the fact that CoreDescriptor sticks a slash on the end of instancedir, but the persistence logic pulls the information from the Config object, not the CoreDescriptor.  I've changed the tests to always expect a '/' on the end, which isn't the nicest solution, but it at least makes them pass.\n\nSOLR-4914 will do everything through the CoreDescriptor, which should hopefully make all this a lot easier.\n\nWill run tests again, but I think this is ready to commit. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13693080",
            "date": "2013-06-25T14:43:22+0000",
            "content": "Watch out! I did the exact same thing then the tests ran fine on my Mac but failed on Windows boxes. Had to use File.separator.....\n\nMy excuse was that since this is limited-time code I was willing to just hack in a slash <G>..\n\nErick "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13693217",
            "date": "2013-06-25T18:06:14+0000",
            "content": "Re-opening to fix test failures - some tests are now trying to create cores outside the test sandbox. "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13696413",
            "date": "2013-06-30T21:20:32+0000",
            "content": "Have been away for a week, now getting back round to this.\n\nTest failures were all under SolrJ, largely related to the default static initialization code that assumes we want a CoreContainer with a single core set up.  This patch should catch them all.\n\nN.B., it turns out that actually running SolrJ tests is a good way to catch these before committing.  I had managed to just run everything under solr-core... "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13697897",
            "date": "2013-07-02T15:39:01+0000",
            "content": "Final patch, fixing the remaining test issues.  Committing shortly. "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13697905",
            "date": "2013-07-02T15:50:51+0000",
            "content": "Commit 1498990 from Alan Woodward\n[ https://svn.apache.org/r1498990 ]\n\nSOLR-4948: Tidy up CoreContainer construction logic "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13697908",
            "date": "2013-07-02T16:00:44+0000",
            "content": "Will let this bake in 5.0 for a bit "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13701171",
            "date": "2013-07-05T23:10:38+0000",
            "content": "Alan: Once you backported this, can you also backport SOLR-5009 ?\n\nWith this commit you introduced the SOLR-5009 bug (creates multiple SolrResourceLoaders for the same config dir). I can help to backport, but I was unable to merge. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13701173",
            "date": "2013-07-05T23:12:57+0000",
            "content": "Alan Woodward Uwe uncovered a problem with this patch, possibly accounting for the PermGen errors we've seen lately in the tests. Plus, I have some fixes I want to get into 4.4. So my vote is to go ahead and merge this into 4.x and we'll fix anything that crops up.\n\nIf Uwe backports stuff then merging the changes for this JIRA and his changes get complicated. Maybe it's time to just bite the bullet?\n "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13701176",
            "date": "2013-07-05T23:15:11+0000",
            "content": "Commit 1500166 from Uwe Schindler\n[ https://svn.apache.org/r1500166 ]\n\nSOLR-5009: CHANGES.txt now only list SOLR-5009 as part of SOLR-4948 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13701177",
            "date": "2013-07-05T23:16:41+0000",
            "content": "One comment: When you backport to 4.x, don't forget to preserve the assumeTrue(Constants.JRE_IS_MINIMUM_JAVA_7), otherwise windows will fail again. "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13701303",
            "date": "2013-07-06T09:34:53+0000",
            "content": "Thanks Uwe, Erick.  I'll backport both of these this weekend. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13701316",
            "date": "2013-07-06T10:57:50+0000",
            "content": "BTW, in case I didn't say it, this was timely. I had to, you guessed it, create a core container that didn't make all the assumptions built into TestHarness. This will make testing core-less setups waaaay easier.\n\nThanks for tackling this! "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13701318",
            "date": "2013-07-06T11:04:27+0000",
            "content": "Thanks Alan, I will help you on any problems! I hope SOLR-5009 is obvious, why it is a bad idea to lazyly create SolrResourceLoaders. As Erick said, this might be the issue for the recent permgen issues on trunk!\n\nCurrently I am investigating all other places where Solr creates SolrResourceLoader but does not close it. The only remaining part is SolrCore.reload(), I have to figure out if the old Core is correctly closed and also closes the ResourceLoader! "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13701324",
            "date": "2013-07-06T12:00:45+0000",
            "content": "I opened SOLR-4914 to correctly close SolrResourceLoaders for SolrCore and reloaded SolrCores. Its a mess, I have no idea how to handle resource tracking! "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13701392",
            "date": "2013-07-06T19:27:48+0000",
            "content": "Commit 1500315 from Alan Woodward\n[ https://svn.apache.org/r1500315 ]\n\nSOLR-4948, SOLR-5009: Tidy up CoreContainer construction logic "
        },
        {
            "author": "Alan Woodward",
            "id": "comment-13701394",
            "date": "2013-07-06T19:29:09+0000",
            "content": "Thanks all! "
        },
        {
            "author": "ASF subversion and git services",
            "id": "comment-13701395",
            "date": "2013-07-06T19:30:37+0000",
            "content": "Commit 1500316 from Alan Woodward\n[ https://svn.apache.org/r1500316 ]\n\nMove SOLR-4948 CHANGES.txt entry to 4.4 "
        },
        {
            "author": "Uwe Schindler",
            "id": "comment-13701399",
            "date": "2013-07-06T19:56:03+0000",
            "content": "Thanks! Commit looks fine, I think Windows tests will succeed also on 4.x  "
        }
    ]
}