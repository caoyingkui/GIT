{
    "id": "SOLR-8079",
    "title": "Config API requesthandler command should support \"last-components\" and \"first-components\" keys",
    "details": {
        "components": [],
        "type": "Bug",
        "labels": "",
        "fix_versions": [],
        "affect_versions": "None",
        "status": "Open",
        "resolution": "Unresolved",
        "priority": "Major"
    },
    "description": "There is an example on the reference guide here: https://cwiki.apache.org/confluence/display/solr/Config+API\n\n\ncurl http://localhost:8983/solr/techproducts/config -H 'Content-type:application/json' -d '{\n  \"add-requesthandler\": {\n    \"name\": \"/myterms\",\n    \"class\":\"solr.SearchHandler\",\n    \"defaults\": { \"terms\":true, \"distrib\":false },\n    \"components\": [ \"terms\" ]\n  }\n}'\n\n\n\nI tried extending that and seeing if I could add a spell check component. \n\nSo this is the command I used:\n\n\ncurl http://localhost:8983/solr/gettingstarted/config -H 'Content-type:application/json' -d '{\n  \"create-requesthandler\": {\n    \"name\": \"/myspellcheck\",\n    \"class\":\"solr.SearchHandler\",\n    \"last-components\": [ \"spellcheck\" ]\n  }\n}'\n\n\n\nThis seemed to save the information correctly to the configoverlay.json file\n\n\n{\n  \"props\":{\"updateHandler\":{\"autoSoftCommit\":{\"maxTime\":3000}}},\n  \"requestHandler\":{\"/myspellcheck\":{\n      \"name\":\"/myspellcheck\",\n      \"class\":\"solr.SearchHandler\",\n      \"last-components\":[\"spellcheck\"]}}\n\n\n\nBut I don't think it got loaded as requests didn't have spellcheck responses in them.\n\nExample http://localhost:8983/solr/gettingstarted/myspellcheck?q=*&df=text\n\nResponse \n\n\n<response>\n<lst name=\"responseHeader\">\n<int name=\"status\">0</int>\n<int name=\"QTime\">8</int>\n</lst>\n<result name=\"response\" numFound=\"0\" start=\"0\" maxScore=\"0.0\"/>\n</response>\n\n\n\nSo if we are supporting {[components}} we should also support last-components and first-components as well.",
    "attachments": {},
    "issue_links": {},
    "comments": []
}