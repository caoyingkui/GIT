{
    "id": "SOLR-8395",
    "title": "query-time join (with scoring) for single value numeric fields::6.x ONLY",
    "details": {
        "components": [
            "search"
        ],
        "type": "Improvement",
        "labels": "",
        "fix_versions": [
            "6.3"
        ],
        "affect_versions": "None",
        "status": "Closed",
        "resolution": "Fixed",
        "priority": "Minor"
    },
    "description": "since LUCENE-5868 we have an opportunity to improve SOLR-6234 to make it join int and long fields. I suppose it's worth to add \"simple\" test in Solr NoScore suite. \n\n\tAlongside with that we can set multipleValues parameters giving fromField cardinality declared in schema;",
    "attachments": {
        "SOLR-8395-6x.patch": "https://issues.apache.org/jira/secure/attachment/12830102/SOLR-8395-6x.patch",
        "SOLR-8395.patch": "https://issues.apache.org/jira/secure/attachment/12777471/SOLR-8395.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2015-12-14T14:18:05+0000",
            "author": "Cao Manh Dat",
            "content": "Trivial patch for this issue. ",
            "id": "comment-15056025"
        },
        {
            "date": "2015-12-15T22:31:28+0000",
            "author": "Mikhail Khludnev",
            "content": "It's nearly shocked me. The first path with multivalue fields (\"uid_ls_dv\", \"rel_from_ls_dv\") works out of the box even without LUCENE-5868!!\nThe answer is in TrieField.createFields() for mv dv numerics Solr creates SortedSetDVs encoded as numbers and it works fine as-is. See also SOLR-7878. \nThus, the only way to break the test is to use single valued docval fields. That's what I did in the SOLR-8395.patch. Now it fails\n\njava.lang.IllegalStateException: unexpected docvalues type NUMERIC for field 'rel_to_l_dv' (expected one of [SORTED, SORTED_SET]). Use UninvertingReader or index with docvalues.\n..\n\tat org.apache.lucene.index.DocValues.checkField(DocValues.java:208)\n\tat org.apache.lucene.index.DocValues.getSortedSet(DocValues.java:306)\n\tat org.apache.lucene.search.join.DocValuesTermsCollector.lambda$1(DocValuesTermsCollector.java:59)\n\tat ..\n\tat org.apache.lucene.search.join.JoinUtil.createJoinQuery(JoinUtil.java:146)\n..\norg.apache.solr.search.join.TestScoreJoinQPNoScore.testJoinNumeric(TestScoreJoinQPNoScore.java:71)\n\n\n\nIf you are going to work on it pls make sure ints and longs are covered both. I see one more trick in TrieField.createFields(). \n ",
            "id": "comment-15058994"
        },
        {
            "date": "2015-12-18T08:47:14+0000",
            "author": "Cao Manh Dat",
            "content": "I think it ready.\nMikhail Khludnev Did i miss or misunderstand something? ",
            "id": "comment-15063701"
        },
        {
            "date": "2015-12-18T08:48:29+0000",
            "author": "Cao Manh Dat",
            "content": "Thanks for point it out to me. ",
            "id": "comment-15063705"
        },
        {
            "date": "2015-12-21T06:56:18+0000",
            "author": "Mikhail Khludnev",
            "content": "I skimmed through SOLR-8395.patch\n\n\tScoreJoinQParserPlugin.OtherCoreJoinQuery.rewrite(IndexReader)\n ignores numericType, thus pls extract the calling one of {{JoinUtil.createJoinQuery()} into a method in SameCoreJoinQuery. Or even introduce a strategy in ScoreJoinQParserPlugin dispatching between these two factory methods. \n\tif it happened, would you mind to add a test coverage into TestCrossCoreJoin? I'm asking because joining cross cores by numbers is an often demand.\n\tAlso, you added a perfect assert for matching numeric types, can you check it with negative assertions with assertQEx() ?\n\n ",
            "id": "comment-15066099"
        },
        {
            "date": "2015-12-22T15:15:23+0000",
            "author": "Cao Manh Dat",
            "content": "Mikhail Khludnev Thanks you for show me the important point. I updated class OtherCoreJoinQuery. ",
            "id": "comment-15068234"
        },
        {
            "date": "2016-09-21T21:03:15+0000",
            "author": "Mikhail Khludnev",
            "content": "Back to work. Meanwhile LUCENE-7418 nuked legacy numerics from JoinUtil. This patch pulls it back into ScoreJoinQParserPlugin, however it requires to expose some join internals on public. \nI understand that having points in Solr is better, but is there anything preventing from forgiving  such approach?  ",
            "id": "comment-15511165"
        },
        {
            "date": "2016-09-22T07:01:50+0000",
            "author": "Mikhail Khludnev",
            "content": "Vadim Ivanov, as well you experiment with patches in SOLR-4787 can you check this one too? I wonder how it can help for your case, let me know if you need it for certain version.  ",
            "id": "comment-15512408"
        },
        {
            "date": "2016-09-23T19:54:00+0000",
            "author": "Mikhail Khludnev",
            "content": "I'm going to commit SOLR-8395-6x.patch only in branch_6x. This won't go to master (7.0), it's too much to migrate unless we have a justification. Opinions?  ",
            "id": "comment-15517411"
        },
        {
            "date": "2016-09-24T15:24:07+0000",
            "author": "ASF subversion and git services",
            "content": "Commit eb10b2c2668819d1f803ee358595487a6989a640 in lucene-solr's branch refs/heads/branch_6x from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=eb10b2c ]\n\nSOLR-8395: join single value numerics.    ",
            "id": "comment-15519188"
        },
        {
            "date": "2016-09-24T20:26:42+0000",
            "author": "ASF subversion and git services",
            "content": "Commit 46301f2fa2b67e9411de19b19453928c1dc4baf8 in lucene-solr's branch refs/heads/master from Mikhail Khludnev\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=46301f2 ]\n\nSOLR-8395: add disclaimer into 7.0 migration - it won't work there.  ",
            "id": "comment-15519582"
        },
        {
            "date": "2016-11-09T08:37:24+0000",
            "author": "Shalin Shekhar Mangar",
            "content": "Closing after 6.3.0 release. ",
            "id": "comment-15650227"
        }
    ]
}