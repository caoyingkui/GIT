{
    "id": "SOLR-11531",
    "title": "ref-guide build tool assumptions missmatch with how \"section\" level anchor ids are actaully generated in PDF",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "documentation"
        ],
        "type": "Bug",
        "fix_versions": [
            "7.2",
            "master (8.0)"
        ],
        "affect_versions": "None",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "About a month ago, cassandra noticed some problems with a few links in the ref-guide PDF which confused both of us.  Working through it to try and understand what was going on \u2013 and why the existigg custom link-checking we do of the html-site version of the guide wasn't adequate for spotting these kinds of problems \u2013 I realized a few gaps in the rules our build tools are enforcing...\n\n\n\tthe link checker, sidebar builder, & jekyll templates all have various degrees of implicit/explicit assumptions that the page-shortname will match the filename for each *.adoc file\n\t\n\t\tbut nothing actaully enforces this as people edit pages & their titles\n\t\n\t\n\tthe jekyll templates use the page-shortname to create the <body id=\"???\" .../> attribute, and the link checker depends on that for validation of links \u2013 but on the PDF side of things, the normal asciidoctor rules for auto generated ids from section headings is what determines the anchor for each (page) header.\n\t\n\t\tso even though our (html based) link checker may be happy, mismatches between page titles and page-shortnames cause broken links in the PDF\n\t\n\t\n\n\n\nFurthermore: the entire page-shortname and page-permalink variables in all of our *.adoc files arn't really neccessary \u2013 they are a convention I introduced early on in the process of building our the sidebar & next/pre link generation logic, but are error prone if/when people rename files.\n\n\n\nWe Should (and I intend to)...\n\n\n\teliminate our dependency on page-shortname & page-permalink attributes from all of our templates and nav-building code and use implicitly generate values (from the filenames) instead\n\tbeef up our nav-building and link-checking code to verify that the \"page title\" for each page matches to the filename \u2013 so we can be confident the per-page header anchors in our generated PDF are consistent with teh per-page header anchors in our generated HTML\n\tremove all (no longer useful) page-shortname & page-permalink attributes from all *.adoc files",
    "attachments": {
        "SOLR-11531.patch": "https://issues.apache.org/jira/secure/attachment/12893644/SOLR-11531.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-10-24T01:06:47+0000",
            "content": "The attached patch is a starting point that takes care of #1 & #2 ... but the build currently fails because we have existing *.adoc files with titles that don't match...\n\n\n     [java] Building up tree of all known pages\n     [java] /home/hossman/lucene/dev/solr/build/solr-ref-guide/content/solrcloud-autoscaling-overview.adoc has a mismatched title: Overview of SolrCloud Autoscaling => overview-of-solrcloud-autoscaling\n     [java] /home/hossman/lucene/dev/solr/build/solr-ref-guide/content/the-extended-dismax-query-parser.adoc has a mismatched title: The Extended DisMax (eDismax) Query Parser => the-extended-dismax-edismax-query-parser\n     [java] /home/hossman/lucene/dev/solr/build/solr-ref-guide/content/solrcloud-autoscaling-auto-add-replicas.adoc has a mismatched title: SolrCloud AutoScaling Automatically Adding Replicas => solrcloud-autoscaling-automatically-adding-replicas\n     [java] /home/hossman/lucene/dev/solr/build/solr-ref-guide/content/how-to-contribute.adoc has a mismatched title: How to Contribute to Solr Documentation => how-to-contribute-to-solr-documentation\n     [java] /home/hossman/lucene/dev/solr/build/solr-ref-guide/content/solrcloud-autoscaling-api.adoc has a mismatched title: Autoscaling API => autoscaling-api\n     [java] /home/hossman/lucene/dev/solr/build/solr-ref-guide/content/index.adoc has a mismatched title: Apache Solr Reference Guide => apache-solr-reference-guide\n     [java] /home/hossman/lucene/dev/solr/build/solr-ref-guide/content/solrcloud-autoscaling-policy-preferences.adoc has a mismatched title: Autoscaling Policy and Preferences => autoscaling-policy-and-preferences\n     [java] /home/hossman/lucene/dev/solr/build/solr-ref-guide/content/cross-data-center-replication-cdcr.adoc has a mismatched title: Cross Data Center Replication (CDCR) => cross-data-center-replication-cdcr-\n\n\n\n...with the patch applied, these missmatches currently cause BuildNavAndPDFBody to fail, but even w/o the patch links to the \"top\" of these pages/sections currently fail in the PDF.\n\nA few concrete Examples that are easy to \"find\" in the PDF:\n\n\tAll links with the text \"The Extended DisMax Query Parser\" from the sections generated by query-screen.adoc, query-syntax-and-parsing.adoc, and searching.adoc\n\tlink text \"Overview of Autoscaling in SolrCloud\" from solrcloud-autoscaling.adoc\n\n\n\n\n\n...I think what would probably make sense is to go ahead and fix all of these page titles/filenames/shortnames w/o modifying any of the build code, then move forward with committing the patch (roughly) as is, then seperately remove all the  page-shortname & page-permalink attributes frm the source files.\n\nOne thing I'm not really sure about in this plan how to deal with index.adoc aka \"Apache Solr Reference Guide\" ?\n\nWe can do whatever special casing we want of this in our tools to \"allow\" it to have a missmatch between the filename and the page title \u2013 but I don't think that's a good idea unless we do it in some what that still ensures that any links back to this page from the body of other pages are actaully validated properly such that they work in the PDF as well.\n\nPerhaps we should rename it \"apache-solr-reference-guide.adoc\" and use .htaccess rules to redirect / to apache-solr-reference-guide.html (or declare it the DirectoryIndex ?) ",
            "author": "Hoss Man",
            "id": "comment-16216160"
        },
        {
            "date": "2017-10-24T17:33:55+0000",
            "content": "2 thoughts occurred to me last night...\n\n\n\twe can/should break this up into smaller sub-tasks that can be committed individually\n\tit might be possible to fix the pdf generation to use explicitly declared anchors for each \"page section\" using the page-shortname (and later just the base filename) rather then requiring that the file names match the asciidoctor auto-generated ID equivilents for the filenames\n\n\n\nI've been experimenting with #2 this morning and i think it works \u2013 i'll open a sub-task for that ASAP, and we can worry about eliminating the need for explicitly declaring page-shortname in a distinct sub-task. ",
            "author": "Hoss Man",
            "id": "comment-16217331"
        },
        {
            "date": "2017-10-29T22:20:16+0000",
            "content": "resolved with smaller changes in sub-tasks ",
            "author": "Hoss Man",
            "id": "comment-16224230"
        }
    ]
}