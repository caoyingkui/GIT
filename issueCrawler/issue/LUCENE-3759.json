{
    "id": "LUCENE-3759",
    "title": "Support joining in a distributed environment.",
    "details": {
        "labels": "",
        "priority": "Major",
        "components": [
            "modules/join"
        ],
        "type": "Improvement",
        "fix_versions": [],
        "affect_versions": "None",
        "resolution": "Unresolved",
        "status": "Open"
    },
    "description": "Add two more methods in JoinUtil to support joining in a distributed manner.\n\n\tMethod to retrieve all from values.\n\tMethod to create a TermsQuery based on a set of from terms.\n\n\n\nWith these two methods distributed joining can be supported following these steps:\n\n\tRetrieve from values from each shard\n\tMerge the retrieved from values.\n\tCreate a TermsQuery based on the merged from terms and send this query to all shards.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "date": "2012-02-08T01:41:35+0000",
            "content": "+1 Nice, distributed join will be super useful. ",
            "author": "Jason Rutherglen",
            "id": "comment-13203118"
        },
        {
            "date": "2012-06-13T17:06:22+0000",
            "content": "is there any performance concern? ",
            "author": "Alex Liu",
            "id": "comment-13294560"
        },
        {
            "date": "2013-02-08T23:31:34+0000",
            "content": "This definitely affects Solr 4.1 and would be very helpful. I might not be able to run with shards without being able to use join queries. ",
            "author": "Colin Bartolome",
            "id": "comment-13574944"
        },
        {
            "date": "2013-02-11T17:19:59+0000",
            "content": "Would implementing this as a TermsQuery open us up to TooManyClauses exceptions? ",
            "author": "Colin Bartolome",
            "id": "comment-13575909"
        },
        {
            "date": "2014-04-18T18:16:23+0000",
            "content": "Is there any progress on this? This seems like a very important feature that is missing from SOLR at this point. ",
            "author": "Jerry Russell",
            "id": "comment-13974323"
        },
        {
            "date": "2014-04-18T20:31:51+0000",
            "content": "no patches == no progress. ",
            "author": "Erick Erickson",
            "id": "comment-13974448"
        },
        {
            "date": "2015-05-16T17:20:49+0000",
            "content": "Is anyone currently working on this? I want this feature bad enough that I plan on implementing this, but don't want to duplicate work. ",
            "author": "Joe Szymanski",
            "id": "comment-14546866"
        },
        {
            "date": "2015-09-17T19:02:17+0000",
            "content": "Joe Szymanski did you start on this?\n\nEveryone else, I would love to work on this, but I'll need some high-level guidance.  It's an area I haven't worked in before. ",
            "author": "Scott Blum",
            "id": "comment-14804292"
        },
        {
            "date": "2015-09-17T19:44:54+0000",
            "content": "Stupid question?  But is this obseleted by https://issues.apache.org/jira/browse/SOLR-7584 or is this dealing with something different? ",
            "author": "Scott Blum",
            "id": "comment-14804342"
        },
        {
            "date": "2015-09-22T19:30:09+0000",
            "content": "Ping?  Anyone still care or know anything about this issue? ",
            "author": "Scott Blum",
            "id": "comment-14903290"
        },
        {
            "date": "2015-09-22T19:43:00+0000",
            "content": "I am still waiting for it - but only if it can perform reasonably well.. ",
            "author": "Jerry Russell",
            "id": "comment-14903310"
        },
        {
            "date": "2015-09-30T20:28:40+0000",
            "content": "Request for feedback / comments: https://github.com/fullstorydev/lucene-solr/commits/scottb/fulljoin\n\nBasically, it's a drop-in replacement for JoinQParserPlugin, except instead of curating the \"from\" terms from the local index, it does a collection-wide facet query to generate the term list. ",
            "author": "Scott Blum",
            "id": "comment-14938802"
        },
        {
            "date": "2015-12-10T07:37:48+0000",
            "content": "Hi guys,\nIs this issue being addressed in a future release etc. ?\nIn order that Solr/Lucene be able to horizontally shard and yet give a unified view to queries that need to access joined data, I think this will be a BIG hit !\nI saw a similar thing in the Mongo system where a 'queryrouter' did the same job of sending parallel query requests to multiple servers with individual shards and returned a consistent result. Though the two tools are entirely different, if the data/facets distribution and shard keying is known, this does not seem unsurmountable in Lucene. \nWould be really interested and eager to provide a use case in an actual production scenario where the lack of this feature is causing some grief ! and increasing the query coding to compensate for it.  ",
            "author": "Ashish Datta",
            "id": "comment-15050253"
        },
        {
            "date": "2015-12-10T15:19:19+0000",
            "content": "Scott is asking a pertinent question I think. I really do wonder how much of the use-case here will be satisfied by both the Streaming Aggregations (5.x) and ParallelSQL (6.0).\n\nI'd really like to have the use-case laid out and show that at least most of the use-cases are served by distributed joins and not the ParallelSQL capabilities before putting too much effort here. ",
            "author": "Erick Erickson",
            "id": "comment-15051112"
        },
        {
            "date": "2015-12-10T16:31:02+0000",
            "content": "Hello Erick,\nI would be glad to present a case for this if it helps. Let me know if it helps. If it does not sound like a useful use-case, perhaps I could use some other tool.\nHere's a quick overview of the use-case: \nThe requirement I have is in analytics. Search results need to be exact and we're basically 'counting' things precisely, not approximating. The no. of facets is not large but their combinations are large in number(hence the strong case for Solr).\nThe number of distinct data containers(collections) is small but their sizes are large and denormalizing or keeping data in single servers are not feasible options.\nTherefore joins are becoming inevitable as data grows and starts to need many servers to store it due to size constraints and computing efficiency.\nRight now, the only option I have is to use a glue language to collect the 'from' terms from the many 'shards' across servers, send queries with these terms to the 'to' collection shards on several servers again, apply rules to aggregate them centrally, manage timeouts and other artificial issues created by this data division and sent the aggregated data for visualisations or other processing.\nAs you can see, the charm and pull of Lucene's speed is getting dampened by the unnecessary data complexity and dependence on programming in a glue language , recording the number and types of shards on each server and making queries to the right targets. Redundancy/failover is another pain to handle besides managing increasing servers. \n\nEverything I have written is already possible and avaliable in Solr except that it's not on a distributed manner ?\n\nSolr is a beautiful tool that can easily do everything I need if my data were not needed to be distributed across machine as in my case ! \nIf I denormalize this kind of data, I might end up making it 3-4x it's size, which obviously I dont want to do.\nIf Solr managed to take away this pain, it would be the ideal scalable solution for all search applications and analytic applications which have multiple large, data sets with limits to denormalization.\nIn my case, I know the data very well and have a good grip on the combinations of facets needed to configure a distributed system if it just allowed joins with true sharding.\n\nI really think that adding this will bring in lots of distributed computing use-cases into the ambit of Solr. There's no telling the amount of efforts it will save for people like me,  and not have everybody devising the own distributed computing management  scheme when a common one could solve it for all. \n\nLet me know if this sounds like a reasonable use-case. Besides my own use-case, I'm sure there would be a lot of people who probably dont use solr due to this missing feature.\n\n\nPS : Sorry for getting carried away and the long mail ;-( ",
            "author": "Ashish Datta",
            "id": "comment-15051192"
        },
        {
            "date": "2018-08-07T05:57:22+0000",
            "content": "Hello Ashish Dutta,\n\nPlease look into my issue which i am facing on solr4 while making join query across sharded collection on same node.\n\nSolr4 on cloud joining across two sharded core i.e engineeringlogs_shard1_replica1 on machine 1 and micrologs_shard1_replica1 on machine 1\n\nmachine1 - engineeringlogs_shard1_replica1 (A), micrologs_shard1_replica1(B) machine 2- engineeringlogs_shard2_replica1(A1) , micrologs_shard2_replica1(B1)\n\nquery time join on engineeringlogs_shard1_replica1 (A):\n\nfq: \"{!join from=Log_type to=Log_type fromIndex=micrologs_shard1_replica1}SerialNumber:\\\"000123456789\\\"\"\n\nwant to perform join across A and A1 on same machine 1,but it is not working fine. error is:\n\n\"error\": { \"metadata\": [ \"error-class\", \"org.apache.solr.common.SolrException\", \"root-error-class\", \"org.apache.solr.common.SolrException\" ], \"msg\": \"Cross-core join: no such core micrologs_shard1_replica1\", \"code\": 400 }\n\nPlease guide me how should i proceed so that this join query will work fine for sharded collection for solr4 cloud. ",
            "author": "jyoti Tiwari",
            "id": "comment-16571146"
        },
        {
            "date": "2018-08-07T05:59:58+0000",
            "content": "Hello Ashish Dutta,\n\nPlease look into my issue which i am facing on solr4 while making join query across sharded collection on same node.\n\nSolr4 on cloud joining across two sharded core i.e engineeringlogs_shard1_replica1 on machine 1 and micrologs_shard1_replica1 on machine 1\n\nmachine1 - engineeringlogs_shard1_replica1 (A), micrologs_shard1_replica1(B) machine 2- engineeringlogs_shard2_replica1(A1) , micrologs_shard2_replica1(B1)\n\nquery time join on engineeringlogs_shard1_replica1 (A):\n\nfq: \"\n{!join from=Log_type to=Log_type fromIndex=micrologs_shard1_replica1}\nSerialNumber:\\\"000123456789\\\"\"\n\nwant to perform join across A and A1 on same machine 1,but it is not working fine. error is:\n\n\"error\": \n{ \"metadata\": [ \"error-class\", \"org.apache.solr.common.SolrException\", \"root-error-class\", \"org.apache.solr.common.SolrException\" ], \"msg\": \"Cross-core join: no such core micrologs_shard1_replica1\", \"code\": 400 }\n\nPlease guide me how should i proceed so that this join query will work fine for sharded collection for solr4 cloud. ",
            "author": "jyoti Tiwari",
            "id": "comment-16571148"
        },
        {
            "date": "2018-08-07T14:31:22+0000",
            "content": "Jhoti:\n\nThis is not an appropriate use of Solr's JIRA, the issue tracker is not a support portal. We try to reserve the JIRA system for code issues rather than usage questions.\n\nPlease ask the question here: solr-user@lucene.apache.org, see: http://lucene.apache.org/solr/community.html#mailing-lists-irc\n\nIt's extremely unlikely that any code changes will be considered for Solr 4, so the user's list is your best option. ",
            "author": "Erick Erickson",
            "id": "comment-16571752"
        },
        {
            "date": "2018-08-07T14:59:00+0000",
            "content": "I removed jyoti Tiwari as a watcher (along with \"boxbe-notifications at boxbe.com\") because their email system was auto-posting here.  I also deleted the posts.  Hopefully this will stop the cascading email posts. ",
            "author": "Steve Rowe",
            "id": "comment-16571796"
        },
        {
            "date": "2018-08-07T15:08:00+0000",
            "content": "Hello Steve Rowe (JIRA),\n\nYour message about \"[jira] Steve Rowe mentioned you on LUCENE-3759 (JIRA) (JIRA)\" \nhas been waitlisted.  \n\nPlease add yourself to my Boxbe Guest List so your messages will \ngo to my Inbox. \n\nClick the link below to be added:\nhttps://www.boxbe.com/crs?tc_serial=41904072875&tc_rand=1482900733&utm_source=stf&utm_medium=email&utm_campaign=CN_STDW&utm_content=002\n\n\n  Thank you,\n  jyotitiwari609@gmail.com\n\n\nPowered by Boxbe \u2013 \"End Email Overload\"\nVisit http://www.boxbe.com/how-it-works?tc_serial=41904072875&tc_rand=1482900733&utm_source=stf&utm_medium=email&utm_campaign=CN_STDW&utm_content=002\n\nBoxbe, Inc. | 65 Broadway, Suite 601 | New York, NY 10006\nPrivacy Policy: http://www.boxbe.com/privacy | Unsubscribe: http://www.boxbe.com/unsubscribe ",
            "author": "boxbe-notifications@boxbe.com",
            "id": "comment-16571813"
        }
    ]
}