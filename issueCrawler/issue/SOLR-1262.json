{
    "id": "SOLR-1262",
    "title": "DIH needs support for callable statements",
    "details": {
        "affect_versions": "1.3",
        "status": "Reopened",
        "fix_versions": [],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Improvement",
        "priority": "Minor",
        "labels": "",
        "resolution": "Unresolved"
    },
    "description": "During an indexing run we noticed that we were spending a lot of time creating and tearing down queries in mysql\n\nThe queries we are using are complex and involve joins spanning across multiple tables.\n\nWe should support prepared statements in the data import handler via the data-config.xml file - for those databases that support prepared statements.\n\nWe could add a new attribute to the entity entity in dataConfig - say - pquery or preparedQuery and then pass the prepared statement and have values filled in by the actual queries for each row using a placeholder - like a ? or something else.\n\nI would probably start by hacking class JdbcDataSource to try a test but was wondering if anyone had experienced this or had any suggestions or if there is something in the works that I missed - I couldn't find any other bugs mentioning using prepared statements for performance.",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Noble Paul",
            "id": "comment-12732846",
            "date": "2009-07-18T05:47:13+0000",
            "content": "do you mean prepared statement or callablestatement (stored procedures)? . I guess there is not much difference between the semantics of prepared statements and sql statements "
        },
        {
            "author": "Abdul Chaudhry",
            "id": "comment-12733138",
            "date": "2009-07-20T06:25:26+0000",
            "content": "I could try to use stored procedures instead of trying to get prepared stements to work in the DIH - however that would mean most of the logic would need to live in SQL and I hate SQL.   "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12733141",
            "date": "2009-07-20T06:38:07+0000",
            "content": "however that would mean most of the logic would need to live in SQL and I hate SQL.\n\nprepared statement is  essentially  an SQL statement with placeholders . I do not see any value add by supporting PreparedStatements\n\nBut stored procedure support is something we can look into "
        },
        {
            "author": "Abdul Chaudhry",
            "id": "comment-12733144",
            "date": "2009-07-20T06:57:44+0000",
            "content": "That's fine. Support for stored procedures would be great. I am not sure what code changes would be involved in the DIH - I guess you would need a CDATA section in the XML data-config file - we are currently using MYSQL 5.0.something "
        },
        {
            "author": "Noble Paul",
            "id": "comment-12733148",
            "date": "2009-07-20T07:12:18+0000",
            "content": "The syntax of a callable statement is distinct from that of a select . So we can just use that aspect to figure out if it is a callable statement\n\nwe can support callable statements with a few restrictions\n\n\n\tOnly IN args support\n\tno return types\n\tprobably no multiple resultsets too\n\n\n\n\n\nquery=\"{call getResult( ${x.somevar1} ,${y.somevar2})}\"\n\n\n\nBefore invoking the callable statements the placeholder locations will be replaced with '?'\n\nas\n\n{call getResult( ?,?)}\n\n\n\nand setxxx() can be called with the values of ${x.somevar1} and ${y.somevar2}\n\n "
        },
        {
            "author": "Hoss Man",
            "id": "comment-12872586",
            "date": "2010-05-27T22:08:19+0000",
            "content": "Bulk updating 240 Solr issues to set the Fix Version to \"next\" per the process outlined in this email...\n\nhttp://mail-archives.apache.org/mod_mbox/lucene-dev/201005.mbox/%3Calpine.DEB.1.10.1005251052040.24672@radix.cryptio.net%3E\n\nSelection criteria was \"Unresolved\" with a Fix Version of 1.5, 1.6, 3.1, or 4.0.  email notifications were suppressed.\n\nA unique token for finding these 240 issues in the future: hossversioncleanup20100527 "
        },
        {
            "author": "Chris Book",
            "id": "comment-12885407",
            "date": "2010-07-06T03:49:47+0000",
            "content": "I think the original comment about prepared statements is more valid.  For a one-to-many, dataimporthandler is generating the same query many times with just a different key param.  A prepared statement allows the db server (ie mysql) to keep the query alive and just return different results per key each time.  You save on the overhead of the db parsing the query and other setup.\n\nI agree that callable statements move the logic into sql which is not ideal.  Using prepared statements by default should require no change to the xml schema. "
        },
        {
            "author": "Joachim Martin",
            "id": "comment-13024930",
            "date": "2011-04-25T19:53:49+0000",
            "content": "I have been told by my Oracle DBA that DIH's use of Statement vs Prepared Statement is causing serious problems on the database side.  There is a performance gain by not having to re-parse a prepared statement, but more importantly, each Statement that needs to be re-parsed takes up space in the cache.  If you have repeating related entities (e.g. Author->Books[]), each related query is a unique statement.\n\nMany developers, myself included, would never consider writing a database app without Prepared Statements for performance reasons.  I think it's even more important in a batch update situation where you are running N additional related entity queries.\n\nI like the syntax of MyBatis' mapped statements: \n\nselect field1, field2 from related_table where entity_id = #\n{id, jdbcType=NUMERIC}\n "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13043734",
            "date": "2011-06-03T16:46:48+0000",
            "content": "Bulk move 3.2 -> 3.3 "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13106281",
            "date": "2011-09-16T14:50:22+0000",
            "content": "3.4 -> 3.5 "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13412165",
            "date": "2012-07-11T22:26:13+0000",
            "content": "bulk fixing the version info for 4.0-ALPHA and 4.0 all affected issues have \"hoss20120711-bulk-40-change\" in comment "
        },
        {
            "author": "Robert Muir",
            "id": "comment-13429748",
            "date": "2012-08-07T03:42:41+0000",
            "content": "rmuir20120906-bulk-40-change "
        },
        {
            "author": "Hoss Man",
            "id": "comment-13445559",
            "date": "2012-08-31T01:29:14+0000",
            "content": "There is no indication that anyone is actively working on this issue, and it has no current patch, so removing 4.0 from the fixVersion. "
        },
        {
            "author": "Erick Erickson",
            "id": "comment-13835717",
            "date": "2013-11-30T13:24:59+0000",
            "content": "2013 Old JIRA cleanup "
        }
    ]
}