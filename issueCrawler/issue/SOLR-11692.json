{
    "id": "SOLR-11692",
    "title": "SolrDispatchFilter.closeShield passes the shielded response object back to jetty making the stream unclose able",
    "details": {
        "labels": "",
        "priority": "Minor",
        "components": [
            "Response Writers"
        ],
        "type": "Bug",
        "fix_versions": [
            "7.3"
        ],
        "affect_versions": "7.1",
        "resolution": "Fixed",
        "status": "Closed"
    },
    "description": "In test mode we trigger closeShield code in SolrDispatchFilter, however there are code paths where we passthrough the objects to the DefaultHandler which can no longer close the response.\n\nExample stack trace:\njava.lang.AssertionError: Attempted close of response output stream.\n    at org.apache.solr.servlet.SolrDispatchFilter$2$1.close(SolrDispatchFilter.java:528)\n    at org.eclipse.jetty.server.Dispatcher.commitResponse(Dispatcher.java:315)\n    at org.eclipse.jetty.server.Dispatcher.forward(Dispatcher.java:279)\n    at org.eclipse.jetty.server.Dispatcher.forward(Dispatcher.java:103)\n    at org.eclipse.jetty.servlet.DefaultServlet.doGet(DefaultServlet.java:566)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:734)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:847)\n    at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:684)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)\n    at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:385)\n    at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:326)\n    at searchserver.filter.SfdcDispatchFilter.doFilter(SfdcDispatchFilter.java:204)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)\n    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\n    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)\n    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\n    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)\n    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)\n    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\n    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\n    at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)\n    at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)\n    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\n    at org.eclipse.jetty.server.Server.handle(Server.java:370)\n    at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)\n    at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:949)\n    at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1011)\n    at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:644)\n    at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)\n    at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)\n    at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:668)\n    at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)\n    at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\n    at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\n    at java.lang.Thread.run(Thread.java:745)\n\nRelated JIRA: SOLR-8933",
    "attachments": {
        "SOLR-11692.patch": "https://issues.apache.org/jira/secure/attachment/12900248/SOLR-11692.patch"
    },
    "issue_links": {},
    "comments": [
        {
            "date": "2017-11-28T21:19:49+0000",
            "content": "Note this is test mode only code,  doesn't affect solr with asserts turned off.  David Smiley suggested a fix where we keep the original response object to pass back up to jetty when solr code is done with it,  I will send out a attempted patch later ",
            "author": "Jeff Miller",
            "id": "comment-16269476"
        },
        {
            "date": "2017-11-30T23:24:25+0000",
            "content": "Mark Miller Can you comment on this patch? The idea being we wrap the closeshield for the request/response only in the context of SolrDispatchFilter and if we have to pass it up to chain or forward it we pass the original \n\n<Removed Pasted Code> ",
            "author": "Jeff Miller",
            "id": "comment-16273647"
        },
        {
            "date": "2017-12-01T02:59:49+0000",
            "content": "Jeff Miller can you attach a patch to the issue instead?  inlining diffs is problematic due to escaping.  Also, unlike some diffs which need no context, for this one it's necessary to apply it to notice that your intent was to move the closing until after code that calls chain.doFilter.  I looked at SolrDispatchFilter and do note chain.doFilter is actually in two places (not one); the second is beyond where you moved it to.  So I think your patch here only addresses the issue for some cases but not others.  Any way, the fix should be easy. ",
            "author": "David Smiley",
            "id": "comment-16273860"
        },
        {
            "date": "2017-12-01T16:47:29+0000",
            "content": "Thanks David Smiley, here is a patch ",
            "author": "Jeff Miller",
            "id": "comment-16274610"
        },
        {
            "date": "2017-12-01T21:33:13+0000",
            "content": "+1 I like it Jeff.\n\nThe only change I suggest making is a little bit of maintenance here regarding the annoying casting of ServletRequest to HttpServletRequest in several places in this method.  You've added another spot.  Notice the first line of this method ensures we have the HTTP version.  Perhaps we can rename the parameter slightly and then cast to the current name in a local variable... then change various methods here to expect/return HttpServletRequest.  What do you think?   ",
            "author": "David Smiley",
            "id": "comment-16275021"
        },
        {
            "date": "2017-12-01T23:17:39+0000",
            "content": "David Smiley sent PR https://github.com/apache/lucene-solr/pull/281 ",
            "author": "Jeff Miller",
            "id": "comment-16275163"
        },
        {
            "date": "2017-12-02T17:38:27+0000",
            "content": "Ok; when creating PRs, be sure to reference the JIRA issue ID so that it gets linked automatically.  Maybe PRs can be renamed?  If not; no big deal.\n\nBTW thanks for entertaining my request to do this little bit of cleanup.  IMO cleanup needs to be amortized into all we do; doing cleanup just for cleanup sake (its own issue) is hard to get the time for. ",
            "author": "David Smiley",
            "id": "comment-16275670"
        },
        {
            "date": "2017-12-02T19:19:13+0000",
            "content": "Code looks good \u2013 I'm running test now and will commit after.  Thanks for contributing Jeff!\n\nProposed CHANGES.txt\n\nOther Changes:\n* SOLR-11692: (tests only) When SolrDispatchFilter passes on requests in the Servlet filter chain, \n  it should not use its closeShield'ed streams.  (Jeff Miller, David Smiley)\n\n ",
            "author": "David Smiley",
            "id": "comment-16275719"
        },
        {
            "date": "2017-12-03T04:29:36+0000",
            "content": "4 tests fail, and I tried at at least some of them with and without the patch to verify they reproduced with the patch but not without the patch:\n\n   [junit4] Tests with failures [seed: 37DAB2BA08A37C95]:\n   [junit4]   - org.apache.solr.security.BasicAuthStandaloneTest.testBasicAuth\n   [junit4]   - org.apache.solr.cloud.TestConfigSetsAPI.testUploadWithScriptUpdateProcessor\n   [junit4]   - org.apache.solr.security.BasicAuthIntegrationTest.testBasicAuth\n   [junit4]   - org.apache.solr.security.PKIAuthenticationIntegrationTest.testPkiAuth\n\n ",
            "author": "David Smiley",
            "id": "comment-16275817"
        },
        {
            "date": "2018-01-08T21:12:30+0000",
            "content": "Aha; I see the problem.  Took a bit of debugging to find this nasty bug.  Notice on line ~353 that the request var is replaced with wrappedRequest.get() if there's something there.  In your patch you retained both \"request\" and \"httpServletRequest\" as valid variables... which is conducive to causing this bug.  In this new version of the patch, I renamed the formal parameter names to have a leading underscore and then first thing I immediately assign them to the Http variant with the same name without the leading underscore.\n\nTests are running now; if it checks out I'll commit shortly.  Thanks for the contribution Jeff! ",
            "author": "David Smiley",
            "id": "comment-16317069"
        },
        {
            "date": "2018-01-09T03:39:47+0000",
            "content": "Commit 7a375fda828015ab62702e2e0f07a1038aef40c6 in lucene-solr's branch refs/heads/master from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=7a375fd ]\n\nSOLR-11692: Constrain cases where SolrDispatchFilter uses closeShield ",
            "author": "ASF subversion and git services",
            "id": "comment-16317633"
        },
        {
            "date": "2018-01-09T03:40:32+0000",
            "content": "Commit 9e3c16cf2ef0d2b9d562d8df75b4688d6ce0131a in lucene-solr's branch refs/heads/branch_7x from David Smiley\n[ https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git;h=9e3c16c ]\n\nSOLR-11692: Constrain cases where SolrDispatchFilter uses closeShield\n\n(cherry picked from commit 7a375fd) ",
            "author": "ASF subversion and git services",
            "id": "comment-16317634"
        },
        {
            "date": "2018-01-23T04:31:01+0000",
            "content": "Github user tflobbe commented on the issue:\n\n    https://github.com/apache/lucene-solr/pull/281\n\n    This PR was already merged (SOLR-11692) but wasn't mentioned in the commit message. Could you close @millerjeff0 ? ",
            "author": "ASF GitHub Bot",
            "id": "comment-16335373"
        },
        {
            "date": "2018-04-30T04:02:31+0000",
            "content": "Sorry, I missed this. The jetty servlet actually should not be closing in forward like that, we need to reuse our connections and only the container itself should close them. I've addressed this properly and expanded shielding to cover even more than it was in SOLR-12290. ",
            "author": "Mark Miller",
            "id": "comment-16458296"
        }
    ]
}