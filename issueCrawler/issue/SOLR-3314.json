{
    "id": "SOLR-3314",
    "title": "DIH with multi-threading throws exception",
    "details": {
        "affect_versions": "3.6",
        "status": "Closed",
        "fix_versions": [
            "3.6"
        ],
        "components": [
            "contrib - DataImportHandler"
        ],
        "type": "Bug",
        "priority": "Major",
        "labels": "",
        "resolution": "Duplicate"
    },
    "description": "While loading with DIH in multi-threading mode there are sometimes exceptions.\n\n\nApr 4, 2012 10:19:10 AM org.apache.solr.common.SolrException log\nSEVERE: Full Import failed:java.lang.ClassCastException: java.util.ArrayList cannot be cast to java.lang.String\n\tat org.apache.solr.common.util.NamedList.getName(NamedList.java:131)\n\tat org.apache.solr.common.util.NamedList.toString(NamedList.java:258)\n\tat java.lang.String.valueOf(String.java:2826)\n\tat java.lang.StringBuilder.append(StringBuilder.java:115)\n\tat org.apache.solr.update.processor.LogUpdateProcessor.finish(LogUpdateProcessorFactory.java:188)\n\tat org.apache.solr.update.processor.UpdateRequestProcessor.finish(UpdateRequestProcessor.java:78)\n\tat org.apache.solr.handler.dataimport.SolrWriter.close(SolrWriter.java:53)\n\tat org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:268)\n\tat org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:375)\n\tat org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:445)\n\tat org.apache.solr.handler.dataimport.DataImporter$3.run(DataImporter.java:426)\n\nApr 4, 2012 10:19:10 AM org.apache.solr.update.DirectUpdateHandler2 rollback\nINFO: start rollback\nApr 4, 2012 10:19:10 AM org.apache.solr.update.DirectUpdateHandler2 rollback\nINFO: end_rollback\n\n\n\nAnalysis:\nAfter loading the LogUpdateProcessor produces the logs by writing the content of \"toLog\" and the elapsed time.\n\n    log.info( \"\" + toLog + \" 0 \" + (elapsed) );\n\n\n\"toLog\" is a NamedList of org.apache.solr.common.util.NamedList which will be prepared for printing with methods \"toString\", \"getName\" and \"getVal\". The NamedList consists of name/value pairs, where the name must always be a String. As the exceptions points out it somehow happens that the name can be an ArrayList.\n\nTo trace this further down I modified org.apache.solr.common.util.NamedList the method \"getName\" as following:\n\n  public String getName(int idx) {\n    if (nvPairs.get(idx << 1).getClass().getName().equals(\"java.util.ArrayList\")) {\n      System.out.println( \"<Object>>\" + nvPairs.get(idx << 1).toString() + \"<\" );\n    }\n    return (String)nvPairs.get(idx << 1);\n  }\n\n\n\nAfter several tries I could procude an exception and the output was:\n\n<Object>>[testdir2_testfile2_record2, testdir2_testfile2_record3, testdir2_testfile2_record2, testdir2_testfile2_record1, testdir2_testfile2_record3, testdir2_testfile2_record1, testdir2_testfile2_record1, testdir2_testfile2_record2, ... (24 adds)]<\n\n\n\nWhat we see here is:\n\n\twe have 2 files in 2 directories each of 3 records but it reports \"24 adds\", while the index afterwards only has the 6 records (self-healing by uniq IDs in the index)\n\tthe record IDs are multiple times in the ArrayList\n\n\n\nAs a matter of fact something is not thread-safe. The \"LogUpdateProcessorFactory\"???\n\nI have no idea how to provide a unit test for this one as it is only in DIH multi-theading mode and only sometimes.\nNevertheless it would be bad to have a rollback after loading some million records",
    "attachments": {},
    "issue_links": {},
    "comments": [
        {
            "author": "Bernd Fehling",
            "id": "comment-13246132",
            "date": "2012-04-04T09:21:22+0000",
            "content": "\nA very dirty workaround for me so far, I have placed the log.info from LogUpdateProcessor.finish() within try/catch and ignore errors, which prevents rollbacks.\n "
        },
        {
            "author": "Mikhail Khludnev",
            "id": "comment-13246220",
            "date": "2012-04-04T12:42:35+0000",
            "content": "it's a dupe of SOLR-2804. That patch can be revamped and applied now (after SOLR-3011 is committed into 3.x). The bug itself is really trivial concurrency issue. I see no much purpose in revamping the patch and propose it for commit it because \"threads\" are wiped from trunk (4.0), James decided to suggest a workaround for users who suffer from it https://issues.apache.org/jira/browse/SOLR-2804?focusedCommentId=13240618&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13240618 "
        },
        {
            "author": "Bernd Fehling",
            "id": "comment-13246224",
            "date": "2012-04-04T13:06:14+0000",
            "content": "Ah, thanks for pointing this out.\nYes, please apply SOLR-2804 patch.\n "
        }
    ]
}